
MiWionLoRa_SAMR34.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0001e59c  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0001e59c  0001e59c  0002e59c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009e8  20000000  0001e5a4  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .lpram        00000000  30000000  30000000  000309e8  2**0
                  CONTENTS
  4 .bss          00001280  200009e8  0001ef90  000309e8  2**3
                  ALLOC
  5 .stack        00002000  20001c68  00020210  000309e8  2**0
                  ALLOC
  6 .ARM.attributes 00000028  00000000  00000000  000309e8  2**0
                  CONTENTS, READONLY
  7 .comment      0000008c  00000000  00000000  00030a10  2**0
                  CONTENTS, READONLY
  8 .debug_info   0008a34a  00000000  00000000  00030a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000942c  00000000  00000000  000bade6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00008e08  00000000  00000000  000c4212  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00001980  00000000  00000000  000cd01a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000017d0  00000000  00000000  000ce99a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0002c3ac  00000000  00000000  000d016a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0002a46e  00000000  00000000  000fc516  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000ac6d8  00000000  00000000  00126984  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00006c34  00000000  00000000  001d305c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	68 3c 00 20 0d 63 00 00 a1 63 00 00 a1 63 00 00     h<. .c...c...c..
	...
      2c:	a1 63 00 00 00 00 00 00 00 00 00 00 a1 63 00 00     .c...........c..
      3c:	a1 63 00 00 a1 63 00 00 a1 63 00 00 91 1a 00 00     .c...c...c......
      4c:	81 09 00 00 a1 63 00 00 a1 63 00 00 a1 63 00 00     .....c...c...c..
      5c:	a1 63 00 00 19 32 00 00 31 32 00 00 49 32 00 00     .c...2..12..I2..
      6c:	61 32 00 00 79 32 00 00 91 32 00 00 a1 63 00 00     a2..y2...2...c..
      7c:	a1 63 00 00 a1 63 00 00 79 5a 00 00 8d 5a 00 00     .c...c..yZ...Z..
      8c:	a1 5a 00 00 b5 5a 00 00 c9 5a 00 00 e9 05 00 00     .Z...Z...Z......
      9c:	a1 63 00 00 a1 63 00 00 a1 63 00 00 a1 63 00 00     .c...c...c...c..
      ac:	a1 63 00 00 00 00 00 00                             .c......

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	200009e8 	.word	0x200009e8
      d4:	00000000 	.word	0x00000000
      d8:	0001e5a4 	.word	0x0001e5a4

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	200009ec 	.word	0x200009ec
     108:	0001e5a4 	.word	0x0001e5a4
     10c:	0001e5a4 	.word	0x0001e5a4
     110:	00000000 	.word	0x00000000

00000114 <delay_cycles>:
     114:	b580      	push	{r7, lr}
     116:	b082      	sub	sp, #8
     118:	af00      	add	r7, sp, #0
     11a:	6078      	str	r0, [r7, #4]
     11c:	687b      	ldr	r3, [r7, #4]
     11e:	2b00      	cmp	r3, #0
     120:	d00c      	beq.n	13c <delay_cycles+0x28>
     122:	4b08      	ldr	r3, [pc, #32]	; (144 <delay_cycles+0x30>)
     124:	687a      	ldr	r2, [r7, #4]
     126:	605a      	str	r2, [r3, #4]
     128:	4b06      	ldr	r3, [pc, #24]	; (144 <delay_cycles+0x30>)
     12a:	2200      	movs	r2, #0
     12c:	609a      	str	r2, [r3, #8]
     12e:	46c0      	nop			; (mov r8, r8)
     130:	4b04      	ldr	r3, [pc, #16]	; (144 <delay_cycles+0x30>)
     132:	681a      	ldr	r2, [r3, #0]
     134:	2380      	movs	r3, #128	; 0x80
     136:	025b      	lsls	r3, r3, #9
     138:	4013      	ands	r3, r2
     13a:	d0f9      	beq.n	130 <delay_cycles+0x1c>
     13c:	46c0      	nop			; (mov r8, r8)
     13e:	46bd      	mov	sp, r7
     140:	b002      	add	sp, #8
     142:	bd80      	pop	{r7, pc}
     144:	e000e010 	.word	0xe000e010

00000148 <delay_init>:
     148:	b580      	push	{r7, lr}
     14a:	af00      	add	r7, sp, #0
     14c:	2000      	movs	r0, #0
     14e:	4b0f      	ldr	r3, [pc, #60]	; (18c <delay_init+0x44>)
     150:	4798      	blx	r3
     152:	0002      	movs	r2, r0
     154:	4b0e      	ldr	r3, [pc, #56]	; (190 <delay_init+0x48>)
     156:	601a      	str	r2, [r3, #0]
     158:	4b0d      	ldr	r3, [pc, #52]	; (190 <delay_init+0x48>)
     15a:	6818      	ldr	r0, [r3, #0]
     15c:	4b0d      	ldr	r3, [pc, #52]	; (194 <delay_init+0x4c>)
     15e:	22fa      	movs	r2, #250	; 0xfa
     160:	0091      	lsls	r1, r2, #2
     162:	4798      	blx	r3
     164:	0003      	movs	r3, r0
     166:	001a      	movs	r2, r3
     168:	4b09      	ldr	r3, [pc, #36]	; (190 <delay_init+0x48>)
     16a:	601a      	str	r2, [r3, #0]
     16c:	4b08      	ldr	r3, [pc, #32]	; (190 <delay_init+0x48>)
     16e:	6818      	ldr	r0, [r3, #0]
     170:	4b08      	ldr	r3, [pc, #32]	; (194 <delay_init+0x4c>)
     172:	22fa      	movs	r2, #250	; 0xfa
     174:	0091      	lsls	r1, r2, #2
     176:	4798      	blx	r3
     178:	0003      	movs	r3, r0
     17a:	001a      	movs	r2, r3
     17c:	4b06      	ldr	r3, [pc, #24]	; (198 <delay_init+0x50>)
     17e:	601a      	str	r2, [r3, #0]
     180:	4b06      	ldr	r3, [pc, #24]	; (19c <delay_init+0x54>)
     182:	2205      	movs	r2, #5
     184:	601a      	str	r2, [r3, #0]
     186:	46c0      	nop			; (mov r8, r8)
     188:	46bd      	mov	sp, r7
     18a:	bd80      	pop	{r7, pc}
     18c:	00005609 	.word	0x00005609
     190:	20000000 	.word	0x20000000
     194:	0001498d 	.word	0x0001498d
     198:	20000004 	.word	0x20000004
     19c:	e000e010 	.word	0xe000e010

000001a0 <delay_cycles_ms>:
     1a0:	b580      	push	{r7, lr}
     1a2:	b082      	sub	sp, #8
     1a4:	af00      	add	r7, sp, #0
     1a6:	6078      	str	r0, [r7, #4]
     1a8:	e004      	b.n	1b4 <delay_cycles_ms+0x14>
     1aa:	4b07      	ldr	r3, [pc, #28]	; (1c8 <delay_cycles_ms+0x28>)
     1ac:	681b      	ldr	r3, [r3, #0]
     1ae:	0018      	movs	r0, r3
     1b0:	4b06      	ldr	r3, [pc, #24]	; (1cc <delay_cycles_ms+0x2c>)
     1b2:	4798      	blx	r3
     1b4:	687b      	ldr	r3, [r7, #4]
     1b6:	1e5a      	subs	r2, r3, #1
     1b8:	607a      	str	r2, [r7, #4]
     1ba:	2b00      	cmp	r3, #0
     1bc:	d1f5      	bne.n	1aa <delay_cycles_ms+0xa>
     1be:	46c0      	nop			; (mov r8, r8)
     1c0:	46bd      	mov	sp, r7
     1c2:	b002      	add	sp, #8
     1c4:	bd80      	pop	{r7, pc}
     1c6:	46c0      	nop			; (mov r8, r8)
     1c8:	20000000 	.word	0x20000000
     1cc:	00000115 	.word	0x00000115

000001d0 <cpu_irq_enter_critical>:
     1d0:	b580      	push	{r7, lr}
     1d2:	b082      	sub	sp, #8
     1d4:	af00      	add	r7, sp, #0
     1d6:	4b10      	ldr	r3, [pc, #64]	; (218 <cpu_irq_enter_critical+0x48>)
     1d8:	681b      	ldr	r3, [r3, #0]
     1da:	2b00      	cmp	r3, #0
     1dc:	d112      	bne.n	204 <cpu_irq_enter_critical+0x34>
     1de:	f3ef 8310 	mrs	r3, PRIMASK
     1e2:	607b      	str	r3, [r7, #4]
     1e4:	687b      	ldr	r3, [r7, #4]
     1e6:	2b00      	cmp	r3, #0
     1e8:	d109      	bne.n	1fe <cpu_irq_enter_critical+0x2e>
     1ea:	b672      	cpsid	i
     1ec:	f3bf 8f5f 	dmb	sy
     1f0:	4b0a      	ldr	r3, [pc, #40]	; (21c <cpu_irq_enter_critical+0x4c>)
     1f2:	2200      	movs	r2, #0
     1f4:	701a      	strb	r2, [r3, #0]
     1f6:	4b0a      	ldr	r3, [pc, #40]	; (220 <cpu_irq_enter_critical+0x50>)
     1f8:	2201      	movs	r2, #1
     1fa:	701a      	strb	r2, [r3, #0]
     1fc:	e002      	b.n	204 <cpu_irq_enter_critical+0x34>
     1fe:	4b08      	ldr	r3, [pc, #32]	; (220 <cpu_irq_enter_critical+0x50>)
     200:	2200      	movs	r2, #0
     202:	701a      	strb	r2, [r3, #0]
     204:	4b04      	ldr	r3, [pc, #16]	; (218 <cpu_irq_enter_critical+0x48>)
     206:	681b      	ldr	r3, [r3, #0]
     208:	1c5a      	adds	r2, r3, #1
     20a:	4b03      	ldr	r3, [pc, #12]	; (218 <cpu_irq_enter_critical+0x48>)
     20c:	601a      	str	r2, [r3, #0]
     20e:	46c0      	nop			; (mov r8, r8)
     210:	46bd      	mov	sp, r7
     212:	b002      	add	sp, #8
     214:	bd80      	pop	{r7, pc}
     216:	46c0      	nop			; (mov r8, r8)
     218:	20000a04 	.word	0x20000a04
     21c:	20000008 	.word	0x20000008
     220:	20000a08 	.word	0x20000a08

00000224 <cpu_irq_leave_critical>:
     224:	b580      	push	{r7, lr}
     226:	af00      	add	r7, sp, #0
     228:	4b0b      	ldr	r3, [pc, #44]	; (258 <cpu_irq_leave_critical+0x34>)
     22a:	681b      	ldr	r3, [r3, #0]
     22c:	1e5a      	subs	r2, r3, #1
     22e:	4b0a      	ldr	r3, [pc, #40]	; (258 <cpu_irq_leave_critical+0x34>)
     230:	601a      	str	r2, [r3, #0]
     232:	4b09      	ldr	r3, [pc, #36]	; (258 <cpu_irq_leave_critical+0x34>)
     234:	681b      	ldr	r3, [r3, #0]
     236:	2b00      	cmp	r3, #0
     238:	d10a      	bne.n	250 <cpu_irq_leave_critical+0x2c>
     23a:	4b08      	ldr	r3, [pc, #32]	; (25c <cpu_irq_leave_critical+0x38>)
     23c:	781b      	ldrb	r3, [r3, #0]
     23e:	b2db      	uxtb	r3, r3
     240:	2b00      	cmp	r3, #0
     242:	d005      	beq.n	250 <cpu_irq_leave_critical+0x2c>
     244:	4b06      	ldr	r3, [pc, #24]	; (260 <cpu_irq_leave_critical+0x3c>)
     246:	2201      	movs	r2, #1
     248:	701a      	strb	r2, [r3, #0]
     24a:	f3bf 8f5f 	dmb	sy
     24e:	b662      	cpsie	i
     250:	46c0      	nop			; (mov r8, r8)
     252:	46bd      	mov	sp, r7
     254:	bd80      	pop	{r7, pc}
     256:	46c0      	nop			; (mov r8, r8)
     258:	20000a04 	.word	0x20000a04
     25c:	20000a08 	.word	0x20000a08
     260:	20000008 	.word	0x20000008

00000264 <system_pinmux_get_group_from_gpio_pin>:
     264:	b580      	push	{r7, lr}
     266:	b084      	sub	sp, #16
     268:	af00      	add	r7, sp, #0
     26a:	0002      	movs	r2, r0
     26c:	1dfb      	adds	r3, r7, #7
     26e:	701a      	strb	r2, [r3, #0]
     270:	230f      	movs	r3, #15
     272:	18fb      	adds	r3, r7, r3
     274:	1dfa      	adds	r2, r7, #7
     276:	7812      	ldrb	r2, [r2, #0]
     278:	09d2      	lsrs	r2, r2, #7
     27a:	701a      	strb	r2, [r3, #0]
     27c:	230e      	movs	r3, #14
     27e:	18fb      	adds	r3, r7, r3
     280:	1dfa      	adds	r2, r7, #7
     282:	7812      	ldrb	r2, [r2, #0]
     284:	0952      	lsrs	r2, r2, #5
     286:	701a      	strb	r2, [r3, #0]
     288:	4b0d      	ldr	r3, [pc, #52]	; (2c0 <system_pinmux_get_group_from_gpio_pin+0x5c>)
     28a:	60bb      	str	r3, [r7, #8]
     28c:	230f      	movs	r3, #15
     28e:	18fb      	adds	r3, r7, r3
     290:	781b      	ldrb	r3, [r3, #0]
     292:	2b00      	cmp	r3, #0
     294:	d10f      	bne.n	2b6 <system_pinmux_get_group_from_gpio_pin+0x52>
     296:	230f      	movs	r3, #15
     298:	18fb      	adds	r3, r7, r3
     29a:	781b      	ldrb	r3, [r3, #0]
     29c:	009b      	lsls	r3, r3, #2
     29e:	2210      	movs	r2, #16
     2a0:	4694      	mov	ip, r2
     2a2:	44bc      	add	ip, r7
     2a4:	4463      	add	r3, ip
     2a6:	3b08      	subs	r3, #8
     2a8:	681a      	ldr	r2, [r3, #0]
     2aa:	230e      	movs	r3, #14
     2ac:	18fb      	adds	r3, r7, r3
     2ae:	781b      	ldrb	r3, [r3, #0]
     2b0:	01db      	lsls	r3, r3, #7
     2b2:	18d3      	adds	r3, r2, r3
     2b4:	e000      	b.n	2b8 <system_pinmux_get_group_from_gpio_pin+0x54>
     2b6:	2300      	movs	r3, #0
     2b8:	0018      	movs	r0, r3
     2ba:	46bd      	mov	sp, r7
     2bc:	b004      	add	sp, #16
     2be:	bd80      	pop	{r7, pc}
     2c0:	40002800 	.word	0x40002800

000002c4 <port_get_group_from_gpio_pin>:
     2c4:	b580      	push	{r7, lr}
     2c6:	b082      	sub	sp, #8
     2c8:	af00      	add	r7, sp, #0
     2ca:	0002      	movs	r2, r0
     2cc:	1dfb      	adds	r3, r7, #7
     2ce:	701a      	strb	r2, [r3, #0]
     2d0:	1dfb      	adds	r3, r7, #7
     2d2:	781b      	ldrb	r3, [r3, #0]
     2d4:	0018      	movs	r0, r3
     2d6:	4b03      	ldr	r3, [pc, #12]	; (2e4 <port_get_group_from_gpio_pin+0x20>)
     2d8:	4798      	blx	r3
     2da:	0003      	movs	r3, r0
     2dc:	0018      	movs	r0, r3
     2de:	46bd      	mov	sp, r7
     2e0:	b002      	add	sp, #8
     2e2:	bd80      	pop	{r7, pc}
     2e4:	00000265 	.word	0x00000265

000002e8 <port_get_config_defaults>:
     2e8:	b580      	push	{r7, lr}
     2ea:	b082      	sub	sp, #8
     2ec:	af00      	add	r7, sp, #0
     2ee:	6078      	str	r0, [r7, #4]
     2f0:	687b      	ldr	r3, [r7, #4]
     2f2:	2200      	movs	r2, #0
     2f4:	701a      	strb	r2, [r3, #0]
     2f6:	687b      	ldr	r3, [r7, #4]
     2f8:	2201      	movs	r2, #1
     2fa:	705a      	strb	r2, [r3, #1]
     2fc:	687b      	ldr	r3, [r7, #4]
     2fe:	2200      	movs	r2, #0
     300:	709a      	strb	r2, [r3, #2]
     302:	46c0      	nop			; (mov r8, r8)
     304:	46bd      	mov	sp, r7
     306:	b002      	add	sp, #8
     308:	bd80      	pop	{r7, pc}
	...

0000030c <port_pin_set_output_level>:
     30c:	b580      	push	{r7, lr}
     30e:	b084      	sub	sp, #16
     310:	af00      	add	r7, sp, #0
     312:	0002      	movs	r2, r0
     314:	1dfb      	adds	r3, r7, #7
     316:	701a      	strb	r2, [r3, #0]
     318:	1dbb      	adds	r3, r7, #6
     31a:	1c0a      	adds	r2, r1, #0
     31c:	701a      	strb	r2, [r3, #0]
     31e:	1dfb      	adds	r3, r7, #7
     320:	781b      	ldrb	r3, [r3, #0]
     322:	0018      	movs	r0, r3
     324:	4b0d      	ldr	r3, [pc, #52]	; (35c <port_pin_set_output_level+0x50>)
     326:	4798      	blx	r3
     328:	0003      	movs	r3, r0
     32a:	60fb      	str	r3, [r7, #12]
     32c:	1dfb      	adds	r3, r7, #7
     32e:	781b      	ldrb	r3, [r3, #0]
     330:	221f      	movs	r2, #31
     332:	4013      	ands	r3, r2
     334:	2201      	movs	r2, #1
     336:	409a      	lsls	r2, r3
     338:	0013      	movs	r3, r2
     33a:	60bb      	str	r3, [r7, #8]
     33c:	1dbb      	adds	r3, r7, #6
     33e:	781b      	ldrb	r3, [r3, #0]
     340:	2b00      	cmp	r3, #0
     342:	d003      	beq.n	34c <port_pin_set_output_level+0x40>
     344:	68fb      	ldr	r3, [r7, #12]
     346:	68ba      	ldr	r2, [r7, #8]
     348:	619a      	str	r2, [r3, #24]
     34a:	e002      	b.n	352 <port_pin_set_output_level+0x46>
     34c:	68fb      	ldr	r3, [r7, #12]
     34e:	68ba      	ldr	r2, [r7, #8]
     350:	615a      	str	r2, [r3, #20]
     352:	46c0      	nop			; (mov r8, r8)
     354:	46bd      	mov	sp, r7
     356:	b004      	add	sp, #16
     358:	bd80      	pop	{r7, pc}
     35a:	46c0      	nop			; (mov r8, r8)
     35c:	000002c5 	.word	0x000002c5

00000360 <system_board_init>:
     360:	b580      	push	{r7, lr}
     362:	b082      	sub	sp, #8
     364:	af00      	add	r7, sp, #0
     366:	1d3b      	adds	r3, r7, #4
     368:	0018      	movs	r0, r3
     36a:	4b28      	ldr	r3, [pc, #160]	; (40c <system_board_init+0xac>)
     36c:	4798      	blx	r3
     36e:	1d3b      	adds	r3, r7, #4
     370:	2201      	movs	r2, #1
     372:	701a      	strb	r2, [r3, #0]
     374:	1d3b      	adds	r3, r7, #4
     376:	0019      	movs	r1, r3
     378:	2013      	movs	r0, #19
     37a:	4b25      	ldr	r3, [pc, #148]	; (410 <system_board_init+0xb0>)
     37c:	4798      	blx	r3
     37e:	2101      	movs	r1, #1
     380:	2013      	movs	r0, #19
     382:	4b24      	ldr	r3, [pc, #144]	; (414 <system_board_init+0xb4>)
     384:	4798      	blx	r3
     386:	1d3b      	adds	r3, r7, #4
     388:	2201      	movs	r2, #1
     38a:	701a      	strb	r2, [r3, #0]
     38c:	1d3b      	adds	r3, r7, #4
     38e:	0019      	movs	r1, r3
     390:	2012      	movs	r0, #18
     392:	4b1f      	ldr	r3, [pc, #124]	; (410 <system_board_init+0xb0>)
     394:	4798      	blx	r3
     396:	2101      	movs	r1, #1
     398:	2012      	movs	r0, #18
     39a:	4b1e      	ldr	r3, [pc, #120]	; (414 <system_board_init+0xb4>)
     39c:	4798      	blx	r3
     39e:	1d3b      	adds	r3, r7, #4
     3a0:	2201      	movs	r2, #1
     3a2:	701a      	strb	r2, [r3, #0]
     3a4:	1d3b      	adds	r3, r7, #4
     3a6:	0019      	movs	r1, r3
     3a8:	200d      	movs	r0, #13
     3aa:	4b19      	ldr	r3, [pc, #100]	; (410 <system_board_init+0xb0>)
     3ac:	4798      	blx	r3
     3ae:	2100      	movs	r1, #0
     3b0:	200d      	movs	r0, #13
     3b2:	4b18      	ldr	r3, [pc, #96]	; (414 <system_board_init+0xb4>)
     3b4:	4798      	blx	r3
     3b6:	1d3b      	adds	r3, r7, #4
     3b8:	2201      	movs	r2, #1
     3ba:	701a      	strb	r2, [r3, #0]
     3bc:	1d3b      	adds	r3, r7, #4
     3be:	0019      	movs	r1, r3
     3c0:	2009      	movs	r0, #9
     3c2:	4b13      	ldr	r3, [pc, #76]	; (410 <system_board_init+0xb0>)
     3c4:	4798      	blx	r3
     3c6:	2100      	movs	r1, #0
     3c8:	2009      	movs	r0, #9
     3ca:	4b12      	ldr	r3, [pc, #72]	; (414 <system_board_init+0xb4>)
     3cc:	4798      	blx	r3
     3ce:	1d3b      	adds	r3, r7, #4
     3d0:	2201      	movs	r2, #1
     3d2:	701a      	strb	r2, [r3, #0]
     3d4:	1d3b      	adds	r3, r7, #4
     3d6:	0019      	movs	r1, r3
     3d8:	2008      	movs	r0, #8
     3da:	4b0d      	ldr	r3, [pc, #52]	; (410 <system_board_init+0xb0>)
     3dc:	4798      	blx	r3
     3de:	1d3b      	adds	r3, r7, #4
     3e0:	2201      	movs	r2, #1
     3e2:	701a      	strb	r2, [r3, #0]
     3e4:	1d3b      	adds	r3, r7, #4
     3e6:	0019      	movs	r1, r3
     3e8:	2006      	movs	r0, #6
     3ea:	4b09      	ldr	r3, [pc, #36]	; (410 <system_board_init+0xb0>)
     3ec:	4798      	blx	r3
     3ee:	1d3b      	adds	r3, r7, #4
     3f0:	2200      	movs	r2, #0
     3f2:	701a      	strb	r2, [r3, #0]
     3f4:	1d3b      	adds	r3, r7, #4
     3f6:	2201      	movs	r2, #1
     3f8:	705a      	strb	r2, [r3, #1]
     3fa:	1d3b      	adds	r3, r7, #4
     3fc:	0019      	movs	r1, r3
     3fe:	201c      	movs	r0, #28
     400:	4b03      	ldr	r3, [pc, #12]	; (410 <system_board_init+0xb0>)
     402:	4798      	blx	r3
     404:	46c0      	nop			; (mov r8, r8)
     406:	46bd      	mov	sp, r7
     408:	b002      	add	sp, #8
     40a:	bd80      	pop	{r7, pc}
     40c:	000002e9 	.word	0x000002e9
     410:	000018bd 	.word	0x000018bd
     414:	0000030d 	.word	0x0000030d

00000418 <adc_is_syncing>:
     418:	b580      	push	{r7, lr}
     41a:	b084      	sub	sp, #16
     41c:	af00      	add	r7, sp, #0
     41e:	6078      	str	r0, [r7, #4]
     420:	687b      	ldr	r3, [r7, #4]
     422:	681b      	ldr	r3, [r3, #0]
     424:	60fb      	str	r3, [r7, #12]
     426:	68fb      	ldr	r3, [r7, #12]
     428:	8c1b      	ldrh	r3, [r3, #32]
     42a:	b29b      	uxth	r3, r3
     42c:	2b00      	cmp	r3, #0
     42e:	d001      	beq.n	434 <adc_is_syncing+0x1c>
     430:	2301      	movs	r3, #1
     432:	e000      	b.n	436 <adc_is_syncing+0x1e>
     434:	2300      	movs	r3, #0
     436:	0018      	movs	r0, r3
     438:	46bd      	mov	sp, r7
     43a:	b004      	add	sp, #16
     43c:	bd80      	pop	{r7, pc}
	...

00000440 <adc_start_conversion>:
     440:	b580      	push	{r7, lr}
     442:	b084      	sub	sp, #16
     444:	af00      	add	r7, sp, #0
     446:	6078      	str	r0, [r7, #4]
     448:	687b      	ldr	r3, [r7, #4]
     44a:	681b      	ldr	r3, [r3, #0]
     44c:	60fb      	str	r3, [r7, #12]
     44e:	46c0      	nop			; (mov r8, r8)
     450:	687b      	ldr	r3, [r7, #4]
     452:	0018      	movs	r0, r3
     454:	4b0b      	ldr	r3, [pc, #44]	; (484 <adc_start_conversion+0x44>)
     456:	4798      	blx	r3
     458:	1e03      	subs	r3, r0, #0
     45a:	d1f9      	bne.n	450 <adc_start_conversion+0x10>
     45c:	68fb      	ldr	r3, [r7, #12]
     45e:	7e1b      	ldrb	r3, [r3, #24]
     460:	b2db      	uxtb	r3, r3
     462:	2202      	movs	r2, #2
     464:	4313      	orrs	r3, r2
     466:	b2da      	uxtb	r2, r3
     468:	68fb      	ldr	r3, [r7, #12]
     46a:	761a      	strb	r2, [r3, #24]
     46c:	46c0      	nop			; (mov r8, r8)
     46e:	687b      	ldr	r3, [r7, #4]
     470:	0018      	movs	r0, r3
     472:	4b04      	ldr	r3, [pc, #16]	; (484 <adc_start_conversion+0x44>)
     474:	4798      	blx	r3
     476:	1e03      	subs	r3, r0, #0
     478:	d1f9      	bne.n	46e <adc_start_conversion+0x2e>
     47a:	46c0      	nop			; (mov r8, r8)
     47c:	46bd      	mov	sp, r7
     47e:	b004      	add	sp, #16
     480:	bd80      	pop	{r7, pc}
     482:	46c0      	nop			; (mov r8, r8)
     484:	00000419 	.word	0x00000419

00000488 <adc_disable_interrupt>:
     488:	b580      	push	{r7, lr}
     48a:	b084      	sub	sp, #16
     48c:	af00      	add	r7, sp, #0
     48e:	6078      	str	r0, [r7, #4]
     490:	000a      	movs	r2, r1
     492:	1cfb      	adds	r3, r7, #3
     494:	701a      	strb	r2, [r3, #0]
     496:	687b      	ldr	r3, [r7, #4]
     498:	681b      	ldr	r3, [r3, #0]
     49a:	60fb      	str	r3, [r7, #12]
     49c:	68fb      	ldr	r3, [r7, #12]
     49e:	1cfa      	adds	r2, r7, #3
     4a0:	7812      	ldrb	r2, [r2, #0]
     4a2:	711a      	strb	r2, [r3, #4]
     4a4:	46c0      	nop			; (mov r8, r8)
     4a6:	46bd      	mov	sp, r7
     4a8:	b004      	add	sp, #16
     4aa:	bd80      	pop	{r7, pc}

000004ac <_adc_interrupt_handler>:
     4ac:	b580      	push	{r7, lr}
     4ae:	b084      	sub	sp, #16
     4b0:	af00      	add	r7, sp, #0
     4b2:	0002      	movs	r2, r0
     4b4:	1dfb      	adds	r3, r7, #7
     4b6:	701a      	strb	r2, [r3, #0]
     4b8:	1dfb      	adds	r3, r7, #7
     4ba:	781a      	ldrb	r2, [r3, #0]
     4bc:	4b47      	ldr	r3, [pc, #284]	; (5dc <_adc_interrupt_handler+0x130>)
     4be:	0092      	lsls	r2, r2, #2
     4c0:	58d3      	ldr	r3, [r2, r3]
     4c2:	60fb      	str	r3, [r7, #12]
     4c4:	68fb      	ldr	r3, [r7, #12]
     4c6:	681b      	ldr	r3, [r3, #0]
     4c8:	799b      	ldrb	r3, [r3, #6]
     4ca:	b2da      	uxtb	r2, r3
     4cc:	68fb      	ldr	r3, [r7, #12]
     4ce:	681b      	ldr	r3, [r3, #0]
     4d0:	795b      	ldrb	r3, [r3, #5]
     4d2:	b2db      	uxtb	r3, r3
     4d4:	4013      	ands	r3, r2
     4d6:	b2db      	uxtb	r3, r3
     4d8:	60bb      	str	r3, [r7, #8]
     4da:	68bb      	ldr	r3, [r7, #8]
     4dc:	2201      	movs	r2, #1
     4de:	4013      	ands	r3, r2
     4e0:	d045      	beq.n	56e <_adc_interrupt_handler+0xc2>
     4e2:	68fb      	ldr	r3, [r7, #12]
     4e4:	681b      	ldr	r3, [r3, #0]
     4e6:	2201      	movs	r2, #1
     4e8:	719a      	strb	r2, [r3, #6]
     4ea:	68fb      	ldr	r3, [r7, #12]
     4ec:	695b      	ldr	r3, [r3, #20]
     4ee:	1c99      	adds	r1, r3, #2
     4f0:	68fa      	ldr	r2, [r7, #12]
     4f2:	6151      	str	r1, [r2, #20]
     4f4:	68fa      	ldr	r2, [r7, #12]
     4f6:	6812      	ldr	r2, [r2, #0]
     4f8:	8c92      	ldrh	r2, [r2, #36]	; 0x24
     4fa:	b292      	uxth	r2, r2
     4fc:	801a      	strh	r2, [r3, #0]
     4fe:	68fb      	ldr	r3, [r7, #12]
     500:	8b1b      	ldrh	r3, [r3, #24]
     502:	b29b      	uxth	r3, r3
     504:	3b01      	subs	r3, #1
     506:	b29b      	uxth	r3, r3
     508:	68fa      	ldr	r2, [r7, #12]
     50a:	1c19      	adds	r1, r3, #0
     50c:	8311      	strh	r1, [r2, #24]
     50e:	2b00      	cmp	r3, #0
     510:	d00f      	beq.n	532 <_adc_interrupt_handler+0x86>
     512:	68fb      	ldr	r3, [r7, #12]
     514:	7f5b      	ldrb	r3, [r3, #29]
     516:	2b00      	cmp	r3, #0
     518:	d029      	beq.n	56e <_adc_interrupt_handler+0xc2>
     51a:	68fb      	ldr	r3, [r7, #12]
     51c:	681b      	ldr	r3, [r3, #0]
     51e:	79db      	ldrb	r3, [r3, #7]
     520:	b2db      	uxtb	r3, r3
     522:	b25b      	sxtb	r3, r3
     524:	2b00      	cmp	r3, #0
     526:	db22      	blt.n	56e <_adc_interrupt_handler+0xc2>
     528:	68fb      	ldr	r3, [r7, #12]
     52a:	0018      	movs	r0, r3
     52c:	4b2c      	ldr	r3, [pc, #176]	; (5e0 <_adc_interrupt_handler+0x134>)
     52e:	4798      	blx	r3
     530:	e01d      	b.n	56e <_adc_interrupt_handler+0xc2>
     532:	68fb      	ldr	r3, [r7, #12]
     534:	2101      	movs	r1, #1
     536:	0018      	movs	r0, r3
     538:	4b2a      	ldr	r3, [pc, #168]	; (5e4 <_adc_interrupt_handler+0x138>)
     53a:	4798      	blx	r3
     53c:	68fb      	ldr	r3, [r7, #12]
     53e:	7f1b      	ldrb	r3, [r3, #28]
     540:	b2db      	uxtb	r3, r3
     542:	2b05      	cmp	r3, #5
     544:	d113      	bne.n	56e <_adc_interrupt_handler+0xc2>
     546:	68fb      	ldr	r3, [r7, #12]
     548:	2200      	movs	r2, #0
     54a:	771a      	strb	r2, [r3, #28]
     54c:	68fb      	ldr	r3, [r7, #12]
     54e:	7edb      	ldrb	r3, [r3, #27]
     550:	001a      	movs	r2, r3
     552:	2301      	movs	r3, #1
     554:	4013      	ands	r3, r2
     556:	d00a      	beq.n	56e <_adc_interrupt_handler+0xc2>
     558:	68fb      	ldr	r3, [r7, #12]
     55a:	7e9b      	ldrb	r3, [r3, #26]
     55c:	001a      	movs	r2, r3
     55e:	2301      	movs	r3, #1
     560:	4013      	ands	r3, r2
     562:	d004      	beq.n	56e <_adc_interrupt_handler+0xc2>
     564:	68fb      	ldr	r3, [r7, #12]
     566:	689b      	ldr	r3, [r3, #8]
     568:	68fa      	ldr	r2, [r7, #12]
     56a:	0010      	movs	r0, r2
     56c:	4798      	blx	r3
     56e:	68bb      	ldr	r3, [r7, #8]
     570:	2204      	movs	r2, #4
     572:	4013      	ands	r3, r2
     574:	d014      	beq.n	5a0 <_adc_interrupt_handler+0xf4>
     576:	68fb      	ldr	r3, [r7, #12]
     578:	681b      	ldr	r3, [r3, #0]
     57a:	2204      	movs	r2, #4
     57c:	719a      	strb	r2, [r3, #6]
     57e:	68fb      	ldr	r3, [r7, #12]
     580:	7edb      	ldrb	r3, [r3, #27]
     582:	001a      	movs	r2, r3
     584:	2302      	movs	r3, #2
     586:	4013      	ands	r3, r2
     588:	d00a      	beq.n	5a0 <_adc_interrupt_handler+0xf4>
     58a:	68fb      	ldr	r3, [r7, #12]
     58c:	7e9b      	ldrb	r3, [r3, #26]
     58e:	001a      	movs	r2, r3
     590:	2302      	movs	r3, #2
     592:	4013      	ands	r3, r2
     594:	d004      	beq.n	5a0 <_adc_interrupt_handler+0xf4>
     596:	68fb      	ldr	r3, [r7, #12]
     598:	68db      	ldr	r3, [r3, #12]
     59a:	68fa      	ldr	r2, [r7, #12]
     59c:	0010      	movs	r0, r2
     59e:	4798      	blx	r3
     5a0:	68bb      	ldr	r3, [r7, #8]
     5a2:	2202      	movs	r2, #2
     5a4:	4013      	ands	r3, r2
     5a6:	d014      	beq.n	5d2 <_adc_interrupt_handler+0x126>
     5a8:	68fb      	ldr	r3, [r7, #12]
     5aa:	681b      	ldr	r3, [r3, #0]
     5ac:	2202      	movs	r2, #2
     5ae:	719a      	strb	r2, [r3, #6]
     5b0:	68fb      	ldr	r3, [r7, #12]
     5b2:	7edb      	ldrb	r3, [r3, #27]
     5b4:	001a      	movs	r2, r3
     5b6:	2304      	movs	r3, #4
     5b8:	4013      	ands	r3, r2
     5ba:	d00a      	beq.n	5d2 <_adc_interrupt_handler+0x126>
     5bc:	68fb      	ldr	r3, [r7, #12]
     5be:	7e9b      	ldrb	r3, [r3, #26]
     5c0:	001a      	movs	r2, r3
     5c2:	2304      	movs	r3, #4
     5c4:	4013      	ands	r3, r2
     5c6:	d004      	beq.n	5d2 <_adc_interrupt_handler+0x126>
     5c8:	68fb      	ldr	r3, [r7, #12]
     5ca:	691b      	ldr	r3, [r3, #16]
     5cc:	68fa      	ldr	r2, [r7, #12]
     5ce:	0010      	movs	r0, r2
     5d0:	4798      	blx	r3
     5d2:	46c0      	nop			; (mov r8, r8)
     5d4:	46bd      	mov	sp, r7
     5d6:	b004      	add	sp, #16
     5d8:	bd80      	pop	{r7, pc}
     5da:	46c0      	nop			; (mov r8, r8)
     5dc:	20000cd0 	.word	0x20000cd0
     5e0:	00000441 	.word	0x00000441
     5e4:	00000489 	.word	0x00000489

000005e8 <ADC_Handler>:
     5e8:	b580      	push	{r7, lr}
     5ea:	af00      	add	r7, sp, #0
     5ec:	2000      	movs	r0, #0
     5ee:	4b02      	ldr	r3, [pc, #8]	; (5f8 <ADC_Handler+0x10>)
     5f0:	4798      	blx	r3
     5f2:	46c0      	nop			; (mov r8, r8)
     5f4:	46bd      	mov	sp, r7
     5f6:	bd80      	pop	{r7, pc}
     5f8:	000004ad 	.word	0x000004ad

000005fc <system_apb_clock_set_mask>:
     5fc:	b580      	push	{r7, lr}
     5fe:	b082      	sub	sp, #8
     600:	af00      	add	r7, sp, #0
     602:	0002      	movs	r2, r0
     604:	6039      	str	r1, [r7, #0]
     606:	1dfb      	adds	r3, r7, #7
     608:	701a      	strb	r2, [r3, #0]
     60a:	1dfb      	adds	r3, r7, #7
     60c:	781b      	ldrb	r3, [r3, #0]
     60e:	2b04      	cmp	r3, #4
     610:	d827      	bhi.n	662 <system_apb_clock_set_mask+0x66>
     612:	009a      	lsls	r2, r3, #2
     614:	4b16      	ldr	r3, [pc, #88]	; (670 <system_apb_clock_set_mask+0x74>)
     616:	18d3      	adds	r3, r2, r3
     618:	681b      	ldr	r3, [r3, #0]
     61a:	469f      	mov	pc, r3
     61c:	4b15      	ldr	r3, [pc, #84]	; (674 <system_apb_clock_set_mask+0x78>)
     61e:	4a15      	ldr	r2, [pc, #84]	; (674 <system_apb_clock_set_mask+0x78>)
     620:	6951      	ldr	r1, [r2, #20]
     622:	683a      	ldr	r2, [r7, #0]
     624:	430a      	orrs	r2, r1
     626:	615a      	str	r2, [r3, #20]
     628:	e01d      	b.n	666 <system_apb_clock_set_mask+0x6a>
     62a:	4b12      	ldr	r3, [pc, #72]	; (674 <system_apb_clock_set_mask+0x78>)
     62c:	4a11      	ldr	r2, [pc, #68]	; (674 <system_apb_clock_set_mask+0x78>)
     62e:	6991      	ldr	r1, [r2, #24]
     630:	683a      	ldr	r2, [r7, #0]
     632:	430a      	orrs	r2, r1
     634:	619a      	str	r2, [r3, #24]
     636:	e016      	b.n	666 <system_apb_clock_set_mask+0x6a>
     638:	4b0e      	ldr	r3, [pc, #56]	; (674 <system_apb_clock_set_mask+0x78>)
     63a:	4a0e      	ldr	r2, [pc, #56]	; (674 <system_apb_clock_set_mask+0x78>)
     63c:	69d1      	ldr	r1, [r2, #28]
     63e:	683a      	ldr	r2, [r7, #0]
     640:	430a      	orrs	r2, r1
     642:	61da      	str	r2, [r3, #28]
     644:	e00f      	b.n	666 <system_apb_clock_set_mask+0x6a>
     646:	4b0b      	ldr	r3, [pc, #44]	; (674 <system_apb_clock_set_mask+0x78>)
     648:	4a0a      	ldr	r2, [pc, #40]	; (674 <system_apb_clock_set_mask+0x78>)
     64a:	6a11      	ldr	r1, [r2, #32]
     64c:	683a      	ldr	r2, [r7, #0]
     64e:	430a      	orrs	r2, r1
     650:	621a      	str	r2, [r3, #32]
     652:	e008      	b.n	666 <system_apb_clock_set_mask+0x6a>
     654:	4b07      	ldr	r3, [pc, #28]	; (674 <system_apb_clock_set_mask+0x78>)
     656:	4a07      	ldr	r2, [pc, #28]	; (674 <system_apb_clock_set_mask+0x78>)
     658:	6a51      	ldr	r1, [r2, #36]	; 0x24
     65a:	683a      	ldr	r2, [r7, #0]
     65c:	430a      	orrs	r2, r1
     65e:	625a      	str	r2, [r3, #36]	; 0x24
     660:	e001      	b.n	666 <system_apb_clock_set_mask+0x6a>
     662:	2317      	movs	r3, #23
     664:	e000      	b.n	668 <system_apb_clock_set_mask+0x6c>
     666:	2300      	movs	r3, #0
     668:	0018      	movs	r0, r3
     66a:	46bd      	mov	sp, r7
     66c:	b002      	add	sp, #8
     66e:	bd80      	pop	{r7, pc}
     670:	0001c99c 	.word	0x0001c99c
     674:	40000400 	.word	0x40000400

00000678 <aes_get_config_defaults>:
     678:	b580      	push	{r7, lr}
     67a:	b082      	sub	sp, #8
     67c:	af00      	add	r7, sp, #0
     67e:	6078      	str	r0, [r7, #4]
     680:	687b      	ldr	r3, [r7, #4]
     682:	2201      	movs	r2, #1
     684:	701a      	strb	r2, [r3, #0]
     686:	687b      	ldr	r3, [r7, #4]
     688:	2200      	movs	r2, #0
     68a:	705a      	strb	r2, [r3, #1]
     68c:	687b      	ldr	r3, [r7, #4]
     68e:	2200      	movs	r2, #0
     690:	709a      	strb	r2, [r3, #2]
     692:	687b      	ldr	r3, [r7, #4]
     694:	2200      	movs	r2, #0
     696:	70da      	strb	r2, [r3, #3]
     698:	687b      	ldr	r3, [r7, #4]
     69a:	2200      	movs	r2, #0
     69c:	711a      	strb	r2, [r3, #4]
     69e:	687b      	ldr	r3, [r7, #4]
     6a0:	220f      	movs	r2, #15
     6a2:	715a      	strb	r2, [r3, #5]
     6a4:	687b      	ldr	r3, [r7, #4]
     6a6:	2200      	movs	r2, #0
     6a8:	719a      	strb	r2, [r3, #6]
     6aa:	687b      	ldr	r3, [r7, #4]
     6ac:	2200      	movs	r2, #0
     6ae:	71da      	strb	r2, [r3, #7]
     6b0:	687b      	ldr	r3, [r7, #4]
     6b2:	2200      	movs	r2, #0
     6b4:	721a      	strb	r2, [r3, #8]
     6b6:	46c0      	nop			; (mov r8, r8)
     6b8:	46bd      	mov	sp, r7
     6ba:	b002      	add	sp, #8
     6bc:	bd80      	pop	{r7, pc}
	...

000006c0 <aes_init>:
     6c0:	b580      	push	{r7, lr}
     6c2:	b084      	sub	sp, #16
     6c4:	af00      	add	r7, sp, #0
     6c6:	60f8      	str	r0, [r7, #12]
     6c8:	60b9      	str	r1, [r7, #8]
     6ca:	607a      	str	r2, [r7, #4]
     6cc:	2380      	movs	r3, #128	; 0x80
     6ce:	019b      	lsls	r3, r3, #6
     6d0:	0019      	movs	r1, r3
     6d2:	2002      	movs	r0, #2
     6d4:	4b07      	ldr	r3, [pc, #28]	; (6f4 <aes_init+0x34>)
     6d6:	4798      	blx	r3
     6d8:	68bb      	ldr	r3, [r7, #8]
     6da:	2201      	movs	r2, #1
     6dc:	601a      	str	r2, [r3, #0]
     6de:	687a      	ldr	r2, [r7, #4]
     6e0:	68b9      	ldr	r1, [r7, #8]
     6e2:	68fb      	ldr	r3, [r7, #12]
     6e4:	0018      	movs	r0, r3
     6e6:	4b04      	ldr	r3, [pc, #16]	; (6f8 <aes_init+0x38>)
     6e8:	4798      	blx	r3
     6ea:	46c0      	nop			; (mov r8, r8)
     6ec:	46bd      	mov	sp, r7
     6ee:	b004      	add	sp, #16
     6f0:	bd80      	pop	{r7, pc}
     6f2:	46c0      	nop			; (mov r8, r8)
     6f4:	000005fd 	.word	0x000005fd
     6f8:	0000074d 	.word	0x0000074d

000006fc <aes_enable>:
     6fc:	b580      	push	{r7, lr}
     6fe:	b082      	sub	sp, #8
     700:	af00      	add	r7, sp, #0
     702:	6078      	str	r0, [r7, #4]
     704:	687b      	ldr	r3, [r7, #4]
     706:	681b      	ldr	r3, [r3, #0]
     708:	687a      	ldr	r2, [r7, #4]
     70a:	6812      	ldr	r2, [r2, #0]
     70c:	6812      	ldr	r2, [r2, #0]
     70e:	2102      	movs	r1, #2
     710:	430a      	orrs	r2, r1
     712:	601a      	str	r2, [r3, #0]
     714:	46c0      	nop			; (mov r8, r8)
     716:	46bd      	mov	sp, r7
     718:	b002      	add	sp, #8
     71a:	bd80      	pop	{r7, pc}

0000071c <aes_disable>:
     71c:	b580      	push	{r7, lr}
     71e:	b082      	sub	sp, #8
     720:	af00      	add	r7, sp, #0
     722:	6078      	str	r0, [r7, #4]
     724:	687b      	ldr	r3, [r7, #4]
     726:	681b      	ldr	r3, [r3, #0]
     728:	2203      	movs	r2, #3
     72a:	715a      	strb	r2, [r3, #5]
     72c:	687b      	ldr	r3, [r7, #4]
     72e:	681b      	ldr	r3, [r3, #0]
     730:	2203      	movs	r2, #3
     732:	71da      	strb	r2, [r3, #7]
     734:	687b      	ldr	r3, [r7, #4]
     736:	681b      	ldr	r3, [r3, #0]
     738:	687a      	ldr	r2, [r7, #4]
     73a:	6812      	ldr	r2, [r2, #0]
     73c:	6812      	ldr	r2, [r2, #0]
     73e:	2102      	movs	r1, #2
     740:	438a      	bics	r2, r1
     742:	601a      	str	r2, [r3, #0]
     744:	46c0      	nop			; (mov r8, r8)
     746:	46bd      	mov	sp, r7
     748:	b002      	add	sp, #8
     74a:	bd80      	pop	{r7, pc}

0000074c <aes_set_config>:
     74c:	b580      	push	{r7, lr}
     74e:	b086      	sub	sp, #24
     750:	af00      	add	r7, sp, #0
     752:	60f8      	str	r0, [r7, #12]
     754:	60b9      	str	r1, [r7, #8]
     756:	607a      	str	r2, [r7, #4]
     758:	2300      	movs	r3, #0
     75a:	617b      	str	r3, [r7, #20]
     75c:	687b      	ldr	r3, [r7, #4]
     75e:	78da      	ldrb	r2, [r3, #3]
     760:	68fb      	ldr	r3, [r7, #12]
     762:	711a      	strb	r2, [r3, #4]
     764:	68fb      	ldr	r3, [r7, #12]
     766:	68ba      	ldr	r2, [r7, #8]
     768:	601a      	str	r2, [r3, #0]
     76a:	687b      	ldr	r3, [r7, #4]
     76c:	785a      	ldrb	r2, [r3, #1]
     76e:	68fb      	ldr	r3, [r7, #12]
     770:	715a      	strb	r2, [r3, #5]
     772:	687b      	ldr	r3, [r7, #4]
     774:	791a      	ldrb	r2, [r3, #4]
     776:	68fb      	ldr	r3, [r7, #12]
     778:	719a      	strb	r2, [r3, #6]
     77a:	687b      	ldr	r3, [r7, #4]
     77c:	781b      	ldrb	r3, [r3, #0]
     77e:	029a      	lsls	r2, r3, #10
     780:	687b      	ldr	r3, [r7, #4]
     782:	789b      	ldrb	r3, [r3, #2]
     784:	02db      	lsls	r3, r3, #11
     786:	431a      	orrs	r2, r3
     788:	687b      	ldr	r3, [r7, #4]
     78a:	785b      	ldrb	r3, [r3, #1]
     78c:	021b      	lsls	r3, r3, #8
     78e:	431a      	orrs	r2, r3
     790:	687b      	ldr	r3, [r7, #4]
     792:	78db      	ldrb	r3, [r3, #3]
     794:	009b      	lsls	r3, r3, #2
     796:	431a      	orrs	r2, r3
     798:	687b      	ldr	r3, [r7, #4]
     79a:	791b      	ldrb	r3, [r3, #4]
     79c:	015b      	lsls	r3, r3, #5
     79e:	4313      	orrs	r3, r2
     7a0:	001a      	movs	r2, r3
     7a2:	687b      	ldr	r3, [r7, #4]
     7a4:	795b      	ldrb	r3, [r3, #5]
     7a6:	041b      	lsls	r3, r3, #16
     7a8:	0019      	movs	r1, r3
     7aa:	23f0      	movs	r3, #240	; 0xf0
     7ac:	031b      	lsls	r3, r3, #12
     7ae:	400b      	ands	r3, r1
     7b0:	4313      	orrs	r3, r2
     7b2:	687a      	ldr	r2, [r7, #4]
     7b4:	7992      	ldrb	r2, [r2, #6]
     7b6:	0392      	lsls	r2, r2, #14
     7b8:	4313      	orrs	r3, r2
     7ba:	687a      	ldr	r2, [r7, #4]
     7bc:	79d2      	ldrb	r2, [r2, #7]
     7be:	0352      	lsls	r2, r2, #13
     7c0:	4313      	orrs	r3, r2
     7c2:	687a      	ldr	r2, [r7, #4]
     7c4:	7a12      	ldrb	r2, [r2, #8]
     7c6:	0312      	lsls	r2, r2, #12
     7c8:	4313      	orrs	r3, r2
     7ca:	697a      	ldr	r2, [r7, #20]
     7cc:	4313      	orrs	r3, r2
     7ce:	617b      	str	r3, [r7, #20]
     7d0:	68bb      	ldr	r3, [r7, #8]
     7d2:	681b      	ldr	r3, [r3, #0]
     7d4:	2202      	movs	r2, #2
     7d6:	4013      	ands	r3, r2
     7d8:	d00b      	beq.n	7f2 <aes_set_config+0xa6>
     7da:	68fb      	ldr	r3, [r7, #12]
     7dc:	0018      	movs	r0, r3
     7de:	4b08      	ldr	r3, [pc, #32]	; (800 <aes_set_config+0xb4>)
     7e0:	4798      	blx	r3
     7e2:	68bb      	ldr	r3, [r7, #8]
     7e4:	697a      	ldr	r2, [r7, #20]
     7e6:	601a      	str	r2, [r3, #0]
     7e8:	68fb      	ldr	r3, [r7, #12]
     7ea:	0018      	movs	r0, r3
     7ec:	4b05      	ldr	r3, [pc, #20]	; (804 <aes_set_config+0xb8>)
     7ee:	4798      	blx	r3
     7f0:	e002      	b.n	7f8 <aes_set_config+0xac>
     7f2:	68bb      	ldr	r3, [r7, #8]
     7f4:	697a      	ldr	r2, [r7, #20]
     7f6:	601a      	str	r2, [r3, #0]
     7f8:	46c0      	nop			; (mov r8, r8)
     7fa:	46bd      	mov	sp, r7
     7fc:	b006      	add	sp, #24
     7fe:	bd80      	pop	{r7, pc}
     800:	0000071d 	.word	0x0000071d
     804:	000006fd 	.word	0x000006fd

00000808 <_extint_get_eic_from_channel>:
     808:	b580      	push	{r7, lr}
     80a:	b084      	sub	sp, #16
     80c:	af00      	add	r7, sp, #0
     80e:	0002      	movs	r2, r0
     810:	1dfb      	adds	r3, r7, #7
     812:	701a      	strb	r2, [r3, #0]
     814:	230f      	movs	r3, #15
     816:	18fb      	adds	r3, r7, r3
     818:	1dfa      	adds	r2, r7, #7
     81a:	7812      	ldrb	r2, [r2, #0]
     81c:	0952      	lsrs	r2, r2, #5
     81e:	701a      	strb	r2, [r3, #0]
     820:	230f      	movs	r3, #15
     822:	18fb      	adds	r3, r7, r3
     824:	781b      	ldrb	r3, [r3, #0]
     826:	2b00      	cmp	r3, #0
     828:	d10c      	bne.n	844 <_extint_get_eic_from_channel+0x3c>
     82a:	4b09      	ldr	r3, [pc, #36]	; (850 <_extint_get_eic_from_channel+0x48>)
     82c:	60bb      	str	r3, [r7, #8]
     82e:	230f      	movs	r3, #15
     830:	18fb      	adds	r3, r7, r3
     832:	781b      	ldrb	r3, [r3, #0]
     834:	009b      	lsls	r3, r3, #2
     836:	2210      	movs	r2, #16
     838:	4694      	mov	ip, r2
     83a:	44bc      	add	ip, r7
     83c:	4463      	add	r3, ip
     83e:	3b08      	subs	r3, #8
     840:	681b      	ldr	r3, [r3, #0]
     842:	e000      	b.n	846 <_extint_get_eic_from_channel+0x3e>
     844:	2300      	movs	r3, #0
     846:	0018      	movs	r0, r3
     848:	46bd      	mov	sp, r7
     84a:	b004      	add	sp, #16
     84c:	bd80      	pop	{r7, pc}
     84e:	46c0      	nop			; (mov r8, r8)
     850:	40002400 	.word	0x40002400

00000854 <extint_chan_is_detected>:
     854:	b580      	push	{r7, lr}
     856:	b084      	sub	sp, #16
     858:	af00      	add	r7, sp, #0
     85a:	0002      	movs	r2, r0
     85c:	1dfb      	adds	r3, r7, #7
     85e:	701a      	strb	r2, [r3, #0]
     860:	1dfb      	adds	r3, r7, #7
     862:	781b      	ldrb	r3, [r3, #0]
     864:	0018      	movs	r0, r3
     866:	4b0b      	ldr	r3, [pc, #44]	; (894 <extint_chan_is_detected+0x40>)
     868:	4798      	blx	r3
     86a:	0003      	movs	r3, r0
     86c:	60fb      	str	r3, [r7, #12]
     86e:	1dfb      	adds	r3, r7, #7
     870:	781b      	ldrb	r3, [r3, #0]
     872:	221f      	movs	r2, #31
     874:	4013      	ands	r3, r2
     876:	2201      	movs	r2, #1
     878:	409a      	lsls	r2, r3
     87a:	0013      	movs	r3, r2
     87c:	60bb      	str	r3, [r7, #8]
     87e:	68fb      	ldr	r3, [r7, #12]
     880:	695b      	ldr	r3, [r3, #20]
     882:	68ba      	ldr	r2, [r7, #8]
     884:	4013      	ands	r3, r2
     886:	1e5a      	subs	r2, r3, #1
     888:	4193      	sbcs	r3, r2
     88a:	b2db      	uxtb	r3, r3
     88c:	0018      	movs	r0, r3
     88e:	46bd      	mov	sp, r7
     890:	b004      	add	sp, #16
     892:	bd80      	pop	{r7, pc}
     894:	00000809 	.word	0x00000809

00000898 <extint_chan_clear_detected>:
     898:	b580      	push	{r7, lr}
     89a:	b084      	sub	sp, #16
     89c:	af00      	add	r7, sp, #0
     89e:	0002      	movs	r2, r0
     8a0:	1dfb      	adds	r3, r7, #7
     8a2:	701a      	strb	r2, [r3, #0]
     8a4:	1dfb      	adds	r3, r7, #7
     8a6:	781b      	ldrb	r3, [r3, #0]
     8a8:	0018      	movs	r0, r3
     8aa:	4b09      	ldr	r3, [pc, #36]	; (8d0 <extint_chan_clear_detected+0x38>)
     8ac:	4798      	blx	r3
     8ae:	0003      	movs	r3, r0
     8b0:	60fb      	str	r3, [r7, #12]
     8b2:	1dfb      	adds	r3, r7, #7
     8b4:	781b      	ldrb	r3, [r3, #0]
     8b6:	221f      	movs	r2, #31
     8b8:	4013      	ands	r3, r2
     8ba:	2201      	movs	r2, #1
     8bc:	409a      	lsls	r2, r3
     8be:	0013      	movs	r3, r2
     8c0:	60bb      	str	r3, [r7, #8]
     8c2:	68fb      	ldr	r3, [r7, #12]
     8c4:	68ba      	ldr	r2, [r7, #8]
     8c6:	615a      	str	r2, [r3, #20]
     8c8:	46c0      	nop			; (mov r8, r8)
     8ca:	46bd      	mov	sp, r7
     8cc:	b004      	add	sp, #16
     8ce:	bd80      	pop	{r7, pc}
     8d0:	00000809 	.word	0x00000809

000008d4 <extint_register_callback>:
     8d4:	b580      	push	{r7, lr}
     8d6:	b082      	sub	sp, #8
     8d8:	af00      	add	r7, sp, #0
     8da:	6078      	str	r0, [r7, #4]
     8dc:	0008      	movs	r0, r1
     8de:	0011      	movs	r1, r2
     8e0:	1cfb      	adds	r3, r7, #3
     8e2:	1c02      	adds	r2, r0, #0
     8e4:	701a      	strb	r2, [r3, #0]
     8e6:	1cbb      	adds	r3, r7, #2
     8e8:	1c0a      	adds	r2, r1, #0
     8ea:	701a      	strb	r2, [r3, #0]
     8ec:	1cbb      	adds	r3, r7, #2
     8ee:	781b      	ldrb	r3, [r3, #0]
     8f0:	2b00      	cmp	r3, #0
     8f2:	d001      	beq.n	8f8 <extint_register_callback+0x24>
     8f4:	2317      	movs	r3, #23
     8f6:	e019      	b.n	92c <extint_register_callback+0x58>
     8f8:	1cfb      	adds	r3, r7, #3
     8fa:	781a      	ldrb	r2, [r3, #0]
     8fc:	4b0d      	ldr	r3, [pc, #52]	; (934 <extint_register_callback+0x60>)
     8fe:	0092      	lsls	r2, r2, #2
     900:	58d3      	ldr	r3, [r2, r3]
     902:	2b00      	cmp	r3, #0
     904:	d107      	bne.n	916 <extint_register_callback+0x42>
     906:	1cfb      	adds	r3, r7, #3
     908:	781a      	ldrb	r2, [r3, #0]
     90a:	4b0a      	ldr	r3, [pc, #40]	; (934 <extint_register_callback+0x60>)
     90c:	0092      	lsls	r2, r2, #2
     90e:	6879      	ldr	r1, [r7, #4]
     910:	50d1      	str	r1, [r2, r3]
     912:	2300      	movs	r3, #0
     914:	e00a      	b.n	92c <extint_register_callback+0x58>
     916:	1cfb      	adds	r3, r7, #3
     918:	781a      	ldrb	r2, [r3, #0]
     91a:	4b06      	ldr	r3, [pc, #24]	; (934 <extint_register_callback+0x60>)
     91c:	0092      	lsls	r2, r2, #2
     91e:	58d2      	ldr	r2, [r2, r3]
     920:	687b      	ldr	r3, [r7, #4]
     922:	429a      	cmp	r2, r3
     924:	d101      	bne.n	92a <extint_register_callback+0x56>
     926:	2300      	movs	r3, #0
     928:	e000      	b.n	92c <extint_register_callback+0x58>
     92a:	231d      	movs	r3, #29
     92c:	0018      	movs	r0, r3
     92e:	46bd      	mov	sp, r7
     930:	b002      	add	sp, #8
     932:	bd80      	pop	{r7, pc}
     934:	20000cd8 	.word	0x20000cd8

00000938 <extint_chan_enable_callback>:
     938:	b580      	push	{r7, lr}
     93a:	b084      	sub	sp, #16
     93c:	af00      	add	r7, sp, #0
     93e:	0002      	movs	r2, r0
     940:	1dfb      	adds	r3, r7, #7
     942:	701a      	strb	r2, [r3, #0]
     944:	1dbb      	adds	r3, r7, #6
     946:	1c0a      	adds	r2, r1, #0
     948:	701a      	strb	r2, [r3, #0]
     94a:	1dbb      	adds	r3, r7, #6
     94c:	781b      	ldrb	r3, [r3, #0]
     94e:	2b00      	cmp	r3, #0
     950:	d10e      	bne.n	970 <extint_chan_enable_callback+0x38>
     952:	1dfb      	adds	r3, r7, #7
     954:	781b      	ldrb	r3, [r3, #0]
     956:	0018      	movs	r0, r3
     958:	4b08      	ldr	r3, [pc, #32]	; (97c <extint_chan_enable_callback+0x44>)
     95a:	4798      	blx	r3
     95c:	0003      	movs	r3, r0
     95e:	60fb      	str	r3, [r7, #12]
     960:	1dfb      	adds	r3, r7, #7
     962:	781b      	ldrb	r3, [r3, #0]
     964:	2201      	movs	r2, #1
     966:	409a      	lsls	r2, r3
     968:	68fb      	ldr	r3, [r7, #12]
     96a:	611a      	str	r2, [r3, #16]
     96c:	2300      	movs	r3, #0
     96e:	e000      	b.n	972 <extint_chan_enable_callback+0x3a>
     970:	2317      	movs	r3, #23
     972:	0018      	movs	r0, r3
     974:	46bd      	mov	sp, r7
     976:	b004      	add	sp, #16
     978:	bd80      	pop	{r7, pc}
     97a:	46c0      	nop			; (mov r8, r8)
     97c:	00000809 	.word	0x00000809

00000980 <EIC_Handler>:
     980:	b580      	push	{r7, lr}
     982:	af00      	add	r7, sp, #0
     984:	4b15      	ldr	r3, [pc, #84]	; (9dc <EIC_Handler+0x5c>)
     986:	2200      	movs	r2, #0
     988:	701a      	strb	r2, [r3, #0]
     98a:	e020      	b.n	9ce <EIC_Handler+0x4e>
     98c:	4b13      	ldr	r3, [pc, #76]	; (9dc <EIC_Handler+0x5c>)
     98e:	781b      	ldrb	r3, [r3, #0]
     990:	0018      	movs	r0, r3
     992:	4b13      	ldr	r3, [pc, #76]	; (9e0 <EIC_Handler+0x60>)
     994:	4798      	blx	r3
     996:	1e03      	subs	r3, r0, #0
     998:	d013      	beq.n	9c2 <EIC_Handler+0x42>
     99a:	4b10      	ldr	r3, [pc, #64]	; (9dc <EIC_Handler+0x5c>)
     99c:	781b      	ldrb	r3, [r3, #0]
     99e:	0018      	movs	r0, r3
     9a0:	4b10      	ldr	r3, [pc, #64]	; (9e4 <EIC_Handler+0x64>)
     9a2:	4798      	blx	r3
     9a4:	4b0d      	ldr	r3, [pc, #52]	; (9dc <EIC_Handler+0x5c>)
     9a6:	781b      	ldrb	r3, [r3, #0]
     9a8:	001a      	movs	r2, r3
     9aa:	4b0f      	ldr	r3, [pc, #60]	; (9e8 <EIC_Handler+0x68>)
     9ac:	0092      	lsls	r2, r2, #2
     9ae:	58d3      	ldr	r3, [r2, r3]
     9b0:	2b00      	cmp	r3, #0
     9b2:	d006      	beq.n	9c2 <EIC_Handler+0x42>
     9b4:	4b09      	ldr	r3, [pc, #36]	; (9dc <EIC_Handler+0x5c>)
     9b6:	781b      	ldrb	r3, [r3, #0]
     9b8:	001a      	movs	r2, r3
     9ba:	4b0b      	ldr	r3, [pc, #44]	; (9e8 <EIC_Handler+0x68>)
     9bc:	0092      	lsls	r2, r2, #2
     9be:	58d3      	ldr	r3, [r2, r3]
     9c0:	4798      	blx	r3
     9c2:	4b06      	ldr	r3, [pc, #24]	; (9dc <EIC_Handler+0x5c>)
     9c4:	781b      	ldrb	r3, [r3, #0]
     9c6:	3301      	adds	r3, #1
     9c8:	b2da      	uxtb	r2, r3
     9ca:	4b04      	ldr	r3, [pc, #16]	; (9dc <EIC_Handler+0x5c>)
     9cc:	701a      	strb	r2, [r3, #0]
     9ce:	4b03      	ldr	r3, [pc, #12]	; (9dc <EIC_Handler+0x5c>)
     9d0:	781b      	ldrb	r3, [r3, #0]
     9d2:	2b0f      	cmp	r3, #15
     9d4:	d9da      	bls.n	98c <EIC_Handler+0xc>
     9d6:	46c0      	nop			; (mov r8, r8)
     9d8:	46bd      	mov	sp, r7
     9da:	bd80      	pop	{r7, pc}
     9dc:	20000cd4 	.word	0x20000cd4
     9e0:	00000855 	.word	0x00000855
     9e4:	00000899 	.word	0x00000899
     9e8:	20000cd8 	.word	0x20000cd8

000009ec <system_apb_clock_set_mask>:
     9ec:	b580      	push	{r7, lr}
     9ee:	b082      	sub	sp, #8
     9f0:	af00      	add	r7, sp, #0
     9f2:	0002      	movs	r2, r0
     9f4:	6039      	str	r1, [r7, #0]
     9f6:	1dfb      	adds	r3, r7, #7
     9f8:	701a      	strb	r2, [r3, #0]
     9fa:	1dfb      	adds	r3, r7, #7
     9fc:	781b      	ldrb	r3, [r3, #0]
     9fe:	2b04      	cmp	r3, #4
     a00:	d827      	bhi.n	a52 <system_apb_clock_set_mask+0x66>
     a02:	009a      	lsls	r2, r3, #2
     a04:	4b16      	ldr	r3, [pc, #88]	; (a60 <system_apb_clock_set_mask+0x74>)
     a06:	18d3      	adds	r3, r2, r3
     a08:	681b      	ldr	r3, [r3, #0]
     a0a:	469f      	mov	pc, r3
     a0c:	4b15      	ldr	r3, [pc, #84]	; (a64 <system_apb_clock_set_mask+0x78>)
     a0e:	4a15      	ldr	r2, [pc, #84]	; (a64 <system_apb_clock_set_mask+0x78>)
     a10:	6951      	ldr	r1, [r2, #20]
     a12:	683a      	ldr	r2, [r7, #0]
     a14:	430a      	orrs	r2, r1
     a16:	615a      	str	r2, [r3, #20]
     a18:	e01d      	b.n	a56 <system_apb_clock_set_mask+0x6a>
     a1a:	4b12      	ldr	r3, [pc, #72]	; (a64 <system_apb_clock_set_mask+0x78>)
     a1c:	4a11      	ldr	r2, [pc, #68]	; (a64 <system_apb_clock_set_mask+0x78>)
     a1e:	6991      	ldr	r1, [r2, #24]
     a20:	683a      	ldr	r2, [r7, #0]
     a22:	430a      	orrs	r2, r1
     a24:	619a      	str	r2, [r3, #24]
     a26:	e016      	b.n	a56 <system_apb_clock_set_mask+0x6a>
     a28:	4b0e      	ldr	r3, [pc, #56]	; (a64 <system_apb_clock_set_mask+0x78>)
     a2a:	4a0e      	ldr	r2, [pc, #56]	; (a64 <system_apb_clock_set_mask+0x78>)
     a2c:	69d1      	ldr	r1, [r2, #28]
     a2e:	683a      	ldr	r2, [r7, #0]
     a30:	430a      	orrs	r2, r1
     a32:	61da      	str	r2, [r3, #28]
     a34:	e00f      	b.n	a56 <system_apb_clock_set_mask+0x6a>
     a36:	4b0b      	ldr	r3, [pc, #44]	; (a64 <system_apb_clock_set_mask+0x78>)
     a38:	4a0a      	ldr	r2, [pc, #40]	; (a64 <system_apb_clock_set_mask+0x78>)
     a3a:	6a11      	ldr	r1, [r2, #32]
     a3c:	683a      	ldr	r2, [r7, #0]
     a3e:	430a      	orrs	r2, r1
     a40:	621a      	str	r2, [r3, #32]
     a42:	e008      	b.n	a56 <system_apb_clock_set_mask+0x6a>
     a44:	4b07      	ldr	r3, [pc, #28]	; (a64 <system_apb_clock_set_mask+0x78>)
     a46:	4a07      	ldr	r2, [pc, #28]	; (a64 <system_apb_clock_set_mask+0x78>)
     a48:	6a51      	ldr	r1, [r2, #36]	; 0x24
     a4a:	683a      	ldr	r2, [r7, #0]
     a4c:	430a      	orrs	r2, r1
     a4e:	625a      	str	r2, [r3, #36]	; 0x24
     a50:	e001      	b.n	a56 <system_apb_clock_set_mask+0x6a>
     a52:	2317      	movs	r3, #23
     a54:	e000      	b.n	a58 <system_apb_clock_set_mask+0x6c>
     a56:	2300      	movs	r3, #0
     a58:	0018      	movs	r0, r3
     a5a:	46bd      	mov	sp, r7
     a5c:	b002      	add	sp, #8
     a5e:	bd80      	pop	{r7, pc}
     a60:	0001c9b0 	.word	0x0001c9b0
     a64:	40000400 	.word	0x40000400

00000a68 <system_pinmux_get_config_defaults>:
     a68:	b580      	push	{r7, lr}
     a6a:	b082      	sub	sp, #8
     a6c:	af00      	add	r7, sp, #0
     a6e:	6078      	str	r0, [r7, #4]
     a70:	687b      	ldr	r3, [r7, #4]
     a72:	2280      	movs	r2, #128	; 0x80
     a74:	701a      	strb	r2, [r3, #0]
     a76:	687b      	ldr	r3, [r7, #4]
     a78:	2200      	movs	r2, #0
     a7a:	705a      	strb	r2, [r3, #1]
     a7c:	687b      	ldr	r3, [r7, #4]
     a7e:	2201      	movs	r2, #1
     a80:	709a      	strb	r2, [r3, #2]
     a82:	687b      	ldr	r3, [r7, #4]
     a84:	2200      	movs	r2, #0
     a86:	70da      	strb	r2, [r3, #3]
     a88:	46c0      	nop			; (mov r8, r8)
     a8a:	46bd      	mov	sp, r7
     a8c:	b002      	add	sp, #8
     a8e:	bd80      	pop	{r7, pc}

00000a90 <system_interrupt_enable>:
     a90:	b580      	push	{r7, lr}
     a92:	b082      	sub	sp, #8
     a94:	af00      	add	r7, sp, #0
     a96:	0002      	movs	r2, r0
     a98:	1dfb      	adds	r3, r7, #7
     a9a:	701a      	strb	r2, [r3, #0]
     a9c:	4b06      	ldr	r3, [pc, #24]	; (ab8 <system_interrupt_enable+0x28>)
     a9e:	1dfa      	adds	r2, r7, #7
     aa0:	7812      	ldrb	r2, [r2, #0]
     aa2:	0011      	movs	r1, r2
     aa4:	221f      	movs	r2, #31
     aa6:	400a      	ands	r2, r1
     aa8:	2101      	movs	r1, #1
     aaa:	4091      	lsls	r1, r2
     aac:	000a      	movs	r2, r1
     aae:	601a      	str	r2, [r3, #0]
     ab0:	46c0      	nop			; (mov r8, r8)
     ab2:	46bd      	mov	sp, r7
     ab4:	b002      	add	sp, #8
     ab6:	bd80      	pop	{r7, pc}
     ab8:	e000e100 	.word	0xe000e100

00000abc <_extint_get_eic_from_channel>:
     abc:	b580      	push	{r7, lr}
     abe:	b084      	sub	sp, #16
     ac0:	af00      	add	r7, sp, #0
     ac2:	0002      	movs	r2, r0
     ac4:	1dfb      	adds	r3, r7, #7
     ac6:	701a      	strb	r2, [r3, #0]
     ac8:	230f      	movs	r3, #15
     aca:	18fb      	adds	r3, r7, r3
     acc:	1dfa      	adds	r2, r7, #7
     ace:	7812      	ldrb	r2, [r2, #0]
     ad0:	0952      	lsrs	r2, r2, #5
     ad2:	701a      	strb	r2, [r3, #0]
     ad4:	230f      	movs	r3, #15
     ad6:	18fb      	adds	r3, r7, r3
     ad8:	781b      	ldrb	r3, [r3, #0]
     ada:	2b00      	cmp	r3, #0
     adc:	d10c      	bne.n	af8 <_extint_get_eic_from_channel+0x3c>
     ade:	4b09      	ldr	r3, [pc, #36]	; (b04 <_extint_get_eic_from_channel+0x48>)
     ae0:	60bb      	str	r3, [r7, #8]
     ae2:	230f      	movs	r3, #15
     ae4:	18fb      	adds	r3, r7, r3
     ae6:	781b      	ldrb	r3, [r3, #0]
     ae8:	009b      	lsls	r3, r3, #2
     aea:	2210      	movs	r2, #16
     aec:	4694      	mov	ip, r2
     aee:	44bc      	add	ip, r7
     af0:	4463      	add	r3, ip
     af2:	3b08      	subs	r3, #8
     af4:	681b      	ldr	r3, [r3, #0]
     af6:	e000      	b.n	afa <_extint_get_eic_from_channel+0x3e>
     af8:	2300      	movs	r3, #0
     afa:	0018      	movs	r0, r3
     afc:	46bd      	mov	sp, r7
     afe:	b004      	add	sp, #16
     b00:	bd80      	pop	{r7, pc}
     b02:	46c0      	nop			; (mov r8, r8)
     b04:	40002400 	.word	0x40002400

00000b08 <extint_is_syncing>:
     b08:	b580      	push	{r7, lr}
     b0a:	b082      	sub	sp, #8
     b0c:	af00      	add	r7, sp, #0
     b0e:	4b15      	ldr	r3, [pc, #84]	; (b64 <extint_is_syncing+0x5c>)
     b10:	603b      	str	r3, [r7, #0]
     b12:	2300      	movs	r3, #0
     b14:	607b      	str	r3, [r7, #4]
     b16:	e01c      	b.n	b52 <extint_is_syncing+0x4a>
     b18:	687b      	ldr	r3, [r7, #4]
     b1a:	009b      	lsls	r3, r3, #2
     b1c:	2208      	movs	r2, #8
     b1e:	4694      	mov	ip, r2
     b20:	44bc      	add	ip, r7
     b22:	4463      	add	r3, ip
     b24:	3b08      	subs	r3, #8
     b26:	681b      	ldr	r3, [r3, #0]
     b28:	685b      	ldr	r3, [r3, #4]
     b2a:	2202      	movs	r2, #2
     b2c:	4013      	ands	r3, r2
     b2e:	d10b      	bne.n	b48 <extint_is_syncing+0x40>
     b30:	687b      	ldr	r3, [r7, #4]
     b32:	009b      	lsls	r3, r3, #2
     b34:	2208      	movs	r2, #8
     b36:	4694      	mov	ip, r2
     b38:	44bc      	add	ip, r7
     b3a:	4463      	add	r3, ip
     b3c:	3b08      	subs	r3, #8
     b3e:	681b      	ldr	r3, [r3, #0]
     b40:	685b      	ldr	r3, [r3, #4]
     b42:	2201      	movs	r2, #1
     b44:	4013      	ands	r3, r2
     b46:	d001      	beq.n	b4c <extint_is_syncing+0x44>
     b48:	2301      	movs	r3, #1
     b4a:	e006      	b.n	b5a <extint_is_syncing+0x52>
     b4c:	687b      	ldr	r3, [r7, #4]
     b4e:	3301      	adds	r3, #1
     b50:	607b      	str	r3, [r7, #4]
     b52:	687b      	ldr	r3, [r7, #4]
     b54:	2b00      	cmp	r3, #0
     b56:	d0df      	beq.n	b18 <extint_is_syncing+0x10>
     b58:	2300      	movs	r3, #0
     b5a:	0018      	movs	r0, r3
     b5c:	46bd      	mov	sp, r7
     b5e:	b002      	add	sp, #8
     b60:	bd80      	pop	{r7, pc}
     b62:	46c0      	nop			; (mov r8, r8)
     b64:	40002400 	.word	0x40002400

00000b68 <_system_extint_init>:
     b68:	b580      	push	{r7, lr}
     b6a:	b084      	sub	sp, #16
     b6c:	af00      	add	r7, sp, #0
     b6e:	4b2e      	ldr	r3, [pc, #184]	; (c28 <_system_extint_init+0xc0>)
     b70:	603b      	str	r3, [r7, #0]
     b72:	2380      	movs	r3, #128	; 0x80
     b74:	009b      	lsls	r3, r3, #2
     b76:	0019      	movs	r1, r3
     b78:	2000      	movs	r0, #0
     b7a:	4b2c      	ldr	r3, [pc, #176]	; (c2c <_system_extint_init+0xc4>)
     b7c:	4798      	blx	r3
     b7e:	2300      	movs	r3, #0
     b80:	60fb      	str	r3, [r7, #12]
     b82:	e018      	b.n	bb6 <_system_extint_init+0x4e>
     b84:	68fb      	ldr	r3, [r7, #12]
     b86:	009b      	lsls	r3, r3, #2
     b88:	2210      	movs	r2, #16
     b8a:	4694      	mov	ip, r2
     b8c:	44bc      	add	ip, r7
     b8e:	4463      	add	r3, ip
     b90:	3b10      	subs	r3, #16
     b92:	681a      	ldr	r2, [r3, #0]
     b94:	68fb      	ldr	r3, [r7, #12]
     b96:	009b      	lsls	r3, r3, #2
     b98:	2110      	movs	r1, #16
     b9a:	468c      	mov	ip, r1
     b9c:	44bc      	add	ip, r7
     b9e:	4463      	add	r3, ip
     ba0:	3b10      	subs	r3, #16
     ba2:	681b      	ldr	r3, [r3, #0]
     ba4:	781b      	ldrb	r3, [r3, #0]
     ba6:	b2db      	uxtb	r3, r3
     ba8:	2101      	movs	r1, #1
     baa:	430b      	orrs	r3, r1
     bac:	b2db      	uxtb	r3, r3
     bae:	7013      	strb	r3, [r2, #0]
     bb0:	68fb      	ldr	r3, [r7, #12]
     bb2:	3301      	adds	r3, #1
     bb4:	60fb      	str	r3, [r7, #12]
     bb6:	68fb      	ldr	r3, [r7, #12]
     bb8:	2b00      	cmp	r3, #0
     bba:	d0e3      	beq.n	b84 <_system_extint_init+0x1c>
     bbc:	46c0      	nop			; (mov r8, r8)
     bbe:	4b1c      	ldr	r3, [pc, #112]	; (c30 <_system_extint_init+0xc8>)
     bc0:	4798      	blx	r3
     bc2:	1e03      	subs	r3, r0, #0
     bc4:	d1fb      	bne.n	bbe <_system_extint_init+0x56>
     bc6:	2300      	movs	r3, #0
     bc8:	60bb      	str	r3, [r7, #8]
     bca:	e00e      	b.n	bea <_system_extint_init+0x82>
     bcc:	68bb      	ldr	r3, [r7, #8]
     bce:	009b      	lsls	r3, r3, #2
     bd0:	2210      	movs	r2, #16
     bd2:	4694      	mov	ip, r2
     bd4:	44bc      	add	ip, r7
     bd6:	4463      	add	r3, ip
     bd8:	3b10      	subs	r3, #16
     bda:	681a      	ldr	r2, [r3, #0]
     bdc:	7813      	ldrb	r3, [r2, #0]
     bde:	2110      	movs	r1, #16
     be0:	430b      	orrs	r3, r1
     be2:	7013      	strb	r3, [r2, #0]
     be4:	68bb      	ldr	r3, [r7, #8]
     be6:	3301      	adds	r3, #1
     be8:	60bb      	str	r3, [r7, #8]
     bea:	68bb      	ldr	r3, [r7, #8]
     bec:	2b00      	cmp	r3, #0
     bee:	d0ed      	beq.n	bcc <_system_extint_init+0x64>
     bf0:	1dfb      	adds	r3, r7, #7
     bf2:	2200      	movs	r2, #0
     bf4:	701a      	strb	r2, [r3, #0]
     bf6:	e00a      	b.n	c0e <_system_extint_init+0xa6>
     bf8:	1dfb      	adds	r3, r7, #7
     bfa:	781a      	ldrb	r2, [r3, #0]
     bfc:	4b0d      	ldr	r3, [pc, #52]	; (c34 <_system_extint_init+0xcc>)
     bfe:	0092      	lsls	r2, r2, #2
     c00:	2100      	movs	r1, #0
     c02:	50d1      	str	r1, [r2, r3]
     c04:	1dfb      	adds	r3, r7, #7
     c06:	781a      	ldrb	r2, [r3, #0]
     c08:	1dfb      	adds	r3, r7, #7
     c0a:	3201      	adds	r2, #1
     c0c:	701a      	strb	r2, [r3, #0]
     c0e:	1dfb      	adds	r3, r7, #7
     c10:	781b      	ldrb	r3, [r3, #0]
     c12:	2b0f      	cmp	r3, #15
     c14:	d9f0      	bls.n	bf8 <_system_extint_init+0x90>
     c16:	2003      	movs	r0, #3
     c18:	4b07      	ldr	r3, [pc, #28]	; (c38 <_system_extint_init+0xd0>)
     c1a:	4798      	blx	r3
     c1c:	4b07      	ldr	r3, [pc, #28]	; (c3c <_system_extint_init+0xd4>)
     c1e:	4798      	blx	r3
     c20:	46c0      	nop			; (mov r8, r8)
     c22:	46bd      	mov	sp, r7
     c24:	b004      	add	sp, #16
     c26:	bd80      	pop	{r7, pc}
     c28:	40002400 	.word	0x40002400
     c2c:	000009ed 	.word	0x000009ed
     c30:	00000b09 	.word	0x00000b09
     c34:	20000cd8 	.word	0x20000cd8
     c38:	00000a91 	.word	0x00000a91
     c3c:	00000c41 	.word	0x00000c41

00000c40 <_extint_enable>:
     c40:	b580      	push	{r7, lr}
     c42:	b082      	sub	sp, #8
     c44:	af00      	add	r7, sp, #0
     c46:	4b15      	ldr	r3, [pc, #84]	; (c9c <_extint_enable+0x5c>)
     c48:	603b      	str	r3, [r7, #0]
     c4a:	2300      	movs	r3, #0
     c4c:	607b      	str	r3, [r7, #4]
     c4e:	e018      	b.n	c82 <_extint_enable+0x42>
     c50:	687b      	ldr	r3, [r7, #4]
     c52:	009b      	lsls	r3, r3, #2
     c54:	2208      	movs	r2, #8
     c56:	4694      	mov	ip, r2
     c58:	44bc      	add	ip, r7
     c5a:	4463      	add	r3, ip
     c5c:	3b08      	subs	r3, #8
     c5e:	681a      	ldr	r2, [r3, #0]
     c60:	687b      	ldr	r3, [r7, #4]
     c62:	009b      	lsls	r3, r3, #2
     c64:	2108      	movs	r1, #8
     c66:	468c      	mov	ip, r1
     c68:	44bc      	add	ip, r7
     c6a:	4463      	add	r3, ip
     c6c:	3b08      	subs	r3, #8
     c6e:	681b      	ldr	r3, [r3, #0]
     c70:	781b      	ldrb	r3, [r3, #0]
     c72:	b2db      	uxtb	r3, r3
     c74:	2102      	movs	r1, #2
     c76:	430b      	orrs	r3, r1
     c78:	b2db      	uxtb	r3, r3
     c7a:	7013      	strb	r3, [r2, #0]
     c7c:	687b      	ldr	r3, [r7, #4]
     c7e:	3301      	adds	r3, #1
     c80:	607b      	str	r3, [r7, #4]
     c82:	687b      	ldr	r3, [r7, #4]
     c84:	2b00      	cmp	r3, #0
     c86:	d0e3      	beq.n	c50 <_extint_enable+0x10>
     c88:	46c0      	nop			; (mov r8, r8)
     c8a:	4b05      	ldr	r3, [pc, #20]	; (ca0 <_extint_enable+0x60>)
     c8c:	4798      	blx	r3
     c8e:	1e03      	subs	r3, r0, #0
     c90:	d1fb      	bne.n	c8a <_extint_enable+0x4a>
     c92:	46c0      	nop			; (mov r8, r8)
     c94:	46bd      	mov	sp, r7
     c96:	b002      	add	sp, #8
     c98:	bd80      	pop	{r7, pc}
     c9a:	46c0      	nop			; (mov r8, r8)
     c9c:	40002400 	.word	0x40002400
     ca0:	00000b09 	.word	0x00000b09

00000ca4 <_extint_disable>:
     ca4:	b580      	push	{r7, lr}
     ca6:	b082      	sub	sp, #8
     ca8:	af00      	add	r7, sp, #0
     caa:	4b15      	ldr	r3, [pc, #84]	; (d00 <_extint_disable+0x5c>)
     cac:	603b      	str	r3, [r7, #0]
     cae:	2300      	movs	r3, #0
     cb0:	607b      	str	r3, [r7, #4]
     cb2:	e018      	b.n	ce6 <_extint_disable+0x42>
     cb4:	687b      	ldr	r3, [r7, #4]
     cb6:	009b      	lsls	r3, r3, #2
     cb8:	2208      	movs	r2, #8
     cba:	4694      	mov	ip, r2
     cbc:	44bc      	add	ip, r7
     cbe:	4463      	add	r3, ip
     cc0:	3b08      	subs	r3, #8
     cc2:	681a      	ldr	r2, [r3, #0]
     cc4:	687b      	ldr	r3, [r7, #4]
     cc6:	009b      	lsls	r3, r3, #2
     cc8:	2108      	movs	r1, #8
     cca:	468c      	mov	ip, r1
     ccc:	44bc      	add	ip, r7
     cce:	4463      	add	r3, ip
     cd0:	3b08      	subs	r3, #8
     cd2:	681b      	ldr	r3, [r3, #0]
     cd4:	781b      	ldrb	r3, [r3, #0]
     cd6:	b2db      	uxtb	r3, r3
     cd8:	2102      	movs	r1, #2
     cda:	438b      	bics	r3, r1
     cdc:	b2db      	uxtb	r3, r3
     cde:	7013      	strb	r3, [r2, #0]
     ce0:	687b      	ldr	r3, [r7, #4]
     ce2:	3301      	adds	r3, #1
     ce4:	607b      	str	r3, [r7, #4]
     ce6:	687b      	ldr	r3, [r7, #4]
     ce8:	2b00      	cmp	r3, #0
     cea:	d0e3      	beq.n	cb4 <_extint_disable+0x10>
     cec:	46c0      	nop			; (mov r8, r8)
     cee:	4b05      	ldr	r3, [pc, #20]	; (d04 <_extint_disable+0x60>)
     cf0:	4798      	blx	r3
     cf2:	1e03      	subs	r3, r0, #0
     cf4:	d1fb      	bne.n	cee <_extint_disable+0x4a>
     cf6:	46c0      	nop			; (mov r8, r8)
     cf8:	46bd      	mov	sp, r7
     cfa:	b002      	add	sp, #8
     cfc:	bd80      	pop	{r7, pc}
     cfe:	46c0      	nop			; (mov r8, r8)
     d00:	40002400 	.word	0x40002400
     d04:	00000b09 	.word	0x00000b09

00000d08 <extint_chan_get_config_defaults>:
     d08:	b580      	push	{r7, lr}
     d0a:	b082      	sub	sp, #8
     d0c:	af00      	add	r7, sp, #0
     d0e:	6078      	str	r0, [r7, #4]
     d10:	687b      	ldr	r3, [r7, #4]
     d12:	2200      	movs	r2, #0
     d14:	601a      	str	r2, [r3, #0]
     d16:	687b      	ldr	r3, [r7, #4]
     d18:	2200      	movs	r2, #0
     d1a:	605a      	str	r2, [r3, #4]
     d1c:	687b      	ldr	r3, [r7, #4]
     d1e:	2201      	movs	r2, #1
     d20:	721a      	strb	r2, [r3, #8]
     d22:	687b      	ldr	r3, [r7, #4]
     d24:	2200      	movs	r2, #0
     d26:	729a      	strb	r2, [r3, #10]
     d28:	687b      	ldr	r3, [r7, #4]
     d2a:	2202      	movs	r2, #2
     d2c:	72da      	strb	r2, [r3, #11]
     d2e:	687b      	ldr	r3, [r7, #4]
     d30:	2200      	movs	r2, #0
     d32:	725a      	strb	r2, [r3, #9]
     d34:	46c0      	nop			; (mov r8, r8)
     d36:	46bd      	mov	sp, r7
     d38:	b002      	add	sp, #8
     d3a:	bd80      	pop	{r7, pc}

00000d3c <extint_chan_set_config>:
     d3c:	b580      	push	{r7, lr}
     d3e:	b086      	sub	sp, #24
     d40:	af00      	add	r7, sp, #0
     d42:	0002      	movs	r2, r0
     d44:	6039      	str	r1, [r7, #0]
     d46:	1dfb      	adds	r3, r7, #7
     d48:	701a      	strb	r2, [r3, #0]
     d4a:	4b3c      	ldr	r3, [pc, #240]	; (e3c <extint_chan_set_config+0x100>)
     d4c:	4798      	blx	r3
     d4e:	2308      	movs	r3, #8
     d50:	18fb      	adds	r3, r7, r3
     d52:	0018      	movs	r0, r3
     d54:	4b3a      	ldr	r3, [pc, #232]	; (e40 <extint_chan_set_config+0x104>)
     d56:	4798      	blx	r3
     d58:	683b      	ldr	r3, [r7, #0]
     d5a:	685b      	ldr	r3, [r3, #4]
     d5c:	b2da      	uxtb	r2, r3
     d5e:	2308      	movs	r3, #8
     d60:	18fb      	adds	r3, r7, r3
     d62:	701a      	strb	r2, [r3, #0]
     d64:	2308      	movs	r3, #8
     d66:	18fb      	adds	r3, r7, r3
     d68:	2200      	movs	r2, #0
     d6a:	705a      	strb	r2, [r3, #1]
     d6c:	683b      	ldr	r3, [r7, #0]
     d6e:	7a1a      	ldrb	r2, [r3, #8]
     d70:	2308      	movs	r3, #8
     d72:	18fb      	adds	r3, r7, r3
     d74:	709a      	strb	r2, [r3, #2]
     d76:	683b      	ldr	r3, [r7, #0]
     d78:	681b      	ldr	r3, [r3, #0]
     d7a:	b2db      	uxtb	r3, r3
     d7c:	2208      	movs	r2, #8
     d7e:	18ba      	adds	r2, r7, r2
     d80:	0011      	movs	r1, r2
     d82:	0018      	movs	r0, r3
     d84:	4b2f      	ldr	r3, [pc, #188]	; (e44 <extint_chan_set_config+0x108>)
     d86:	4798      	blx	r3
     d88:	1dfb      	adds	r3, r7, #7
     d8a:	781b      	ldrb	r3, [r3, #0]
     d8c:	0018      	movs	r0, r3
     d8e:	4b2e      	ldr	r3, [pc, #184]	; (e48 <extint_chan_set_config+0x10c>)
     d90:	4798      	blx	r3
     d92:	0003      	movs	r3, r0
     d94:	613b      	str	r3, [r7, #16]
     d96:	1dfb      	adds	r3, r7, #7
     d98:	781b      	ldrb	r3, [r3, #0]
     d9a:	2207      	movs	r2, #7
     d9c:	4013      	ands	r3, r2
     d9e:	009b      	lsls	r3, r3, #2
     da0:	60fb      	str	r3, [r7, #12]
     da2:	683b      	ldr	r3, [r7, #0]
     da4:	7adb      	ldrb	r3, [r3, #11]
     da6:	617b      	str	r3, [r7, #20]
     da8:	683b      	ldr	r3, [r7, #0]
     daa:	7a9b      	ldrb	r3, [r3, #10]
     dac:	2b00      	cmp	r3, #0
     dae:	d003      	beq.n	db8 <extint_chan_set_config+0x7c>
     db0:	697b      	ldr	r3, [r7, #20]
     db2:	2208      	movs	r2, #8
     db4:	4313      	orrs	r3, r2
     db6:	617b      	str	r3, [r7, #20]
     db8:	1dfb      	adds	r3, r7, #7
     dba:	781b      	ldrb	r3, [r3, #0]
     dbc:	08db      	lsrs	r3, r3, #3
     dbe:	b2db      	uxtb	r3, r3
     dc0:	0018      	movs	r0, r3
     dc2:	1dfb      	adds	r3, r7, #7
     dc4:	781b      	ldrb	r3, [r3, #0]
     dc6:	08db      	lsrs	r3, r3, #3
     dc8:	b2db      	uxtb	r3, r3
     dca:	693a      	ldr	r2, [r7, #16]
     dcc:	3306      	adds	r3, #6
     dce:	009b      	lsls	r3, r3, #2
     dd0:	18d3      	adds	r3, r2, r3
     dd2:	3304      	adds	r3, #4
     dd4:	681b      	ldr	r3, [r3, #0]
     dd6:	210f      	movs	r1, #15
     dd8:	68fa      	ldr	r2, [r7, #12]
     dda:	4091      	lsls	r1, r2
     ddc:	000a      	movs	r2, r1
     dde:	43d2      	mvns	r2, r2
     de0:	401a      	ands	r2, r3
     de2:	6979      	ldr	r1, [r7, #20]
     de4:	68fb      	ldr	r3, [r7, #12]
     de6:	4099      	lsls	r1, r3
     de8:	000b      	movs	r3, r1
     dea:	431a      	orrs	r2, r3
     dec:	6939      	ldr	r1, [r7, #16]
     dee:	1d83      	adds	r3, r0, #6
     df0:	009b      	lsls	r3, r3, #2
     df2:	18cb      	adds	r3, r1, r3
     df4:	3304      	adds	r3, #4
     df6:	601a      	str	r2, [r3, #0]
     df8:	683b      	ldr	r3, [r7, #0]
     dfa:	7a5b      	ldrb	r3, [r3, #9]
     dfc:	2b00      	cmp	r3, #0
     dfe:	d00a      	beq.n	e16 <extint_chan_set_config+0xda>
     e00:	693b      	ldr	r3, [r7, #16]
     e02:	699a      	ldr	r2, [r3, #24]
     e04:	1dfb      	adds	r3, r7, #7
     e06:	781b      	ldrb	r3, [r3, #0]
     e08:	2101      	movs	r1, #1
     e0a:	4099      	lsls	r1, r3
     e0c:	000b      	movs	r3, r1
     e0e:	431a      	orrs	r2, r3
     e10:	693b      	ldr	r3, [r7, #16]
     e12:	619a      	str	r2, [r3, #24]
     e14:	e00c      	b.n	e30 <extint_chan_set_config+0xf4>
     e16:	693b      	ldr	r3, [r7, #16]
     e18:	699b      	ldr	r3, [r3, #24]
     e1a:	1dfa      	adds	r2, r7, #7
     e1c:	7812      	ldrb	r2, [r2, #0]
     e1e:	2101      	movs	r1, #1
     e20:	4091      	lsls	r1, r2
     e22:	000a      	movs	r2, r1
     e24:	43d2      	mvns	r2, r2
     e26:	4013      	ands	r3, r2
     e28:	041b      	lsls	r3, r3, #16
     e2a:	0c1a      	lsrs	r2, r3, #16
     e2c:	693b      	ldr	r3, [r7, #16]
     e2e:	619a      	str	r2, [r3, #24]
     e30:	4b06      	ldr	r3, [pc, #24]	; (e4c <extint_chan_set_config+0x110>)
     e32:	4798      	blx	r3
     e34:	46c0      	nop			; (mov r8, r8)
     e36:	46bd      	mov	sp, r7
     e38:	b006      	add	sp, #24
     e3a:	bd80      	pop	{r7, pc}
     e3c:	00000ca5 	.word	0x00000ca5
     e40:	00000a69 	.word	0x00000a69
     e44:	0000597d 	.word	0x0000597d
     e48:	00000abd 	.word	0x00000abd
     e4c:	00000c41 	.word	0x00000c41

00000e50 <nvm_is_ready>:
     e50:	b580      	push	{r7, lr}
     e52:	b082      	sub	sp, #8
     e54:	af00      	add	r7, sp, #0
     e56:	4b07      	ldr	r3, [pc, #28]	; (e74 <nvm_is_ready+0x24>)
     e58:	607b      	str	r3, [r7, #4]
     e5a:	687b      	ldr	r3, [r7, #4]
     e5c:	7d1b      	ldrb	r3, [r3, #20]
     e5e:	b2db      	uxtb	r3, r3
     e60:	001a      	movs	r2, r3
     e62:	2301      	movs	r3, #1
     e64:	4013      	ands	r3, r2
     e66:	1e5a      	subs	r2, r3, #1
     e68:	4193      	sbcs	r3, r2
     e6a:	b2db      	uxtb	r3, r3
     e6c:	0018      	movs	r0, r3
     e6e:	46bd      	mov	sp, r7
     e70:	b002      	add	sp, #8
     e72:	bd80      	pop	{r7, pc}
     e74:	41004000 	.word	0x41004000

00000e78 <system_apb_clock_set_mask>:
     e78:	b580      	push	{r7, lr}
     e7a:	b082      	sub	sp, #8
     e7c:	af00      	add	r7, sp, #0
     e7e:	0002      	movs	r2, r0
     e80:	6039      	str	r1, [r7, #0]
     e82:	1dfb      	adds	r3, r7, #7
     e84:	701a      	strb	r2, [r3, #0]
     e86:	1dfb      	adds	r3, r7, #7
     e88:	781b      	ldrb	r3, [r3, #0]
     e8a:	2b04      	cmp	r3, #4
     e8c:	d827      	bhi.n	ede <system_apb_clock_set_mask+0x66>
     e8e:	009a      	lsls	r2, r3, #2
     e90:	4b16      	ldr	r3, [pc, #88]	; (eec <system_apb_clock_set_mask+0x74>)
     e92:	18d3      	adds	r3, r2, r3
     e94:	681b      	ldr	r3, [r3, #0]
     e96:	469f      	mov	pc, r3
     e98:	4b15      	ldr	r3, [pc, #84]	; (ef0 <system_apb_clock_set_mask+0x78>)
     e9a:	4a15      	ldr	r2, [pc, #84]	; (ef0 <system_apb_clock_set_mask+0x78>)
     e9c:	6951      	ldr	r1, [r2, #20]
     e9e:	683a      	ldr	r2, [r7, #0]
     ea0:	430a      	orrs	r2, r1
     ea2:	615a      	str	r2, [r3, #20]
     ea4:	e01d      	b.n	ee2 <system_apb_clock_set_mask+0x6a>
     ea6:	4b12      	ldr	r3, [pc, #72]	; (ef0 <system_apb_clock_set_mask+0x78>)
     ea8:	4a11      	ldr	r2, [pc, #68]	; (ef0 <system_apb_clock_set_mask+0x78>)
     eaa:	6991      	ldr	r1, [r2, #24]
     eac:	683a      	ldr	r2, [r7, #0]
     eae:	430a      	orrs	r2, r1
     eb0:	619a      	str	r2, [r3, #24]
     eb2:	e016      	b.n	ee2 <system_apb_clock_set_mask+0x6a>
     eb4:	4b0e      	ldr	r3, [pc, #56]	; (ef0 <system_apb_clock_set_mask+0x78>)
     eb6:	4a0e      	ldr	r2, [pc, #56]	; (ef0 <system_apb_clock_set_mask+0x78>)
     eb8:	69d1      	ldr	r1, [r2, #28]
     eba:	683a      	ldr	r2, [r7, #0]
     ebc:	430a      	orrs	r2, r1
     ebe:	61da      	str	r2, [r3, #28]
     ec0:	e00f      	b.n	ee2 <system_apb_clock_set_mask+0x6a>
     ec2:	4b0b      	ldr	r3, [pc, #44]	; (ef0 <system_apb_clock_set_mask+0x78>)
     ec4:	4a0a      	ldr	r2, [pc, #40]	; (ef0 <system_apb_clock_set_mask+0x78>)
     ec6:	6a11      	ldr	r1, [r2, #32]
     ec8:	683a      	ldr	r2, [r7, #0]
     eca:	430a      	orrs	r2, r1
     ecc:	621a      	str	r2, [r3, #32]
     ece:	e008      	b.n	ee2 <system_apb_clock_set_mask+0x6a>
     ed0:	4b07      	ldr	r3, [pc, #28]	; (ef0 <system_apb_clock_set_mask+0x78>)
     ed2:	4a07      	ldr	r2, [pc, #28]	; (ef0 <system_apb_clock_set_mask+0x78>)
     ed4:	6a51      	ldr	r1, [r2, #36]	; 0x24
     ed6:	683a      	ldr	r2, [r7, #0]
     ed8:	430a      	orrs	r2, r1
     eda:	625a      	str	r2, [r3, #36]	; 0x24
     edc:	e001      	b.n	ee2 <system_apb_clock_set_mask+0x6a>
     ede:	2317      	movs	r3, #23
     ee0:	e000      	b.n	ee4 <system_apb_clock_set_mask+0x6c>
     ee2:	2300      	movs	r3, #0
     ee4:	0018      	movs	r0, r3
     ee6:	46bd      	mov	sp, r7
     ee8:	b002      	add	sp, #8
     eea:	bd80      	pop	{r7, pc}
     eec:	0001c9c4 	.word	0x0001c9c4
     ef0:	40000400 	.word	0x40000400

00000ef4 <system_interrupt_enter_critical_section>:
     ef4:	b580      	push	{r7, lr}
     ef6:	af00      	add	r7, sp, #0
     ef8:	4b02      	ldr	r3, [pc, #8]	; (f04 <system_interrupt_enter_critical_section+0x10>)
     efa:	4798      	blx	r3
     efc:	46c0      	nop			; (mov r8, r8)
     efe:	46bd      	mov	sp, r7
     f00:	bd80      	pop	{r7, pc}
     f02:	46c0      	nop			; (mov r8, r8)
     f04:	000001d1 	.word	0x000001d1

00000f08 <system_interrupt_leave_critical_section>:
     f08:	b580      	push	{r7, lr}
     f0a:	af00      	add	r7, sp, #0
     f0c:	4b02      	ldr	r3, [pc, #8]	; (f18 <system_interrupt_leave_critical_section+0x10>)
     f0e:	4798      	blx	r3
     f10:	46c0      	nop			; (mov r8, r8)
     f12:	46bd      	mov	sp, r7
     f14:	bd80      	pop	{r7, pc}
     f16:	46c0      	nop			; (mov r8, r8)
     f18:	00000225 	.word	0x00000225

00000f1c <nvm_set_config>:
     f1c:	b580      	push	{r7, lr}
     f1e:	b084      	sub	sp, #16
     f20:	af00      	add	r7, sp, #0
     f22:	6078      	str	r0, [r7, #4]
     f24:	4b2f      	ldr	r3, [pc, #188]	; (fe4 <nvm_set_config+0xc8>)
     f26:	60fb      	str	r3, [r7, #12]
     f28:	2104      	movs	r1, #4
     f2a:	2001      	movs	r0, #1
     f2c:	4b2e      	ldr	r3, [pc, #184]	; (fe8 <nvm_set_config+0xcc>)
     f2e:	4798      	blx	r3
     f30:	68fb      	ldr	r3, [r7, #12]
     f32:	2220      	movs	r2, #32
     f34:	32ff      	adds	r2, #255	; 0xff
     f36:	831a      	strh	r2, [r3, #24]
     f38:	4b2c      	ldr	r3, [pc, #176]	; (fec <nvm_set_config+0xd0>)
     f3a:	4798      	blx	r3
     f3c:	0003      	movs	r3, r0
     f3e:	001a      	movs	r2, r3
     f40:	2301      	movs	r3, #1
     f42:	4053      	eors	r3, r2
     f44:	b2db      	uxtb	r3, r3
     f46:	2b00      	cmp	r3, #0
     f48:	d001      	beq.n	f4e <nvm_set_config+0x32>
     f4a:	2305      	movs	r3, #5
     f4c:	e045      	b.n	fda <nvm_set_config+0xbe>
     f4e:	687b      	ldr	r3, [r7, #4]
     f50:	781b      	ldrb	r3, [r3, #0]
     f52:	021b      	lsls	r3, r3, #8
     f54:	001a      	movs	r2, r3
     f56:	23c0      	movs	r3, #192	; 0xc0
     f58:	009b      	lsls	r3, r3, #2
     f5a:	401a      	ands	r2, r3
     f5c:	687b      	ldr	r3, [r7, #4]
     f5e:	785b      	ldrb	r3, [r3, #1]
     f60:	01db      	lsls	r3, r3, #7
     f62:	0019      	movs	r1, r3
     f64:	23ff      	movs	r3, #255	; 0xff
     f66:	400b      	ands	r3, r1
     f68:	431a      	orrs	r2, r3
     f6a:	687b      	ldr	r3, [r7, #4]
     f6c:	789b      	ldrb	r3, [r3, #2]
     f6e:	005b      	lsls	r3, r3, #1
     f70:	0019      	movs	r1, r3
     f72:	231e      	movs	r3, #30
     f74:	400b      	ands	r3, r1
     f76:	431a      	orrs	r2, r3
     f78:	687b      	ldr	r3, [r7, #4]
     f7a:	78db      	ldrb	r3, [r3, #3]
     f7c:	049b      	lsls	r3, r3, #18
     f7e:	0019      	movs	r1, r3
     f80:	2380      	movs	r3, #128	; 0x80
     f82:	02db      	lsls	r3, r3, #11
     f84:	400b      	ands	r3, r1
     f86:	431a      	orrs	r2, r3
     f88:	687b      	ldr	r3, [r7, #4]
     f8a:	791b      	ldrb	r3, [r3, #4]
     f8c:	041b      	lsls	r3, r3, #16
     f8e:	0019      	movs	r1, r3
     f90:	23c0      	movs	r3, #192	; 0xc0
     f92:	029b      	lsls	r3, r3, #10
     f94:	400b      	ands	r3, r1
     f96:	431a      	orrs	r2, r3
     f98:	68fb      	ldr	r3, [r7, #12]
     f9a:	605a      	str	r2, [r3, #4]
     f9c:	68fb      	ldr	r3, [r7, #12]
     f9e:	689b      	ldr	r3, [r3, #8]
     fa0:	035b      	lsls	r3, r3, #13
     fa2:	0f5b      	lsrs	r3, r3, #29
     fa4:	b2db      	uxtb	r3, r3
     fa6:	001a      	movs	r2, r3
     fa8:	2308      	movs	r3, #8
     faa:	4093      	lsls	r3, r2
     fac:	b29a      	uxth	r2, r3
     fae:	4b10      	ldr	r3, [pc, #64]	; (ff0 <nvm_set_config+0xd4>)
     fb0:	801a      	strh	r2, [r3, #0]
     fb2:	68fb      	ldr	r3, [r7, #12]
     fb4:	689b      	ldr	r3, [r3, #8]
     fb6:	b29a      	uxth	r2, r3
     fb8:	4b0d      	ldr	r3, [pc, #52]	; (ff0 <nvm_set_config+0xd4>)
     fba:	805a      	strh	r2, [r3, #2]
     fbc:	687b      	ldr	r3, [r7, #4]
     fbe:	785a      	ldrb	r2, [r3, #1]
     fc0:	4b0b      	ldr	r3, [pc, #44]	; (ff0 <nvm_set_config+0xd4>)
     fc2:	711a      	strb	r2, [r3, #4]
     fc4:	68fb      	ldr	r3, [r7, #12]
     fc6:	8b1b      	ldrh	r3, [r3, #24]
     fc8:	b29b      	uxth	r3, r3
     fca:	001a      	movs	r2, r3
     fcc:	2380      	movs	r3, #128	; 0x80
     fce:	005b      	lsls	r3, r3, #1
     fd0:	4013      	ands	r3, r2
     fd2:	d001      	beq.n	fd8 <nvm_set_config+0xbc>
     fd4:	2310      	movs	r3, #16
     fd6:	e000      	b.n	fda <nvm_set_config+0xbe>
     fd8:	2300      	movs	r3, #0
     fda:	0018      	movs	r0, r3
     fdc:	46bd      	mov	sp, r7
     fde:	b004      	add	sp, #16
     fe0:	bd80      	pop	{r7, pc}
     fe2:	46c0      	nop			; (mov r8, r8)
     fe4:	41004000 	.word	0x41004000
     fe8:	00000e79 	.word	0x00000e79
     fec:	00000e51 	.word	0x00000e51
     ff0:	20000a0c 	.word	0x20000a0c

00000ff4 <nvm_execute_command>:
     ff4:	b580      	push	{r7, lr}
     ff6:	b086      	sub	sp, #24
     ff8:	af00      	add	r7, sp, #0
     ffa:	60b9      	str	r1, [r7, #8]
     ffc:	607a      	str	r2, [r7, #4]
     ffe:	230f      	movs	r3, #15
    1000:	18fb      	adds	r3, r7, r3
    1002:	1c02      	adds	r2, r0, #0
    1004:	701a      	strb	r2, [r3, #0]
    1006:	4b4e      	ldr	r3, [pc, #312]	; (1140 <nvm_execute_command+0x14c>)
    1008:	881b      	ldrh	r3, [r3, #0]
    100a:	001a      	movs	r2, r3
    100c:	4b4c      	ldr	r3, [pc, #304]	; (1140 <nvm_execute_command+0x14c>)
    100e:	885b      	ldrh	r3, [r3, #2]
    1010:	435a      	muls	r2, r3
    1012:	68bb      	ldr	r3, [r7, #8]
    1014:	429a      	cmp	r2, r3
    1016:	d211      	bcs.n	103c <nvm_execute_command+0x48>
    1018:	68bb      	ldr	r3, [r7, #8]
    101a:	4a4a      	ldr	r2, [pc, #296]	; (1144 <nvm_execute_command+0x150>)
    101c:	4293      	cmp	r3, r2
    101e:	d903      	bls.n	1028 <nvm_execute_command+0x34>
    1020:	68bb      	ldr	r3, [r7, #8]
    1022:	4a49      	ldr	r2, [pc, #292]	; (1148 <nvm_execute_command+0x154>)
    1024:	4293      	cmp	r3, r2
    1026:	d909      	bls.n	103c <nvm_execute_command+0x48>
    1028:	68bb      	ldr	r3, [r7, #8]
    102a:	4a48      	ldr	r2, [pc, #288]	; (114c <nvm_execute_command+0x158>)
    102c:	4293      	cmp	r3, r2
    102e:	d803      	bhi.n	1038 <nvm_execute_command+0x44>
    1030:	68bb      	ldr	r3, [r7, #8]
    1032:	4a47      	ldr	r2, [pc, #284]	; (1150 <nvm_execute_command+0x15c>)
    1034:	4293      	cmp	r3, r2
    1036:	d801      	bhi.n	103c <nvm_execute_command+0x48>
    1038:	2318      	movs	r3, #24
    103a:	e07d      	b.n	1138 <nvm_execute_command+0x144>
    103c:	4b45      	ldr	r3, [pc, #276]	; (1154 <nvm_execute_command+0x160>)
    103e:	617b      	str	r3, [r7, #20]
    1040:	697b      	ldr	r3, [r7, #20]
    1042:	685b      	ldr	r3, [r3, #4]
    1044:	613b      	str	r3, [r7, #16]
    1046:	693b      	ldr	r3, [r7, #16]
    1048:	2280      	movs	r2, #128	; 0x80
    104a:	02d2      	lsls	r2, r2, #11
    104c:	431a      	orrs	r2, r3
    104e:	697b      	ldr	r3, [r7, #20]
    1050:	605a      	str	r2, [r3, #4]
    1052:	697b      	ldr	r3, [r7, #20]
    1054:	2220      	movs	r2, #32
    1056:	32ff      	adds	r2, #255	; 0xff
    1058:	831a      	strh	r2, [r3, #24]
    105a:	4b3f      	ldr	r3, [pc, #252]	; (1158 <nvm_execute_command+0x164>)
    105c:	4798      	blx	r3
    105e:	0003      	movs	r3, r0
    1060:	001a      	movs	r2, r3
    1062:	2301      	movs	r3, #1
    1064:	4053      	eors	r3, r2
    1066:	b2db      	uxtb	r3, r3
    1068:	2b00      	cmp	r3, #0
    106a:	d004      	beq.n	1076 <nvm_execute_command+0x82>
    106c:	697b      	ldr	r3, [r7, #20]
    106e:	693a      	ldr	r2, [r7, #16]
    1070:	605a      	str	r2, [r3, #4]
    1072:	2305      	movs	r3, #5
    1074:	e060      	b.n	1138 <nvm_execute_command+0x144>
    1076:	230f      	movs	r3, #15
    1078:	18fb      	adds	r3, r7, r3
    107a:	781b      	ldrb	r3, [r3, #0]
    107c:	2b45      	cmp	r3, #69	; 0x45
    107e:	d81d      	bhi.n	10bc <nvm_execute_command+0xc8>
    1080:	009a      	lsls	r2, r3, #2
    1082:	4b36      	ldr	r3, [pc, #216]	; (115c <nvm_execute_command+0x168>)
    1084:	18d3      	adds	r3, r2, r3
    1086:	681b      	ldr	r3, [r3, #0]
    1088:	469f      	mov	pc, r3
    108a:	697b      	ldr	r3, [r7, #20]
    108c:	8b1b      	ldrh	r3, [r3, #24]
    108e:	b29b      	uxth	r3, r3
    1090:	001a      	movs	r2, r3
    1092:	2380      	movs	r3, #128	; 0x80
    1094:	005b      	lsls	r3, r3, #1
    1096:	4013      	ands	r3, r2
    1098:	d004      	beq.n	10a4 <nvm_execute_command+0xb0>
    109a:	697b      	ldr	r3, [r7, #20]
    109c:	693a      	ldr	r2, [r7, #16]
    109e:	605a      	str	r2, [r3, #4]
    10a0:	2310      	movs	r3, #16
    10a2:	e049      	b.n	1138 <nvm_execute_command+0x144>
    10a4:	68bb      	ldr	r3, [r7, #8]
    10a6:	089b      	lsrs	r3, r3, #2
    10a8:	005a      	lsls	r2, r3, #1
    10aa:	697b      	ldr	r3, [r7, #20]
    10ac:	61da      	str	r2, [r3, #28]
    10ae:	e00b      	b.n	10c8 <nvm_execute_command+0xd4>
    10b0:	68bb      	ldr	r3, [r7, #8]
    10b2:	089b      	lsrs	r3, r3, #2
    10b4:	005a      	lsls	r2, r3, #1
    10b6:	697b      	ldr	r3, [r7, #20]
    10b8:	61da      	str	r2, [r3, #28]
    10ba:	e005      	b.n	10c8 <nvm_execute_command+0xd4>
    10bc:	697b      	ldr	r3, [r7, #20]
    10be:	693a      	ldr	r2, [r7, #16]
    10c0:	605a      	str	r2, [r3, #4]
    10c2:	2317      	movs	r3, #23
    10c4:	e038      	b.n	1138 <nvm_execute_command+0x144>
    10c6:	46c0      	nop			; (mov r8, r8)
    10c8:	230f      	movs	r3, #15
    10ca:	18fb      	adds	r3, r7, r3
    10cc:	781b      	ldrb	r3, [r3, #0]
    10ce:	2b1a      	cmp	r3, #26
    10d0:	d004      	beq.n	10dc <nvm_execute_command+0xe8>
    10d2:	230f      	movs	r3, #15
    10d4:	18fb      	adds	r3, r7, r3
    10d6:	781b      	ldrb	r3, [r3, #0]
    10d8:	2b1c      	cmp	r3, #28
    10da:	d107      	bne.n	10ec <nvm_execute_command+0xf8>
    10dc:	697b      	ldr	r3, [r7, #20]
    10de:	685a      	ldr	r2, [r3, #4]
    10e0:	2180      	movs	r1, #128	; 0x80
    10e2:	02c9      	lsls	r1, r1, #11
    10e4:	430a      	orrs	r2, r1
    10e6:	605a      	str	r2, [r3, #4]
    10e8:	697b      	ldr	r3, [r7, #20]
    10ea:	685b      	ldr	r3, [r3, #4]
    10ec:	230f      	movs	r3, #15
    10ee:	18fb      	adds	r3, r7, r3
    10f0:	781b      	ldrb	r3, [r3, #0]
    10f2:	b29b      	uxth	r3, r3
    10f4:	4a1a      	ldr	r2, [pc, #104]	; (1160 <nvm_execute_command+0x16c>)
    10f6:	4313      	orrs	r3, r2
    10f8:	b29a      	uxth	r2, r3
    10fa:	697b      	ldr	r3, [r7, #20]
    10fc:	801a      	strh	r2, [r3, #0]
    10fe:	46c0      	nop			; (mov r8, r8)
    1100:	4b15      	ldr	r3, [pc, #84]	; (1158 <nvm_execute_command+0x164>)
    1102:	4798      	blx	r3
    1104:	0003      	movs	r3, r0
    1106:	001a      	movs	r2, r3
    1108:	2301      	movs	r3, #1
    110a:	4053      	eors	r3, r2
    110c:	b2db      	uxtb	r3, r3
    110e:	2b00      	cmp	r3, #0
    1110:	d1f6      	bne.n	1100 <nvm_execute_command+0x10c>
    1112:	230f      	movs	r3, #15
    1114:	18fb      	adds	r3, r7, r3
    1116:	781b      	ldrb	r3, [r3, #0]
    1118:	2b1a      	cmp	r3, #26
    111a:	d004      	beq.n	1126 <nvm_execute_command+0x132>
    111c:	230f      	movs	r3, #15
    111e:	18fb      	adds	r3, r7, r3
    1120:	781b      	ldrb	r3, [r3, #0]
    1122:	2b1c      	cmp	r3, #28
    1124:	d104      	bne.n	1130 <nvm_execute_command+0x13c>
    1126:	697b      	ldr	r3, [r7, #20]
    1128:	685a      	ldr	r2, [r3, #4]
    112a:	490e      	ldr	r1, [pc, #56]	; (1164 <nvm_execute_command+0x170>)
    112c:	400a      	ands	r2, r1
    112e:	605a      	str	r2, [r3, #4]
    1130:	697b      	ldr	r3, [r7, #20]
    1132:	693a      	ldr	r2, [r7, #16]
    1134:	605a      	str	r2, [r3, #4]
    1136:	2300      	movs	r3, #0
    1138:	0018      	movs	r0, r3
    113a:	46bd      	mov	sp, r7
    113c:	b006      	add	sp, #24
    113e:	bd80      	pop	{r7, pc}
    1140:	20000a0c 	.word	0x20000a0c
    1144:	00803fff 	.word	0x00803fff
    1148:	00806000 	.word	0x00806000
    114c:	00401fff 	.word	0x00401fff
    1150:	003fffff 	.word	0x003fffff
    1154:	41004000 	.word	0x41004000
    1158:	00000e51 	.word	0x00000e51
    115c:	0001c9d8 	.word	0x0001c9d8
    1160:	ffffa500 	.word	0xffffa500
    1164:	fffbffff 	.word	0xfffbffff

00001168 <nvm_update_buffer>:
    1168:	b590      	push	{r4, r7, lr}
    116a:	b0cb      	sub	sp, #300	; 0x12c
    116c:	af00      	add	r7, sp, #0
    116e:	60f8      	str	r0, [r7, #12]
    1170:	60b9      	str	r1, [r7, #8]
    1172:	0019      	movs	r1, r3
    1174:	4ba0      	ldr	r3, [pc, #640]	; (13f8 <nvm_update_buffer+0x290>)
    1176:	2094      	movs	r0, #148	; 0x94
    1178:	0040      	lsls	r0, r0, #1
    117a:	4684      	mov	ip, r0
    117c:	44bc      	add	ip, r7
    117e:	4463      	add	r3, ip
    1180:	801a      	strh	r2, [r3, #0]
    1182:	4b9e      	ldr	r3, [pc, #632]	; (13fc <nvm_update_buffer+0x294>)
    1184:	2294      	movs	r2, #148	; 0x94
    1186:	0052      	lsls	r2, r2, #1
    1188:	4694      	mov	ip, r2
    118a:	44bc      	add	ip, r7
    118c:	4463      	add	r3, ip
    118e:	1c0a      	adds	r2, r1, #0
    1190:	801a      	strh	r2, [r3, #0]
    1192:	2328      	movs	r3, #40	; 0x28
    1194:	33ff      	adds	r3, #255	; 0xff
    1196:	18fb      	adds	r3, r7, r3
    1198:	2200      	movs	r2, #0
    119a:	701a      	strb	r2, [r3, #0]
    119c:	4b96      	ldr	r3, [pc, #600]	; (13f8 <nvm_update_buffer+0x290>)
    119e:	2294      	movs	r2, #148	; 0x94
    11a0:	0052      	lsls	r2, r2, #1
    11a2:	4694      	mov	ip, r2
    11a4:	44bc      	add	ip, r7
    11a6:	4463      	add	r3, ip
    11a8:	881a      	ldrh	r2, [r3, #0]
    11aa:	4b94      	ldr	r3, [pc, #592]	; (13fc <nvm_update_buffer+0x294>)
    11ac:	2194      	movs	r1, #148	; 0x94
    11ae:	0049      	lsls	r1, r1, #1
    11b0:	468c      	mov	ip, r1
    11b2:	44bc      	add	ip, r7
    11b4:	4463      	add	r3, ip
    11b6:	881b      	ldrh	r3, [r3, #0]
    11b8:	18d3      	adds	r3, r2, r3
    11ba:	4a91      	ldr	r2, [pc, #580]	; (1400 <nvm_update_buffer+0x298>)
    11bc:	8812      	ldrh	r2, [r2, #0]
    11be:	4293      	cmp	r3, r2
    11c0:	dd01      	ble.n	11c6 <nvm_update_buffer+0x5e>
    11c2:	2317      	movs	r3, #23
    11c4:	e113      	b.n	13ee <nvm_update_buffer+0x286>
    11c6:	4b8e      	ldr	r3, [pc, #568]	; (1400 <nvm_update_buffer+0x298>)
    11c8:	881b      	ldrh	r3, [r3, #0]
    11ca:	001a      	movs	r2, r3
    11cc:	0013      	movs	r3, r2
    11ce:	079b      	lsls	r3, r3, #30
    11d0:	1a9b      	subs	r3, r3, r2
    11d2:	009b      	lsls	r3, r3, #2
    11d4:	001a      	movs	r2, r3
    11d6:	68fb      	ldr	r3, [r7, #12]
    11d8:	4013      	ands	r3, r2
    11da:	228a      	movs	r2, #138	; 0x8a
    11dc:	0052      	lsls	r2, r2, #1
    11de:	18ba      	adds	r2, r7, r2
    11e0:	6013      	str	r3, [r2, #0]
    11e2:	2300      	movs	r3, #0
    11e4:	2290      	movs	r2, #144	; 0x90
    11e6:	0052      	lsls	r2, r2, #1
    11e8:	18ba      	adds	r2, r7, r2
    11ea:	6013      	str	r3, [r2, #0]
    11ec:	e038      	b.n	1260 <nvm_update_buffer+0xf8>
    11ee:	4b84      	ldr	r3, [pc, #528]	; (1400 <nvm_update_buffer+0x298>)
    11f0:	881b      	ldrh	r3, [r3, #0]
    11f2:	001a      	movs	r2, r3
    11f4:	2390      	movs	r3, #144	; 0x90
    11f6:	005b      	lsls	r3, r3, #1
    11f8:	18fb      	adds	r3, r7, r3
    11fa:	681b      	ldr	r3, [r3, #0]
    11fc:	435a      	muls	r2, r3
    11fe:	238a      	movs	r3, #138	; 0x8a
    1200:	005b      	lsls	r3, r3, #1
    1202:	18fb      	adds	r3, r7, r3
    1204:	681b      	ldr	r3, [r3, #0]
    1206:	18d0      	adds	r0, r2, r3
    1208:	2310      	movs	r3, #16
    120a:	18fa      	adds	r2, r7, r3
    120c:	2390      	movs	r3, #144	; 0x90
    120e:	005b      	lsls	r3, r3, #1
    1210:	18fb      	adds	r3, r7, r3
    1212:	681b      	ldr	r3, [r3, #0]
    1214:	019b      	lsls	r3, r3, #6
    1216:	18d1      	adds	r1, r2, r3
    1218:	4b79      	ldr	r3, [pc, #484]	; (1400 <nvm_update_buffer+0x298>)
    121a:	881b      	ldrh	r3, [r3, #0]
    121c:	2228      	movs	r2, #40	; 0x28
    121e:	32ff      	adds	r2, #255	; 0xff
    1220:	18bc      	adds	r4, r7, r2
    1222:	001a      	movs	r2, r3
    1224:	4b77      	ldr	r3, [pc, #476]	; (1404 <nvm_update_buffer+0x29c>)
    1226:	4798      	blx	r3
    1228:	0003      	movs	r3, r0
    122a:	7023      	strb	r3, [r4, #0]
    122c:	2328      	movs	r3, #40	; 0x28
    122e:	33ff      	adds	r3, #255	; 0xff
    1230:	18fb      	adds	r3, r7, r3
    1232:	781b      	ldrb	r3, [r3, #0]
    1234:	2b05      	cmp	r3, #5
    1236:	d0da      	beq.n	11ee <nvm_update_buffer+0x86>
    1238:	2328      	movs	r3, #40	; 0x28
    123a:	33ff      	adds	r3, #255	; 0xff
    123c:	18fb      	adds	r3, r7, r3
    123e:	781b      	ldrb	r3, [r3, #0]
    1240:	2b00      	cmp	r3, #0
    1242:	d004      	beq.n	124e <nvm_update_buffer+0xe6>
    1244:	2328      	movs	r3, #40	; 0x28
    1246:	33ff      	adds	r3, #255	; 0xff
    1248:	18fb      	adds	r3, r7, r3
    124a:	781b      	ldrb	r3, [r3, #0]
    124c:	e0cf      	b.n	13ee <nvm_update_buffer+0x286>
    124e:	2390      	movs	r3, #144	; 0x90
    1250:	005b      	lsls	r3, r3, #1
    1252:	18fb      	adds	r3, r7, r3
    1254:	681b      	ldr	r3, [r3, #0]
    1256:	3301      	adds	r3, #1
    1258:	2290      	movs	r2, #144	; 0x90
    125a:	0052      	lsls	r2, r2, #1
    125c:	18ba      	adds	r2, r7, r2
    125e:	6013      	str	r3, [r2, #0]
    1260:	2390      	movs	r3, #144	; 0x90
    1262:	005b      	lsls	r3, r3, #1
    1264:	18fb      	adds	r3, r7, r3
    1266:	681b      	ldr	r3, [r3, #0]
    1268:	2b03      	cmp	r3, #3
    126a:	d9c0      	bls.n	11ee <nvm_update_buffer+0x86>
    126c:	4b64      	ldr	r3, [pc, #400]	; (1400 <nvm_update_buffer+0x298>)
    126e:	881b      	ldrh	r3, [r3, #0]
    1270:	009b      	lsls	r3, r3, #2
    1272:	0019      	movs	r1, r3
    1274:	68fa      	ldr	r2, [r7, #12]
    1276:	4b64      	ldr	r3, [pc, #400]	; (1408 <nvm_update_buffer+0x2a0>)
    1278:	0010      	movs	r0, r2
    127a:	4798      	blx	r3
    127c:	000b      	movs	r3, r1
    127e:	001a      	movs	r2, r3
    1280:	4b5f      	ldr	r3, [pc, #380]	; (1400 <nvm_update_buffer+0x298>)
    1282:	881b      	ldrh	r3, [r3, #0]
    1284:	0019      	movs	r1, r3
    1286:	4b61      	ldr	r3, [pc, #388]	; (140c <nvm_update_buffer+0x2a4>)
    1288:	0010      	movs	r0, r2
    128a:	4798      	blx	r3
    128c:	0003      	movs	r3, r0
    128e:	001a      	movs	r2, r3
    1290:	2314      	movs	r3, #20
    1292:	33ff      	adds	r3, #255	; 0xff
    1294:	18fb      	adds	r3, r7, r3
    1296:	701a      	strb	r2, [r3, #0]
    1298:	2300      	movs	r3, #0
    129a:	228e      	movs	r2, #142	; 0x8e
    129c:	0052      	lsls	r2, r2, #1
    129e:	18ba      	adds	r2, r7, r2
    12a0:	6013      	str	r3, [r2, #0]
    12a2:	e029      	b.n	12f8 <nvm_update_buffer+0x190>
    12a4:	2314      	movs	r3, #20
    12a6:	33ff      	adds	r3, #255	; 0xff
    12a8:	18fb      	adds	r3, r7, r3
    12aa:	781a      	ldrb	r2, [r3, #0]
    12ac:	4b52      	ldr	r3, [pc, #328]	; (13f8 <nvm_update_buffer+0x290>)
    12ae:	2194      	movs	r1, #148	; 0x94
    12b0:	0049      	lsls	r1, r1, #1
    12b2:	468c      	mov	ip, r1
    12b4:	44bc      	add	ip, r7
    12b6:	4463      	add	r3, ip
    12b8:	8819      	ldrh	r1, [r3, #0]
    12ba:	238e      	movs	r3, #142	; 0x8e
    12bc:	005b      	lsls	r3, r3, #1
    12be:	18fb      	adds	r3, r7, r3
    12c0:	681b      	ldr	r3, [r3, #0]
    12c2:	18cb      	adds	r3, r1, r3
    12c4:	68b8      	ldr	r0, [r7, #8]
    12c6:	218e      	movs	r1, #142	; 0x8e
    12c8:	0049      	lsls	r1, r1, #1
    12ca:	1879      	adds	r1, r7, r1
    12cc:	6809      	ldr	r1, [r1, #0]
    12ce:	1841      	adds	r1, r0, r1
    12d0:	7808      	ldrb	r0, [r1, #0]
    12d2:	494f      	ldr	r1, [pc, #316]	; (1410 <nvm_update_buffer+0x2a8>)
    12d4:	2494      	movs	r4, #148	; 0x94
    12d6:	0064      	lsls	r4, r4, #1
    12d8:	46a4      	mov	ip, r4
    12da:	44bc      	add	ip, r7
    12dc:	4461      	add	r1, ip
    12de:	0192      	lsls	r2, r2, #6
    12e0:	188a      	adds	r2, r1, r2
    12e2:	1c01      	adds	r1, r0, #0
    12e4:	54d1      	strb	r1, [r2, r3]
    12e6:	238e      	movs	r3, #142	; 0x8e
    12e8:	005b      	lsls	r3, r3, #1
    12ea:	18fb      	adds	r3, r7, r3
    12ec:	681b      	ldr	r3, [r3, #0]
    12ee:	3301      	adds	r3, #1
    12f0:	228e      	movs	r2, #142	; 0x8e
    12f2:	0052      	lsls	r2, r2, #1
    12f4:	18ba      	adds	r2, r7, r2
    12f6:	6013      	str	r3, [r2, #0]
    12f8:	4b40      	ldr	r3, [pc, #256]	; (13fc <nvm_update_buffer+0x294>)
    12fa:	2294      	movs	r2, #148	; 0x94
    12fc:	0052      	lsls	r2, r2, #1
    12fe:	4694      	mov	ip, r2
    1300:	44bc      	add	ip, r7
    1302:	4463      	add	r3, ip
    1304:	881a      	ldrh	r2, [r3, #0]
    1306:	238e      	movs	r3, #142	; 0x8e
    1308:	005b      	lsls	r3, r3, #1
    130a:	18fb      	adds	r3, r7, r3
    130c:	681b      	ldr	r3, [r3, #0]
    130e:	429a      	cmp	r2, r3
    1310:	d8c8      	bhi.n	12a4 <nvm_update_buffer+0x13c>
    1312:	4b40      	ldr	r3, [pc, #256]	; (1414 <nvm_update_buffer+0x2ac>)
    1314:	4798      	blx	r3
    1316:	2328      	movs	r3, #40	; 0x28
    1318:	33ff      	adds	r3, #255	; 0xff
    131a:	18fc      	adds	r4, r7, r3
    131c:	238a      	movs	r3, #138	; 0x8a
    131e:	005b      	lsls	r3, r3, #1
    1320:	18fb      	adds	r3, r7, r3
    1322:	681b      	ldr	r3, [r3, #0]
    1324:	0018      	movs	r0, r3
    1326:	4b3c      	ldr	r3, [pc, #240]	; (1418 <nvm_update_buffer+0x2b0>)
    1328:	4798      	blx	r3
    132a:	0003      	movs	r3, r0
    132c:	7023      	strb	r3, [r4, #0]
    132e:	2328      	movs	r3, #40	; 0x28
    1330:	33ff      	adds	r3, #255	; 0xff
    1332:	18fb      	adds	r3, r7, r3
    1334:	781b      	ldrb	r3, [r3, #0]
    1336:	2b05      	cmp	r3, #5
    1338:	d0ed      	beq.n	1316 <nvm_update_buffer+0x1ae>
    133a:	2328      	movs	r3, #40	; 0x28
    133c:	33ff      	adds	r3, #255	; 0xff
    133e:	18fb      	adds	r3, r7, r3
    1340:	781b      	ldrb	r3, [r3, #0]
    1342:	2b00      	cmp	r3, #0
    1344:	d006      	beq.n	1354 <nvm_update_buffer+0x1ec>
    1346:	4b35      	ldr	r3, [pc, #212]	; (141c <nvm_update_buffer+0x2b4>)
    1348:	4798      	blx	r3
    134a:	2328      	movs	r3, #40	; 0x28
    134c:	33ff      	adds	r3, #255	; 0xff
    134e:	18fb      	adds	r3, r7, r3
    1350:	781b      	ldrb	r3, [r3, #0]
    1352:	e04c      	b.n	13ee <nvm_update_buffer+0x286>
    1354:	2300      	movs	r3, #0
    1356:	228c      	movs	r2, #140	; 0x8c
    1358:	0052      	lsls	r2, r2, #1
    135a:	18ba      	adds	r2, r7, r2
    135c:	6013      	str	r3, [r2, #0]
    135e:	e03a      	b.n	13d6 <nvm_update_buffer+0x26e>
    1360:	4b27      	ldr	r3, [pc, #156]	; (1400 <nvm_update_buffer+0x298>)
    1362:	881b      	ldrh	r3, [r3, #0]
    1364:	001a      	movs	r2, r3
    1366:	238c      	movs	r3, #140	; 0x8c
    1368:	005b      	lsls	r3, r3, #1
    136a:	18fb      	adds	r3, r7, r3
    136c:	681b      	ldr	r3, [r3, #0]
    136e:	435a      	muls	r2, r3
    1370:	238a      	movs	r3, #138	; 0x8a
    1372:	005b      	lsls	r3, r3, #1
    1374:	18fb      	adds	r3, r7, r3
    1376:	681b      	ldr	r3, [r3, #0]
    1378:	18d0      	adds	r0, r2, r3
    137a:	2310      	movs	r3, #16
    137c:	18fa      	adds	r2, r7, r3
    137e:	238c      	movs	r3, #140	; 0x8c
    1380:	005b      	lsls	r3, r3, #1
    1382:	18fb      	adds	r3, r7, r3
    1384:	681b      	ldr	r3, [r3, #0]
    1386:	019b      	lsls	r3, r3, #6
    1388:	18d1      	adds	r1, r2, r3
    138a:	4b1d      	ldr	r3, [pc, #116]	; (1400 <nvm_update_buffer+0x298>)
    138c:	881b      	ldrh	r3, [r3, #0]
    138e:	2228      	movs	r2, #40	; 0x28
    1390:	32ff      	adds	r2, #255	; 0xff
    1392:	18bc      	adds	r4, r7, r2
    1394:	001a      	movs	r2, r3
    1396:	4b22      	ldr	r3, [pc, #136]	; (1420 <nvm_update_buffer+0x2b8>)
    1398:	4798      	blx	r3
    139a:	0003      	movs	r3, r0
    139c:	7023      	strb	r3, [r4, #0]
    139e:	2328      	movs	r3, #40	; 0x28
    13a0:	33ff      	adds	r3, #255	; 0xff
    13a2:	18fb      	adds	r3, r7, r3
    13a4:	781b      	ldrb	r3, [r3, #0]
    13a6:	2b05      	cmp	r3, #5
    13a8:	d0da      	beq.n	1360 <nvm_update_buffer+0x1f8>
    13aa:	2328      	movs	r3, #40	; 0x28
    13ac:	33ff      	adds	r3, #255	; 0xff
    13ae:	18fb      	adds	r3, r7, r3
    13b0:	781b      	ldrb	r3, [r3, #0]
    13b2:	2b00      	cmp	r3, #0
    13b4:	d006      	beq.n	13c4 <nvm_update_buffer+0x25c>
    13b6:	4b19      	ldr	r3, [pc, #100]	; (141c <nvm_update_buffer+0x2b4>)
    13b8:	4798      	blx	r3
    13ba:	2328      	movs	r3, #40	; 0x28
    13bc:	33ff      	adds	r3, #255	; 0xff
    13be:	18fb      	adds	r3, r7, r3
    13c0:	781b      	ldrb	r3, [r3, #0]
    13c2:	e014      	b.n	13ee <nvm_update_buffer+0x286>
    13c4:	238c      	movs	r3, #140	; 0x8c
    13c6:	005b      	lsls	r3, r3, #1
    13c8:	18fb      	adds	r3, r7, r3
    13ca:	681b      	ldr	r3, [r3, #0]
    13cc:	3301      	adds	r3, #1
    13ce:	228c      	movs	r2, #140	; 0x8c
    13d0:	0052      	lsls	r2, r2, #1
    13d2:	18ba      	adds	r2, r7, r2
    13d4:	6013      	str	r3, [r2, #0]
    13d6:	238c      	movs	r3, #140	; 0x8c
    13d8:	005b      	lsls	r3, r3, #1
    13da:	18fb      	adds	r3, r7, r3
    13dc:	681b      	ldr	r3, [r3, #0]
    13de:	2b03      	cmp	r3, #3
    13e0:	d9be      	bls.n	1360 <nvm_update_buffer+0x1f8>
    13e2:	4b0e      	ldr	r3, [pc, #56]	; (141c <nvm_update_buffer+0x2b4>)
    13e4:	4798      	blx	r3
    13e6:	2328      	movs	r3, #40	; 0x28
    13e8:	33ff      	adds	r3, #255	; 0xff
    13ea:	18fb      	adds	r3, r7, r3
    13ec:	781b      	ldrb	r3, [r3, #0]
    13ee:	0018      	movs	r0, r3
    13f0:	46bd      	mov	sp, r7
    13f2:	b04b      	add	sp, #300	; 0x12c
    13f4:	bd90      	pop	{r4, r7, pc}
    13f6:	46c0      	nop			; (mov r8, r8)
    13f8:	fffffede 	.word	0xfffffede
    13fc:	fffffedc 	.word	0xfffffedc
    1400:	20000a0c 	.word	0x20000a0c
    1404:	000015b1 	.word	0x000015b1
    1408:	00014a99 	.word	0x00014a99
    140c:	0001498d 	.word	0x0001498d
    1410:	fffffee8 	.word	0xfffffee8
    1414:	00000ef5 	.word	0x00000ef5
    1418:	000016c5 	.word	0x000016c5
    141c:	00000f09 	.word	0x00000f09
    1420:	00001425 	.word	0x00001425

00001424 <nvm_write_buffer>:
    1424:	b580      	push	{r7, lr}
    1426:	b088      	sub	sp, #32
    1428:	af00      	add	r7, sp, #0
    142a:	60f8      	str	r0, [r7, #12]
    142c:	60b9      	str	r1, [r7, #8]
    142e:	1dbb      	adds	r3, r7, #6
    1430:	801a      	strh	r2, [r3, #0]
    1432:	231f      	movs	r3, #31
    1434:	18fb      	adds	r3, r7, r3
    1436:	2200      	movs	r2, #0
    1438:	701a      	strb	r2, [r3, #0]
    143a:	4b56      	ldr	r3, [pc, #344]	; (1594 <nvm_write_buffer+0x170>)
    143c:	881b      	ldrh	r3, [r3, #0]
    143e:	001a      	movs	r2, r3
    1440:	4b54      	ldr	r3, [pc, #336]	; (1594 <nvm_write_buffer+0x170>)
    1442:	885b      	ldrh	r3, [r3, #2]
    1444:	435a      	muls	r2, r3
    1446:	68fb      	ldr	r3, [r7, #12]
    1448:	429a      	cmp	r2, r3
    144a:	d20d      	bcs.n	1468 <nvm_write_buffer+0x44>
    144c:	68fb      	ldr	r3, [r7, #12]
    144e:	4a52      	ldr	r2, [pc, #328]	; (1598 <nvm_write_buffer+0x174>)
    1450:	4293      	cmp	r3, r2
    1452:	d803      	bhi.n	145c <nvm_write_buffer+0x38>
    1454:	68fb      	ldr	r3, [r7, #12]
    1456:	4a51      	ldr	r2, [pc, #324]	; (159c <nvm_write_buffer+0x178>)
    1458:	4293      	cmp	r3, r2
    145a:	d801      	bhi.n	1460 <nvm_write_buffer+0x3c>
    145c:	2318      	movs	r3, #24
    145e:	e095      	b.n	158c <nvm_write_buffer+0x168>
    1460:	231f      	movs	r3, #31
    1462:	18fb      	adds	r3, r7, r3
    1464:	2201      	movs	r2, #1
    1466:	701a      	strb	r2, [r3, #0]
    1468:	4b4a      	ldr	r3, [pc, #296]	; (1594 <nvm_write_buffer+0x170>)
    146a:	881b      	ldrh	r3, [r3, #0]
    146c:	3b01      	subs	r3, #1
    146e:	001a      	movs	r2, r3
    1470:	68fb      	ldr	r3, [r7, #12]
    1472:	4013      	ands	r3, r2
    1474:	d001      	beq.n	147a <nvm_write_buffer+0x56>
    1476:	2318      	movs	r3, #24
    1478:	e088      	b.n	158c <nvm_write_buffer+0x168>
    147a:	4b46      	ldr	r3, [pc, #280]	; (1594 <nvm_write_buffer+0x170>)
    147c:	881b      	ldrh	r3, [r3, #0]
    147e:	1dba      	adds	r2, r7, #6
    1480:	8812      	ldrh	r2, [r2, #0]
    1482:	429a      	cmp	r2, r3
    1484:	d901      	bls.n	148a <nvm_write_buffer+0x66>
    1486:	2317      	movs	r3, #23
    1488:	e080      	b.n	158c <nvm_write_buffer+0x168>
    148a:	4b45      	ldr	r3, [pc, #276]	; (15a0 <nvm_write_buffer+0x17c>)
    148c:	613b      	str	r3, [r7, #16]
    148e:	4b45      	ldr	r3, [pc, #276]	; (15a4 <nvm_write_buffer+0x180>)
    1490:	4798      	blx	r3
    1492:	0003      	movs	r3, r0
    1494:	001a      	movs	r2, r3
    1496:	2301      	movs	r3, #1
    1498:	4053      	eors	r3, r2
    149a:	b2db      	uxtb	r3, r3
    149c:	2b00      	cmp	r3, #0
    149e:	d001      	beq.n	14a4 <nvm_write_buffer+0x80>
    14a0:	2305      	movs	r3, #5
    14a2:	e073      	b.n	158c <nvm_write_buffer+0x168>
    14a4:	693b      	ldr	r3, [r7, #16]
    14a6:	4a40      	ldr	r2, [pc, #256]	; (15a8 <nvm_write_buffer+0x184>)
    14a8:	801a      	strh	r2, [r3, #0]
    14aa:	46c0      	nop			; (mov r8, r8)
    14ac:	4b3d      	ldr	r3, [pc, #244]	; (15a4 <nvm_write_buffer+0x180>)
    14ae:	4798      	blx	r3
    14b0:	0003      	movs	r3, r0
    14b2:	001a      	movs	r2, r3
    14b4:	2301      	movs	r3, #1
    14b6:	4053      	eors	r3, r2
    14b8:	b2db      	uxtb	r3, r3
    14ba:	2b00      	cmp	r3, #0
    14bc:	d1f6      	bne.n	14ac <nvm_write_buffer+0x88>
    14be:	693b      	ldr	r3, [r7, #16]
    14c0:	2220      	movs	r2, #32
    14c2:	32ff      	adds	r2, #255	; 0xff
    14c4:	831a      	strh	r2, [r3, #24]
    14c6:	68fb      	ldr	r3, [r7, #12]
    14c8:	085b      	lsrs	r3, r3, #1
    14ca:	61bb      	str	r3, [r7, #24]
    14cc:	2316      	movs	r3, #22
    14ce:	18fb      	adds	r3, r7, r3
    14d0:	2200      	movs	r2, #0
    14d2:	801a      	strh	r2, [r3, #0]
    14d4:	e032      	b.n	153c <nvm_write_buffer+0x118>
    14d6:	2316      	movs	r3, #22
    14d8:	18fb      	adds	r3, r7, r3
    14da:	881b      	ldrh	r3, [r3, #0]
    14dc:	68ba      	ldr	r2, [r7, #8]
    14de:	18d3      	adds	r3, r2, r3
    14e0:	781a      	ldrb	r2, [r3, #0]
    14e2:	2314      	movs	r3, #20
    14e4:	18fb      	adds	r3, r7, r3
    14e6:	801a      	strh	r2, [r3, #0]
    14e8:	2316      	movs	r3, #22
    14ea:	18fb      	adds	r3, r7, r3
    14ec:	881a      	ldrh	r2, [r3, #0]
    14ee:	1dbb      	adds	r3, r7, #6
    14f0:	881b      	ldrh	r3, [r3, #0]
    14f2:	3b01      	subs	r3, #1
    14f4:	429a      	cmp	r2, r3
    14f6:	da11      	bge.n	151c <nvm_write_buffer+0xf8>
    14f8:	2316      	movs	r3, #22
    14fa:	18fb      	adds	r3, r7, r3
    14fc:	881b      	ldrh	r3, [r3, #0]
    14fe:	3301      	adds	r3, #1
    1500:	68ba      	ldr	r2, [r7, #8]
    1502:	18d3      	adds	r3, r2, r3
    1504:	781b      	ldrb	r3, [r3, #0]
    1506:	021b      	lsls	r3, r3, #8
    1508:	b21a      	sxth	r2, r3
    150a:	2314      	movs	r3, #20
    150c:	18fb      	adds	r3, r7, r3
    150e:	2100      	movs	r1, #0
    1510:	5e5b      	ldrsh	r3, [r3, r1]
    1512:	4313      	orrs	r3, r2
    1514:	b21a      	sxth	r2, r3
    1516:	2314      	movs	r3, #20
    1518:	18fb      	adds	r3, r7, r3
    151a:	801a      	strh	r2, [r3, #0]
    151c:	69bb      	ldr	r3, [r7, #24]
    151e:	1c5a      	adds	r2, r3, #1
    1520:	61ba      	str	r2, [r7, #24]
    1522:	005b      	lsls	r3, r3, #1
    1524:	001a      	movs	r2, r3
    1526:	2314      	movs	r3, #20
    1528:	18fb      	adds	r3, r7, r3
    152a:	881b      	ldrh	r3, [r3, #0]
    152c:	8013      	strh	r3, [r2, #0]
    152e:	2316      	movs	r3, #22
    1530:	18fb      	adds	r3, r7, r3
    1532:	2216      	movs	r2, #22
    1534:	18ba      	adds	r2, r7, r2
    1536:	8812      	ldrh	r2, [r2, #0]
    1538:	3202      	adds	r2, #2
    153a:	801a      	strh	r2, [r3, #0]
    153c:	2316      	movs	r3, #22
    153e:	18fa      	adds	r2, r7, r3
    1540:	1dbb      	adds	r3, r7, #6
    1542:	8812      	ldrh	r2, [r2, #0]
    1544:	881b      	ldrh	r3, [r3, #0]
    1546:	429a      	cmp	r2, r3
    1548:	d3c5      	bcc.n	14d6 <nvm_write_buffer+0xb2>
    154a:	4b12      	ldr	r3, [pc, #72]	; (1594 <nvm_write_buffer+0x170>)
    154c:	791b      	ldrb	r3, [r3, #4]
    154e:	2201      	movs	r2, #1
    1550:	4053      	eors	r3, r2
    1552:	b2db      	uxtb	r3, r3
    1554:	2b00      	cmp	r3, #0
    1556:	d018      	beq.n	158a <nvm_write_buffer+0x166>
    1558:	1dbb      	adds	r3, r7, #6
    155a:	881b      	ldrh	r3, [r3, #0]
    155c:	2b3f      	cmp	r3, #63	; 0x3f
    155e:	d814      	bhi.n	158a <nvm_write_buffer+0x166>
    1560:	231f      	movs	r3, #31
    1562:	18fb      	adds	r3, r7, r3
    1564:	781b      	ldrb	r3, [r3, #0]
    1566:	2b00      	cmp	r3, #0
    1568:	d007      	beq.n	157a <nvm_write_buffer+0x156>
    156a:	68fb      	ldr	r3, [r7, #12]
    156c:	2200      	movs	r2, #0
    156e:	0019      	movs	r1, r3
    1570:	201c      	movs	r0, #28
    1572:	4b0e      	ldr	r3, [pc, #56]	; (15ac <nvm_write_buffer+0x188>)
    1574:	4798      	blx	r3
    1576:	0003      	movs	r3, r0
    1578:	e008      	b.n	158c <nvm_write_buffer+0x168>
    157a:	68fb      	ldr	r3, [r7, #12]
    157c:	2200      	movs	r2, #0
    157e:	0019      	movs	r1, r3
    1580:	2004      	movs	r0, #4
    1582:	4b0a      	ldr	r3, [pc, #40]	; (15ac <nvm_write_buffer+0x188>)
    1584:	4798      	blx	r3
    1586:	0003      	movs	r3, r0
    1588:	e000      	b.n	158c <nvm_write_buffer+0x168>
    158a:	2300      	movs	r3, #0
    158c:	0018      	movs	r0, r3
    158e:	46bd      	mov	sp, r7
    1590:	b008      	add	sp, #32
    1592:	bd80      	pop	{r7, pc}
    1594:	20000a0c 	.word	0x20000a0c
    1598:	00401fff 	.word	0x00401fff
    159c:	003fffff 	.word	0x003fffff
    15a0:	41004000 	.word	0x41004000
    15a4:	00000e51 	.word	0x00000e51
    15a8:	ffffa544 	.word	0xffffa544
    15ac:	00000ff5 	.word	0x00000ff5

000015b0 <nvm_read_buffer>:
    15b0:	b580      	push	{r7, lr}
    15b2:	b088      	sub	sp, #32
    15b4:	af00      	add	r7, sp, #0
    15b6:	60f8      	str	r0, [r7, #12]
    15b8:	60b9      	str	r1, [r7, #8]
    15ba:	1dbb      	adds	r3, r7, #6
    15bc:	801a      	strh	r2, [r3, #0]
    15be:	4b3c      	ldr	r3, [pc, #240]	; (16b0 <nvm_read_buffer+0x100>)
    15c0:	881b      	ldrh	r3, [r3, #0]
    15c2:	001a      	movs	r2, r3
    15c4:	4b3a      	ldr	r3, [pc, #232]	; (16b0 <nvm_read_buffer+0x100>)
    15c6:	885b      	ldrh	r3, [r3, #2]
    15c8:	435a      	muls	r2, r3
    15ca:	68fb      	ldr	r3, [r7, #12]
    15cc:	429a      	cmp	r2, r3
    15ce:	d209      	bcs.n	15e4 <nvm_read_buffer+0x34>
    15d0:	68fb      	ldr	r3, [r7, #12]
    15d2:	4a38      	ldr	r2, [pc, #224]	; (16b4 <nvm_read_buffer+0x104>)
    15d4:	4293      	cmp	r3, r2
    15d6:	d803      	bhi.n	15e0 <nvm_read_buffer+0x30>
    15d8:	68fb      	ldr	r3, [r7, #12]
    15da:	4a37      	ldr	r2, [pc, #220]	; (16b8 <nvm_read_buffer+0x108>)
    15dc:	4293      	cmp	r3, r2
    15de:	d801      	bhi.n	15e4 <nvm_read_buffer+0x34>
    15e0:	2318      	movs	r3, #24
    15e2:	e060      	b.n	16a6 <nvm_read_buffer+0xf6>
    15e4:	4b32      	ldr	r3, [pc, #200]	; (16b0 <nvm_read_buffer+0x100>)
    15e6:	881b      	ldrh	r3, [r3, #0]
    15e8:	3b01      	subs	r3, #1
    15ea:	001a      	movs	r2, r3
    15ec:	68fb      	ldr	r3, [r7, #12]
    15ee:	4013      	ands	r3, r2
    15f0:	d001      	beq.n	15f6 <nvm_read_buffer+0x46>
    15f2:	2318      	movs	r3, #24
    15f4:	e057      	b.n	16a6 <nvm_read_buffer+0xf6>
    15f6:	4b2e      	ldr	r3, [pc, #184]	; (16b0 <nvm_read_buffer+0x100>)
    15f8:	881b      	ldrh	r3, [r3, #0]
    15fa:	1dba      	adds	r2, r7, #6
    15fc:	8812      	ldrh	r2, [r2, #0]
    15fe:	429a      	cmp	r2, r3
    1600:	d901      	bls.n	1606 <nvm_read_buffer+0x56>
    1602:	2317      	movs	r3, #23
    1604:	e04f      	b.n	16a6 <nvm_read_buffer+0xf6>
    1606:	4b2d      	ldr	r3, [pc, #180]	; (16bc <nvm_read_buffer+0x10c>)
    1608:	617b      	str	r3, [r7, #20]
    160a:	4b2d      	ldr	r3, [pc, #180]	; (16c0 <nvm_read_buffer+0x110>)
    160c:	4798      	blx	r3
    160e:	0003      	movs	r3, r0
    1610:	001a      	movs	r2, r3
    1612:	2301      	movs	r3, #1
    1614:	4053      	eors	r3, r2
    1616:	b2db      	uxtb	r3, r3
    1618:	2b00      	cmp	r3, #0
    161a:	d001      	beq.n	1620 <nvm_read_buffer+0x70>
    161c:	2305      	movs	r3, #5
    161e:	e042      	b.n	16a6 <nvm_read_buffer+0xf6>
    1620:	697b      	ldr	r3, [r7, #20]
    1622:	2220      	movs	r2, #32
    1624:	32ff      	adds	r2, #255	; 0xff
    1626:	831a      	strh	r2, [r3, #24]
    1628:	68fb      	ldr	r3, [r7, #12]
    162a:	085b      	lsrs	r3, r3, #1
    162c:	61fb      	str	r3, [r7, #28]
    162e:	231a      	movs	r3, #26
    1630:	18fb      	adds	r3, r7, r3
    1632:	2200      	movs	r2, #0
    1634:	801a      	strh	r2, [r3, #0]
    1636:	e02e      	b.n	1696 <nvm_read_buffer+0xe6>
    1638:	69fb      	ldr	r3, [r7, #28]
    163a:	1c5a      	adds	r2, r3, #1
    163c:	61fa      	str	r2, [r7, #28]
    163e:	005b      	lsls	r3, r3, #1
    1640:	001a      	movs	r2, r3
    1642:	2312      	movs	r3, #18
    1644:	18fb      	adds	r3, r7, r3
    1646:	8812      	ldrh	r2, [r2, #0]
    1648:	801a      	strh	r2, [r3, #0]
    164a:	231a      	movs	r3, #26
    164c:	18fb      	adds	r3, r7, r3
    164e:	881b      	ldrh	r3, [r3, #0]
    1650:	68ba      	ldr	r2, [r7, #8]
    1652:	18d3      	adds	r3, r2, r3
    1654:	2212      	movs	r2, #18
    1656:	18ba      	adds	r2, r7, r2
    1658:	8812      	ldrh	r2, [r2, #0]
    165a:	b2d2      	uxtb	r2, r2
    165c:	701a      	strb	r2, [r3, #0]
    165e:	231a      	movs	r3, #26
    1660:	18fb      	adds	r3, r7, r3
    1662:	881a      	ldrh	r2, [r3, #0]
    1664:	1dbb      	adds	r3, r7, #6
    1666:	881b      	ldrh	r3, [r3, #0]
    1668:	3b01      	subs	r3, #1
    166a:	429a      	cmp	r2, r3
    166c:	da0c      	bge.n	1688 <nvm_read_buffer+0xd8>
    166e:	231a      	movs	r3, #26
    1670:	18fb      	adds	r3, r7, r3
    1672:	881b      	ldrh	r3, [r3, #0]
    1674:	3301      	adds	r3, #1
    1676:	68ba      	ldr	r2, [r7, #8]
    1678:	18d3      	adds	r3, r2, r3
    167a:	2212      	movs	r2, #18
    167c:	18ba      	adds	r2, r7, r2
    167e:	8812      	ldrh	r2, [r2, #0]
    1680:	0a12      	lsrs	r2, r2, #8
    1682:	b292      	uxth	r2, r2
    1684:	b2d2      	uxtb	r2, r2
    1686:	701a      	strb	r2, [r3, #0]
    1688:	231a      	movs	r3, #26
    168a:	18fb      	adds	r3, r7, r3
    168c:	221a      	movs	r2, #26
    168e:	18ba      	adds	r2, r7, r2
    1690:	8812      	ldrh	r2, [r2, #0]
    1692:	3202      	adds	r2, #2
    1694:	801a      	strh	r2, [r3, #0]
    1696:	231a      	movs	r3, #26
    1698:	18fa      	adds	r2, r7, r3
    169a:	1dbb      	adds	r3, r7, #6
    169c:	8812      	ldrh	r2, [r2, #0]
    169e:	881b      	ldrh	r3, [r3, #0]
    16a0:	429a      	cmp	r2, r3
    16a2:	d3c9      	bcc.n	1638 <nvm_read_buffer+0x88>
    16a4:	2300      	movs	r3, #0
    16a6:	0018      	movs	r0, r3
    16a8:	46bd      	mov	sp, r7
    16aa:	b008      	add	sp, #32
    16ac:	bd80      	pop	{r7, pc}
    16ae:	46c0      	nop			; (mov r8, r8)
    16b0:	20000a0c 	.word	0x20000a0c
    16b4:	00401fff 	.word	0x00401fff
    16b8:	003fffff 	.word	0x003fffff
    16bc:	41004000 	.word	0x41004000
    16c0:	00000e51 	.word	0x00000e51

000016c4 <nvm_erase_row>:
    16c4:	b580      	push	{r7, lr}
    16c6:	b084      	sub	sp, #16
    16c8:	af00      	add	r7, sp, #0
    16ca:	6078      	str	r0, [r7, #4]
    16cc:	230f      	movs	r3, #15
    16ce:	18fb      	adds	r3, r7, r3
    16d0:	2200      	movs	r2, #0
    16d2:	701a      	strb	r2, [r3, #0]
    16d4:	4b36      	ldr	r3, [pc, #216]	; (17b0 <nvm_erase_row+0xec>)
    16d6:	881b      	ldrh	r3, [r3, #0]
    16d8:	001a      	movs	r2, r3
    16da:	4b35      	ldr	r3, [pc, #212]	; (17b0 <nvm_erase_row+0xec>)
    16dc:	885b      	ldrh	r3, [r3, #2]
    16de:	435a      	muls	r2, r3
    16e0:	687b      	ldr	r3, [r7, #4]
    16e2:	429a      	cmp	r2, r3
    16e4:	d20d      	bcs.n	1702 <nvm_erase_row+0x3e>
    16e6:	687b      	ldr	r3, [r7, #4]
    16e8:	4a32      	ldr	r2, [pc, #200]	; (17b4 <nvm_erase_row+0xf0>)
    16ea:	4293      	cmp	r3, r2
    16ec:	d803      	bhi.n	16f6 <nvm_erase_row+0x32>
    16ee:	687b      	ldr	r3, [r7, #4]
    16f0:	4a31      	ldr	r2, [pc, #196]	; (17b8 <nvm_erase_row+0xf4>)
    16f2:	4293      	cmp	r3, r2
    16f4:	d801      	bhi.n	16fa <nvm_erase_row+0x36>
    16f6:	2318      	movs	r3, #24
    16f8:	e056      	b.n	17a8 <nvm_erase_row+0xe4>
    16fa:	230f      	movs	r3, #15
    16fc:	18fb      	adds	r3, r7, r3
    16fe:	2201      	movs	r2, #1
    1700:	701a      	strb	r2, [r3, #0]
    1702:	4b2b      	ldr	r3, [pc, #172]	; (17b0 <nvm_erase_row+0xec>)
    1704:	881b      	ldrh	r3, [r3, #0]
    1706:	009b      	lsls	r3, r3, #2
    1708:	3b01      	subs	r3, #1
    170a:	001a      	movs	r2, r3
    170c:	687b      	ldr	r3, [r7, #4]
    170e:	4013      	ands	r3, r2
    1710:	d001      	beq.n	1716 <nvm_erase_row+0x52>
    1712:	2318      	movs	r3, #24
    1714:	e048      	b.n	17a8 <nvm_erase_row+0xe4>
    1716:	4b29      	ldr	r3, [pc, #164]	; (17bc <nvm_erase_row+0xf8>)
    1718:	60bb      	str	r3, [r7, #8]
    171a:	4b29      	ldr	r3, [pc, #164]	; (17c0 <nvm_erase_row+0xfc>)
    171c:	4798      	blx	r3
    171e:	0003      	movs	r3, r0
    1720:	001a      	movs	r2, r3
    1722:	2301      	movs	r3, #1
    1724:	4053      	eors	r3, r2
    1726:	b2db      	uxtb	r3, r3
    1728:	2b00      	cmp	r3, #0
    172a:	d001      	beq.n	1730 <nvm_erase_row+0x6c>
    172c:	2305      	movs	r3, #5
    172e:	e03b      	b.n	17a8 <nvm_erase_row+0xe4>
    1730:	68bb      	ldr	r3, [r7, #8]
    1732:	2220      	movs	r2, #32
    1734:	32ff      	adds	r2, #255	; 0xff
    1736:	831a      	strh	r2, [r3, #24]
    1738:	687b      	ldr	r3, [r7, #4]
    173a:	089b      	lsrs	r3, r3, #2
    173c:	005a      	lsls	r2, r3, #1
    173e:	68bb      	ldr	r3, [r7, #8]
    1740:	61da      	str	r2, [r3, #28]
    1742:	230f      	movs	r3, #15
    1744:	18fb      	adds	r3, r7, r3
    1746:	781b      	ldrb	r3, [r3, #0]
    1748:	2b00      	cmp	r3, #0
    174a:	d00b      	beq.n	1764 <nvm_erase_row+0xa0>
    174c:	68bb      	ldr	r3, [r7, #8]
    174e:	685a      	ldr	r2, [r3, #4]
    1750:	2180      	movs	r1, #128	; 0x80
    1752:	02c9      	lsls	r1, r1, #11
    1754:	430a      	orrs	r2, r1
    1756:	605a      	str	r2, [r3, #4]
    1758:	68bb      	ldr	r3, [r7, #8]
    175a:	685b      	ldr	r3, [r3, #4]
    175c:	68bb      	ldr	r3, [r7, #8]
    175e:	4a19      	ldr	r2, [pc, #100]	; (17c4 <nvm_erase_row+0x100>)
    1760:	801a      	strh	r2, [r3, #0]
    1762:	e002      	b.n	176a <nvm_erase_row+0xa6>
    1764:	68bb      	ldr	r3, [r7, #8]
    1766:	4a18      	ldr	r2, [pc, #96]	; (17c8 <nvm_erase_row+0x104>)
    1768:	801a      	strh	r2, [r3, #0]
    176a:	46c0      	nop			; (mov r8, r8)
    176c:	4b14      	ldr	r3, [pc, #80]	; (17c0 <nvm_erase_row+0xfc>)
    176e:	4798      	blx	r3
    1770:	0003      	movs	r3, r0
    1772:	001a      	movs	r2, r3
    1774:	2301      	movs	r3, #1
    1776:	4053      	eors	r3, r2
    1778:	b2db      	uxtb	r3, r3
    177a:	2b00      	cmp	r3, #0
    177c:	d1f6      	bne.n	176c <nvm_erase_row+0xa8>
    177e:	230f      	movs	r3, #15
    1780:	18fb      	adds	r3, r7, r3
    1782:	781b      	ldrb	r3, [r3, #0]
    1784:	2b00      	cmp	r3, #0
    1786:	d004      	beq.n	1792 <nvm_erase_row+0xce>
    1788:	68bb      	ldr	r3, [r7, #8]
    178a:	685a      	ldr	r2, [r3, #4]
    178c:	490f      	ldr	r1, [pc, #60]	; (17cc <nvm_erase_row+0x108>)
    178e:	400a      	ands	r2, r1
    1790:	605a      	str	r2, [r3, #4]
    1792:	68bb      	ldr	r3, [r7, #8]
    1794:	8b1b      	ldrh	r3, [r3, #24]
    1796:	b29b      	uxth	r3, r3
    1798:	b2db      	uxtb	r3, r3
    179a:	001a      	movs	r2, r3
    179c:	231c      	movs	r3, #28
    179e:	4013      	ands	r3, r2
    17a0:	d001      	beq.n	17a6 <nvm_erase_row+0xe2>
    17a2:	2304      	movs	r3, #4
    17a4:	e000      	b.n	17a8 <nvm_erase_row+0xe4>
    17a6:	2300      	movs	r3, #0
    17a8:	0018      	movs	r0, r3
    17aa:	46bd      	mov	sp, r7
    17ac:	b004      	add	sp, #16
    17ae:	bd80      	pop	{r7, pc}
    17b0:	20000a0c 	.word	0x20000a0c
    17b4:	00401fff 	.word	0x00401fff
    17b8:	003fffff 	.word	0x003fffff
    17bc:	41004000 	.word	0x41004000
    17c0:	00000e51 	.word	0x00000e51
    17c4:	ffffa51a 	.word	0xffffa51a
    17c8:	ffffa502 	.word	0xffffa502
    17cc:	fffbffff 	.word	0xfffbffff

000017d0 <nvm_get_parameters>:
    17d0:	b580      	push	{r7, lr}
    17d2:	b086      	sub	sp, #24
    17d4:	af00      	add	r7, sp, #0
    17d6:	6078      	str	r0, [r7, #4]
    17d8:	4b2c      	ldr	r3, [pc, #176]	; (188c <nvm_get_parameters+0xbc>)
    17da:	617b      	str	r3, [r7, #20]
    17dc:	697b      	ldr	r3, [r7, #20]
    17de:	2220      	movs	r2, #32
    17e0:	32ff      	adds	r2, #255	; 0xff
    17e2:	831a      	strh	r2, [r3, #24]
    17e4:	697b      	ldr	r3, [r7, #20]
    17e6:	689b      	ldr	r3, [r3, #8]
    17e8:	613b      	str	r3, [r7, #16]
    17ea:	693b      	ldr	r3, [r7, #16]
    17ec:	0c1b      	lsrs	r3, r3, #16
    17ee:	2207      	movs	r2, #7
    17f0:	4013      	ands	r3, r2
    17f2:	2208      	movs	r2, #8
    17f4:	409a      	lsls	r2, r3
    17f6:	0013      	movs	r3, r2
    17f8:	b2da      	uxtb	r2, r3
    17fa:	687b      	ldr	r3, [r7, #4]
    17fc:	701a      	strb	r2, [r3, #0]
    17fe:	693b      	ldr	r3, [r7, #16]
    1800:	b29a      	uxth	r2, r3
    1802:	687b      	ldr	r3, [r7, #4]
    1804:	805a      	strh	r2, [r3, #2]
    1806:	693b      	ldr	r3, [r7, #16]
    1808:	0d1b      	lsrs	r3, r3, #20
    180a:	b29a      	uxth	r2, r3
    180c:	687b      	ldr	r3, [r7, #4]
    180e:	819a      	strh	r2, [r3, #12]
    1810:	4b1f      	ldr	r3, [pc, #124]	; (1890 <nvm_get_parameters+0xc0>)
    1812:	881b      	ldrh	r3, [r3, #0]
    1814:	b29b      	uxth	r3, r3
    1816:	091b      	lsrs	r3, r3, #4
    1818:	b29a      	uxth	r2, r3
    181a:	230e      	movs	r3, #14
    181c:	18fb      	adds	r3, r7, r3
    181e:	2107      	movs	r1, #7
    1820:	400a      	ands	r2, r1
    1822:	801a      	strh	r2, [r3, #0]
    1824:	230e      	movs	r3, #14
    1826:	18fb      	adds	r3, r7, r3
    1828:	881b      	ldrh	r3, [r3, #0]
    182a:	2b07      	cmp	r3, #7
    182c:	d103      	bne.n	1836 <nvm_get_parameters+0x66>
    182e:	687b      	ldr	r3, [r7, #4]
    1830:	2200      	movs	r2, #0
    1832:	605a      	str	r2, [r3, #4]
    1834:	e00a      	b.n	184c <nvm_get_parameters+0x7c>
    1836:	230e      	movs	r3, #14
    1838:	18fb      	adds	r3, r7, r3
    183a:	881b      	ldrh	r3, [r3, #0]
    183c:	2206      	movs	r2, #6
    183e:	1ad3      	subs	r3, r2, r3
    1840:	2204      	movs	r2, #4
    1842:	409a      	lsls	r2, r3
    1844:	0013      	movs	r3, r2
    1846:	001a      	movs	r2, r3
    1848:	687b      	ldr	r3, [r7, #4]
    184a:	605a      	str	r2, [r3, #4]
    184c:	4b10      	ldr	r3, [pc, #64]	; (1890 <nvm_get_parameters+0xc0>)
    184e:	881b      	ldrh	r3, [r3, #0]
    1850:	b29a      	uxth	r2, r3
    1852:	230c      	movs	r3, #12
    1854:	18fb      	adds	r3, r7, r3
    1856:	2107      	movs	r1, #7
    1858:	400a      	ands	r2, r1
    185a:	801a      	strh	r2, [r3, #0]
    185c:	230c      	movs	r3, #12
    185e:	18fb      	adds	r3, r7, r3
    1860:	881b      	ldrh	r3, [r3, #0]
    1862:	2b07      	cmp	r3, #7
    1864:	d103      	bne.n	186e <nvm_get_parameters+0x9e>
    1866:	687b      	ldr	r3, [r7, #4]
    1868:	2200      	movs	r2, #0
    186a:	609a      	str	r2, [r3, #8]
    186c:	e00a      	b.n	1884 <nvm_get_parameters+0xb4>
    186e:	230c      	movs	r3, #12
    1870:	18fb      	adds	r3, r7, r3
    1872:	881b      	ldrh	r3, [r3, #0]
    1874:	2207      	movs	r2, #7
    1876:	1ad3      	subs	r3, r2, r3
    1878:	2204      	movs	r2, #4
    187a:	409a      	lsls	r2, r3
    187c:	0013      	movs	r3, r2
    187e:	001a      	movs	r2, r3
    1880:	687b      	ldr	r3, [r7, #4]
    1882:	609a      	str	r2, [r3, #8]
    1884:	46c0      	nop			; (mov r8, r8)
    1886:	46bd      	mov	sp, r7
    1888:	b006      	add	sp, #24
    188a:	bd80      	pop	{r7, pc}
    188c:	41004000 	.word	0x41004000
    1890:	00804000 	.word	0x00804000

00001894 <system_pinmux_get_config_defaults>:
    1894:	b580      	push	{r7, lr}
    1896:	b082      	sub	sp, #8
    1898:	af00      	add	r7, sp, #0
    189a:	6078      	str	r0, [r7, #4]
    189c:	687b      	ldr	r3, [r7, #4]
    189e:	2280      	movs	r2, #128	; 0x80
    18a0:	701a      	strb	r2, [r3, #0]
    18a2:	687b      	ldr	r3, [r7, #4]
    18a4:	2200      	movs	r2, #0
    18a6:	705a      	strb	r2, [r3, #1]
    18a8:	687b      	ldr	r3, [r7, #4]
    18aa:	2201      	movs	r2, #1
    18ac:	709a      	strb	r2, [r3, #2]
    18ae:	687b      	ldr	r3, [r7, #4]
    18b0:	2200      	movs	r2, #0
    18b2:	70da      	strb	r2, [r3, #3]
    18b4:	46c0      	nop			; (mov r8, r8)
    18b6:	46bd      	mov	sp, r7
    18b8:	b002      	add	sp, #8
    18ba:	bd80      	pop	{r7, pc}

000018bc <port_pin_set_config>:
    18bc:	b580      	push	{r7, lr}
    18be:	b084      	sub	sp, #16
    18c0:	af00      	add	r7, sp, #0
    18c2:	0002      	movs	r2, r0
    18c4:	6039      	str	r1, [r7, #0]
    18c6:	1dfb      	adds	r3, r7, #7
    18c8:	701a      	strb	r2, [r3, #0]
    18ca:	230c      	movs	r3, #12
    18cc:	18fb      	adds	r3, r7, r3
    18ce:	0018      	movs	r0, r3
    18d0:	4b10      	ldr	r3, [pc, #64]	; (1914 <port_pin_set_config+0x58>)
    18d2:	4798      	blx	r3
    18d4:	230c      	movs	r3, #12
    18d6:	18fb      	adds	r3, r7, r3
    18d8:	2280      	movs	r2, #128	; 0x80
    18da:	701a      	strb	r2, [r3, #0]
    18dc:	683b      	ldr	r3, [r7, #0]
    18de:	781a      	ldrb	r2, [r3, #0]
    18e0:	230c      	movs	r3, #12
    18e2:	18fb      	adds	r3, r7, r3
    18e4:	705a      	strb	r2, [r3, #1]
    18e6:	683b      	ldr	r3, [r7, #0]
    18e8:	785a      	ldrb	r2, [r3, #1]
    18ea:	230c      	movs	r3, #12
    18ec:	18fb      	adds	r3, r7, r3
    18ee:	709a      	strb	r2, [r3, #2]
    18f0:	683b      	ldr	r3, [r7, #0]
    18f2:	789a      	ldrb	r2, [r3, #2]
    18f4:	230c      	movs	r3, #12
    18f6:	18fb      	adds	r3, r7, r3
    18f8:	70da      	strb	r2, [r3, #3]
    18fa:	230c      	movs	r3, #12
    18fc:	18fa      	adds	r2, r7, r3
    18fe:	1dfb      	adds	r3, r7, #7
    1900:	781b      	ldrb	r3, [r3, #0]
    1902:	0011      	movs	r1, r2
    1904:	0018      	movs	r0, r3
    1906:	4b04      	ldr	r3, [pc, #16]	; (1918 <port_pin_set_config+0x5c>)
    1908:	4798      	blx	r3
    190a:	46c0      	nop			; (mov r8, r8)
    190c:	46bd      	mov	sp, r7
    190e:	b004      	add	sp, #16
    1910:	bd80      	pop	{r7, pc}
    1912:	46c0      	nop			; (mov r8, r8)
    1914:	00001895 	.word	0x00001895
    1918:	0000597d 	.word	0x0000597d

0000191c <_rtc_interrupt_handler>:
    191c:	b580      	push	{r7, lr}
    191e:	b086      	sub	sp, #24
    1920:	af00      	add	r7, sp, #0
    1922:	6078      	str	r0, [r7, #4]
    1924:	4b58      	ldr	r3, [pc, #352]	; (1a88 <_rtc_interrupt_handler+0x16c>)
    1926:	687a      	ldr	r2, [r7, #4]
    1928:	0092      	lsls	r2, r2, #2
    192a:	58d3      	ldr	r3, [r2, r3]
    192c:	613b      	str	r3, [r7, #16]
    192e:	693b      	ldr	r3, [r7, #16]
    1930:	681b      	ldr	r3, [r3, #0]
    1932:	60fb      	str	r3, [r7, #12]
    1934:	230a      	movs	r3, #10
    1936:	18fb      	adds	r3, r7, r3
    1938:	693a      	ldr	r2, [r7, #16]
    193a:	8ed2      	ldrh	r2, [r2, #54]	; 0x36
    193c:	801a      	strh	r2, [r3, #0]
    193e:	693b      	ldr	r3, [r7, #16]
    1940:	8e9b      	ldrh	r3, [r3, #52]	; 0x34
    1942:	b29a      	uxth	r2, r3
    1944:	230a      	movs	r3, #10
    1946:	18fb      	adds	r3, r7, r3
    1948:	210a      	movs	r1, #10
    194a:	1879      	adds	r1, r7, r1
    194c:	8809      	ldrh	r1, [r1, #0]
    194e:	400a      	ands	r2, r1
    1950:	801a      	strh	r2, [r3, #0]
    1952:	2308      	movs	r3, #8
    1954:	18fb      	adds	r3, r7, r3
    1956:	68fa      	ldr	r2, [r7, #12]
    1958:	8992      	ldrh	r2, [r2, #12]
    195a:	801a      	strh	r2, [r3, #0]
    195c:	68fb      	ldr	r3, [r7, #12]
    195e:	895b      	ldrh	r3, [r3, #10]
    1960:	b29a      	uxth	r2, r3
    1962:	2308      	movs	r3, #8
    1964:	18fb      	adds	r3, r7, r3
    1966:	2108      	movs	r1, #8
    1968:	1879      	adds	r1, r7, r1
    196a:	8809      	ldrh	r1, [r1, #0]
    196c:	400a      	ands	r2, r1
    196e:	801a      	strh	r2, [r3, #0]
    1970:	2308      	movs	r3, #8
    1972:	18fb      	adds	r3, r7, r3
    1974:	2200      	movs	r2, #0
    1976:	5e9b      	ldrsh	r3, [r3, r2]
    1978:	2b00      	cmp	r3, #0
    197a:	da0d      	bge.n	1998 <_rtc_interrupt_handler+0x7c>
    197c:	230a      	movs	r3, #10
    197e:	18fb      	adds	r3, r7, r3
    1980:	881a      	ldrh	r2, [r3, #0]
    1982:	2380      	movs	r3, #128	; 0x80
    1984:	00db      	lsls	r3, r3, #3
    1986:	4013      	ands	r3, r2
    1988:	d002      	beq.n	1990 <_rtc_interrupt_handler+0x74>
    198a:	693b      	ldr	r3, [r7, #16]
    198c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    198e:	4798      	blx	r3
    1990:	68fb      	ldr	r3, [r7, #12]
    1992:	4a3e      	ldr	r2, [pc, #248]	; (1a8c <_rtc_interrupt_handler+0x170>)
    1994:	819a      	strh	r2, [r3, #12]
    1996:	e072      	b.n	1a7e <_rtc_interrupt_handler+0x162>
    1998:	2308      	movs	r3, #8
    199a:	18fb      	adds	r3, r7, r3
    199c:	881b      	ldrh	r3, [r3, #0]
    199e:	22ff      	movs	r2, #255	; 0xff
    19a0:	4013      	ands	r3, r2
    19a2:	d041      	beq.n	1a28 <_rtc_interrupt_handler+0x10c>
    19a4:	2317      	movs	r3, #23
    19a6:	18fb      	adds	r3, r7, r3
    19a8:	2200      	movs	r2, #0
    19aa:	701a      	strb	r2, [r3, #0]
    19ac:	2317      	movs	r3, #23
    19ae:	18fb      	adds	r3, r7, r3
    19b0:	2200      	movs	r2, #0
    19b2:	701a      	strb	r2, [r3, #0]
    19b4:	e032      	b.n	1a1c <_rtc_interrupt_handler+0x100>
    19b6:	2308      	movs	r3, #8
    19b8:	18fb      	adds	r3, r7, r3
    19ba:	881b      	ldrh	r3, [r3, #0]
    19bc:	2217      	movs	r2, #23
    19be:	18ba      	adds	r2, r7, r2
    19c0:	7812      	ldrb	r2, [r2, #0]
    19c2:	2101      	movs	r1, #1
    19c4:	4091      	lsls	r1, r2
    19c6:	000a      	movs	r2, r1
    19c8:	4013      	ands	r3, r2
    19ca:	22ff      	movs	r2, #255	; 0xff
    19cc:	4013      	ands	r3, r2
    19ce:	d012      	beq.n	19f6 <_rtc_interrupt_handler+0xda>
    19d0:	230a      	movs	r3, #10
    19d2:	18fb      	adds	r3, r7, r3
    19d4:	881a      	ldrh	r2, [r3, #0]
    19d6:	2317      	movs	r3, #23
    19d8:	18fb      	adds	r3, r7, r3
    19da:	781b      	ldrb	r3, [r3, #0]
    19dc:	411a      	asrs	r2, r3
    19de:	0013      	movs	r3, r2
    19e0:	2201      	movs	r2, #1
    19e2:	4013      	ands	r3, r2
    19e4:	d007      	beq.n	19f6 <_rtc_interrupt_handler+0xda>
    19e6:	2317      	movs	r3, #23
    19e8:	18fb      	adds	r3, r7, r3
    19ea:	781a      	ldrb	r2, [r3, #0]
    19ec:	693b      	ldr	r3, [r7, #16]
    19ee:	3202      	adds	r2, #2
    19f0:	0092      	lsls	r2, r2, #2
    19f2:	58d3      	ldr	r3, [r2, r3]
    19f4:	4798      	blx	r3
    19f6:	2317      	movs	r3, #23
    19f8:	18fb      	adds	r3, r7, r3
    19fa:	781b      	ldrb	r3, [r3, #0]
    19fc:	2201      	movs	r2, #1
    19fe:	409a      	lsls	r2, r3
    1a00:	0013      	movs	r3, r2
    1a02:	b29b      	uxth	r3, r3
    1a04:	22ff      	movs	r2, #255	; 0xff
    1a06:	4013      	ands	r3, r2
    1a08:	b29a      	uxth	r2, r3
    1a0a:	68fb      	ldr	r3, [r7, #12]
    1a0c:	819a      	strh	r2, [r3, #12]
    1a0e:	2317      	movs	r3, #23
    1a10:	18fb      	adds	r3, r7, r3
    1a12:	781a      	ldrb	r2, [r3, #0]
    1a14:	2317      	movs	r3, #23
    1a16:	18fb      	adds	r3, r7, r3
    1a18:	3201      	adds	r2, #1
    1a1a:	701a      	strb	r2, [r3, #0]
    1a1c:	2317      	movs	r3, #23
    1a1e:	18fb      	adds	r3, r7, r3
    1a20:	781b      	ldrb	r3, [r3, #0]
    1a22:	2b07      	cmp	r3, #7
    1a24:	d9c7      	bls.n	19b6 <_rtc_interrupt_handler+0x9a>
    1a26:	e02a      	b.n	1a7e <_rtc_interrupt_handler+0x162>
    1a28:	2308      	movs	r3, #8
    1a2a:	18fb      	adds	r3, r7, r3
    1a2c:	881a      	ldrh	r2, [r3, #0]
    1a2e:	2380      	movs	r3, #128	; 0x80
    1a30:	005b      	lsls	r3, r3, #1
    1a32:	4013      	ands	r3, r2
    1a34:	d00e      	beq.n	1a54 <_rtc_interrupt_handler+0x138>
    1a36:	230a      	movs	r3, #10
    1a38:	18fb      	adds	r3, r7, r3
    1a3a:	881a      	ldrh	r2, [r3, #0]
    1a3c:	2380      	movs	r3, #128	; 0x80
    1a3e:	005b      	lsls	r3, r3, #1
    1a40:	4013      	ands	r3, r2
    1a42:	d002      	beq.n	1a4a <_rtc_interrupt_handler+0x12e>
    1a44:	693b      	ldr	r3, [r7, #16]
    1a46:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1a48:	4798      	blx	r3
    1a4a:	68fb      	ldr	r3, [r7, #12]
    1a4c:	2280      	movs	r2, #128	; 0x80
    1a4e:	0052      	lsls	r2, r2, #1
    1a50:	819a      	strh	r2, [r3, #12]
    1a52:	e014      	b.n	1a7e <_rtc_interrupt_handler+0x162>
    1a54:	2308      	movs	r3, #8
    1a56:	18fb      	adds	r3, r7, r3
    1a58:	881a      	ldrh	r2, [r3, #0]
    1a5a:	2380      	movs	r3, #128	; 0x80
    1a5c:	009b      	lsls	r3, r3, #2
    1a5e:	4013      	ands	r3, r2
    1a60:	d00d      	beq.n	1a7e <_rtc_interrupt_handler+0x162>
    1a62:	230a      	movs	r3, #10
    1a64:	18fb      	adds	r3, r7, r3
    1a66:	881a      	ldrh	r2, [r3, #0]
    1a68:	2380      	movs	r3, #128	; 0x80
    1a6a:	009b      	lsls	r3, r3, #2
    1a6c:	4013      	ands	r3, r2
    1a6e:	d002      	beq.n	1a76 <_rtc_interrupt_handler+0x15a>
    1a70:	693b      	ldr	r3, [r7, #16]
    1a72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    1a74:	4798      	blx	r3
    1a76:	68fb      	ldr	r3, [r7, #12]
    1a78:	2280      	movs	r2, #128	; 0x80
    1a7a:	0092      	lsls	r2, r2, #2
    1a7c:	819a      	strh	r2, [r3, #12]
    1a7e:	46c0      	nop			; (mov r8, r8)
    1a80:	46bd      	mov	sp, r7
    1a82:	b006      	add	sp, #24
    1a84:	bd80      	pop	{r7, pc}
    1a86:	46c0      	nop			; (mov r8, r8)
    1a88:	20000d18 	.word	0x20000d18
    1a8c:	ffff8000 	.word	0xffff8000

00001a90 <RTC_Handler>:
    1a90:	b580      	push	{r7, lr}
    1a92:	af00      	add	r7, sp, #0
    1a94:	2000      	movs	r0, #0
    1a96:	4b02      	ldr	r3, [pc, #8]	; (1aa0 <RTC_Handler+0x10>)
    1a98:	4798      	blx	r3
    1a9a:	46c0      	nop			; (mov r8, r8)
    1a9c:	46bd      	mov	sp, r7
    1a9e:	bd80      	pop	{r7, pc}
    1aa0:	0000191d 	.word	0x0000191d

00001aa4 <system_gclk_chan_get_config_defaults>:
    1aa4:	b580      	push	{r7, lr}
    1aa6:	b082      	sub	sp, #8
    1aa8:	af00      	add	r7, sp, #0
    1aaa:	6078      	str	r0, [r7, #4]
    1aac:	687b      	ldr	r3, [r7, #4]
    1aae:	2200      	movs	r2, #0
    1ab0:	701a      	strb	r2, [r3, #0]
    1ab2:	46c0      	nop			; (mov r8, r8)
    1ab4:	46bd      	mov	sp, r7
    1ab6:	b002      	add	sp, #8
    1ab8:	bd80      	pop	{r7, pc}
	...

00001abc <system_apb_clock_set_mask>:
    1abc:	b580      	push	{r7, lr}
    1abe:	b082      	sub	sp, #8
    1ac0:	af00      	add	r7, sp, #0
    1ac2:	0002      	movs	r2, r0
    1ac4:	6039      	str	r1, [r7, #0]
    1ac6:	1dfb      	adds	r3, r7, #7
    1ac8:	701a      	strb	r2, [r3, #0]
    1aca:	1dfb      	adds	r3, r7, #7
    1acc:	781b      	ldrb	r3, [r3, #0]
    1ace:	2b04      	cmp	r3, #4
    1ad0:	d827      	bhi.n	1b22 <system_apb_clock_set_mask+0x66>
    1ad2:	009a      	lsls	r2, r3, #2
    1ad4:	4b16      	ldr	r3, [pc, #88]	; (1b30 <system_apb_clock_set_mask+0x74>)
    1ad6:	18d3      	adds	r3, r2, r3
    1ad8:	681b      	ldr	r3, [r3, #0]
    1ada:	469f      	mov	pc, r3
    1adc:	4b15      	ldr	r3, [pc, #84]	; (1b34 <system_apb_clock_set_mask+0x78>)
    1ade:	4a15      	ldr	r2, [pc, #84]	; (1b34 <system_apb_clock_set_mask+0x78>)
    1ae0:	6951      	ldr	r1, [r2, #20]
    1ae2:	683a      	ldr	r2, [r7, #0]
    1ae4:	430a      	orrs	r2, r1
    1ae6:	615a      	str	r2, [r3, #20]
    1ae8:	e01d      	b.n	1b26 <system_apb_clock_set_mask+0x6a>
    1aea:	4b12      	ldr	r3, [pc, #72]	; (1b34 <system_apb_clock_set_mask+0x78>)
    1aec:	4a11      	ldr	r2, [pc, #68]	; (1b34 <system_apb_clock_set_mask+0x78>)
    1aee:	6991      	ldr	r1, [r2, #24]
    1af0:	683a      	ldr	r2, [r7, #0]
    1af2:	430a      	orrs	r2, r1
    1af4:	619a      	str	r2, [r3, #24]
    1af6:	e016      	b.n	1b26 <system_apb_clock_set_mask+0x6a>
    1af8:	4b0e      	ldr	r3, [pc, #56]	; (1b34 <system_apb_clock_set_mask+0x78>)
    1afa:	4a0e      	ldr	r2, [pc, #56]	; (1b34 <system_apb_clock_set_mask+0x78>)
    1afc:	69d1      	ldr	r1, [r2, #28]
    1afe:	683a      	ldr	r2, [r7, #0]
    1b00:	430a      	orrs	r2, r1
    1b02:	61da      	str	r2, [r3, #28]
    1b04:	e00f      	b.n	1b26 <system_apb_clock_set_mask+0x6a>
    1b06:	4b0b      	ldr	r3, [pc, #44]	; (1b34 <system_apb_clock_set_mask+0x78>)
    1b08:	4a0a      	ldr	r2, [pc, #40]	; (1b34 <system_apb_clock_set_mask+0x78>)
    1b0a:	6a11      	ldr	r1, [r2, #32]
    1b0c:	683a      	ldr	r2, [r7, #0]
    1b0e:	430a      	orrs	r2, r1
    1b10:	621a      	str	r2, [r3, #32]
    1b12:	e008      	b.n	1b26 <system_apb_clock_set_mask+0x6a>
    1b14:	4b07      	ldr	r3, [pc, #28]	; (1b34 <system_apb_clock_set_mask+0x78>)
    1b16:	4a07      	ldr	r2, [pc, #28]	; (1b34 <system_apb_clock_set_mask+0x78>)
    1b18:	6a51      	ldr	r1, [r2, #36]	; 0x24
    1b1a:	683a      	ldr	r2, [r7, #0]
    1b1c:	430a      	orrs	r2, r1
    1b1e:	625a      	str	r2, [r3, #36]	; 0x24
    1b20:	e001      	b.n	1b26 <system_apb_clock_set_mask+0x6a>
    1b22:	2317      	movs	r3, #23
    1b24:	e000      	b.n	1b28 <system_apb_clock_set_mask+0x6c>
    1b26:	2300      	movs	r3, #0
    1b28:	0018      	movs	r0, r3
    1b2a:	46bd      	mov	sp, r7
    1b2c:	b002      	add	sp, #8
    1b2e:	bd80      	pop	{r7, pc}
    1b30:	0001caf0 	.word	0x0001caf0
    1b34:	40000400 	.word	0x40000400

00001b38 <system_pinmux_get_config_defaults>:
    1b38:	b580      	push	{r7, lr}
    1b3a:	b082      	sub	sp, #8
    1b3c:	af00      	add	r7, sp, #0
    1b3e:	6078      	str	r0, [r7, #4]
    1b40:	687b      	ldr	r3, [r7, #4]
    1b42:	2280      	movs	r2, #128	; 0x80
    1b44:	701a      	strb	r2, [r3, #0]
    1b46:	687b      	ldr	r3, [r7, #4]
    1b48:	2200      	movs	r2, #0
    1b4a:	705a      	strb	r2, [r3, #1]
    1b4c:	687b      	ldr	r3, [r7, #4]
    1b4e:	2201      	movs	r2, #1
    1b50:	709a      	strb	r2, [r3, #2]
    1b52:	687b      	ldr	r3, [r7, #4]
    1b54:	2200      	movs	r2, #0
    1b56:	70da      	strb	r2, [r3, #3]
    1b58:	46c0      	nop			; (mov r8, r8)
    1b5a:	46bd      	mov	sp, r7
    1b5c:	b002      	add	sp, #8
    1b5e:	bd80      	pop	{r7, pc}

00001b60 <system_is_debugger_present>:
    1b60:	b580      	push	{r7, lr}
    1b62:	af00      	add	r7, sp, #0
    1b64:	4b05      	ldr	r3, [pc, #20]	; (1b7c <system_is_debugger_present+0x1c>)
    1b66:	789b      	ldrb	r3, [r3, #2]
    1b68:	b2db      	uxtb	r3, r3
    1b6a:	001a      	movs	r2, r3
    1b6c:	2302      	movs	r3, #2
    1b6e:	4013      	ands	r3, r2
    1b70:	1e5a      	subs	r2, r3, #1
    1b72:	4193      	sbcs	r3, r2
    1b74:	b2db      	uxtb	r3, r3
    1b76:	0018      	movs	r0, r3
    1b78:	46bd      	mov	sp, r7
    1b7a:	bd80      	pop	{r7, pc}
    1b7c:	41002000 	.word	0x41002000

00001b80 <i2c_master_is_syncing>:
    1b80:	b580      	push	{r7, lr}
    1b82:	b084      	sub	sp, #16
    1b84:	af00      	add	r7, sp, #0
    1b86:	6078      	str	r0, [r7, #4]
    1b88:	687b      	ldr	r3, [r7, #4]
    1b8a:	681b      	ldr	r3, [r3, #0]
    1b8c:	60fb      	str	r3, [r7, #12]
    1b8e:	68fb      	ldr	r3, [r7, #12]
    1b90:	69db      	ldr	r3, [r3, #28]
    1b92:	2207      	movs	r2, #7
    1b94:	4013      	ands	r3, r2
    1b96:	1e5a      	subs	r2, r3, #1
    1b98:	4193      	sbcs	r3, r2
    1b9a:	b2db      	uxtb	r3, r3
    1b9c:	0018      	movs	r0, r3
    1b9e:	46bd      	mov	sp, r7
    1ba0:	b004      	add	sp, #16
    1ba2:	bd80      	pop	{r7, pc}

00001ba4 <_i2c_master_wait_for_sync>:
    1ba4:	b580      	push	{r7, lr}
    1ba6:	b082      	sub	sp, #8
    1ba8:	af00      	add	r7, sp, #0
    1baa:	6078      	str	r0, [r7, #4]
    1bac:	46c0      	nop			; (mov r8, r8)
    1bae:	687b      	ldr	r3, [r7, #4]
    1bb0:	0018      	movs	r0, r3
    1bb2:	4b04      	ldr	r3, [pc, #16]	; (1bc4 <_i2c_master_wait_for_sync+0x20>)
    1bb4:	4798      	blx	r3
    1bb6:	1e03      	subs	r3, r0, #0
    1bb8:	d1f9      	bne.n	1bae <_i2c_master_wait_for_sync+0xa>
    1bba:	46c0      	nop			; (mov r8, r8)
    1bbc:	46bd      	mov	sp, r7
    1bbe:	b002      	add	sp, #8
    1bc0:	bd80      	pop	{r7, pc}
    1bc2:	46c0      	nop			; (mov r8, r8)
    1bc4:	00001b81 	.word	0x00001b81

00001bc8 <_i2c_master_set_config>:
    1bc8:	b5f0      	push	{r4, r5, r6, r7, lr}
    1bca:	b097      	sub	sp, #92	; 0x5c
    1bcc:	af00      	add	r7, sp, #0
    1bce:	6178      	str	r0, [r7, #20]
    1bd0:	6139      	str	r1, [r7, #16]
    1bd2:	2300      	movs	r3, #0
    1bd4:	63fb      	str	r3, [r7, #60]	; 0x3c
    1bd6:	2300      	movs	r3, #0
    1bd8:	653b      	str	r3, [r7, #80]	; 0x50
    1bda:	2300      	movs	r3, #0
    1bdc:	64fb      	str	r3, [r7, #76]	; 0x4c
    1bde:	233b      	movs	r3, #59	; 0x3b
    1be0:	2210      	movs	r2, #16
    1be2:	4694      	mov	ip, r2
    1be4:	44bc      	add	ip, r7
    1be6:	4463      	add	r3, ip
    1be8:	2200      	movs	r2, #0
    1bea:	701a      	strb	r2, [r3, #0]
    1bec:	697b      	ldr	r3, [r7, #20]
    1bee:	681b      	ldr	r3, [r3, #0]
    1bf0:	63bb      	str	r3, [r7, #56]	; 0x38
    1bf2:	697b      	ldr	r3, [r7, #20]
    1bf4:	681b      	ldr	r3, [r3, #0]
    1bf6:	637b      	str	r3, [r7, #52]	; 0x34
    1bf8:	2323      	movs	r3, #35	; 0x23
    1bfa:	2210      	movs	r2, #16
    1bfc:	18ba      	adds	r2, r7, r2
    1bfe:	18d4      	adds	r4, r2, r3
    1c00:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    1c02:	0018      	movs	r0, r3
    1c04:	4bc0      	ldr	r3, [pc, #768]	; (1f08 <_i2c_master_set_config+0x340>)
    1c06:	4798      	blx	r3
    1c08:	0003      	movs	r3, r0
    1c0a:	7023      	strb	r3, [r4, #0]
    1c0c:	230c      	movs	r3, #12
    1c0e:	2210      	movs	r2, #16
    1c10:	4694      	mov	ip, r2
    1c12:	44bc      	add	ip, r7
    1c14:	4463      	add	r3, ip
    1c16:	0018      	movs	r0, r3
    1c18:	4bbc      	ldr	r3, [pc, #752]	; (1f0c <_i2c_master_set_config+0x344>)
    1c1a:	4798      	blx	r3
    1c1c:	693b      	ldr	r3, [r7, #16]
    1c1e:	69db      	ldr	r3, [r3, #28]
    1c20:	647b      	str	r3, [r7, #68]	; 0x44
    1c22:	693b      	ldr	r3, [r7, #16]
    1c24:	6a1b      	ldr	r3, [r3, #32]
    1c26:	643b      	str	r3, [r7, #64]	; 0x40
    1c28:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    1c2a:	2b00      	cmp	r3, #0
    1c2c:	d106      	bne.n	1c3c <_i2c_master_set_config+0x74>
    1c2e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    1c30:	2100      	movs	r1, #0
    1c32:	0018      	movs	r0, r3
    1c34:	4bb6      	ldr	r3, [pc, #728]	; (1f10 <_i2c_master_set_config+0x348>)
    1c36:	4798      	blx	r3
    1c38:	0003      	movs	r3, r0
    1c3a:	647b      	str	r3, [r7, #68]	; 0x44
    1c3c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    1c3e:	b2da      	uxtb	r2, r3
    1c40:	230c      	movs	r3, #12
    1c42:	2110      	movs	r1, #16
    1c44:	468c      	mov	ip, r1
    1c46:	44bc      	add	ip, r7
    1c48:	4463      	add	r3, ip
    1c4a:	701a      	strb	r2, [r3, #0]
    1c4c:	230c      	movs	r3, #12
    1c4e:	2210      	movs	r2, #16
    1c50:	4694      	mov	ip, r2
    1c52:	44bc      	add	ip, r7
    1c54:	4463      	add	r3, ip
    1c56:	2202      	movs	r2, #2
    1c58:	705a      	strb	r2, [r3, #1]
    1c5a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    1c5c:	0c1b      	lsrs	r3, r3, #16
    1c5e:	b2db      	uxtb	r3, r3
    1c60:	220c      	movs	r2, #12
    1c62:	2110      	movs	r1, #16
    1c64:	468c      	mov	ip, r1
    1c66:	44bc      	add	ip, r7
    1c68:	4462      	add	r2, ip
    1c6a:	0011      	movs	r1, r2
    1c6c:	0018      	movs	r0, r3
    1c6e:	4ba9      	ldr	r3, [pc, #676]	; (1f14 <_i2c_master_set_config+0x34c>)
    1c70:	4798      	blx	r3
    1c72:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    1c74:	2b00      	cmp	r3, #0
    1c76:	d106      	bne.n	1c86 <_i2c_master_set_config+0xbe>
    1c78:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    1c7a:	2101      	movs	r1, #1
    1c7c:	0018      	movs	r0, r3
    1c7e:	4ba4      	ldr	r3, [pc, #656]	; (1f10 <_i2c_master_set_config+0x348>)
    1c80:	4798      	blx	r3
    1c82:	0003      	movs	r3, r0
    1c84:	643b      	str	r3, [r7, #64]	; 0x40
    1c86:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    1c88:	b2da      	uxtb	r2, r3
    1c8a:	230c      	movs	r3, #12
    1c8c:	2110      	movs	r1, #16
    1c8e:	468c      	mov	ip, r1
    1c90:	44bc      	add	ip, r7
    1c92:	4463      	add	r3, ip
    1c94:	701a      	strb	r2, [r3, #0]
    1c96:	230c      	movs	r3, #12
    1c98:	2210      	movs	r2, #16
    1c9a:	4694      	mov	ip, r2
    1c9c:	44bc      	add	ip, r7
    1c9e:	4463      	add	r3, ip
    1ca0:	2202      	movs	r2, #2
    1ca2:	705a      	strb	r2, [r3, #1]
    1ca4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    1ca6:	0c1b      	lsrs	r3, r3, #16
    1ca8:	b2db      	uxtb	r3, r3
    1caa:	220c      	movs	r2, #12
    1cac:	2110      	movs	r1, #16
    1cae:	468c      	mov	ip, r1
    1cb0:	44bc      	add	ip, r7
    1cb2:	4462      	add	r2, ip
    1cb4:	0011      	movs	r1, r2
    1cb6:	0018      	movs	r0, r3
    1cb8:	4b96      	ldr	r3, [pc, #600]	; (1f14 <_i2c_master_set_config+0x34c>)
    1cba:	4798      	blx	r3
    1cbc:	693b      	ldr	r3, [r7, #16]
    1cbe:	8a9a      	ldrh	r2, [r3, #20]
    1cc0:	697b      	ldr	r3, [r7, #20]
    1cc2:	80da      	strh	r2, [r3, #6]
    1cc4:	693b      	ldr	r3, [r7, #16]
    1cc6:	8ada      	ldrh	r2, [r3, #22]
    1cc8:	697b      	ldr	r3, [r7, #20]
    1cca:	811a      	strh	r2, [r3, #8]
    1ccc:	693b      	ldr	r3, [r7, #16]
    1cce:	7e1b      	ldrb	r3, [r3, #24]
    1cd0:	2b00      	cmp	r3, #0
    1cd2:	d103      	bne.n	1cdc <_i2c_master_set_config+0x114>
    1cd4:	4b90      	ldr	r3, [pc, #576]	; (1f18 <_i2c_master_set_config+0x350>)
    1cd6:	4798      	blx	r3
    1cd8:	1e03      	subs	r3, r0, #0
    1cda:	d002      	beq.n	1ce2 <_i2c_master_set_config+0x11a>
    1cdc:	2380      	movs	r3, #128	; 0x80
    1cde:	657b      	str	r3, [r7, #84]	; 0x54
    1ce0:	e001      	b.n	1ce6 <_i2c_master_set_config+0x11e>
    1ce2:	2300      	movs	r3, #0
    1ce4:	657b      	str	r3, [r7, #84]	; 0x54
    1ce6:	693b      	ldr	r3, [r7, #16]
    1ce8:	691b      	ldr	r3, [r3, #16]
    1cea:	2b00      	cmp	r3, #0
    1cec:	d004      	beq.n	1cf8 <_i2c_master_set_config+0x130>
    1cee:	693b      	ldr	r3, [r7, #16]
    1cf0:	691b      	ldr	r3, [r3, #16]
    1cf2:	6d7a      	ldr	r2, [r7, #84]	; 0x54
    1cf4:	4313      	orrs	r3, r2
    1cf6:	657b      	str	r3, [r7, #84]	; 0x54
    1cf8:	693b      	ldr	r3, [r7, #16]
    1cfa:	689b      	ldr	r3, [r3, #8]
    1cfc:	6d7a      	ldr	r2, [r7, #84]	; 0x54
    1cfe:	4313      	orrs	r3, r2
    1d00:	657b      	str	r3, [r7, #84]	; 0x54
    1d02:	693b      	ldr	r3, [r7, #16]
    1d04:	2224      	movs	r2, #36	; 0x24
    1d06:	5c9b      	ldrb	r3, [r3, r2]
    1d08:	2b00      	cmp	r3, #0
    1d0a:	d004      	beq.n	1d16 <_i2c_master_set_config+0x14e>
    1d0c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    1d0e:	2280      	movs	r2, #128	; 0x80
    1d10:	05d2      	lsls	r2, r2, #23
    1d12:	4313      	orrs	r3, r2
    1d14:	657b      	str	r3, [r7, #84]	; 0x54
    1d16:	693b      	ldr	r3, [r7, #16]
    1d18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1d1a:	2b00      	cmp	r3, #0
    1d1c:	d004      	beq.n	1d28 <_i2c_master_set_config+0x160>
    1d1e:	693b      	ldr	r3, [r7, #16]
    1d20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1d22:	6d7a      	ldr	r2, [r7, #84]	; 0x54
    1d24:	4313      	orrs	r3, r2
    1d26:	657b      	str	r3, [r7, #84]	; 0x54
    1d28:	693b      	ldr	r3, [r7, #16]
    1d2a:	222c      	movs	r2, #44	; 0x2c
    1d2c:	5c9b      	ldrb	r3, [r3, r2]
    1d2e:	2b00      	cmp	r3, #0
    1d30:	d105      	bne.n	1d3e <_i2c_master_set_config+0x176>
    1d32:	693b      	ldr	r3, [r7, #16]
    1d34:	689a      	ldr	r2, [r3, #8]
    1d36:	2380      	movs	r3, #128	; 0x80
    1d38:	049b      	lsls	r3, r3, #18
    1d3a:	429a      	cmp	r2, r3
    1d3c:	d104      	bne.n	1d48 <_i2c_master_set_config+0x180>
    1d3e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    1d40:	2280      	movs	r2, #128	; 0x80
    1d42:	0512      	lsls	r2, r2, #20
    1d44:	4313      	orrs	r3, r2
    1d46:	657b      	str	r3, [r7, #84]	; 0x54
    1d48:	693b      	ldr	r3, [r7, #16]
    1d4a:	222d      	movs	r2, #45	; 0x2d
    1d4c:	5c9b      	ldrb	r3, [r3, r2]
    1d4e:	2b00      	cmp	r3, #0
    1d50:	d004      	beq.n	1d5c <_i2c_master_set_config+0x194>
    1d52:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    1d54:	2280      	movs	r2, #128	; 0x80
    1d56:	0412      	lsls	r2, r2, #16
    1d58:	4313      	orrs	r3, r2
    1d5a:	657b      	str	r3, [r7, #84]	; 0x54
    1d5c:	693b      	ldr	r3, [r7, #16]
    1d5e:	222e      	movs	r2, #46	; 0x2e
    1d60:	5c9b      	ldrb	r3, [r3, r2]
    1d62:	2b00      	cmp	r3, #0
    1d64:	d004      	beq.n	1d70 <_i2c_master_set_config+0x1a8>
    1d66:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    1d68:	2280      	movs	r2, #128	; 0x80
    1d6a:	03d2      	lsls	r2, r2, #15
    1d6c:	4313      	orrs	r3, r2
    1d6e:	657b      	str	r3, [r7, #84]	; 0x54
    1d70:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    1d72:	681a      	ldr	r2, [r3, #0]
    1d74:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    1d76:	431a      	orrs	r2, r3
    1d78:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    1d7a:	601a      	str	r2, [r3, #0]
    1d7c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    1d7e:	2280      	movs	r2, #128	; 0x80
    1d80:	0052      	lsls	r2, r2, #1
    1d82:	605a      	str	r2, [r3, #4]
    1d84:	2323      	movs	r3, #35	; 0x23
    1d86:	2210      	movs	r2, #16
    1d88:	4694      	mov	ip, r2
    1d8a:	44bc      	add	ip, r7
    1d8c:	4463      	add	r3, ip
    1d8e:	781b      	ldrb	r3, [r3, #0]
    1d90:	3312      	adds	r3, #18
    1d92:	b2db      	uxtb	r3, r3
    1d94:	0018      	movs	r0, r3
    1d96:	4b61      	ldr	r3, [pc, #388]	; (1f1c <_i2c_master_set_config+0x354>)
    1d98:	4798      	blx	r3
    1d9a:	0003      	movs	r3, r0
    1d9c:	62fb      	str	r3, [r7, #44]	; 0x2c
    1d9e:	693b      	ldr	r3, [r7, #16]
    1da0:	681b      	ldr	r3, [r3, #0]
    1da2:	22fa      	movs	r2, #250	; 0xfa
    1da4:	0092      	lsls	r2, r2, #2
    1da6:	4353      	muls	r3, r2
    1da8:	62bb      	str	r3, [r7, #40]	; 0x28
    1daa:	693b      	ldr	r3, [r7, #16]
    1dac:	685b      	ldr	r3, [r3, #4]
    1dae:	22fa      	movs	r2, #250	; 0xfa
    1db0:	0092      	lsls	r2, r2, #2
    1db2:	4353      	muls	r3, r2
    1db4:	627b      	str	r3, [r7, #36]	; 0x24
    1db6:	693b      	ldr	r3, [r7, #16]
    1db8:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
    1dba:	623b      	str	r3, [r7, #32]
    1dbc:	4b58      	ldr	r3, [pc, #352]	; (1f20 <_i2c_master_set_config+0x358>)
    1dbe:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    1dc0:	4798      	blx	r3
    1dc2:	0005      	movs	r5, r0
    1dc4:	000e      	movs	r6, r1
    1dc6:	4b56      	ldr	r3, [pc, #344]	; (1f20 <_i2c_master_set_config+0x358>)
    1dc8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    1dca:	4798      	blx	r3
    1dcc:	60b8      	str	r0, [r7, #8]
    1dce:	60f9      	str	r1, [r7, #12]
    1dd0:	4b53      	ldr	r3, [pc, #332]	; (1f20 <_i2c_master_set_config+0x358>)
    1dd2:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    1dd4:	4798      	blx	r3
    1dd6:	4c53      	ldr	r4, [pc, #332]	; (1f24 <_i2c_master_set_config+0x35c>)
    1dd8:	4a53      	ldr	r2, [pc, #332]	; (1f28 <_i2c_master_set_config+0x360>)
    1dda:	4b54      	ldr	r3, [pc, #336]	; (1f2c <_i2c_master_set_config+0x364>)
    1ddc:	47a0      	blx	r4
    1dde:	0003      	movs	r3, r0
    1de0:	000c      	movs	r4, r1
    1de2:	603b      	str	r3, [r7, #0]
    1de4:	607c      	str	r4, [r7, #4]
    1de6:	4b4e      	ldr	r3, [pc, #312]	; (1f20 <_i2c_master_set_config+0x358>)
    1de8:	6a38      	ldr	r0, [r7, #32]
    1dea:	4798      	blx	r3
    1dec:	0002      	movs	r2, r0
    1dee:	000b      	movs	r3, r1
    1df0:	4c4c      	ldr	r4, [pc, #304]	; (1f24 <_i2c_master_set_config+0x35c>)
    1df2:	6838      	ldr	r0, [r7, #0]
    1df4:	6879      	ldr	r1, [r7, #4]
    1df6:	47a0      	blx	r4
    1df8:	0003      	movs	r3, r0
    1dfa:	000c      	movs	r4, r1
    1dfc:	0018      	movs	r0, r3
    1dfe:	0021      	movs	r1, r4
    1e00:	4c4b      	ldr	r4, [pc, #300]	; (1f30 <_i2c_master_set_config+0x368>)
    1e02:	2200      	movs	r2, #0
    1e04:	4b4b      	ldr	r3, [pc, #300]	; (1f34 <_i2c_master_set_config+0x36c>)
    1e06:	47a0      	blx	r4
    1e08:	0003      	movs	r3, r0
    1e0a:	000c      	movs	r4, r1
    1e0c:	001a      	movs	r2, r3
    1e0e:	0023      	movs	r3, r4
    1e10:	4c44      	ldr	r4, [pc, #272]	; (1f24 <_i2c_master_set_config+0x35c>)
    1e12:	68b8      	ldr	r0, [r7, #8]
    1e14:	68f9      	ldr	r1, [r7, #12]
    1e16:	47a0      	blx	r4
    1e18:	0003      	movs	r3, r0
    1e1a:	000c      	movs	r4, r1
    1e1c:	001a      	movs	r2, r3
    1e1e:	0023      	movs	r3, r4
    1e20:	4c45      	ldr	r4, [pc, #276]	; (1f38 <_i2c_master_set_config+0x370>)
    1e22:	0028      	movs	r0, r5
    1e24:	0031      	movs	r1, r6
    1e26:	47a0      	blx	r4
    1e28:	0003      	movs	r3, r0
    1e2a:	000c      	movs	r4, r1
    1e2c:	001d      	movs	r5, r3
    1e2e:	0026      	movs	r6, r4
    1e30:	6abb      	ldr	r3, [r7, #40]	; 0x28
    1e32:	005a      	lsls	r2, r3, #1
    1e34:	4b3a      	ldr	r3, [pc, #232]	; (1f20 <_i2c_master_set_config+0x358>)
    1e36:	0010      	movs	r0, r2
    1e38:	4798      	blx	r3
    1e3a:	0002      	movs	r2, r0
    1e3c:	000b      	movs	r3, r1
    1e3e:	4c3c      	ldr	r4, [pc, #240]	; (1f30 <_i2c_master_set_config+0x368>)
    1e40:	0028      	movs	r0, r5
    1e42:	0031      	movs	r1, r6
    1e44:	47a0      	blx	r4
    1e46:	0003      	movs	r3, r0
    1e48:	000c      	movs	r4, r1
    1e4a:	0018      	movs	r0, r3
    1e4c:	0021      	movs	r1, r4
    1e4e:	4c3a      	ldr	r4, [pc, #232]	; (1f38 <_i2c_master_set_config+0x370>)
    1e50:	2200      	movs	r2, #0
    1e52:	4b3a      	ldr	r3, [pc, #232]	; (1f3c <_i2c_master_set_config+0x374>)
    1e54:	47a0      	blx	r4
    1e56:	0003      	movs	r3, r0
    1e58:	000c      	movs	r4, r1
    1e5a:	001d      	movs	r5, r3
    1e5c:	0026      	movs	r6, r4
    1e5e:	6abb      	ldr	r3, [r7, #40]	; 0x28
    1e60:	005a      	lsls	r2, r3, #1
    1e62:	4b2f      	ldr	r3, [pc, #188]	; (1f20 <_i2c_master_set_config+0x358>)
    1e64:	0010      	movs	r0, r2
    1e66:	4798      	blx	r3
    1e68:	0002      	movs	r2, r0
    1e6a:	000b      	movs	r3, r1
    1e6c:	4c34      	ldr	r4, [pc, #208]	; (1f40 <_i2c_master_set_config+0x378>)
    1e6e:	0028      	movs	r0, r5
    1e70:	0031      	movs	r1, r6
    1e72:	47a0      	blx	r4
    1e74:	0003      	movs	r3, r0
    1e76:	000c      	movs	r4, r1
    1e78:	0019      	movs	r1, r3
    1e7a:	0022      	movs	r2, r4
    1e7c:	4b31      	ldr	r3, [pc, #196]	; (1f44 <_i2c_master_set_config+0x37c>)
    1e7e:	0008      	movs	r0, r1
    1e80:	0011      	movs	r1, r2
    1e82:	4798      	blx	r3
    1e84:	0003      	movs	r3, r0
    1e86:	63fb      	str	r3, [r7, #60]	; 0x3c
    1e88:	693b      	ldr	r3, [r7, #16]
    1e8a:	689a      	ldr	r2, [r3, #8]
    1e8c:	2380      	movs	r3, #128	; 0x80
    1e8e:	049b      	lsls	r3, r3, #18
    1e90:	429a      	cmp	r2, r3
    1e92:	d16a      	bne.n	1f6a <_i2c_master_set_config+0x3a2>
    1e94:	4b22      	ldr	r3, [pc, #136]	; (1f20 <_i2c_master_set_config+0x358>)
    1e96:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    1e98:	4798      	blx	r3
    1e9a:	4c25      	ldr	r4, [pc, #148]	; (1f30 <_i2c_master_set_config+0x368>)
    1e9c:	0002      	movs	r2, r0
    1e9e:	000b      	movs	r3, r1
    1ea0:	47a0      	blx	r4
    1ea2:	0003      	movs	r3, r0
    1ea4:	000c      	movs	r4, r1
    1ea6:	001d      	movs	r5, r3
    1ea8:	0026      	movs	r6, r4
    1eaa:	4b1d      	ldr	r3, [pc, #116]	; (1f20 <_i2c_master_set_config+0x358>)
    1eac:	6a78      	ldr	r0, [r7, #36]	; 0x24
    1eae:	4798      	blx	r3
    1eb0:	4c1c      	ldr	r4, [pc, #112]	; (1f24 <_i2c_master_set_config+0x35c>)
    1eb2:	2200      	movs	r2, #0
    1eb4:	4b24      	ldr	r3, [pc, #144]	; (1f48 <_i2c_master_set_config+0x380>)
    1eb6:	47a0      	blx	r4
    1eb8:	0003      	movs	r3, r0
    1eba:	000c      	movs	r4, r1
    1ebc:	001a      	movs	r2, r3
    1ebe:	0023      	movs	r3, r4
    1ec0:	4c1f      	ldr	r4, [pc, #124]	; (1f40 <_i2c_master_set_config+0x378>)
    1ec2:	0028      	movs	r0, r5
    1ec4:	0031      	movs	r1, r6
    1ec6:	47a0      	blx	r4
    1ec8:	0003      	movs	r3, r0
    1eca:	000c      	movs	r4, r1
    1ecc:	0018      	movs	r0, r3
    1ece:	0021      	movs	r1, r4
    1ed0:	4c19      	ldr	r4, [pc, #100]	; (1f38 <_i2c_master_set_config+0x370>)
    1ed2:	2200      	movs	r2, #0
    1ed4:	4b19      	ldr	r3, [pc, #100]	; (1f3c <_i2c_master_set_config+0x374>)
    1ed6:	47a0      	blx	r4
    1ed8:	0003      	movs	r3, r0
    1eda:	000c      	movs	r4, r1
    1edc:	0019      	movs	r1, r3
    1ede:	0022      	movs	r2, r4
    1ee0:	4b18      	ldr	r3, [pc, #96]	; (1f44 <_i2c_master_set_config+0x37c>)
    1ee2:	0008      	movs	r0, r1
    1ee4:	0011      	movs	r1, r2
    1ee6:	4798      	blx	r3
    1ee8:	0003      	movs	r3, r0
    1eea:	64fb      	str	r3, [r7, #76]	; 0x4c
    1eec:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    1eee:	2b00      	cmp	r3, #0
    1ef0:	d02e      	beq.n	1f50 <_i2c_master_set_config+0x388>
    1ef2:	4b16      	ldr	r3, [pc, #88]	; (1f4c <_i2c_master_set_config+0x384>)
    1ef4:	6a79      	ldr	r1, [r7, #36]	; 0x24
    1ef6:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    1ef8:	4798      	blx	r3
    1efa:	0003      	movs	r3, r0
    1efc:	1e9a      	subs	r2, r3, #2
    1efe:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    1f00:	1ad3      	subs	r3, r2, r3
    1f02:	653b      	str	r3, [r7, #80]	; 0x50
    1f04:	e031      	b.n	1f6a <_i2c_master_set_config+0x3a2>
    1f06:	46c0      	nop			; (mov r8, r8)
    1f08:	00003105 	.word	0x00003105
    1f0c:	00001b39 	.word	0x00001b39
    1f10:	00002f51 	.word	0x00002f51
    1f14:	0000597d 	.word	0x0000597d
    1f18:	00001b61 	.word	0x00001b61
    1f1c:	000057b9 	.word	0x000057b9
    1f20:	000171d5 	.word	0x000171d5
    1f24:	000165bd 	.word	0x000165bd
    1f28:	e826d695 	.word	0xe826d695
    1f2c:	3e112e0b 	.word	0x3e112e0b
    1f30:	00015935 	.word	0x00015935
    1f34:	40240000 	.word	0x40240000
    1f38:	00016abd 	.word	0x00016abd
    1f3c:	3ff00000 	.word	0x3ff00000
    1f40:	00015f55 	.word	0x00015f55
    1f44:	000170e9 	.word	0x000170e9
    1f48:	40080000 	.word	0x40080000
    1f4c:	0001498d 	.word	0x0001498d
    1f50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1f52:	005a      	lsls	r2, r3, #1
    1f54:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    1f56:	18d3      	adds	r3, r2, r3
    1f58:	1e5a      	subs	r2, r3, #1
    1f5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1f5c:	0059      	lsls	r1, r3, #1
    1f5e:	4b1d      	ldr	r3, [pc, #116]	; (1fd4 <_i2c_master_set_config+0x40c>)
    1f60:	0010      	movs	r0, r2
    1f62:	4798      	blx	r3
    1f64:	0003      	movs	r3, r0
    1f66:	3b01      	subs	r3, #1
    1f68:	653b      	str	r3, [r7, #80]	; 0x50
    1f6a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    1f6c:	2bff      	cmp	r3, #255	; 0xff
    1f6e:	dc08      	bgt.n	1f82 <_i2c_master_set_config+0x3ba>
    1f70:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    1f72:	2b00      	cmp	r3, #0
    1f74:	db05      	blt.n	1f82 <_i2c_master_set_config+0x3ba>
    1f76:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    1f78:	2bff      	cmp	r3, #255	; 0xff
    1f7a:	dc02      	bgt.n	1f82 <_i2c_master_set_config+0x3ba>
    1f7c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    1f7e:	2b00      	cmp	r3, #0
    1f80:	da06      	bge.n	1f90 <_i2c_master_set_config+0x3c8>
    1f82:	233b      	movs	r3, #59	; 0x3b
    1f84:	2210      	movs	r2, #16
    1f86:	4694      	mov	ip, r2
    1f88:	44bc      	add	ip, r7
    1f8a:	4463      	add	r3, ip
    1f8c:	2240      	movs	r2, #64	; 0x40
    1f8e:	701a      	strb	r2, [r3, #0]
    1f90:	233b      	movs	r3, #59	; 0x3b
    1f92:	2210      	movs	r2, #16
    1f94:	4694      	mov	ip, r2
    1f96:	44bc      	add	ip, r7
    1f98:	4463      	add	r3, ip
    1f9a:	781b      	ldrb	r3, [r3, #0]
    1f9c:	2b40      	cmp	r3, #64	; 0x40
    1f9e:	d00e      	beq.n	1fbe <_i2c_master_set_config+0x3f6>
    1fa0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    1fa2:	22ff      	movs	r2, #255	; 0xff
    1fa4:	401a      	ands	r2, r3
    1fa6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    1fa8:	041b      	lsls	r3, r3, #16
    1faa:	0019      	movs	r1, r3
    1fac:	23ff      	movs	r3, #255	; 0xff
    1fae:	041b      	lsls	r3, r3, #16
    1fb0:	400b      	ands	r3, r1
    1fb2:	4313      	orrs	r3, r2
    1fb4:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
    1fb6:	0612      	lsls	r2, r2, #24
    1fb8:	431a      	orrs	r2, r3
    1fba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    1fbc:	60da      	str	r2, [r3, #12]
    1fbe:	233b      	movs	r3, #59	; 0x3b
    1fc0:	2210      	movs	r2, #16
    1fc2:	4694      	mov	ip, r2
    1fc4:	44bc      	add	ip, r7
    1fc6:	4463      	add	r3, ip
    1fc8:	781b      	ldrb	r3, [r3, #0]
    1fca:	0018      	movs	r0, r3
    1fcc:	46bd      	mov	sp, r7
    1fce:	b017      	add	sp, #92	; 0x5c
    1fd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1fd2:	46c0      	nop			; (mov r8, r8)
    1fd4:	0001498d 	.word	0x0001498d

00001fd8 <i2c_master_init>:
    1fd8:	b590      	push	{r4, r7, lr}
    1fda:	b08b      	sub	sp, #44	; 0x2c
    1fdc:	af00      	add	r7, sp, #0
    1fde:	60f8      	str	r0, [r7, #12]
    1fe0:	60b9      	str	r1, [r7, #8]
    1fe2:	607a      	str	r2, [r7, #4]
    1fe4:	68fb      	ldr	r3, [r7, #12]
    1fe6:	68ba      	ldr	r2, [r7, #8]
    1fe8:	601a      	str	r2, [r3, #0]
    1fea:	68fb      	ldr	r3, [r7, #12]
    1fec:	681b      	ldr	r3, [r3, #0]
    1fee:	61fb      	str	r3, [r7, #28]
    1ff0:	68fb      	ldr	r3, [r7, #12]
    1ff2:	681b      	ldr	r3, [r3, #0]
    1ff4:	0018      	movs	r0, r3
    1ff6:	4b44      	ldr	r3, [pc, #272]	; (2108 <STACK_SIZE+0x108>)
    1ff8:	4798      	blx	r3
    1ffa:	0003      	movs	r3, r0
    1ffc:	61bb      	str	r3, [r7, #24]
    1ffe:	69bb      	ldr	r3, [r7, #24]
    2000:	2b05      	cmp	r3, #5
    2002:	d104      	bne.n	200e <STACK_SIZE+0xe>
    2004:	2301      	movs	r3, #1
    2006:	627b      	str	r3, [r7, #36]	; 0x24
    2008:	2318      	movs	r3, #24
    200a:	623b      	str	r3, [r7, #32]
    200c:	e004      	b.n	2018 <STACK_SIZE+0x18>
    200e:	69bb      	ldr	r3, [r7, #24]
    2010:	627b      	str	r3, [r7, #36]	; 0x24
    2012:	69bb      	ldr	r3, [r7, #24]
    2014:	3312      	adds	r3, #18
    2016:	623b      	str	r3, [r7, #32]
    2018:	69bb      	ldr	r3, [r7, #24]
    201a:	2b05      	cmp	r3, #5
    201c:	d108      	bne.n	2030 <STACK_SIZE+0x30>
    201e:	2201      	movs	r2, #1
    2020:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2022:	409a      	lsls	r2, r3
    2024:	0013      	movs	r3, r2
    2026:	0019      	movs	r1, r3
    2028:	2003      	movs	r0, #3
    202a:	4b38      	ldr	r3, [pc, #224]	; (210c <STACK_SIZE+0x10c>)
    202c:	4798      	blx	r3
    202e:	e007      	b.n	2040 <STACK_SIZE+0x40>
    2030:	2201      	movs	r2, #1
    2032:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2034:	409a      	lsls	r2, r3
    2036:	0013      	movs	r3, r2
    2038:	0019      	movs	r1, r3
    203a:	2002      	movs	r0, #2
    203c:	4b33      	ldr	r3, [pc, #204]	; (210c <STACK_SIZE+0x10c>)
    203e:	4798      	blx	r3
    2040:	2314      	movs	r3, #20
    2042:	18fb      	adds	r3, r7, r3
    2044:	0018      	movs	r0, r3
    2046:	4b32      	ldr	r3, [pc, #200]	; (2110 <STACK_SIZE+0x110>)
    2048:	4798      	blx	r3
    204a:	687b      	ldr	r3, [r7, #4]
    204c:	7b1a      	ldrb	r2, [r3, #12]
    204e:	2314      	movs	r3, #20
    2050:	18fb      	adds	r3, r7, r3
    2052:	701a      	strb	r2, [r3, #0]
    2054:	6a3b      	ldr	r3, [r7, #32]
    2056:	b2db      	uxtb	r3, r3
    2058:	2214      	movs	r2, #20
    205a:	18ba      	adds	r2, r7, r2
    205c:	0011      	movs	r1, r2
    205e:	0018      	movs	r0, r3
    2060:	4b2c      	ldr	r3, [pc, #176]	; (2114 <STACK_SIZE+0x114>)
    2062:	4798      	blx	r3
    2064:	6a3b      	ldr	r3, [r7, #32]
    2066:	b2db      	uxtb	r3, r3
    2068:	0018      	movs	r0, r3
    206a:	4b2b      	ldr	r3, [pc, #172]	; (2118 <STACK_SIZE+0x118>)
    206c:	4798      	blx	r3
    206e:	687b      	ldr	r3, [r7, #4]
    2070:	7b1b      	ldrb	r3, [r3, #12]
    2072:	2100      	movs	r1, #0
    2074:	0018      	movs	r0, r3
    2076:	4b29      	ldr	r3, [pc, #164]	; (211c <STACK_SIZE+0x11c>)
    2078:	4798      	blx	r3
    207a:	69fb      	ldr	r3, [r7, #28]
    207c:	681b      	ldr	r3, [r3, #0]
    207e:	2202      	movs	r2, #2
    2080:	4013      	ands	r3, r2
    2082:	d001      	beq.n	2088 <STACK_SIZE+0x88>
    2084:	231c      	movs	r3, #28
    2086:	e03b      	b.n	2100 <STACK_SIZE+0x100>
    2088:	69fb      	ldr	r3, [r7, #28]
    208a:	681b      	ldr	r3, [r3, #0]
    208c:	2201      	movs	r2, #1
    208e:	4013      	ands	r3, r2
    2090:	d001      	beq.n	2096 <STACK_SIZE+0x96>
    2092:	2305      	movs	r3, #5
    2094:	e034      	b.n	2100 <STACK_SIZE+0x100>
    2096:	68fb      	ldr	r3, [r7, #12]
    2098:	681b      	ldr	r3, [r3, #0]
    209a:	2217      	movs	r2, #23
    209c:	18bc      	adds	r4, r7, r2
    209e:	0018      	movs	r0, r3
    20a0:	4b19      	ldr	r3, [pc, #100]	; (2108 <STACK_SIZE+0x108>)
    20a2:	4798      	blx	r3
    20a4:	0003      	movs	r3, r0
    20a6:	7023      	strb	r3, [r4, #0]
    20a8:	4a1d      	ldr	r2, [pc, #116]	; (2120 <STACK_SIZE+0x120>)
    20aa:	2317      	movs	r3, #23
    20ac:	18fb      	adds	r3, r7, r3
    20ae:	781b      	ldrb	r3, [r3, #0]
    20b0:	0011      	movs	r1, r2
    20b2:	0018      	movs	r0, r3
    20b4:	4b1b      	ldr	r3, [pc, #108]	; (2124 <STACK_SIZE+0x124>)
    20b6:	4798      	blx	r3
    20b8:	2317      	movs	r3, #23
    20ba:	18fb      	adds	r3, r7, r3
    20bc:	781a      	ldrb	r2, [r3, #0]
    20be:	4b1a      	ldr	r3, [pc, #104]	; (2128 <STACK_SIZE+0x128>)
    20c0:	0092      	lsls	r2, r2, #2
    20c2:	68f9      	ldr	r1, [r7, #12]
    20c4:	50d1      	str	r1, [r2, r3]
    20c6:	68fb      	ldr	r3, [r7, #12]
    20c8:	2200      	movs	r2, #0
    20ca:	761a      	strb	r2, [r3, #24]
    20cc:	68fb      	ldr	r3, [r7, #12]
    20ce:	2200      	movs	r2, #0
    20d0:	765a      	strb	r2, [r3, #25]
    20d2:	68fb      	ldr	r3, [r7, #12]
    20d4:	2200      	movs	r2, #0
    20d6:	835a      	strh	r2, [r3, #26]
    20d8:	68fb      	ldr	r3, [r7, #12]
    20da:	2200      	movs	r2, #0
    20dc:	839a      	strh	r2, [r3, #28]
    20de:	68fb      	ldr	r3, [r7, #12]
    20e0:	2225      	movs	r2, #37	; 0x25
    20e2:	2100      	movs	r1, #0
    20e4:	5499      	strb	r1, [r3, r2]
    20e6:	68fb      	ldr	r3, [r7, #12]
    20e8:	2200      	movs	r2, #0
    20ea:	621a      	str	r2, [r3, #32]
    20ec:	69fb      	ldr	r3, [r7, #28]
    20ee:	2214      	movs	r2, #20
    20f0:	601a      	str	r2, [r3, #0]
    20f2:	687a      	ldr	r2, [r7, #4]
    20f4:	68fb      	ldr	r3, [r7, #12]
    20f6:	0011      	movs	r1, r2
    20f8:	0018      	movs	r0, r3
    20fa:	4b0c      	ldr	r3, [pc, #48]	; (212c <STACK_SIZE+0x12c>)
    20fc:	4798      	blx	r3
    20fe:	0003      	movs	r3, r0
    2100:	0018      	movs	r0, r3
    2102:	46bd      	mov	sp, r7
    2104:	b00b      	add	sp, #44	; 0x2c
    2106:	bd90      	pop	{r4, r7, pc}
    2108:	00003105 	.word	0x00003105
    210c:	00001abd 	.word	0x00001abd
    2110:	00001aa5 	.word	0x00001aa5
    2114:	000056c9 	.word	0x000056c9
    2118:	00005709 	.word	0x00005709
    211c:	00002ec5 	.word	0x00002ec5
    2120:	0000291d 	.word	0x0000291d
    2124:	00003169 	.word	0x00003169
    2128:	20000d1c 	.word	0x20000d1c
    212c:	00001bc9 	.word	0x00001bc9

00002130 <_i2c_master_address_response>:
    2130:	b580      	push	{r7, lr}
    2132:	b084      	sub	sp, #16
    2134:	af00      	add	r7, sp, #0
    2136:	6078      	str	r0, [r7, #4]
    2138:	687b      	ldr	r3, [r7, #4]
    213a:	681b      	ldr	r3, [r3, #0]
    213c:	60fb      	str	r3, [r7, #12]
    213e:	68fb      	ldr	r3, [r7, #12]
    2140:	7e1b      	ldrb	r3, [r3, #24]
    2142:	b2db      	uxtb	r3, r3
    2144:	001a      	movs	r2, r3
    2146:	2302      	movs	r3, #2
    2148:	4013      	ands	r3, r2
    214a:	d00b      	beq.n	2164 <_i2c_master_address_response+0x34>
    214c:	68fb      	ldr	r3, [r7, #12]
    214e:	2202      	movs	r2, #2
    2150:	761a      	strb	r2, [r3, #24]
    2152:	68fb      	ldr	r3, [r7, #12]
    2154:	8b5b      	ldrh	r3, [r3, #26]
    2156:	b29b      	uxth	r3, r3
    2158:	001a      	movs	r2, r3
    215a:	2302      	movs	r3, #2
    215c:	4013      	ands	r3, r2
    215e:	d011      	beq.n	2184 <_i2c_master_address_response+0x54>
    2160:	2341      	movs	r3, #65	; 0x41
    2162:	e010      	b.n	2186 <_i2c_master_address_response+0x56>
    2164:	68fb      	ldr	r3, [r7, #12]
    2166:	8b5b      	ldrh	r3, [r3, #26]
    2168:	b29b      	uxth	r3, r3
    216a:	001a      	movs	r2, r3
    216c:	2304      	movs	r3, #4
    216e:	4013      	ands	r3, r2
    2170:	d008      	beq.n	2184 <_i2c_master_address_response+0x54>
    2172:	68fb      	ldr	r3, [r7, #12]
    2174:	685b      	ldr	r3, [r3, #4]
    2176:	22c0      	movs	r2, #192	; 0xc0
    2178:	0292      	lsls	r2, r2, #10
    217a:	431a      	orrs	r2, r3
    217c:	68fb      	ldr	r3, [r7, #12]
    217e:	605a      	str	r2, [r3, #4]
    2180:	2318      	movs	r3, #24
    2182:	e000      	b.n	2186 <_i2c_master_address_response+0x56>
    2184:	2300      	movs	r3, #0
    2186:	0018      	movs	r0, r3
    2188:	46bd      	mov	sp, r7
    218a:	b004      	add	sp, #16
    218c:	bd80      	pop	{r7, pc}

0000218e <_i2c_master_wait_for_bus>:
    218e:	b580      	push	{r7, lr}
    2190:	b084      	sub	sp, #16
    2192:	af00      	add	r7, sp, #0
    2194:	6078      	str	r0, [r7, #4]
    2196:	687b      	ldr	r3, [r7, #4]
    2198:	681b      	ldr	r3, [r3, #0]
    219a:	60bb      	str	r3, [r7, #8]
    219c:	230e      	movs	r3, #14
    219e:	18fb      	adds	r3, r7, r3
    21a0:	2200      	movs	r2, #0
    21a2:	801a      	strh	r2, [r3, #0]
    21a4:	e00f      	b.n	21c6 <_i2c_master_wait_for_bus+0x38>
    21a6:	230e      	movs	r3, #14
    21a8:	18fb      	adds	r3, r7, r3
    21aa:	220e      	movs	r2, #14
    21ac:	18ba      	adds	r2, r7, r2
    21ae:	8812      	ldrh	r2, [r2, #0]
    21b0:	3201      	adds	r2, #1
    21b2:	801a      	strh	r2, [r3, #0]
    21b4:	687b      	ldr	r3, [r7, #4]
    21b6:	891b      	ldrh	r3, [r3, #8]
    21b8:	220e      	movs	r2, #14
    21ba:	18ba      	adds	r2, r7, r2
    21bc:	8812      	ldrh	r2, [r2, #0]
    21be:	429a      	cmp	r2, r3
    21c0:	d301      	bcc.n	21c6 <_i2c_master_wait_for_bus+0x38>
    21c2:	2312      	movs	r3, #18
    21c4:	e00e      	b.n	21e4 <_i2c_master_wait_for_bus+0x56>
    21c6:	68bb      	ldr	r3, [r7, #8]
    21c8:	7e1b      	ldrb	r3, [r3, #24]
    21ca:	b2db      	uxtb	r3, r3
    21cc:	001a      	movs	r2, r3
    21ce:	2301      	movs	r3, #1
    21d0:	4013      	ands	r3, r2
    21d2:	d106      	bne.n	21e2 <_i2c_master_wait_for_bus+0x54>
    21d4:	68bb      	ldr	r3, [r7, #8]
    21d6:	7e1b      	ldrb	r3, [r3, #24]
    21d8:	b2db      	uxtb	r3, r3
    21da:	001a      	movs	r2, r3
    21dc:	2302      	movs	r3, #2
    21de:	4013      	ands	r3, r2
    21e0:	d0e1      	beq.n	21a6 <_i2c_master_wait_for_bus+0x18>
    21e2:	2300      	movs	r3, #0
    21e4:	0018      	movs	r0, r3
    21e6:	46bd      	mov	sp, r7
    21e8:	b004      	add	sp, #16
    21ea:	bd80      	pop	{r7, pc}

000021ec <_i2c_master_send_hs_master_code>:
    21ec:	b590      	push	{r4, r7, lr}
    21ee:	b085      	sub	sp, #20
    21f0:	af00      	add	r7, sp, #0
    21f2:	6078      	str	r0, [r7, #4]
    21f4:	000a      	movs	r2, r1
    21f6:	1cfb      	adds	r3, r7, #3
    21f8:	701a      	strb	r2, [r3, #0]
    21fa:	687b      	ldr	r3, [r7, #4]
    21fc:	681b      	ldr	r3, [r3, #0]
    21fe:	60fb      	str	r3, [r7, #12]
    2200:	68fb      	ldr	r3, [r7, #12]
    2202:	685b      	ldr	r3, [r3, #4]
    2204:	2280      	movs	r2, #128	; 0x80
    2206:	02d2      	lsls	r2, r2, #11
    2208:	431a      	orrs	r2, r3
    220a:	68fb      	ldr	r3, [r7, #12]
    220c:	605a      	str	r2, [r3, #4]
    220e:	1cfb      	adds	r3, r7, #3
    2210:	781a      	ldrb	r2, [r3, #0]
    2212:	68fb      	ldr	r3, [r7, #12]
    2214:	625a      	str	r2, [r3, #36]	; 0x24
    2216:	230b      	movs	r3, #11
    2218:	18fc      	adds	r4, r7, r3
    221a:	687b      	ldr	r3, [r7, #4]
    221c:	0018      	movs	r0, r3
    221e:	4b07      	ldr	r3, [pc, #28]	; (223c <_i2c_master_send_hs_master_code+0x50>)
    2220:	4798      	blx	r3
    2222:	0003      	movs	r3, r0
    2224:	7023      	strb	r3, [r4, #0]
    2226:	68fb      	ldr	r3, [r7, #12]
    2228:	2201      	movs	r2, #1
    222a:	761a      	strb	r2, [r3, #24]
    222c:	230b      	movs	r3, #11
    222e:	18fb      	adds	r3, r7, r3
    2230:	781b      	ldrb	r3, [r3, #0]
    2232:	0018      	movs	r0, r3
    2234:	46bd      	mov	sp, r7
    2236:	b005      	add	sp, #20
    2238:	bd90      	pop	{r4, r7, pc}
    223a:	46c0      	nop			; (mov r8, r8)
    223c:	0000218f 	.word	0x0000218f

00002240 <_i2c_master_read_packet>:
    2240:	b590      	push	{r4, r7, lr}
    2242:	b087      	sub	sp, #28
    2244:	af00      	add	r7, sp, #0
    2246:	6078      	str	r0, [r7, #4]
    2248:	6039      	str	r1, [r7, #0]
    224a:	687b      	ldr	r3, [r7, #4]
    224c:	681b      	ldr	r3, [r3, #0]
    224e:	60fb      	str	r3, [r7, #12]
    2250:	2314      	movs	r3, #20
    2252:	18fb      	adds	r3, r7, r3
    2254:	683a      	ldr	r2, [r7, #0]
    2256:	8852      	ldrh	r2, [r2, #2]
    2258:	801a      	strh	r2, [r3, #0]
    225a:	2312      	movs	r3, #18
    225c:	18fb      	adds	r3, r7, r3
    225e:	2200      	movs	r2, #0
    2260:	801a      	strh	r2, [r3, #0]
    2262:	68fb      	ldr	r3, [r7, #12]
    2264:	681b      	ldr	r3, [r3, #0]
    2266:	011b      	lsls	r3, r3, #4
    2268:	0fdb      	lsrs	r3, r3, #31
    226a:	b2db      	uxtb	r3, r3
    226c:	001a      	movs	r2, r3
    226e:	230b      	movs	r3, #11
    2270:	18fb      	adds	r3, r7, r3
    2272:	1e51      	subs	r1, r2, #1
    2274:	418a      	sbcs	r2, r1
    2276:	701a      	strb	r2, [r3, #0]
    2278:	683b      	ldr	r3, [r7, #0]
    227a:	7a5b      	ldrb	r3, [r3, #9]
    227c:	2b00      	cmp	r3, #0
    227e:	d006      	beq.n	228e <_i2c_master_read_packet+0x4e>
    2280:	683b      	ldr	r3, [r7, #0]
    2282:	7a9a      	ldrb	r2, [r3, #10]
    2284:	687b      	ldr	r3, [r7, #4]
    2286:	0011      	movs	r1, r2
    2288:	0018      	movs	r0, r3
    228a:	4b85      	ldr	r3, [pc, #532]	; (24a0 <_i2c_master_read_packet+0x260>)
    228c:	4798      	blx	r3
    228e:	68fb      	ldr	r3, [r7, #12]
    2290:	685b      	ldr	r3, [r3, #4]
    2292:	4a84      	ldr	r2, [pc, #528]	; (24a4 <_i2c_master_read_packet+0x264>)
    2294:	401a      	ands	r2, r3
    2296:	68fb      	ldr	r3, [r7, #12]
    2298:	605a      	str	r2, [r3, #4]
    229a:	683b      	ldr	r3, [r7, #0]
    229c:	7a1b      	ldrb	r3, [r3, #8]
    229e:	2b00      	cmp	r3, #0
    22a0:	d042      	beq.n	2328 <_i2c_master_read_packet+0xe8>
    22a2:	683b      	ldr	r3, [r7, #0]
    22a4:	881b      	ldrh	r3, [r3, #0]
    22a6:	005a      	lsls	r2, r3, #1
    22a8:	683b      	ldr	r3, [r7, #0]
    22aa:	7a5b      	ldrb	r3, [r3, #9]
    22ac:	039b      	lsls	r3, r3, #14
    22ae:	4313      	orrs	r3, r2
    22b0:	001a      	movs	r2, r3
    22b2:	2380      	movs	r3, #128	; 0x80
    22b4:	021b      	lsls	r3, r3, #8
    22b6:	431a      	orrs	r2, r3
    22b8:	68fb      	ldr	r3, [r7, #12]
    22ba:	625a      	str	r2, [r3, #36]	; 0x24
    22bc:	2317      	movs	r3, #23
    22be:	18fc      	adds	r4, r7, r3
    22c0:	687b      	ldr	r3, [r7, #4]
    22c2:	0018      	movs	r0, r3
    22c4:	4b78      	ldr	r3, [pc, #480]	; (24a8 <_i2c_master_read_packet+0x268>)
    22c6:	4798      	blx	r3
    22c8:	0003      	movs	r3, r0
    22ca:	7023      	strb	r3, [r4, #0]
    22cc:	68fb      	ldr	r3, [r7, #12]
    22ce:	685b      	ldr	r3, [r3, #4]
    22d0:	4a74      	ldr	r2, [pc, #464]	; (24a4 <_i2c_master_read_packet+0x264>)
    22d2:	401a      	ands	r2, r3
    22d4:	68fb      	ldr	r3, [r7, #12]
    22d6:	605a      	str	r2, [r3, #4]
    22d8:	2317      	movs	r3, #23
    22da:	18fb      	adds	r3, r7, r3
    22dc:	781b      	ldrb	r3, [r3, #0]
    22de:	2b00      	cmp	r3, #0
    22e0:	d107      	bne.n	22f2 <_i2c_master_read_packet+0xb2>
    22e2:	2317      	movs	r3, #23
    22e4:	18fc      	adds	r4, r7, r3
    22e6:	687b      	ldr	r3, [r7, #4]
    22e8:	0018      	movs	r0, r3
    22ea:	4b70      	ldr	r3, [pc, #448]	; (24ac <_i2c_master_read_packet+0x26c>)
    22ec:	4798      	blx	r3
    22ee:	0003      	movs	r3, r0
    22f0:	7023      	strb	r3, [r4, #0]
    22f2:	2317      	movs	r3, #23
    22f4:	18fb      	adds	r3, r7, r3
    22f6:	781b      	ldrb	r3, [r3, #0]
    22f8:	2b00      	cmp	r3, #0
    22fa:	d111      	bne.n	2320 <_i2c_master_read_packet+0xe0>
    22fc:	683b      	ldr	r3, [r7, #0]
    22fe:	881b      	ldrh	r3, [r3, #0]
    2300:	0a1b      	lsrs	r3, r3, #8
    2302:	b29b      	uxth	r3, r3
    2304:	2278      	movs	r2, #120	; 0x78
    2306:	4313      	orrs	r3, r2
    2308:	b29b      	uxth	r3, r3
    230a:	005a      	lsls	r2, r3, #1
    230c:	683b      	ldr	r3, [r7, #0]
    230e:	7a5b      	ldrb	r3, [r3, #9]
    2310:	039b      	lsls	r3, r3, #14
    2312:	4313      	orrs	r3, r2
    2314:	2201      	movs	r2, #1
    2316:	4313      	orrs	r3, r2
    2318:	001a      	movs	r2, r3
    231a:	68fb      	ldr	r3, [r7, #12]
    231c:	625a      	str	r2, [r3, #36]	; 0x24
    231e:	e00f      	b.n	2340 <_i2c_master_read_packet+0x100>
    2320:	2317      	movs	r3, #23
    2322:	18fb      	adds	r3, r7, r3
    2324:	781b      	ldrb	r3, [r3, #0]
    2326:	e0b6      	b.n	2496 <_i2c_master_read_packet+0x256>
    2328:	683b      	ldr	r3, [r7, #0]
    232a:	881b      	ldrh	r3, [r3, #0]
    232c:	005b      	lsls	r3, r3, #1
    232e:	2201      	movs	r2, #1
    2330:	431a      	orrs	r2, r3
    2332:	683b      	ldr	r3, [r7, #0]
    2334:	7a5b      	ldrb	r3, [r3, #9]
    2336:	039b      	lsls	r3, r3, #14
    2338:	4313      	orrs	r3, r2
    233a:	001a      	movs	r2, r3
    233c:	68fb      	ldr	r3, [r7, #12]
    233e:	625a      	str	r2, [r3, #36]	; 0x24
    2340:	2317      	movs	r3, #23
    2342:	18fc      	adds	r4, r7, r3
    2344:	687b      	ldr	r3, [r7, #4]
    2346:	0018      	movs	r0, r3
    2348:	4b57      	ldr	r3, [pc, #348]	; (24a8 <_i2c_master_read_packet+0x268>)
    234a:	4798      	blx	r3
    234c:	0003      	movs	r3, r0
    234e:	7023      	strb	r3, [r4, #0]
    2350:	230b      	movs	r3, #11
    2352:	18fb      	adds	r3, r7, r3
    2354:	781b      	ldrb	r3, [r3, #0]
    2356:	2b00      	cmp	r3, #0
    2358:	d00b      	beq.n	2372 <_i2c_master_read_packet+0x132>
    235a:	683b      	ldr	r3, [r7, #0]
    235c:	885b      	ldrh	r3, [r3, #2]
    235e:	2b01      	cmp	r3, #1
    2360:	d107      	bne.n	2372 <_i2c_master_read_packet+0x132>
    2362:	68fb      	ldr	r3, [r7, #12]
    2364:	685b      	ldr	r3, [r3, #4]
    2366:	2280      	movs	r2, #128	; 0x80
    2368:	02d2      	lsls	r2, r2, #11
    236a:	431a      	orrs	r2, r3
    236c:	68fb      	ldr	r3, [r7, #12]
    236e:	605a      	str	r2, [r3, #4]
    2370:	e005      	b.n	237e <_i2c_master_read_packet+0x13e>
    2372:	68fb      	ldr	r3, [r7, #12]
    2374:	685b      	ldr	r3, [r3, #4]
    2376:	4a4b      	ldr	r2, [pc, #300]	; (24a4 <_i2c_master_read_packet+0x264>)
    2378:	401a      	ands	r2, r3
    237a:	68fb      	ldr	r3, [r7, #12]
    237c:	605a      	str	r2, [r3, #4]
    237e:	2317      	movs	r3, #23
    2380:	18fb      	adds	r3, r7, r3
    2382:	781b      	ldrb	r3, [r3, #0]
    2384:	2b00      	cmp	r3, #0
    2386:	d107      	bne.n	2398 <_i2c_master_read_packet+0x158>
    2388:	2317      	movs	r3, #23
    238a:	18fc      	adds	r4, r7, r3
    238c:	687b      	ldr	r3, [r7, #4]
    238e:	0018      	movs	r0, r3
    2390:	4b46      	ldr	r3, [pc, #280]	; (24ac <_i2c_master_read_packet+0x26c>)
    2392:	4798      	blx	r3
    2394:	0003      	movs	r3, r0
    2396:	7023      	strb	r3, [r4, #0]
    2398:	2317      	movs	r3, #23
    239a:	18fb      	adds	r3, r7, r3
    239c:	781b      	ldrb	r3, [r3, #0]
    239e:	2b00      	cmp	r3, #0
    23a0:	d000      	beq.n	23a4 <_i2c_master_read_packet+0x164>
    23a2:	e075      	b.n	2490 <_i2c_master_read_packet+0x250>
    23a4:	e04b      	b.n	243e <_i2c_master_read_packet+0x1fe>
    23a6:	68fb      	ldr	r3, [r7, #12]
    23a8:	8b5b      	ldrh	r3, [r3, #26]
    23aa:	b29b      	uxth	r3, r3
    23ac:	001a      	movs	r2, r3
    23ae:	2320      	movs	r3, #32
    23b0:	4013      	ands	r3, r2
    23b2:	d101      	bne.n	23b8 <_i2c_master_read_packet+0x178>
    23b4:	2341      	movs	r3, #65	; 0x41
    23b6:	e06e      	b.n	2496 <_i2c_master_read_packet+0x256>
    23b8:	687b      	ldr	r3, [r7, #4]
    23ba:	7adb      	ldrb	r3, [r3, #11]
    23bc:	2b00      	cmp	r3, #0
    23be:	d01e      	beq.n	23fe <_i2c_master_read_packet+0x1be>
    23c0:	230b      	movs	r3, #11
    23c2:	18fb      	adds	r3, r7, r3
    23c4:	781b      	ldrb	r3, [r3, #0]
    23c6:	2201      	movs	r2, #1
    23c8:	4053      	eors	r3, r2
    23ca:	b2db      	uxtb	r3, r3
    23cc:	2b00      	cmp	r3, #0
    23ce:	d004      	beq.n	23da <_i2c_master_read_packet+0x19a>
    23d0:	2314      	movs	r3, #20
    23d2:	18fb      	adds	r3, r7, r3
    23d4:	881b      	ldrh	r3, [r3, #0]
    23d6:	2b00      	cmp	r3, #0
    23d8:	d009      	beq.n	23ee <_i2c_master_read_packet+0x1ae>
    23da:	230b      	movs	r3, #11
    23dc:	18fb      	adds	r3, r7, r3
    23de:	781b      	ldrb	r3, [r3, #0]
    23e0:	2b00      	cmp	r3, #0
    23e2:	d00c      	beq.n	23fe <_i2c_master_read_packet+0x1be>
    23e4:	2314      	movs	r3, #20
    23e6:	18fb      	adds	r3, r7, r3
    23e8:	881b      	ldrh	r3, [r3, #0]
    23ea:	2b01      	cmp	r3, #1
    23ec:	d107      	bne.n	23fe <_i2c_master_read_packet+0x1be>
    23ee:	68fb      	ldr	r3, [r7, #12]
    23f0:	685b      	ldr	r3, [r3, #4]
    23f2:	2280      	movs	r2, #128	; 0x80
    23f4:	02d2      	lsls	r2, r2, #11
    23f6:	431a      	orrs	r2, r3
    23f8:	68fb      	ldr	r3, [r7, #12]
    23fa:	605a      	str	r2, [r3, #4]
    23fc:	e01a      	b.n	2434 <_i2c_master_read_packet+0x1f4>
    23fe:	687b      	ldr	r3, [r7, #4]
    2400:	0018      	movs	r0, r3
    2402:	4b2b      	ldr	r3, [pc, #172]	; (24b0 <_i2c_master_read_packet+0x270>)
    2404:	4798      	blx	r3
    2406:	683b      	ldr	r3, [r7, #0]
    2408:	685a      	ldr	r2, [r3, #4]
    240a:	2312      	movs	r3, #18
    240c:	18fb      	adds	r3, r7, r3
    240e:	881b      	ldrh	r3, [r3, #0]
    2410:	2112      	movs	r1, #18
    2412:	1879      	adds	r1, r7, r1
    2414:	1c58      	adds	r0, r3, #1
    2416:	8008      	strh	r0, [r1, #0]
    2418:	18d3      	adds	r3, r2, r3
    241a:	68fa      	ldr	r2, [r7, #12]
    241c:	2128      	movs	r1, #40	; 0x28
    241e:	5c52      	ldrb	r2, [r2, r1]
    2420:	b2d2      	uxtb	r2, r2
    2422:	701a      	strb	r2, [r3, #0]
    2424:	2317      	movs	r3, #23
    2426:	18fc      	adds	r4, r7, r3
    2428:	687b      	ldr	r3, [r7, #4]
    242a:	0018      	movs	r0, r3
    242c:	4b1e      	ldr	r3, [pc, #120]	; (24a8 <_i2c_master_read_packet+0x268>)
    242e:	4798      	blx	r3
    2430:	0003      	movs	r3, r0
    2432:	7023      	strb	r3, [r4, #0]
    2434:	2317      	movs	r3, #23
    2436:	18fb      	adds	r3, r7, r3
    2438:	781b      	ldrb	r3, [r3, #0]
    243a:	2b00      	cmp	r3, #0
    243c:	d109      	bne.n	2452 <_i2c_master_read_packet+0x212>
    243e:	2314      	movs	r3, #20
    2440:	18fb      	adds	r3, r7, r3
    2442:	881b      	ldrh	r3, [r3, #0]
    2444:	2214      	movs	r2, #20
    2446:	18ba      	adds	r2, r7, r2
    2448:	1e59      	subs	r1, r3, #1
    244a:	8011      	strh	r1, [r2, #0]
    244c:	2b00      	cmp	r3, #0
    244e:	d1aa      	bne.n	23a6 <_i2c_master_read_packet+0x166>
    2450:	e000      	b.n	2454 <_i2c_master_read_packet+0x214>
    2452:	46c0      	nop			; (mov r8, r8)
    2454:	687b      	ldr	r3, [r7, #4]
    2456:	7a9b      	ldrb	r3, [r3, #10]
    2458:	2b00      	cmp	r3, #0
    245a:	d00a      	beq.n	2472 <_i2c_master_read_packet+0x232>
    245c:	687b      	ldr	r3, [r7, #4]
    245e:	0018      	movs	r0, r3
    2460:	4b13      	ldr	r3, [pc, #76]	; (24b0 <_i2c_master_read_packet+0x270>)
    2462:	4798      	blx	r3
    2464:	68fb      	ldr	r3, [r7, #12]
    2466:	685b      	ldr	r3, [r3, #4]
    2468:	22c0      	movs	r2, #192	; 0xc0
    246a:	0292      	lsls	r2, r2, #10
    246c:	431a      	orrs	r2, r3
    246e:	68fb      	ldr	r3, [r7, #12]
    2470:	605a      	str	r2, [r3, #4]
    2472:	687b      	ldr	r3, [r7, #4]
    2474:	0018      	movs	r0, r3
    2476:	4b0e      	ldr	r3, [pc, #56]	; (24b0 <_i2c_master_read_packet+0x270>)
    2478:	4798      	blx	r3
    247a:	683b      	ldr	r3, [r7, #0]
    247c:	685a      	ldr	r2, [r3, #4]
    247e:	2312      	movs	r3, #18
    2480:	18fb      	adds	r3, r7, r3
    2482:	881b      	ldrh	r3, [r3, #0]
    2484:	18d3      	adds	r3, r2, r3
    2486:	68fa      	ldr	r2, [r7, #12]
    2488:	2128      	movs	r1, #40	; 0x28
    248a:	5c52      	ldrb	r2, [r2, r1]
    248c:	b2d2      	uxtb	r2, r2
    248e:	701a      	strb	r2, [r3, #0]
    2490:	2317      	movs	r3, #23
    2492:	18fb      	adds	r3, r7, r3
    2494:	781b      	ldrb	r3, [r3, #0]
    2496:	0018      	movs	r0, r3
    2498:	46bd      	mov	sp, r7
    249a:	b007      	add	sp, #28
    249c:	bd90      	pop	{r4, r7, pc}
    249e:	46c0      	nop			; (mov r8, r8)
    24a0:	000021ed 	.word	0x000021ed
    24a4:	fffbffff 	.word	0xfffbffff
    24a8:	0000218f 	.word	0x0000218f
    24ac:	00002131 	.word	0x00002131
    24b0:	00001ba5 	.word	0x00001ba5

000024b4 <i2c_master_read_packet_wait>:
    24b4:	b580      	push	{r7, lr}
    24b6:	b082      	sub	sp, #8
    24b8:	af00      	add	r7, sp, #0
    24ba:	6078      	str	r0, [r7, #4]
    24bc:	6039      	str	r1, [r7, #0]
    24be:	687b      	ldr	r3, [r7, #4]
    24c0:	8b9b      	ldrh	r3, [r3, #28]
    24c2:	b29b      	uxth	r3, r3
    24c4:	2b00      	cmp	r3, #0
    24c6:	d001      	beq.n	24cc <i2c_master_read_packet_wait+0x18>
    24c8:	2305      	movs	r3, #5
    24ca:	e00c      	b.n	24e6 <i2c_master_read_packet_wait+0x32>
    24cc:	687b      	ldr	r3, [r7, #4]
    24ce:	2201      	movs	r2, #1
    24d0:	729a      	strb	r2, [r3, #10]
    24d2:	687b      	ldr	r3, [r7, #4]
    24d4:	2201      	movs	r2, #1
    24d6:	72da      	strb	r2, [r3, #11]
    24d8:	683a      	ldr	r2, [r7, #0]
    24da:	687b      	ldr	r3, [r7, #4]
    24dc:	0011      	movs	r1, r2
    24de:	0018      	movs	r0, r3
    24e0:	4b03      	ldr	r3, [pc, #12]	; (24f0 <i2c_master_read_packet_wait+0x3c>)
    24e2:	4798      	blx	r3
    24e4:	0003      	movs	r3, r0
    24e6:	0018      	movs	r0, r3
    24e8:	46bd      	mov	sp, r7
    24ea:	b002      	add	sp, #8
    24ec:	bd80      	pop	{r7, pc}
    24ee:	46c0      	nop			; (mov r8, r8)
    24f0:	00002241 	.word	0x00002241

000024f4 <_i2c_master_write_packet>:
    24f4:	b590      	push	{r4, r7, lr}
    24f6:	b087      	sub	sp, #28
    24f8:	af00      	add	r7, sp, #0
    24fa:	6078      	str	r0, [r7, #4]
    24fc:	6039      	str	r1, [r7, #0]
    24fe:	687b      	ldr	r3, [r7, #4]
    2500:	681b      	ldr	r3, [r3, #0]
    2502:	60fb      	str	r3, [r7, #12]
    2504:	2314      	movs	r3, #20
    2506:	18fb      	adds	r3, r7, r3
    2508:	683a      	ldr	r2, [r7, #0]
    250a:	8852      	ldrh	r2, [r2, #2]
    250c:	801a      	strh	r2, [r3, #0]
    250e:	687b      	ldr	r3, [r7, #4]
    2510:	0018      	movs	r0, r3
    2512:	4b51      	ldr	r3, [pc, #324]	; (2658 <_i2c_master_write_packet+0x164>)
    2514:	4798      	blx	r3
    2516:	683b      	ldr	r3, [r7, #0]
    2518:	7a5b      	ldrb	r3, [r3, #9]
    251a:	2b00      	cmp	r3, #0
    251c:	d006      	beq.n	252c <_i2c_master_write_packet+0x38>
    251e:	683b      	ldr	r3, [r7, #0]
    2520:	7a9a      	ldrb	r2, [r3, #10]
    2522:	687b      	ldr	r3, [r7, #4]
    2524:	0011      	movs	r1, r2
    2526:	0018      	movs	r0, r3
    2528:	4b4c      	ldr	r3, [pc, #304]	; (265c <_i2c_master_write_packet+0x168>)
    252a:	4798      	blx	r3
    252c:	68fb      	ldr	r3, [r7, #12]
    252e:	685b      	ldr	r3, [r3, #4]
    2530:	4a4b      	ldr	r2, [pc, #300]	; (2660 <_i2c_master_write_packet+0x16c>)
    2532:	401a      	ands	r2, r3
    2534:	68fb      	ldr	r3, [r7, #12]
    2536:	605a      	str	r2, [r3, #4]
    2538:	683b      	ldr	r3, [r7, #0]
    253a:	7a1b      	ldrb	r3, [r3, #8]
    253c:	2b00      	cmp	r3, #0
    253e:	d00d      	beq.n	255c <_i2c_master_write_packet+0x68>
    2540:	683b      	ldr	r3, [r7, #0]
    2542:	881b      	ldrh	r3, [r3, #0]
    2544:	005a      	lsls	r2, r3, #1
    2546:	683b      	ldr	r3, [r7, #0]
    2548:	7a5b      	ldrb	r3, [r3, #9]
    254a:	039b      	lsls	r3, r3, #14
    254c:	4313      	orrs	r3, r2
    254e:	001a      	movs	r2, r3
    2550:	2380      	movs	r3, #128	; 0x80
    2552:	021b      	lsls	r3, r3, #8
    2554:	431a      	orrs	r2, r3
    2556:	68fb      	ldr	r3, [r7, #12]
    2558:	625a      	str	r2, [r3, #36]	; 0x24
    255a:	e009      	b.n	2570 <_i2c_master_write_packet+0x7c>
    255c:	683b      	ldr	r3, [r7, #0]
    255e:	881b      	ldrh	r3, [r3, #0]
    2560:	005a      	lsls	r2, r3, #1
    2562:	683b      	ldr	r3, [r7, #0]
    2564:	7a5b      	ldrb	r3, [r3, #9]
    2566:	039b      	lsls	r3, r3, #14
    2568:	4313      	orrs	r3, r2
    256a:	001a      	movs	r2, r3
    256c:	68fb      	ldr	r3, [r7, #12]
    256e:	625a      	str	r2, [r3, #36]	; 0x24
    2570:	2317      	movs	r3, #23
    2572:	18fc      	adds	r4, r7, r3
    2574:	687b      	ldr	r3, [r7, #4]
    2576:	0018      	movs	r0, r3
    2578:	4b3a      	ldr	r3, [pc, #232]	; (2664 <_i2c_master_write_packet+0x170>)
    257a:	4798      	blx	r3
    257c:	0003      	movs	r3, r0
    257e:	7023      	strb	r3, [r4, #0]
    2580:	2317      	movs	r3, #23
    2582:	18fb      	adds	r3, r7, r3
    2584:	781b      	ldrb	r3, [r3, #0]
    2586:	2b00      	cmp	r3, #0
    2588:	d107      	bne.n	259a <_i2c_master_write_packet+0xa6>
    258a:	2317      	movs	r3, #23
    258c:	18fc      	adds	r4, r7, r3
    258e:	687b      	ldr	r3, [r7, #4]
    2590:	0018      	movs	r0, r3
    2592:	4b35      	ldr	r3, [pc, #212]	; (2668 <_i2c_master_write_packet+0x174>)
    2594:	4798      	blx	r3
    2596:	0003      	movs	r3, r0
    2598:	7023      	strb	r3, [r4, #0]
    259a:	2317      	movs	r3, #23
    259c:	18fb      	adds	r3, r7, r3
    259e:	781b      	ldrb	r3, [r3, #0]
    25a0:	2b00      	cmp	r3, #0
    25a2:	d152      	bne.n	264a <_i2c_master_write_packet+0x156>
    25a4:	2312      	movs	r3, #18
    25a6:	18fb      	adds	r3, r7, r3
    25a8:	2200      	movs	r2, #0
    25aa:	801a      	strh	r2, [r3, #0]
    25ac:	e033      	b.n	2616 <_i2c_master_write_packet+0x122>
    25ae:	68fb      	ldr	r3, [r7, #12]
    25b0:	8b5b      	ldrh	r3, [r3, #26]
    25b2:	b29b      	uxth	r3, r3
    25b4:	001a      	movs	r2, r3
    25b6:	2320      	movs	r3, #32
    25b8:	4013      	ands	r3, r2
    25ba:	d101      	bne.n	25c0 <_i2c_master_write_packet+0xcc>
    25bc:	2341      	movs	r3, #65	; 0x41
    25be:	e047      	b.n	2650 <_i2c_master_write_packet+0x15c>
    25c0:	687b      	ldr	r3, [r7, #4]
    25c2:	0018      	movs	r0, r3
    25c4:	4b24      	ldr	r3, [pc, #144]	; (2658 <_i2c_master_write_packet+0x164>)
    25c6:	4798      	blx	r3
    25c8:	683b      	ldr	r3, [r7, #0]
    25ca:	685a      	ldr	r2, [r3, #4]
    25cc:	2312      	movs	r3, #18
    25ce:	18fb      	adds	r3, r7, r3
    25d0:	881b      	ldrh	r3, [r3, #0]
    25d2:	2112      	movs	r1, #18
    25d4:	1879      	adds	r1, r7, r1
    25d6:	1c58      	adds	r0, r3, #1
    25d8:	8008      	strh	r0, [r1, #0]
    25da:	18d3      	adds	r3, r2, r3
    25dc:	7819      	ldrb	r1, [r3, #0]
    25de:	68fb      	ldr	r3, [r7, #12]
    25e0:	2228      	movs	r2, #40	; 0x28
    25e2:	5499      	strb	r1, [r3, r2]
    25e4:	2317      	movs	r3, #23
    25e6:	18fc      	adds	r4, r7, r3
    25e8:	687b      	ldr	r3, [r7, #4]
    25ea:	0018      	movs	r0, r3
    25ec:	4b1d      	ldr	r3, [pc, #116]	; (2664 <_i2c_master_write_packet+0x170>)
    25ee:	4798      	blx	r3
    25f0:	0003      	movs	r3, r0
    25f2:	7023      	strb	r3, [r4, #0]
    25f4:	2317      	movs	r3, #23
    25f6:	18fb      	adds	r3, r7, r3
    25f8:	781b      	ldrb	r3, [r3, #0]
    25fa:	2b00      	cmp	r3, #0
    25fc:	d115      	bne.n	262a <_i2c_master_write_packet+0x136>
    25fe:	68fb      	ldr	r3, [r7, #12]
    2600:	8b5b      	ldrh	r3, [r3, #26]
    2602:	b29b      	uxth	r3, r3
    2604:	001a      	movs	r2, r3
    2606:	2304      	movs	r3, #4
    2608:	4013      	ands	r3, r2
    260a:	d004      	beq.n	2616 <_i2c_master_write_packet+0x122>
    260c:	2317      	movs	r3, #23
    260e:	18fb      	adds	r3, r7, r3
    2610:	221e      	movs	r2, #30
    2612:	701a      	strb	r2, [r3, #0]
    2614:	e00a      	b.n	262c <_i2c_master_write_packet+0x138>
    2616:	2314      	movs	r3, #20
    2618:	18fb      	adds	r3, r7, r3
    261a:	881b      	ldrh	r3, [r3, #0]
    261c:	2214      	movs	r2, #20
    261e:	18ba      	adds	r2, r7, r2
    2620:	1e59      	subs	r1, r3, #1
    2622:	8011      	strh	r1, [r2, #0]
    2624:	2b00      	cmp	r3, #0
    2626:	d1c2      	bne.n	25ae <_i2c_master_write_packet+0xba>
    2628:	e000      	b.n	262c <_i2c_master_write_packet+0x138>
    262a:	46c0      	nop			; (mov r8, r8)
    262c:	687b      	ldr	r3, [r7, #4]
    262e:	7a9b      	ldrb	r3, [r3, #10]
    2630:	2b00      	cmp	r3, #0
    2632:	d00a      	beq.n	264a <_i2c_master_write_packet+0x156>
    2634:	687b      	ldr	r3, [r7, #4]
    2636:	0018      	movs	r0, r3
    2638:	4b07      	ldr	r3, [pc, #28]	; (2658 <_i2c_master_write_packet+0x164>)
    263a:	4798      	blx	r3
    263c:	68fb      	ldr	r3, [r7, #12]
    263e:	685b      	ldr	r3, [r3, #4]
    2640:	22c0      	movs	r2, #192	; 0xc0
    2642:	0292      	lsls	r2, r2, #10
    2644:	431a      	orrs	r2, r3
    2646:	68fb      	ldr	r3, [r7, #12]
    2648:	605a      	str	r2, [r3, #4]
    264a:	2317      	movs	r3, #23
    264c:	18fb      	adds	r3, r7, r3
    264e:	781b      	ldrb	r3, [r3, #0]
    2650:	0018      	movs	r0, r3
    2652:	46bd      	mov	sp, r7
    2654:	b007      	add	sp, #28
    2656:	bd90      	pop	{r4, r7, pc}
    2658:	00001ba5 	.word	0x00001ba5
    265c:	000021ed 	.word	0x000021ed
    2660:	fffbffff 	.word	0xfffbffff
    2664:	0000218f 	.word	0x0000218f
    2668:	00002131 	.word	0x00002131

0000266c <i2c_master_write_packet_wait_no_stop>:
    266c:	b580      	push	{r7, lr}
    266e:	b082      	sub	sp, #8
    2670:	af00      	add	r7, sp, #0
    2672:	6078      	str	r0, [r7, #4]
    2674:	6039      	str	r1, [r7, #0]
    2676:	687b      	ldr	r3, [r7, #4]
    2678:	8b9b      	ldrh	r3, [r3, #28]
    267a:	b29b      	uxth	r3, r3
    267c:	2b00      	cmp	r3, #0
    267e:	d001      	beq.n	2684 <i2c_master_write_packet_wait_no_stop+0x18>
    2680:	2305      	movs	r3, #5
    2682:	e00c      	b.n	269e <i2c_master_write_packet_wait_no_stop+0x32>
    2684:	687b      	ldr	r3, [r7, #4]
    2686:	2200      	movs	r2, #0
    2688:	729a      	strb	r2, [r3, #10]
    268a:	687b      	ldr	r3, [r7, #4]
    268c:	2201      	movs	r2, #1
    268e:	72da      	strb	r2, [r3, #11]
    2690:	683a      	ldr	r2, [r7, #0]
    2692:	687b      	ldr	r3, [r7, #4]
    2694:	0011      	movs	r1, r2
    2696:	0018      	movs	r0, r3
    2698:	4b03      	ldr	r3, [pc, #12]	; (26a8 <i2c_master_write_packet_wait_no_stop+0x3c>)
    269a:	4798      	blx	r3
    269c:	0003      	movs	r3, r0
    269e:	0018      	movs	r0, r3
    26a0:	46bd      	mov	sp, r7
    26a2:	b002      	add	sp, #8
    26a4:	bd80      	pop	{r7, pc}
    26a6:	46c0      	nop			; (mov r8, r8)
    26a8:	000024f5 	.word	0x000024f5

000026ac <i2c_master_is_syncing>:
    26ac:	b580      	push	{r7, lr}
    26ae:	b084      	sub	sp, #16
    26b0:	af00      	add	r7, sp, #0
    26b2:	6078      	str	r0, [r7, #4]
    26b4:	687b      	ldr	r3, [r7, #4]
    26b6:	681b      	ldr	r3, [r3, #0]
    26b8:	60fb      	str	r3, [r7, #12]
    26ba:	68fb      	ldr	r3, [r7, #12]
    26bc:	69db      	ldr	r3, [r3, #28]
    26be:	2207      	movs	r2, #7
    26c0:	4013      	ands	r3, r2
    26c2:	1e5a      	subs	r2, r3, #1
    26c4:	4193      	sbcs	r3, r2
    26c6:	b2db      	uxtb	r3, r3
    26c8:	0018      	movs	r0, r3
    26ca:	46bd      	mov	sp, r7
    26cc:	b004      	add	sp, #16
    26ce:	bd80      	pop	{r7, pc}

000026d0 <_i2c_master_wait_for_sync>:
    26d0:	b580      	push	{r7, lr}
    26d2:	b082      	sub	sp, #8
    26d4:	af00      	add	r7, sp, #0
    26d6:	6078      	str	r0, [r7, #4]
    26d8:	46c0      	nop			; (mov r8, r8)
    26da:	687b      	ldr	r3, [r7, #4]
    26dc:	0018      	movs	r0, r3
    26de:	4b04      	ldr	r3, [pc, #16]	; (26f0 <_i2c_master_wait_for_sync+0x20>)
    26e0:	4798      	blx	r3
    26e2:	1e03      	subs	r3, r0, #0
    26e4:	d1f9      	bne.n	26da <_i2c_master_wait_for_sync+0xa>
    26e6:	46c0      	nop			; (mov r8, r8)
    26e8:	46bd      	mov	sp, r7
    26ea:	b002      	add	sp, #8
    26ec:	bd80      	pop	{r7, pc}
    26ee:	46c0      	nop			; (mov r8, r8)
    26f0:	000026ad 	.word	0x000026ad

000026f4 <_i2c_master_read>:
    26f4:	b580      	push	{r7, lr}
    26f6:	b084      	sub	sp, #16
    26f8:	af00      	add	r7, sp, #0
    26fa:	6078      	str	r0, [r7, #4]
    26fc:	687b      	ldr	r3, [r7, #4]
    26fe:	681b      	ldr	r3, [r3, #0]
    2700:	60fb      	str	r3, [r7, #12]
    2702:	68fb      	ldr	r3, [r7, #12]
    2704:	681b      	ldr	r3, [r3, #0]
    2706:	011b      	lsls	r3, r3, #4
    2708:	0fdb      	lsrs	r3, r3, #31
    270a:	b2db      	uxtb	r3, r3
    270c:	001a      	movs	r2, r3
    270e:	230b      	movs	r3, #11
    2710:	18fb      	adds	r3, r7, r3
    2712:	1e51      	subs	r1, r2, #1
    2714:	418a      	sbcs	r2, r1
    2716:	701a      	strb	r2, [r3, #0]
    2718:	2308      	movs	r3, #8
    271a:	18fb      	adds	r3, r7, r3
    271c:	687a      	ldr	r2, [r7, #4]
    271e:	8b52      	ldrh	r2, [r2, #26]
    2720:	801a      	strh	r2, [r3, #0]
    2722:	687b      	ldr	r3, [r7, #4]
    2724:	8b9b      	ldrh	r3, [r3, #28]
    2726:	b29a      	uxth	r2, r3
    2728:	2308      	movs	r3, #8
    272a:	18fb      	adds	r3, r7, r3
    272c:	2108      	movs	r1, #8
    272e:	1879      	adds	r1, r7, r1
    2730:	8809      	ldrh	r1, [r1, #0]
    2732:	1a8a      	subs	r2, r1, r2
    2734:	801a      	strh	r2, [r3, #0]
    2736:	687b      	ldr	r3, [r7, #4]
    2738:	8b9b      	ldrh	r3, [r3, #28]
    273a:	b29b      	uxth	r3, r3
    273c:	3b01      	subs	r3, #1
    273e:	b29a      	uxth	r2, r3
    2740:	687b      	ldr	r3, [r7, #4]
    2742:	839a      	strh	r2, [r3, #28]
    2744:	230b      	movs	r3, #11
    2746:	18fb      	adds	r3, r7, r3
    2748:	781b      	ldrb	r3, [r3, #0]
    274a:	2b00      	cmp	r3, #0
    274c:	d010      	beq.n	2770 <_i2c_master_read+0x7c>
    274e:	687b      	ldr	r3, [r7, #4]
    2750:	7adb      	ldrb	r3, [r3, #11]
    2752:	2b00      	cmp	r3, #0
    2754:	d01c      	beq.n	2790 <_i2c_master_read+0x9c>
    2756:	687b      	ldr	r3, [r7, #4]
    2758:	8b9b      	ldrh	r3, [r3, #28]
    275a:	b29b      	uxth	r3, r3
    275c:	2b01      	cmp	r3, #1
    275e:	d117      	bne.n	2790 <_i2c_master_read+0x9c>
    2760:	68fb      	ldr	r3, [r7, #12]
    2762:	685b      	ldr	r3, [r3, #4]
    2764:	2280      	movs	r2, #128	; 0x80
    2766:	02d2      	lsls	r2, r2, #11
    2768:	431a      	orrs	r2, r3
    276a:	68fb      	ldr	r3, [r7, #12]
    276c:	605a      	str	r2, [r3, #4]
    276e:	e00f      	b.n	2790 <_i2c_master_read+0x9c>
    2770:	687b      	ldr	r3, [r7, #4]
    2772:	7adb      	ldrb	r3, [r3, #11]
    2774:	2b00      	cmp	r3, #0
    2776:	d00b      	beq.n	2790 <_i2c_master_read+0x9c>
    2778:	687b      	ldr	r3, [r7, #4]
    277a:	8b9b      	ldrh	r3, [r3, #28]
    277c:	b29b      	uxth	r3, r3
    277e:	2b00      	cmp	r3, #0
    2780:	d106      	bne.n	2790 <_i2c_master_read+0x9c>
    2782:	68fb      	ldr	r3, [r7, #12]
    2784:	685b      	ldr	r3, [r3, #4]
    2786:	2280      	movs	r2, #128	; 0x80
    2788:	02d2      	lsls	r2, r2, #11
    278a:	431a      	orrs	r2, r3
    278c:	68fb      	ldr	r3, [r7, #12]
    278e:	605a      	str	r2, [r3, #4]
    2790:	687b      	ldr	r3, [r7, #4]
    2792:	8b9b      	ldrh	r3, [r3, #28]
    2794:	b29b      	uxth	r3, r3
    2796:	2b00      	cmp	r3, #0
    2798:	d10e      	bne.n	27b8 <_i2c_master_read+0xc4>
    279a:	687b      	ldr	r3, [r7, #4]
    279c:	7a9b      	ldrb	r3, [r3, #10]
    279e:	2b00      	cmp	r3, #0
    27a0:	d00a      	beq.n	27b8 <_i2c_master_read+0xc4>
    27a2:	687b      	ldr	r3, [r7, #4]
    27a4:	0018      	movs	r0, r3
    27a6:	4b0e      	ldr	r3, [pc, #56]	; (27e0 <_i2c_master_read+0xec>)
    27a8:	4798      	blx	r3
    27aa:	68fb      	ldr	r3, [r7, #12]
    27ac:	685b      	ldr	r3, [r3, #4]
    27ae:	22c0      	movs	r2, #192	; 0xc0
    27b0:	0292      	lsls	r2, r2, #10
    27b2:	431a      	orrs	r2, r3
    27b4:	68fb      	ldr	r3, [r7, #12]
    27b6:	605a      	str	r2, [r3, #4]
    27b8:	687b      	ldr	r3, [r7, #4]
    27ba:	0018      	movs	r0, r3
    27bc:	4b08      	ldr	r3, [pc, #32]	; (27e0 <_i2c_master_read+0xec>)
    27be:	4798      	blx	r3
    27c0:	687b      	ldr	r3, [r7, #4]
    27c2:	6a1a      	ldr	r2, [r3, #32]
    27c4:	2308      	movs	r3, #8
    27c6:	18fb      	adds	r3, r7, r3
    27c8:	881b      	ldrh	r3, [r3, #0]
    27ca:	18d3      	adds	r3, r2, r3
    27cc:	68fa      	ldr	r2, [r7, #12]
    27ce:	2128      	movs	r1, #40	; 0x28
    27d0:	5c52      	ldrb	r2, [r2, r1]
    27d2:	b2d2      	uxtb	r2, r2
    27d4:	701a      	strb	r2, [r3, #0]
    27d6:	46c0      	nop			; (mov r8, r8)
    27d8:	46bd      	mov	sp, r7
    27da:	b004      	add	sp, #16
    27dc:	bd80      	pop	{r7, pc}
    27de:	46c0      	nop			; (mov r8, r8)
    27e0:	000026d1 	.word	0x000026d1

000027e4 <_i2c_master_write>:
    27e4:	b580      	push	{r7, lr}
    27e6:	b084      	sub	sp, #16
    27e8:	af00      	add	r7, sp, #0
    27ea:	6078      	str	r0, [r7, #4]
    27ec:	687b      	ldr	r3, [r7, #4]
    27ee:	681b      	ldr	r3, [r3, #0]
    27f0:	60fb      	str	r3, [r7, #12]
    27f2:	68fb      	ldr	r3, [r7, #12]
    27f4:	8b5b      	ldrh	r3, [r3, #26]
    27f6:	b29b      	uxth	r3, r3
    27f8:	001a      	movs	r2, r3
    27fa:	2304      	movs	r3, #4
    27fc:	4013      	ands	r3, r2
    27fe:	d004      	beq.n	280a <_i2c_master_write+0x26>
    2800:	687b      	ldr	r3, [r7, #4]
    2802:	2225      	movs	r2, #37	; 0x25
    2804:	211e      	movs	r1, #30
    2806:	5499      	strb	r1, [r3, r2]
    2808:	e024      	b.n	2854 <_i2c_master_write+0x70>
    280a:	230a      	movs	r3, #10
    280c:	18fb      	adds	r3, r7, r3
    280e:	687a      	ldr	r2, [r7, #4]
    2810:	8b52      	ldrh	r2, [r2, #26]
    2812:	801a      	strh	r2, [r3, #0]
    2814:	687b      	ldr	r3, [r7, #4]
    2816:	8b9b      	ldrh	r3, [r3, #28]
    2818:	b29a      	uxth	r2, r3
    281a:	230a      	movs	r3, #10
    281c:	18fb      	adds	r3, r7, r3
    281e:	210a      	movs	r1, #10
    2820:	1879      	adds	r1, r7, r1
    2822:	8809      	ldrh	r1, [r1, #0]
    2824:	1a8a      	subs	r2, r1, r2
    2826:	801a      	strh	r2, [r3, #0]
    2828:	687b      	ldr	r3, [r7, #4]
    282a:	8b9b      	ldrh	r3, [r3, #28]
    282c:	b29b      	uxth	r3, r3
    282e:	3b01      	subs	r3, #1
    2830:	b29a      	uxth	r2, r3
    2832:	687b      	ldr	r3, [r7, #4]
    2834:	839a      	strh	r2, [r3, #28]
    2836:	687b      	ldr	r3, [r7, #4]
    2838:	0018      	movs	r0, r3
    283a:	4b08      	ldr	r3, [pc, #32]	; (285c <_i2c_master_write+0x78>)
    283c:	4798      	blx	r3
    283e:	687b      	ldr	r3, [r7, #4]
    2840:	6a1a      	ldr	r2, [r3, #32]
    2842:	230a      	movs	r3, #10
    2844:	18fb      	adds	r3, r7, r3
    2846:	881b      	ldrh	r3, [r3, #0]
    2848:	18d3      	adds	r3, r2, r3
    284a:	781b      	ldrb	r3, [r3, #0]
    284c:	b2d9      	uxtb	r1, r3
    284e:	68fb      	ldr	r3, [r7, #12]
    2850:	2228      	movs	r2, #40	; 0x28
    2852:	5499      	strb	r1, [r3, r2]
    2854:	46bd      	mov	sp, r7
    2856:	b004      	add	sp, #16
    2858:	bd80      	pop	{r7, pc}
    285a:	46c0      	nop			; (mov r8, r8)
    285c:	000026d1 	.word	0x000026d1

00002860 <_i2c_master_async_address_response>:
    2860:	b580      	push	{r7, lr}
    2862:	b084      	sub	sp, #16
    2864:	af00      	add	r7, sp, #0
    2866:	6078      	str	r0, [r7, #4]
    2868:	687b      	ldr	r3, [r7, #4]
    286a:	681b      	ldr	r3, [r3, #0]
    286c:	60fb      	str	r3, [r7, #12]
    286e:	68fb      	ldr	r3, [r7, #12]
    2870:	7e1b      	ldrb	r3, [r3, #24]
    2872:	b2db      	uxtb	r3, r3
    2874:	001a      	movs	r2, r3
    2876:	2301      	movs	r3, #1
    2878:	4013      	ands	r3, r2
    287a:	d02b      	beq.n	28d4 <_i2c_master_async_address_response+0x74>
    287c:	68fb      	ldr	r3, [r7, #12]
    287e:	2201      	movs	r2, #1
    2880:	761a      	strb	r2, [r3, #24]
    2882:	68fb      	ldr	r3, [r7, #12]
    2884:	8b5b      	ldrh	r3, [r3, #26]
    2886:	b29b      	uxth	r3, r3
    2888:	001a      	movs	r2, r3
    288a:	2302      	movs	r3, #2
    288c:	4013      	ands	r3, r2
    288e:	d004      	beq.n	289a <_i2c_master_async_address_response+0x3a>
    2890:	687b      	ldr	r3, [r7, #4]
    2892:	2225      	movs	r2, #37	; 0x25
    2894:	2141      	movs	r1, #65	; 0x41
    2896:	5499      	strb	r1, [r3, r2]
    2898:	e01c      	b.n	28d4 <_i2c_master_async_address_response+0x74>
    289a:	68fb      	ldr	r3, [r7, #12]
    289c:	8b5b      	ldrh	r3, [r3, #26]
    289e:	b29b      	uxth	r3, r3
    28a0:	001a      	movs	r2, r3
    28a2:	2304      	movs	r3, #4
    28a4:	4013      	ands	r3, r2
    28a6:	d015      	beq.n	28d4 <_i2c_master_async_address_response+0x74>
    28a8:	687b      	ldr	r3, [r7, #4]
    28aa:	2225      	movs	r2, #37	; 0x25
    28ac:	2118      	movs	r1, #24
    28ae:	5499      	strb	r1, [r3, r2]
    28b0:	687b      	ldr	r3, [r7, #4]
    28b2:	2200      	movs	r2, #0
    28b4:	839a      	strh	r2, [r3, #28]
    28b6:	687b      	ldr	r3, [r7, #4]
    28b8:	7a9b      	ldrb	r3, [r3, #10]
    28ba:	2b00      	cmp	r3, #0
    28bc:	d00a      	beq.n	28d4 <_i2c_master_async_address_response+0x74>
    28be:	687b      	ldr	r3, [r7, #4]
    28c0:	0018      	movs	r0, r3
    28c2:	4b13      	ldr	r3, [pc, #76]	; (2910 <_i2c_master_async_address_response+0xb0>)
    28c4:	4798      	blx	r3
    28c6:	68fb      	ldr	r3, [r7, #12]
    28c8:	685b      	ldr	r3, [r3, #4]
    28ca:	22c0      	movs	r2, #192	; 0xc0
    28cc:	0292      	lsls	r2, r2, #10
    28ce:	431a      	orrs	r2, r3
    28d0:	68fb      	ldr	r3, [r7, #12]
    28d2:	605a      	str	r2, [r3, #4]
    28d4:	687b      	ldr	r3, [r7, #4]
    28d6:	8b9b      	ldrh	r3, [r3, #28]
    28d8:	b29a      	uxth	r2, r3
    28da:	687b      	ldr	r3, [r7, #4]
    28dc:	835a      	strh	r2, [r3, #26]
    28de:	687b      	ldr	r3, [r7, #4]
    28e0:	2225      	movs	r2, #37	; 0x25
    28e2:	5c9b      	ldrb	r3, [r3, r2]
    28e4:	b2db      	uxtb	r3, r3
    28e6:	2b05      	cmp	r3, #5
    28e8:	d10e      	bne.n	2908 <_i2c_master_async_address_response+0xa8>
    28ea:	687b      	ldr	r3, [r7, #4]
    28ec:	2224      	movs	r2, #36	; 0x24
    28ee:	5c9b      	ldrb	r3, [r3, r2]
    28f0:	b2db      	uxtb	r3, r3
    28f2:	2b00      	cmp	r3, #0
    28f4:	d104      	bne.n	2900 <_i2c_master_async_address_response+0xa0>
    28f6:	687b      	ldr	r3, [r7, #4]
    28f8:	0018      	movs	r0, r3
    28fa:	4b06      	ldr	r3, [pc, #24]	; (2914 <_i2c_master_async_address_response+0xb4>)
    28fc:	4798      	blx	r3
    28fe:	e003      	b.n	2908 <_i2c_master_async_address_response+0xa8>
    2900:	687b      	ldr	r3, [r7, #4]
    2902:	0018      	movs	r0, r3
    2904:	4b04      	ldr	r3, [pc, #16]	; (2918 <_i2c_master_async_address_response+0xb8>)
    2906:	4798      	blx	r3
    2908:	46c0      	nop			; (mov r8, r8)
    290a:	46bd      	mov	sp, r7
    290c:	b004      	add	sp, #16
    290e:	bd80      	pop	{r7, pc}
    2910:	000026d1 	.word	0x000026d1
    2914:	000027e5 	.word	0x000027e5
    2918:	000026f5 	.word	0x000026f5

0000291c <_i2c_master_interrupt_handler>:
    291c:	b580      	push	{r7, lr}
    291e:	b086      	sub	sp, #24
    2920:	af00      	add	r7, sp, #0
    2922:	0002      	movs	r2, r0
    2924:	1dfb      	adds	r3, r7, #7
    2926:	701a      	strb	r2, [r3, #0]
    2928:	1dfb      	adds	r3, r7, #7
    292a:	781a      	ldrb	r2, [r3, #0]
    292c:	4b93      	ldr	r3, [pc, #588]	; (2b7c <_i2c_master_interrupt_handler+0x260>)
    292e:	0092      	lsls	r2, r2, #2
    2930:	58d3      	ldr	r3, [r2, r3]
    2932:	617b      	str	r3, [r7, #20]
    2934:	697b      	ldr	r3, [r7, #20]
    2936:	681b      	ldr	r3, [r3, #0]
    2938:	613b      	str	r3, [r7, #16]
    293a:	693b      	ldr	r3, [r7, #16]
    293c:	681b      	ldr	r3, [r3, #0]
    293e:	011b      	lsls	r3, r3, #4
    2940:	0fdb      	lsrs	r3, r3, #31
    2942:	b2db      	uxtb	r3, r3
    2944:	001a      	movs	r2, r3
    2946:	230f      	movs	r3, #15
    2948:	18fb      	adds	r3, r7, r3
    294a:	1e51      	subs	r1, r2, #1
    294c:	418a      	sbcs	r2, r1
    294e:	701a      	strb	r2, [r3, #0]
    2950:	230e      	movs	r3, #14
    2952:	18fb      	adds	r3, r7, r3
    2954:	697a      	ldr	r2, [r7, #20]
    2956:	7e52      	ldrb	r2, [r2, #25]
    2958:	701a      	strb	r2, [r3, #0]
    295a:	697b      	ldr	r3, [r7, #20]
    295c:	7e1b      	ldrb	r3, [r3, #24]
    295e:	b2da      	uxtb	r2, r3
    2960:	230e      	movs	r3, #14
    2962:	18fb      	adds	r3, r7, r3
    2964:	210e      	movs	r1, #14
    2966:	1879      	adds	r1, r7, r1
    2968:	7809      	ldrb	r1, [r1, #0]
    296a:	400a      	ands	r2, r1
    296c:	701a      	strb	r2, [r3, #0]
    296e:	697b      	ldr	r3, [r7, #20]
    2970:	8b5b      	ldrh	r3, [r3, #26]
    2972:	b29b      	uxth	r3, r3
    2974:	2b00      	cmp	r3, #0
    2976:	d109      	bne.n	298c <_i2c_master_interrupt_handler+0x70>
    2978:	697b      	ldr	r3, [r7, #20]
    297a:	8b9b      	ldrh	r3, [r3, #28]
    297c:	b29b      	uxth	r3, r3
    297e:	2b00      	cmp	r3, #0
    2980:	d004      	beq.n	298c <_i2c_master_interrupt_handler+0x70>
    2982:	697b      	ldr	r3, [r7, #20]
    2984:	0018      	movs	r0, r3
    2986:	4b7e      	ldr	r3, [pc, #504]	; (2b80 <_i2c_master_interrupt_handler+0x264>)
    2988:	4798      	blx	r3
    298a:	e070      	b.n	2a6e <_i2c_master_interrupt_handler+0x152>
    298c:	697b      	ldr	r3, [r7, #20]
    298e:	8b5b      	ldrh	r3, [r3, #26]
    2990:	b29b      	uxth	r3, r3
    2992:	2b00      	cmp	r3, #0
    2994:	d039      	beq.n	2a0a <_i2c_master_interrupt_handler+0xee>
    2996:	697b      	ldr	r3, [r7, #20]
    2998:	8b9b      	ldrh	r3, [r3, #28]
    299a:	b29b      	uxth	r3, r3
    299c:	2b00      	cmp	r3, #0
    299e:	d134      	bne.n	2a0a <_i2c_master_interrupt_handler+0xee>
    29a0:	697b      	ldr	r3, [r7, #20]
    29a2:	2225      	movs	r2, #37	; 0x25
    29a4:	5c9b      	ldrb	r3, [r3, r2]
    29a6:	b2db      	uxtb	r3, r3
    29a8:	2b05      	cmp	r3, #5
    29aa:	d12e      	bne.n	2a0a <_i2c_master_interrupt_handler+0xee>
    29ac:	697b      	ldr	r3, [r7, #20]
    29ae:	2224      	movs	r2, #36	; 0x24
    29b0:	5c9b      	ldrb	r3, [r3, r2]
    29b2:	b2db      	uxtb	r3, r3
    29b4:	2b00      	cmp	r3, #0
    29b6:	d128      	bne.n	2a0a <_i2c_master_interrupt_handler+0xee>
    29b8:	693b      	ldr	r3, [r7, #16]
    29ba:	2203      	movs	r2, #3
    29bc:	751a      	strb	r2, [r3, #20]
    29be:	697b      	ldr	r3, [r7, #20]
    29c0:	2200      	movs	r2, #0
    29c2:	835a      	strh	r2, [r3, #26]
    29c4:	697b      	ldr	r3, [r7, #20]
    29c6:	2225      	movs	r2, #37	; 0x25
    29c8:	2100      	movs	r1, #0
    29ca:	5499      	strb	r1, [r3, r2]
    29cc:	697b      	ldr	r3, [r7, #20]
    29ce:	7a9b      	ldrb	r3, [r3, #10]
    29d0:	2b00      	cmp	r3, #0
    29d2:	d00b      	beq.n	29ec <_i2c_master_interrupt_handler+0xd0>
    29d4:	697b      	ldr	r3, [r7, #20]
    29d6:	0018      	movs	r0, r3
    29d8:	4b6a      	ldr	r3, [pc, #424]	; (2b84 <_i2c_master_interrupt_handler+0x268>)
    29da:	4798      	blx	r3
    29dc:	693b      	ldr	r3, [r7, #16]
    29de:	685b      	ldr	r3, [r3, #4]
    29e0:	22c0      	movs	r2, #192	; 0xc0
    29e2:	0292      	lsls	r2, r2, #10
    29e4:	431a      	orrs	r2, r3
    29e6:	693b      	ldr	r3, [r7, #16]
    29e8:	605a      	str	r2, [r3, #4]
    29ea:	e002      	b.n	29f2 <_i2c_master_interrupt_handler+0xd6>
    29ec:	693b      	ldr	r3, [r7, #16]
    29ee:	2201      	movs	r2, #1
    29f0:	761a      	strb	r2, [r3, #24]
    29f2:	230e      	movs	r3, #14
    29f4:	18fb      	adds	r3, r7, r3
    29f6:	781b      	ldrb	r3, [r3, #0]
    29f8:	2201      	movs	r2, #1
    29fa:	4013      	ands	r3, r2
    29fc:	d037      	beq.n	2a6e <_i2c_master_interrupt_handler+0x152>
    29fe:	697b      	ldr	r3, [r7, #20]
    2a00:	68db      	ldr	r3, [r3, #12]
    2a02:	697a      	ldr	r2, [r7, #20]
    2a04:	0010      	movs	r0, r2
    2a06:	4798      	blx	r3
    2a08:	e031      	b.n	2a6e <_i2c_master_interrupt_handler+0x152>
    2a0a:	697b      	ldr	r3, [r7, #20]
    2a0c:	8b5b      	ldrh	r3, [r3, #26]
    2a0e:	b29b      	uxth	r3, r3
    2a10:	2b00      	cmp	r3, #0
    2a12:	d02c      	beq.n	2a6e <_i2c_master_interrupt_handler+0x152>
    2a14:	697b      	ldr	r3, [r7, #20]
    2a16:	8b9b      	ldrh	r3, [r3, #28]
    2a18:	b29b      	uxth	r3, r3
    2a1a:	2b00      	cmp	r3, #0
    2a1c:	d027      	beq.n	2a6e <_i2c_master_interrupt_handler+0x152>
    2a1e:	693b      	ldr	r3, [r7, #16]
    2a20:	8b5b      	ldrh	r3, [r3, #26]
    2a22:	b29b      	uxth	r3, r3
    2a24:	001a      	movs	r2, r3
    2a26:	2320      	movs	r3, #32
    2a28:	4013      	ands	r3, r2
    2a2a:	d111      	bne.n	2a50 <_i2c_master_interrupt_handler+0x134>
    2a2c:	230f      	movs	r3, #15
    2a2e:	18fb      	adds	r3, r7, r3
    2a30:	781b      	ldrb	r3, [r3, #0]
    2a32:	2201      	movs	r2, #1
    2a34:	4053      	eors	r3, r2
    2a36:	b2db      	uxtb	r3, r3
    2a38:	2b00      	cmp	r3, #0
    2a3a:	d104      	bne.n	2a46 <_i2c_master_interrupt_handler+0x12a>
    2a3c:	697b      	ldr	r3, [r7, #20]
    2a3e:	8b9b      	ldrh	r3, [r3, #28]
    2a40:	b29b      	uxth	r3, r3
    2a42:	2b01      	cmp	r3, #1
    2a44:	d004      	beq.n	2a50 <_i2c_master_interrupt_handler+0x134>
    2a46:	697b      	ldr	r3, [r7, #20]
    2a48:	2225      	movs	r2, #37	; 0x25
    2a4a:	2141      	movs	r1, #65	; 0x41
    2a4c:	5499      	strb	r1, [r3, r2]
    2a4e:	e00e      	b.n	2a6e <_i2c_master_interrupt_handler+0x152>
    2a50:	697b      	ldr	r3, [r7, #20]
    2a52:	2224      	movs	r2, #36	; 0x24
    2a54:	5c9b      	ldrb	r3, [r3, r2]
    2a56:	b2db      	uxtb	r3, r3
    2a58:	2b00      	cmp	r3, #0
    2a5a:	d104      	bne.n	2a66 <_i2c_master_interrupt_handler+0x14a>
    2a5c:	697b      	ldr	r3, [r7, #20]
    2a5e:	0018      	movs	r0, r3
    2a60:	4b49      	ldr	r3, [pc, #292]	; (2b88 <_i2c_master_interrupt_handler+0x26c>)
    2a62:	4798      	blx	r3
    2a64:	e003      	b.n	2a6e <_i2c_master_interrupt_handler+0x152>
    2a66:	697b      	ldr	r3, [r7, #20]
    2a68:	0018      	movs	r0, r3
    2a6a:	4b48      	ldr	r3, [pc, #288]	; (2b8c <_i2c_master_interrupt_handler+0x270>)
    2a6c:	4798      	blx	r3
    2a6e:	697b      	ldr	r3, [r7, #20]
    2a70:	8b5b      	ldrh	r3, [r3, #26]
    2a72:	b29b      	uxth	r3, r3
    2a74:	2b00      	cmp	r3, #0
    2a76:	d047      	beq.n	2b08 <_i2c_master_interrupt_handler+0x1ec>
    2a78:	697b      	ldr	r3, [r7, #20]
    2a7a:	8b9b      	ldrh	r3, [r3, #28]
    2a7c:	b29b      	uxth	r3, r3
    2a7e:	2b00      	cmp	r3, #0
    2a80:	d142      	bne.n	2b08 <_i2c_master_interrupt_handler+0x1ec>
    2a82:	697b      	ldr	r3, [r7, #20]
    2a84:	2225      	movs	r2, #37	; 0x25
    2a86:	5c9b      	ldrb	r3, [r3, r2]
    2a88:	b2db      	uxtb	r3, r3
    2a8a:	2b05      	cmp	r3, #5
    2a8c:	d13c      	bne.n	2b08 <_i2c_master_interrupt_handler+0x1ec>
    2a8e:	697b      	ldr	r3, [r7, #20]
    2a90:	2224      	movs	r2, #36	; 0x24
    2a92:	5c9b      	ldrb	r3, [r3, r2]
    2a94:	b2db      	uxtb	r3, r3
    2a96:	2b01      	cmp	r3, #1
    2a98:	d136      	bne.n	2b08 <_i2c_master_interrupt_handler+0x1ec>
    2a9a:	693b      	ldr	r3, [r7, #16]
    2a9c:	7e1b      	ldrb	r3, [r3, #24]
    2a9e:	b2db      	uxtb	r3, r3
    2aa0:	001a      	movs	r2, r3
    2aa2:	2302      	movs	r3, #2
    2aa4:	4013      	ands	r3, r2
    2aa6:	d002      	beq.n	2aae <_i2c_master_interrupt_handler+0x192>
    2aa8:	693b      	ldr	r3, [r7, #16]
    2aaa:	2202      	movs	r2, #2
    2aac:	761a      	strb	r2, [r3, #24]
    2aae:	693b      	ldr	r3, [r7, #16]
    2ab0:	2203      	movs	r2, #3
    2ab2:	751a      	strb	r2, [r3, #20]
    2ab4:	697b      	ldr	r3, [r7, #20]
    2ab6:	2200      	movs	r2, #0
    2ab8:	835a      	strh	r2, [r3, #26]
    2aba:	697b      	ldr	r3, [r7, #20]
    2abc:	2225      	movs	r2, #37	; 0x25
    2abe:	2100      	movs	r1, #0
    2ac0:	5499      	strb	r1, [r3, r2]
    2ac2:	230e      	movs	r3, #14
    2ac4:	18fb      	adds	r3, r7, r3
    2ac6:	781b      	ldrb	r3, [r3, #0]
    2ac8:	2202      	movs	r2, #2
    2aca:	4013      	ands	r3, r2
    2acc:	d00b      	beq.n	2ae6 <_i2c_master_interrupt_handler+0x1ca>
    2ace:	697b      	ldr	r3, [r7, #20]
    2ad0:	2224      	movs	r2, #36	; 0x24
    2ad2:	5c9b      	ldrb	r3, [r3, r2]
    2ad4:	b2db      	uxtb	r3, r3
    2ad6:	2b01      	cmp	r3, #1
    2ad8:	d105      	bne.n	2ae6 <_i2c_master_interrupt_handler+0x1ca>
    2ada:	697b      	ldr	r3, [r7, #20]
    2adc:	691b      	ldr	r3, [r3, #16]
    2ade:	697a      	ldr	r2, [r7, #20]
    2ae0:	0010      	movs	r0, r2
    2ae2:	4798      	blx	r3
    2ae4:	e010      	b.n	2b08 <_i2c_master_interrupt_handler+0x1ec>
    2ae6:	230e      	movs	r3, #14
    2ae8:	18fb      	adds	r3, r7, r3
    2aea:	781b      	ldrb	r3, [r3, #0]
    2aec:	2201      	movs	r2, #1
    2aee:	4013      	ands	r3, r2
    2af0:	d00a      	beq.n	2b08 <_i2c_master_interrupt_handler+0x1ec>
    2af2:	697b      	ldr	r3, [r7, #20]
    2af4:	2224      	movs	r2, #36	; 0x24
    2af6:	5c9b      	ldrb	r3, [r3, r2]
    2af8:	b2db      	uxtb	r3, r3
    2afa:	2b00      	cmp	r3, #0
    2afc:	d104      	bne.n	2b08 <_i2c_master_interrupt_handler+0x1ec>
    2afe:	697b      	ldr	r3, [r7, #20]
    2b00:	68db      	ldr	r3, [r3, #12]
    2b02:	697a      	ldr	r2, [r7, #20]
    2b04:	0010      	movs	r0, r2
    2b06:	4798      	blx	r3
    2b08:	697b      	ldr	r3, [r7, #20]
    2b0a:	2225      	movs	r2, #37	; 0x25
    2b0c:	5c9b      	ldrb	r3, [r3, r2]
    2b0e:	b2db      	uxtb	r3, r3
    2b10:	2b05      	cmp	r3, #5
    2b12:	d02e      	beq.n	2b72 <_i2c_master_interrupt_handler+0x256>
    2b14:	697b      	ldr	r3, [r7, #20]
    2b16:	2225      	movs	r2, #37	; 0x25
    2b18:	5c9b      	ldrb	r3, [r3, r2]
    2b1a:	b2db      	uxtb	r3, r3
    2b1c:	2b00      	cmp	r3, #0
    2b1e:	d028      	beq.n	2b72 <_i2c_master_interrupt_handler+0x256>
    2b20:	693b      	ldr	r3, [r7, #16]
    2b22:	2203      	movs	r2, #3
    2b24:	751a      	strb	r2, [r3, #20]
    2b26:	697b      	ldr	r3, [r7, #20]
    2b28:	2200      	movs	r2, #0
    2b2a:	835a      	strh	r2, [r3, #26]
    2b2c:	697b      	ldr	r3, [r7, #20]
    2b2e:	2200      	movs	r2, #0
    2b30:	839a      	strh	r2, [r3, #28]
    2b32:	697b      	ldr	r3, [r7, #20]
    2b34:	2225      	movs	r2, #37	; 0x25
    2b36:	5c9b      	ldrb	r3, [r3, r2]
    2b38:	b2db      	uxtb	r3, r3
    2b3a:	2b41      	cmp	r3, #65	; 0x41
    2b3c:	d00e      	beq.n	2b5c <_i2c_master_interrupt_handler+0x240>
    2b3e:	697b      	ldr	r3, [r7, #20]
    2b40:	7a9b      	ldrb	r3, [r3, #10]
    2b42:	2b00      	cmp	r3, #0
    2b44:	d00a      	beq.n	2b5c <_i2c_master_interrupt_handler+0x240>
    2b46:	697b      	ldr	r3, [r7, #20]
    2b48:	0018      	movs	r0, r3
    2b4a:	4b0e      	ldr	r3, [pc, #56]	; (2b84 <_i2c_master_interrupt_handler+0x268>)
    2b4c:	4798      	blx	r3
    2b4e:	693b      	ldr	r3, [r7, #16]
    2b50:	685b      	ldr	r3, [r3, #4]
    2b52:	22e0      	movs	r2, #224	; 0xe0
    2b54:	02d2      	lsls	r2, r2, #11
    2b56:	431a      	orrs	r2, r3
    2b58:	693b      	ldr	r3, [r7, #16]
    2b5a:	605a      	str	r2, [r3, #4]
    2b5c:	230e      	movs	r3, #14
    2b5e:	18fb      	adds	r3, r7, r3
    2b60:	781b      	ldrb	r3, [r3, #0]
    2b62:	2204      	movs	r2, #4
    2b64:	4013      	ands	r3, r2
    2b66:	d004      	beq.n	2b72 <_i2c_master_interrupt_handler+0x256>
    2b68:	697b      	ldr	r3, [r7, #20]
    2b6a:	695b      	ldr	r3, [r3, #20]
    2b6c:	697a      	ldr	r2, [r7, #20]
    2b6e:	0010      	movs	r0, r2
    2b70:	4798      	blx	r3
    2b72:	46c0      	nop			; (mov r8, r8)
    2b74:	46bd      	mov	sp, r7
    2b76:	b006      	add	sp, #24
    2b78:	bd80      	pop	{r7, pc}
    2b7a:	46c0      	nop			; (mov r8, r8)
    2b7c:	20000d1c 	.word	0x20000d1c
    2b80:	00002861 	.word	0x00002861
    2b84:	000026d1 	.word	0x000026d1
    2b88:	000027e5 	.word	0x000027e5
    2b8c:	000026f5 	.word	0x000026f5

00002b90 <system_gclk_chan_get_config_defaults>:
    2b90:	b580      	push	{r7, lr}
    2b92:	b082      	sub	sp, #8
    2b94:	af00      	add	r7, sp, #0
    2b96:	6078      	str	r0, [r7, #4]
    2b98:	687b      	ldr	r3, [r7, #4]
    2b9a:	2200      	movs	r2, #0
    2b9c:	701a      	strb	r2, [r3, #0]
    2b9e:	46c0      	nop			; (mov r8, r8)
    2ba0:	46bd      	mov	sp, r7
    2ba2:	b002      	add	sp, #8
    2ba4:	bd80      	pop	{r7, pc}

00002ba6 <long_division>:
    2ba6:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ba8:	b08d      	sub	sp, #52	; 0x34
    2baa:	af00      	add	r7, sp, #0
    2bac:	60b8      	str	r0, [r7, #8]
    2bae:	60f9      	str	r1, [r7, #12]
    2bb0:	603a      	str	r2, [r7, #0]
    2bb2:	607b      	str	r3, [r7, #4]
    2bb4:	2300      	movs	r3, #0
    2bb6:	2400      	movs	r4, #0
    2bb8:	623b      	str	r3, [r7, #32]
    2bba:	627c      	str	r4, [r7, #36]	; 0x24
    2bbc:	2300      	movs	r3, #0
    2bbe:	2400      	movs	r4, #0
    2bc0:	61bb      	str	r3, [r7, #24]
    2bc2:	61fc      	str	r4, [r7, #28]
    2bc4:	233f      	movs	r3, #63	; 0x3f
    2bc6:	62fb      	str	r3, [r7, #44]	; 0x2c
    2bc8:	e053      	b.n	2c72 <long_division+0xcc>
    2bca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    2bcc:	3b20      	subs	r3, #32
    2bce:	2b00      	cmp	r3, #0
    2bd0:	db04      	blt.n	2bdc <long_division+0x36>
    2bd2:	2201      	movs	r2, #1
    2bd4:	409a      	lsls	r2, r3
    2bd6:	0013      	movs	r3, r2
    2bd8:	617b      	str	r3, [r7, #20]
    2bda:	e00b      	b.n	2bf4 <long_division+0x4e>
    2bdc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    2bde:	2220      	movs	r2, #32
    2be0:	1ad3      	subs	r3, r2, r3
    2be2:	2201      	movs	r2, #1
    2be4:	40da      	lsrs	r2, r3
    2be6:	0013      	movs	r3, r2
    2be8:	2100      	movs	r1, #0
    2bea:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    2bec:	4091      	lsls	r1, r2
    2bee:	000a      	movs	r2, r1
    2bf0:	4313      	orrs	r3, r2
    2bf2:	617b      	str	r3, [r7, #20]
    2bf4:	2201      	movs	r2, #1
    2bf6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    2bf8:	409a      	lsls	r2, r3
    2bfa:	0013      	movs	r3, r2
    2bfc:	613b      	str	r3, [r7, #16]
    2bfe:	69bb      	ldr	r3, [r7, #24]
    2c00:	69fc      	ldr	r4, [r7, #28]
    2c02:	18db      	adds	r3, r3, r3
    2c04:	4164      	adcs	r4, r4
    2c06:	61bb      	str	r3, [r7, #24]
    2c08:	61fc      	str	r4, [r7, #28]
    2c0a:	68bb      	ldr	r3, [r7, #8]
    2c0c:	693a      	ldr	r2, [r7, #16]
    2c0e:	401a      	ands	r2, r3
    2c10:	0015      	movs	r5, r2
    2c12:	68fb      	ldr	r3, [r7, #12]
    2c14:	697a      	ldr	r2, [r7, #20]
    2c16:	401a      	ands	r2, r3
    2c18:	0016      	movs	r6, r2
    2c1a:	002b      	movs	r3, r5
    2c1c:	4333      	orrs	r3, r6
    2c1e:	d007      	beq.n	2c30 <long_division+0x8a>
    2c20:	69bb      	ldr	r3, [r7, #24]
    2c22:	2201      	movs	r2, #1
    2c24:	4313      	orrs	r3, r2
    2c26:	61bb      	str	r3, [r7, #24]
    2c28:	69fb      	ldr	r3, [r7, #28]
    2c2a:	2200      	movs	r2, #0
    2c2c:	4313      	orrs	r3, r2
    2c2e:	61fb      	str	r3, [r7, #28]
    2c30:	687a      	ldr	r2, [r7, #4]
    2c32:	69fb      	ldr	r3, [r7, #28]
    2c34:	429a      	cmp	r2, r3
    2c36:	d819      	bhi.n	2c6c <long_division+0xc6>
    2c38:	687a      	ldr	r2, [r7, #4]
    2c3a:	69fb      	ldr	r3, [r7, #28]
    2c3c:	429a      	cmp	r2, r3
    2c3e:	d103      	bne.n	2c48 <long_division+0xa2>
    2c40:	683a      	ldr	r2, [r7, #0]
    2c42:	69bb      	ldr	r3, [r7, #24]
    2c44:	429a      	cmp	r2, r3
    2c46:	d811      	bhi.n	2c6c <long_division+0xc6>
    2c48:	69b9      	ldr	r1, [r7, #24]
    2c4a:	69fa      	ldr	r2, [r7, #28]
    2c4c:	683b      	ldr	r3, [r7, #0]
    2c4e:	687c      	ldr	r4, [r7, #4]
    2c50:	1ac9      	subs	r1, r1, r3
    2c52:	41a2      	sbcs	r2, r4
    2c54:	000b      	movs	r3, r1
    2c56:	0014      	movs	r4, r2
    2c58:	61bb      	str	r3, [r7, #24]
    2c5a:	61fc      	str	r4, [r7, #28]
    2c5c:	6a3a      	ldr	r2, [r7, #32]
    2c5e:	693b      	ldr	r3, [r7, #16]
    2c60:	4313      	orrs	r3, r2
    2c62:	623b      	str	r3, [r7, #32]
    2c64:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    2c66:	697b      	ldr	r3, [r7, #20]
    2c68:	4313      	orrs	r3, r2
    2c6a:	627b      	str	r3, [r7, #36]	; 0x24
    2c6c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    2c6e:	3b01      	subs	r3, #1
    2c70:	62fb      	str	r3, [r7, #44]	; 0x2c
    2c72:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    2c74:	2b00      	cmp	r3, #0
    2c76:	daa8      	bge.n	2bca <long_division+0x24>
    2c78:	6a3b      	ldr	r3, [r7, #32]
    2c7a:	6a7c      	ldr	r4, [r7, #36]	; 0x24
    2c7c:	0018      	movs	r0, r3
    2c7e:	0021      	movs	r1, r4
    2c80:	46bd      	mov	sp, r7
    2c82:	b00d      	add	sp, #52	; 0x34
    2c84:	bdf0      	pop	{r4, r5, r6, r7, pc}

00002c86 <_sercom_get_sync_baud_val>:
    2c86:	b580      	push	{r7, lr}
    2c88:	b086      	sub	sp, #24
    2c8a:	af00      	add	r7, sp, #0
    2c8c:	60f8      	str	r0, [r7, #12]
    2c8e:	60b9      	str	r1, [r7, #8]
    2c90:	607a      	str	r2, [r7, #4]
    2c92:	2316      	movs	r3, #22
    2c94:	18fb      	adds	r3, r7, r3
    2c96:	2200      	movs	r2, #0
    2c98:	801a      	strh	r2, [r3, #0]
    2c9a:	68bb      	ldr	r3, [r7, #8]
    2c9c:	613b      	str	r3, [r7, #16]
    2c9e:	68bb      	ldr	r3, [r7, #8]
    2ca0:	085a      	lsrs	r2, r3, #1
    2ca2:	68fb      	ldr	r3, [r7, #12]
    2ca4:	429a      	cmp	r2, r3
    2ca6:	d201      	bcs.n	2cac <_sercom_get_sync_baud_val+0x26>
    2ca8:	2340      	movs	r3, #64	; 0x40
    2caa:	e026      	b.n	2cfa <_sercom_get_sync_baud_val+0x74>
    2cac:	68bb      	ldr	r3, [r7, #8]
    2cae:	085b      	lsrs	r3, r3, #1
    2cb0:	613b      	str	r3, [r7, #16]
    2cb2:	e00a      	b.n	2cca <_sercom_get_sync_baud_val+0x44>
    2cb4:	693a      	ldr	r2, [r7, #16]
    2cb6:	68fb      	ldr	r3, [r7, #12]
    2cb8:	1ad3      	subs	r3, r2, r3
    2cba:	613b      	str	r3, [r7, #16]
    2cbc:	2316      	movs	r3, #22
    2cbe:	18fb      	adds	r3, r7, r3
    2cc0:	881a      	ldrh	r2, [r3, #0]
    2cc2:	2316      	movs	r3, #22
    2cc4:	18fb      	adds	r3, r7, r3
    2cc6:	3201      	adds	r2, #1
    2cc8:	801a      	strh	r2, [r3, #0]
    2cca:	693a      	ldr	r2, [r7, #16]
    2ccc:	68fb      	ldr	r3, [r7, #12]
    2cce:	429a      	cmp	r2, r3
    2cd0:	d2f0      	bcs.n	2cb4 <_sercom_get_sync_baud_val+0x2e>
    2cd2:	2316      	movs	r3, #22
    2cd4:	18fb      	adds	r3, r7, r3
    2cd6:	2216      	movs	r2, #22
    2cd8:	18ba      	adds	r2, r7, r2
    2cda:	8812      	ldrh	r2, [r2, #0]
    2cdc:	3a01      	subs	r2, #1
    2cde:	801a      	strh	r2, [r3, #0]
    2ce0:	2316      	movs	r3, #22
    2ce2:	18fb      	adds	r3, r7, r3
    2ce4:	881b      	ldrh	r3, [r3, #0]
    2ce6:	2bff      	cmp	r3, #255	; 0xff
    2ce8:	d901      	bls.n	2cee <_sercom_get_sync_baud_val+0x68>
    2cea:	2340      	movs	r3, #64	; 0x40
    2cec:	e005      	b.n	2cfa <_sercom_get_sync_baud_val+0x74>
    2cee:	687b      	ldr	r3, [r7, #4]
    2cf0:	2216      	movs	r2, #22
    2cf2:	18ba      	adds	r2, r7, r2
    2cf4:	8812      	ldrh	r2, [r2, #0]
    2cf6:	801a      	strh	r2, [r3, #0]
    2cf8:	2300      	movs	r3, #0
    2cfa:	0018      	movs	r0, r3
    2cfc:	46bd      	mov	sp, r7
    2cfe:	b006      	add	sp, #24
    2d00:	bd80      	pop	{r7, pc}
	...

00002d04 <_sercom_get_async_baud_val>:
    2d04:	b5f0      	push	{r4, r5, r6, r7, lr}
    2d06:	b0a1      	sub	sp, #132	; 0x84
    2d08:	af00      	add	r7, sp, #0
    2d0a:	64f8      	str	r0, [r7, #76]	; 0x4c
    2d0c:	64b9      	str	r1, [r7, #72]	; 0x48
    2d0e:	647a      	str	r2, [r7, #68]	; 0x44
    2d10:	2243      	movs	r2, #67	; 0x43
    2d12:	18ba      	adds	r2, r7, r2
    2d14:	7013      	strb	r3, [r2, #0]
    2d16:	2300      	movs	r3, #0
    2d18:	2400      	movs	r4, #0
    2d1a:	673b      	str	r3, [r7, #112]	; 0x70
    2d1c:	677c      	str	r4, [r7, #116]	; 0x74
    2d1e:	2300      	movs	r3, #0
    2d20:	2400      	movs	r4, #0
    2d22:	66bb      	str	r3, [r7, #104]	; 0x68
    2d24:	66fc      	str	r4, [r7, #108]	; 0x6c
    2d26:	2300      	movs	r3, #0
    2d28:	2400      	movs	r4, #0
    2d2a:	67bb      	str	r3, [r7, #120]	; 0x78
    2d2c:	67fc      	str	r4, [r7, #124]	; 0x7c
    2d2e:	2300      	movs	r3, #0
    2d30:	667b      	str	r3, [r7, #100]	; 0x64
    2d32:	2358      	movs	r3, #88	; 0x58
    2d34:	2240      	movs	r2, #64	; 0x40
    2d36:	4694      	mov	ip, r2
    2d38:	44bc      	add	ip, r7
    2d3a:	4463      	add	r3, ip
    2d3c:	781a      	ldrb	r2, [r3, #0]
    2d3e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    2d40:	435a      	muls	r2, r3
    2d42:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    2d44:	429a      	cmp	r2, r3
    2d46:	d901      	bls.n	2d4c <_sercom_get_async_baud_val+0x48>
    2d48:	2340      	movs	r3, #64	; 0x40
    2d4a:	e0b3      	b.n	2eb4 <_sercom_get_async_baud_val+0x1b0>
    2d4c:	2343      	movs	r3, #67	; 0x43
    2d4e:	18fb      	adds	r3, r7, r3
    2d50:	781b      	ldrb	r3, [r3, #0]
    2d52:	2b00      	cmp	r3, #0
    2d54:	d13d      	bne.n	2dd2 <_sercom_get_async_baud_val+0xce>
    2d56:	2358      	movs	r3, #88	; 0x58
    2d58:	2240      	movs	r2, #64	; 0x40
    2d5a:	4694      	mov	ip, r2
    2d5c:	44bc      	add	ip, r7
    2d5e:	4463      	add	r3, ip
    2d60:	781b      	ldrb	r3, [r3, #0]
    2d62:	b2db      	uxtb	r3, r3
    2d64:	613b      	str	r3, [r7, #16]
    2d66:	2300      	movs	r3, #0
    2d68:	617b      	str	r3, [r7, #20]
    2d6a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    2d6c:	60bb      	str	r3, [r7, #8]
    2d6e:	2300      	movs	r3, #0
    2d70:	60fb      	str	r3, [r7, #12]
    2d72:	4c52      	ldr	r4, [pc, #328]	; (2ebc <_sercom_get_async_baud_val+0x1b8>)
    2d74:	68ba      	ldr	r2, [r7, #8]
    2d76:	68fb      	ldr	r3, [r7, #12]
    2d78:	6938      	ldr	r0, [r7, #16]
    2d7a:	6979      	ldr	r1, [r7, #20]
    2d7c:	47a0      	blx	r4
    2d7e:	0003      	movs	r3, r0
    2d80:	000c      	movs	r4, r1
    2d82:	001b      	movs	r3, r3
    2d84:	65fb      	str	r3, [r7, #92]	; 0x5c
    2d86:	2300      	movs	r3, #0
    2d88:	65bb      	str	r3, [r7, #88]	; 0x58
    2d8a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    2d8c:	603b      	str	r3, [r7, #0]
    2d8e:	2300      	movs	r3, #0
    2d90:	607b      	str	r3, [r7, #4]
    2d92:	6db8      	ldr	r0, [r7, #88]	; 0x58
    2d94:	6df9      	ldr	r1, [r7, #92]	; 0x5c
    2d96:	683a      	ldr	r2, [r7, #0]
    2d98:	687b      	ldr	r3, [r7, #4]
    2d9a:	4c49      	ldr	r4, [pc, #292]	; (2ec0 <_sercom_get_async_baud_val+0x1bc>)
    2d9c:	47a0      	blx	r4
    2d9e:	0003      	movs	r3, r0
    2da0:	000c      	movs	r4, r1
    2da2:	673b      	str	r3, [r7, #112]	; 0x70
    2da4:	677c      	str	r4, [r7, #116]	; 0x74
    2da6:	2100      	movs	r1, #0
    2da8:	2201      	movs	r2, #1
    2daa:	6f3b      	ldr	r3, [r7, #112]	; 0x70
    2dac:	6f7c      	ldr	r4, [r7, #116]	; 0x74
    2dae:	1ac9      	subs	r1, r1, r3
    2db0:	41a2      	sbcs	r2, r4
    2db2:	000b      	movs	r3, r1
    2db4:	0014      	movs	r4, r2
    2db6:	66bb      	str	r3, [r7, #104]	; 0x68
    2db8:	66fc      	str	r4, [r7, #108]	; 0x6c
    2dba:	6ebb      	ldr	r3, [r7, #104]	; 0x68
    2dbc:	0c1b      	lsrs	r3, r3, #16
    2dbe:	6efa      	ldr	r2, [r7, #108]	; 0x6c
    2dc0:	0416      	lsls	r6, r2, #16
    2dc2:	431e      	orrs	r6, r3
    2dc4:	6ebb      	ldr	r3, [r7, #104]	; 0x68
    2dc6:	041d      	lsls	r5, r3, #16
    2dc8:	0033      	movs	r3, r6
    2dca:	67bb      	str	r3, [r7, #120]	; 0x78
    2dcc:	2300      	movs	r3, #0
    2dce:	67fb      	str	r3, [r7, #124]	; 0x7c
    2dd0:	e06a      	b.n	2ea8 <_sercom_get_async_baud_val+0x1a4>
    2dd2:	2343      	movs	r3, #67	; 0x43
    2dd4:	18fb      	adds	r3, r7, r3
    2dd6:	781b      	ldrb	r3, [r3, #0]
    2dd8:	2b01      	cmp	r3, #1
    2dda:	d165      	bne.n	2ea8 <_sercom_get_async_baud_val+0x1a4>
    2ddc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    2dde:	633b      	str	r3, [r7, #48]	; 0x30
    2de0:	2300      	movs	r3, #0
    2de2:	637b      	str	r3, [r7, #52]	; 0x34
    2de4:	2358      	movs	r3, #88	; 0x58
    2de6:	2240      	movs	r2, #64	; 0x40
    2de8:	4694      	mov	ip, r2
    2dea:	44bc      	add	ip, r7
    2dec:	4463      	add	r3, ip
    2dee:	781b      	ldrb	r3, [r3, #0]
    2df0:	b2db      	uxtb	r3, r3
    2df2:	62bb      	str	r3, [r7, #40]	; 0x28
    2df4:	2300      	movs	r3, #0
    2df6:	62fb      	str	r3, [r7, #44]	; 0x2c
    2df8:	4c30      	ldr	r4, [pc, #192]	; (2ebc <_sercom_get_async_baud_val+0x1b8>)
    2dfa:	6aba      	ldr	r2, [r7, #40]	; 0x28
    2dfc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    2dfe:	6b38      	ldr	r0, [r7, #48]	; 0x30
    2e00:	6b79      	ldr	r1, [r7, #52]	; 0x34
    2e02:	47a0      	blx	r4
    2e04:	0003      	movs	r3, r0
    2e06:	000c      	movs	r4, r1
    2e08:	65bb      	str	r3, [r7, #88]	; 0x58
    2e0a:	65fc      	str	r4, [r7, #92]	; 0x5c
    2e0c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    2e0e:	623b      	str	r3, [r7, #32]
    2e10:	2300      	movs	r3, #0
    2e12:	627b      	str	r3, [r7, #36]	; 0x24
    2e14:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    2e16:	6dfc      	ldr	r4, [r7, #92]	; 0x5c
    2e18:	001a      	movs	r2, r3
    2e1a:	0023      	movs	r3, r4
    2e1c:	6a38      	ldr	r0, [r7, #32]
    2e1e:	6a79      	ldr	r1, [r7, #36]	; 0x24
    2e20:	4c27      	ldr	r4, [pc, #156]	; (2ec0 <_sercom_get_async_baud_val+0x1bc>)
    2e22:	47a0      	blx	r4
    2e24:	0003      	movs	r3, r0
    2e26:	000c      	movs	r4, r1
    2e28:	667b      	str	r3, [r7, #100]	; 0x64
    2e2a:	6e7a      	ldr	r2, [r7, #100]	; 0x64
    2e2c:	2380      	movs	r3, #128	; 0x80
    2e2e:	019b      	lsls	r3, r3, #6
    2e30:	429a      	cmp	r2, r3
    2e32:	d901      	bls.n	2e38 <_sercom_get_async_baud_val+0x134>
    2e34:	2340      	movs	r3, #64	; 0x40
    2e36:	e03d      	b.n	2eb4 <_sercom_get_async_baud_val+0x1b0>
    2e38:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    2e3a:	61bb      	str	r3, [r7, #24]
    2e3c:	2300      	movs	r3, #0
    2e3e:	61fb      	str	r3, [r7, #28]
    2e40:	69b9      	ldr	r1, [r7, #24]
    2e42:	69fa      	ldr	r2, [r7, #28]
    2e44:	000b      	movs	r3, r1
    2e46:	0f5b      	lsrs	r3, r3, #29
    2e48:	0010      	movs	r0, r2
    2e4a:	00c0      	lsls	r0, r0, #3
    2e4c:	63f8      	str	r0, [r7, #60]	; 0x3c
    2e4e:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
    2e50:	4318      	orrs	r0, r3
    2e52:	63f8      	str	r0, [r7, #60]	; 0x3c
    2e54:	000b      	movs	r3, r1
    2e56:	00db      	lsls	r3, r3, #3
    2e58:	63bb      	str	r3, [r7, #56]	; 0x38
    2e5a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    2e5c:	6dfc      	ldr	r4, [r7, #92]	; 0x5c
    2e5e:	001a      	movs	r2, r3
    2e60:	0023      	movs	r3, r4
    2e62:	6bb8      	ldr	r0, [r7, #56]	; 0x38
    2e64:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
    2e66:	4c16      	ldr	r4, [pc, #88]	; (2ec0 <_sercom_get_async_baud_val+0x1bc>)
    2e68:	47a0      	blx	r4
    2e6a:	0003      	movs	r3, r0
    2e6c:	000c      	movs	r4, r1
    2e6e:	65bb      	str	r3, [r7, #88]	; 0x58
    2e70:	65fc      	str	r4, [r7, #92]	; 0x5c
    2e72:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    2e74:	6dfc      	ldr	r4, [r7, #92]	; 0x5c
    2e76:	b2d9      	uxtb	r1, r3
    2e78:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    2e7a:	b2db      	uxtb	r3, r3
    2e7c:	00db      	lsls	r3, r3, #3
    2e7e:	b2da      	uxtb	r2, r3
    2e80:	2317      	movs	r3, #23
    2e82:	2040      	movs	r0, #64	; 0x40
    2e84:	4684      	mov	ip, r0
    2e86:	44bc      	add	ip, r7
    2e88:	4463      	add	r3, ip
    2e8a:	1a8a      	subs	r2, r1, r2
    2e8c:	701a      	strb	r2, [r3, #0]
    2e8e:	2317      	movs	r3, #23
    2e90:	2240      	movs	r2, #64	; 0x40
    2e92:	4694      	mov	ip, r2
    2e94:	44bc      	add	ip, r7
    2e96:	4463      	add	r3, ip
    2e98:	781b      	ldrb	r3, [r3, #0]
    2e9a:	035b      	lsls	r3, r3, #13
    2e9c:	001a      	movs	r2, r3
    2e9e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    2ea0:	4313      	orrs	r3, r2
    2ea2:	67bb      	str	r3, [r7, #120]	; 0x78
    2ea4:	2300      	movs	r3, #0
    2ea6:	67fb      	str	r3, [r7, #124]	; 0x7c
    2ea8:	6fbb      	ldr	r3, [r7, #120]	; 0x78
    2eaa:	6ffc      	ldr	r4, [r7, #124]	; 0x7c
    2eac:	b29a      	uxth	r2, r3
    2eae:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    2eb0:	801a      	strh	r2, [r3, #0]
    2eb2:	2300      	movs	r3, #0
    2eb4:	0018      	movs	r0, r3
    2eb6:	46bd      	mov	sp, r7
    2eb8:	b021      	add	sp, #132	; 0x84
    2eba:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2ebc:	00014d35 	.word	0x00014d35
    2ec0:	00002ba7 	.word	0x00002ba7

00002ec4 <sercom_set_gclk_generator>:
    2ec4:	b580      	push	{r7, lr}
    2ec6:	b084      	sub	sp, #16
    2ec8:	af00      	add	r7, sp, #0
    2eca:	0002      	movs	r2, r0
    2ecc:	1dfb      	adds	r3, r7, #7
    2ece:	701a      	strb	r2, [r3, #0]
    2ed0:	1dbb      	adds	r3, r7, #6
    2ed2:	1c0a      	adds	r2, r1, #0
    2ed4:	701a      	strb	r2, [r3, #0]
    2ed6:	4b1a      	ldr	r3, [pc, #104]	; (2f40 <sercom_set_gclk_generator+0x7c>)
    2ed8:	781b      	ldrb	r3, [r3, #0]
    2eda:	2201      	movs	r2, #1
    2edc:	4053      	eors	r3, r2
    2ede:	b2db      	uxtb	r3, r3
    2ee0:	2b00      	cmp	r3, #0
    2ee2:	d103      	bne.n	2eec <sercom_set_gclk_generator+0x28>
    2ee4:	1dbb      	adds	r3, r7, #6
    2ee6:	781b      	ldrb	r3, [r3, #0]
    2ee8:	2b00      	cmp	r3, #0
    2eea:	d01b      	beq.n	2f24 <sercom_set_gclk_generator+0x60>
    2eec:	230c      	movs	r3, #12
    2eee:	18fb      	adds	r3, r7, r3
    2ef0:	0018      	movs	r0, r3
    2ef2:	4b14      	ldr	r3, [pc, #80]	; (2f44 <sercom_set_gclk_generator+0x80>)
    2ef4:	4798      	blx	r3
    2ef6:	230c      	movs	r3, #12
    2ef8:	18fb      	adds	r3, r7, r3
    2efa:	1dfa      	adds	r2, r7, #7
    2efc:	7812      	ldrb	r2, [r2, #0]
    2efe:	701a      	strb	r2, [r3, #0]
    2f00:	230c      	movs	r3, #12
    2f02:	18fb      	adds	r3, r7, r3
    2f04:	0019      	movs	r1, r3
    2f06:	2011      	movs	r0, #17
    2f08:	4b0f      	ldr	r3, [pc, #60]	; (2f48 <sercom_set_gclk_generator+0x84>)
    2f0a:	4798      	blx	r3
    2f0c:	2011      	movs	r0, #17
    2f0e:	4b0f      	ldr	r3, [pc, #60]	; (2f4c <sercom_set_gclk_generator+0x88>)
    2f10:	4798      	blx	r3
    2f12:	4b0b      	ldr	r3, [pc, #44]	; (2f40 <sercom_set_gclk_generator+0x7c>)
    2f14:	1dfa      	adds	r2, r7, #7
    2f16:	7812      	ldrb	r2, [r2, #0]
    2f18:	705a      	strb	r2, [r3, #1]
    2f1a:	4b09      	ldr	r3, [pc, #36]	; (2f40 <sercom_set_gclk_generator+0x7c>)
    2f1c:	2201      	movs	r2, #1
    2f1e:	701a      	strb	r2, [r3, #0]
    2f20:	2300      	movs	r3, #0
    2f22:	e008      	b.n	2f36 <sercom_set_gclk_generator+0x72>
    2f24:	4b06      	ldr	r3, [pc, #24]	; (2f40 <sercom_set_gclk_generator+0x7c>)
    2f26:	785b      	ldrb	r3, [r3, #1]
    2f28:	1dfa      	adds	r2, r7, #7
    2f2a:	7812      	ldrb	r2, [r2, #0]
    2f2c:	429a      	cmp	r2, r3
    2f2e:	d101      	bne.n	2f34 <sercom_set_gclk_generator+0x70>
    2f30:	2300      	movs	r3, #0
    2f32:	e000      	b.n	2f36 <sercom_set_gclk_generator+0x72>
    2f34:	231d      	movs	r3, #29
    2f36:	0018      	movs	r0, r3
    2f38:	46bd      	mov	sp, r7
    2f3a:	b004      	add	sp, #16
    2f3c:	bd80      	pop	{r7, pc}
    2f3e:	46c0      	nop			; (mov r8, r8)
    2f40:	20000a14 	.word	0x20000a14
    2f44:	00002b91 	.word	0x00002b91
    2f48:	000056c9 	.word	0x000056c9
    2f4c:	00005709 	.word	0x00005709

00002f50 <_sercom_get_default_pad>:
    2f50:	b580      	push	{r7, lr}
    2f52:	b082      	sub	sp, #8
    2f54:	af00      	add	r7, sp, #0
    2f56:	6078      	str	r0, [r7, #4]
    2f58:	000a      	movs	r2, r1
    2f5a:	1cfb      	adds	r3, r7, #3
    2f5c:	701a      	strb	r2, [r3, #0]
    2f5e:	687b      	ldr	r3, [r7, #4]
    2f60:	4a4e      	ldr	r2, [pc, #312]	; (309c <_sercom_get_default_pad+0x14c>)
    2f62:	4293      	cmp	r3, r2
    2f64:	d040      	beq.n	2fe8 <_sercom_get_default_pad+0x98>
    2f66:	4a4d      	ldr	r2, [pc, #308]	; (309c <_sercom_get_default_pad+0x14c>)
    2f68:	4293      	cmp	r3, r2
    2f6a:	d807      	bhi.n	2f7c <_sercom_get_default_pad+0x2c>
    2f6c:	2284      	movs	r2, #132	; 0x84
    2f6e:	05d2      	lsls	r2, r2, #23
    2f70:	4293      	cmp	r3, r2
    2f72:	d00f      	beq.n	2f94 <_sercom_get_default_pad+0x44>
    2f74:	4a4a      	ldr	r2, [pc, #296]	; (30a0 <_sercom_get_default_pad+0x150>)
    2f76:	4293      	cmp	r3, r2
    2f78:	d021      	beq.n	2fbe <_sercom_get_default_pad+0x6e>
    2f7a:	e089      	b.n	3090 <_sercom_get_default_pad+0x140>
    2f7c:	4a49      	ldr	r2, [pc, #292]	; (30a4 <_sercom_get_default_pad+0x154>)
    2f7e:	4293      	cmp	r3, r2
    2f80:	d100      	bne.n	2f84 <_sercom_get_default_pad+0x34>
    2f82:	e05b      	b.n	303c <_sercom_get_default_pad+0xec>
    2f84:	4a48      	ldr	r2, [pc, #288]	; (30a8 <_sercom_get_default_pad+0x158>)
    2f86:	4293      	cmp	r3, r2
    2f88:	d100      	bne.n	2f8c <_sercom_get_default_pad+0x3c>
    2f8a:	e06c      	b.n	3066 <_sercom_get_default_pad+0x116>
    2f8c:	4a47      	ldr	r2, [pc, #284]	; (30ac <_sercom_get_default_pad+0x15c>)
    2f8e:	4293      	cmp	r3, r2
    2f90:	d03f      	beq.n	3012 <_sercom_get_default_pad+0xc2>
    2f92:	e07d      	b.n	3090 <_sercom_get_default_pad+0x140>
    2f94:	1cfb      	adds	r3, r7, #3
    2f96:	781b      	ldrb	r3, [r3, #0]
    2f98:	2b01      	cmp	r3, #1
    2f9a:	d00a      	beq.n	2fb2 <_sercom_get_default_pad+0x62>
    2f9c:	dc02      	bgt.n	2fa4 <_sercom_get_default_pad+0x54>
    2f9e:	2b00      	cmp	r3, #0
    2fa0:	d005      	beq.n	2fae <_sercom_get_default_pad+0x5e>
    2fa2:	e075      	b.n	3090 <_sercom_get_default_pad+0x140>
    2fa4:	2b02      	cmp	r3, #2
    2fa6:	d006      	beq.n	2fb6 <_sercom_get_default_pad+0x66>
    2fa8:	2b03      	cmp	r3, #3
    2faa:	d006      	beq.n	2fba <_sercom_get_default_pad+0x6a>
    2fac:	e070      	b.n	3090 <_sercom_get_default_pad+0x140>
    2fae:	4b40      	ldr	r3, [pc, #256]	; (30b0 <_sercom_get_default_pad+0x160>)
    2fb0:	e06f      	b.n	3092 <_sercom_get_default_pad+0x142>
    2fb2:	4b40      	ldr	r3, [pc, #256]	; (30b4 <_sercom_get_default_pad+0x164>)
    2fb4:	e06d      	b.n	3092 <_sercom_get_default_pad+0x142>
    2fb6:	4b40      	ldr	r3, [pc, #256]	; (30b8 <_sercom_get_default_pad+0x168>)
    2fb8:	e06b      	b.n	3092 <_sercom_get_default_pad+0x142>
    2fba:	4b40      	ldr	r3, [pc, #256]	; (30bc <_sercom_get_default_pad+0x16c>)
    2fbc:	e069      	b.n	3092 <_sercom_get_default_pad+0x142>
    2fbe:	1cfb      	adds	r3, r7, #3
    2fc0:	781b      	ldrb	r3, [r3, #0]
    2fc2:	2b01      	cmp	r3, #1
    2fc4:	d00a      	beq.n	2fdc <_sercom_get_default_pad+0x8c>
    2fc6:	dc02      	bgt.n	2fce <_sercom_get_default_pad+0x7e>
    2fc8:	2b00      	cmp	r3, #0
    2fca:	d005      	beq.n	2fd8 <_sercom_get_default_pad+0x88>
    2fcc:	e060      	b.n	3090 <_sercom_get_default_pad+0x140>
    2fce:	2b02      	cmp	r3, #2
    2fd0:	d006      	beq.n	2fe0 <_sercom_get_default_pad+0x90>
    2fd2:	2b03      	cmp	r3, #3
    2fd4:	d006      	beq.n	2fe4 <_sercom_get_default_pad+0x94>
    2fd6:	e05b      	b.n	3090 <_sercom_get_default_pad+0x140>
    2fd8:	2303      	movs	r3, #3
    2fda:	e05a      	b.n	3092 <_sercom_get_default_pad+0x142>
    2fdc:	4b38      	ldr	r3, [pc, #224]	; (30c0 <_sercom_get_default_pad+0x170>)
    2fde:	e058      	b.n	3092 <_sercom_get_default_pad+0x142>
    2fe0:	4b38      	ldr	r3, [pc, #224]	; (30c4 <_sercom_get_default_pad+0x174>)
    2fe2:	e056      	b.n	3092 <_sercom_get_default_pad+0x142>
    2fe4:	4b38      	ldr	r3, [pc, #224]	; (30c8 <_sercom_get_default_pad+0x178>)
    2fe6:	e054      	b.n	3092 <_sercom_get_default_pad+0x142>
    2fe8:	1cfb      	adds	r3, r7, #3
    2fea:	781b      	ldrb	r3, [r3, #0]
    2fec:	2b01      	cmp	r3, #1
    2fee:	d00a      	beq.n	3006 <_sercom_get_default_pad+0xb6>
    2ff0:	dc02      	bgt.n	2ff8 <_sercom_get_default_pad+0xa8>
    2ff2:	2b00      	cmp	r3, #0
    2ff4:	d005      	beq.n	3002 <_sercom_get_default_pad+0xb2>
    2ff6:	e04b      	b.n	3090 <_sercom_get_default_pad+0x140>
    2ff8:	2b02      	cmp	r3, #2
    2ffa:	d006      	beq.n	300a <_sercom_get_default_pad+0xba>
    2ffc:	2b03      	cmp	r3, #3
    2ffe:	d006      	beq.n	300e <_sercom_get_default_pad+0xbe>
    3000:	e046      	b.n	3090 <_sercom_get_default_pad+0x140>
    3002:	4b32      	ldr	r3, [pc, #200]	; (30cc <_sercom_get_default_pad+0x17c>)
    3004:	e045      	b.n	3092 <_sercom_get_default_pad+0x142>
    3006:	4b32      	ldr	r3, [pc, #200]	; (30d0 <_sercom_get_default_pad+0x180>)
    3008:	e043      	b.n	3092 <_sercom_get_default_pad+0x142>
    300a:	4b32      	ldr	r3, [pc, #200]	; (30d4 <_sercom_get_default_pad+0x184>)
    300c:	e041      	b.n	3092 <_sercom_get_default_pad+0x142>
    300e:	4b32      	ldr	r3, [pc, #200]	; (30d8 <_sercom_get_default_pad+0x188>)
    3010:	e03f      	b.n	3092 <_sercom_get_default_pad+0x142>
    3012:	1cfb      	adds	r3, r7, #3
    3014:	781b      	ldrb	r3, [r3, #0]
    3016:	2b01      	cmp	r3, #1
    3018:	d00a      	beq.n	3030 <_sercom_get_default_pad+0xe0>
    301a:	dc02      	bgt.n	3022 <_sercom_get_default_pad+0xd2>
    301c:	2b00      	cmp	r3, #0
    301e:	d005      	beq.n	302c <_sercom_get_default_pad+0xdc>
    3020:	e036      	b.n	3090 <_sercom_get_default_pad+0x140>
    3022:	2b02      	cmp	r3, #2
    3024:	d006      	beq.n	3034 <_sercom_get_default_pad+0xe4>
    3026:	2b03      	cmp	r3, #3
    3028:	d006      	beq.n	3038 <_sercom_get_default_pad+0xe8>
    302a:	e031      	b.n	3090 <_sercom_get_default_pad+0x140>
    302c:	4b2b      	ldr	r3, [pc, #172]	; (30dc <_sercom_get_default_pad+0x18c>)
    302e:	e030      	b.n	3092 <_sercom_get_default_pad+0x142>
    3030:	4b2b      	ldr	r3, [pc, #172]	; (30e0 <_sercom_get_default_pad+0x190>)
    3032:	e02e      	b.n	3092 <_sercom_get_default_pad+0x142>
    3034:	4b2b      	ldr	r3, [pc, #172]	; (30e4 <_sercom_get_default_pad+0x194>)
    3036:	e02c      	b.n	3092 <_sercom_get_default_pad+0x142>
    3038:	4b2b      	ldr	r3, [pc, #172]	; (30e8 <_sercom_get_default_pad+0x198>)
    303a:	e02a      	b.n	3092 <_sercom_get_default_pad+0x142>
    303c:	1cfb      	adds	r3, r7, #3
    303e:	781b      	ldrb	r3, [r3, #0]
    3040:	2b01      	cmp	r3, #1
    3042:	d00a      	beq.n	305a <_sercom_get_default_pad+0x10a>
    3044:	dc02      	bgt.n	304c <_sercom_get_default_pad+0xfc>
    3046:	2b00      	cmp	r3, #0
    3048:	d005      	beq.n	3056 <_sercom_get_default_pad+0x106>
    304a:	e021      	b.n	3090 <_sercom_get_default_pad+0x140>
    304c:	2b02      	cmp	r3, #2
    304e:	d006      	beq.n	305e <_sercom_get_default_pad+0x10e>
    3050:	2b03      	cmp	r3, #3
    3052:	d006      	beq.n	3062 <_sercom_get_default_pad+0x112>
    3054:	e01c      	b.n	3090 <_sercom_get_default_pad+0x140>
    3056:	2300      	movs	r3, #0
    3058:	e01b      	b.n	3092 <_sercom_get_default_pad+0x142>
    305a:	2300      	movs	r3, #0
    305c:	e019      	b.n	3092 <_sercom_get_default_pad+0x142>
    305e:	4b23      	ldr	r3, [pc, #140]	; (30ec <_sercom_get_default_pad+0x19c>)
    3060:	e017      	b.n	3092 <_sercom_get_default_pad+0x142>
    3062:	4b23      	ldr	r3, [pc, #140]	; (30f0 <_sercom_get_default_pad+0x1a0>)
    3064:	e015      	b.n	3092 <_sercom_get_default_pad+0x142>
    3066:	1cfb      	adds	r3, r7, #3
    3068:	781b      	ldrb	r3, [r3, #0]
    306a:	2b01      	cmp	r3, #1
    306c:	d00a      	beq.n	3084 <_sercom_get_default_pad+0x134>
    306e:	dc02      	bgt.n	3076 <_sercom_get_default_pad+0x126>
    3070:	2b00      	cmp	r3, #0
    3072:	d005      	beq.n	3080 <_sercom_get_default_pad+0x130>
    3074:	e00c      	b.n	3090 <_sercom_get_default_pad+0x140>
    3076:	2b02      	cmp	r3, #2
    3078:	d006      	beq.n	3088 <_sercom_get_default_pad+0x138>
    307a:	2b03      	cmp	r3, #3
    307c:	d006      	beq.n	308c <_sercom_get_default_pad+0x13c>
    307e:	e007      	b.n	3090 <_sercom_get_default_pad+0x140>
    3080:	4b1c      	ldr	r3, [pc, #112]	; (30f4 <_sercom_get_default_pad+0x1a4>)
    3082:	e006      	b.n	3092 <_sercom_get_default_pad+0x142>
    3084:	4b1c      	ldr	r3, [pc, #112]	; (30f8 <_sercom_get_default_pad+0x1a8>)
    3086:	e004      	b.n	3092 <_sercom_get_default_pad+0x142>
    3088:	4b1c      	ldr	r3, [pc, #112]	; (30fc <_sercom_get_default_pad+0x1ac>)
    308a:	e002      	b.n	3092 <_sercom_get_default_pad+0x142>
    308c:	4b1c      	ldr	r3, [pc, #112]	; (3100 <_sercom_get_default_pad+0x1b0>)
    308e:	e000      	b.n	3092 <_sercom_get_default_pad+0x142>
    3090:	2300      	movs	r3, #0
    3092:	0018      	movs	r0, r3
    3094:	46bd      	mov	sp, r7
    3096:	b002      	add	sp, #8
    3098:	bd80      	pop	{r7, pc}
    309a:	46c0      	nop			; (mov r8, r8)
    309c:	42000800 	.word	0x42000800
    30a0:	42000400 	.word	0x42000400
    30a4:	42001000 	.word	0x42001000
    30a8:	43000400 	.word	0x43000400
    30ac:	42000c00 	.word	0x42000c00
    30b0:	00040003 	.word	0x00040003
    30b4:	00050003 	.word	0x00050003
    30b8:	00060003 	.word	0x00060003
    30bc:	00070003 	.word	0x00070003
    30c0:	00010003 	.word	0x00010003
    30c4:	001e0003 	.word	0x001e0003
    30c8:	001f0003 	.word	0x001f0003
    30cc:	00080003 	.word	0x00080003
    30d0:	00090003 	.word	0x00090003
    30d4:	000a0003 	.word	0x000a0003
    30d8:	000b0003 	.word	0x000b0003
    30dc:	00100003 	.word	0x00100003
    30e0:	00110003 	.word	0x00110003
    30e4:	00120003 	.word	0x00120003
    30e8:	00130003 	.word	0x00130003
    30ec:	000e0003 	.word	0x000e0003
    30f0:	000f0003 	.word	0x000f0003
    30f4:	00160003 	.word	0x00160003
    30f8:	00170003 	.word	0x00170003
    30fc:	00180003 	.word	0x00180003
    3100:	00190003 	.word	0x00190003

00003104 <_sercom_get_sercom_inst_index>:
    3104:	b590      	push	{r4, r7, lr}
    3106:	b08b      	sub	sp, #44	; 0x2c
    3108:	af00      	add	r7, sp, #0
    310a:	6078      	str	r0, [r7, #4]
    310c:	230c      	movs	r3, #12
    310e:	18fb      	adds	r3, r7, r3
    3110:	4a0f      	ldr	r2, [pc, #60]	; (3150 <_sercom_get_sercom_inst_index+0x4c>)
    3112:	ca13      	ldmia	r2!, {r0, r1, r4}
    3114:	c313      	stmia	r3!, {r0, r1, r4}
    3116:	ca13      	ldmia	r2!, {r0, r1, r4}
    3118:	c313      	stmia	r3!, {r0, r1, r4}
    311a:	2300      	movs	r3, #0
    311c:	627b      	str	r3, [r7, #36]	; 0x24
    311e:	e00e      	b.n	313e <_sercom_get_sercom_inst_index+0x3a>
    3120:	230c      	movs	r3, #12
    3122:	18fb      	adds	r3, r7, r3
    3124:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    3126:	0092      	lsls	r2, r2, #2
    3128:	58d3      	ldr	r3, [r2, r3]
    312a:	001a      	movs	r2, r3
    312c:	687b      	ldr	r3, [r7, #4]
    312e:	429a      	cmp	r2, r3
    3130:	d102      	bne.n	3138 <_sercom_get_sercom_inst_index+0x34>
    3132:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3134:	b2db      	uxtb	r3, r3
    3136:	e006      	b.n	3146 <_sercom_get_sercom_inst_index+0x42>
    3138:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    313a:	3301      	adds	r3, #1
    313c:	627b      	str	r3, [r7, #36]	; 0x24
    313e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3140:	2b05      	cmp	r3, #5
    3142:	d9ed      	bls.n	3120 <_sercom_get_sercom_inst_index+0x1c>
    3144:	2300      	movs	r3, #0
    3146:	0018      	movs	r0, r3
    3148:	46bd      	mov	sp, r7
    314a:	b00b      	add	sp, #44	; 0x2c
    314c:	bd90      	pop	{r4, r7, pc}
    314e:	46c0      	nop			; (mov r8, r8)
    3150:	0001cb04 	.word	0x0001cb04

00003154 <_sercom_default_handler>:
    3154:	b580      	push	{r7, lr}
    3156:	b082      	sub	sp, #8
    3158:	af00      	add	r7, sp, #0
    315a:	0002      	movs	r2, r0
    315c:	1dfb      	adds	r3, r7, #7
    315e:	701a      	strb	r2, [r3, #0]
    3160:	46c0      	nop			; (mov r8, r8)
    3162:	46bd      	mov	sp, r7
    3164:	b002      	add	sp, #8
    3166:	bd80      	pop	{r7, pc}

00003168 <_sercom_set_handler>:
    3168:	b580      	push	{r7, lr}
    316a:	b084      	sub	sp, #16
    316c:	af00      	add	r7, sp, #0
    316e:	0002      	movs	r2, r0
    3170:	6039      	str	r1, [r7, #0]
    3172:	1dfb      	adds	r3, r7, #7
    3174:	701a      	strb	r2, [r3, #0]
    3176:	4b13      	ldr	r3, [pc, #76]	; (31c4 <_sercom_set_handler+0x5c>)
    3178:	781b      	ldrb	r3, [r3, #0]
    317a:	2201      	movs	r2, #1
    317c:	4053      	eors	r3, r2
    317e:	b2db      	uxtb	r3, r3
    3180:	2b00      	cmp	r3, #0
    3182:	d015      	beq.n	31b0 <_sercom_set_handler+0x48>
    3184:	2300      	movs	r3, #0
    3186:	60fb      	str	r3, [r7, #12]
    3188:	e00c      	b.n	31a4 <_sercom_set_handler+0x3c>
    318a:	4b0f      	ldr	r3, [pc, #60]	; (31c8 <_sercom_set_handler+0x60>)
    318c:	68fa      	ldr	r2, [r7, #12]
    318e:	0092      	lsls	r2, r2, #2
    3190:	490e      	ldr	r1, [pc, #56]	; (31cc <_sercom_set_handler+0x64>)
    3192:	50d1      	str	r1, [r2, r3]
    3194:	4b0e      	ldr	r3, [pc, #56]	; (31d0 <_sercom_set_handler+0x68>)
    3196:	68fa      	ldr	r2, [r7, #12]
    3198:	0092      	lsls	r2, r2, #2
    319a:	2100      	movs	r1, #0
    319c:	50d1      	str	r1, [r2, r3]
    319e:	68fb      	ldr	r3, [r7, #12]
    31a0:	3301      	adds	r3, #1
    31a2:	60fb      	str	r3, [r7, #12]
    31a4:	68fb      	ldr	r3, [r7, #12]
    31a6:	2b05      	cmp	r3, #5
    31a8:	d9ef      	bls.n	318a <_sercom_set_handler+0x22>
    31aa:	4b06      	ldr	r3, [pc, #24]	; (31c4 <_sercom_set_handler+0x5c>)
    31ac:	2201      	movs	r2, #1
    31ae:	701a      	strb	r2, [r3, #0]
    31b0:	1dfb      	adds	r3, r7, #7
    31b2:	781a      	ldrb	r2, [r3, #0]
    31b4:	4b04      	ldr	r3, [pc, #16]	; (31c8 <_sercom_set_handler+0x60>)
    31b6:	0092      	lsls	r2, r2, #2
    31b8:	6839      	ldr	r1, [r7, #0]
    31ba:	50d1      	str	r1, [r2, r3]
    31bc:	46c0      	nop			; (mov r8, r8)
    31be:	46bd      	mov	sp, r7
    31c0:	b004      	add	sp, #16
    31c2:	bd80      	pop	{r7, pc}
    31c4:	20000a16 	.word	0x20000a16
    31c8:	20000a18 	.word	0x20000a18
    31cc:	00003155 	.word	0x00003155
    31d0:	20000d1c 	.word	0x20000d1c

000031d4 <_sercom_get_interrupt_vector>:
    31d4:	b590      	push	{r4, r7, lr}
    31d6:	b085      	sub	sp, #20
    31d8:	af00      	add	r7, sp, #0
    31da:	6078      	str	r0, [r7, #4]
    31dc:	2308      	movs	r3, #8
    31de:	18fb      	adds	r3, r7, r3
    31e0:	4a0b      	ldr	r2, [pc, #44]	; (3210 <_sercom_get_interrupt_vector+0x3c>)
    31e2:	6811      	ldr	r1, [r2, #0]
    31e4:	6019      	str	r1, [r3, #0]
    31e6:	8892      	ldrh	r2, [r2, #4]
    31e8:	809a      	strh	r2, [r3, #4]
    31ea:	230f      	movs	r3, #15
    31ec:	18fc      	adds	r4, r7, r3
    31ee:	687b      	ldr	r3, [r7, #4]
    31f0:	0018      	movs	r0, r3
    31f2:	4b08      	ldr	r3, [pc, #32]	; (3214 <_sercom_get_interrupt_vector+0x40>)
    31f4:	4798      	blx	r3
    31f6:	0003      	movs	r3, r0
    31f8:	7023      	strb	r3, [r4, #0]
    31fa:	230f      	movs	r3, #15
    31fc:	18fb      	adds	r3, r7, r3
    31fe:	781b      	ldrb	r3, [r3, #0]
    3200:	2208      	movs	r2, #8
    3202:	18ba      	adds	r2, r7, r2
    3204:	5cd3      	ldrb	r3, [r2, r3]
    3206:	b25b      	sxtb	r3, r3
    3208:	0018      	movs	r0, r3
    320a:	46bd      	mov	sp, r7
    320c:	b005      	add	sp, #20
    320e:	bd90      	pop	{r4, r7, pc}
    3210:	0001cb1c 	.word	0x0001cb1c
    3214:	00003105 	.word	0x00003105

00003218 <SERCOM0_Handler>:
    3218:	b580      	push	{r7, lr}
    321a:	af00      	add	r7, sp, #0
    321c:	4b03      	ldr	r3, [pc, #12]	; (322c <SERCOM0_Handler+0x14>)
    321e:	681b      	ldr	r3, [r3, #0]
    3220:	2000      	movs	r0, #0
    3222:	4798      	blx	r3
    3224:	46c0      	nop			; (mov r8, r8)
    3226:	46bd      	mov	sp, r7
    3228:	bd80      	pop	{r7, pc}
    322a:	46c0      	nop			; (mov r8, r8)
    322c:	20000a18 	.word	0x20000a18

00003230 <SERCOM1_Handler>:
    3230:	b580      	push	{r7, lr}
    3232:	af00      	add	r7, sp, #0
    3234:	4b03      	ldr	r3, [pc, #12]	; (3244 <SERCOM1_Handler+0x14>)
    3236:	685b      	ldr	r3, [r3, #4]
    3238:	2001      	movs	r0, #1
    323a:	4798      	blx	r3
    323c:	46c0      	nop			; (mov r8, r8)
    323e:	46bd      	mov	sp, r7
    3240:	bd80      	pop	{r7, pc}
    3242:	46c0      	nop			; (mov r8, r8)
    3244:	20000a18 	.word	0x20000a18

00003248 <SERCOM2_Handler>:
    3248:	b580      	push	{r7, lr}
    324a:	af00      	add	r7, sp, #0
    324c:	4b03      	ldr	r3, [pc, #12]	; (325c <SERCOM2_Handler+0x14>)
    324e:	689b      	ldr	r3, [r3, #8]
    3250:	2002      	movs	r0, #2
    3252:	4798      	blx	r3
    3254:	46c0      	nop			; (mov r8, r8)
    3256:	46bd      	mov	sp, r7
    3258:	bd80      	pop	{r7, pc}
    325a:	46c0      	nop			; (mov r8, r8)
    325c:	20000a18 	.word	0x20000a18

00003260 <SERCOM3_Handler>:
    3260:	b580      	push	{r7, lr}
    3262:	af00      	add	r7, sp, #0
    3264:	4b03      	ldr	r3, [pc, #12]	; (3274 <SERCOM3_Handler+0x14>)
    3266:	68db      	ldr	r3, [r3, #12]
    3268:	2003      	movs	r0, #3
    326a:	4798      	blx	r3
    326c:	46c0      	nop			; (mov r8, r8)
    326e:	46bd      	mov	sp, r7
    3270:	bd80      	pop	{r7, pc}
    3272:	46c0      	nop			; (mov r8, r8)
    3274:	20000a18 	.word	0x20000a18

00003278 <SERCOM4_Handler>:
    3278:	b580      	push	{r7, lr}
    327a:	af00      	add	r7, sp, #0
    327c:	4b03      	ldr	r3, [pc, #12]	; (328c <SERCOM4_Handler+0x14>)
    327e:	691b      	ldr	r3, [r3, #16]
    3280:	2004      	movs	r0, #4
    3282:	4798      	blx	r3
    3284:	46c0      	nop			; (mov r8, r8)
    3286:	46bd      	mov	sp, r7
    3288:	bd80      	pop	{r7, pc}
    328a:	46c0      	nop			; (mov r8, r8)
    328c:	20000a18 	.word	0x20000a18

00003290 <SERCOM5_Handler>:
    3290:	b580      	push	{r7, lr}
    3292:	af00      	add	r7, sp, #0
    3294:	4b03      	ldr	r3, [pc, #12]	; (32a4 <SERCOM5_Handler+0x14>)
    3296:	695b      	ldr	r3, [r3, #20]
    3298:	2005      	movs	r0, #5
    329a:	4798      	blx	r3
    329c:	46c0      	nop			; (mov r8, r8)
    329e:	46bd      	mov	sp, r7
    32a0:	bd80      	pop	{r7, pc}
    32a2:	46c0      	nop			; (mov r8, r8)
    32a4:	20000a18 	.word	0x20000a18

000032a8 <system_pinmux_get_config_defaults>:
    32a8:	b580      	push	{r7, lr}
    32aa:	b082      	sub	sp, #8
    32ac:	af00      	add	r7, sp, #0
    32ae:	6078      	str	r0, [r7, #4]
    32b0:	687b      	ldr	r3, [r7, #4]
    32b2:	2280      	movs	r2, #128	; 0x80
    32b4:	701a      	strb	r2, [r3, #0]
    32b6:	687b      	ldr	r3, [r7, #4]
    32b8:	2200      	movs	r2, #0
    32ba:	705a      	strb	r2, [r3, #1]
    32bc:	687b      	ldr	r3, [r7, #4]
    32be:	2201      	movs	r2, #1
    32c0:	709a      	strb	r2, [r3, #2]
    32c2:	687b      	ldr	r3, [r7, #4]
    32c4:	2200      	movs	r2, #0
    32c6:	70da      	strb	r2, [r3, #3]
    32c8:	46c0      	nop			; (mov r8, r8)
    32ca:	46bd      	mov	sp, r7
    32cc:	b002      	add	sp, #8
    32ce:	bd80      	pop	{r7, pc}

000032d0 <system_pinmux_get_group_from_gpio_pin>:
    32d0:	b580      	push	{r7, lr}
    32d2:	b084      	sub	sp, #16
    32d4:	af00      	add	r7, sp, #0
    32d6:	0002      	movs	r2, r0
    32d8:	1dfb      	adds	r3, r7, #7
    32da:	701a      	strb	r2, [r3, #0]
    32dc:	230f      	movs	r3, #15
    32de:	18fb      	adds	r3, r7, r3
    32e0:	1dfa      	adds	r2, r7, #7
    32e2:	7812      	ldrb	r2, [r2, #0]
    32e4:	09d2      	lsrs	r2, r2, #7
    32e6:	701a      	strb	r2, [r3, #0]
    32e8:	230e      	movs	r3, #14
    32ea:	18fb      	adds	r3, r7, r3
    32ec:	1dfa      	adds	r2, r7, #7
    32ee:	7812      	ldrb	r2, [r2, #0]
    32f0:	0952      	lsrs	r2, r2, #5
    32f2:	701a      	strb	r2, [r3, #0]
    32f4:	4b0d      	ldr	r3, [pc, #52]	; (332c <system_pinmux_get_group_from_gpio_pin+0x5c>)
    32f6:	60bb      	str	r3, [r7, #8]
    32f8:	230f      	movs	r3, #15
    32fa:	18fb      	adds	r3, r7, r3
    32fc:	781b      	ldrb	r3, [r3, #0]
    32fe:	2b00      	cmp	r3, #0
    3300:	d10f      	bne.n	3322 <system_pinmux_get_group_from_gpio_pin+0x52>
    3302:	230f      	movs	r3, #15
    3304:	18fb      	adds	r3, r7, r3
    3306:	781b      	ldrb	r3, [r3, #0]
    3308:	009b      	lsls	r3, r3, #2
    330a:	2210      	movs	r2, #16
    330c:	4694      	mov	ip, r2
    330e:	44bc      	add	ip, r7
    3310:	4463      	add	r3, ip
    3312:	3b08      	subs	r3, #8
    3314:	681a      	ldr	r2, [r3, #0]
    3316:	230e      	movs	r3, #14
    3318:	18fb      	adds	r3, r7, r3
    331a:	781b      	ldrb	r3, [r3, #0]
    331c:	01db      	lsls	r3, r3, #7
    331e:	18d3      	adds	r3, r2, r3
    3320:	e000      	b.n	3324 <system_pinmux_get_group_from_gpio_pin+0x54>
    3322:	2300      	movs	r3, #0
    3324:	0018      	movs	r0, r3
    3326:	46bd      	mov	sp, r7
    3328:	b004      	add	sp, #16
    332a:	bd80      	pop	{r7, pc}
    332c:	40002800 	.word	0x40002800

00003330 <system_pinmux_pin_get_mux_position>:
    3330:	b580      	push	{r7, lr}
    3332:	b086      	sub	sp, #24
    3334:	af00      	add	r7, sp, #0
    3336:	0002      	movs	r2, r0
    3338:	1dfb      	adds	r3, r7, #7
    333a:	701a      	strb	r2, [r3, #0]
    333c:	1dfb      	adds	r3, r7, #7
    333e:	781b      	ldrb	r3, [r3, #0]
    3340:	0018      	movs	r0, r3
    3342:	4b19      	ldr	r3, [pc, #100]	; (33a8 <system_pinmux_pin_get_mux_position+0x78>)
    3344:	4798      	blx	r3
    3346:	0003      	movs	r3, r0
    3348:	617b      	str	r3, [r7, #20]
    334a:	1dfb      	adds	r3, r7, #7
    334c:	781b      	ldrb	r3, [r3, #0]
    334e:	221f      	movs	r2, #31
    3350:	4013      	ands	r3, r2
    3352:	613b      	str	r3, [r7, #16]
    3354:	697a      	ldr	r2, [r7, #20]
    3356:	2140      	movs	r1, #64	; 0x40
    3358:	693b      	ldr	r3, [r7, #16]
    335a:	18d3      	adds	r3, r2, r3
    335c:	185b      	adds	r3, r3, r1
    335e:	781b      	ldrb	r3, [r3, #0]
    3360:	b2db      	uxtb	r3, r3
    3362:	001a      	movs	r2, r3
    3364:	2301      	movs	r3, #1
    3366:	4013      	ands	r3, r2
    3368:	d101      	bne.n	336e <system_pinmux_pin_get_mux_position+0x3e>
    336a:	2380      	movs	r3, #128	; 0x80
    336c:	e018      	b.n	33a0 <system_pinmux_pin_get_mux_position+0x70>
    336e:	693b      	ldr	r3, [r7, #16]
    3370:	085b      	lsrs	r3, r3, #1
    3372:	697a      	ldr	r2, [r7, #20]
    3374:	2130      	movs	r1, #48	; 0x30
    3376:	18d3      	adds	r3, r2, r3
    3378:	185b      	adds	r3, r3, r1
    337a:	781b      	ldrb	r3, [r3, #0]
    337c:	b2db      	uxtb	r3, r3
    337e:	60fb      	str	r3, [r7, #12]
    3380:	693b      	ldr	r3, [r7, #16]
    3382:	2201      	movs	r2, #1
    3384:	4013      	ands	r3, r2
    3386:	d006      	beq.n	3396 <system_pinmux_pin_get_mux_position+0x66>
    3388:	68fb      	ldr	r3, [r7, #12]
    338a:	091b      	lsrs	r3, r3, #4
    338c:	b2db      	uxtb	r3, r3
    338e:	220f      	movs	r2, #15
    3390:	4013      	ands	r3, r2
    3392:	b2db      	uxtb	r3, r3
    3394:	e004      	b.n	33a0 <system_pinmux_pin_get_mux_position+0x70>
    3396:	68fb      	ldr	r3, [r7, #12]
    3398:	b2db      	uxtb	r3, r3
    339a:	220f      	movs	r2, #15
    339c:	4013      	ands	r3, r2
    339e:	b2db      	uxtb	r3, r3
    33a0:	0018      	movs	r0, r3
    33a2:	46bd      	mov	sp, r7
    33a4:	b006      	add	sp, #24
    33a6:	bd80      	pop	{r7, pc}
    33a8:	000032d1 	.word	0x000032d1

000033ac <port_get_group_from_gpio_pin>:
    33ac:	b580      	push	{r7, lr}
    33ae:	b082      	sub	sp, #8
    33b0:	af00      	add	r7, sp, #0
    33b2:	0002      	movs	r2, r0
    33b4:	1dfb      	adds	r3, r7, #7
    33b6:	701a      	strb	r2, [r3, #0]
    33b8:	1dfb      	adds	r3, r7, #7
    33ba:	781b      	ldrb	r3, [r3, #0]
    33bc:	0018      	movs	r0, r3
    33be:	4b03      	ldr	r3, [pc, #12]	; (33cc <port_get_group_from_gpio_pin+0x20>)
    33c0:	4798      	blx	r3
    33c2:	0003      	movs	r3, r0
    33c4:	0018      	movs	r0, r3
    33c6:	46bd      	mov	sp, r7
    33c8:	b002      	add	sp, #8
    33ca:	bd80      	pop	{r7, pc}
    33cc:	000032d1 	.word	0x000032d1

000033d0 <port_pin_set_output_level>:
    33d0:	b580      	push	{r7, lr}
    33d2:	b084      	sub	sp, #16
    33d4:	af00      	add	r7, sp, #0
    33d6:	0002      	movs	r2, r0
    33d8:	1dfb      	adds	r3, r7, #7
    33da:	701a      	strb	r2, [r3, #0]
    33dc:	1dbb      	adds	r3, r7, #6
    33de:	1c0a      	adds	r2, r1, #0
    33e0:	701a      	strb	r2, [r3, #0]
    33e2:	1dfb      	adds	r3, r7, #7
    33e4:	781b      	ldrb	r3, [r3, #0]
    33e6:	0018      	movs	r0, r3
    33e8:	4b0d      	ldr	r3, [pc, #52]	; (3420 <port_pin_set_output_level+0x50>)
    33ea:	4798      	blx	r3
    33ec:	0003      	movs	r3, r0
    33ee:	60fb      	str	r3, [r7, #12]
    33f0:	1dfb      	adds	r3, r7, #7
    33f2:	781b      	ldrb	r3, [r3, #0]
    33f4:	221f      	movs	r2, #31
    33f6:	4013      	ands	r3, r2
    33f8:	2201      	movs	r2, #1
    33fa:	409a      	lsls	r2, r3
    33fc:	0013      	movs	r3, r2
    33fe:	60bb      	str	r3, [r7, #8]
    3400:	1dbb      	adds	r3, r7, #6
    3402:	781b      	ldrb	r3, [r3, #0]
    3404:	2b00      	cmp	r3, #0
    3406:	d003      	beq.n	3410 <port_pin_set_output_level+0x40>
    3408:	68fb      	ldr	r3, [r7, #12]
    340a:	68ba      	ldr	r2, [r7, #8]
    340c:	619a      	str	r2, [r3, #24]
    340e:	e002      	b.n	3416 <port_pin_set_output_level+0x46>
    3410:	68fb      	ldr	r3, [r7, #12]
    3412:	68ba      	ldr	r2, [r7, #8]
    3414:	615a      	str	r2, [r3, #20]
    3416:	46c0      	nop			; (mov r8, r8)
    3418:	46bd      	mov	sp, r7
    341a:	b004      	add	sp, #16
    341c:	bd80      	pop	{r7, pc}
    341e:	46c0      	nop			; (mov r8, r8)
    3420:	000033ad 	.word	0x000033ad

00003424 <system_gclk_chan_get_config_defaults>:
    3424:	b580      	push	{r7, lr}
    3426:	b082      	sub	sp, #8
    3428:	af00      	add	r7, sp, #0
    342a:	6078      	str	r0, [r7, #4]
    342c:	687b      	ldr	r3, [r7, #4]
    342e:	2200      	movs	r2, #0
    3430:	701a      	strb	r2, [r3, #0]
    3432:	46c0      	nop			; (mov r8, r8)
    3434:	46bd      	mov	sp, r7
    3436:	b002      	add	sp, #8
    3438:	bd80      	pop	{r7, pc}
	...

0000343c <system_apb_clock_set_mask>:
    343c:	b580      	push	{r7, lr}
    343e:	b082      	sub	sp, #8
    3440:	af00      	add	r7, sp, #0
    3442:	0002      	movs	r2, r0
    3444:	6039      	str	r1, [r7, #0]
    3446:	1dfb      	adds	r3, r7, #7
    3448:	701a      	strb	r2, [r3, #0]
    344a:	1dfb      	adds	r3, r7, #7
    344c:	781b      	ldrb	r3, [r3, #0]
    344e:	2b04      	cmp	r3, #4
    3450:	d827      	bhi.n	34a2 <system_apb_clock_set_mask+0x66>
    3452:	009a      	lsls	r2, r3, #2
    3454:	4b16      	ldr	r3, [pc, #88]	; (34b0 <system_apb_clock_set_mask+0x74>)
    3456:	18d3      	adds	r3, r2, r3
    3458:	681b      	ldr	r3, [r3, #0]
    345a:	469f      	mov	pc, r3
    345c:	4b15      	ldr	r3, [pc, #84]	; (34b4 <system_apb_clock_set_mask+0x78>)
    345e:	4a15      	ldr	r2, [pc, #84]	; (34b4 <system_apb_clock_set_mask+0x78>)
    3460:	6951      	ldr	r1, [r2, #20]
    3462:	683a      	ldr	r2, [r7, #0]
    3464:	430a      	orrs	r2, r1
    3466:	615a      	str	r2, [r3, #20]
    3468:	e01d      	b.n	34a6 <system_apb_clock_set_mask+0x6a>
    346a:	4b12      	ldr	r3, [pc, #72]	; (34b4 <system_apb_clock_set_mask+0x78>)
    346c:	4a11      	ldr	r2, [pc, #68]	; (34b4 <system_apb_clock_set_mask+0x78>)
    346e:	6991      	ldr	r1, [r2, #24]
    3470:	683a      	ldr	r2, [r7, #0]
    3472:	430a      	orrs	r2, r1
    3474:	619a      	str	r2, [r3, #24]
    3476:	e016      	b.n	34a6 <system_apb_clock_set_mask+0x6a>
    3478:	4b0e      	ldr	r3, [pc, #56]	; (34b4 <system_apb_clock_set_mask+0x78>)
    347a:	4a0e      	ldr	r2, [pc, #56]	; (34b4 <system_apb_clock_set_mask+0x78>)
    347c:	69d1      	ldr	r1, [r2, #28]
    347e:	683a      	ldr	r2, [r7, #0]
    3480:	430a      	orrs	r2, r1
    3482:	61da      	str	r2, [r3, #28]
    3484:	e00f      	b.n	34a6 <system_apb_clock_set_mask+0x6a>
    3486:	4b0b      	ldr	r3, [pc, #44]	; (34b4 <system_apb_clock_set_mask+0x78>)
    3488:	4a0a      	ldr	r2, [pc, #40]	; (34b4 <system_apb_clock_set_mask+0x78>)
    348a:	6a11      	ldr	r1, [r2, #32]
    348c:	683a      	ldr	r2, [r7, #0]
    348e:	430a      	orrs	r2, r1
    3490:	621a      	str	r2, [r3, #32]
    3492:	e008      	b.n	34a6 <system_apb_clock_set_mask+0x6a>
    3494:	4b07      	ldr	r3, [pc, #28]	; (34b4 <system_apb_clock_set_mask+0x78>)
    3496:	4a07      	ldr	r2, [pc, #28]	; (34b4 <system_apb_clock_set_mask+0x78>)
    3498:	6a51      	ldr	r1, [r2, #36]	; 0x24
    349a:	683a      	ldr	r2, [r7, #0]
    349c:	430a      	orrs	r2, r1
    349e:	625a      	str	r2, [r3, #36]	; 0x24
    34a0:	e001      	b.n	34a6 <system_apb_clock_set_mask+0x6a>
    34a2:	2317      	movs	r3, #23
    34a4:	e000      	b.n	34a8 <system_apb_clock_set_mask+0x6c>
    34a6:	2300      	movs	r3, #0
    34a8:	0018      	movs	r0, r3
    34aa:	46bd      	mov	sp, r7
    34ac:	b002      	add	sp, #8
    34ae:	bd80      	pop	{r7, pc}
    34b0:	0001cb24 	.word	0x0001cb24
    34b4:	40000400 	.word	0x40000400

000034b8 <system_is_debugger_present>:
    34b8:	b580      	push	{r7, lr}
    34ba:	af00      	add	r7, sp, #0
    34bc:	4b05      	ldr	r3, [pc, #20]	; (34d4 <system_is_debugger_present+0x1c>)
    34be:	789b      	ldrb	r3, [r3, #2]
    34c0:	b2db      	uxtb	r3, r3
    34c2:	001a      	movs	r2, r3
    34c4:	2302      	movs	r3, #2
    34c6:	4013      	ands	r3, r2
    34c8:	1e5a      	subs	r2, r3, #1
    34ca:	4193      	sbcs	r3, r2
    34cc:	b2db      	uxtb	r3, r3
    34ce:	0018      	movs	r0, r3
    34d0:	46bd      	mov	sp, r7
    34d2:	bd80      	pop	{r7, pc}
    34d4:	41002000 	.word	0x41002000

000034d8 <spi_is_ready_to_write>:
    34d8:	b580      	push	{r7, lr}
    34da:	b084      	sub	sp, #16
    34dc:	af00      	add	r7, sp, #0
    34de:	6078      	str	r0, [r7, #4]
    34e0:	687b      	ldr	r3, [r7, #4]
    34e2:	681b      	ldr	r3, [r3, #0]
    34e4:	60fb      	str	r3, [r7, #12]
    34e6:	68fb      	ldr	r3, [r7, #12]
    34e8:	7e1b      	ldrb	r3, [r3, #24]
    34ea:	b2db      	uxtb	r3, r3
    34ec:	001a      	movs	r2, r3
    34ee:	2301      	movs	r3, #1
    34f0:	4013      	ands	r3, r2
    34f2:	1e5a      	subs	r2, r3, #1
    34f4:	4193      	sbcs	r3, r2
    34f6:	b2db      	uxtb	r3, r3
    34f8:	0018      	movs	r0, r3
    34fa:	46bd      	mov	sp, r7
    34fc:	b004      	add	sp, #16
    34fe:	bd80      	pop	{r7, pc}

00003500 <spi_is_ready_to_read>:
    3500:	b580      	push	{r7, lr}
    3502:	b084      	sub	sp, #16
    3504:	af00      	add	r7, sp, #0
    3506:	6078      	str	r0, [r7, #4]
    3508:	687b      	ldr	r3, [r7, #4]
    350a:	681b      	ldr	r3, [r3, #0]
    350c:	60fb      	str	r3, [r7, #12]
    350e:	68fb      	ldr	r3, [r7, #12]
    3510:	7e1b      	ldrb	r3, [r3, #24]
    3512:	b2db      	uxtb	r3, r3
    3514:	001a      	movs	r2, r3
    3516:	2304      	movs	r3, #4
    3518:	4013      	ands	r3, r2
    351a:	1e5a      	subs	r2, r3, #1
    351c:	4193      	sbcs	r3, r2
    351e:	b2db      	uxtb	r3, r3
    3520:	0018      	movs	r0, r3
    3522:	46bd      	mov	sp, r7
    3524:	b004      	add	sp, #16
    3526:	bd80      	pop	{r7, pc}

00003528 <spi_write>:
    3528:	b580      	push	{r7, lr}
    352a:	b084      	sub	sp, #16
    352c:	af00      	add	r7, sp, #0
    352e:	6078      	str	r0, [r7, #4]
    3530:	000a      	movs	r2, r1
    3532:	1cbb      	adds	r3, r7, #2
    3534:	801a      	strh	r2, [r3, #0]
    3536:	687b      	ldr	r3, [r7, #4]
    3538:	681b      	ldr	r3, [r3, #0]
    353a:	60fb      	str	r3, [r7, #12]
    353c:	687b      	ldr	r3, [r7, #4]
    353e:	0018      	movs	r0, r3
    3540:	4b0a      	ldr	r3, [pc, #40]	; (356c <spi_write+0x44>)
    3542:	4798      	blx	r3
    3544:	0003      	movs	r3, r0
    3546:	001a      	movs	r2, r3
    3548:	2301      	movs	r3, #1
    354a:	4053      	eors	r3, r2
    354c:	b2db      	uxtb	r3, r3
    354e:	2b00      	cmp	r3, #0
    3550:	d001      	beq.n	3556 <spi_write+0x2e>
    3552:	2305      	movs	r3, #5
    3554:	e006      	b.n	3564 <spi_write+0x3c>
    3556:	1cbb      	adds	r3, r7, #2
    3558:	881b      	ldrh	r3, [r3, #0]
    355a:	05db      	lsls	r3, r3, #23
    355c:	0dda      	lsrs	r2, r3, #23
    355e:	68fb      	ldr	r3, [r7, #12]
    3560:	629a      	str	r2, [r3, #40]	; 0x28
    3562:	2300      	movs	r3, #0
    3564:	0018      	movs	r0, r3
    3566:	46bd      	mov	sp, r7
    3568:	b004      	add	sp, #16
    356a:	bd80      	pop	{r7, pc}
    356c:	000034d9 	.word	0x000034d9

00003570 <spi_read>:
    3570:	b580      	push	{r7, lr}
    3572:	b084      	sub	sp, #16
    3574:	af00      	add	r7, sp, #0
    3576:	6078      	str	r0, [r7, #4]
    3578:	6039      	str	r1, [r7, #0]
    357a:	687b      	ldr	r3, [r7, #4]
    357c:	681b      	ldr	r3, [r3, #0]
    357e:	60bb      	str	r3, [r7, #8]
    3580:	687b      	ldr	r3, [r7, #4]
    3582:	0018      	movs	r0, r3
    3584:	4b1b      	ldr	r3, [pc, #108]	; (35f4 <spi_read+0x84>)
    3586:	4798      	blx	r3
    3588:	0003      	movs	r3, r0
    358a:	001a      	movs	r2, r3
    358c:	2301      	movs	r3, #1
    358e:	4053      	eors	r3, r2
    3590:	b2db      	uxtb	r3, r3
    3592:	2b00      	cmp	r3, #0
    3594:	d001      	beq.n	359a <spi_read+0x2a>
    3596:	2310      	movs	r3, #16
    3598:	e027      	b.n	35ea <spi_read+0x7a>
    359a:	230f      	movs	r3, #15
    359c:	18fb      	adds	r3, r7, r3
    359e:	2200      	movs	r2, #0
    35a0:	701a      	strb	r2, [r3, #0]
    35a2:	68bb      	ldr	r3, [r7, #8]
    35a4:	8b5b      	ldrh	r3, [r3, #26]
    35a6:	b29b      	uxth	r3, r3
    35a8:	001a      	movs	r2, r3
    35aa:	2304      	movs	r3, #4
    35ac:	4013      	ands	r3, r2
    35ae:	d006      	beq.n	35be <spi_read+0x4e>
    35b0:	230f      	movs	r3, #15
    35b2:	18fb      	adds	r3, r7, r3
    35b4:	221e      	movs	r2, #30
    35b6:	701a      	strb	r2, [r3, #0]
    35b8:	68bb      	ldr	r3, [r7, #8]
    35ba:	2204      	movs	r2, #4
    35bc:	835a      	strh	r2, [r3, #26]
    35be:	687b      	ldr	r3, [r7, #4]
    35c0:	799b      	ldrb	r3, [r3, #6]
    35c2:	2b01      	cmp	r3, #1
    35c4:	d108      	bne.n	35d8 <spi_read+0x68>
    35c6:	68bb      	ldr	r3, [r7, #8]
    35c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    35ca:	b29b      	uxth	r3, r3
    35cc:	05db      	lsls	r3, r3, #23
    35ce:	0ddb      	lsrs	r3, r3, #23
    35d0:	b29a      	uxth	r2, r3
    35d2:	683b      	ldr	r3, [r7, #0]
    35d4:	801a      	strh	r2, [r3, #0]
    35d6:	e005      	b.n	35e4 <spi_read+0x74>
    35d8:	68bb      	ldr	r3, [r7, #8]
    35da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    35dc:	b2db      	uxtb	r3, r3
    35de:	b29a      	uxth	r2, r3
    35e0:	683b      	ldr	r3, [r7, #0]
    35e2:	801a      	strh	r2, [r3, #0]
    35e4:	230f      	movs	r3, #15
    35e6:	18fb      	adds	r3, r7, r3
    35e8:	781b      	ldrb	r3, [r3, #0]
    35ea:	0018      	movs	r0, r3
    35ec:	46bd      	mov	sp, r7
    35ee:	b004      	add	sp, #16
    35f0:	bd80      	pop	{r7, pc}
    35f2:	46c0      	nop			; (mov r8, r8)
    35f4:	00003501 	.word	0x00003501

000035f8 <_spi_set_config>:
    35f8:	b590      	push	{r4, r7, lr}
    35fa:	b093      	sub	sp, #76	; 0x4c
    35fc:	af00      	add	r7, sp, #0
    35fe:	6078      	str	r0, [r7, #4]
    3600:	6039      	str	r1, [r7, #0]
    3602:	687b      	ldr	r3, [r7, #4]
    3604:	681b      	ldr	r3, [r3, #0]
    3606:	637b      	str	r3, [r7, #52]	; 0x34
    3608:	687b      	ldr	r3, [r7, #4]
    360a:	681b      	ldr	r3, [r3, #0]
    360c:	633b      	str	r3, [r7, #48]	; 0x30
    360e:	231c      	movs	r3, #28
    3610:	18fb      	adds	r3, r7, r3
    3612:	0018      	movs	r0, r3
    3614:	4b75      	ldr	r3, [pc, #468]	; (37ec <_spi_set_config+0x1f4>)
    3616:	4798      	blx	r3
    3618:	231c      	movs	r3, #28
    361a:	18fb      	adds	r3, r7, r3
    361c:	2200      	movs	r2, #0
    361e:	705a      	strb	r2, [r3, #1]
    3620:	683b      	ldr	r3, [r7, #0]
    3622:	781b      	ldrb	r3, [r3, #0]
    3624:	2b00      	cmp	r3, #0
    3626:	d103      	bne.n	3630 <_spi_set_config+0x38>
    3628:	231c      	movs	r3, #28
    362a:	18fb      	adds	r3, r7, r3
    362c:	2200      	movs	r2, #0
    362e:	709a      	strb	r2, [r3, #2]
    3630:	683b      	ldr	r3, [r7, #0]
    3632:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    3634:	230c      	movs	r3, #12
    3636:	18fb      	adds	r3, r7, r3
    3638:	601a      	str	r2, [r3, #0]
    363a:	683b      	ldr	r3, [r7, #0]
    363c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    363e:	230c      	movs	r3, #12
    3640:	18fb      	adds	r3, r7, r3
    3642:	605a      	str	r2, [r3, #4]
    3644:	683b      	ldr	r3, [r7, #0]
    3646:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    3648:	230c      	movs	r3, #12
    364a:	18fb      	adds	r3, r7, r3
    364c:	609a      	str	r2, [r3, #8]
    364e:	683b      	ldr	r3, [r7, #0]
    3650:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    3652:	230c      	movs	r3, #12
    3654:	18fb      	adds	r3, r7, r3
    3656:	60da      	str	r2, [r3, #12]
    3658:	2347      	movs	r3, #71	; 0x47
    365a:	18fb      	adds	r3, r7, r3
    365c:	2200      	movs	r2, #0
    365e:	701a      	strb	r2, [r3, #0]
    3660:	e02c      	b.n	36bc <_spi_set_config+0xc4>
    3662:	2347      	movs	r3, #71	; 0x47
    3664:	18fb      	adds	r3, r7, r3
    3666:	781a      	ldrb	r2, [r3, #0]
    3668:	230c      	movs	r3, #12
    366a:	18fb      	adds	r3, r7, r3
    366c:	0092      	lsls	r2, r2, #2
    366e:	58d3      	ldr	r3, [r2, r3]
    3670:	643b      	str	r3, [r7, #64]	; 0x40
    3672:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    3674:	2b00      	cmp	r3, #0
    3676:	d109      	bne.n	368c <_spi_set_config+0x94>
    3678:	2347      	movs	r3, #71	; 0x47
    367a:	18fb      	adds	r3, r7, r3
    367c:	781a      	ldrb	r2, [r3, #0]
    367e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    3680:	0011      	movs	r1, r2
    3682:	0018      	movs	r0, r3
    3684:	4b5a      	ldr	r3, [pc, #360]	; (37f0 <_spi_set_config+0x1f8>)
    3686:	4798      	blx	r3
    3688:	0003      	movs	r3, r0
    368a:	643b      	str	r3, [r7, #64]	; 0x40
    368c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    368e:	3301      	adds	r3, #1
    3690:	d00d      	beq.n	36ae <_spi_set_config+0xb6>
    3692:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    3694:	b2da      	uxtb	r2, r3
    3696:	231c      	movs	r3, #28
    3698:	18fb      	adds	r3, r7, r3
    369a:	701a      	strb	r2, [r3, #0]
    369c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    369e:	0c1b      	lsrs	r3, r3, #16
    36a0:	b2db      	uxtb	r3, r3
    36a2:	221c      	movs	r2, #28
    36a4:	18ba      	adds	r2, r7, r2
    36a6:	0011      	movs	r1, r2
    36a8:	0018      	movs	r0, r3
    36aa:	4b52      	ldr	r3, [pc, #328]	; (37f4 <_spi_set_config+0x1fc>)
    36ac:	4798      	blx	r3
    36ae:	2347      	movs	r3, #71	; 0x47
    36b0:	18fb      	adds	r3, r7, r3
    36b2:	781a      	ldrb	r2, [r3, #0]
    36b4:	2347      	movs	r3, #71	; 0x47
    36b6:	18fb      	adds	r3, r7, r3
    36b8:	3201      	adds	r2, #1
    36ba:	701a      	strb	r2, [r3, #0]
    36bc:	2347      	movs	r3, #71	; 0x47
    36be:	18fb      	adds	r3, r7, r3
    36c0:	781b      	ldrb	r3, [r3, #0]
    36c2:	2b03      	cmp	r3, #3
    36c4:	d9cd      	bls.n	3662 <_spi_set_config+0x6a>
    36c6:	683b      	ldr	r3, [r7, #0]
    36c8:	781a      	ldrb	r2, [r3, #0]
    36ca:	687b      	ldr	r3, [r7, #4]
    36cc:	715a      	strb	r2, [r3, #5]
    36ce:	683b      	ldr	r3, [r7, #0]
    36d0:	7c1a      	ldrb	r2, [r3, #16]
    36d2:	687b      	ldr	r3, [r7, #4]
    36d4:	719a      	strb	r2, [r3, #6]
    36d6:	683b      	ldr	r3, [r7, #0]
    36d8:	7c9a      	ldrb	r2, [r3, #18]
    36da:	687b      	ldr	r3, [r7, #4]
    36dc:	71da      	strb	r2, [r3, #7]
    36de:	683b      	ldr	r3, [r7, #0]
    36e0:	7d1a      	ldrb	r2, [r3, #20]
    36e2:	687b      	ldr	r3, [r7, #4]
    36e4:	721a      	strb	r2, [r3, #8]
    36e6:	230a      	movs	r3, #10
    36e8:	18fb      	adds	r3, r7, r3
    36ea:	2200      	movs	r2, #0
    36ec:	801a      	strh	r2, [r3, #0]
    36ee:	2300      	movs	r3, #0
    36f0:	63fb      	str	r3, [r7, #60]	; 0x3c
    36f2:	2300      	movs	r3, #0
    36f4:	63bb      	str	r3, [r7, #56]	; 0x38
    36f6:	683b      	ldr	r3, [r7, #0]
    36f8:	781b      	ldrb	r3, [r3, #0]
    36fa:	2b01      	cmp	r3, #1
    36fc:	d129      	bne.n	3752 <_spi_set_config+0x15a>
    36fe:	687b      	ldr	r3, [r7, #4]
    3700:	681b      	ldr	r3, [r3, #0]
    3702:	0018      	movs	r0, r3
    3704:	4b3c      	ldr	r3, [pc, #240]	; (37f8 <_spi_set_config+0x200>)
    3706:	4798      	blx	r3
    3708:	0003      	movs	r3, r0
    370a:	62fb      	str	r3, [r7, #44]	; 0x2c
    370c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    370e:	3312      	adds	r3, #18
    3710:	62bb      	str	r3, [r7, #40]	; 0x28
    3712:	6abb      	ldr	r3, [r7, #40]	; 0x28
    3714:	b2db      	uxtb	r3, r3
    3716:	0018      	movs	r0, r3
    3718:	4b38      	ldr	r3, [pc, #224]	; (37fc <_spi_set_config+0x204>)
    371a:	4798      	blx	r3
    371c:	0003      	movs	r3, r0
    371e:	627b      	str	r3, [r7, #36]	; 0x24
    3720:	683b      	ldr	r3, [r7, #0]
    3722:	699b      	ldr	r3, [r3, #24]
    3724:	2223      	movs	r2, #35	; 0x23
    3726:	18bc      	adds	r4, r7, r2
    3728:	220a      	movs	r2, #10
    372a:	18ba      	adds	r2, r7, r2
    372c:	6a79      	ldr	r1, [r7, #36]	; 0x24
    372e:	0018      	movs	r0, r3
    3730:	4b33      	ldr	r3, [pc, #204]	; (3800 <_spi_set_config+0x208>)
    3732:	4798      	blx	r3
    3734:	0003      	movs	r3, r0
    3736:	7023      	strb	r3, [r4, #0]
    3738:	2323      	movs	r3, #35	; 0x23
    373a:	18fb      	adds	r3, r7, r3
    373c:	781b      	ldrb	r3, [r3, #0]
    373e:	2b00      	cmp	r3, #0
    3740:	d001      	beq.n	3746 <_spi_set_config+0x14e>
    3742:	2317      	movs	r3, #23
    3744:	e04e      	b.n	37e4 <_spi_set_config+0x1ec>
    3746:	230a      	movs	r3, #10
    3748:	18fb      	adds	r3, r7, r3
    374a:	881b      	ldrh	r3, [r3, #0]
    374c:	b2da      	uxtb	r2, r3
    374e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    3750:	731a      	strb	r2, [r3, #12]
    3752:	683b      	ldr	r3, [r7, #0]
    3754:	685b      	ldr	r3, [r3, #4]
    3756:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    3758:	4313      	orrs	r3, r2
    375a:	63fb      	str	r3, [r7, #60]	; 0x3c
    375c:	683b      	ldr	r3, [r7, #0]
    375e:	689b      	ldr	r3, [r3, #8]
    3760:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    3762:	4313      	orrs	r3, r2
    3764:	63fb      	str	r3, [r7, #60]	; 0x3c
    3766:	683b      	ldr	r3, [r7, #0]
    3768:	68db      	ldr	r3, [r3, #12]
    376a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    376c:	4313      	orrs	r3, r2
    376e:	63fb      	str	r3, [r7, #60]	; 0x3c
    3770:	683b      	ldr	r3, [r7, #0]
    3772:	7c1b      	ldrb	r3, [r3, #16]
    3774:	001a      	movs	r2, r3
    3776:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    3778:	4313      	orrs	r3, r2
    377a:	63bb      	str	r3, [r7, #56]	; 0x38
    377c:	683b      	ldr	r3, [r7, #0]
    377e:	7c5b      	ldrb	r3, [r3, #17]
    3780:	2b00      	cmp	r3, #0
    3782:	d103      	bne.n	378c <_spi_set_config+0x194>
    3784:	4b1f      	ldr	r3, [pc, #124]	; (3804 <_spi_set_config+0x20c>)
    3786:	4798      	blx	r3
    3788:	1e03      	subs	r3, r0, #0
    378a:	d003      	beq.n	3794 <_spi_set_config+0x19c>
    378c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    378e:	2280      	movs	r2, #128	; 0x80
    3790:	4313      	orrs	r3, r2
    3792:	63fb      	str	r3, [r7, #60]	; 0x3c
    3794:	683b      	ldr	r3, [r7, #0]
    3796:	7c9b      	ldrb	r3, [r3, #18]
    3798:	2b00      	cmp	r3, #0
    379a:	d004      	beq.n	37a6 <_spi_set_config+0x1ae>
    379c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    379e:	2280      	movs	r2, #128	; 0x80
    37a0:	0292      	lsls	r2, r2, #10
    37a2:	4313      	orrs	r3, r2
    37a4:	63bb      	str	r3, [r7, #56]	; 0x38
    37a6:	683b      	ldr	r3, [r7, #0]
    37a8:	7cdb      	ldrb	r3, [r3, #19]
    37aa:	2b00      	cmp	r3, #0
    37ac:	d004      	beq.n	37b8 <_spi_set_config+0x1c0>
    37ae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    37b0:	2280      	movs	r2, #128	; 0x80
    37b2:	0092      	lsls	r2, r2, #2
    37b4:	4313      	orrs	r3, r2
    37b6:	63bb      	str	r3, [r7, #56]	; 0x38
    37b8:	683b      	ldr	r3, [r7, #0]
    37ba:	7d1b      	ldrb	r3, [r3, #20]
    37bc:	2b00      	cmp	r3, #0
    37be:	d004      	beq.n	37ca <_spi_set_config+0x1d2>
    37c0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    37c2:	2280      	movs	r2, #128	; 0x80
    37c4:	0192      	lsls	r2, r2, #6
    37c6:	4313      	orrs	r3, r2
    37c8:	63bb      	str	r3, [r7, #56]	; 0x38
    37ca:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    37cc:	681a      	ldr	r2, [r3, #0]
    37ce:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    37d0:	431a      	orrs	r2, r3
    37d2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    37d4:	601a      	str	r2, [r3, #0]
    37d6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    37d8:	685a      	ldr	r2, [r3, #4]
    37da:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    37dc:	431a      	orrs	r2, r3
    37de:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    37e0:	605a      	str	r2, [r3, #4]
    37e2:	2300      	movs	r3, #0
    37e4:	0018      	movs	r0, r3
    37e6:	46bd      	mov	sp, r7
    37e8:	b013      	add	sp, #76	; 0x4c
    37ea:	bd90      	pop	{r4, r7, pc}
    37ec:	000032a9 	.word	0x000032a9
    37f0:	00002f51 	.word	0x00002f51
    37f4:	0000597d 	.word	0x0000597d
    37f8:	00003105 	.word	0x00003105
    37fc:	000057b9 	.word	0x000057b9
    3800:	00002c87 	.word	0x00002c87
    3804:	000034b9 	.word	0x000034b9

00003808 <_spi_check_config>:
    3808:	b590      	push	{r4, r7, lr}
    380a:	b091      	sub	sp, #68	; 0x44
    380c:	af00      	add	r7, sp, #0
    380e:	6078      	str	r0, [r7, #4]
    3810:	6039      	str	r1, [r7, #0]
    3812:	687b      	ldr	r3, [r7, #4]
    3814:	681b      	ldr	r3, [r3, #0]
    3816:	62fb      	str	r3, [r7, #44]	; 0x2c
    3818:	687b      	ldr	r3, [r7, #4]
    381a:	681b      	ldr	r3, [r3, #0]
    381c:	62bb      	str	r3, [r7, #40]	; 0x28
    381e:	683b      	ldr	r3, [r7, #0]
    3820:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    3822:	2310      	movs	r3, #16
    3824:	18fb      	adds	r3, r7, r3
    3826:	601a      	str	r2, [r3, #0]
    3828:	683b      	ldr	r3, [r7, #0]
    382a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    382c:	2310      	movs	r3, #16
    382e:	18fb      	adds	r3, r7, r3
    3830:	605a      	str	r2, [r3, #4]
    3832:	683b      	ldr	r3, [r7, #0]
    3834:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    3836:	2310      	movs	r3, #16
    3838:	18fb      	adds	r3, r7, r3
    383a:	609a      	str	r2, [r3, #8]
    383c:	683b      	ldr	r3, [r7, #0]
    383e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    3840:	2310      	movs	r3, #16
    3842:	18fb      	adds	r3, r7, r3
    3844:	60da      	str	r2, [r3, #12]
    3846:	233f      	movs	r3, #63	; 0x3f
    3848:	18fb      	adds	r3, r7, r3
    384a:	2200      	movs	r2, #0
    384c:	701a      	strb	r2, [r3, #0]
    384e:	e030      	b.n	38b2 <_spi_check_config+0xaa>
    3850:	233f      	movs	r3, #63	; 0x3f
    3852:	18fb      	adds	r3, r7, r3
    3854:	781a      	ldrb	r2, [r3, #0]
    3856:	2310      	movs	r3, #16
    3858:	18fb      	adds	r3, r7, r3
    385a:	0092      	lsls	r2, r2, #2
    385c:	58d3      	ldr	r3, [r2, r3]
    385e:	63bb      	str	r3, [r7, #56]	; 0x38
    3860:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    3862:	2b00      	cmp	r3, #0
    3864:	d109      	bne.n	387a <_spi_check_config+0x72>
    3866:	233f      	movs	r3, #63	; 0x3f
    3868:	18fb      	adds	r3, r7, r3
    386a:	781a      	ldrb	r2, [r3, #0]
    386c:	6abb      	ldr	r3, [r7, #40]	; 0x28
    386e:	0011      	movs	r1, r2
    3870:	0018      	movs	r0, r3
    3872:	4b56      	ldr	r3, [pc, #344]	; (39cc <_spi_check_config+0x1c4>)
    3874:	4798      	blx	r3
    3876:	0003      	movs	r3, r0
    3878:	63bb      	str	r3, [r7, #56]	; 0x38
    387a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    387c:	3301      	adds	r3, #1
    387e:	d010      	beq.n	38a2 <_spi_check_config+0x9a>
    3880:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    3882:	041b      	lsls	r3, r3, #16
    3884:	0c1c      	lsrs	r4, r3, #16
    3886:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    3888:	0c1b      	lsrs	r3, r3, #16
    388a:	b2db      	uxtb	r3, r3
    388c:	0018      	movs	r0, r3
    388e:	4b50      	ldr	r3, [pc, #320]	; (39d0 <_spi_check_config+0x1c8>)
    3890:	4798      	blx	r3
    3892:	0003      	movs	r3, r0
    3894:	429c      	cmp	r4, r3
    3896:	d005      	beq.n	38a4 <_spi_check_config+0x9c>
    3898:	687b      	ldr	r3, [r7, #4]
    389a:	2200      	movs	r2, #0
    389c:	601a      	str	r2, [r3, #0]
    389e:	231c      	movs	r3, #28
    38a0:	e08f      	b.n	39c2 <_spi_check_config+0x1ba>
    38a2:	46c0      	nop			; (mov r8, r8)
    38a4:	233f      	movs	r3, #63	; 0x3f
    38a6:	18fb      	adds	r3, r7, r3
    38a8:	781a      	ldrb	r2, [r3, #0]
    38aa:	233f      	movs	r3, #63	; 0x3f
    38ac:	18fb      	adds	r3, r7, r3
    38ae:	3201      	adds	r2, #1
    38b0:	701a      	strb	r2, [r3, #0]
    38b2:	233f      	movs	r3, #63	; 0x3f
    38b4:	18fb      	adds	r3, r7, r3
    38b6:	781b      	ldrb	r3, [r3, #0]
    38b8:	2b03      	cmp	r3, #3
    38ba:	d9c9      	bls.n	3850 <_spi_check_config+0x48>
    38bc:	2011      	movs	r0, #17
    38be:	4b45      	ldr	r3, [pc, #276]	; (39d4 <_spi_check_config+0x1cc>)
    38c0:	4798      	blx	r3
    38c2:	0003      	movs	r3, r0
    38c4:	627b      	str	r3, [r7, #36]	; 0x24
    38c6:	2300      	movs	r3, #0
    38c8:	637b      	str	r3, [r7, #52]	; 0x34
    38ca:	2300      	movs	r3, #0
    38cc:	633b      	str	r3, [r7, #48]	; 0x30
    38ce:	683b      	ldr	r3, [r7, #0]
    38d0:	781b      	ldrb	r3, [r3, #0]
    38d2:	2b01      	cmp	r3, #1
    38d4:	d121      	bne.n	391a <_spi_check_config+0x112>
    38d6:	683b      	ldr	r3, [r7, #0]
    38d8:	699b      	ldr	r3, [r3, #24]
    38da:	2223      	movs	r2, #35	; 0x23
    38dc:	18bc      	adds	r4, r7, r2
    38de:	220e      	movs	r2, #14
    38e0:	18ba      	adds	r2, r7, r2
    38e2:	6a79      	ldr	r1, [r7, #36]	; 0x24
    38e4:	0018      	movs	r0, r3
    38e6:	4b3c      	ldr	r3, [pc, #240]	; (39d8 <_spi_check_config+0x1d0>)
    38e8:	4798      	blx	r3
    38ea:	0003      	movs	r3, r0
    38ec:	7023      	strb	r3, [r4, #0]
    38ee:	2323      	movs	r3, #35	; 0x23
    38f0:	18fb      	adds	r3, r7, r3
    38f2:	781b      	ldrb	r3, [r3, #0]
    38f4:	2b00      	cmp	r3, #0
    38f6:	d001      	beq.n	38fc <_spi_check_config+0xf4>
    38f8:	2317      	movs	r3, #23
    38fa:	e062      	b.n	39c2 <_spi_check_config+0x1ba>
    38fc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    38fe:	7b1b      	ldrb	r3, [r3, #12]
    3900:	b2da      	uxtb	r2, r3
    3902:	230e      	movs	r3, #14
    3904:	18fb      	adds	r3, r7, r3
    3906:	881b      	ldrh	r3, [r3, #0]
    3908:	b2db      	uxtb	r3, r3
    390a:	429a      	cmp	r2, r3
    390c:	d001      	beq.n	3912 <_spi_check_config+0x10a>
    390e:	231c      	movs	r3, #28
    3910:	e057      	b.n	39c2 <_spi_check_config+0x1ba>
    3912:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    3914:	220c      	movs	r2, #12
    3916:	4313      	orrs	r3, r2
    3918:	637b      	str	r3, [r7, #52]	; 0x34
    391a:	683b      	ldr	r3, [r7, #0]
    391c:	685b      	ldr	r3, [r3, #4]
    391e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    3920:	4313      	orrs	r3, r2
    3922:	637b      	str	r3, [r7, #52]	; 0x34
    3924:	683b      	ldr	r3, [r7, #0]
    3926:	689b      	ldr	r3, [r3, #8]
    3928:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    392a:	4313      	orrs	r3, r2
    392c:	637b      	str	r3, [r7, #52]	; 0x34
    392e:	683b      	ldr	r3, [r7, #0]
    3930:	68db      	ldr	r3, [r3, #12]
    3932:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    3934:	4313      	orrs	r3, r2
    3936:	637b      	str	r3, [r7, #52]	; 0x34
    3938:	683b      	ldr	r3, [r7, #0]
    393a:	7c1b      	ldrb	r3, [r3, #16]
    393c:	001a      	movs	r2, r3
    393e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    3940:	4313      	orrs	r3, r2
    3942:	633b      	str	r3, [r7, #48]	; 0x30
    3944:	683b      	ldr	r3, [r7, #0]
    3946:	7c5b      	ldrb	r3, [r3, #17]
    3948:	2b00      	cmp	r3, #0
    394a:	d003      	beq.n	3954 <_spi_check_config+0x14c>
    394c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    394e:	2280      	movs	r2, #128	; 0x80
    3950:	4313      	orrs	r3, r2
    3952:	637b      	str	r3, [r7, #52]	; 0x34
    3954:	683b      	ldr	r3, [r7, #0]
    3956:	7c9b      	ldrb	r3, [r3, #18]
    3958:	2b00      	cmp	r3, #0
    395a:	d004      	beq.n	3966 <_spi_check_config+0x15e>
    395c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    395e:	2280      	movs	r2, #128	; 0x80
    3960:	0292      	lsls	r2, r2, #10
    3962:	4313      	orrs	r3, r2
    3964:	633b      	str	r3, [r7, #48]	; 0x30
    3966:	683b      	ldr	r3, [r7, #0]
    3968:	7cdb      	ldrb	r3, [r3, #19]
    396a:	2b00      	cmp	r3, #0
    396c:	d004      	beq.n	3978 <_spi_check_config+0x170>
    396e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    3970:	2280      	movs	r2, #128	; 0x80
    3972:	0092      	lsls	r2, r2, #2
    3974:	4313      	orrs	r3, r2
    3976:	633b      	str	r3, [r7, #48]	; 0x30
    3978:	683b      	ldr	r3, [r7, #0]
    397a:	7d1b      	ldrb	r3, [r3, #20]
    397c:	2b00      	cmp	r3, #0
    397e:	d004      	beq.n	398a <_spi_check_config+0x182>
    3980:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    3982:	2280      	movs	r2, #128	; 0x80
    3984:	0192      	lsls	r2, r2, #6
    3986:	4313      	orrs	r3, r2
    3988:	633b      	str	r3, [r7, #48]	; 0x30
    398a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    398c:	2202      	movs	r2, #2
    398e:	4313      	orrs	r3, r2
    3990:	637b      	str	r3, [r7, #52]	; 0x34
    3992:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    3994:	681a      	ldr	r2, [r3, #0]
    3996:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    3998:	429a      	cmp	r2, r3
    399a:	d10e      	bne.n	39ba <_spi_check_config+0x1b2>
    399c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    399e:	685a      	ldr	r2, [r3, #4]
    39a0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    39a2:	429a      	cmp	r2, r3
    39a4:	d109      	bne.n	39ba <_spi_check_config+0x1b2>
    39a6:	683b      	ldr	r3, [r7, #0]
    39a8:	781a      	ldrb	r2, [r3, #0]
    39aa:	687b      	ldr	r3, [r7, #4]
    39ac:	715a      	strb	r2, [r3, #5]
    39ae:	683b      	ldr	r3, [r7, #0]
    39b0:	7c1a      	ldrb	r2, [r3, #16]
    39b2:	687b      	ldr	r3, [r7, #4]
    39b4:	719a      	strb	r2, [r3, #6]
    39b6:	2300      	movs	r3, #0
    39b8:	e003      	b.n	39c2 <_spi_check_config+0x1ba>
    39ba:	687b      	ldr	r3, [r7, #4]
    39bc:	2200      	movs	r2, #0
    39be:	601a      	str	r2, [r3, #0]
    39c0:	231c      	movs	r3, #28
    39c2:	0018      	movs	r0, r3
    39c4:	46bd      	mov	sp, r7
    39c6:	b011      	add	sp, #68	; 0x44
    39c8:	bd90      	pop	{r4, r7, pc}
    39ca:	46c0      	nop			; (mov r8, r8)
    39cc:	00002f51 	.word	0x00002f51
    39d0:	00003331 	.word	0x00003331
    39d4:	000057b9 	.word	0x000057b9
    39d8:	00002c87 	.word	0x00002c87

000039dc <spi_init>:
    39dc:	b580      	push	{r7, lr}
    39de:	b08a      	sub	sp, #40	; 0x28
    39e0:	af00      	add	r7, sp, #0
    39e2:	60f8      	str	r0, [r7, #12]
    39e4:	60b9      	str	r1, [r7, #8]
    39e6:	607a      	str	r2, [r7, #4]
    39e8:	68fb      	ldr	r3, [r7, #12]
    39ea:	68ba      	ldr	r2, [r7, #8]
    39ec:	601a      	str	r2, [r3, #0]
    39ee:	68fb      	ldr	r3, [r7, #12]
    39f0:	681b      	ldr	r3, [r3, #0]
    39f2:	61fb      	str	r3, [r7, #28]
    39f4:	69fb      	ldr	r3, [r7, #28]
    39f6:	681b      	ldr	r3, [r3, #0]
    39f8:	2202      	movs	r2, #2
    39fa:	4013      	ands	r3, r2
    39fc:	d007      	beq.n	3a0e <spi_init+0x32>
    39fe:	687a      	ldr	r2, [r7, #4]
    3a00:	68fb      	ldr	r3, [r7, #12]
    3a02:	0011      	movs	r1, r2
    3a04:	0018      	movs	r0, r3
    3a06:	4b33      	ldr	r3, [pc, #204]	; (3ad4 <spi_init+0xf8>)
    3a08:	4798      	blx	r3
    3a0a:	0003      	movs	r3, r0
    3a0c:	e05e      	b.n	3acc <spi_init+0xf0>
    3a0e:	69fb      	ldr	r3, [r7, #28]
    3a10:	681b      	ldr	r3, [r3, #0]
    3a12:	2201      	movs	r2, #1
    3a14:	4013      	ands	r3, r2
    3a16:	d001      	beq.n	3a1c <spi_init+0x40>
    3a18:	2305      	movs	r3, #5
    3a1a:	e057      	b.n	3acc <spi_init+0xf0>
    3a1c:	68fb      	ldr	r3, [r7, #12]
    3a1e:	681b      	ldr	r3, [r3, #0]
    3a20:	0018      	movs	r0, r3
    3a22:	4b2d      	ldr	r3, [pc, #180]	; (3ad8 <spi_init+0xfc>)
    3a24:	4798      	blx	r3
    3a26:	0003      	movs	r3, r0
    3a28:	61bb      	str	r3, [r7, #24]
    3a2a:	69bb      	ldr	r3, [r7, #24]
    3a2c:	2b05      	cmp	r3, #5
    3a2e:	d104      	bne.n	3a3a <spi_init+0x5e>
    3a30:	2301      	movs	r3, #1
    3a32:	627b      	str	r3, [r7, #36]	; 0x24
    3a34:	2318      	movs	r3, #24
    3a36:	623b      	str	r3, [r7, #32]
    3a38:	e004      	b.n	3a44 <spi_init+0x68>
    3a3a:	69bb      	ldr	r3, [r7, #24]
    3a3c:	627b      	str	r3, [r7, #36]	; 0x24
    3a3e:	69bb      	ldr	r3, [r7, #24]
    3a40:	3312      	adds	r3, #18
    3a42:	623b      	str	r3, [r7, #32]
    3a44:	69bb      	ldr	r3, [r7, #24]
    3a46:	2b05      	cmp	r3, #5
    3a48:	d108      	bne.n	3a5c <spi_init+0x80>
    3a4a:	2201      	movs	r2, #1
    3a4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3a4e:	409a      	lsls	r2, r3
    3a50:	0013      	movs	r3, r2
    3a52:	0019      	movs	r1, r3
    3a54:	2003      	movs	r0, #3
    3a56:	4b21      	ldr	r3, [pc, #132]	; (3adc <spi_init+0x100>)
    3a58:	4798      	blx	r3
    3a5a:	e007      	b.n	3a6c <spi_init+0x90>
    3a5c:	2201      	movs	r2, #1
    3a5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3a60:	409a      	lsls	r2, r3
    3a62:	0013      	movs	r3, r2
    3a64:	0019      	movs	r1, r3
    3a66:	2002      	movs	r0, #2
    3a68:	4b1c      	ldr	r3, [pc, #112]	; (3adc <spi_init+0x100>)
    3a6a:	4798      	blx	r3
    3a6c:	2314      	movs	r3, #20
    3a6e:	18fb      	adds	r3, r7, r3
    3a70:	0018      	movs	r0, r3
    3a72:	4b1b      	ldr	r3, [pc, #108]	; (3ae0 <spi_init+0x104>)
    3a74:	4798      	blx	r3
    3a76:	687b      	ldr	r3, [r7, #4]
    3a78:	2224      	movs	r2, #36	; 0x24
    3a7a:	5c9a      	ldrb	r2, [r3, r2]
    3a7c:	2314      	movs	r3, #20
    3a7e:	18fb      	adds	r3, r7, r3
    3a80:	701a      	strb	r2, [r3, #0]
    3a82:	6a3b      	ldr	r3, [r7, #32]
    3a84:	b2db      	uxtb	r3, r3
    3a86:	2214      	movs	r2, #20
    3a88:	18ba      	adds	r2, r7, r2
    3a8a:	0011      	movs	r1, r2
    3a8c:	0018      	movs	r0, r3
    3a8e:	4b15      	ldr	r3, [pc, #84]	; (3ae4 <spi_init+0x108>)
    3a90:	4798      	blx	r3
    3a92:	6a3b      	ldr	r3, [r7, #32]
    3a94:	b2db      	uxtb	r3, r3
    3a96:	0018      	movs	r0, r3
    3a98:	4b13      	ldr	r3, [pc, #76]	; (3ae8 <spi_init+0x10c>)
    3a9a:	4798      	blx	r3
    3a9c:	687b      	ldr	r3, [r7, #4]
    3a9e:	2224      	movs	r2, #36	; 0x24
    3aa0:	5c9b      	ldrb	r3, [r3, r2]
    3aa2:	2100      	movs	r1, #0
    3aa4:	0018      	movs	r0, r3
    3aa6:	4b11      	ldr	r3, [pc, #68]	; (3aec <spi_init+0x110>)
    3aa8:	4798      	blx	r3
    3aaa:	687b      	ldr	r3, [r7, #4]
    3aac:	781b      	ldrb	r3, [r3, #0]
    3aae:	2b01      	cmp	r3, #1
    3ab0:	d105      	bne.n	3abe <spi_init+0xe2>
    3ab2:	69fb      	ldr	r3, [r7, #28]
    3ab4:	681b      	ldr	r3, [r3, #0]
    3ab6:	220c      	movs	r2, #12
    3ab8:	431a      	orrs	r2, r3
    3aba:	69fb      	ldr	r3, [r7, #28]
    3abc:	601a      	str	r2, [r3, #0]
    3abe:	687a      	ldr	r2, [r7, #4]
    3ac0:	68fb      	ldr	r3, [r7, #12]
    3ac2:	0011      	movs	r1, r2
    3ac4:	0018      	movs	r0, r3
    3ac6:	4b0a      	ldr	r3, [pc, #40]	; (3af0 <spi_init+0x114>)
    3ac8:	4798      	blx	r3
    3aca:	0003      	movs	r3, r0
    3acc:	0018      	movs	r0, r3
    3ace:	46bd      	mov	sp, r7
    3ad0:	b00a      	add	sp, #40	; 0x28
    3ad2:	bd80      	pop	{r7, pc}
    3ad4:	00003809 	.word	0x00003809
    3ad8:	00003105 	.word	0x00003105
    3adc:	0000343d 	.word	0x0000343d
    3ae0:	00003425 	.word	0x00003425
    3ae4:	000056c9 	.word	0x000056c9
    3ae8:	00005709 	.word	0x00005709
    3aec:	00002ec5 	.word	0x00002ec5
    3af0:	000035f9 	.word	0x000035f9

00003af4 <spi_select_slave>:
    3af4:	b580      	push	{r7, lr}
    3af6:	b086      	sub	sp, #24
    3af8:	af00      	add	r7, sp, #0
    3afa:	60f8      	str	r0, [r7, #12]
    3afc:	60b9      	str	r1, [r7, #8]
    3afe:	1dfb      	adds	r3, r7, #7
    3b00:	701a      	strb	r2, [r3, #0]
    3b02:	68fb      	ldr	r3, [r7, #12]
    3b04:	795b      	ldrb	r3, [r3, #5]
    3b06:	2b01      	cmp	r3, #1
    3b08:	d001      	beq.n	3b0e <spi_select_slave+0x1a>
    3b0a:	2315      	movs	r3, #21
    3b0c:	e05c      	b.n	3bc8 <spi_select_slave+0xd4>
    3b0e:	68fb      	ldr	r3, [r7, #12]
    3b10:	7a1b      	ldrb	r3, [r3, #8]
    3b12:	2201      	movs	r2, #1
    3b14:	4053      	eors	r3, r2
    3b16:	b2db      	uxtb	r3, r3
    3b18:	2b00      	cmp	r3, #0
    3b1a:	d054      	beq.n	3bc6 <spi_select_slave+0xd2>
    3b1c:	1dfb      	adds	r3, r7, #7
    3b1e:	781b      	ldrb	r3, [r3, #0]
    3b20:	2b00      	cmp	r3, #0
    3b22:	d04a      	beq.n	3bba <spi_select_slave+0xc6>
    3b24:	68bb      	ldr	r3, [r7, #8]
    3b26:	785b      	ldrb	r3, [r3, #1]
    3b28:	2b00      	cmp	r3, #0
    3b2a:	d03f      	beq.n	3bac <spi_select_slave+0xb8>
    3b2c:	68fb      	ldr	r3, [r7, #12]
    3b2e:	0018      	movs	r0, r3
    3b30:	4b27      	ldr	r3, [pc, #156]	; (3bd0 <spi_select_slave+0xdc>)
    3b32:	4798      	blx	r3
    3b34:	0003      	movs	r3, r0
    3b36:	001a      	movs	r2, r3
    3b38:	2301      	movs	r3, #1
    3b3a:	4053      	eors	r3, r2
    3b3c:	b2db      	uxtb	r3, r3
    3b3e:	2b00      	cmp	r3, #0
    3b40:	d007      	beq.n	3b52 <spi_select_slave+0x5e>
    3b42:	68bb      	ldr	r3, [r7, #8]
    3b44:	781b      	ldrb	r3, [r3, #0]
    3b46:	2101      	movs	r1, #1
    3b48:	0018      	movs	r0, r3
    3b4a:	4b22      	ldr	r3, [pc, #136]	; (3bd4 <spi_select_slave+0xe0>)
    3b4c:	4798      	blx	r3
    3b4e:	2305      	movs	r3, #5
    3b50:	e03a      	b.n	3bc8 <spi_select_slave+0xd4>
    3b52:	68bb      	ldr	r3, [r7, #8]
    3b54:	781b      	ldrb	r3, [r3, #0]
    3b56:	2100      	movs	r1, #0
    3b58:	0018      	movs	r0, r3
    3b5a:	4b1e      	ldr	r3, [pc, #120]	; (3bd4 <spi_select_slave+0xe0>)
    3b5c:	4798      	blx	r3
    3b5e:	68bb      	ldr	r3, [r7, #8]
    3b60:	789b      	ldrb	r3, [r3, #2]
    3b62:	b29a      	uxth	r2, r3
    3b64:	68fb      	ldr	r3, [r7, #12]
    3b66:	0011      	movs	r1, r2
    3b68:	0018      	movs	r0, r3
    3b6a:	4b1b      	ldr	r3, [pc, #108]	; (3bd8 <spi_select_slave+0xe4>)
    3b6c:	4798      	blx	r3
    3b6e:	68fb      	ldr	r3, [r7, #12]
    3b70:	79db      	ldrb	r3, [r3, #7]
    3b72:	2201      	movs	r2, #1
    3b74:	4053      	eors	r3, r2
    3b76:	b2db      	uxtb	r3, r3
    3b78:	2b00      	cmp	r3, #0
    3b7a:	d024      	beq.n	3bc6 <spi_select_slave+0xd2>
    3b7c:	46c0      	nop			; (mov r8, r8)
    3b7e:	68fb      	ldr	r3, [r7, #12]
    3b80:	0018      	movs	r0, r3
    3b82:	4b16      	ldr	r3, [pc, #88]	; (3bdc <spi_select_slave+0xe8>)
    3b84:	4798      	blx	r3
    3b86:	0003      	movs	r3, r0
    3b88:	001a      	movs	r2, r3
    3b8a:	2301      	movs	r3, #1
    3b8c:	4053      	eors	r3, r2
    3b8e:	b2db      	uxtb	r3, r3
    3b90:	2b00      	cmp	r3, #0
    3b92:	d1f4      	bne.n	3b7e <spi_select_slave+0x8a>
    3b94:	2316      	movs	r3, #22
    3b96:	18fb      	adds	r3, r7, r3
    3b98:	2200      	movs	r2, #0
    3b9a:	801a      	strh	r2, [r3, #0]
    3b9c:	2316      	movs	r3, #22
    3b9e:	18fa      	adds	r2, r7, r3
    3ba0:	68fb      	ldr	r3, [r7, #12]
    3ba2:	0011      	movs	r1, r2
    3ba4:	0018      	movs	r0, r3
    3ba6:	4b0e      	ldr	r3, [pc, #56]	; (3be0 <spi_select_slave+0xec>)
    3ba8:	4798      	blx	r3
    3baa:	e00c      	b.n	3bc6 <spi_select_slave+0xd2>
    3bac:	68bb      	ldr	r3, [r7, #8]
    3bae:	781b      	ldrb	r3, [r3, #0]
    3bb0:	2100      	movs	r1, #0
    3bb2:	0018      	movs	r0, r3
    3bb4:	4b07      	ldr	r3, [pc, #28]	; (3bd4 <spi_select_slave+0xe0>)
    3bb6:	4798      	blx	r3
    3bb8:	e005      	b.n	3bc6 <spi_select_slave+0xd2>
    3bba:	68bb      	ldr	r3, [r7, #8]
    3bbc:	781b      	ldrb	r3, [r3, #0]
    3bbe:	2101      	movs	r1, #1
    3bc0:	0018      	movs	r0, r3
    3bc2:	4b04      	ldr	r3, [pc, #16]	; (3bd4 <spi_select_slave+0xe0>)
    3bc4:	4798      	blx	r3
    3bc6:	2300      	movs	r3, #0
    3bc8:	0018      	movs	r0, r3
    3bca:	46bd      	mov	sp, r7
    3bcc:	b006      	add	sp, #24
    3bce:	bd80      	pop	{r7, pc}
    3bd0:	000034d9 	.word	0x000034d9
    3bd4:	000033d1 	.word	0x000033d1
    3bd8:	00003529 	.word	0x00003529
    3bdc:	00003501 	.word	0x00003501
    3be0:	00003571 	.word	0x00003571

00003be4 <system_gclk_chan_get_config_defaults>:
    3be4:	b580      	push	{r7, lr}
    3be6:	b082      	sub	sp, #8
    3be8:	af00      	add	r7, sp, #0
    3bea:	6078      	str	r0, [r7, #4]
    3bec:	687b      	ldr	r3, [r7, #4]
    3bee:	2200      	movs	r2, #0
    3bf0:	701a      	strb	r2, [r3, #0]
    3bf2:	46c0      	nop			; (mov r8, r8)
    3bf4:	46bd      	mov	sp, r7
    3bf6:	b002      	add	sp, #8
    3bf8:	bd80      	pop	{r7, pc}
	...

00003bfc <system_apb_clock_set_mask>:
    3bfc:	b580      	push	{r7, lr}
    3bfe:	b082      	sub	sp, #8
    3c00:	af00      	add	r7, sp, #0
    3c02:	0002      	movs	r2, r0
    3c04:	6039      	str	r1, [r7, #0]
    3c06:	1dfb      	adds	r3, r7, #7
    3c08:	701a      	strb	r2, [r3, #0]
    3c0a:	1dfb      	adds	r3, r7, #7
    3c0c:	781b      	ldrb	r3, [r3, #0]
    3c0e:	2b04      	cmp	r3, #4
    3c10:	d827      	bhi.n	3c62 <system_apb_clock_set_mask+0x66>
    3c12:	009a      	lsls	r2, r3, #2
    3c14:	4b16      	ldr	r3, [pc, #88]	; (3c70 <system_apb_clock_set_mask+0x74>)
    3c16:	18d3      	adds	r3, r2, r3
    3c18:	681b      	ldr	r3, [r3, #0]
    3c1a:	469f      	mov	pc, r3
    3c1c:	4b15      	ldr	r3, [pc, #84]	; (3c74 <system_apb_clock_set_mask+0x78>)
    3c1e:	4a15      	ldr	r2, [pc, #84]	; (3c74 <system_apb_clock_set_mask+0x78>)
    3c20:	6951      	ldr	r1, [r2, #20]
    3c22:	683a      	ldr	r2, [r7, #0]
    3c24:	430a      	orrs	r2, r1
    3c26:	615a      	str	r2, [r3, #20]
    3c28:	e01d      	b.n	3c66 <system_apb_clock_set_mask+0x6a>
    3c2a:	4b12      	ldr	r3, [pc, #72]	; (3c74 <system_apb_clock_set_mask+0x78>)
    3c2c:	4a11      	ldr	r2, [pc, #68]	; (3c74 <system_apb_clock_set_mask+0x78>)
    3c2e:	6991      	ldr	r1, [r2, #24]
    3c30:	683a      	ldr	r2, [r7, #0]
    3c32:	430a      	orrs	r2, r1
    3c34:	619a      	str	r2, [r3, #24]
    3c36:	e016      	b.n	3c66 <system_apb_clock_set_mask+0x6a>
    3c38:	4b0e      	ldr	r3, [pc, #56]	; (3c74 <system_apb_clock_set_mask+0x78>)
    3c3a:	4a0e      	ldr	r2, [pc, #56]	; (3c74 <system_apb_clock_set_mask+0x78>)
    3c3c:	69d1      	ldr	r1, [r2, #28]
    3c3e:	683a      	ldr	r2, [r7, #0]
    3c40:	430a      	orrs	r2, r1
    3c42:	61da      	str	r2, [r3, #28]
    3c44:	e00f      	b.n	3c66 <system_apb_clock_set_mask+0x6a>
    3c46:	4b0b      	ldr	r3, [pc, #44]	; (3c74 <system_apb_clock_set_mask+0x78>)
    3c48:	4a0a      	ldr	r2, [pc, #40]	; (3c74 <system_apb_clock_set_mask+0x78>)
    3c4a:	6a11      	ldr	r1, [r2, #32]
    3c4c:	683a      	ldr	r2, [r7, #0]
    3c4e:	430a      	orrs	r2, r1
    3c50:	621a      	str	r2, [r3, #32]
    3c52:	e008      	b.n	3c66 <system_apb_clock_set_mask+0x6a>
    3c54:	4b07      	ldr	r3, [pc, #28]	; (3c74 <system_apb_clock_set_mask+0x78>)
    3c56:	4a07      	ldr	r2, [pc, #28]	; (3c74 <system_apb_clock_set_mask+0x78>)
    3c58:	6a51      	ldr	r1, [r2, #36]	; 0x24
    3c5a:	683a      	ldr	r2, [r7, #0]
    3c5c:	430a      	orrs	r2, r1
    3c5e:	625a      	str	r2, [r3, #36]	; 0x24
    3c60:	e001      	b.n	3c66 <system_apb_clock_set_mask+0x6a>
    3c62:	2317      	movs	r3, #23
    3c64:	e000      	b.n	3c68 <system_apb_clock_set_mask+0x6c>
    3c66:	2300      	movs	r3, #0
    3c68:	0018      	movs	r0, r3
    3c6a:	46bd      	mov	sp, r7
    3c6c:	b002      	add	sp, #8
    3c6e:	bd80      	pop	{r7, pc}
    3c70:	0001cb38 	.word	0x0001cb38
    3c74:	40000400 	.word	0x40000400

00003c78 <system_pinmux_get_config_defaults>:
    3c78:	b580      	push	{r7, lr}
    3c7a:	b082      	sub	sp, #8
    3c7c:	af00      	add	r7, sp, #0
    3c7e:	6078      	str	r0, [r7, #4]
    3c80:	687b      	ldr	r3, [r7, #4]
    3c82:	2280      	movs	r2, #128	; 0x80
    3c84:	701a      	strb	r2, [r3, #0]
    3c86:	687b      	ldr	r3, [r7, #4]
    3c88:	2200      	movs	r2, #0
    3c8a:	705a      	strb	r2, [r3, #1]
    3c8c:	687b      	ldr	r3, [r7, #4]
    3c8e:	2201      	movs	r2, #1
    3c90:	709a      	strb	r2, [r3, #2]
    3c92:	687b      	ldr	r3, [r7, #4]
    3c94:	2200      	movs	r2, #0
    3c96:	70da      	strb	r2, [r3, #3]
    3c98:	46c0      	nop			; (mov r8, r8)
    3c9a:	46bd      	mov	sp, r7
    3c9c:	b002      	add	sp, #8
    3c9e:	bd80      	pop	{r7, pc}

00003ca0 <system_is_debugger_present>:
    3ca0:	b580      	push	{r7, lr}
    3ca2:	af00      	add	r7, sp, #0
    3ca4:	4b05      	ldr	r3, [pc, #20]	; (3cbc <system_is_debugger_present+0x1c>)
    3ca6:	789b      	ldrb	r3, [r3, #2]
    3ca8:	b2db      	uxtb	r3, r3
    3caa:	001a      	movs	r2, r3
    3cac:	2302      	movs	r3, #2
    3cae:	4013      	ands	r3, r2
    3cb0:	1e5a      	subs	r2, r3, #1
    3cb2:	4193      	sbcs	r3, r2
    3cb4:	b2db      	uxtb	r3, r3
    3cb6:	0018      	movs	r0, r3
    3cb8:	46bd      	mov	sp, r7
    3cba:	bd80      	pop	{r7, pc}
    3cbc:	41002000 	.word	0x41002000

00003cc0 <usart_is_syncing>:
    3cc0:	b580      	push	{r7, lr}
    3cc2:	b084      	sub	sp, #16
    3cc4:	af00      	add	r7, sp, #0
    3cc6:	6078      	str	r0, [r7, #4]
    3cc8:	687b      	ldr	r3, [r7, #4]
    3cca:	681b      	ldr	r3, [r3, #0]
    3ccc:	60fb      	str	r3, [r7, #12]
    3cce:	68fb      	ldr	r3, [r7, #12]
    3cd0:	69db      	ldr	r3, [r3, #28]
    3cd2:	1e5a      	subs	r2, r3, #1
    3cd4:	4193      	sbcs	r3, r2
    3cd6:	b2db      	uxtb	r3, r3
    3cd8:	0018      	movs	r0, r3
    3cda:	46bd      	mov	sp, r7
    3cdc:	b004      	add	sp, #16
    3cde:	bd80      	pop	{r7, pc}

00003ce0 <_usart_wait_for_sync>:
    3ce0:	b580      	push	{r7, lr}
    3ce2:	b082      	sub	sp, #8
    3ce4:	af00      	add	r7, sp, #0
    3ce6:	6078      	str	r0, [r7, #4]
    3ce8:	46c0      	nop			; (mov r8, r8)
    3cea:	687b      	ldr	r3, [r7, #4]
    3cec:	0018      	movs	r0, r3
    3cee:	4b04      	ldr	r3, [pc, #16]	; (3d00 <_usart_wait_for_sync+0x20>)
    3cf0:	4798      	blx	r3
    3cf2:	1e03      	subs	r3, r0, #0
    3cf4:	d1f9      	bne.n	3cea <_usart_wait_for_sync+0xa>
    3cf6:	46c0      	nop			; (mov r8, r8)
    3cf8:	46bd      	mov	sp, r7
    3cfa:	b002      	add	sp, #8
    3cfc:	bd80      	pop	{r7, pc}
    3cfe:	46c0      	nop			; (mov r8, r8)
    3d00:	00003cc1 	.word	0x00003cc1

00003d04 <_usart_set_config>:
    3d04:	b5b0      	push	{r4, r5, r7, lr}
    3d06:	b08c      	sub	sp, #48	; 0x30
    3d08:	af02      	add	r7, sp, #8
    3d0a:	6078      	str	r0, [r7, #4]
    3d0c:	6039      	str	r1, [r7, #0]
    3d0e:	687b      	ldr	r3, [r7, #4]
    3d10:	681b      	ldr	r3, [r3, #0]
    3d12:	617b      	str	r3, [r7, #20]
    3d14:	687b      	ldr	r3, [r7, #4]
    3d16:	681b      	ldr	r3, [r3, #0]
    3d18:	0018      	movs	r0, r3
    3d1a:	4bac      	ldr	r3, [pc, #688]	; (3fcc <_usart_set_config+0x2c8>)
    3d1c:	4798      	blx	r3
    3d1e:	0003      	movs	r3, r0
    3d20:	613b      	str	r3, [r7, #16]
    3d22:	693b      	ldr	r3, [r7, #16]
    3d24:	2b05      	cmp	r3, #5
    3d26:	d102      	bne.n	3d2e <_usart_set_config+0x2a>
    3d28:	2318      	movs	r3, #24
    3d2a:	627b      	str	r3, [r7, #36]	; 0x24
    3d2c:	e002      	b.n	3d34 <_usart_set_config+0x30>
    3d2e:	693b      	ldr	r3, [r7, #16]
    3d30:	3312      	adds	r3, #18
    3d32:	627b      	str	r3, [r7, #36]	; 0x24
    3d34:	2300      	movs	r3, #0
    3d36:	623b      	str	r3, [r7, #32]
    3d38:	2300      	movs	r3, #0
    3d3a:	61fb      	str	r3, [r7, #28]
    3d3c:	230a      	movs	r3, #10
    3d3e:	18fb      	adds	r3, r7, r3
    3d40:	2200      	movs	r2, #0
    3d42:	801a      	strh	r2, [r3, #0]
    3d44:	231b      	movs	r3, #27
    3d46:	18fb      	adds	r3, r7, r3
    3d48:	2200      	movs	r2, #0
    3d4a:	701a      	strb	r2, [r3, #0]
    3d4c:	231a      	movs	r3, #26
    3d4e:	18fb      	adds	r3, r7, r3
    3d50:	2210      	movs	r2, #16
    3d52:	701a      	strb	r2, [r3, #0]
    3d54:	683b      	ldr	r3, [r7, #0]
    3d56:	8a1b      	ldrh	r3, [r3, #16]
    3d58:	2280      	movs	r2, #128	; 0x80
    3d5a:	01d2      	lsls	r2, r2, #7
    3d5c:	4293      	cmp	r3, r2
    3d5e:	d01c      	beq.n	3d9a <_usart_set_config+0x96>
    3d60:	2280      	movs	r2, #128	; 0x80
    3d62:	01d2      	lsls	r2, r2, #7
    3d64:	4293      	cmp	r3, r2
    3d66:	dc06      	bgt.n	3d76 <_usart_set_config+0x72>
    3d68:	2b00      	cmp	r3, #0
    3d6a:	d00d      	beq.n	3d88 <_usart_set_config+0x84>
    3d6c:	2280      	movs	r2, #128	; 0x80
    3d6e:	0192      	lsls	r2, r2, #6
    3d70:	4293      	cmp	r3, r2
    3d72:	d024      	beq.n	3dbe <_usart_set_config+0xba>
    3d74:	e035      	b.n	3de2 <_usart_set_config+0xde>
    3d76:	22c0      	movs	r2, #192	; 0xc0
    3d78:	01d2      	lsls	r2, r2, #7
    3d7a:	4293      	cmp	r3, r2
    3d7c:	d028      	beq.n	3dd0 <_usart_set_config+0xcc>
    3d7e:	2280      	movs	r2, #128	; 0x80
    3d80:	0212      	lsls	r2, r2, #8
    3d82:	4293      	cmp	r3, r2
    3d84:	d012      	beq.n	3dac <_usart_set_config+0xa8>
    3d86:	e02c      	b.n	3de2 <_usart_set_config+0xde>
    3d88:	231b      	movs	r3, #27
    3d8a:	18fb      	adds	r3, r7, r3
    3d8c:	2200      	movs	r2, #0
    3d8e:	701a      	strb	r2, [r3, #0]
    3d90:	231a      	movs	r3, #26
    3d92:	18fb      	adds	r3, r7, r3
    3d94:	2210      	movs	r2, #16
    3d96:	701a      	strb	r2, [r3, #0]
    3d98:	e023      	b.n	3de2 <_usart_set_config+0xde>
    3d9a:	231b      	movs	r3, #27
    3d9c:	18fb      	adds	r3, r7, r3
    3d9e:	2200      	movs	r2, #0
    3da0:	701a      	strb	r2, [r3, #0]
    3da2:	231a      	movs	r3, #26
    3da4:	18fb      	adds	r3, r7, r3
    3da6:	2208      	movs	r2, #8
    3da8:	701a      	strb	r2, [r3, #0]
    3daa:	e01a      	b.n	3de2 <_usart_set_config+0xde>
    3dac:	231b      	movs	r3, #27
    3dae:	18fb      	adds	r3, r7, r3
    3db0:	2200      	movs	r2, #0
    3db2:	701a      	strb	r2, [r3, #0]
    3db4:	231a      	movs	r3, #26
    3db6:	18fb      	adds	r3, r7, r3
    3db8:	2203      	movs	r2, #3
    3dba:	701a      	strb	r2, [r3, #0]
    3dbc:	e011      	b.n	3de2 <_usart_set_config+0xde>
    3dbe:	231b      	movs	r3, #27
    3dc0:	18fb      	adds	r3, r7, r3
    3dc2:	2201      	movs	r2, #1
    3dc4:	701a      	strb	r2, [r3, #0]
    3dc6:	231a      	movs	r3, #26
    3dc8:	18fb      	adds	r3, r7, r3
    3dca:	2210      	movs	r2, #16
    3dcc:	701a      	strb	r2, [r3, #0]
    3dce:	e008      	b.n	3de2 <_usart_set_config+0xde>
    3dd0:	231b      	movs	r3, #27
    3dd2:	18fb      	adds	r3, r7, r3
    3dd4:	2201      	movs	r2, #1
    3dd6:	701a      	strb	r2, [r3, #0]
    3dd8:	231a      	movs	r3, #26
    3dda:	18fb      	adds	r3, r7, r3
    3ddc:	2208      	movs	r2, #8
    3dde:	701a      	strb	r2, [r3, #0]
    3de0:	46c0      	nop			; (mov r8, r8)
    3de2:	683b      	ldr	r3, [r7, #0]
    3de4:	681a      	ldr	r2, [r3, #0]
    3de6:	683b      	ldr	r3, [r7, #0]
    3de8:	68db      	ldr	r3, [r3, #12]
    3dea:	431a      	orrs	r2, r3
    3dec:	683b      	ldr	r3, [r7, #0]
    3dee:	695b      	ldr	r3, [r3, #20]
    3df0:	4313      	orrs	r3, r2
    3df2:	683a      	ldr	r2, [r7, #0]
    3df4:	8a12      	ldrh	r2, [r2, #16]
    3df6:	4313      	orrs	r3, r2
    3df8:	683a      	ldr	r2, [r7, #0]
    3dfa:	7e12      	ldrb	r2, [r2, #24]
    3dfc:	0212      	lsls	r2, r2, #8
    3dfe:	4313      	orrs	r3, r2
    3e00:	683a      	ldr	r2, [r7, #0]
    3e02:	2126      	movs	r1, #38	; 0x26
    3e04:	5c52      	ldrb	r2, [r2, r1]
    3e06:	0752      	lsls	r2, r2, #29
    3e08:	4313      	orrs	r3, r2
    3e0a:	623b      	str	r3, [r7, #32]
    3e0c:	2319      	movs	r3, #25
    3e0e:	18fb      	adds	r3, r7, r3
    3e10:	2200      	movs	r2, #0
    3e12:	701a      	strb	r2, [r3, #0]
    3e14:	683b      	ldr	r3, [r7, #0]
    3e16:	685b      	ldr	r3, [r3, #4]
    3e18:	60fb      	str	r3, [r7, #12]
    3e1a:	68fb      	ldr	r3, [r7, #12]
    3e1c:	2b00      	cmp	r3, #0
    3e1e:	d01e      	beq.n	3e5e <_usart_set_config+0x15a>
    3e20:	2280      	movs	r2, #128	; 0x80
    3e22:	0552      	lsls	r2, r2, #21
    3e24:	4293      	cmp	r3, r2
    3e26:	d14f      	bne.n	3ec8 <_usart_set_config+0x1c4>
    3e28:	683b      	ldr	r3, [r7, #0]
    3e2a:	2227      	movs	r2, #39	; 0x27
    3e2c:	5c9b      	ldrb	r3, [r3, r2]
    3e2e:	2201      	movs	r2, #1
    3e30:	4053      	eors	r3, r2
    3e32:	b2db      	uxtb	r3, r3
    3e34:	2b00      	cmp	r3, #0
    3e36:	d046      	beq.n	3ec6 <_usart_set_config+0x1c2>
    3e38:	683b      	ldr	r3, [r7, #0]
    3e3a:	6a1d      	ldr	r5, [r3, #32]
    3e3c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3e3e:	b2db      	uxtb	r3, r3
    3e40:	0018      	movs	r0, r3
    3e42:	4b63      	ldr	r3, [pc, #396]	; (3fd0 <_usart_set_config+0x2cc>)
    3e44:	4798      	blx	r3
    3e46:	0001      	movs	r1, r0
    3e48:	2319      	movs	r3, #25
    3e4a:	18fc      	adds	r4, r7, r3
    3e4c:	230a      	movs	r3, #10
    3e4e:	18fb      	adds	r3, r7, r3
    3e50:	001a      	movs	r2, r3
    3e52:	0028      	movs	r0, r5
    3e54:	4b5f      	ldr	r3, [pc, #380]	; (3fd4 <_usart_set_config+0x2d0>)
    3e56:	4798      	blx	r3
    3e58:	0003      	movs	r3, r0
    3e5a:	7023      	strb	r3, [r4, #0]
    3e5c:	e033      	b.n	3ec6 <_usart_set_config+0x1c2>
    3e5e:	683b      	ldr	r3, [r7, #0]
    3e60:	2227      	movs	r2, #39	; 0x27
    3e62:	5c9b      	ldrb	r3, [r3, r2]
    3e64:	2b00      	cmp	r3, #0
    3e66:	d014      	beq.n	3e92 <_usart_set_config+0x18e>
    3e68:	683b      	ldr	r3, [r7, #0]
    3e6a:	6a18      	ldr	r0, [r3, #32]
    3e6c:	683b      	ldr	r3, [r7, #0]
    3e6e:	6a99      	ldr	r1, [r3, #40]	; 0x28
    3e70:	2319      	movs	r3, #25
    3e72:	18fc      	adds	r4, r7, r3
    3e74:	231b      	movs	r3, #27
    3e76:	18fb      	adds	r3, r7, r3
    3e78:	781d      	ldrb	r5, [r3, #0]
    3e7a:	230a      	movs	r3, #10
    3e7c:	18fa      	adds	r2, r7, r3
    3e7e:	231a      	movs	r3, #26
    3e80:	18fb      	adds	r3, r7, r3
    3e82:	781b      	ldrb	r3, [r3, #0]
    3e84:	9300      	str	r3, [sp, #0]
    3e86:	002b      	movs	r3, r5
    3e88:	4d53      	ldr	r5, [pc, #332]	; (3fd8 <_usart_set_config+0x2d4>)
    3e8a:	47a8      	blx	r5
    3e8c:	0003      	movs	r3, r0
    3e8e:	7023      	strb	r3, [r4, #0]
    3e90:	e01a      	b.n	3ec8 <_usart_set_config+0x1c4>
    3e92:	683b      	ldr	r3, [r7, #0]
    3e94:	6a1d      	ldr	r5, [r3, #32]
    3e96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3e98:	b2db      	uxtb	r3, r3
    3e9a:	0018      	movs	r0, r3
    3e9c:	4b4c      	ldr	r3, [pc, #304]	; (3fd0 <_usart_set_config+0x2cc>)
    3e9e:	4798      	blx	r3
    3ea0:	2319      	movs	r3, #25
    3ea2:	18fc      	adds	r4, r7, r3
    3ea4:	231b      	movs	r3, #27
    3ea6:	18fb      	adds	r3, r7, r3
    3ea8:	7819      	ldrb	r1, [r3, #0]
    3eaa:	230a      	movs	r3, #10
    3eac:	18fa      	adds	r2, r7, r3
    3eae:	231a      	movs	r3, #26
    3eb0:	18fb      	adds	r3, r7, r3
    3eb2:	781b      	ldrb	r3, [r3, #0]
    3eb4:	9300      	str	r3, [sp, #0]
    3eb6:	000b      	movs	r3, r1
    3eb8:	0001      	movs	r1, r0
    3eba:	0028      	movs	r0, r5
    3ebc:	4d46      	ldr	r5, [pc, #280]	; (3fd8 <_usart_set_config+0x2d4>)
    3ebe:	47a8      	blx	r5
    3ec0:	0003      	movs	r3, r0
    3ec2:	7023      	strb	r3, [r4, #0]
    3ec4:	e000      	b.n	3ec8 <_usart_set_config+0x1c4>
    3ec6:	46c0      	nop			; (mov r8, r8)
    3ec8:	2319      	movs	r3, #25
    3eca:	18fb      	adds	r3, r7, r3
    3ecc:	781b      	ldrb	r3, [r3, #0]
    3ece:	2b00      	cmp	r3, #0
    3ed0:	d003      	beq.n	3eda <_usart_set_config+0x1d6>
    3ed2:	2319      	movs	r3, #25
    3ed4:	18fb      	adds	r3, r7, r3
    3ed6:	781b      	ldrb	r3, [r3, #0]
    3ed8:	e073      	b.n	3fc2 <_usart_set_config+0x2be>
    3eda:	683b      	ldr	r3, [r7, #0]
    3edc:	7e5b      	ldrb	r3, [r3, #25]
    3ede:	2b00      	cmp	r3, #0
    3ee0:	d003      	beq.n	3eea <_usart_set_config+0x1e6>
    3ee2:	683b      	ldr	r3, [r7, #0]
    3ee4:	7e9a      	ldrb	r2, [r3, #26]
    3ee6:	697b      	ldr	r3, [r7, #20]
    3ee8:	739a      	strb	r2, [r3, #14]
    3eea:	230a      	movs	r3, #10
    3eec:	18fb      	adds	r3, r7, r3
    3eee:	881a      	ldrh	r2, [r3, #0]
    3ef0:	697b      	ldr	r3, [r7, #20]
    3ef2:	819a      	strh	r2, [r3, #12]
    3ef4:	6a3a      	ldr	r2, [r7, #32]
    3ef6:	68fb      	ldr	r3, [r7, #12]
    3ef8:	4313      	orrs	r3, r2
    3efa:	623b      	str	r3, [r7, #32]
    3efc:	683b      	ldr	r3, [r7, #0]
    3efe:	2227      	movs	r2, #39	; 0x27
    3f00:	5c9b      	ldrb	r3, [r3, r2]
    3f02:	2201      	movs	r2, #1
    3f04:	4053      	eors	r3, r2
    3f06:	b2db      	uxtb	r3, r3
    3f08:	2b00      	cmp	r3, #0
    3f0a:	d003      	beq.n	3f14 <_usart_set_config+0x210>
    3f0c:	6a3b      	ldr	r3, [r7, #32]
    3f0e:	2204      	movs	r2, #4
    3f10:	4313      	orrs	r3, r2
    3f12:	623b      	str	r3, [r7, #32]
    3f14:	683b      	ldr	r3, [r7, #0]
    3f16:	7e5b      	ldrb	r3, [r3, #25]
    3f18:	029a      	lsls	r2, r3, #10
    3f1a:	683b      	ldr	r3, [r7, #0]
    3f1c:	7f1b      	ldrb	r3, [r3, #28]
    3f1e:	025b      	lsls	r3, r3, #9
    3f20:	431a      	orrs	r2, r3
    3f22:	683b      	ldr	r3, [r7, #0]
    3f24:	7f5b      	ldrb	r3, [r3, #29]
    3f26:	021b      	lsls	r3, r3, #8
    3f28:	431a      	orrs	r2, r3
    3f2a:	683b      	ldr	r3, [r7, #0]
    3f2c:	2124      	movs	r1, #36	; 0x24
    3f2e:	5c5b      	ldrb	r3, [r3, r1]
    3f30:	045b      	lsls	r3, r3, #17
    3f32:	431a      	orrs	r2, r3
    3f34:	683b      	ldr	r3, [r7, #0]
    3f36:	2125      	movs	r1, #37	; 0x25
    3f38:	5c5b      	ldrb	r3, [r3, r1]
    3f3a:	041b      	lsls	r3, r3, #16
    3f3c:	4313      	orrs	r3, r2
    3f3e:	61fb      	str	r3, [r7, #28]
    3f40:	683b      	ldr	r3, [r7, #0]
    3f42:	7a9b      	ldrb	r3, [r3, #10]
    3f44:	001a      	movs	r2, r3
    3f46:	69fb      	ldr	r3, [r7, #28]
    3f48:	4313      	orrs	r3, r2
    3f4a:	61fb      	str	r3, [r7, #28]
    3f4c:	683b      	ldr	r3, [r7, #0]
    3f4e:	7adb      	ldrb	r3, [r3, #11]
    3f50:	001a      	movs	r2, r3
    3f52:	69fb      	ldr	r3, [r7, #28]
    3f54:	4313      	orrs	r3, r2
    3f56:	61fb      	str	r3, [r7, #28]
    3f58:	683b      	ldr	r3, [r7, #0]
    3f5a:	891b      	ldrh	r3, [r3, #8]
    3f5c:	2bff      	cmp	r3, #255	; 0xff
    3f5e:	d00b      	beq.n	3f78 <_usart_set_config+0x274>
    3f60:	6a3b      	ldr	r3, [r7, #32]
    3f62:	2280      	movs	r2, #128	; 0x80
    3f64:	0452      	lsls	r2, r2, #17
    3f66:	4313      	orrs	r3, r2
    3f68:	623b      	str	r3, [r7, #32]
    3f6a:	683b      	ldr	r3, [r7, #0]
    3f6c:	891b      	ldrh	r3, [r3, #8]
    3f6e:	001a      	movs	r2, r3
    3f70:	69fb      	ldr	r3, [r7, #28]
    3f72:	4313      	orrs	r3, r2
    3f74:	61fb      	str	r3, [r7, #28]
    3f76:	e008      	b.n	3f8a <_usart_set_config+0x286>
    3f78:	683b      	ldr	r3, [r7, #0]
    3f7a:	7edb      	ldrb	r3, [r3, #27]
    3f7c:	2b00      	cmp	r3, #0
    3f7e:	d004      	beq.n	3f8a <_usart_set_config+0x286>
    3f80:	6a3b      	ldr	r3, [r7, #32]
    3f82:	2280      	movs	r2, #128	; 0x80
    3f84:	04d2      	lsls	r2, r2, #19
    3f86:	4313      	orrs	r3, r2
    3f88:	623b      	str	r3, [r7, #32]
    3f8a:	683b      	ldr	r3, [r7, #0]
    3f8c:	222c      	movs	r2, #44	; 0x2c
    3f8e:	5c9b      	ldrb	r3, [r3, r2]
    3f90:	2b00      	cmp	r3, #0
    3f92:	d103      	bne.n	3f9c <_usart_set_config+0x298>
    3f94:	4b11      	ldr	r3, [pc, #68]	; (3fdc <_usart_set_config+0x2d8>)
    3f96:	4798      	blx	r3
    3f98:	1e03      	subs	r3, r0, #0
    3f9a:	d003      	beq.n	3fa4 <_usart_set_config+0x2a0>
    3f9c:	6a3b      	ldr	r3, [r7, #32]
    3f9e:	2280      	movs	r2, #128	; 0x80
    3fa0:	4313      	orrs	r3, r2
    3fa2:	623b      	str	r3, [r7, #32]
    3fa4:	687b      	ldr	r3, [r7, #4]
    3fa6:	0018      	movs	r0, r3
    3fa8:	4b0d      	ldr	r3, [pc, #52]	; (3fe0 <_usart_set_config+0x2dc>)
    3faa:	4798      	blx	r3
    3fac:	697b      	ldr	r3, [r7, #20]
    3fae:	69fa      	ldr	r2, [r7, #28]
    3fb0:	605a      	str	r2, [r3, #4]
    3fb2:	687b      	ldr	r3, [r7, #4]
    3fb4:	0018      	movs	r0, r3
    3fb6:	4b0a      	ldr	r3, [pc, #40]	; (3fe0 <_usart_set_config+0x2dc>)
    3fb8:	4798      	blx	r3
    3fba:	697b      	ldr	r3, [r7, #20]
    3fbc:	6a3a      	ldr	r2, [r7, #32]
    3fbe:	601a      	str	r2, [r3, #0]
    3fc0:	2300      	movs	r3, #0
    3fc2:	0018      	movs	r0, r3
    3fc4:	46bd      	mov	sp, r7
    3fc6:	b00a      	add	sp, #40	; 0x28
    3fc8:	bdb0      	pop	{r4, r5, r7, pc}
    3fca:	46c0      	nop			; (mov r8, r8)
    3fcc:	00003105 	.word	0x00003105
    3fd0:	000057b9 	.word	0x000057b9
    3fd4:	00002c87 	.word	0x00002c87
    3fd8:	00002d05 	.word	0x00002d05
    3fdc:	00003ca1 	.word	0x00003ca1
    3fe0:	00003ce1 	.word	0x00003ce1

00003fe4 <usart_init>:
    3fe4:	b590      	push	{r4, r7, lr}
    3fe6:	b093      	sub	sp, #76	; 0x4c
    3fe8:	af00      	add	r7, sp, #0
    3fea:	60f8      	str	r0, [r7, #12]
    3fec:	60b9      	str	r1, [r7, #8]
    3fee:	607a      	str	r2, [r7, #4]
    3ff0:	2333      	movs	r3, #51	; 0x33
    3ff2:	18fb      	adds	r3, r7, r3
    3ff4:	2200      	movs	r2, #0
    3ff6:	701a      	strb	r2, [r3, #0]
    3ff8:	68fb      	ldr	r3, [r7, #12]
    3ffa:	68ba      	ldr	r2, [r7, #8]
    3ffc:	601a      	str	r2, [r3, #0]
    3ffe:	68fb      	ldr	r3, [r7, #12]
    4000:	681b      	ldr	r3, [r3, #0]
    4002:	62fb      	str	r3, [r7, #44]	; 0x2c
    4004:	68fb      	ldr	r3, [r7, #12]
    4006:	681b      	ldr	r3, [r3, #0]
    4008:	0018      	movs	r0, r3
    400a:	4b8f      	ldr	r3, [pc, #572]	; (4248 <usart_init+0x264>)
    400c:	4798      	blx	r3
    400e:	0003      	movs	r3, r0
    4010:	62bb      	str	r3, [r7, #40]	; 0x28
    4012:	6abb      	ldr	r3, [r7, #40]	; 0x28
    4014:	2b05      	cmp	r3, #5
    4016:	d104      	bne.n	4022 <usart_init+0x3e>
    4018:	2301      	movs	r3, #1
    401a:	647b      	str	r3, [r7, #68]	; 0x44
    401c:	2318      	movs	r3, #24
    401e:	643b      	str	r3, [r7, #64]	; 0x40
    4020:	e004      	b.n	402c <usart_init+0x48>
    4022:	6abb      	ldr	r3, [r7, #40]	; 0x28
    4024:	647b      	str	r3, [r7, #68]	; 0x44
    4026:	6abb      	ldr	r3, [r7, #40]	; 0x28
    4028:	3312      	adds	r3, #18
    402a:	643b      	str	r3, [r7, #64]	; 0x40
    402c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    402e:	681b      	ldr	r3, [r3, #0]
    4030:	2201      	movs	r2, #1
    4032:	4013      	ands	r3, r2
    4034:	d001      	beq.n	403a <usart_init+0x56>
    4036:	2305      	movs	r3, #5
    4038:	e102      	b.n	4240 <usart_init+0x25c>
    403a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    403c:	681b      	ldr	r3, [r3, #0]
    403e:	2202      	movs	r2, #2
    4040:	4013      	ands	r3, r2
    4042:	d001      	beq.n	4048 <usart_init+0x64>
    4044:	231c      	movs	r3, #28
    4046:	e0fb      	b.n	4240 <usart_init+0x25c>
    4048:	6abb      	ldr	r3, [r7, #40]	; 0x28
    404a:	2b05      	cmp	r3, #5
    404c:	d108      	bne.n	4060 <usart_init+0x7c>
    404e:	2201      	movs	r2, #1
    4050:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    4052:	409a      	lsls	r2, r3
    4054:	0013      	movs	r3, r2
    4056:	0019      	movs	r1, r3
    4058:	2003      	movs	r0, #3
    405a:	4b7c      	ldr	r3, [pc, #496]	; (424c <usart_init+0x268>)
    405c:	4798      	blx	r3
    405e:	e007      	b.n	4070 <usart_init+0x8c>
    4060:	2201      	movs	r2, #1
    4062:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    4064:	409a      	lsls	r2, r3
    4066:	0013      	movs	r3, r2
    4068:	0019      	movs	r1, r3
    406a:	2002      	movs	r0, #2
    406c:	4b77      	ldr	r3, [pc, #476]	; (424c <usart_init+0x268>)
    406e:	4798      	blx	r3
    4070:	2324      	movs	r3, #36	; 0x24
    4072:	18fb      	adds	r3, r7, r3
    4074:	0018      	movs	r0, r3
    4076:	4b76      	ldr	r3, [pc, #472]	; (4250 <usart_init+0x26c>)
    4078:	4798      	blx	r3
    407a:	687b      	ldr	r3, [r7, #4]
    407c:	222d      	movs	r2, #45	; 0x2d
    407e:	5c9a      	ldrb	r2, [r3, r2]
    4080:	2324      	movs	r3, #36	; 0x24
    4082:	18fb      	adds	r3, r7, r3
    4084:	701a      	strb	r2, [r3, #0]
    4086:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    4088:	b2db      	uxtb	r3, r3
    408a:	2224      	movs	r2, #36	; 0x24
    408c:	18ba      	adds	r2, r7, r2
    408e:	0011      	movs	r1, r2
    4090:	0018      	movs	r0, r3
    4092:	4b70      	ldr	r3, [pc, #448]	; (4254 <usart_init+0x270>)
    4094:	4798      	blx	r3
    4096:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    4098:	b2db      	uxtb	r3, r3
    409a:	0018      	movs	r0, r3
    409c:	4b6e      	ldr	r3, [pc, #440]	; (4258 <usart_init+0x274>)
    409e:	4798      	blx	r3
    40a0:	687b      	ldr	r3, [r7, #4]
    40a2:	222d      	movs	r2, #45	; 0x2d
    40a4:	5c9b      	ldrb	r3, [r3, r2]
    40a6:	2100      	movs	r1, #0
    40a8:	0018      	movs	r0, r3
    40aa:	4b6c      	ldr	r3, [pc, #432]	; (425c <usart_init+0x278>)
    40ac:	4798      	blx	r3
    40ae:	687b      	ldr	r3, [r7, #4]
    40b0:	7ada      	ldrb	r2, [r3, #11]
    40b2:	68fb      	ldr	r3, [r7, #12]
    40b4:	715a      	strb	r2, [r3, #5]
    40b6:	687b      	ldr	r3, [r7, #4]
    40b8:	2224      	movs	r2, #36	; 0x24
    40ba:	5c9a      	ldrb	r2, [r3, r2]
    40bc:	68fb      	ldr	r3, [r7, #12]
    40be:	719a      	strb	r2, [r3, #6]
    40c0:	687b      	ldr	r3, [r7, #4]
    40c2:	2225      	movs	r2, #37	; 0x25
    40c4:	5c9a      	ldrb	r2, [r3, r2]
    40c6:	68fb      	ldr	r3, [r7, #12]
    40c8:	71da      	strb	r2, [r3, #7]
    40ca:	687b      	ldr	r3, [r7, #4]
    40cc:	7eda      	ldrb	r2, [r3, #27]
    40ce:	68fb      	ldr	r3, [r7, #12]
    40d0:	721a      	strb	r2, [r3, #8]
    40d2:	687b      	ldr	r3, [r7, #4]
    40d4:	7f1a      	ldrb	r2, [r3, #28]
    40d6:	68fb      	ldr	r3, [r7, #12]
    40d8:	725a      	strb	r2, [r3, #9]
    40da:	2333      	movs	r3, #51	; 0x33
    40dc:	18fc      	adds	r4, r7, r3
    40de:	687a      	ldr	r2, [r7, #4]
    40e0:	68fb      	ldr	r3, [r7, #12]
    40e2:	0011      	movs	r1, r2
    40e4:	0018      	movs	r0, r3
    40e6:	4b5e      	ldr	r3, [pc, #376]	; (4260 <usart_init+0x27c>)
    40e8:	4798      	blx	r3
    40ea:	0003      	movs	r3, r0
    40ec:	7023      	strb	r3, [r4, #0]
    40ee:	2333      	movs	r3, #51	; 0x33
    40f0:	18fb      	adds	r3, r7, r3
    40f2:	781b      	ldrb	r3, [r3, #0]
    40f4:	2b00      	cmp	r3, #0
    40f6:	d003      	beq.n	4100 <usart_init+0x11c>
    40f8:	2333      	movs	r3, #51	; 0x33
    40fa:	18fb      	adds	r3, r7, r3
    40fc:	781b      	ldrb	r3, [r3, #0]
    40fe:	e09f      	b.n	4240 <usart_init+0x25c>
    4100:	2320      	movs	r3, #32
    4102:	18fb      	adds	r3, r7, r3
    4104:	0018      	movs	r0, r3
    4106:	4b57      	ldr	r3, [pc, #348]	; (4264 <usart_init+0x280>)
    4108:	4798      	blx	r3
    410a:	2320      	movs	r3, #32
    410c:	18fb      	adds	r3, r7, r3
    410e:	2200      	movs	r2, #0
    4110:	705a      	strb	r2, [r3, #1]
    4112:	2320      	movs	r3, #32
    4114:	18fb      	adds	r3, r7, r3
    4116:	2200      	movs	r2, #0
    4118:	709a      	strb	r2, [r3, #2]
    411a:	687b      	ldr	r3, [r7, #4]
    411c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    411e:	2310      	movs	r3, #16
    4120:	18fb      	adds	r3, r7, r3
    4122:	601a      	str	r2, [r3, #0]
    4124:	687b      	ldr	r3, [r7, #4]
    4126:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    4128:	2310      	movs	r3, #16
    412a:	18fb      	adds	r3, r7, r3
    412c:	605a      	str	r2, [r3, #4]
    412e:	687b      	ldr	r3, [r7, #4]
    4130:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    4132:	2310      	movs	r3, #16
    4134:	18fb      	adds	r3, r7, r3
    4136:	609a      	str	r2, [r3, #8]
    4138:	687b      	ldr	r3, [r7, #4]
    413a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    413c:	2310      	movs	r3, #16
    413e:	18fb      	adds	r3, r7, r3
    4140:	60da      	str	r2, [r3, #12]
    4142:	233f      	movs	r3, #63	; 0x3f
    4144:	18fb      	adds	r3, r7, r3
    4146:	2200      	movs	r2, #0
    4148:	701a      	strb	r2, [r3, #0]
    414a:	e02c      	b.n	41a6 <usart_init+0x1c2>
    414c:	233f      	movs	r3, #63	; 0x3f
    414e:	18fb      	adds	r3, r7, r3
    4150:	781a      	ldrb	r2, [r3, #0]
    4152:	2310      	movs	r3, #16
    4154:	18fb      	adds	r3, r7, r3
    4156:	0092      	lsls	r2, r2, #2
    4158:	58d3      	ldr	r3, [r2, r3]
    415a:	63bb      	str	r3, [r7, #56]	; 0x38
    415c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    415e:	2b00      	cmp	r3, #0
    4160:	d109      	bne.n	4176 <usart_init+0x192>
    4162:	233f      	movs	r3, #63	; 0x3f
    4164:	18fb      	adds	r3, r7, r3
    4166:	781a      	ldrb	r2, [r3, #0]
    4168:	68bb      	ldr	r3, [r7, #8]
    416a:	0011      	movs	r1, r2
    416c:	0018      	movs	r0, r3
    416e:	4b3e      	ldr	r3, [pc, #248]	; (4268 <usart_init+0x284>)
    4170:	4798      	blx	r3
    4172:	0003      	movs	r3, r0
    4174:	63bb      	str	r3, [r7, #56]	; 0x38
    4176:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    4178:	3301      	adds	r3, #1
    417a:	d00d      	beq.n	4198 <usart_init+0x1b4>
    417c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    417e:	b2da      	uxtb	r2, r3
    4180:	2320      	movs	r3, #32
    4182:	18fb      	adds	r3, r7, r3
    4184:	701a      	strb	r2, [r3, #0]
    4186:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    4188:	0c1b      	lsrs	r3, r3, #16
    418a:	b2db      	uxtb	r3, r3
    418c:	2220      	movs	r2, #32
    418e:	18ba      	adds	r2, r7, r2
    4190:	0011      	movs	r1, r2
    4192:	0018      	movs	r0, r3
    4194:	4b35      	ldr	r3, [pc, #212]	; (426c <usart_init+0x288>)
    4196:	4798      	blx	r3
    4198:	233f      	movs	r3, #63	; 0x3f
    419a:	18fb      	adds	r3, r7, r3
    419c:	781a      	ldrb	r2, [r3, #0]
    419e:	233f      	movs	r3, #63	; 0x3f
    41a0:	18fb      	adds	r3, r7, r3
    41a2:	3201      	adds	r2, #1
    41a4:	701a      	strb	r2, [r3, #0]
    41a6:	233f      	movs	r3, #63	; 0x3f
    41a8:	18fb      	adds	r3, r7, r3
    41aa:	781b      	ldrb	r3, [r3, #0]
    41ac:	2b03      	cmp	r3, #3
    41ae:	d9cd      	bls.n	414c <usart_init+0x168>
    41b0:	2300      	movs	r3, #0
    41b2:	637b      	str	r3, [r7, #52]	; 0x34
    41b4:	e00a      	b.n	41cc <usart_init+0x1e8>
    41b6:	68fa      	ldr	r2, [r7, #12]
    41b8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    41ba:	3302      	adds	r3, #2
    41bc:	009b      	lsls	r3, r3, #2
    41be:	18d3      	adds	r3, r2, r3
    41c0:	3304      	adds	r3, #4
    41c2:	2200      	movs	r2, #0
    41c4:	601a      	str	r2, [r3, #0]
    41c6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    41c8:	3301      	adds	r3, #1
    41ca:	637b      	str	r3, [r7, #52]	; 0x34
    41cc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    41ce:	2b05      	cmp	r3, #5
    41d0:	d9f1      	bls.n	41b6 <usart_init+0x1d2>
    41d2:	68fb      	ldr	r3, [r7, #12]
    41d4:	2200      	movs	r2, #0
    41d6:	629a      	str	r2, [r3, #40]	; 0x28
    41d8:	68fb      	ldr	r3, [r7, #12]
    41da:	2200      	movs	r2, #0
    41dc:	625a      	str	r2, [r3, #36]	; 0x24
    41de:	68fb      	ldr	r3, [r7, #12]
    41e0:	2200      	movs	r2, #0
    41e2:	85da      	strh	r2, [r3, #46]	; 0x2e
    41e4:	68fb      	ldr	r3, [r7, #12]
    41e6:	2200      	movs	r2, #0
    41e8:	859a      	strh	r2, [r3, #44]	; 0x2c
    41ea:	68fb      	ldr	r3, [r7, #12]
    41ec:	2230      	movs	r2, #48	; 0x30
    41ee:	2100      	movs	r1, #0
    41f0:	5499      	strb	r1, [r3, r2]
    41f2:	68fb      	ldr	r3, [r7, #12]
    41f4:	2231      	movs	r2, #49	; 0x31
    41f6:	2100      	movs	r1, #0
    41f8:	5499      	strb	r1, [r3, r2]
    41fa:	68fb      	ldr	r3, [r7, #12]
    41fc:	2232      	movs	r2, #50	; 0x32
    41fe:	2100      	movs	r1, #0
    4200:	5499      	strb	r1, [r3, r2]
    4202:	68fb      	ldr	r3, [r7, #12]
    4204:	2233      	movs	r2, #51	; 0x33
    4206:	2100      	movs	r1, #0
    4208:	5499      	strb	r1, [r3, r2]
    420a:	68fb      	ldr	r3, [r7, #12]
    420c:	681b      	ldr	r3, [r3, #0]
    420e:	2227      	movs	r2, #39	; 0x27
    4210:	18bc      	adds	r4, r7, r2
    4212:	0018      	movs	r0, r3
    4214:	4b0c      	ldr	r3, [pc, #48]	; (4248 <usart_init+0x264>)
    4216:	4798      	blx	r3
    4218:	0003      	movs	r3, r0
    421a:	7023      	strb	r3, [r4, #0]
    421c:	4a14      	ldr	r2, [pc, #80]	; (4270 <usart_init+0x28c>)
    421e:	2327      	movs	r3, #39	; 0x27
    4220:	18fb      	adds	r3, r7, r3
    4222:	781b      	ldrb	r3, [r3, #0]
    4224:	0011      	movs	r1, r2
    4226:	0018      	movs	r0, r3
    4228:	4b12      	ldr	r3, [pc, #72]	; (4274 <usart_init+0x290>)
    422a:	4798      	blx	r3
    422c:	2327      	movs	r3, #39	; 0x27
    422e:	18fb      	adds	r3, r7, r3
    4230:	781a      	ldrb	r2, [r3, #0]
    4232:	4b11      	ldr	r3, [pc, #68]	; (4278 <usart_init+0x294>)
    4234:	0092      	lsls	r2, r2, #2
    4236:	68f9      	ldr	r1, [r7, #12]
    4238:	50d1      	str	r1, [r2, r3]
    423a:	2333      	movs	r3, #51	; 0x33
    423c:	18fb      	adds	r3, r7, r3
    423e:	781b      	ldrb	r3, [r3, #0]
    4240:	0018      	movs	r0, r3
    4242:	46bd      	mov	sp, r7
    4244:	b013      	add	sp, #76	; 0x4c
    4246:	bd90      	pop	{r4, r7, pc}
    4248:	00003105 	.word	0x00003105
    424c:	00003bfd 	.word	0x00003bfd
    4250:	00003be5 	.word	0x00003be5
    4254:	000056c9 	.word	0x000056c9
    4258:	00005709 	.word	0x00005709
    425c:	00002ec5 	.word	0x00002ec5
    4260:	00003d05 	.word	0x00003d05
    4264:	00003c79 	.word	0x00003c79
    4268:	00002f51 	.word	0x00002f51
    426c:	0000597d 	.word	0x0000597d
    4270:	00004501 	.word	0x00004501
    4274:	00003169 	.word	0x00003169
    4278:	20000d1c 	.word	0x20000d1c

0000427c <usart_write_wait>:
    427c:	b580      	push	{r7, lr}
    427e:	b084      	sub	sp, #16
    4280:	af00      	add	r7, sp, #0
    4282:	6078      	str	r0, [r7, #4]
    4284:	000a      	movs	r2, r1
    4286:	1cbb      	adds	r3, r7, #2
    4288:	801a      	strh	r2, [r3, #0]
    428a:	687b      	ldr	r3, [r7, #4]
    428c:	681b      	ldr	r3, [r3, #0]
    428e:	60fb      	str	r3, [r7, #12]
    4290:	687b      	ldr	r3, [r7, #4]
    4292:	79db      	ldrb	r3, [r3, #7]
    4294:	2201      	movs	r2, #1
    4296:	4053      	eors	r3, r2
    4298:	b2db      	uxtb	r3, r3
    429a:	2b00      	cmp	r3, #0
    429c:	d001      	beq.n	42a2 <usart_write_wait+0x26>
    429e:	231c      	movs	r3, #28
    42a0:	e013      	b.n	42ca <usart_write_wait+0x4e>
    42a2:	687b      	ldr	r3, [r7, #4]
    42a4:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
    42a6:	b29b      	uxth	r3, r3
    42a8:	2b00      	cmp	r3, #0
    42aa:	d001      	beq.n	42b0 <usart_write_wait+0x34>
    42ac:	2305      	movs	r3, #5
    42ae:	e00c      	b.n	42ca <usart_write_wait+0x4e>
    42b0:	68fb      	ldr	r3, [r7, #12]
    42b2:	1cba      	adds	r2, r7, #2
    42b4:	8812      	ldrh	r2, [r2, #0]
    42b6:	851a      	strh	r2, [r3, #40]	; 0x28
    42b8:	46c0      	nop			; (mov r8, r8)
    42ba:	68fb      	ldr	r3, [r7, #12]
    42bc:	7e1b      	ldrb	r3, [r3, #24]
    42be:	b2db      	uxtb	r3, r3
    42c0:	001a      	movs	r2, r3
    42c2:	2302      	movs	r3, #2
    42c4:	4013      	ands	r3, r2
    42c6:	d0f8      	beq.n	42ba <usart_write_wait+0x3e>
    42c8:	2300      	movs	r3, #0
    42ca:	0018      	movs	r0, r3
    42cc:	46bd      	mov	sp, r7
    42ce:	b004      	add	sp, #16
    42d0:	bd80      	pop	{r7, pc}

000042d2 <usart_read_wait>:
    42d2:	b580      	push	{r7, lr}
    42d4:	b084      	sub	sp, #16
    42d6:	af00      	add	r7, sp, #0
    42d8:	6078      	str	r0, [r7, #4]
    42da:	6039      	str	r1, [r7, #0]
    42dc:	687b      	ldr	r3, [r7, #4]
    42de:	681b      	ldr	r3, [r3, #0]
    42e0:	60fb      	str	r3, [r7, #12]
    42e2:	687b      	ldr	r3, [r7, #4]
    42e4:	799b      	ldrb	r3, [r3, #6]
    42e6:	2201      	movs	r2, #1
    42e8:	4053      	eors	r3, r2
    42ea:	b2db      	uxtb	r3, r3
    42ec:	2b00      	cmp	r3, #0
    42ee:	d001      	beq.n	42f4 <usart_read_wait+0x22>
    42f0:	231c      	movs	r3, #28
    42f2:	e05a      	b.n	43aa <usart_read_wait+0xd8>
    42f4:	687b      	ldr	r3, [r7, #4]
    42f6:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
    42f8:	b29b      	uxth	r3, r3
    42fa:	2b00      	cmp	r3, #0
    42fc:	d001      	beq.n	4302 <usart_read_wait+0x30>
    42fe:	2305      	movs	r3, #5
    4300:	e053      	b.n	43aa <usart_read_wait+0xd8>
    4302:	68fb      	ldr	r3, [r7, #12]
    4304:	7e1b      	ldrb	r3, [r3, #24]
    4306:	b2db      	uxtb	r3, r3
    4308:	001a      	movs	r2, r3
    430a:	2304      	movs	r3, #4
    430c:	4013      	ands	r3, r2
    430e:	d101      	bne.n	4314 <usart_read_wait+0x42>
    4310:	2305      	movs	r3, #5
    4312:	e04a      	b.n	43aa <usart_read_wait+0xd8>
    4314:	68fb      	ldr	r3, [r7, #12]
    4316:	8b5b      	ldrh	r3, [r3, #26]
    4318:	b29b      	uxth	r3, r3
    431a:	b2da      	uxtb	r2, r3
    431c:	230b      	movs	r3, #11
    431e:	18fb      	adds	r3, r7, r3
    4320:	213f      	movs	r1, #63	; 0x3f
    4322:	400a      	ands	r2, r1
    4324:	701a      	strb	r2, [r3, #0]
    4326:	230b      	movs	r3, #11
    4328:	18fb      	adds	r3, r7, r3
    432a:	781b      	ldrb	r3, [r3, #0]
    432c:	2b00      	cmp	r3, #0
    432e:	d036      	beq.n	439e <usart_read_wait+0xcc>
    4330:	230b      	movs	r3, #11
    4332:	18fb      	adds	r3, r7, r3
    4334:	781b      	ldrb	r3, [r3, #0]
    4336:	2202      	movs	r2, #2
    4338:	4013      	ands	r3, r2
    433a:	d004      	beq.n	4346 <usart_read_wait+0x74>
    433c:	68fb      	ldr	r3, [r7, #12]
    433e:	2202      	movs	r2, #2
    4340:	835a      	strh	r2, [r3, #26]
    4342:	231a      	movs	r3, #26
    4344:	e031      	b.n	43aa <usart_read_wait+0xd8>
    4346:	230b      	movs	r3, #11
    4348:	18fb      	adds	r3, r7, r3
    434a:	781b      	ldrb	r3, [r3, #0]
    434c:	2204      	movs	r2, #4
    434e:	4013      	ands	r3, r2
    4350:	d004      	beq.n	435c <usart_read_wait+0x8a>
    4352:	68fb      	ldr	r3, [r7, #12]
    4354:	2204      	movs	r2, #4
    4356:	835a      	strh	r2, [r3, #26]
    4358:	231e      	movs	r3, #30
    435a:	e026      	b.n	43aa <usart_read_wait+0xd8>
    435c:	230b      	movs	r3, #11
    435e:	18fb      	adds	r3, r7, r3
    4360:	781b      	ldrb	r3, [r3, #0]
    4362:	2201      	movs	r2, #1
    4364:	4013      	ands	r3, r2
    4366:	d004      	beq.n	4372 <usart_read_wait+0xa0>
    4368:	68fb      	ldr	r3, [r7, #12]
    436a:	2201      	movs	r2, #1
    436c:	835a      	strh	r2, [r3, #26]
    436e:	2313      	movs	r3, #19
    4370:	e01b      	b.n	43aa <usart_read_wait+0xd8>
    4372:	230b      	movs	r3, #11
    4374:	18fb      	adds	r3, r7, r3
    4376:	781b      	ldrb	r3, [r3, #0]
    4378:	2210      	movs	r2, #16
    437a:	4013      	ands	r3, r2
    437c:	d004      	beq.n	4388 <usart_read_wait+0xb6>
    437e:	68fb      	ldr	r3, [r7, #12]
    4380:	2210      	movs	r2, #16
    4382:	835a      	strh	r2, [r3, #26]
    4384:	2342      	movs	r3, #66	; 0x42
    4386:	e010      	b.n	43aa <usart_read_wait+0xd8>
    4388:	230b      	movs	r3, #11
    438a:	18fb      	adds	r3, r7, r3
    438c:	781b      	ldrb	r3, [r3, #0]
    438e:	2220      	movs	r2, #32
    4390:	4013      	ands	r3, r2
    4392:	d004      	beq.n	439e <usart_read_wait+0xcc>
    4394:	68fb      	ldr	r3, [r7, #12]
    4396:	2220      	movs	r2, #32
    4398:	835a      	strh	r2, [r3, #26]
    439a:	2341      	movs	r3, #65	; 0x41
    439c:	e005      	b.n	43aa <usart_read_wait+0xd8>
    439e:	68fb      	ldr	r3, [r7, #12]
    43a0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
    43a2:	b29a      	uxth	r2, r3
    43a4:	683b      	ldr	r3, [r7, #0]
    43a6:	801a      	strh	r2, [r3, #0]
    43a8:	2300      	movs	r3, #0
    43aa:	0018      	movs	r0, r3
    43ac:	46bd      	mov	sp, r7
    43ae:	b004      	add	sp, #16
    43b0:	bd80      	pop	{r7, pc}
	...

000043b4 <usart_read_buffer_wait>:
    43b4:	b590      	push	{r4, r7, lr}
    43b6:	b089      	sub	sp, #36	; 0x24
    43b8:	af00      	add	r7, sp, #0
    43ba:	60f8      	str	r0, [r7, #12]
    43bc:	60b9      	str	r1, [r7, #8]
    43be:	1dbb      	adds	r3, r7, #6
    43c0:	801a      	strh	r2, [r3, #0]
    43c2:	1dbb      	adds	r3, r7, #6
    43c4:	881b      	ldrh	r3, [r3, #0]
    43c6:	2b00      	cmp	r3, #0
    43c8:	d101      	bne.n	43ce <usart_read_buffer_wait+0x1a>
    43ca:	2317      	movs	r3, #23
    43cc:	e06d      	b.n	44aa <usart_read_buffer_wait+0xf6>
    43ce:	68fb      	ldr	r3, [r7, #12]
    43d0:	799b      	ldrb	r3, [r3, #6]
    43d2:	2201      	movs	r2, #1
    43d4:	4053      	eors	r3, r2
    43d6:	b2db      	uxtb	r3, r3
    43d8:	2b00      	cmp	r3, #0
    43da:	d001      	beq.n	43e0 <usart_read_buffer_wait+0x2c>
    43dc:	231c      	movs	r3, #28
    43de:	e064      	b.n	44aa <usart_read_buffer_wait+0xf6>
    43e0:	68fb      	ldr	r3, [r7, #12]
    43e2:	681b      	ldr	r3, [r3, #0]
    43e4:	617b      	str	r3, [r7, #20]
    43e6:	231e      	movs	r3, #30
    43e8:	18fb      	adds	r3, r7, r3
    43ea:	2200      	movs	r2, #0
    43ec:	801a      	strh	r2, [r3, #0]
    43ee:	e054      	b.n	449a <usart_read_buffer_wait+0xe6>
    43f0:	2300      	movs	r3, #0
    43f2:	61bb      	str	r3, [r7, #24]
    43f4:	e00f      	b.n	4416 <usart_read_buffer_wait+0x62>
    43f6:	697b      	ldr	r3, [r7, #20]
    43f8:	7e1b      	ldrb	r3, [r3, #24]
    43fa:	b2db      	uxtb	r3, r3
    43fc:	001a      	movs	r2, r3
    43fe:	2304      	movs	r3, #4
    4400:	4013      	ands	r3, r2
    4402:	d10d      	bne.n	4420 <usart_read_buffer_wait+0x6c>
    4404:	69bb      	ldr	r3, [r7, #24]
    4406:	4a2b      	ldr	r2, [pc, #172]	; (44b4 <usart_read_buffer_wait+0x100>)
    4408:	4293      	cmp	r3, r2
    440a:	d101      	bne.n	4410 <usart_read_buffer_wait+0x5c>
    440c:	2312      	movs	r3, #18
    440e:	e04c      	b.n	44aa <usart_read_buffer_wait+0xf6>
    4410:	69bb      	ldr	r3, [r7, #24]
    4412:	3301      	adds	r3, #1
    4414:	61bb      	str	r3, [r7, #24]
    4416:	69bb      	ldr	r3, [r7, #24]
    4418:	4a26      	ldr	r2, [pc, #152]	; (44b4 <usart_read_buffer_wait+0x100>)
    441a:	4293      	cmp	r3, r2
    441c:	d9eb      	bls.n	43f6 <usart_read_buffer_wait+0x42>
    441e:	e000      	b.n	4422 <usart_read_buffer_wait+0x6e>
    4420:	46c0      	nop			; (mov r8, r8)
    4422:	2310      	movs	r3, #16
    4424:	18fb      	adds	r3, r7, r3
    4426:	2200      	movs	r2, #0
    4428:	801a      	strh	r2, [r3, #0]
    442a:	2313      	movs	r3, #19
    442c:	18fc      	adds	r4, r7, r3
    442e:	2310      	movs	r3, #16
    4430:	18fa      	adds	r2, r7, r3
    4432:	68fb      	ldr	r3, [r7, #12]
    4434:	0011      	movs	r1, r2
    4436:	0018      	movs	r0, r3
    4438:	4b1f      	ldr	r3, [pc, #124]	; (44b8 <usart_read_buffer_wait+0x104>)
    443a:	4798      	blx	r3
    443c:	0003      	movs	r3, r0
    443e:	7023      	strb	r3, [r4, #0]
    4440:	2313      	movs	r3, #19
    4442:	18fb      	adds	r3, r7, r3
    4444:	781b      	ldrb	r3, [r3, #0]
    4446:	2b00      	cmp	r3, #0
    4448:	d003      	beq.n	4452 <usart_read_buffer_wait+0x9e>
    444a:	2313      	movs	r3, #19
    444c:	18fb      	adds	r3, r7, r3
    444e:	781b      	ldrb	r3, [r3, #0]
    4450:	e02b      	b.n	44aa <usart_read_buffer_wait+0xf6>
    4452:	231e      	movs	r3, #30
    4454:	18fb      	adds	r3, r7, r3
    4456:	881b      	ldrh	r3, [r3, #0]
    4458:	221e      	movs	r2, #30
    445a:	18ba      	adds	r2, r7, r2
    445c:	1c59      	adds	r1, r3, #1
    445e:	8011      	strh	r1, [r2, #0]
    4460:	001a      	movs	r2, r3
    4462:	68bb      	ldr	r3, [r7, #8]
    4464:	189b      	adds	r3, r3, r2
    4466:	2210      	movs	r2, #16
    4468:	18ba      	adds	r2, r7, r2
    446a:	8812      	ldrh	r2, [r2, #0]
    446c:	b2d2      	uxtb	r2, r2
    446e:	701a      	strb	r2, [r3, #0]
    4470:	68fb      	ldr	r3, [r7, #12]
    4472:	795b      	ldrb	r3, [r3, #5]
    4474:	2b01      	cmp	r3, #1
    4476:	d110      	bne.n	449a <usart_read_buffer_wait+0xe6>
    4478:	231e      	movs	r3, #30
    447a:	18fb      	adds	r3, r7, r3
    447c:	881b      	ldrh	r3, [r3, #0]
    447e:	221e      	movs	r2, #30
    4480:	18ba      	adds	r2, r7, r2
    4482:	1c59      	adds	r1, r3, #1
    4484:	8011      	strh	r1, [r2, #0]
    4486:	001a      	movs	r2, r3
    4488:	68bb      	ldr	r3, [r7, #8]
    448a:	189b      	adds	r3, r3, r2
    448c:	2210      	movs	r2, #16
    448e:	18ba      	adds	r2, r7, r2
    4490:	8812      	ldrh	r2, [r2, #0]
    4492:	0a12      	lsrs	r2, r2, #8
    4494:	b292      	uxth	r2, r2
    4496:	b2d2      	uxtb	r2, r2
    4498:	701a      	strb	r2, [r3, #0]
    449a:	1dbb      	adds	r3, r7, #6
    449c:	881b      	ldrh	r3, [r3, #0]
    449e:	1dba      	adds	r2, r7, #6
    44a0:	1e59      	subs	r1, r3, #1
    44a2:	8011      	strh	r1, [r2, #0]
    44a4:	2b00      	cmp	r3, #0
    44a6:	d1a3      	bne.n	43f0 <usart_read_buffer_wait+0x3c>
    44a8:	2300      	movs	r3, #0
    44aa:	0018      	movs	r0, r3
    44ac:	46bd      	mov	sp, r7
    44ae:	b009      	add	sp, #36	; 0x24
    44b0:	bd90      	pop	{r4, r7, pc}
    44b2:	46c0      	nop			; (mov r8, r8)
    44b4:	0000ffff 	.word	0x0000ffff
    44b8:	000042d3 	.word	0x000042d3

000044bc <usart_is_syncing>:
    44bc:	b580      	push	{r7, lr}
    44be:	b084      	sub	sp, #16
    44c0:	af00      	add	r7, sp, #0
    44c2:	6078      	str	r0, [r7, #4]
    44c4:	687b      	ldr	r3, [r7, #4]
    44c6:	681b      	ldr	r3, [r3, #0]
    44c8:	60fb      	str	r3, [r7, #12]
    44ca:	68fb      	ldr	r3, [r7, #12]
    44cc:	69db      	ldr	r3, [r3, #28]
    44ce:	1e5a      	subs	r2, r3, #1
    44d0:	4193      	sbcs	r3, r2
    44d2:	b2db      	uxtb	r3, r3
    44d4:	0018      	movs	r0, r3
    44d6:	46bd      	mov	sp, r7
    44d8:	b004      	add	sp, #16
    44da:	bd80      	pop	{r7, pc}

000044dc <_usart_wait_for_sync>:
    44dc:	b580      	push	{r7, lr}
    44de:	b082      	sub	sp, #8
    44e0:	af00      	add	r7, sp, #0
    44e2:	6078      	str	r0, [r7, #4]
    44e4:	46c0      	nop			; (mov r8, r8)
    44e6:	687b      	ldr	r3, [r7, #4]
    44e8:	0018      	movs	r0, r3
    44ea:	4b04      	ldr	r3, [pc, #16]	; (44fc <_usart_wait_for_sync+0x20>)
    44ec:	4798      	blx	r3
    44ee:	1e03      	subs	r3, r0, #0
    44f0:	d1f9      	bne.n	44e6 <_usart_wait_for_sync+0xa>
    44f2:	46c0      	nop			; (mov r8, r8)
    44f4:	46bd      	mov	sp, r7
    44f6:	b002      	add	sp, #8
    44f8:	bd80      	pop	{r7, pc}
    44fa:	46c0      	nop			; (mov r8, r8)
    44fc:	000044bd 	.word	0x000044bd

00004500 <_usart_interrupt_handler>:
    4500:	b580      	push	{r7, lr}
    4502:	b088      	sub	sp, #32
    4504:	af00      	add	r7, sp, #0
    4506:	0002      	movs	r2, r0
    4508:	1dfb      	adds	r3, r7, #7
    450a:	701a      	strb	r2, [r3, #0]
    450c:	1dfb      	adds	r3, r7, #7
    450e:	781a      	ldrb	r2, [r3, #0]
    4510:	4ba3      	ldr	r3, [pc, #652]	; (47a0 <_usart_interrupt_handler+0x2a0>)
    4512:	0092      	lsls	r2, r2, #2
    4514:	58d3      	ldr	r3, [r2, r3]
    4516:	61bb      	str	r3, [r7, #24]
    4518:	69bb      	ldr	r3, [r7, #24]
    451a:	681b      	ldr	r3, [r3, #0]
    451c:	617b      	str	r3, [r7, #20]
    451e:	69bb      	ldr	r3, [r7, #24]
    4520:	0018      	movs	r0, r3
    4522:	4ba0      	ldr	r3, [pc, #640]	; (47a4 <_usart_interrupt_handler+0x2a4>)
    4524:	4798      	blx	r3
    4526:	697b      	ldr	r3, [r7, #20]
    4528:	7e1b      	ldrb	r3, [r3, #24]
    452a:	b2da      	uxtb	r2, r3
    452c:	2312      	movs	r3, #18
    452e:	18fb      	adds	r3, r7, r3
    4530:	801a      	strh	r2, [r3, #0]
    4532:	697b      	ldr	r3, [r7, #20]
    4534:	7d9b      	ldrb	r3, [r3, #22]
    4536:	b2db      	uxtb	r3, r3
    4538:	b29a      	uxth	r2, r3
    453a:	2312      	movs	r3, #18
    453c:	18fb      	adds	r3, r7, r3
    453e:	2112      	movs	r1, #18
    4540:	1879      	adds	r1, r7, r1
    4542:	8809      	ldrh	r1, [r1, #0]
    4544:	400a      	ands	r2, r1
    4546:	801a      	strh	r2, [r3, #0]
    4548:	69bb      	ldr	r3, [r7, #24]
    454a:	2230      	movs	r2, #48	; 0x30
    454c:	5c9b      	ldrb	r3, [r3, r2]
    454e:	69ba      	ldr	r2, [r7, #24]
    4550:	2131      	movs	r1, #49	; 0x31
    4552:	5c52      	ldrb	r2, [r2, r1]
    4554:	4013      	ands	r3, r2
    4556:	b2da      	uxtb	r2, r3
    4558:	2310      	movs	r3, #16
    455a:	18fb      	adds	r3, r7, r3
    455c:	801a      	strh	r2, [r3, #0]
    455e:	2312      	movs	r3, #18
    4560:	18fb      	adds	r3, r7, r3
    4562:	881b      	ldrh	r3, [r3, #0]
    4564:	2201      	movs	r2, #1
    4566:	4013      	ands	r3, r2
    4568:	d044      	beq.n	45f4 <_usart_interrupt_handler+0xf4>
    456a:	69bb      	ldr	r3, [r7, #24]
    456c:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
    456e:	b29b      	uxth	r3, r3
    4570:	2b00      	cmp	r3, #0
    4572:	d03c      	beq.n	45ee <_usart_interrupt_handler+0xee>
    4574:	69bb      	ldr	r3, [r7, #24]
    4576:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    4578:	781b      	ldrb	r3, [r3, #0]
    457a:	b2da      	uxtb	r2, r3
    457c:	231c      	movs	r3, #28
    457e:	18fb      	adds	r3, r7, r3
    4580:	801a      	strh	r2, [r3, #0]
    4582:	69bb      	ldr	r3, [r7, #24]
    4584:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    4586:	1c5a      	adds	r2, r3, #1
    4588:	69bb      	ldr	r3, [r7, #24]
    458a:	629a      	str	r2, [r3, #40]	; 0x28
    458c:	69bb      	ldr	r3, [r7, #24]
    458e:	795b      	ldrb	r3, [r3, #5]
    4590:	2b01      	cmp	r3, #1
    4592:	d113      	bne.n	45bc <_usart_interrupt_handler+0xbc>
    4594:	69bb      	ldr	r3, [r7, #24]
    4596:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    4598:	781b      	ldrb	r3, [r3, #0]
    459a:	b2db      	uxtb	r3, r3
    459c:	021b      	lsls	r3, r3, #8
    459e:	b21a      	sxth	r2, r3
    45a0:	231c      	movs	r3, #28
    45a2:	18fb      	adds	r3, r7, r3
    45a4:	2100      	movs	r1, #0
    45a6:	5e5b      	ldrsh	r3, [r3, r1]
    45a8:	4313      	orrs	r3, r2
    45aa:	b21a      	sxth	r2, r3
    45ac:	231c      	movs	r3, #28
    45ae:	18fb      	adds	r3, r7, r3
    45b0:	801a      	strh	r2, [r3, #0]
    45b2:	69bb      	ldr	r3, [r7, #24]
    45b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    45b6:	1c5a      	adds	r2, r3, #1
    45b8:	69bb      	ldr	r3, [r7, #24]
    45ba:	629a      	str	r2, [r3, #40]	; 0x28
    45bc:	231c      	movs	r3, #28
    45be:	18fb      	adds	r3, r7, r3
    45c0:	881b      	ldrh	r3, [r3, #0]
    45c2:	05db      	lsls	r3, r3, #23
    45c4:	0ddb      	lsrs	r3, r3, #23
    45c6:	b29a      	uxth	r2, r3
    45c8:	697b      	ldr	r3, [r7, #20]
    45ca:	851a      	strh	r2, [r3, #40]	; 0x28
    45cc:	69bb      	ldr	r3, [r7, #24]
    45ce:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
    45d0:	b29b      	uxth	r3, r3
    45d2:	3b01      	subs	r3, #1
    45d4:	b29b      	uxth	r3, r3
    45d6:	69ba      	ldr	r2, [r7, #24]
    45d8:	1c19      	adds	r1, r3, #0
    45da:	85d1      	strh	r1, [r2, #46]	; 0x2e
    45dc:	2b00      	cmp	r3, #0
    45de:	d109      	bne.n	45f4 <_usart_interrupt_handler+0xf4>
    45e0:	697b      	ldr	r3, [r7, #20]
    45e2:	2201      	movs	r2, #1
    45e4:	751a      	strb	r2, [r3, #20]
    45e6:	697b      	ldr	r3, [r7, #20]
    45e8:	2202      	movs	r2, #2
    45ea:	759a      	strb	r2, [r3, #22]
    45ec:	e002      	b.n	45f4 <_usart_interrupt_handler+0xf4>
    45ee:	697b      	ldr	r3, [r7, #20]
    45f0:	2201      	movs	r2, #1
    45f2:	751a      	strb	r2, [r3, #20]
    45f4:	2312      	movs	r3, #18
    45f6:	18fb      	adds	r3, r7, r3
    45f8:	881b      	ldrh	r3, [r3, #0]
    45fa:	2202      	movs	r2, #2
    45fc:	4013      	ands	r3, r2
    45fe:	d011      	beq.n	4624 <_usart_interrupt_handler+0x124>
    4600:	697b      	ldr	r3, [r7, #20]
    4602:	2202      	movs	r2, #2
    4604:	751a      	strb	r2, [r3, #20]
    4606:	69bb      	ldr	r3, [r7, #24]
    4608:	2233      	movs	r2, #51	; 0x33
    460a:	2100      	movs	r1, #0
    460c:	5499      	strb	r1, [r3, r2]
    460e:	2310      	movs	r3, #16
    4610:	18fb      	adds	r3, r7, r3
    4612:	881b      	ldrh	r3, [r3, #0]
    4614:	2201      	movs	r2, #1
    4616:	4013      	ands	r3, r2
    4618:	d004      	beq.n	4624 <_usart_interrupt_handler+0x124>
    461a:	69bb      	ldr	r3, [r7, #24]
    461c:	68db      	ldr	r3, [r3, #12]
    461e:	69ba      	ldr	r2, [r7, #24]
    4620:	0010      	movs	r0, r2
    4622:	4798      	blx	r3
    4624:	2312      	movs	r3, #18
    4626:	18fb      	adds	r3, r7, r3
    4628:	881b      	ldrh	r3, [r3, #0]
    462a:	2204      	movs	r2, #4
    462c:	4013      	ands	r3, r2
    462e:	d100      	bne.n	4632 <_usart_interrupt_handler+0x132>
    4630:	e0bd      	b.n	47ae <_usart_interrupt_handler+0x2ae>
    4632:	69bb      	ldr	r3, [r7, #24]
    4634:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
    4636:	b29b      	uxth	r3, r3
    4638:	2b00      	cmp	r3, #0
    463a:	d100      	bne.n	463e <_usart_interrupt_handler+0x13e>
    463c:	e0b4      	b.n	47a8 <_usart_interrupt_handler+0x2a8>
    463e:	697b      	ldr	r3, [r7, #20]
    4640:	8b5b      	ldrh	r3, [r3, #26]
    4642:	b29b      	uxth	r3, r3
    4644:	b2da      	uxtb	r2, r3
    4646:	231f      	movs	r3, #31
    4648:	18fb      	adds	r3, r7, r3
    464a:	213f      	movs	r1, #63	; 0x3f
    464c:	400a      	ands	r2, r1
    464e:	701a      	strb	r2, [r3, #0]
    4650:	231f      	movs	r3, #31
    4652:	18fb      	adds	r3, r7, r3
    4654:	781b      	ldrb	r3, [r3, #0]
    4656:	2208      	movs	r2, #8
    4658:	4013      	ands	r3, r2
    465a:	d007      	beq.n	466c <_usart_interrupt_handler+0x16c>
    465c:	231f      	movs	r3, #31
    465e:	18fb      	adds	r3, r7, r3
    4660:	221f      	movs	r2, #31
    4662:	18ba      	adds	r2, r7, r2
    4664:	7812      	ldrb	r2, [r2, #0]
    4666:	2108      	movs	r1, #8
    4668:	438a      	bics	r2, r1
    466a:	701a      	strb	r2, [r3, #0]
    466c:	231f      	movs	r3, #31
    466e:	18fb      	adds	r3, r7, r3
    4670:	781b      	ldrb	r3, [r3, #0]
    4672:	2b00      	cmp	r3, #0
    4674:	d050      	beq.n	4718 <_usart_interrupt_handler+0x218>
    4676:	231f      	movs	r3, #31
    4678:	18fb      	adds	r3, r7, r3
    467a:	781b      	ldrb	r3, [r3, #0]
    467c:	2202      	movs	r2, #2
    467e:	4013      	ands	r3, r2
    4680:	d007      	beq.n	4692 <_usart_interrupt_handler+0x192>
    4682:	69bb      	ldr	r3, [r7, #24]
    4684:	2232      	movs	r2, #50	; 0x32
    4686:	211a      	movs	r1, #26
    4688:	5499      	strb	r1, [r3, r2]
    468a:	697b      	ldr	r3, [r7, #20]
    468c:	2202      	movs	r2, #2
    468e:	835a      	strh	r2, [r3, #26]
    4690:	e036      	b.n	4700 <_usart_interrupt_handler+0x200>
    4692:	231f      	movs	r3, #31
    4694:	18fb      	adds	r3, r7, r3
    4696:	781b      	ldrb	r3, [r3, #0]
    4698:	2204      	movs	r2, #4
    469a:	4013      	ands	r3, r2
    469c:	d007      	beq.n	46ae <_usart_interrupt_handler+0x1ae>
    469e:	69bb      	ldr	r3, [r7, #24]
    46a0:	2232      	movs	r2, #50	; 0x32
    46a2:	211e      	movs	r1, #30
    46a4:	5499      	strb	r1, [r3, r2]
    46a6:	697b      	ldr	r3, [r7, #20]
    46a8:	2204      	movs	r2, #4
    46aa:	835a      	strh	r2, [r3, #26]
    46ac:	e028      	b.n	4700 <_usart_interrupt_handler+0x200>
    46ae:	231f      	movs	r3, #31
    46b0:	18fb      	adds	r3, r7, r3
    46b2:	781b      	ldrb	r3, [r3, #0]
    46b4:	2201      	movs	r2, #1
    46b6:	4013      	ands	r3, r2
    46b8:	d007      	beq.n	46ca <_usart_interrupt_handler+0x1ca>
    46ba:	69bb      	ldr	r3, [r7, #24]
    46bc:	2232      	movs	r2, #50	; 0x32
    46be:	2113      	movs	r1, #19
    46c0:	5499      	strb	r1, [r3, r2]
    46c2:	697b      	ldr	r3, [r7, #20]
    46c4:	2201      	movs	r2, #1
    46c6:	835a      	strh	r2, [r3, #26]
    46c8:	e01a      	b.n	4700 <_usart_interrupt_handler+0x200>
    46ca:	231f      	movs	r3, #31
    46cc:	18fb      	adds	r3, r7, r3
    46ce:	781b      	ldrb	r3, [r3, #0]
    46d0:	2210      	movs	r2, #16
    46d2:	4013      	ands	r3, r2
    46d4:	d007      	beq.n	46e6 <_usart_interrupt_handler+0x1e6>
    46d6:	69bb      	ldr	r3, [r7, #24]
    46d8:	2232      	movs	r2, #50	; 0x32
    46da:	2142      	movs	r1, #66	; 0x42
    46dc:	5499      	strb	r1, [r3, r2]
    46de:	697b      	ldr	r3, [r7, #20]
    46e0:	2210      	movs	r2, #16
    46e2:	835a      	strh	r2, [r3, #26]
    46e4:	e00c      	b.n	4700 <_usart_interrupt_handler+0x200>
    46e6:	231f      	movs	r3, #31
    46e8:	18fb      	adds	r3, r7, r3
    46ea:	781b      	ldrb	r3, [r3, #0]
    46ec:	2220      	movs	r2, #32
    46ee:	4013      	ands	r3, r2
    46f0:	d006      	beq.n	4700 <_usart_interrupt_handler+0x200>
    46f2:	69bb      	ldr	r3, [r7, #24]
    46f4:	2232      	movs	r2, #50	; 0x32
    46f6:	2141      	movs	r1, #65	; 0x41
    46f8:	5499      	strb	r1, [r3, r2]
    46fa:	697b      	ldr	r3, [r7, #20]
    46fc:	2220      	movs	r2, #32
    46fe:	835a      	strh	r2, [r3, #26]
    4700:	2310      	movs	r3, #16
    4702:	18fb      	adds	r3, r7, r3
    4704:	881b      	ldrh	r3, [r3, #0]
    4706:	2204      	movs	r2, #4
    4708:	4013      	ands	r3, r2
    470a:	d050      	beq.n	47ae <_usart_interrupt_handler+0x2ae>
    470c:	69bb      	ldr	r3, [r7, #24]
    470e:	695b      	ldr	r3, [r3, #20]
    4710:	69ba      	ldr	r2, [r7, #24]
    4712:	0010      	movs	r0, r2
    4714:	4798      	blx	r3
    4716:	e04a      	b.n	47ae <_usart_interrupt_handler+0x2ae>
    4718:	697b      	ldr	r3, [r7, #20]
    471a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
    471c:	b29a      	uxth	r2, r3
    471e:	230e      	movs	r3, #14
    4720:	18fb      	adds	r3, r7, r3
    4722:	05d2      	lsls	r2, r2, #23
    4724:	0dd2      	lsrs	r2, r2, #23
    4726:	801a      	strh	r2, [r3, #0]
    4728:	69bb      	ldr	r3, [r7, #24]
    472a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    472c:	220e      	movs	r2, #14
    472e:	18ba      	adds	r2, r7, r2
    4730:	8812      	ldrh	r2, [r2, #0]
    4732:	b2d2      	uxtb	r2, r2
    4734:	701a      	strb	r2, [r3, #0]
    4736:	69bb      	ldr	r3, [r7, #24]
    4738:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    473a:	1c5a      	adds	r2, r3, #1
    473c:	69bb      	ldr	r3, [r7, #24]
    473e:	625a      	str	r2, [r3, #36]	; 0x24
    4740:	69bb      	ldr	r3, [r7, #24]
    4742:	795b      	ldrb	r3, [r3, #5]
    4744:	2b01      	cmp	r3, #1
    4746:	d10d      	bne.n	4764 <_usart_interrupt_handler+0x264>
    4748:	69bb      	ldr	r3, [r7, #24]
    474a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    474c:	220e      	movs	r2, #14
    474e:	18ba      	adds	r2, r7, r2
    4750:	8812      	ldrh	r2, [r2, #0]
    4752:	0a12      	lsrs	r2, r2, #8
    4754:	b292      	uxth	r2, r2
    4756:	b2d2      	uxtb	r2, r2
    4758:	701a      	strb	r2, [r3, #0]
    475a:	69bb      	ldr	r3, [r7, #24]
    475c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    475e:	1c5a      	adds	r2, r3, #1
    4760:	69bb      	ldr	r3, [r7, #24]
    4762:	625a      	str	r2, [r3, #36]	; 0x24
    4764:	69bb      	ldr	r3, [r7, #24]
    4766:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
    4768:	b29b      	uxth	r3, r3
    476a:	3b01      	subs	r3, #1
    476c:	b29b      	uxth	r3, r3
    476e:	69ba      	ldr	r2, [r7, #24]
    4770:	1c19      	adds	r1, r3, #0
    4772:	8591      	strh	r1, [r2, #44]	; 0x2c
    4774:	2b00      	cmp	r3, #0
    4776:	d11a      	bne.n	47ae <_usart_interrupt_handler+0x2ae>
    4778:	697b      	ldr	r3, [r7, #20]
    477a:	2204      	movs	r2, #4
    477c:	751a      	strb	r2, [r3, #20]
    477e:	69bb      	ldr	r3, [r7, #24]
    4780:	2232      	movs	r2, #50	; 0x32
    4782:	2100      	movs	r1, #0
    4784:	5499      	strb	r1, [r3, r2]
    4786:	2310      	movs	r3, #16
    4788:	18fb      	adds	r3, r7, r3
    478a:	881b      	ldrh	r3, [r3, #0]
    478c:	2202      	movs	r2, #2
    478e:	4013      	ands	r3, r2
    4790:	d00d      	beq.n	47ae <_usart_interrupt_handler+0x2ae>
    4792:	69bb      	ldr	r3, [r7, #24]
    4794:	691b      	ldr	r3, [r3, #16]
    4796:	69ba      	ldr	r2, [r7, #24]
    4798:	0010      	movs	r0, r2
    479a:	4798      	blx	r3
    479c:	e007      	b.n	47ae <_usart_interrupt_handler+0x2ae>
    479e:	46c0      	nop			; (mov r8, r8)
    47a0:	20000d1c 	.word	0x20000d1c
    47a4:	000044dd 	.word	0x000044dd
    47a8:	697b      	ldr	r3, [r7, #20]
    47aa:	2204      	movs	r2, #4
    47ac:	751a      	strb	r2, [r3, #20]
    47ae:	2312      	movs	r3, #18
    47b0:	18fb      	adds	r3, r7, r3
    47b2:	881b      	ldrh	r3, [r3, #0]
    47b4:	2210      	movs	r2, #16
    47b6:	4013      	ands	r3, r2
    47b8:	d010      	beq.n	47dc <_usart_interrupt_handler+0x2dc>
    47ba:	697b      	ldr	r3, [r7, #20]
    47bc:	2210      	movs	r2, #16
    47be:	751a      	strb	r2, [r3, #20]
    47c0:	697b      	ldr	r3, [r7, #20]
    47c2:	2210      	movs	r2, #16
    47c4:	761a      	strb	r2, [r3, #24]
    47c6:	2310      	movs	r3, #16
    47c8:	18fb      	adds	r3, r7, r3
    47ca:	881b      	ldrh	r3, [r3, #0]
    47cc:	2210      	movs	r2, #16
    47ce:	4013      	ands	r3, r2
    47d0:	d004      	beq.n	47dc <_usart_interrupt_handler+0x2dc>
    47d2:	69bb      	ldr	r3, [r7, #24]
    47d4:	69db      	ldr	r3, [r3, #28]
    47d6:	69ba      	ldr	r2, [r7, #24]
    47d8:	0010      	movs	r0, r2
    47da:	4798      	blx	r3
    47dc:	2312      	movs	r3, #18
    47de:	18fb      	adds	r3, r7, r3
    47e0:	881b      	ldrh	r3, [r3, #0]
    47e2:	2220      	movs	r2, #32
    47e4:	4013      	ands	r3, r2
    47e6:	d010      	beq.n	480a <_usart_interrupt_handler+0x30a>
    47e8:	697b      	ldr	r3, [r7, #20]
    47ea:	2220      	movs	r2, #32
    47ec:	751a      	strb	r2, [r3, #20]
    47ee:	697b      	ldr	r3, [r7, #20]
    47f0:	2220      	movs	r2, #32
    47f2:	761a      	strb	r2, [r3, #24]
    47f4:	2310      	movs	r3, #16
    47f6:	18fb      	adds	r3, r7, r3
    47f8:	881b      	ldrh	r3, [r3, #0]
    47fa:	2208      	movs	r2, #8
    47fc:	4013      	ands	r3, r2
    47fe:	d004      	beq.n	480a <_usart_interrupt_handler+0x30a>
    4800:	69bb      	ldr	r3, [r7, #24]
    4802:	699b      	ldr	r3, [r3, #24]
    4804:	69ba      	ldr	r2, [r7, #24]
    4806:	0010      	movs	r0, r2
    4808:	4798      	blx	r3
    480a:	2312      	movs	r3, #18
    480c:	18fb      	adds	r3, r7, r3
    480e:	881b      	ldrh	r3, [r3, #0]
    4810:	2208      	movs	r2, #8
    4812:	4013      	ands	r3, r2
    4814:	d010      	beq.n	4838 <_usart_interrupt_handler+0x338>
    4816:	697b      	ldr	r3, [r7, #20]
    4818:	2208      	movs	r2, #8
    481a:	751a      	strb	r2, [r3, #20]
    481c:	697b      	ldr	r3, [r7, #20]
    481e:	2208      	movs	r2, #8
    4820:	761a      	strb	r2, [r3, #24]
    4822:	2310      	movs	r3, #16
    4824:	18fb      	adds	r3, r7, r3
    4826:	881b      	ldrh	r3, [r3, #0]
    4828:	2220      	movs	r2, #32
    482a:	4013      	ands	r3, r2
    482c:	d004      	beq.n	4838 <_usart_interrupt_handler+0x338>
    482e:	69bb      	ldr	r3, [r7, #24]
    4830:	6a1b      	ldr	r3, [r3, #32]
    4832:	69ba      	ldr	r2, [r7, #24]
    4834:	0010      	movs	r0, r2
    4836:	4798      	blx	r3
    4838:	46c0      	nop			; (mov r8, r8)
    483a:	46bd      	mov	sp, r7
    483c:	b008      	add	sp, #32
    483e:	bd80      	pop	{r7, pc}

00004840 <system_gclk_gen_get_config_defaults>:
    4840:	b580      	push	{r7, lr}
    4842:	b082      	sub	sp, #8
    4844:	af00      	add	r7, sp, #0
    4846:	6078      	str	r0, [r7, #4]
    4848:	687b      	ldr	r3, [r7, #4]
    484a:	2201      	movs	r2, #1
    484c:	605a      	str	r2, [r3, #4]
    484e:	687b      	ldr	r3, [r7, #4]
    4850:	2200      	movs	r2, #0
    4852:	705a      	strb	r2, [r3, #1]
    4854:	687b      	ldr	r3, [r7, #4]
    4856:	2206      	movs	r2, #6
    4858:	701a      	strb	r2, [r3, #0]
    485a:	687b      	ldr	r3, [r7, #4]
    485c:	2200      	movs	r2, #0
    485e:	721a      	strb	r2, [r3, #8]
    4860:	687b      	ldr	r3, [r7, #4]
    4862:	2200      	movs	r2, #0
    4864:	725a      	strb	r2, [r3, #9]
    4866:	46c0      	nop			; (mov r8, r8)
    4868:	46bd      	mov	sp, r7
    486a:	b002      	add	sp, #8
    486c:	bd80      	pop	{r7, pc}

0000486e <system_gclk_chan_get_config_defaults>:
    486e:	b580      	push	{r7, lr}
    4870:	b082      	sub	sp, #8
    4872:	af00      	add	r7, sp, #0
    4874:	6078      	str	r0, [r7, #4]
    4876:	687b      	ldr	r3, [r7, #4]
    4878:	2200      	movs	r2, #0
    487a:	701a      	strb	r2, [r3, #0]
    487c:	46c0      	nop			; (mov r8, r8)
    487e:	46bd      	mov	sp, r7
    4880:	b002      	add	sp, #8
    4882:	bd80      	pop	{r7, pc}

00004884 <system_clock_source_xosc32k_get_config_defaults>:
    4884:	b580      	push	{r7, lr}
    4886:	b082      	sub	sp, #8
    4888:	af00      	add	r7, sp, #0
    488a:	6078      	str	r0, [r7, #4]
    488c:	687b      	ldr	r3, [r7, #4]
    488e:	2200      	movs	r2, #0
    4890:	701a      	strb	r2, [r3, #0]
    4892:	687b      	ldr	r3, [r7, #4]
    4894:	2202      	movs	r2, #2
    4896:	705a      	strb	r2, [r3, #1]
    4898:	687b      	ldr	r3, [r7, #4]
    489a:	2280      	movs	r2, #128	; 0x80
    489c:	0212      	lsls	r2, r2, #8
    489e:	605a      	str	r2, [r3, #4]
    48a0:	687b      	ldr	r3, [r7, #4]
    48a2:	2200      	movs	r2, #0
    48a4:	709a      	strb	r2, [r3, #2]
    48a6:	687b      	ldr	r3, [r7, #4]
    48a8:	2201      	movs	r2, #1
    48aa:	70da      	strb	r2, [r3, #3]
    48ac:	687b      	ldr	r3, [r7, #4]
    48ae:	2200      	movs	r2, #0
    48b0:	721a      	strb	r2, [r3, #8]
    48b2:	687b      	ldr	r3, [r7, #4]
    48b4:	2201      	movs	r2, #1
    48b6:	725a      	strb	r2, [r3, #9]
    48b8:	687b      	ldr	r3, [r7, #4]
    48ba:	2200      	movs	r2, #0
    48bc:	729a      	strb	r2, [r3, #10]
    48be:	46c0      	nop			; (mov r8, r8)
    48c0:	46bd      	mov	sp, r7
    48c2:	b002      	add	sp, #8
    48c4:	bd80      	pop	{r7, pc}

000048c6 <system_clock_source_osc16m_get_config_defaults>:
    48c6:	b580      	push	{r7, lr}
    48c8:	b082      	sub	sp, #8
    48ca:	af00      	add	r7, sp, #0
    48cc:	6078      	str	r0, [r7, #4]
    48ce:	687b      	ldr	r3, [r7, #4]
    48d0:	2200      	movs	r2, #0
    48d2:	701a      	strb	r2, [r3, #0]
    48d4:	687b      	ldr	r3, [r7, #4]
    48d6:	2200      	movs	r2, #0
    48d8:	705a      	strb	r2, [r3, #1]
    48da:	687b      	ldr	r3, [r7, #4]
    48dc:	2201      	movs	r2, #1
    48de:	709a      	strb	r2, [r3, #2]
    48e0:	46c0      	nop			; (mov r8, r8)
    48e2:	46bd      	mov	sp, r7
    48e4:	b002      	add	sp, #8
    48e6:	bd80      	pop	{r7, pc}

000048e8 <system_clock_source_dfll_get_config_defaults>:
    48e8:	b580      	push	{r7, lr}
    48ea:	b082      	sub	sp, #8
    48ec:	af00      	add	r7, sp, #0
    48ee:	6078      	str	r0, [r7, #4]
    48f0:	687b      	ldr	r3, [r7, #4]
    48f2:	2200      	movs	r2, #0
    48f4:	701a      	strb	r2, [r3, #0]
    48f6:	687b      	ldr	r3, [r7, #4]
    48f8:	2200      	movs	r2, #0
    48fa:	809a      	strh	r2, [r3, #4]
    48fc:	687b      	ldr	r3, [r7, #4]
    48fe:	2200      	movs	r2, #0
    4900:	80da      	strh	r2, [r3, #6]
    4902:	687b      	ldr	r3, [r7, #4]
    4904:	2200      	movs	r2, #0
    4906:	721a      	strb	r2, [r3, #8]
    4908:	687b      	ldr	r3, [r7, #4]
    490a:	2200      	movs	r2, #0
    490c:	725a      	strb	r2, [r3, #9]
    490e:	687b      	ldr	r3, [r7, #4]
    4910:	2201      	movs	r2, #1
    4912:	705a      	strb	r2, [r3, #1]
    4914:	687b      	ldr	r3, [r7, #4]
    4916:	2200      	movs	r2, #0
    4918:	709a      	strb	r2, [r3, #2]
    491a:	687b      	ldr	r3, [r7, #4]
    491c:	2207      	movs	r2, #7
    491e:	729a      	strb	r2, [r3, #10]
    4920:	687b      	ldr	r3, [r7, #4]
    4922:	223f      	movs	r2, #63	; 0x3f
    4924:	819a      	strh	r2, [r3, #12]
    4926:	687b      	ldr	r3, [r7, #4]
    4928:	2201      	movs	r2, #1
    492a:	739a      	strb	r2, [r3, #14]
    492c:	687b      	ldr	r3, [r7, #4]
    492e:	2201      	movs	r2, #1
    4930:	821a      	strh	r2, [r3, #16]
    4932:	687b      	ldr	r3, [r7, #4]
    4934:	220c      	movs	r2, #12
    4936:	825a      	strh	r2, [r3, #18]
    4938:	46c0      	nop			; (mov r8, r8)
    493a:	46bd      	mov	sp, r7
    493c:	b002      	add	sp, #8
    493e:	bd80      	pop	{r7, pc}

00004940 <system_main_clock_set_failure_detect>:
    4940:	b580      	push	{r7, lr}
    4942:	b082      	sub	sp, #8
    4944:	af00      	add	r7, sp, #0
    4946:	0002      	movs	r2, r0
    4948:	1dfb      	adds	r3, r7, #7
    494a:	701a      	strb	r2, [r3, #0]
    494c:	46c0      	nop			; (mov r8, r8)
    494e:	46bd      	mov	sp, r7
    4950:	b002      	add	sp, #8
    4952:	bd80      	pop	{r7, pc}

00004954 <system_cpu_clock_set_divider>:
    4954:	b580      	push	{r7, lr}
    4956:	b082      	sub	sp, #8
    4958:	af00      	add	r7, sp, #0
    495a:	0002      	movs	r2, r0
    495c:	1dfb      	adds	r3, r7, #7
    495e:	701a      	strb	r2, [r3, #0]
    4960:	4a05      	ldr	r2, [pc, #20]	; (4978 <system_cpu_clock_set_divider+0x24>)
    4962:	1dfb      	adds	r3, r7, #7
    4964:	781b      	ldrb	r3, [r3, #0]
    4966:	2101      	movs	r1, #1
    4968:	4099      	lsls	r1, r3
    496a:	000b      	movs	r3, r1
    496c:	b2db      	uxtb	r3, r3
    496e:	7113      	strb	r3, [r2, #4]
    4970:	46c0      	nop			; (mov r8, r8)
    4972:	46bd      	mov	sp, r7
    4974:	b002      	add	sp, #8
    4976:	bd80      	pop	{r7, pc}
    4978:	40000400 	.word	0x40000400

0000497c <system_low_power_clock_set_divider>:
    497c:	b580      	push	{r7, lr}
    497e:	b082      	sub	sp, #8
    4980:	af00      	add	r7, sp, #0
    4982:	0002      	movs	r2, r0
    4984:	1dfb      	adds	r3, r7, #7
    4986:	701a      	strb	r2, [r3, #0]
    4988:	4a05      	ldr	r2, [pc, #20]	; (49a0 <system_low_power_clock_set_divider+0x24>)
    498a:	1dfb      	adds	r3, r7, #7
    498c:	781b      	ldrb	r3, [r3, #0]
    498e:	2101      	movs	r1, #1
    4990:	4099      	lsls	r1, r3
    4992:	000b      	movs	r3, r1
    4994:	b2db      	uxtb	r3, r3
    4996:	7153      	strb	r3, [r2, #5]
    4998:	46c0      	nop			; (mov r8, r8)
    499a:	46bd      	mov	sp, r7
    499c:	b002      	add	sp, #8
    499e:	bd80      	pop	{r7, pc}
    49a0:	40000400 	.word	0x40000400

000049a4 <system_backup_clock_set_divider>:
    49a4:	b580      	push	{r7, lr}
    49a6:	b082      	sub	sp, #8
    49a8:	af00      	add	r7, sp, #0
    49aa:	0002      	movs	r2, r0
    49ac:	1dfb      	adds	r3, r7, #7
    49ae:	701a      	strb	r2, [r3, #0]
    49b0:	4a05      	ldr	r2, [pc, #20]	; (49c8 <system_backup_clock_set_divider+0x24>)
    49b2:	1dfb      	adds	r3, r7, #7
    49b4:	781b      	ldrb	r3, [r3, #0]
    49b6:	2101      	movs	r1, #1
    49b8:	4099      	lsls	r1, r3
    49ba:	000b      	movs	r3, r1
    49bc:	b2db      	uxtb	r3, r3
    49be:	7193      	strb	r3, [r2, #6]
    49c0:	46c0      	nop			; (mov r8, r8)
    49c2:	46bd      	mov	sp, r7
    49c4:	b002      	add	sp, #8
    49c6:	bd80      	pop	{r7, pc}
    49c8:	40000400 	.word	0x40000400

000049cc <system_cpu_clock_get_hz>:
    49cc:	b580      	push	{r7, lr}
    49ce:	af00      	add	r7, sp, #0
    49d0:	2000      	movs	r0, #0
    49d2:	4b07      	ldr	r3, [pc, #28]	; (49f0 <system_cpu_clock_get_hz+0x24>)
    49d4:	4798      	blx	r3
    49d6:	0002      	movs	r2, r0
    49d8:	4b06      	ldr	r3, [pc, #24]	; (49f4 <system_cpu_clock_get_hz+0x28>)
    49da:	791b      	ldrb	r3, [r3, #4]
    49dc:	b2db      	uxtb	r3, r3
    49de:	0019      	movs	r1, r3
    49e0:	4b05      	ldr	r3, [pc, #20]	; (49f8 <system_cpu_clock_get_hz+0x2c>)
    49e2:	0010      	movs	r0, r2
    49e4:	4798      	blx	r3
    49e6:	0003      	movs	r3, r0
    49e8:	0018      	movs	r0, r3
    49ea:	46bd      	mov	sp, r7
    49ec:	bd80      	pop	{r7, pc}
    49ee:	46c0      	nop			; (mov r8, r8)
    49f0:	00005609 	.word	0x00005609
    49f4:	40000400 	.word	0x40000400
    49f8:	0001498d 	.word	0x0001498d

000049fc <system_flash_set_waitstates>:
    49fc:	b580      	push	{r7, lr}
    49fe:	b082      	sub	sp, #8
    4a00:	af00      	add	r7, sp, #0
    4a02:	0002      	movs	r2, r0
    4a04:	1dfb      	adds	r3, r7, #7
    4a06:	701a      	strb	r2, [r3, #0]
    4a08:	4a08      	ldr	r2, [pc, #32]	; (4a2c <system_flash_set_waitstates+0x30>)
    4a0a:	1dfb      	adds	r3, r7, #7
    4a0c:	781b      	ldrb	r3, [r3, #0]
    4a0e:	210f      	movs	r1, #15
    4a10:	400b      	ands	r3, r1
    4a12:	b2d9      	uxtb	r1, r3
    4a14:	6853      	ldr	r3, [r2, #4]
    4a16:	200f      	movs	r0, #15
    4a18:	4001      	ands	r1, r0
    4a1a:	0049      	lsls	r1, r1, #1
    4a1c:	201e      	movs	r0, #30
    4a1e:	4383      	bics	r3, r0
    4a20:	430b      	orrs	r3, r1
    4a22:	6053      	str	r3, [r2, #4]
    4a24:	46c0      	nop			; (mov r8, r8)
    4a26:	46bd      	mov	sp, r7
    4a28:	b002      	add	sp, #8
    4a2a:	bd80      	pop	{r7, pc}
    4a2c:	41004000 	.word	0x41004000

00004a30 <system_switch_performance_level>:
    4a30:	b580      	push	{r7, lr}
    4a32:	b082      	sub	sp, #8
    4a34:	af00      	add	r7, sp, #0
    4a36:	0002      	movs	r2, r0
    4a38:	1dfb      	adds	r3, r7, #7
    4a3a:	701a      	strb	r2, [r3, #0]
    4a3c:	2380      	movs	r3, #128	; 0x80
    4a3e:	05db      	lsls	r3, r3, #23
    4a40:	789b      	ldrb	r3, [r3, #2]
    4a42:	b2db      	uxtb	r3, r3
    4a44:	1dfa      	adds	r2, r7, #7
    4a46:	7812      	ldrb	r2, [r2, #0]
    4a48:	429a      	cmp	r2, r3
    4a4a:	d101      	bne.n	4a50 <system_switch_performance_level+0x20>
    4a4c:	2300      	movs	r3, #0
    4a4e:	e019      	b.n	4a84 <system_switch_performance_level+0x54>
    4a50:	2380      	movs	r3, #128	; 0x80
    4a52:	05db      	lsls	r3, r3, #23
    4a54:	789b      	ldrb	r3, [r3, #2]
    4a56:	b2db      	uxtb	r3, r3
    4a58:	b25b      	sxtb	r3, r3
    4a5a:	2b00      	cmp	r3, #0
    4a5c:	da01      	bge.n	4a62 <system_switch_performance_level+0x32>
    4a5e:	2317      	movs	r3, #23
    4a60:	e010      	b.n	4a84 <system_switch_performance_level+0x54>
    4a62:	2380      	movs	r3, #128	; 0x80
    4a64:	05db      	lsls	r3, r3, #23
    4a66:	2201      	movs	r2, #1
    4a68:	719a      	strb	r2, [r3, #6]
    4a6a:	2380      	movs	r3, #128	; 0x80
    4a6c:	05db      	lsls	r3, r3, #23
    4a6e:	1dfa      	adds	r2, r7, #7
    4a70:	7812      	ldrb	r2, [r2, #0]
    4a72:	709a      	strb	r2, [r3, #2]
    4a74:	46c0      	nop			; (mov r8, r8)
    4a76:	2380      	movs	r3, #128	; 0x80
    4a78:	05db      	lsls	r3, r3, #23
    4a7a:	799b      	ldrb	r3, [r3, #6]
    4a7c:	b2db      	uxtb	r3, r3
    4a7e:	2b00      	cmp	r3, #0
    4a80:	d0f9      	beq.n	4a76 <system_switch_performance_level+0x46>
    4a82:	2300      	movs	r3, #0
    4a84:	0018      	movs	r0, r3
    4a86:	46bd      	mov	sp, r7
    4a88:	b002      	add	sp, #8
    4a8a:	bd80      	pop	{r7, pc}

00004a8c <_system_dfll_wait_for_sync>:
    4a8c:	b580      	push	{r7, lr}
    4a8e:	af00      	add	r7, sp, #0
    4a90:	46c0      	nop			; (mov r8, r8)
    4a92:	4b04      	ldr	r3, [pc, #16]	; (4aa4 <_system_dfll_wait_for_sync+0x18>)
    4a94:	68da      	ldr	r2, [r3, #12]
    4a96:	2380      	movs	r3, #128	; 0x80
    4a98:	005b      	lsls	r3, r3, #1
    4a9a:	4013      	ands	r3, r2
    4a9c:	d0f9      	beq.n	4a92 <_system_dfll_wait_for_sync+0x6>
    4a9e:	46c0      	nop			; (mov r8, r8)
    4aa0:	46bd      	mov	sp, r7
    4aa2:	bd80      	pop	{r7, pc}
    4aa4:	40000c00 	.word	0x40000c00

00004aa8 <_system_clock_source_osc16m_freq_sel>:
    4aa8:	b580      	push	{r7, lr}
    4aaa:	b084      	sub	sp, #16
    4aac:	af00      	add	r7, sp, #0
    4aae:	1d3b      	adds	r3, r7, #4
    4ab0:	0018      	movs	r0, r3
    4ab2:	4b1e      	ldr	r3, [pc, #120]	; (4b2c <_system_clock_source_osc16m_freq_sel+0x84>)
    4ab4:	4798      	blx	r3
    4ab6:	1d3b      	adds	r3, r7, #4
    4ab8:	2203      	movs	r2, #3
    4aba:	701a      	strb	r2, [r3, #0]
    4abc:	1d3b      	adds	r3, r7, #4
    4abe:	0019      	movs	r1, r3
    4ac0:	2000      	movs	r0, #0
    4ac2:	4b1b      	ldr	r3, [pc, #108]	; (4b30 <_system_clock_source_osc16m_freq_sel+0x88>)
    4ac4:	4798      	blx	r3
    4ac6:	2006      	movs	r0, #6
    4ac8:	4b1a      	ldr	r3, [pc, #104]	; (4b34 <_system_clock_source_osc16m_freq_sel+0x8c>)
    4aca:	4798      	blx	r3
    4acc:	003b      	movs	r3, r7
    4ace:	0018      	movs	r0, r3
    4ad0:	4b19      	ldr	r3, [pc, #100]	; (4b38 <_system_clock_source_osc16m_freq_sel+0x90>)
    4ad2:	4798      	blx	r3
    4ad4:	003b      	movs	r3, r7
    4ad6:	2201      	movs	r2, #1
    4ad8:	701a      	strb	r2, [r3, #0]
    4ada:	003b      	movs	r3, r7
    4adc:	2200      	movs	r2, #0
    4ade:	709a      	strb	r2, [r3, #2]
    4ae0:	003b      	movs	r3, r7
    4ae2:	2200      	movs	r2, #0
    4ae4:	705a      	strb	r2, [r3, #1]
    4ae6:	003b      	movs	r3, r7
    4ae8:	0018      	movs	r0, r3
    4aea:	4b14      	ldr	r3, [pc, #80]	; (4b3c <_system_clock_source_osc16m_freq_sel+0x94>)
    4aec:	4798      	blx	r3
    4aee:	2006      	movs	r0, #6
    4af0:	4b13      	ldr	r3, [pc, #76]	; (4b40 <_system_clock_source_osc16m_freq_sel+0x98>)
    4af2:	4798      	blx	r3
    4af4:	46c0      	nop			; (mov r8, r8)
    4af6:	2006      	movs	r0, #6
    4af8:	4b12      	ldr	r3, [pc, #72]	; (4b44 <_system_clock_source_osc16m_freq_sel+0x9c>)
    4afa:	4798      	blx	r3
    4afc:	0003      	movs	r3, r0
    4afe:	001a      	movs	r2, r3
    4b00:	2301      	movs	r3, #1
    4b02:	4053      	eors	r3, r2
    4b04:	b2db      	uxtb	r3, r3
    4b06:	2b00      	cmp	r3, #0
    4b08:	d1f5      	bne.n	4af6 <_system_clock_source_osc16m_freq_sel+0x4e>
    4b0a:	1d3b      	adds	r3, r7, #4
    4b0c:	0018      	movs	r0, r3
    4b0e:	4b07      	ldr	r3, [pc, #28]	; (4b2c <_system_clock_source_osc16m_freq_sel+0x84>)
    4b10:	4798      	blx	r3
    4b12:	1d3b      	adds	r3, r7, #4
    4b14:	2206      	movs	r2, #6
    4b16:	701a      	strb	r2, [r3, #0]
    4b18:	1d3b      	adds	r3, r7, #4
    4b1a:	0019      	movs	r1, r3
    4b1c:	2000      	movs	r0, #0
    4b1e:	4b04      	ldr	r3, [pc, #16]	; (4b30 <_system_clock_source_osc16m_freq_sel+0x88>)
    4b20:	4798      	blx	r3
    4b22:	46c0      	nop			; (mov r8, r8)
    4b24:	46bd      	mov	sp, r7
    4b26:	b004      	add	sp, #16
    4b28:	bd80      	pop	{r7, pc}
    4b2a:	46c0      	nop			; (mov r8, r8)
    4b2c:	00004841 	.word	0x00004841
    4b30:	0000549d 	.word	0x0000549d
    4b34:	00004f61 	.word	0x00004f61
    4b38:	000048c7 	.word	0x000048c7
    4b3c:	00004c4d 	.word	0x00004c4d
    4b40:	00004ea1 	.word	0x00004ea1
    4b44:	0000500d 	.word	0x0000500d

00004b48 <_system_clock_source_dfll_set_config_errata_9905>:
    4b48:	b580      	push	{r7, lr}
    4b4a:	af00      	add	r7, sp, #0
    4b4c:	4b0c      	ldr	r3, [pc, #48]	; (4b80 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
    4b4e:	2202      	movs	r2, #2
    4b50:	831a      	strh	r2, [r3, #24]
    4b52:	4b0c      	ldr	r3, [pc, #48]	; (4b84 <_system_clock_source_dfll_set_config_errata_9905+0x3c>)
    4b54:	4798      	blx	r3
    4b56:	4a0a      	ldr	r2, [pc, #40]	; (4b80 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
    4b58:	4b0b      	ldr	r3, [pc, #44]	; (4b88 <_system_clock_source_dfll_set_config_errata_9905+0x40>)
    4b5a:	689b      	ldr	r3, [r3, #8]
    4b5c:	6213      	str	r3, [r2, #32]
    4b5e:	4a08      	ldr	r2, [pc, #32]	; (4b80 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
    4b60:	4b09      	ldr	r3, [pc, #36]	; (4b88 <_system_clock_source_dfll_set_config_errata_9905+0x40>)
    4b62:	685b      	ldr	r3, [r3, #4]
    4b64:	61d3      	str	r3, [r2, #28]
    4b66:	4b06      	ldr	r3, [pc, #24]	; (4b80 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
    4b68:	2200      	movs	r2, #0
    4b6a:	831a      	strh	r2, [r3, #24]
    4b6c:	4b05      	ldr	r3, [pc, #20]	; (4b84 <_system_clock_source_dfll_set_config_errata_9905+0x3c>)
    4b6e:	4798      	blx	r3
    4b70:	4a03      	ldr	r2, [pc, #12]	; (4b80 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
    4b72:	4b05      	ldr	r3, [pc, #20]	; (4b88 <_system_clock_source_dfll_set_config_errata_9905+0x40>)
    4b74:	681b      	ldr	r3, [r3, #0]
    4b76:	b29b      	uxth	r3, r3
    4b78:	8313      	strh	r3, [r2, #24]
    4b7a:	46c0      	nop			; (mov r8, r8)
    4b7c:	46bd      	mov	sp, r7
    4b7e:	bd80      	pop	{r7, pc}
    4b80:	40000c00 	.word	0x40000c00
    4b84:	00004a8d 	.word	0x00004a8d
    4b88:	20000a30 	.word	0x20000a30

00004b8c <system_clock_source_get_hz>:
    4b8c:	b580      	push	{r7, lr}
    4b8e:	b082      	sub	sp, #8
    4b90:	af00      	add	r7, sp, #0
    4b92:	0002      	movs	r2, r0
    4b94:	1dfb      	adds	r3, r7, #7
    4b96:	701a      	strb	r2, [r3, #0]
    4b98:	1dfb      	adds	r3, r7, #7
    4b9a:	781b      	ldrb	r3, [r3, #0]
    4b9c:	2b08      	cmp	r3, #8
    4b9e:	d841      	bhi.n	4c24 <system_clock_source_get_hz+0x98>
    4ba0:	009a      	lsls	r2, r3, #2
    4ba2:	4b23      	ldr	r3, [pc, #140]	; (4c30 <system_clock_source_get_hz+0xa4>)
    4ba4:	18d3      	adds	r3, r2, r3
    4ba6:	681b      	ldr	r3, [r3, #0]
    4ba8:	469f      	mov	pc, r3
    4baa:	4b22      	ldr	r3, [pc, #136]	; (4c34 <system_clock_source_get_hz+0xa8>)
    4bac:	691b      	ldr	r3, [r3, #16]
    4bae:	e03a      	b.n	4c26 <system_clock_source_get_hz+0x9a>
    4bb0:	4b21      	ldr	r3, [pc, #132]	; (4c38 <system_clock_source_get_hz+0xac>)
    4bb2:	7d1b      	ldrb	r3, [r3, #20]
    4bb4:	071b      	lsls	r3, r3, #28
    4bb6:	0f9b      	lsrs	r3, r3, #30
    4bb8:	b2db      	uxtb	r3, r3
    4bba:	3301      	adds	r3, #1
    4bbc:	001a      	movs	r2, r3
    4bbe:	4b1f      	ldr	r3, [pc, #124]	; (4c3c <system_clock_source_get_hz+0xb0>)
    4bc0:	4353      	muls	r3, r2
    4bc2:	e030      	b.n	4c26 <system_clock_source_get_hz+0x9a>
    4bc4:	2380      	movs	r3, #128	; 0x80
    4bc6:	021b      	lsls	r3, r3, #8
    4bc8:	e02d      	b.n	4c26 <system_clock_source_get_hz+0x9a>
    4bca:	2380      	movs	r3, #128	; 0x80
    4bcc:	021b      	lsls	r3, r3, #8
    4bce:	e02a      	b.n	4c26 <system_clock_source_get_hz+0x9a>
    4bd0:	4b18      	ldr	r3, [pc, #96]	; (4c34 <system_clock_source_get_hz+0xa8>)
    4bd2:	695b      	ldr	r3, [r3, #20]
    4bd4:	e027      	b.n	4c26 <system_clock_source_get_hz+0x9a>
    4bd6:	4b17      	ldr	r3, [pc, #92]	; (4c34 <system_clock_source_get_hz+0xa8>)
    4bd8:	681b      	ldr	r3, [r3, #0]
    4bda:	2202      	movs	r2, #2
    4bdc:	4013      	ands	r3, r2
    4bde:	d101      	bne.n	4be4 <system_clock_source_get_hz+0x58>
    4be0:	2300      	movs	r3, #0
    4be2:	e020      	b.n	4c26 <system_clock_source_get_hz+0x9a>
    4be4:	4b16      	ldr	r3, [pc, #88]	; (4c40 <system_clock_source_get_hz+0xb4>)
    4be6:	4798      	blx	r3
    4be8:	4b12      	ldr	r3, [pc, #72]	; (4c34 <system_clock_source_get_hz+0xa8>)
    4bea:	681b      	ldr	r3, [r3, #0]
    4bec:	2204      	movs	r2, #4
    4bee:	4013      	ands	r3, r2
    4bf0:	d009      	beq.n	4c06 <system_clock_source_get_hz+0x7a>
    4bf2:	2000      	movs	r0, #0
    4bf4:	4b13      	ldr	r3, [pc, #76]	; (4c44 <system_clock_source_get_hz+0xb8>)
    4bf6:	4798      	blx	r3
    4bf8:	0002      	movs	r2, r0
    4bfa:	4b0e      	ldr	r3, [pc, #56]	; (4c34 <system_clock_source_get_hz+0xa8>)
    4bfc:	689b      	ldr	r3, [r3, #8]
    4bfe:	041b      	lsls	r3, r3, #16
    4c00:	0c1b      	lsrs	r3, r3, #16
    4c02:	4353      	muls	r3, r2
    4c04:	e00f      	b.n	4c26 <system_clock_source_get_hz+0x9a>
    4c06:	4b10      	ldr	r3, [pc, #64]	; (4c48 <system_clock_source_get_hz+0xbc>)
    4c08:	e00d      	b.n	4c26 <system_clock_source_get_hz+0x9a>
    4c0a:	4a0b      	ldr	r2, [pc, #44]	; (4c38 <system_clock_source_get_hz+0xac>)
    4c0c:	2328      	movs	r3, #40	; 0x28
    4c0e:	5cd3      	ldrb	r3, [r2, r3]
    4c10:	b2db      	uxtb	r3, r3
    4c12:	001a      	movs	r2, r3
    4c14:	2302      	movs	r3, #2
    4c16:	4013      	ands	r3, r2
    4c18:	d101      	bne.n	4c1e <system_clock_source_get_hz+0x92>
    4c1a:	2300      	movs	r3, #0
    4c1c:	e003      	b.n	4c26 <system_clock_source_get_hz+0x9a>
    4c1e:	4b05      	ldr	r3, [pc, #20]	; (4c34 <system_clock_source_get_hz+0xa8>)
    4c20:	68db      	ldr	r3, [r3, #12]
    4c22:	e000      	b.n	4c26 <system_clock_source_get_hz+0x9a>
    4c24:	2300      	movs	r3, #0
    4c26:	0018      	movs	r0, r3
    4c28:	46bd      	mov	sp, r7
    4c2a:	b002      	add	sp, #8
    4c2c:	bd80      	pop	{r7, pc}
    4c2e:	46c0      	nop			; (mov r8, r8)
    4c30:	0001cb4c 	.word	0x0001cb4c
    4c34:	20000a30 	.word	0x20000a30
    4c38:	40000c00 	.word	0x40000c00
    4c3c:	003d0900 	.word	0x003d0900
    4c40:	00004a8d 	.word	0x00004a8d
    4c44:	000057b9 	.word	0x000057b9
    4c48:	02dc6c00 	.word	0x02dc6c00

00004c4c <system_clock_source_osc16m_set_config>:
    4c4c:	b580      	push	{r7, lr}
    4c4e:	b084      	sub	sp, #16
    4c50:	af00      	add	r7, sp, #0
    4c52:	6078      	str	r0, [r7, #4]
    4c54:	4a1c      	ldr	r2, [pc, #112]	; (4cc8 <system_clock_source_osc16m_set_config+0x7c>)
    4c56:	230c      	movs	r3, #12
    4c58:	18fb      	adds	r3, r7, r3
    4c5a:	7d12      	ldrb	r2, [r2, #20]
    4c5c:	701a      	strb	r2, [r3, #0]
    4c5e:	687b      	ldr	r3, [r7, #4]
    4c60:	781b      	ldrb	r3, [r3, #0]
    4c62:	1c1a      	adds	r2, r3, #0
    4c64:	2303      	movs	r3, #3
    4c66:	4013      	ands	r3, r2
    4c68:	b2da      	uxtb	r2, r3
    4c6a:	230c      	movs	r3, #12
    4c6c:	18fb      	adds	r3, r7, r3
    4c6e:	2103      	movs	r1, #3
    4c70:	400a      	ands	r2, r1
    4c72:	0090      	lsls	r0, r2, #2
    4c74:	781a      	ldrb	r2, [r3, #0]
    4c76:	210c      	movs	r1, #12
    4c78:	438a      	bics	r2, r1
    4c7a:	1c11      	adds	r1, r2, #0
    4c7c:	1c02      	adds	r2, r0, #0
    4c7e:	430a      	orrs	r2, r1
    4c80:	701a      	strb	r2, [r3, #0]
    4c82:	687b      	ldr	r3, [r7, #4]
    4c84:	789a      	ldrb	r2, [r3, #2]
    4c86:	230c      	movs	r3, #12
    4c88:	18fb      	adds	r3, r7, r3
    4c8a:	01d0      	lsls	r0, r2, #7
    4c8c:	781a      	ldrb	r2, [r3, #0]
    4c8e:	217f      	movs	r1, #127	; 0x7f
    4c90:	400a      	ands	r2, r1
    4c92:	1c11      	adds	r1, r2, #0
    4c94:	1c02      	adds	r2, r0, #0
    4c96:	430a      	orrs	r2, r1
    4c98:	701a      	strb	r2, [r3, #0]
    4c9a:	687b      	ldr	r3, [r7, #4]
    4c9c:	785a      	ldrb	r2, [r3, #1]
    4c9e:	230c      	movs	r3, #12
    4ca0:	18fb      	adds	r3, r7, r3
    4ca2:	2101      	movs	r1, #1
    4ca4:	400a      	ands	r2, r1
    4ca6:	0190      	lsls	r0, r2, #6
    4ca8:	781a      	ldrb	r2, [r3, #0]
    4caa:	2140      	movs	r1, #64	; 0x40
    4cac:	438a      	bics	r2, r1
    4cae:	1c11      	adds	r1, r2, #0
    4cb0:	1c02      	adds	r2, r0, #0
    4cb2:	430a      	orrs	r2, r1
    4cb4:	701a      	strb	r2, [r3, #0]
    4cb6:	4a04      	ldr	r2, [pc, #16]	; (4cc8 <system_clock_source_osc16m_set_config+0x7c>)
    4cb8:	230c      	movs	r3, #12
    4cba:	18fb      	adds	r3, r7, r3
    4cbc:	781b      	ldrb	r3, [r3, #0]
    4cbe:	7513      	strb	r3, [r2, #20]
    4cc0:	46c0      	nop			; (mov r8, r8)
    4cc2:	46bd      	mov	sp, r7
    4cc4:	b004      	add	sp, #16
    4cc6:	bd80      	pop	{r7, pc}
    4cc8:	40000c00 	.word	0x40000c00

00004ccc <system_clock_source_xosc32k_set_config>:
    4ccc:	b580      	push	{r7, lr}
    4cce:	b084      	sub	sp, #16
    4cd0:	af00      	add	r7, sp, #0
    4cd2:	6078      	str	r0, [r7, #4]
    4cd4:	4b3a      	ldr	r3, [pc, #232]	; (4dc0 <system_clock_source_xosc32k_set_config+0xf4>)
    4cd6:	695b      	ldr	r3, [r3, #20]
    4cd8:	60fb      	str	r3, [r7, #12]
    4cda:	687b      	ldr	r3, [r7, #4]
    4cdc:	785b      	ldrb	r3, [r3, #1]
    4cde:	1c1a      	adds	r2, r3, #0
    4ce0:	2307      	movs	r3, #7
    4ce2:	4013      	ands	r3, r2
    4ce4:	b2da      	uxtb	r2, r3
    4ce6:	230d      	movs	r3, #13
    4ce8:	18fb      	adds	r3, r7, r3
    4cea:	2107      	movs	r1, #7
    4cec:	400a      	ands	r2, r1
    4cee:	0010      	movs	r0, r2
    4cf0:	781a      	ldrb	r2, [r3, #0]
    4cf2:	2107      	movs	r1, #7
    4cf4:	438a      	bics	r2, r1
    4cf6:	1c11      	adds	r1, r2, #0
    4cf8:	1c02      	adds	r2, r0, #0
    4cfa:	430a      	orrs	r2, r1
    4cfc:	701a      	strb	r2, [r3, #0]
    4cfe:	687b      	ldr	r3, [r7, #4]
    4d00:	781b      	ldrb	r3, [r3, #0]
    4d02:	2b00      	cmp	r3, #0
    4d04:	d106      	bne.n	4d14 <system_clock_source_xosc32k_set_config+0x48>
    4d06:	230c      	movs	r3, #12
    4d08:	18fb      	adds	r3, r7, r3
    4d0a:	781a      	ldrb	r2, [r3, #0]
    4d0c:	2104      	movs	r1, #4
    4d0e:	430a      	orrs	r2, r1
    4d10:	701a      	strb	r2, [r3, #0]
    4d12:	e005      	b.n	4d20 <system_clock_source_xosc32k_set_config+0x54>
    4d14:	230c      	movs	r3, #12
    4d16:	18fb      	adds	r3, r7, r3
    4d18:	781a      	ldrb	r2, [r3, #0]
    4d1a:	2104      	movs	r1, #4
    4d1c:	438a      	bics	r2, r1
    4d1e:	701a      	strb	r2, [r3, #0]
    4d20:	687b      	ldr	r3, [r7, #4]
    4d22:	789a      	ldrb	r2, [r3, #2]
    4d24:	230c      	movs	r3, #12
    4d26:	18fb      	adds	r3, r7, r3
    4d28:	2101      	movs	r1, #1
    4d2a:	400a      	ands	r2, r1
    4d2c:	0110      	lsls	r0, r2, #4
    4d2e:	781a      	ldrb	r2, [r3, #0]
    4d30:	2110      	movs	r1, #16
    4d32:	438a      	bics	r2, r1
    4d34:	1c11      	adds	r1, r2, #0
    4d36:	1c02      	adds	r2, r0, #0
    4d38:	430a      	orrs	r2, r1
    4d3a:	701a      	strb	r2, [r3, #0]
    4d3c:	687b      	ldr	r3, [r7, #4]
    4d3e:	78da      	ldrb	r2, [r3, #3]
    4d40:	230c      	movs	r3, #12
    4d42:	18fb      	adds	r3, r7, r3
    4d44:	2101      	movs	r1, #1
    4d46:	400a      	ands	r2, r1
    4d48:	00d0      	lsls	r0, r2, #3
    4d4a:	781a      	ldrb	r2, [r3, #0]
    4d4c:	2108      	movs	r1, #8
    4d4e:	438a      	bics	r2, r1
    4d50:	1c11      	adds	r1, r2, #0
    4d52:	1c02      	adds	r2, r0, #0
    4d54:	430a      	orrs	r2, r1
    4d56:	701a      	strb	r2, [r3, #0]
    4d58:	687b      	ldr	r3, [r7, #4]
    4d5a:	7a5a      	ldrb	r2, [r3, #9]
    4d5c:	230c      	movs	r3, #12
    4d5e:	18fb      	adds	r3, r7, r3
    4d60:	01d0      	lsls	r0, r2, #7
    4d62:	781a      	ldrb	r2, [r3, #0]
    4d64:	217f      	movs	r1, #127	; 0x7f
    4d66:	400a      	ands	r2, r1
    4d68:	1c11      	adds	r1, r2, #0
    4d6a:	1c02      	adds	r2, r0, #0
    4d6c:	430a      	orrs	r2, r1
    4d6e:	701a      	strb	r2, [r3, #0]
    4d70:	687b      	ldr	r3, [r7, #4]
    4d72:	7a1a      	ldrb	r2, [r3, #8]
    4d74:	230c      	movs	r3, #12
    4d76:	18fb      	adds	r3, r7, r3
    4d78:	2101      	movs	r1, #1
    4d7a:	400a      	ands	r2, r1
    4d7c:	0190      	lsls	r0, r2, #6
    4d7e:	781a      	ldrb	r2, [r3, #0]
    4d80:	2140      	movs	r1, #64	; 0x40
    4d82:	438a      	bics	r2, r1
    4d84:	1c11      	adds	r1, r2, #0
    4d86:	1c02      	adds	r2, r0, #0
    4d88:	430a      	orrs	r2, r1
    4d8a:	701a      	strb	r2, [r3, #0]
    4d8c:	687b      	ldr	r3, [r7, #4]
    4d8e:	7a9a      	ldrb	r2, [r3, #10]
    4d90:	230d      	movs	r3, #13
    4d92:	18fb      	adds	r3, r7, r3
    4d94:	2101      	movs	r1, #1
    4d96:	400a      	ands	r2, r1
    4d98:	0110      	lsls	r0, r2, #4
    4d9a:	781a      	ldrb	r2, [r3, #0]
    4d9c:	2110      	movs	r1, #16
    4d9e:	438a      	bics	r2, r1
    4da0:	1c11      	adds	r1, r2, #0
    4da2:	1c02      	adds	r2, r0, #0
    4da4:	430a      	orrs	r2, r1
    4da6:	701a      	strb	r2, [r3, #0]
    4da8:	687b      	ldr	r3, [r7, #4]
    4daa:	685a      	ldr	r2, [r3, #4]
    4dac:	4b05      	ldr	r3, [pc, #20]	; (4dc4 <system_clock_source_xosc32k_set_config+0xf8>)
    4dae:	615a      	str	r2, [r3, #20]
    4db0:	4b03      	ldr	r3, [pc, #12]	; (4dc0 <system_clock_source_xosc32k_set_config+0xf4>)
    4db2:	68fa      	ldr	r2, [r7, #12]
    4db4:	615a      	str	r2, [r3, #20]
    4db6:	46c0      	nop			; (mov r8, r8)
    4db8:	46bd      	mov	sp, r7
    4dba:	b004      	add	sp, #16
    4dbc:	bd80      	pop	{r7, pc}
    4dbe:	46c0      	nop			; (mov r8, r8)
    4dc0:	40001000 	.word	0x40001000
    4dc4:	20000a30 	.word	0x20000a30

00004dc8 <system_clock_source_dfll_set_config>:
    4dc8:	b580      	push	{r7, lr}
    4dca:	b082      	sub	sp, #8
    4dcc:	af00      	add	r7, sp, #0
    4dce:	6078      	str	r0, [r7, #4]
    4dd0:	687b      	ldr	r3, [r7, #4]
    4dd2:	7a9b      	ldrb	r3, [r3, #10]
    4dd4:	029b      	lsls	r3, r3, #10
    4dd6:	041b      	lsls	r3, r3, #16
    4dd8:	0c1a      	lsrs	r2, r3, #16
    4dda:	687b      	ldr	r3, [r7, #4]
    4ddc:	899b      	ldrh	r3, [r3, #12]
    4dde:	059b      	lsls	r3, r3, #22
    4de0:	0d9b      	lsrs	r3, r3, #22
    4de2:	431a      	orrs	r2, r3
    4de4:	4b2c      	ldr	r3, [pc, #176]	; (4e98 <system_clock_source_dfll_set_config+0xd0>)
    4de6:	605a      	str	r2, [r3, #4]
    4de8:	687b      	ldr	r3, [r7, #4]
    4dea:	7a1a      	ldrb	r2, [r3, #8]
    4dec:	687b      	ldr	r3, [r7, #4]
    4dee:	7a5b      	ldrb	r3, [r3, #9]
    4df0:	4313      	orrs	r3, r2
    4df2:	b2db      	uxtb	r3, r3
    4df4:	001a      	movs	r2, r3
    4df6:	687b      	ldr	r3, [r7, #4]
    4df8:	889b      	ldrh	r3, [r3, #4]
    4dfa:	4313      	orrs	r3, r2
    4dfc:	687a      	ldr	r2, [r7, #4]
    4dfe:	88d2      	ldrh	r2, [r2, #6]
    4e00:	431a      	orrs	r2, r3
    4e02:	687b      	ldr	r3, [r7, #4]
    4e04:	785b      	ldrb	r3, [r3, #1]
    4e06:	01db      	lsls	r3, r3, #7
    4e08:	431a      	orrs	r2, r3
    4e0a:	687b      	ldr	r3, [r7, #4]
    4e0c:	789b      	ldrb	r3, [r3, #2]
    4e0e:	019b      	lsls	r3, r3, #6
    4e10:	431a      	orrs	r2, r3
    4e12:	4b21      	ldr	r3, [pc, #132]	; (4e98 <system_clock_source_dfll_set_config+0xd0>)
    4e14:	601a      	str	r2, [r3, #0]
    4e16:	687b      	ldr	r3, [r7, #4]
    4e18:	781b      	ldrb	r3, [r3, #0]
    4e1a:	2b04      	cmp	r3, #4
    4e1c:	d116      	bne.n	4e4c <system_clock_source_dfll_set_config+0x84>
    4e1e:	687b      	ldr	r3, [r7, #4]
    4e20:	7b9b      	ldrb	r3, [r3, #14]
    4e22:	069b      	lsls	r3, r3, #26
    4e24:	001a      	movs	r2, r3
    4e26:	687b      	ldr	r3, [r7, #4]
    4e28:	8a1b      	ldrh	r3, [r3, #16]
    4e2a:	041b      	lsls	r3, r3, #16
    4e2c:	0019      	movs	r1, r3
    4e2e:	4b1b      	ldr	r3, [pc, #108]	; (4e9c <system_clock_source_dfll_set_config+0xd4>)
    4e30:	400b      	ands	r3, r1
    4e32:	4313      	orrs	r3, r2
    4e34:	687a      	ldr	r2, [r7, #4]
    4e36:	8a52      	ldrh	r2, [r2, #18]
    4e38:	431a      	orrs	r2, r3
    4e3a:	4b17      	ldr	r3, [pc, #92]	; (4e98 <system_clock_source_dfll_set_config+0xd0>)
    4e3c:	609a      	str	r2, [r3, #8]
    4e3e:	4b16      	ldr	r3, [pc, #88]	; (4e98 <system_clock_source_dfll_set_config+0xd0>)
    4e40:	681b      	ldr	r3, [r3, #0]
    4e42:	687a      	ldr	r2, [r7, #4]
    4e44:	7812      	ldrb	r2, [r2, #0]
    4e46:	431a      	orrs	r2, r3
    4e48:	4b13      	ldr	r3, [pc, #76]	; (4e98 <system_clock_source_dfll_set_config+0xd0>)
    4e4a:	601a      	str	r2, [r3, #0]
    4e4c:	687b      	ldr	r3, [r7, #4]
    4e4e:	781b      	ldrb	r3, [r3, #0]
    4e50:	2b20      	cmp	r3, #32
    4e52:	d11c      	bne.n	4e8e <system_clock_source_dfll_set_config+0xc6>
    4e54:	687b      	ldr	r3, [r7, #4]
    4e56:	7b9b      	ldrb	r3, [r3, #14]
    4e58:	069b      	lsls	r3, r3, #26
    4e5a:	001a      	movs	r2, r3
    4e5c:	687b      	ldr	r3, [r7, #4]
    4e5e:	8a1b      	ldrh	r3, [r3, #16]
    4e60:	041b      	lsls	r3, r3, #16
    4e62:	0019      	movs	r1, r3
    4e64:	4b0d      	ldr	r3, [pc, #52]	; (4e9c <system_clock_source_dfll_set_config+0xd4>)
    4e66:	400b      	ands	r3, r1
    4e68:	4313      	orrs	r3, r2
    4e6a:	687a      	ldr	r2, [r7, #4]
    4e6c:	8a52      	ldrh	r2, [r2, #18]
    4e6e:	431a      	orrs	r2, r3
    4e70:	4b09      	ldr	r3, [pc, #36]	; (4e98 <system_clock_source_dfll_set_config+0xd0>)
    4e72:	609a      	str	r2, [r3, #8]
    4e74:	4b08      	ldr	r3, [pc, #32]	; (4e98 <system_clock_source_dfll_set_config+0xd0>)
    4e76:	681b      	ldr	r3, [r3, #0]
    4e78:	687a      	ldr	r2, [r7, #4]
    4e7a:	7812      	ldrb	r2, [r2, #0]
    4e7c:	2104      	movs	r1, #4
    4e7e:	430a      	orrs	r2, r1
    4e80:	b2d2      	uxtb	r2, r2
    4e82:	4313      	orrs	r3, r2
    4e84:	2280      	movs	r2, #128	; 0x80
    4e86:	00d2      	lsls	r2, r2, #3
    4e88:	431a      	orrs	r2, r3
    4e8a:	4b03      	ldr	r3, [pc, #12]	; (4e98 <system_clock_source_dfll_set_config+0xd0>)
    4e8c:	601a      	str	r2, [r3, #0]
    4e8e:	46c0      	nop			; (mov r8, r8)
    4e90:	46bd      	mov	sp, r7
    4e92:	b002      	add	sp, #8
    4e94:	bd80      	pop	{r7, pc}
    4e96:	46c0      	nop			; (mov r8, r8)
    4e98:	20000a30 	.word	0x20000a30
    4e9c:	03ff0000 	.word	0x03ff0000

00004ea0 <system_clock_source_enable>:
    4ea0:	b580      	push	{r7, lr}
    4ea2:	b082      	sub	sp, #8
    4ea4:	af00      	add	r7, sp, #0
    4ea6:	0002      	movs	r2, r0
    4ea8:	1dfb      	adds	r3, r7, #7
    4eaa:	701a      	strb	r2, [r3, #0]
    4eac:	1dfb      	adds	r3, r7, #7
    4eae:	781b      	ldrb	r3, [r3, #0]
    4eb0:	2b08      	cmp	r3, #8
    4eb2:	d844      	bhi.n	4f3e <system_clock_source_enable+0x9e>
    4eb4:	009a      	lsls	r2, r3, #2
    4eb6:	4b25      	ldr	r3, [pc, #148]	; (4f4c <system_clock_source_enable+0xac>)
    4eb8:	18d3      	adds	r3, r2, r3
    4eba:	681b      	ldr	r3, [r3, #0]
    4ebc:	469f      	mov	pc, r3
    4ebe:	4a24      	ldr	r2, [pc, #144]	; (4f50 <system_clock_source_enable+0xb0>)
    4ec0:	4b23      	ldr	r3, [pc, #140]	; (4f50 <system_clock_source_enable+0xb0>)
    4ec2:	7d1b      	ldrb	r3, [r3, #20]
    4ec4:	b2db      	uxtb	r3, r3
    4ec6:	2102      	movs	r1, #2
    4ec8:	430b      	orrs	r3, r1
    4eca:	b2db      	uxtb	r3, r3
    4ecc:	7513      	strb	r3, [r2, #20]
    4ece:	2300      	movs	r3, #0
    4ed0:	e038      	b.n	4f44 <system_clock_source_enable+0xa4>
    4ed2:	4b20      	ldr	r3, [pc, #128]	; (4f54 <system_clock_source_enable+0xb4>)
    4ed4:	4a1f      	ldr	r2, [pc, #124]	; (4f54 <system_clock_source_enable+0xb4>)
    4ed6:	6992      	ldr	r2, [r2, #24]
    4ed8:	2102      	movs	r1, #2
    4eda:	430a      	orrs	r2, r1
    4edc:	619a      	str	r2, [r3, #24]
    4ede:	e030      	b.n	4f42 <system_clock_source_enable+0xa2>
    4ee0:	4a1b      	ldr	r2, [pc, #108]	; (4f50 <system_clock_source_enable+0xb0>)
    4ee2:	4b1b      	ldr	r3, [pc, #108]	; (4f50 <system_clock_source_enable+0xb0>)
    4ee4:	8a1b      	ldrh	r3, [r3, #16]
    4ee6:	b29b      	uxth	r3, r3
    4ee8:	2102      	movs	r1, #2
    4eea:	430b      	orrs	r3, r1
    4eec:	b29b      	uxth	r3, r3
    4eee:	8213      	strh	r3, [r2, #16]
    4ef0:	e027      	b.n	4f42 <system_clock_source_enable+0xa2>
    4ef2:	4b18      	ldr	r3, [pc, #96]	; (4f54 <system_clock_source_enable+0xb4>)
    4ef4:	4a17      	ldr	r2, [pc, #92]	; (4f54 <system_clock_source_enable+0xb4>)
    4ef6:	6952      	ldr	r2, [r2, #20]
    4ef8:	2102      	movs	r1, #2
    4efa:	430a      	orrs	r2, r1
    4efc:	615a      	str	r2, [r3, #20]
    4efe:	e020      	b.n	4f42 <system_clock_source_enable+0xa2>
    4f00:	4b15      	ldr	r3, [pc, #84]	; (4f58 <system_clock_source_enable+0xb8>)
    4f02:	681b      	ldr	r3, [r3, #0]
    4f04:	2202      	movs	r2, #2
    4f06:	431a      	orrs	r2, r3
    4f08:	4b13      	ldr	r3, [pc, #76]	; (4f58 <system_clock_source_enable+0xb8>)
    4f0a:	601a      	str	r2, [r3, #0]
    4f0c:	4b13      	ldr	r3, [pc, #76]	; (4f5c <system_clock_source_enable+0xbc>)
    4f0e:	4798      	blx	r3
    4f10:	e017      	b.n	4f42 <system_clock_source_enable+0xa2>
    4f12:	4a0f      	ldr	r2, [pc, #60]	; (4f50 <system_clock_source_enable+0xb0>)
    4f14:	490e      	ldr	r1, [pc, #56]	; (4f50 <system_clock_source_enable+0xb0>)
    4f16:	2328      	movs	r3, #40	; 0x28
    4f18:	5ccb      	ldrb	r3, [r1, r3]
    4f1a:	b2db      	uxtb	r3, r3
    4f1c:	2102      	movs	r1, #2
    4f1e:	430b      	orrs	r3, r1
    4f20:	b2d9      	uxtb	r1, r3
    4f22:	2328      	movs	r3, #40	; 0x28
    4f24:	54d1      	strb	r1, [r2, r3]
    4f26:	46c0      	nop			; (mov r8, r8)
    4f28:	4a09      	ldr	r2, [pc, #36]	; (4f50 <system_clock_source_enable+0xb0>)
    4f2a:	2338      	movs	r3, #56	; 0x38
    4f2c:	5cd3      	ldrb	r3, [r2, r3]
    4f2e:	b2db      	uxtb	r3, r3
    4f30:	001a      	movs	r2, r3
    4f32:	2302      	movs	r3, #2
    4f34:	4013      	ands	r3, r2
    4f36:	d1f7      	bne.n	4f28 <system_clock_source_enable+0x88>
    4f38:	e003      	b.n	4f42 <system_clock_source_enable+0xa2>
    4f3a:	2300      	movs	r3, #0
    4f3c:	e002      	b.n	4f44 <system_clock_source_enable+0xa4>
    4f3e:	2317      	movs	r3, #23
    4f40:	e000      	b.n	4f44 <system_clock_source_enable+0xa4>
    4f42:	2300      	movs	r3, #0
    4f44:	0018      	movs	r0, r3
    4f46:	46bd      	mov	sp, r7
    4f48:	b002      	add	sp, #8
    4f4a:	bd80      	pop	{r7, pc}
    4f4c:	0001cb70 	.word	0x0001cb70
    4f50:	40000c00 	.word	0x40000c00
    4f54:	40001000 	.word	0x40001000
    4f58:	20000a30 	.word	0x20000a30
    4f5c:	00004b49 	.word	0x00004b49

00004f60 <system_clock_source_disable>:
    4f60:	b580      	push	{r7, lr}
    4f62:	b082      	sub	sp, #8
    4f64:	af00      	add	r7, sp, #0
    4f66:	0002      	movs	r2, r0
    4f68:	1dfb      	adds	r3, r7, #7
    4f6a:	701a      	strb	r2, [r3, #0]
    4f6c:	1dfb      	adds	r3, r7, #7
    4f6e:	781b      	ldrb	r3, [r3, #0]
    4f70:	2b08      	cmp	r3, #8
    4f72:	d83c      	bhi.n	4fee <system_clock_source_disable+0x8e>
    4f74:	009a      	lsls	r2, r3, #2
    4f76:	4b21      	ldr	r3, [pc, #132]	; (4ffc <system_clock_source_disable+0x9c>)
    4f78:	18d3      	adds	r3, r2, r3
    4f7a:	681b      	ldr	r3, [r3, #0]
    4f7c:	469f      	mov	pc, r3
    4f7e:	4a20      	ldr	r2, [pc, #128]	; (5000 <system_clock_source_disable+0xa0>)
    4f80:	4b1f      	ldr	r3, [pc, #124]	; (5000 <system_clock_source_disable+0xa0>)
    4f82:	7d1b      	ldrb	r3, [r3, #20]
    4f84:	b2db      	uxtb	r3, r3
    4f86:	2102      	movs	r1, #2
    4f88:	438b      	bics	r3, r1
    4f8a:	b2db      	uxtb	r3, r3
    4f8c:	7513      	strb	r3, [r2, #20]
    4f8e:	e030      	b.n	4ff2 <system_clock_source_disable+0x92>
    4f90:	4b1c      	ldr	r3, [pc, #112]	; (5004 <system_clock_source_disable+0xa4>)
    4f92:	4a1c      	ldr	r2, [pc, #112]	; (5004 <system_clock_source_disable+0xa4>)
    4f94:	6992      	ldr	r2, [r2, #24]
    4f96:	2102      	movs	r1, #2
    4f98:	438a      	bics	r2, r1
    4f9a:	619a      	str	r2, [r3, #24]
    4f9c:	e029      	b.n	4ff2 <system_clock_source_disable+0x92>
    4f9e:	4a18      	ldr	r2, [pc, #96]	; (5000 <system_clock_source_disable+0xa0>)
    4fa0:	4b17      	ldr	r3, [pc, #92]	; (5000 <system_clock_source_disable+0xa0>)
    4fa2:	8a1b      	ldrh	r3, [r3, #16]
    4fa4:	b29b      	uxth	r3, r3
    4fa6:	2102      	movs	r1, #2
    4fa8:	438b      	bics	r3, r1
    4faa:	b29b      	uxth	r3, r3
    4fac:	8213      	strh	r3, [r2, #16]
    4fae:	e020      	b.n	4ff2 <system_clock_source_disable+0x92>
    4fb0:	4b14      	ldr	r3, [pc, #80]	; (5004 <system_clock_source_disable+0xa4>)
    4fb2:	4a14      	ldr	r2, [pc, #80]	; (5004 <system_clock_source_disable+0xa4>)
    4fb4:	6952      	ldr	r2, [r2, #20]
    4fb6:	2102      	movs	r1, #2
    4fb8:	438a      	bics	r2, r1
    4fba:	615a      	str	r2, [r3, #20]
    4fbc:	e019      	b.n	4ff2 <system_clock_source_disable+0x92>
    4fbe:	4b12      	ldr	r3, [pc, #72]	; (5008 <system_clock_source_disable+0xa8>)
    4fc0:	681b      	ldr	r3, [r3, #0]
    4fc2:	2202      	movs	r2, #2
    4fc4:	4393      	bics	r3, r2
    4fc6:	001a      	movs	r2, r3
    4fc8:	4b0f      	ldr	r3, [pc, #60]	; (5008 <system_clock_source_disable+0xa8>)
    4fca:	601a      	str	r2, [r3, #0]
    4fcc:	4a0c      	ldr	r2, [pc, #48]	; (5000 <system_clock_source_disable+0xa0>)
    4fce:	4b0e      	ldr	r3, [pc, #56]	; (5008 <system_clock_source_disable+0xa8>)
    4fd0:	681b      	ldr	r3, [r3, #0]
    4fd2:	b29b      	uxth	r3, r3
    4fd4:	8313      	strh	r3, [r2, #24]
    4fd6:	e00c      	b.n	4ff2 <system_clock_source_disable+0x92>
    4fd8:	4a09      	ldr	r2, [pc, #36]	; (5000 <system_clock_source_disable+0xa0>)
    4fda:	4909      	ldr	r1, [pc, #36]	; (5000 <system_clock_source_disable+0xa0>)
    4fdc:	2328      	movs	r3, #40	; 0x28
    4fde:	5ccb      	ldrb	r3, [r1, r3]
    4fe0:	b2db      	uxtb	r3, r3
    4fe2:	2102      	movs	r1, #2
    4fe4:	438b      	bics	r3, r1
    4fe6:	b2d9      	uxtb	r1, r3
    4fe8:	2328      	movs	r3, #40	; 0x28
    4fea:	54d1      	strb	r1, [r2, r3]
    4fec:	e001      	b.n	4ff2 <system_clock_source_disable+0x92>
    4fee:	2317      	movs	r3, #23
    4ff0:	e000      	b.n	4ff4 <system_clock_source_disable+0x94>
    4ff2:	2300      	movs	r3, #0
    4ff4:	0018      	movs	r0, r3
    4ff6:	46bd      	mov	sp, r7
    4ff8:	b002      	add	sp, #8
    4ffa:	bd80      	pop	{r7, pc}
    4ffc:	0001cb94 	.word	0x0001cb94
    5000:	40000c00 	.word	0x40000c00
    5004:	40001000 	.word	0x40001000
    5008:	20000a30 	.word	0x20000a30

0000500c <system_clock_source_is_ready>:
    500c:	b580      	push	{r7, lr}
    500e:	b084      	sub	sp, #16
    5010:	af00      	add	r7, sp, #0
    5012:	0002      	movs	r2, r0
    5014:	1dfb      	adds	r3, r7, #7
    5016:	701a      	strb	r2, [r3, #0]
    5018:	2300      	movs	r3, #0
    501a:	60fb      	str	r3, [r7, #12]
    501c:	1dfb      	adds	r3, r7, #7
    501e:	781b      	ldrb	r3, [r3, #0]
    5020:	2b08      	cmp	r3, #8
    5022:	d84f      	bhi.n	50c4 <system_clock_source_is_ready+0xb8>
    5024:	009a      	lsls	r2, r3, #2
    5026:	4b2a      	ldr	r3, [pc, #168]	; (50d0 <system_clock_source_is_ready+0xc4>)
    5028:	18d3      	adds	r3, r2, r3
    502a:	681b      	ldr	r3, [r3, #0]
    502c:	469f      	mov	pc, r3
    502e:	2310      	movs	r3, #16
    5030:	60fb      	str	r3, [r7, #12]
    5032:	4b28      	ldr	r3, [pc, #160]	; (50d4 <system_clock_source_is_ready+0xc8>)
    5034:	68db      	ldr	r3, [r3, #12]
    5036:	68fa      	ldr	r2, [r7, #12]
    5038:	401a      	ands	r2, r3
    503a:	68fb      	ldr	r3, [r7, #12]
    503c:	1ad3      	subs	r3, r2, r3
    503e:	425a      	negs	r2, r3
    5040:	4153      	adcs	r3, r2
    5042:	b2db      	uxtb	r3, r3
    5044:	e03f      	b.n	50c6 <system_clock_source_is_ready+0xba>
    5046:	2302      	movs	r3, #2
    5048:	60fb      	str	r3, [r7, #12]
    504a:	4b23      	ldr	r3, [pc, #140]	; (50d8 <system_clock_source_is_ready+0xcc>)
    504c:	68db      	ldr	r3, [r3, #12]
    504e:	68fa      	ldr	r2, [r7, #12]
    5050:	401a      	ands	r2, r3
    5052:	68fb      	ldr	r3, [r7, #12]
    5054:	1ad3      	subs	r3, r2, r3
    5056:	425a      	negs	r2, r3
    5058:	4153      	adcs	r3, r2
    505a:	b2db      	uxtb	r3, r3
    505c:	e033      	b.n	50c6 <system_clock_source_is_ready+0xba>
    505e:	2301      	movs	r3, #1
    5060:	60fb      	str	r3, [r7, #12]
    5062:	4b1c      	ldr	r3, [pc, #112]	; (50d4 <system_clock_source_is_ready+0xc8>)
    5064:	68db      	ldr	r3, [r3, #12]
    5066:	68fa      	ldr	r2, [r7, #12]
    5068:	401a      	ands	r2, r3
    506a:	68fb      	ldr	r3, [r7, #12]
    506c:	1ad3      	subs	r3, r2, r3
    506e:	425a      	negs	r2, r3
    5070:	4153      	adcs	r3, r2
    5072:	b2db      	uxtb	r3, r3
    5074:	e027      	b.n	50c6 <system_clock_source_is_ready+0xba>
    5076:	2301      	movs	r3, #1
    5078:	60fb      	str	r3, [r7, #12]
    507a:	4b17      	ldr	r3, [pc, #92]	; (50d8 <system_clock_source_is_ready+0xcc>)
    507c:	68db      	ldr	r3, [r3, #12]
    507e:	68fa      	ldr	r2, [r7, #12]
    5080:	401a      	ands	r2, r3
    5082:	68fb      	ldr	r3, [r7, #12]
    5084:	1ad3      	subs	r3, r2, r3
    5086:	425a      	negs	r2, r3
    5088:	4153      	adcs	r3, r2
    508a:	b2db      	uxtb	r3, r3
    508c:	e01b      	b.n	50c6 <system_clock_source_is_ready+0xba>
    508e:	23d0      	movs	r3, #208	; 0xd0
    5090:	011b      	lsls	r3, r3, #4
    5092:	60fb      	str	r3, [r7, #12]
    5094:	4b0f      	ldr	r3, [pc, #60]	; (50d4 <system_clock_source_is_ready+0xc8>)
    5096:	68db      	ldr	r3, [r3, #12]
    5098:	68fa      	ldr	r2, [r7, #12]
    509a:	401a      	ands	r2, r3
    509c:	68fb      	ldr	r3, [r7, #12]
    509e:	1ad3      	subs	r3, r2, r3
    50a0:	425a      	negs	r2, r3
    50a2:	4153      	adcs	r3, r2
    50a4:	b2db      	uxtb	r3, r3
    50a6:	e00e      	b.n	50c6 <system_clock_source_is_ready+0xba>
    50a8:	4a0a      	ldr	r2, [pc, #40]	; (50d4 <system_clock_source_is_ready+0xc8>)
    50aa:	233c      	movs	r3, #60	; 0x3c
    50ac:	5cd3      	ldrb	r3, [r2, r3]
    50ae:	b2db      	uxtb	r3, r3
    50b0:	001a      	movs	r2, r3
    50b2:	2303      	movs	r3, #3
    50b4:	4013      	ands	r3, r2
    50b6:	3b03      	subs	r3, #3
    50b8:	425a      	negs	r2, r3
    50ba:	4153      	adcs	r3, r2
    50bc:	b2db      	uxtb	r3, r3
    50be:	e002      	b.n	50c6 <system_clock_source_is_ready+0xba>
    50c0:	2301      	movs	r3, #1
    50c2:	e000      	b.n	50c6 <system_clock_source_is_ready+0xba>
    50c4:	2300      	movs	r3, #0
    50c6:	0018      	movs	r0, r3
    50c8:	46bd      	mov	sp, r7
    50ca:	b004      	add	sp, #16
    50cc:	bd80      	pop	{r7, pc}
    50ce:	46c0      	nop			; (mov r8, r8)
    50d0:	0001cbb8 	.word	0x0001cbb8
    50d4:	40000c00 	.word	0x40000c00
    50d8:	40001000 	.word	0x40001000

000050dc <system_clock_init>:
    50dc:	b580      	push	{r7, lr}
    50de:	b0aa      	sub	sp, #168	; 0xa8
    50e0:	af00      	add	r7, sp, #0
    50e2:	4b91      	ldr	r3, [pc, #580]	; (5328 <system_clock_init+0x24c>)
    50e4:	2280      	movs	r2, #128	; 0x80
    50e6:	0052      	lsls	r2, r2, #1
    50e8:	609a      	str	r2, [r3, #8]
    50ea:	4b90      	ldr	r3, [pc, #576]	; (532c <system_clock_init+0x250>)
    50ec:	2203      	movs	r2, #3
    50ee:	609a      	str	r2, [r3, #8]
    50f0:	2002      	movs	r0, #2
    50f2:	4b8f      	ldr	r3, [pc, #572]	; (5330 <system_clock_init+0x254>)
    50f4:	4798      	blx	r3
    50f6:	2002      	movs	r0, #2
    50f8:	4b8e      	ldr	r3, [pc, #568]	; (5334 <system_clock_init+0x258>)
    50fa:	4798      	blx	r3
    50fc:	2394      	movs	r3, #148	; 0x94
    50fe:	18fb      	adds	r3, r7, r3
    5100:	0018      	movs	r0, r3
    5102:	4b8d      	ldr	r3, [pc, #564]	; (5338 <system_clock_init+0x25c>)
    5104:	4798      	blx	r3
    5106:	2394      	movs	r3, #148	; 0x94
    5108:	18fb      	adds	r3, r7, r3
    510a:	2280      	movs	r2, #128	; 0x80
    510c:	0212      	lsls	r2, r2, #8
    510e:	605a      	str	r2, [r3, #4]
    5110:	2394      	movs	r3, #148	; 0x94
    5112:	18fb      	adds	r3, r7, r3
    5114:	2200      	movs	r2, #0
    5116:	701a      	strb	r2, [r3, #0]
    5118:	2394      	movs	r3, #148	; 0x94
    511a:	18fb      	adds	r3, r7, r3
    511c:	2204      	movs	r2, #4
    511e:	705a      	strb	r2, [r3, #1]
    5120:	2394      	movs	r3, #148	; 0x94
    5122:	18fb      	adds	r3, r7, r3
    5124:	2200      	movs	r2, #0
    5126:	709a      	strb	r2, [r3, #2]
    5128:	2394      	movs	r3, #148	; 0x94
    512a:	18fb      	adds	r3, r7, r3
    512c:	2201      	movs	r2, #1
    512e:	70da      	strb	r2, [r3, #3]
    5130:	2394      	movs	r3, #148	; 0x94
    5132:	18fb      	adds	r3, r7, r3
    5134:	2200      	movs	r2, #0
    5136:	725a      	strb	r2, [r3, #9]
    5138:	2394      	movs	r3, #148	; 0x94
    513a:	18fb      	adds	r3, r7, r3
    513c:	2200      	movs	r2, #0
    513e:	721a      	strb	r2, [r3, #8]
    5140:	2394      	movs	r3, #148	; 0x94
    5142:	18fb      	adds	r3, r7, r3
    5144:	0018      	movs	r0, r3
    5146:	4b7d      	ldr	r3, [pc, #500]	; (533c <system_clock_init+0x260>)
    5148:	4798      	blx	r3
    514a:	2005      	movs	r0, #5
    514c:	4b7c      	ldr	r3, [pc, #496]	; (5340 <system_clock_init+0x264>)
    514e:	4798      	blx	r3
    5150:	46c0      	nop			; (mov r8, r8)
    5152:	2005      	movs	r0, #5
    5154:	4b7b      	ldr	r3, [pc, #492]	; (5344 <system_clock_init+0x268>)
    5156:	4798      	blx	r3
    5158:	0003      	movs	r3, r0
    515a:	001a      	movs	r2, r3
    515c:	2301      	movs	r3, #1
    515e:	4053      	eors	r3, r2
    5160:	b2db      	uxtb	r3, r3
    5162:	2b00      	cmp	r3, #0
    5164:	d1f5      	bne.n	5152 <system_clock_init+0x76>
    5166:	4b78      	ldr	r3, [pc, #480]	; (5348 <system_clock_init+0x26c>)
    5168:	4798      	blx	r3
    516a:	2380      	movs	r3, #128	; 0x80
    516c:	18fb      	adds	r3, r7, r3
    516e:	0018      	movs	r0, r3
    5170:	4b76      	ldr	r3, [pc, #472]	; (534c <system_clock_init+0x270>)
    5172:	4798      	blx	r3
    5174:	2380      	movs	r3, #128	; 0x80
    5176:	18fb      	adds	r3, r7, r3
    5178:	2204      	movs	r2, #4
    517a:	701a      	strb	r2, [r3, #0]
    517c:	2380      	movs	r3, #128	; 0x80
    517e:	18fb      	adds	r3, r7, r3
    5180:	2200      	movs	r2, #0
    5182:	705a      	strb	r2, [r3, #1]
    5184:	2380      	movs	r3, #128	; 0x80
    5186:	18fb      	adds	r3, r7, r3
    5188:	2200      	movs	r2, #0
    518a:	709a      	strb	r2, [r3, #2]
    518c:	4b70      	ldr	r3, [pc, #448]	; (5350 <system_clock_init+0x274>)
    518e:	681b      	ldr	r3, [r3, #0]
    5190:	0e9b      	lsrs	r3, r3, #26
    5192:	22a4      	movs	r2, #164	; 0xa4
    5194:	18ba      	adds	r2, r7, r2
    5196:	6013      	str	r3, [r2, #0]
    5198:	23a4      	movs	r3, #164	; 0xa4
    519a:	18fb      	adds	r3, r7, r3
    519c:	681b      	ldr	r3, [r3, #0]
    519e:	2b3f      	cmp	r3, #63	; 0x3f
    51a0:	d103      	bne.n	51aa <system_clock_init+0xce>
    51a2:	231f      	movs	r3, #31
    51a4:	22a4      	movs	r2, #164	; 0xa4
    51a6:	18ba      	adds	r2, r7, r2
    51a8:	6013      	str	r3, [r2, #0]
    51aa:	23a4      	movs	r3, #164	; 0xa4
    51ac:	18fb      	adds	r3, r7, r3
    51ae:	681b      	ldr	r3, [r3, #0]
    51b0:	b2da      	uxtb	r2, r3
    51b2:	2380      	movs	r3, #128	; 0x80
    51b4:	18fb      	adds	r3, r7, r3
    51b6:	729a      	strb	r2, [r3, #10]
    51b8:	2380      	movs	r3, #128	; 0x80
    51ba:	18fb      	adds	r3, r7, r3
    51bc:	2200      	movs	r2, #0
    51be:	809a      	strh	r2, [r3, #4]
    51c0:	2380      	movs	r3, #128	; 0x80
    51c2:	18fb      	adds	r3, r7, r3
    51c4:	2200      	movs	r2, #0
    51c6:	725a      	strb	r2, [r3, #9]
    51c8:	2380      	movs	r3, #128	; 0x80
    51ca:	18fb      	adds	r3, r7, r3
    51cc:	2200      	movs	r2, #0
    51ce:	721a      	strb	r2, [r3, #8]
    51d0:	2380      	movs	r3, #128	; 0x80
    51d2:	18fb      	adds	r3, r7, r3
    51d4:	2200      	movs	r2, #0
    51d6:	80da      	strh	r2, [r3, #6]
    51d8:	2380      	movs	r3, #128	; 0x80
    51da:	18fb      	adds	r3, r7, r3
    51dc:	22b7      	movs	r2, #183	; 0xb7
    51de:	00d2      	lsls	r2, r2, #3
    51e0:	825a      	strh	r2, [r3, #18]
    51e2:	2380      	movs	r3, #128	; 0x80
    51e4:	18fb      	adds	r3, r7, r3
    51e6:	2207      	movs	r2, #7
    51e8:	739a      	strb	r2, [r3, #14]
    51ea:	2380      	movs	r3, #128	; 0x80
    51ec:	18fb      	adds	r3, r7, r3
    51ee:	223f      	movs	r2, #63	; 0x3f
    51f0:	821a      	strh	r2, [r3, #16]
    51f2:	2380      	movs	r3, #128	; 0x80
    51f4:	18fb      	adds	r3, r7, r3
    51f6:	0018      	movs	r0, r3
    51f8:	4b56      	ldr	r3, [pc, #344]	; (5354 <system_clock_init+0x278>)
    51fa:	4798      	blx	r3
    51fc:	4b56      	ldr	r3, [pc, #344]	; (5358 <system_clock_init+0x27c>)
    51fe:	4798      	blx	r3
    5200:	2368      	movs	r3, #104	; 0x68
    5202:	18fb      	adds	r3, r7, r3
    5204:	0018      	movs	r0, r3
    5206:	4b55      	ldr	r3, [pc, #340]	; (535c <system_clock_init+0x280>)
    5208:	4798      	blx	r3
    520a:	2368      	movs	r3, #104	; 0x68
    520c:	18fb      	adds	r3, r7, r3
    520e:	2205      	movs	r2, #5
    5210:	701a      	strb	r2, [r3, #0]
    5212:	2368      	movs	r3, #104	; 0x68
    5214:	18fb      	adds	r3, r7, r3
    5216:	2201      	movs	r2, #1
    5218:	605a      	str	r2, [r3, #4]
    521a:	2368      	movs	r3, #104	; 0x68
    521c:	18fb      	adds	r3, r7, r3
    521e:	2201      	movs	r2, #1
    5220:	721a      	strb	r2, [r3, #8]
    5222:	2368      	movs	r3, #104	; 0x68
    5224:	18fb      	adds	r3, r7, r3
    5226:	2200      	movs	r2, #0
    5228:	725a      	strb	r2, [r3, #9]
    522a:	2368      	movs	r3, #104	; 0x68
    522c:	18fb      	adds	r3, r7, r3
    522e:	0019      	movs	r1, r3
    5230:	2001      	movs	r0, #1
    5232:	4b4b      	ldr	r3, [pc, #300]	; (5360 <system_clock_init+0x284>)
    5234:	4798      	blx	r3
    5236:	2001      	movs	r0, #1
    5238:	4b4a      	ldr	r3, [pc, #296]	; (5364 <system_clock_init+0x288>)
    523a:	4798      	blx	r3
    523c:	235c      	movs	r3, #92	; 0x5c
    523e:	18fb      	adds	r3, r7, r3
    5240:	0018      	movs	r0, r3
    5242:	4b46      	ldr	r3, [pc, #280]	; (535c <system_clock_init+0x280>)
    5244:	4798      	blx	r3
    5246:	235c      	movs	r3, #92	; 0x5c
    5248:	18fb      	adds	r3, r7, r3
    524a:	2206      	movs	r2, #6
    524c:	701a      	strb	r2, [r3, #0]
    524e:	235c      	movs	r3, #92	; 0x5c
    5250:	18fb      	adds	r3, r7, r3
    5252:	2205      	movs	r2, #5
    5254:	605a      	str	r2, [r3, #4]
    5256:	235c      	movs	r3, #92	; 0x5c
    5258:	18fb      	adds	r3, r7, r3
    525a:	2200      	movs	r2, #0
    525c:	721a      	strb	r2, [r3, #8]
    525e:	235c      	movs	r3, #92	; 0x5c
    5260:	18fb      	adds	r3, r7, r3
    5262:	2200      	movs	r2, #0
    5264:	725a      	strb	r2, [r3, #9]
    5266:	235c      	movs	r3, #92	; 0x5c
    5268:	18fb      	adds	r3, r7, r3
    526a:	0019      	movs	r1, r3
    526c:	2002      	movs	r0, #2
    526e:	4b3c      	ldr	r3, [pc, #240]	; (5360 <system_clock_init+0x284>)
    5270:	4798      	blx	r3
    5272:	2002      	movs	r0, #2
    5274:	4b3b      	ldr	r3, [pc, #236]	; (5364 <system_clock_init+0x288>)
    5276:	4798      	blx	r3
    5278:	2310      	movs	r3, #16
    527a:	18fb      	adds	r3, r7, r3
    527c:	0018      	movs	r0, r3
    527e:	4b3a      	ldr	r3, [pc, #232]	; (5368 <system_clock_init+0x28c>)
    5280:	4798      	blx	r3
    5282:	2310      	movs	r3, #16
    5284:	18fb      	adds	r3, r7, r3
    5286:	2201      	movs	r2, #1
    5288:	701a      	strb	r2, [r3, #0]
    528a:	2310      	movs	r3, #16
    528c:	18fb      	adds	r3, r7, r3
    528e:	0019      	movs	r1, r3
    5290:	2000      	movs	r0, #0
    5292:	4b36      	ldr	r3, [pc, #216]	; (536c <system_clock_init+0x290>)
    5294:	4798      	blx	r3
    5296:	2000      	movs	r0, #0
    5298:	4b35      	ldr	r3, [pc, #212]	; (5370 <system_clock_init+0x294>)
    529a:	4798      	blx	r3
    529c:	2007      	movs	r0, #7
    529e:	4b28      	ldr	r3, [pc, #160]	; (5340 <system_clock_init+0x264>)
    52a0:	4798      	blx	r3
    52a2:	46c0      	nop			; (mov r8, r8)
    52a4:	2007      	movs	r0, #7
    52a6:	4b27      	ldr	r3, [pc, #156]	; (5344 <system_clock_init+0x268>)
    52a8:	4798      	blx	r3
    52aa:	0003      	movs	r3, r0
    52ac:	001a      	movs	r2, r3
    52ae:	2301      	movs	r3, #1
    52b0:	4053      	eors	r3, r2
    52b2:	b2db      	uxtb	r3, r3
    52b4:	2b00      	cmp	r3, #0
    52b6:	d1f5      	bne.n	52a4 <system_clock_init+0x1c8>
    52b8:	2000      	movs	r0, #0
    52ba:	4b2e      	ldr	r3, [pc, #184]	; (5374 <system_clock_init+0x298>)
    52bc:	4798      	blx	r3
    52be:	2000      	movs	r0, #0
    52c0:	4b2d      	ldr	r3, [pc, #180]	; (5378 <system_clock_init+0x29c>)
    52c2:	4798      	blx	r3
    52c4:	2000      	movs	r0, #0
    52c6:	4b2d      	ldr	r3, [pc, #180]	; (537c <system_clock_init+0x2a0>)
    52c8:	4798      	blx	r3
    52ca:	2000      	movs	r0, #0
    52cc:	4b2c      	ldr	r3, [pc, #176]	; (5380 <system_clock_init+0x2a4>)
    52ce:	4798      	blx	r3
    52d0:	1d3b      	adds	r3, r7, #4
    52d2:	0018      	movs	r0, r3
    52d4:	4b21      	ldr	r3, [pc, #132]	; (535c <system_clock_init+0x280>)
    52d6:	4798      	blx	r3
    52d8:	1d3b      	adds	r3, r7, #4
    52da:	2207      	movs	r2, #7
    52dc:	701a      	strb	r2, [r3, #0]
    52de:	1d3b      	adds	r3, r7, #4
    52e0:	2206      	movs	r2, #6
    52e2:	605a      	str	r2, [r3, #4]
    52e4:	1d3b      	adds	r3, r7, #4
    52e6:	2200      	movs	r2, #0
    52e8:	721a      	strb	r2, [r3, #8]
    52ea:	1d3b      	adds	r3, r7, #4
    52ec:	2200      	movs	r2, #0
    52ee:	725a      	strb	r2, [r3, #9]
    52f0:	1d3b      	adds	r3, r7, #4
    52f2:	0019      	movs	r1, r3
    52f4:	2000      	movs	r0, #0
    52f6:	4b1a      	ldr	r3, [pc, #104]	; (5360 <system_clock_init+0x284>)
    52f8:	4798      	blx	r3
    52fa:	2000      	movs	r0, #0
    52fc:	4b19      	ldr	r3, [pc, #100]	; (5364 <system_clock_init+0x288>)
    52fe:	4798      	blx	r3
    5300:	4b20      	ldr	r3, [pc, #128]	; (5384 <system_clock_init+0x2a8>)
    5302:	4798      	blx	r3
    5304:	0003      	movs	r3, r0
    5306:	22a0      	movs	r2, #160	; 0xa0
    5308:	18ba      	adds	r2, r7, r2
    530a:	6013      	str	r3, [r2, #0]
    530c:	23a0      	movs	r3, #160	; 0xa0
    530e:	18fb      	adds	r3, r7, r3
    5310:	681b      	ldr	r3, [r3, #0]
    5312:	4a1d      	ldr	r2, [pc, #116]	; (5388 <system_clock_init+0x2ac>)
    5314:	4293      	cmp	r3, r2
    5316:	d802      	bhi.n	531e <system_clock_init+0x242>
    5318:	2000      	movs	r0, #0
    531a:	4b06      	ldr	r3, [pc, #24]	; (5334 <system_clock_init+0x258>)
    531c:	4798      	blx	r3
    531e:	46c0      	nop			; (mov r8, r8)
    5320:	46bd      	mov	sp, r7
    5322:	b02a      	add	sp, #168	; 0xa8
    5324:	bd80      	pop	{r7, pc}
    5326:	46c0      	nop			; (mov r8, r8)
    5328:	40000c00 	.word	0x40000c00
    532c:	40001400 	.word	0x40001400
    5330:	000049fd 	.word	0x000049fd
    5334:	00004a31 	.word	0x00004a31
    5338:	00004885 	.word	0x00004885
    533c:	00004ccd 	.word	0x00004ccd
    5340:	00004ea1 	.word	0x00004ea1
    5344:	0000500d 	.word	0x0000500d
    5348:	00004aa9 	.word	0x00004aa9
    534c:	000048e9 	.word	0x000048e9
    5350:	00806020 	.word	0x00806020
    5354:	00004dc9 	.word	0x00004dc9
    5358:	0000546d 	.word	0x0000546d
    535c:	00004841 	.word	0x00004841
    5360:	0000549d 	.word	0x0000549d
    5364:	000055ad 	.word	0x000055ad
    5368:	0000486f 	.word	0x0000486f
    536c:	000056c9 	.word	0x000056c9
    5370:	00005709 	.word	0x00005709
    5374:	000049a5 	.word	0x000049a5
    5378:	0000497d 	.word	0x0000497d
    537c:	00004955 	.word	0x00004955
    5380:	00004941 	.word	0x00004941
    5384:	000049cd 	.word	0x000049cd
    5388:	00b71b00 	.word	0x00b71b00

0000538c <system_apb_clock_set_mask>:
    538c:	b580      	push	{r7, lr}
    538e:	b082      	sub	sp, #8
    5390:	af00      	add	r7, sp, #0
    5392:	0002      	movs	r2, r0
    5394:	6039      	str	r1, [r7, #0]
    5396:	1dfb      	adds	r3, r7, #7
    5398:	701a      	strb	r2, [r3, #0]
    539a:	1dfb      	adds	r3, r7, #7
    539c:	781b      	ldrb	r3, [r3, #0]
    539e:	2b04      	cmp	r3, #4
    53a0:	d827      	bhi.n	53f2 <system_apb_clock_set_mask+0x66>
    53a2:	009a      	lsls	r2, r3, #2
    53a4:	4b16      	ldr	r3, [pc, #88]	; (5400 <system_apb_clock_set_mask+0x74>)
    53a6:	18d3      	adds	r3, r2, r3
    53a8:	681b      	ldr	r3, [r3, #0]
    53aa:	469f      	mov	pc, r3
    53ac:	4b15      	ldr	r3, [pc, #84]	; (5404 <system_apb_clock_set_mask+0x78>)
    53ae:	4a15      	ldr	r2, [pc, #84]	; (5404 <system_apb_clock_set_mask+0x78>)
    53b0:	6951      	ldr	r1, [r2, #20]
    53b2:	683a      	ldr	r2, [r7, #0]
    53b4:	430a      	orrs	r2, r1
    53b6:	615a      	str	r2, [r3, #20]
    53b8:	e01d      	b.n	53f6 <system_apb_clock_set_mask+0x6a>
    53ba:	4b12      	ldr	r3, [pc, #72]	; (5404 <system_apb_clock_set_mask+0x78>)
    53bc:	4a11      	ldr	r2, [pc, #68]	; (5404 <system_apb_clock_set_mask+0x78>)
    53be:	6991      	ldr	r1, [r2, #24]
    53c0:	683a      	ldr	r2, [r7, #0]
    53c2:	430a      	orrs	r2, r1
    53c4:	619a      	str	r2, [r3, #24]
    53c6:	e016      	b.n	53f6 <system_apb_clock_set_mask+0x6a>
    53c8:	4b0e      	ldr	r3, [pc, #56]	; (5404 <system_apb_clock_set_mask+0x78>)
    53ca:	4a0e      	ldr	r2, [pc, #56]	; (5404 <system_apb_clock_set_mask+0x78>)
    53cc:	69d1      	ldr	r1, [r2, #28]
    53ce:	683a      	ldr	r2, [r7, #0]
    53d0:	430a      	orrs	r2, r1
    53d2:	61da      	str	r2, [r3, #28]
    53d4:	e00f      	b.n	53f6 <system_apb_clock_set_mask+0x6a>
    53d6:	4b0b      	ldr	r3, [pc, #44]	; (5404 <system_apb_clock_set_mask+0x78>)
    53d8:	4a0a      	ldr	r2, [pc, #40]	; (5404 <system_apb_clock_set_mask+0x78>)
    53da:	6a11      	ldr	r1, [r2, #32]
    53dc:	683a      	ldr	r2, [r7, #0]
    53de:	430a      	orrs	r2, r1
    53e0:	621a      	str	r2, [r3, #32]
    53e2:	e008      	b.n	53f6 <system_apb_clock_set_mask+0x6a>
    53e4:	4b07      	ldr	r3, [pc, #28]	; (5404 <system_apb_clock_set_mask+0x78>)
    53e6:	4a07      	ldr	r2, [pc, #28]	; (5404 <system_apb_clock_set_mask+0x78>)
    53e8:	6a51      	ldr	r1, [r2, #36]	; 0x24
    53ea:	683a      	ldr	r2, [r7, #0]
    53ec:	430a      	orrs	r2, r1
    53ee:	625a      	str	r2, [r3, #36]	; 0x24
    53f0:	e001      	b.n	53f6 <system_apb_clock_set_mask+0x6a>
    53f2:	2317      	movs	r3, #23
    53f4:	e000      	b.n	53f8 <system_apb_clock_set_mask+0x6c>
    53f6:	2300      	movs	r3, #0
    53f8:	0018      	movs	r0, r3
    53fa:	46bd      	mov	sp, r7
    53fc:	b002      	add	sp, #8
    53fe:	bd80      	pop	{r7, pc}
    5400:	0001cbdc 	.word	0x0001cbdc
    5404:	40000400 	.word	0x40000400

00005408 <system_interrupt_enter_critical_section>:
    5408:	b580      	push	{r7, lr}
    540a:	af00      	add	r7, sp, #0
    540c:	4b02      	ldr	r3, [pc, #8]	; (5418 <system_interrupt_enter_critical_section+0x10>)
    540e:	4798      	blx	r3
    5410:	46c0      	nop			; (mov r8, r8)
    5412:	46bd      	mov	sp, r7
    5414:	bd80      	pop	{r7, pc}
    5416:	46c0      	nop			; (mov r8, r8)
    5418:	000001d1 	.word	0x000001d1

0000541c <system_interrupt_leave_critical_section>:
    541c:	b580      	push	{r7, lr}
    541e:	af00      	add	r7, sp, #0
    5420:	4b02      	ldr	r3, [pc, #8]	; (542c <system_interrupt_leave_critical_section+0x10>)
    5422:	4798      	blx	r3
    5424:	46c0      	nop			; (mov r8, r8)
    5426:	46bd      	mov	sp, r7
    5428:	bd80      	pop	{r7, pc}
    542a:	46c0      	nop			; (mov r8, r8)
    542c:	00000225 	.word	0x00000225

00005430 <system_gclk_is_syncing>:
    5430:	b580      	push	{r7, lr}
    5432:	b082      	sub	sp, #8
    5434:	af00      	add	r7, sp, #0
    5436:	0002      	movs	r2, r0
    5438:	1dfb      	adds	r3, r7, #7
    543a:	701a      	strb	r2, [r3, #0]
    543c:	4b09      	ldr	r3, [pc, #36]	; (5464 <system_gclk_is_syncing+0x34>)
    543e:	685b      	ldr	r3, [r3, #4]
    5440:	1dfa      	adds	r2, r7, #7
    5442:	7812      	ldrb	r2, [r2, #0]
    5444:	2101      	movs	r1, #1
    5446:	4091      	lsls	r1, r2
    5448:	000a      	movs	r2, r1
    544a:	0092      	lsls	r2, r2, #2
    544c:	4013      	ands	r3, r2
    544e:	4a06      	ldr	r2, [pc, #24]	; (5468 <system_gclk_is_syncing+0x38>)
    5450:	4013      	ands	r3, r2
    5452:	d001      	beq.n	5458 <system_gclk_is_syncing+0x28>
    5454:	2301      	movs	r3, #1
    5456:	e000      	b.n	545a <system_gclk_is_syncing+0x2a>
    5458:	2300      	movs	r3, #0
    545a:	0018      	movs	r0, r3
    545c:	46bd      	mov	sp, r7
    545e:	b002      	add	sp, #8
    5460:	bd80      	pop	{r7, pc}
    5462:	46c0      	nop			; (mov r8, r8)
    5464:	40001800 	.word	0x40001800
    5468:	000007fc 	.word	0x000007fc

0000546c <system_gclk_init>:
    546c:	b580      	push	{r7, lr}
    546e:	af00      	add	r7, sp, #0
    5470:	2140      	movs	r1, #64	; 0x40
    5472:	2000      	movs	r0, #0
    5474:	4b07      	ldr	r3, [pc, #28]	; (5494 <system_gclk_init+0x28>)
    5476:	4798      	blx	r3
    5478:	4b07      	ldr	r3, [pc, #28]	; (5498 <system_gclk_init+0x2c>)
    547a:	2201      	movs	r2, #1
    547c:	701a      	strb	r2, [r3, #0]
    547e:	46c0      	nop			; (mov r8, r8)
    5480:	4b05      	ldr	r3, [pc, #20]	; (5498 <system_gclk_init+0x2c>)
    5482:	781b      	ldrb	r3, [r3, #0]
    5484:	b2db      	uxtb	r3, r3
    5486:	001a      	movs	r2, r3
    5488:	2301      	movs	r3, #1
    548a:	4013      	ands	r3, r2
    548c:	d1f8      	bne.n	5480 <system_gclk_init+0x14>
    548e:	46c0      	nop			; (mov r8, r8)
    5490:	46bd      	mov	sp, r7
    5492:	bd80      	pop	{r7, pc}
    5494:	0000538d 	.word	0x0000538d
    5498:	40001800 	.word	0x40001800

0000549c <system_gclk_gen_set_config>:
    549c:	b580      	push	{r7, lr}
    549e:	b086      	sub	sp, #24
    54a0:	af00      	add	r7, sp, #0
    54a2:	0002      	movs	r2, r0
    54a4:	6039      	str	r1, [r7, #0]
    54a6:	1dfb      	adds	r3, r7, #7
    54a8:	701a      	strb	r2, [r3, #0]
    54aa:	683b      	ldr	r3, [r7, #0]
    54ac:	781b      	ldrb	r3, [r3, #0]
    54ae:	617b      	str	r3, [r7, #20]
    54b0:	683b      	ldr	r3, [r7, #0]
    54b2:	785b      	ldrb	r3, [r3, #1]
    54b4:	2b00      	cmp	r3, #0
    54b6:	d004      	beq.n	54c2 <system_gclk_gen_set_config+0x26>
    54b8:	697b      	ldr	r3, [r7, #20]
    54ba:	2280      	movs	r2, #128	; 0x80
    54bc:	00d2      	lsls	r2, r2, #3
    54be:	4313      	orrs	r3, r2
    54c0:	617b      	str	r3, [r7, #20]
    54c2:	683b      	ldr	r3, [r7, #0]
    54c4:	7a5b      	ldrb	r3, [r3, #9]
    54c6:	2b00      	cmp	r3, #0
    54c8:	d004      	beq.n	54d4 <system_gclk_gen_set_config+0x38>
    54ca:	697b      	ldr	r3, [r7, #20]
    54cc:	2280      	movs	r2, #128	; 0x80
    54ce:	0112      	lsls	r2, r2, #4
    54d0:	4313      	orrs	r3, r2
    54d2:	617b      	str	r3, [r7, #20]
    54d4:	683b      	ldr	r3, [r7, #0]
    54d6:	685b      	ldr	r3, [r3, #4]
    54d8:	2b01      	cmp	r3, #1
    54da:	d92c      	bls.n	5536 <system_gclk_gen_set_config+0x9a>
    54dc:	683b      	ldr	r3, [r7, #0]
    54de:	685a      	ldr	r2, [r3, #4]
    54e0:	683b      	ldr	r3, [r7, #0]
    54e2:	685b      	ldr	r3, [r3, #4]
    54e4:	3b01      	subs	r3, #1
    54e6:	4013      	ands	r3, r2
    54e8:	d11a      	bne.n	5520 <system_gclk_gen_set_config+0x84>
    54ea:	2300      	movs	r3, #0
    54ec:	613b      	str	r3, [r7, #16]
    54ee:	2302      	movs	r3, #2
    54f0:	60fb      	str	r3, [r7, #12]
    54f2:	e005      	b.n	5500 <system_gclk_gen_set_config+0x64>
    54f4:	693b      	ldr	r3, [r7, #16]
    54f6:	3301      	adds	r3, #1
    54f8:	613b      	str	r3, [r7, #16]
    54fa:	68fb      	ldr	r3, [r7, #12]
    54fc:	005b      	lsls	r3, r3, #1
    54fe:	60fb      	str	r3, [r7, #12]
    5500:	683b      	ldr	r3, [r7, #0]
    5502:	685a      	ldr	r2, [r3, #4]
    5504:	68fb      	ldr	r3, [r7, #12]
    5506:	429a      	cmp	r2, r3
    5508:	d8f4      	bhi.n	54f4 <system_gclk_gen_set_config+0x58>
    550a:	693b      	ldr	r3, [r7, #16]
    550c:	041b      	lsls	r3, r3, #16
    550e:	697a      	ldr	r2, [r7, #20]
    5510:	4313      	orrs	r3, r2
    5512:	617b      	str	r3, [r7, #20]
    5514:	697b      	ldr	r3, [r7, #20]
    5516:	2280      	movs	r2, #128	; 0x80
    5518:	0152      	lsls	r2, r2, #5
    551a:	4313      	orrs	r3, r2
    551c:	617b      	str	r3, [r7, #20]
    551e:	e00a      	b.n	5536 <system_gclk_gen_set_config+0x9a>
    5520:	683b      	ldr	r3, [r7, #0]
    5522:	685b      	ldr	r3, [r3, #4]
    5524:	041b      	lsls	r3, r3, #16
    5526:	697a      	ldr	r2, [r7, #20]
    5528:	4313      	orrs	r3, r2
    552a:	617b      	str	r3, [r7, #20]
    552c:	697b      	ldr	r3, [r7, #20]
    552e:	2280      	movs	r2, #128	; 0x80
    5530:	0092      	lsls	r2, r2, #2
    5532:	4313      	orrs	r3, r2
    5534:	617b      	str	r3, [r7, #20]
    5536:	683b      	ldr	r3, [r7, #0]
    5538:	7a1b      	ldrb	r3, [r3, #8]
    553a:	2b00      	cmp	r3, #0
    553c:	d004      	beq.n	5548 <system_gclk_gen_set_config+0xac>
    553e:	697b      	ldr	r3, [r7, #20]
    5540:	2280      	movs	r2, #128	; 0x80
    5542:	0192      	lsls	r2, r2, #6
    5544:	4313      	orrs	r3, r2
    5546:	617b      	str	r3, [r7, #20]
    5548:	46c0      	nop			; (mov r8, r8)
    554a:	1dfb      	adds	r3, r7, #7
    554c:	781b      	ldrb	r3, [r3, #0]
    554e:	0018      	movs	r0, r3
    5550:	4b12      	ldr	r3, [pc, #72]	; (559c <system_gclk_gen_set_config+0x100>)
    5552:	4798      	blx	r3
    5554:	1e03      	subs	r3, r0, #0
    5556:	d1f8      	bne.n	554a <system_gclk_gen_set_config+0xae>
    5558:	4b11      	ldr	r3, [pc, #68]	; (55a0 <system_gclk_gen_set_config+0x104>)
    555a:	4798      	blx	r3
    555c:	4811      	ldr	r0, [pc, #68]	; (55a4 <system_gclk_gen_set_config+0x108>)
    555e:	1dfb      	adds	r3, r7, #7
    5560:	781b      	ldrb	r3, [r3, #0]
    5562:	4910      	ldr	r1, [pc, #64]	; (55a4 <system_gclk_gen_set_config+0x108>)
    5564:	1dfa      	adds	r2, r7, #7
    5566:	7812      	ldrb	r2, [r2, #0]
    5568:	3208      	adds	r2, #8
    556a:	0092      	lsls	r2, r2, #2
    556c:	5851      	ldr	r1, [r2, r1]
    556e:	2280      	movs	r2, #128	; 0x80
    5570:	0052      	lsls	r2, r2, #1
    5572:	4011      	ands	r1, r2
    5574:	697a      	ldr	r2, [r7, #20]
    5576:	430a      	orrs	r2, r1
    5578:	3308      	adds	r3, #8
    557a:	009b      	lsls	r3, r3, #2
    557c:	501a      	str	r2, [r3, r0]
    557e:	46c0      	nop			; (mov r8, r8)
    5580:	1dfb      	adds	r3, r7, #7
    5582:	781b      	ldrb	r3, [r3, #0]
    5584:	0018      	movs	r0, r3
    5586:	4b05      	ldr	r3, [pc, #20]	; (559c <system_gclk_gen_set_config+0x100>)
    5588:	4798      	blx	r3
    558a:	1e03      	subs	r3, r0, #0
    558c:	d1f8      	bne.n	5580 <system_gclk_gen_set_config+0xe4>
    558e:	4b06      	ldr	r3, [pc, #24]	; (55a8 <system_gclk_gen_set_config+0x10c>)
    5590:	4798      	blx	r3
    5592:	46c0      	nop			; (mov r8, r8)
    5594:	46bd      	mov	sp, r7
    5596:	b006      	add	sp, #24
    5598:	bd80      	pop	{r7, pc}
    559a:	46c0      	nop			; (mov r8, r8)
    559c:	00005431 	.word	0x00005431
    55a0:	00005409 	.word	0x00005409
    55a4:	40001800 	.word	0x40001800
    55a8:	0000541d 	.word	0x0000541d

000055ac <system_gclk_gen_enable>:
    55ac:	b580      	push	{r7, lr}
    55ae:	b082      	sub	sp, #8
    55b0:	af00      	add	r7, sp, #0
    55b2:	0002      	movs	r2, r0
    55b4:	1dfb      	adds	r3, r7, #7
    55b6:	701a      	strb	r2, [r3, #0]
    55b8:	46c0      	nop			; (mov r8, r8)
    55ba:	1dfb      	adds	r3, r7, #7
    55bc:	781b      	ldrb	r3, [r3, #0]
    55be:	0018      	movs	r0, r3
    55c0:	4b0d      	ldr	r3, [pc, #52]	; (55f8 <system_gclk_gen_enable+0x4c>)
    55c2:	4798      	blx	r3
    55c4:	1e03      	subs	r3, r0, #0
    55c6:	d1f8      	bne.n	55ba <system_gclk_gen_enable+0xe>
    55c8:	4b0c      	ldr	r3, [pc, #48]	; (55fc <system_gclk_gen_enable+0x50>)
    55ca:	4798      	blx	r3
    55cc:	480c      	ldr	r0, [pc, #48]	; (5600 <system_gclk_gen_enable+0x54>)
    55ce:	1dfb      	adds	r3, r7, #7
    55d0:	781b      	ldrb	r3, [r3, #0]
    55d2:	490b      	ldr	r1, [pc, #44]	; (5600 <system_gclk_gen_enable+0x54>)
    55d4:	1dfa      	adds	r2, r7, #7
    55d6:	7812      	ldrb	r2, [r2, #0]
    55d8:	3208      	adds	r2, #8
    55da:	0092      	lsls	r2, r2, #2
    55dc:	5852      	ldr	r2, [r2, r1]
    55de:	2180      	movs	r1, #128	; 0x80
    55e0:	0049      	lsls	r1, r1, #1
    55e2:	430a      	orrs	r2, r1
    55e4:	3308      	adds	r3, #8
    55e6:	009b      	lsls	r3, r3, #2
    55e8:	501a      	str	r2, [r3, r0]
    55ea:	4b06      	ldr	r3, [pc, #24]	; (5604 <system_gclk_gen_enable+0x58>)
    55ec:	4798      	blx	r3
    55ee:	46c0      	nop			; (mov r8, r8)
    55f0:	46bd      	mov	sp, r7
    55f2:	b002      	add	sp, #8
    55f4:	bd80      	pop	{r7, pc}
    55f6:	46c0      	nop			; (mov r8, r8)
    55f8:	00005431 	.word	0x00005431
    55fc:	00005409 	.word	0x00005409
    5600:	40001800 	.word	0x40001800
    5604:	0000541d 	.word	0x0000541d

00005608 <system_gclk_gen_get_hz>:
    5608:	b580      	push	{r7, lr}
    560a:	b086      	sub	sp, #24
    560c:	af00      	add	r7, sp, #0
    560e:	0002      	movs	r2, r0
    5610:	1dfb      	adds	r3, r7, #7
    5612:	701a      	strb	r2, [r3, #0]
    5614:	46c0      	nop			; (mov r8, r8)
    5616:	1dfb      	adds	r3, r7, #7
    5618:	781b      	ldrb	r3, [r3, #0]
    561a:	0018      	movs	r0, r3
    561c:	4b24      	ldr	r3, [pc, #144]	; (56b0 <system_gclk_gen_get_hz+0xa8>)
    561e:	4798      	blx	r3
    5620:	1e03      	subs	r3, r0, #0
    5622:	d1f8      	bne.n	5616 <system_gclk_gen_get_hz+0xe>
    5624:	4b23      	ldr	r3, [pc, #140]	; (56b4 <system_gclk_gen_get_hz+0xac>)
    5626:	4798      	blx	r3
    5628:	4a23      	ldr	r2, [pc, #140]	; (56b8 <system_gclk_gen_get_hz+0xb0>)
    562a:	1dfb      	adds	r3, r7, #7
    562c:	781b      	ldrb	r3, [r3, #0]
    562e:	3308      	adds	r3, #8
    5630:	009b      	lsls	r3, r3, #2
    5632:	589b      	ldr	r3, [r3, r2]
    5634:	071b      	lsls	r3, r3, #28
    5636:	0f1b      	lsrs	r3, r3, #28
    5638:	b2db      	uxtb	r3, r3
    563a:	0018      	movs	r0, r3
    563c:	4b1f      	ldr	r3, [pc, #124]	; (56bc <system_gclk_gen_get_hz+0xb4>)
    563e:	4798      	blx	r3
    5640:	0003      	movs	r3, r0
    5642:	617b      	str	r3, [r7, #20]
    5644:	4a1c      	ldr	r2, [pc, #112]	; (56b8 <system_gclk_gen_get_hz+0xb0>)
    5646:	1dfb      	adds	r3, r7, #7
    5648:	781b      	ldrb	r3, [r3, #0]
    564a:	3308      	adds	r3, #8
    564c:	009b      	lsls	r3, r3, #2
    564e:	589b      	ldr	r3, [r3, r2]
    5650:	04db      	lsls	r3, r3, #19
    5652:	0fdb      	lsrs	r3, r3, #31
    5654:	b2da      	uxtb	r2, r3
    5656:	2313      	movs	r3, #19
    5658:	18fb      	adds	r3, r7, r3
    565a:	701a      	strb	r2, [r3, #0]
    565c:	4a16      	ldr	r2, [pc, #88]	; (56b8 <system_gclk_gen_get_hz+0xb0>)
    565e:	1dfb      	adds	r3, r7, #7
    5660:	781b      	ldrb	r3, [r3, #0]
    5662:	3308      	adds	r3, #8
    5664:	009b      	lsls	r3, r3, #2
    5666:	589b      	ldr	r3, [r3, r2]
    5668:	0c1b      	lsrs	r3, r3, #16
    566a:	b29b      	uxth	r3, r3
    566c:	60fb      	str	r3, [r7, #12]
    566e:	4b14      	ldr	r3, [pc, #80]	; (56c0 <system_gclk_gen_get_hz+0xb8>)
    5670:	4798      	blx	r3
    5672:	2313      	movs	r3, #19
    5674:	18fb      	adds	r3, r7, r3
    5676:	781b      	ldrb	r3, [r3, #0]
    5678:	2b00      	cmp	r3, #0
    567a:	d109      	bne.n	5690 <system_gclk_gen_get_hz+0x88>
    567c:	68fb      	ldr	r3, [r7, #12]
    567e:	2b01      	cmp	r3, #1
    5680:	d906      	bls.n	5690 <system_gclk_gen_get_hz+0x88>
    5682:	4b10      	ldr	r3, [pc, #64]	; (56c4 <system_gclk_gen_get_hz+0xbc>)
    5684:	68f9      	ldr	r1, [r7, #12]
    5686:	6978      	ldr	r0, [r7, #20]
    5688:	4798      	blx	r3
    568a:	0003      	movs	r3, r0
    568c:	617b      	str	r3, [r7, #20]
    568e:	e00a      	b.n	56a6 <system_gclk_gen_get_hz+0x9e>
    5690:	2313      	movs	r3, #19
    5692:	18fb      	adds	r3, r7, r3
    5694:	781b      	ldrb	r3, [r3, #0]
    5696:	2b00      	cmp	r3, #0
    5698:	d005      	beq.n	56a6 <system_gclk_gen_get_hz+0x9e>
    569a:	68fb      	ldr	r3, [r7, #12]
    569c:	3301      	adds	r3, #1
    569e:	697a      	ldr	r2, [r7, #20]
    56a0:	40da      	lsrs	r2, r3
    56a2:	0013      	movs	r3, r2
    56a4:	617b      	str	r3, [r7, #20]
    56a6:	697b      	ldr	r3, [r7, #20]
    56a8:	0018      	movs	r0, r3
    56aa:	46bd      	mov	sp, r7
    56ac:	b006      	add	sp, #24
    56ae:	bd80      	pop	{r7, pc}
    56b0:	00005431 	.word	0x00005431
    56b4:	00005409 	.word	0x00005409
    56b8:	40001800 	.word	0x40001800
    56bc:	00004b8d 	.word	0x00004b8d
    56c0:	0000541d 	.word	0x0000541d
    56c4:	0001498d 	.word	0x0001498d

000056c8 <system_gclk_chan_set_config>:
    56c8:	b580      	push	{r7, lr}
    56ca:	b082      	sub	sp, #8
    56cc:	af00      	add	r7, sp, #0
    56ce:	0002      	movs	r2, r0
    56d0:	6039      	str	r1, [r7, #0]
    56d2:	1dfb      	adds	r3, r7, #7
    56d4:	701a      	strb	r2, [r3, #0]
    56d6:	1dfb      	adds	r3, r7, #7
    56d8:	781b      	ldrb	r3, [r3, #0]
    56da:	0018      	movs	r0, r3
    56dc:	4b08      	ldr	r3, [pc, #32]	; (5700 <system_gclk_chan_set_config+0x38>)
    56de:	4798      	blx	r3
    56e0:	4908      	ldr	r1, [pc, #32]	; (5704 <system_gclk_chan_set_config+0x3c>)
    56e2:	1dfb      	adds	r3, r7, #7
    56e4:	781b      	ldrb	r3, [r3, #0]
    56e6:	683a      	ldr	r2, [r7, #0]
    56e8:	7812      	ldrb	r2, [r2, #0]
    56ea:	0010      	movs	r0, r2
    56ec:	220f      	movs	r2, #15
    56ee:	4002      	ands	r2, r0
    56f0:	3320      	adds	r3, #32
    56f2:	009b      	lsls	r3, r3, #2
    56f4:	505a      	str	r2, [r3, r1]
    56f6:	46c0      	nop			; (mov r8, r8)
    56f8:	46bd      	mov	sp, r7
    56fa:	b002      	add	sp, #8
    56fc:	bd80      	pop	{r7, pc}
    56fe:	46c0      	nop			; (mov r8, r8)
    5700:	00005761 	.word	0x00005761
    5704:	40001800 	.word	0x40001800

00005708 <system_gclk_chan_enable>:
    5708:	b580      	push	{r7, lr}
    570a:	b082      	sub	sp, #8
    570c:	af00      	add	r7, sp, #0
    570e:	0002      	movs	r2, r0
    5710:	1dfb      	adds	r3, r7, #7
    5712:	701a      	strb	r2, [r3, #0]
    5714:	4b0f      	ldr	r3, [pc, #60]	; (5754 <system_gclk_chan_enable+0x4c>)
    5716:	4798      	blx	r3
    5718:	490f      	ldr	r1, [pc, #60]	; (5758 <system_gclk_chan_enable+0x50>)
    571a:	1dfb      	adds	r3, r7, #7
    571c:	781b      	ldrb	r3, [r3, #0]
    571e:	480e      	ldr	r0, [pc, #56]	; (5758 <system_gclk_chan_enable+0x50>)
    5720:	1dfa      	adds	r2, r7, #7
    5722:	7812      	ldrb	r2, [r2, #0]
    5724:	3220      	adds	r2, #32
    5726:	0092      	lsls	r2, r2, #2
    5728:	5812      	ldr	r2, [r2, r0]
    572a:	2040      	movs	r0, #64	; 0x40
    572c:	4302      	orrs	r2, r0
    572e:	3320      	adds	r3, #32
    5730:	009b      	lsls	r3, r3, #2
    5732:	505a      	str	r2, [r3, r1]
    5734:	46c0      	nop			; (mov r8, r8)
    5736:	4a08      	ldr	r2, [pc, #32]	; (5758 <system_gclk_chan_enable+0x50>)
    5738:	1dfb      	adds	r3, r7, #7
    573a:	781b      	ldrb	r3, [r3, #0]
    573c:	3320      	adds	r3, #32
    573e:	009b      	lsls	r3, r3, #2
    5740:	589b      	ldr	r3, [r3, r2]
    5742:	2240      	movs	r2, #64	; 0x40
    5744:	4013      	ands	r3, r2
    5746:	d0f6      	beq.n	5736 <system_gclk_chan_enable+0x2e>
    5748:	4b04      	ldr	r3, [pc, #16]	; (575c <system_gclk_chan_enable+0x54>)
    574a:	4798      	blx	r3
    574c:	46c0      	nop			; (mov r8, r8)
    574e:	46bd      	mov	sp, r7
    5750:	b002      	add	sp, #8
    5752:	bd80      	pop	{r7, pc}
    5754:	00005409 	.word	0x00005409
    5758:	40001800 	.word	0x40001800
    575c:	0000541d 	.word	0x0000541d

00005760 <system_gclk_chan_disable>:
    5760:	b580      	push	{r7, lr}
    5762:	b082      	sub	sp, #8
    5764:	af00      	add	r7, sp, #0
    5766:	0002      	movs	r2, r0
    5768:	1dfb      	adds	r3, r7, #7
    576a:	701a      	strb	r2, [r3, #0]
    576c:	4b0f      	ldr	r3, [pc, #60]	; (57ac <system_gclk_chan_disable+0x4c>)
    576e:	4798      	blx	r3
    5770:	490f      	ldr	r1, [pc, #60]	; (57b0 <system_gclk_chan_disable+0x50>)
    5772:	1dfb      	adds	r3, r7, #7
    5774:	781b      	ldrb	r3, [r3, #0]
    5776:	480e      	ldr	r0, [pc, #56]	; (57b0 <system_gclk_chan_disable+0x50>)
    5778:	1dfa      	adds	r2, r7, #7
    577a:	7812      	ldrb	r2, [r2, #0]
    577c:	3220      	adds	r2, #32
    577e:	0092      	lsls	r2, r2, #2
    5780:	5812      	ldr	r2, [r2, r0]
    5782:	2040      	movs	r0, #64	; 0x40
    5784:	4382      	bics	r2, r0
    5786:	3320      	adds	r3, #32
    5788:	009b      	lsls	r3, r3, #2
    578a:	505a      	str	r2, [r3, r1]
    578c:	46c0      	nop			; (mov r8, r8)
    578e:	4a08      	ldr	r2, [pc, #32]	; (57b0 <system_gclk_chan_disable+0x50>)
    5790:	1dfb      	adds	r3, r7, #7
    5792:	781b      	ldrb	r3, [r3, #0]
    5794:	3320      	adds	r3, #32
    5796:	009b      	lsls	r3, r3, #2
    5798:	589b      	ldr	r3, [r3, r2]
    579a:	2240      	movs	r2, #64	; 0x40
    579c:	4013      	ands	r3, r2
    579e:	d1f6      	bne.n	578e <system_gclk_chan_disable+0x2e>
    57a0:	4b04      	ldr	r3, [pc, #16]	; (57b4 <system_gclk_chan_disable+0x54>)
    57a2:	4798      	blx	r3
    57a4:	46c0      	nop			; (mov r8, r8)
    57a6:	46bd      	mov	sp, r7
    57a8:	b002      	add	sp, #8
    57aa:	bd80      	pop	{r7, pc}
    57ac:	00005409 	.word	0x00005409
    57b0:	40001800 	.word	0x40001800
    57b4:	0000541d 	.word	0x0000541d

000057b8 <system_gclk_chan_get_hz>:
    57b8:	b580      	push	{r7, lr}
    57ba:	b084      	sub	sp, #16
    57bc:	af00      	add	r7, sp, #0
    57be:	0002      	movs	r2, r0
    57c0:	1dfb      	adds	r3, r7, #7
    57c2:	701a      	strb	r2, [r3, #0]
    57c4:	4b0d      	ldr	r3, [pc, #52]	; (57fc <system_gclk_chan_get_hz+0x44>)
    57c6:	4798      	blx	r3
    57c8:	4a0d      	ldr	r2, [pc, #52]	; (5800 <system_gclk_chan_get_hz+0x48>)
    57ca:	1dfb      	adds	r3, r7, #7
    57cc:	781b      	ldrb	r3, [r3, #0]
    57ce:	3320      	adds	r3, #32
    57d0:	009b      	lsls	r3, r3, #2
    57d2:	589b      	ldr	r3, [r3, r2]
    57d4:	071b      	lsls	r3, r3, #28
    57d6:	0f1b      	lsrs	r3, r3, #28
    57d8:	b2da      	uxtb	r2, r3
    57da:	230f      	movs	r3, #15
    57dc:	18fb      	adds	r3, r7, r3
    57de:	701a      	strb	r2, [r3, #0]
    57e0:	4b08      	ldr	r3, [pc, #32]	; (5804 <system_gclk_chan_get_hz+0x4c>)
    57e2:	4798      	blx	r3
    57e4:	230f      	movs	r3, #15
    57e6:	18fb      	adds	r3, r7, r3
    57e8:	781b      	ldrb	r3, [r3, #0]
    57ea:	0018      	movs	r0, r3
    57ec:	4b06      	ldr	r3, [pc, #24]	; (5808 <system_gclk_chan_get_hz+0x50>)
    57ee:	4798      	blx	r3
    57f0:	0003      	movs	r3, r0
    57f2:	0018      	movs	r0, r3
    57f4:	46bd      	mov	sp, r7
    57f6:	b004      	add	sp, #16
    57f8:	bd80      	pop	{r7, pc}
    57fa:	46c0      	nop			; (mov r8, r8)
    57fc:	00005409 	.word	0x00005409
    5800:	40001800 	.word	0x40001800
    5804:	0000541d 	.word	0x0000541d
    5808:	00005609 	.word	0x00005609

0000580c <system_pinmux_get_group_from_gpio_pin>:
    580c:	b580      	push	{r7, lr}
    580e:	b084      	sub	sp, #16
    5810:	af00      	add	r7, sp, #0
    5812:	0002      	movs	r2, r0
    5814:	1dfb      	adds	r3, r7, #7
    5816:	701a      	strb	r2, [r3, #0]
    5818:	230f      	movs	r3, #15
    581a:	18fb      	adds	r3, r7, r3
    581c:	1dfa      	adds	r2, r7, #7
    581e:	7812      	ldrb	r2, [r2, #0]
    5820:	09d2      	lsrs	r2, r2, #7
    5822:	701a      	strb	r2, [r3, #0]
    5824:	230e      	movs	r3, #14
    5826:	18fb      	adds	r3, r7, r3
    5828:	1dfa      	adds	r2, r7, #7
    582a:	7812      	ldrb	r2, [r2, #0]
    582c:	0952      	lsrs	r2, r2, #5
    582e:	701a      	strb	r2, [r3, #0]
    5830:	4b0d      	ldr	r3, [pc, #52]	; (5868 <system_pinmux_get_group_from_gpio_pin+0x5c>)
    5832:	60bb      	str	r3, [r7, #8]
    5834:	230f      	movs	r3, #15
    5836:	18fb      	adds	r3, r7, r3
    5838:	781b      	ldrb	r3, [r3, #0]
    583a:	2b00      	cmp	r3, #0
    583c:	d10f      	bne.n	585e <system_pinmux_get_group_from_gpio_pin+0x52>
    583e:	230f      	movs	r3, #15
    5840:	18fb      	adds	r3, r7, r3
    5842:	781b      	ldrb	r3, [r3, #0]
    5844:	009b      	lsls	r3, r3, #2
    5846:	2210      	movs	r2, #16
    5848:	4694      	mov	ip, r2
    584a:	44bc      	add	ip, r7
    584c:	4463      	add	r3, ip
    584e:	3b08      	subs	r3, #8
    5850:	681a      	ldr	r2, [r3, #0]
    5852:	230e      	movs	r3, #14
    5854:	18fb      	adds	r3, r7, r3
    5856:	781b      	ldrb	r3, [r3, #0]
    5858:	01db      	lsls	r3, r3, #7
    585a:	18d3      	adds	r3, r2, r3
    585c:	e000      	b.n	5860 <system_pinmux_get_group_from_gpio_pin+0x54>
    585e:	2300      	movs	r3, #0
    5860:	0018      	movs	r0, r3
    5862:	46bd      	mov	sp, r7
    5864:	b004      	add	sp, #16
    5866:	bd80      	pop	{r7, pc}
    5868:	40002800 	.word	0x40002800

0000586c <_system_pinmux_config>:
    586c:	b580      	push	{r7, lr}
    586e:	b088      	sub	sp, #32
    5870:	af00      	add	r7, sp, #0
    5872:	60f8      	str	r0, [r7, #12]
    5874:	60b9      	str	r1, [r7, #8]
    5876:	607a      	str	r2, [r7, #4]
    5878:	2300      	movs	r3, #0
    587a:	61fb      	str	r3, [r7, #28]
    587c:	687b      	ldr	r3, [r7, #4]
    587e:	78db      	ldrb	r3, [r3, #3]
    5880:	2201      	movs	r2, #1
    5882:	4053      	eors	r3, r2
    5884:	b2db      	uxtb	r3, r3
    5886:	2b00      	cmp	r3, #0
    5888:	d035      	beq.n	58f6 <_system_pinmux_config+0x8a>
    588a:	687b      	ldr	r3, [r7, #4]
    588c:	781b      	ldrb	r3, [r3, #0]
    588e:	2b80      	cmp	r3, #128	; 0x80
    5890:	d00b      	beq.n	58aa <_system_pinmux_config+0x3e>
    5892:	69fb      	ldr	r3, [r7, #28]
    5894:	2280      	movs	r2, #128	; 0x80
    5896:	0252      	lsls	r2, r2, #9
    5898:	4313      	orrs	r3, r2
    589a:	61fb      	str	r3, [r7, #28]
    589c:	687b      	ldr	r3, [r7, #4]
    589e:	781b      	ldrb	r3, [r3, #0]
    58a0:	061b      	lsls	r3, r3, #24
    58a2:	001a      	movs	r2, r3
    58a4:	69fb      	ldr	r3, [r7, #28]
    58a6:	4313      	orrs	r3, r2
    58a8:	61fb      	str	r3, [r7, #28]
    58aa:	687b      	ldr	r3, [r7, #4]
    58ac:	785b      	ldrb	r3, [r3, #1]
    58ae:	2b00      	cmp	r3, #0
    58b0:	d003      	beq.n	58ba <_system_pinmux_config+0x4e>
    58b2:	687b      	ldr	r3, [r7, #4]
    58b4:	785b      	ldrb	r3, [r3, #1]
    58b6:	2b02      	cmp	r3, #2
    58b8:	d110      	bne.n	58dc <_system_pinmux_config+0x70>
    58ba:	69fb      	ldr	r3, [r7, #28]
    58bc:	2280      	movs	r2, #128	; 0x80
    58be:	0292      	lsls	r2, r2, #10
    58c0:	4313      	orrs	r3, r2
    58c2:	61fb      	str	r3, [r7, #28]
    58c4:	687b      	ldr	r3, [r7, #4]
    58c6:	789b      	ldrb	r3, [r3, #2]
    58c8:	2b00      	cmp	r3, #0
    58ca:	d004      	beq.n	58d6 <_system_pinmux_config+0x6a>
    58cc:	69fb      	ldr	r3, [r7, #28]
    58ce:	2280      	movs	r2, #128	; 0x80
    58d0:	02d2      	lsls	r2, r2, #11
    58d2:	4313      	orrs	r3, r2
    58d4:	61fb      	str	r3, [r7, #28]
    58d6:	68fb      	ldr	r3, [r7, #12]
    58d8:	68ba      	ldr	r2, [r7, #8]
    58da:	605a      	str	r2, [r3, #4]
    58dc:	687b      	ldr	r3, [r7, #4]
    58de:	785b      	ldrb	r3, [r3, #1]
    58e0:	2b01      	cmp	r3, #1
    58e2:	d003      	beq.n	58ec <_system_pinmux_config+0x80>
    58e4:	687b      	ldr	r3, [r7, #4]
    58e6:	785b      	ldrb	r3, [r3, #1]
    58e8:	2b02      	cmp	r3, #2
    58ea:	d107      	bne.n	58fc <_system_pinmux_config+0x90>
    58ec:	69fb      	ldr	r3, [r7, #28]
    58ee:	4a22      	ldr	r2, [pc, #136]	; (5978 <_system_pinmux_config+0x10c>)
    58f0:	4013      	ands	r3, r2
    58f2:	61fb      	str	r3, [r7, #28]
    58f4:	e002      	b.n	58fc <_system_pinmux_config+0x90>
    58f6:	68fb      	ldr	r3, [r7, #12]
    58f8:	68ba      	ldr	r2, [r7, #8]
    58fa:	605a      	str	r2, [r3, #4]
    58fc:	68bb      	ldr	r3, [r7, #8]
    58fe:	041b      	lsls	r3, r3, #16
    5900:	0c1b      	lsrs	r3, r3, #16
    5902:	61bb      	str	r3, [r7, #24]
    5904:	68bb      	ldr	r3, [r7, #8]
    5906:	0c1b      	lsrs	r3, r3, #16
    5908:	617b      	str	r3, [r7, #20]
    590a:	69ba      	ldr	r2, [r7, #24]
    590c:	69fb      	ldr	r3, [r7, #28]
    590e:	4313      	orrs	r3, r2
    5910:	22a0      	movs	r2, #160	; 0xa0
    5912:	05d2      	lsls	r2, r2, #23
    5914:	431a      	orrs	r2, r3
    5916:	68fb      	ldr	r3, [r7, #12]
    5918:	629a      	str	r2, [r3, #40]	; 0x28
    591a:	697a      	ldr	r2, [r7, #20]
    591c:	69fb      	ldr	r3, [r7, #28]
    591e:	4313      	orrs	r3, r2
    5920:	22d0      	movs	r2, #208	; 0xd0
    5922:	0612      	lsls	r2, r2, #24
    5924:	431a      	orrs	r2, r3
    5926:	68fb      	ldr	r3, [r7, #12]
    5928:	629a      	str	r2, [r3, #40]	; 0x28
    592a:	687b      	ldr	r3, [r7, #4]
    592c:	78db      	ldrb	r3, [r3, #3]
    592e:	2201      	movs	r2, #1
    5930:	4053      	eors	r3, r2
    5932:	b2db      	uxtb	r3, r3
    5934:	2b00      	cmp	r3, #0
    5936:	d01a      	beq.n	596e <_system_pinmux_config+0x102>
    5938:	69fa      	ldr	r2, [r7, #28]
    593a:	2380      	movs	r3, #128	; 0x80
    593c:	02db      	lsls	r3, r3, #11
    593e:	4013      	ands	r3, r2
    5940:	d00a      	beq.n	5958 <_system_pinmux_config+0xec>
    5942:	687b      	ldr	r3, [r7, #4]
    5944:	789b      	ldrb	r3, [r3, #2]
    5946:	2b01      	cmp	r3, #1
    5948:	d103      	bne.n	5952 <_system_pinmux_config+0xe6>
    594a:	68fb      	ldr	r3, [r7, #12]
    594c:	68ba      	ldr	r2, [r7, #8]
    594e:	619a      	str	r2, [r3, #24]
    5950:	e002      	b.n	5958 <_system_pinmux_config+0xec>
    5952:	68fb      	ldr	r3, [r7, #12]
    5954:	68ba      	ldr	r2, [r7, #8]
    5956:	615a      	str	r2, [r3, #20]
    5958:	687b      	ldr	r3, [r7, #4]
    595a:	785b      	ldrb	r3, [r3, #1]
    595c:	2b01      	cmp	r3, #1
    595e:	d003      	beq.n	5968 <_system_pinmux_config+0xfc>
    5960:	687b      	ldr	r3, [r7, #4]
    5962:	785b      	ldrb	r3, [r3, #1]
    5964:	2b02      	cmp	r3, #2
    5966:	d102      	bne.n	596e <_system_pinmux_config+0x102>
    5968:	68fb      	ldr	r3, [r7, #12]
    596a:	68ba      	ldr	r2, [r7, #8]
    596c:	609a      	str	r2, [r3, #8]
    596e:	46c0      	nop			; (mov r8, r8)
    5970:	46bd      	mov	sp, r7
    5972:	b008      	add	sp, #32
    5974:	bd80      	pop	{r7, pc}
    5976:	46c0      	nop			; (mov r8, r8)
    5978:	fffbffff 	.word	0xfffbffff

0000597c <system_pinmux_pin_set_config>:
    597c:	b580      	push	{r7, lr}
    597e:	b084      	sub	sp, #16
    5980:	af00      	add	r7, sp, #0
    5982:	0002      	movs	r2, r0
    5984:	6039      	str	r1, [r7, #0]
    5986:	1dfb      	adds	r3, r7, #7
    5988:	701a      	strb	r2, [r3, #0]
    598a:	1dfb      	adds	r3, r7, #7
    598c:	781b      	ldrb	r3, [r3, #0]
    598e:	0018      	movs	r0, r3
    5990:	4b0a      	ldr	r3, [pc, #40]	; (59bc <system_pinmux_pin_set_config+0x40>)
    5992:	4798      	blx	r3
    5994:	0003      	movs	r3, r0
    5996:	60fb      	str	r3, [r7, #12]
    5998:	1dfb      	adds	r3, r7, #7
    599a:	781b      	ldrb	r3, [r3, #0]
    599c:	221f      	movs	r2, #31
    599e:	4013      	ands	r3, r2
    59a0:	2201      	movs	r2, #1
    59a2:	409a      	lsls	r2, r3
    59a4:	0013      	movs	r3, r2
    59a6:	60bb      	str	r3, [r7, #8]
    59a8:	683a      	ldr	r2, [r7, #0]
    59aa:	68b9      	ldr	r1, [r7, #8]
    59ac:	68fb      	ldr	r3, [r7, #12]
    59ae:	0018      	movs	r0, r3
    59b0:	4b03      	ldr	r3, [pc, #12]	; (59c0 <system_pinmux_pin_set_config+0x44>)
    59b2:	4798      	blx	r3
    59b4:	46c0      	nop			; (mov r8, r8)
    59b6:	46bd      	mov	sp, r7
    59b8:	b004      	add	sp, #16
    59ba:	bd80      	pop	{r7, pc}
    59bc:	0000580d 	.word	0x0000580d
    59c0:	0000586d 	.word	0x0000586d

000059c4 <_system_dummy_init>:
    59c4:	b580      	push	{r7, lr}
    59c6:	af00      	add	r7, sp, #0
    59c8:	46c0      	nop			; (mov r8, r8)
    59ca:	46bd      	mov	sp, r7
    59cc:	bd80      	pop	{r7, pc}
	...

000059d0 <system_init>:
    59d0:	b580      	push	{r7, lr}
    59d2:	af00      	add	r7, sp, #0
    59d4:	4b06      	ldr	r3, [pc, #24]	; (59f0 <system_init+0x20>)
    59d6:	4798      	blx	r3
    59d8:	4b06      	ldr	r3, [pc, #24]	; (59f4 <system_init+0x24>)
    59da:	4798      	blx	r3
    59dc:	4b06      	ldr	r3, [pc, #24]	; (59f8 <system_init+0x28>)
    59de:	4798      	blx	r3
    59e0:	4b06      	ldr	r3, [pc, #24]	; (59fc <system_init+0x2c>)
    59e2:	4798      	blx	r3
    59e4:	4b06      	ldr	r3, [pc, #24]	; (5a00 <system_init+0x30>)
    59e6:	4798      	blx	r3
    59e8:	46c0      	nop			; (mov r8, r8)
    59ea:	46bd      	mov	sp, r7
    59ec:	bd80      	pop	{r7, pc}
    59ee:	46c0      	nop			; (mov r8, r8)
    59f0:	000050dd 	.word	0x000050dd
    59f4:	00000361 	.word	0x00000361
    59f8:	000059c5 	.word	0x000059c5
    59fc:	00000b69 	.word	0x00000b69
    5a00:	000059c5 	.word	0x000059c5

00005a04 <tc_register_callback>:
    5a04:	b580      	push	{r7, lr}
    5a06:	b084      	sub	sp, #16
    5a08:	af00      	add	r7, sp, #0
    5a0a:	60f8      	str	r0, [r7, #12]
    5a0c:	60b9      	str	r1, [r7, #8]
    5a0e:	1dfb      	adds	r3, r7, #7
    5a10:	701a      	strb	r2, [r3, #0]
    5a12:	1dfb      	adds	r3, r7, #7
    5a14:	781a      	ldrb	r2, [r3, #0]
    5a16:	68fb      	ldr	r3, [r7, #12]
    5a18:	3202      	adds	r2, #2
    5a1a:	0092      	lsls	r2, r2, #2
    5a1c:	68b9      	ldr	r1, [r7, #8]
    5a1e:	50d1      	str	r1, [r2, r3]
    5a20:	1dfb      	adds	r3, r7, #7
    5a22:	781b      	ldrb	r3, [r3, #0]
    5a24:	2b02      	cmp	r3, #2
    5a26:	d107      	bne.n	5a38 <tc_register_callback+0x34>
    5a28:	68fb      	ldr	r3, [r7, #12]
    5a2a:	7e1b      	ldrb	r3, [r3, #24]
    5a2c:	2210      	movs	r2, #16
    5a2e:	4313      	orrs	r3, r2
    5a30:	b2da      	uxtb	r2, r3
    5a32:	68fb      	ldr	r3, [r7, #12]
    5a34:	761a      	strb	r2, [r3, #24]
    5a36:	e019      	b.n	5a6c <tc_register_callback+0x68>
    5a38:	1dfb      	adds	r3, r7, #7
    5a3a:	781b      	ldrb	r3, [r3, #0]
    5a3c:	2b03      	cmp	r3, #3
    5a3e:	d107      	bne.n	5a50 <tc_register_callback+0x4c>
    5a40:	68fb      	ldr	r3, [r7, #12]
    5a42:	7e1b      	ldrb	r3, [r3, #24]
    5a44:	2220      	movs	r2, #32
    5a46:	4313      	orrs	r3, r2
    5a48:	b2da      	uxtb	r2, r3
    5a4a:	68fb      	ldr	r3, [r7, #12]
    5a4c:	761a      	strb	r2, [r3, #24]
    5a4e:	e00d      	b.n	5a6c <tc_register_callback+0x68>
    5a50:	68fb      	ldr	r3, [r7, #12]
    5a52:	7e1b      	ldrb	r3, [r3, #24]
    5a54:	b25a      	sxtb	r2, r3
    5a56:	1dfb      	adds	r3, r7, #7
    5a58:	781b      	ldrb	r3, [r3, #0]
    5a5a:	2101      	movs	r1, #1
    5a5c:	4099      	lsls	r1, r3
    5a5e:	000b      	movs	r3, r1
    5a60:	b25b      	sxtb	r3, r3
    5a62:	4313      	orrs	r3, r2
    5a64:	b25b      	sxtb	r3, r3
    5a66:	b2da      	uxtb	r2, r3
    5a68:	68fb      	ldr	r3, [r7, #12]
    5a6a:	761a      	strb	r2, [r3, #24]
    5a6c:	2300      	movs	r3, #0
    5a6e:	0018      	movs	r0, r3
    5a70:	46bd      	mov	sp, r7
    5a72:	b004      	add	sp, #16
    5a74:	bd80      	pop	{r7, pc}
	...

00005a78 <TC0_Handler>:
    5a78:	b580      	push	{r7, lr}
    5a7a:	af00      	add	r7, sp, #0
    5a7c:	2000      	movs	r0, #0
    5a7e:	4b02      	ldr	r3, [pc, #8]	; (5a88 <TC0_Handler+0x10>)
    5a80:	4798      	blx	r3
    5a82:	46c0      	nop			; (mov r8, r8)
    5a84:	46bd      	mov	sp, r7
    5a86:	bd80      	pop	{r7, pc}
    5a88:	00005add 	.word	0x00005add

00005a8c <TC1_Handler>:
    5a8c:	b580      	push	{r7, lr}
    5a8e:	af00      	add	r7, sp, #0
    5a90:	2001      	movs	r0, #1
    5a92:	4b02      	ldr	r3, [pc, #8]	; (5a9c <TC1_Handler+0x10>)
    5a94:	4798      	blx	r3
    5a96:	46c0      	nop			; (mov r8, r8)
    5a98:	46bd      	mov	sp, r7
    5a9a:	bd80      	pop	{r7, pc}
    5a9c:	00005add 	.word	0x00005add

00005aa0 <TC2_Handler>:
    5aa0:	b580      	push	{r7, lr}
    5aa2:	af00      	add	r7, sp, #0
    5aa4:	2002      	movs	r0, #2
    5aa6:	4b02      	ldr	r3, [pc, #8]	; (5ab0 <TC2_Handler+0x10>)
    5aa8:	4798      	blx	r3
    5aaa:	46c0      	nop			; (mov r8, r8)
    5aac:	46bd      	mov	sp, r7
    5aae:	bd80      	pop	{r7, pc}
    5ab0:	00005add 	.word	0x00005add

00005ab4 <TC3_Handler>:
    5ab4:	b580      	push	{r7, lr}
    5ab6:	af00      	add	r7, sp, #0
    5ab8:	2003      	movs	r0, #3
    5aba:	4b02      	ldr	r3, [pc, #8]	; (5ac4 <TC3_Handler+0x10>)
    5abc:	4798      	blx	r3
    5abe:	46c0      	nop			; (mov r8, r8)
    5ac0:	46bd      	mov	sp, r7
    5ac2:	bd80      	pop	{r7, pc}
    5ac4:	00005add 	.word	0x00005add

00005ac8 <TC4_Handler>:
    5ac8:	b580      	push	{r7, lr}
    5aca:	af00      	add	r7, sp, #0
    5acc:	2004      	movs	r0, #4
    5ace:	4b02      	ldr	r3, [pc, #8]	; (5ad8 <TC4_Handler+0x10>)
    5ad0:	4798      	blx	r3
    5ad2:	46c0      	nop			; (mov r8, r8)
    5ad4:	46bd      	mov	sp, r7
    5ad6:	bd80      	pop	{r7, pc}
    5ad8:	00005add 	.word	0x00005add

00005adc <_tc_interrupt_handler>:
    5adc:	b580      	push	{r7, lr}
    5ade:	b084      	sub	sp, #16
    5ae0:	af00      	add	r7, sp, #0
    5ae2:	0002      	movs	r2, r0
    5ae4:	1dfb      	adds	r3, r7, #7
    5ae6:	701a      	strb	r2, [r3, #0]
    5ae8:	1dfb      	adds	r3, r7, #7
    5aea:	781a      	ldrb	r2, [r3, #0]
    5aec:	4b28      	ldr	r3, [pc, #160]	; (5b90 <_tc_interrupt_handler+0xb4>)
    5aee:	0092      	lsls	r2, r2, #2
    5af0:	58d3      	ldr	r3, [r2, r3]
    5af2:	60fb      	str	r3, [r7, #12]
    5af4:	68fb      	ldr	r3, [r7, #12]
    5af6:	681b      	ldr	r3, [r3, #0]
    5af8:	7a9b      	ldrb	r3, [r3, #10]
    5afa:	b2db      	uxtb	r3, r3
    5afc:	68fa      	ldr	r2, [r7, #12]
    5afe:	7e12      	ldrb	r2, [r2, #24]
    5b00:	4013      	ands	r3, r2
    5b02:	b2da      	uxtb	r2, r3
    5b04:	68fb      	ldr	r3, [r7, #12]
    5b06:	7e59      	ldrb	r1, [r3, #25]
    5b08:	230b      	movs	r3, #11
    5b0a:	18fb      	adds	r3, r7, r3
    5b0c:	400a      	ands	r2, r1
    5b0e:	701a      	strb	r2, [r3, #0]
    5b10:	230b      	movs	r3, #11
    5b12:	18fb      	adds	r3, r7, r3
    5b14:	781b      	ldrb	r3, [r3, #0]
    5b16:	2201      	movs	r2, #1
    5b18:	4013      	ands	r3, r2
    5b1a:	d008      	beq.n	5b2e <_tc_interrupt_handler+0x52>
    5b1c:	68fb      	ldr	r3, [r7, #12]
    5b1e:	689b      	ldr	r3, [r3, #8]
    5b20:	68fa      	ldr	r2, [r7, #12]
    5b22:	0010      	movs	r0, r2
    5b24:	4798      	blx	r3
    5b26:	68fb      	ldr	r3, [r7, #12]
    5b28:	681b      	ldr	r3, [r3, #0]
    5b2a:	2201      	movs	r2, #1
    5b2c:	729a      	strb	r2, [r3, #10]
    5b2e:	230b      	movs	r3, #11
    5b30:	18fb      	adds	r3, r7, r3
    5b32:	781b      	ldrb	r3, [r3, #0]
    5b34:	2202      	movs	r2, #2
    5b36:	4013      	ands	r3, r2
    5b38:	d008      	beq.n	5b4c <_tc_interrupt_handler+0x70>
    5b3a:	68fb      	ldr	r3, [r7, #12]
    5b3c:	68db      	ldr	r3, [r3, #12]
    5b3e:	68fa      	ldr	r2, [r7, #12]
    5b40:	0010      	movs	r0, r2
    5b42:	4798      	blx	r3
    5b44:	68fb      	ldr	r3, [r7, #12]
    5b46:	681b      	ldr	r3, [r3, #0]
    5b48:	2202      	movs	r2, #2
    5b4a:	729a      	strb	r2, [r3, #10]
    5b4c:	230b      	movs	r3, #11
    5b4e:	18fb      	adds	r3, r7, r3
    5b50:	781b      	ldrb	r3, [r3, #0]
    5b52:	2210      	movs	r2, #16
    5b54:	4013      	ands	r3, r2
    5b56:	d008      	beq.n	5b6a <_tc_interrupt_handler+0x8e>
    5b58:	68fb      	ldr	r3, [r7, #12]
    5b5a:	691b      	ldr	r3, [r3, #16]
    5b5c:	68fa      	ldr	r2, [r7, #12]
    5b5e:	0010      	movs	r0, r2
    5b60:	4798      	blx	r3
    5b62:	68fb      	ldr	r3, [r7, #12]
    5b64:	681b      	ldr	r3, [r3, #0]
    5b66:	2210      	movs	r2, #16
    5b68:	729a      	strb	r2, [r3, #10]
    5b6a:	230b      	movs	r3, #11
    5b6c:	18fb      	adds	r3, r7, r3
    5b6e:	781b      	ldrb	r3, [r3, #0]
    5b70:	2220      	movs	r2, #32
    5b72:	4013      	ands	r3, r2
    5b74:	d008      	beq.n	5b88 <_tc_interrupt_handler+0xac>
    5b76:	68fb      	ldr	r3, [r7, #12]
    5b78:	695b      	ldr	r3, [r3, #20]
    5b7a:	68fa      	ldr	r2, [r7, #12]
    5b7c:	0010      	movs	r0, r2
    5b7e:	4798      	blx	r3
    5b80:	68fb      	ldr	r3, [r7, #12]
    5b82:	681b      	ldr	r3, [r3, #0]
    5b84:	2220      	movs	r2, #32
    5b86:	729a      	strb	r2, [r3, #10]
    5b88:	46c0      	nop			; (mov r8, r8)
    5b8a:	46bd      	mov	sp, r7
    5b8c:	b004      	add	sp, #16
    5b8e:	bd80      	pop	{r7, pc}
    5b90:	20000d34 	.word	0x20000d34

00005b94 <system_gclk_chan_get_config_defaults>:
    5b94:	b580      	push	{r7, lr}
    5b96:	b082      	sub	sp, #8
    5b98:	af00      	add	r7, sp, #0
    5b9a:	6078      	str	r0, [r7, #4]
    5b9c:	687b      	ldr	r3, [r7, #4]
    5b9e:	2200      	movs	r2, #0
    5ba0:	701a      	strb	r2, [r3, #0]
    5ba2:	46c0      	nop			; (mov r8, r8)
    5ba4:	46bd      	mov	sp, r7
    5ba6:	b002      	add	sp, #8
    5ba8:	bd80      	pop	{r7, pc}
	...

00005bac <system_apb_clock_set_mask>:
    5bac:	b580      	push	{r7, lr}
    5bae:	b082      	sub	sp, #8
    5bb0:	af00      	add	r7, sp, #0
    5bb2:	0002      	movs	r2, r0
    5bb4:	6039      	str	r1, [r7, #0]
    5bb6:	1dfb      	adds	r3, r7, #7
    5bb8:	701a      	strb	r2, [r3, #0]
    5bba:	1dfb      	adds	r3, r7, #7
    5bbc:	781b      	ldrb	r3, [r3, #0]
    5bbe:	2b04      	cmp	r3, #4
    5bc0:	d827      	bhi.n	5c12 <system_apb_clock_set_mask+0x66>
    5bc2:	009a      	lsls	r2, r3, #2
    5bc4:	4b16      	ldr	r3, [pc, #88]	; (5c20 <system_apb_clock_set_mask+0x74>)
    5bc6:	18d3      	adds	r3, r2, r3
    5bc8:	681b      	ldr	r3, [r3, #0]
    5bca:	469f      	mov	pc, r3
    5bcc:	4b15      	ldr	r3, [pc, #84]	; (5c24 <system_apb_clock_set_mask+0x78>)
    5bce:	4a15      	ldr	r2, [pc, #84]	; (5c24 <system_apb_clock_set_mask+0x78>)
    5bd0:	6951      	ldr	r1, [r2, #20]
    5bd2:	683a      	ldr	r2, [r7, #0]
    5bd4:	430a      	orrs	r2, r1
    5bd6:	615a      	str	r2, [r3, #20]
    5bd8:	e01d      	b.n	5c16 <system_apb_clock_set_mask+0x6a>
    5bda:	4b12      	ldr	r3, [pc, #72]	; (5c24 <system_apb_clock_set_mask+0x78>)
    5bdc:	4a11      	ldr	r2, [pc, #68]	; (5c24 <system_apb_clock_set_mask+0x78>)
    5bde:	6991      	ldr	r1, [r2, #24]
    5be0:	683a      	ldr	r2, [r7, #0]
    5be2:	430a      	orrs	r2, r1
    5be4:	619a      	str	r2, [r3, #24]
    5be6:	e016      	b.n	5c16 <system_apb_clock_set_mask+0x6a>
    5be8:	4b0e      	ldr	r3, [pc, #56]	; (5c24 <system_apb_clock_set_mask+0x78>)
    5bea:	4a0e      	ldr	r2, [pc, #56]	; (5c24 <system_apb_clock_set_mask+0x78>)
    5bec:	69d1      	ldr	r1, [r2, #28]
    5bee:	683a      	ldr	r2, [r7, #0]
    5bf0:	430a      	orrs	r2, r1
    5bf2:	61da      	str	r2, [r3, #28]
    5bf4:	e00f      	b.n	5c16 <system_apb_clock_set_mask+0x6a>
    5bf6:	4b0b      	ldr	r3, [pc, #44]	; (5c24 <system_apb_clock_set_mask+0x78>)
    5bf8:	4a0a      	ldr	r2, [pc, #40]	; (5c24 <system_apb_clock_set_mask+0x78>)
    5bfa:	6a11      	ldr	r1, [r2, #32]
    5bfc:	683a      	ldr	r2, [r7, #0]
    5bfe:	430a      	orrs	r2, r1
    5c00:	621a      	str	r2, [r3, #32]
    5c02:	e008      	b.n	5c16 <system_apb_clock_set_mask+0x6a>
    5c04:	4b07      	ldr	r3, [pc, #28]	; (5c24 <system_apb_clock_set_mask+0x78>)
    5c06:	4a07      	ldr	r2, [pc, #28]	; (5c24 <system_apb_clock_set_mask+0x78>)
    5c08:	6a51      	ldr	r1, [r2, #36]	; 0x24
    5c0a:	683a      	ldr	r2, [r7, #0]
    5c0c:	430a      	orrs	r2, r1
    5c0e:	625a      	str	r2, [r3, #36]	; 0x24
    5c10:	e001      	b.n	5c16 <system_apb_clock_set_mask+0x6a>
    5c12:	2317      	movs	r3, #23
    5c14:	e000      	b.n	5c18 <system_apb_clock_set_mask+0x6c>
    5c16:	2300      	movs	r3, #0
    5c18:	0018      	movs	r0, r3
    5c1a:	46bd      	mov	sp, r7
    5c1c:	b002      	add	sp, #8
    5c1e:	bd80      	pop	{r7, pc}
    5c20:	0001cbf0 	.word	0x0001cbf0
    5c24:	40000400 	.word	0x40000400

00005c28 <system_pinmux_get_config_defaults>:
    5c28:	b580      	push	{r7, lr}
    5c2a:	b082      	sub	sp, #8
    5c2c:	af00      	add	r7, sp, #0
    5c2e:	6078      	str	r0, [r7, #4]
    5c30:	687b      	ldr	r3, [r7, #4]
    5c32:	2280      	movs	r2, #128	; 0x80
    5c34:	701a      	strb	r2, [r3, #0]
    5c36:	687b      	ldr	r3, [r7, #4]
    5c38:	2200      	movs	r2, #0
    5c3a:	705a      	strb	r2, [r3, #1]
    5c3c:	687b      	ldr	r3, [r7, #4]
    5c3e:	2201      	movs	r2, #1
    5c40:	709a      	strb	r2, [r3, #2]
    5c42:	687b      	ldr	r3, [r7, #4]
    5c44:	2200      	movs	r2, #0
    5c46:	70da      	strb	r2, [r3, #3]
    5c48:	46c0      	nop			; (mov r8, r8)
    5c4a:	46bd      	mov	sp, r7
    5c4c:	b002      	add	sp, #8
    5c4e:	bd80      	pop	{r7, pc}

00005c50 <tc_is_syncing>:
    5c50:	b580      	push	{r7, lr}
    5c52:	b084      	sub	sp, #16
    5c54:	af00      	add	r7, sp, #0
    5c56:	6078      	str	r0, [r7, #4]
    5c58:	687b      	ldr	r3, [r7, #4]
    5c5a:	681b      	ldr	r3, [r3, #0]
    5c5c:	60fb      	str	r3, [r7, #12]
    5c5e:	68fb      	ldr	r3, [r7, #12]
    5c60:	691b      	ldr	r3, [r3, #16]
    5c62:	1e5a      	subs	r2, r3, #1
    5c64:	4193      	sbcs	r3, r2
    5c66:	b2db      	uxtb	r3, r3
    5c68:	0018      	movs	r0, r3
    5c6a:	46bd      	mov	sp, r7
    5c6c:	b004      	add	sp, #16
    5c6e:	bd80      	pop	{r7, pc}

00005c70 <tc_sync_read_count>:
    5c70:	b580      	push	{r7, lr}
    5c72:	b084      	sub	sp, #16
    5c74:	af00      	add	r7, sp, #0
    5c76:	6078      	str	r0, [r7, #4]
    5c78:	687b      	ldr	r3, [r7, #4]
    5c7a:	681b      	ldr	r3, [r3, #0]
    5c7c:	60fb      	str	r3, [r7, #12]
    5c7e:	46c0      	nop			; (mov r8, r8)
    5c80:	687b      	ldr	r3, [r7, #4]
    5c82:	0018      	movs	r0, r3
    5c84:	4b0a      	ldr	r3, [pc, #40]	; (5cb0 <tc_sync_read_count+0x40>)
    5c86:	4798      	blx	r3
    5c88:	1e03      	subs	r3, r0, #0
    5c8a:	d1f9      	bne.n	5c80 <tc_sync_read_count+0x10>
    5c8c:	68fb      	ldr	r3, [r7, #12]
    5c8e:	2200      	movs	r2, #0
    5c90:	711a      	strb	r2, [r3, #4]
    5c92:	46c0      	nop			; (mov r8, r8)
    5c94:	687b      	ldr	r3, [r7, #4]
    5c96:	0018      	movs	r0, r3
    5c98:	4b05      	ldr	r3, [pc, #20]	; (5cb0 <tc_sync_read_count+0x40>)
    5c9a:	4798      	blx	r3
    5c9c:	1e03      	subs	r3, r0, #0
    5c9e:	d1f9      	bne.n	5c94 <tc_sync_read_count+0x24>
    5ca0:	68fb      	ldr	r3, [r7, #12]
    5ca2:	2280      	movs	r2, #128	; 0x80
    5ca4:	715a      	strb	r2, [r3, #5]
    5ca6:	46c0      	nop			; (mov r8, r8)
    5ca8:	46bd      	mov	sp, r7
    5caa:	b004      	add	sp, #16
    5cac:	bd80      	pop	{r7, pc}
    5cae:	46c0      	nop			; (mov r8, r8)
    5cb0:	00005c51 	.word	0x00005c51

00005cb4 <_tc_get_inst_index>:
    5cb4:	b590      	push	{r4, r7, lr}
    5cb6:	b089      	sub	sp, #36	; 0x24
    5cb8:	af00      	add	r7, sp, #0
    5cba:	6078      	str	r0, [r7, #4]
    5cbc:	2308      	movs	r3, #8
    5cbe:	18fb      	adds	r3, r7, r3
    5cc0:	4a0e      	ldr	r2, [pc, #56]	; (5cfc <_tc_get_inst_index+0x48>)
    5cc2:	ca13      	ldmia	r2!, {r0, r1, r4}
    5cc4:	c313      	stmia	r3!, {r0, r1, r4}
    5cc6:	ca03      	ldmia	r2!, {r0, r1}
    5cc8:	c303      	stmia	r3!, {r0, r1}
    5cca:	2300      	movs	r3, #0
    5ccc:	61fb      	str	r3, [r7, #28]
    5cce:	e00d      	b.n	5cec <_tc_get_inst_index+0x38>
    5cd0:	2308      	movs	r3, #8
    5cd2:	18fb      	adds	r3, r7, r3
    5cd4:	69fa      	ldr	r2, [r7, #28]
    5cd6:	0092      	lsls	r2, r2, #2
    5cd8:	58d2      	ldr	r2, [r2, r3]
    5cda:	687b      	ldr	r3, [r7, #4]
    5cdc:	429a      	cmp	r2, r3
    5cde:	d102      	bne.n	5ce6 <_tc_get_inst_index+0x32>
    5ce0:	69fb      	ldr	r3, [r7, #28]
    5ce2:	b2db      	uxtb	r3, r3
    5ce4:	e006      	b.n	5cf4 <_tc_get_inst_index+0x40>
    5ce6:	69fb      	ldr	r3, [r7, #28]
    5ce8:	3301      	adds	r3, #1
    5cea:	61fb      	str	r3, [r7, #28]
    5cec:	69fb      	ldr	r3, [r7, #28]
    5cee:	2b04      	cmp	r3, #4
    5cf0:	d9ee      	bls.n	5cd0 <_tc_get_inst_index+0x1c>
    5cf2:	2300      	movs	r3, #0
    5cf4:	0018      	movs	r0, r3
    5cf6:	46bd      	mov	sp, r7
    5cf8:	b009      	add	sp, #36	; 0x24
    5cfa:	bd90      	pop	{r4, r7, pc}
    5cfc:	0001cc04 	.word	0x0001cc04

00005d00 <tc_init>:
    5d00:	b590      	push	{r4, r7, lr}
    5d02:	b095      	sub	sp, #84	; 0x54
    5d04:	af00      	add	r7, sp, #0
    5d06:	60f8      	str	r0, [r7, #12]
    5d08:	60b9      	str	r1, [r7, #8]
    5d0a:	607a      	str	r2, [r7, #4]
    5d0c:	2300      	movs	r3, #0
    5d0e:	64fb      	str	r3, [r7, #76]	; 0x4c
    5d10:	234b      	movs	r3, #75	; 0x4b
    5d12:	18fb      	adds	r3, r7, r3
    5d14:	2200      	movs	r2, #0
    5d16:	701a      	strb	r2, [r3, #0]
    5d18:	2347      	movs	r3, #71	; 0x47
    5d1a:	18fc      	adds	r4, r7, r3
    5d1c:	68bb      	ldr	r3, [r7, #8]
    5d1e:	0018      	movs	r0, r3
    5d20:	4bd6      	ldr	r3, [pc, #856]	; (607c <tc_init+0x37c>)
    5d22:	4798      	blx	r3
    5d24:	0003      	movs	r3, r0
    5d26:	7023      	strb	r3, [r4, #0]
    5d28:	2340      	movs	r3, #64	; 0x40
    5d2a:	18fb      	adds	r3, r7, r3
    5d2c:	4ad4      	ldr	r2, [pc, #848]	; (6080 <tc_init+0x380>)
    5d2e:	6811      	ldr	r1, [r2, #0]
    5d30:	6019      	str	r1, [r3, #0]
    5d32:	7912      	ldrb	r2, [r2, #4]
    5d34:	711a      	strb	r2, [r3, #4]
    5d36:	2318      	movs	r3, #24
    5d38:	18fb      	adds	r3, r7, r3
    5d3a:	4ad2      	ldr	r2, [pc, #840]	; (6084 <tc_init+0x384>)
    5d3c:	ca13      	ldmia	r2!, {r0, r1, r4}
    5d3e:	c313      	stmia	r3!, {r0, r1, r4}
    5d40:	ca13      	ldmia	r2!, {r0, r1, r4}
    5d42:	c313      	stmia	r3!, {r0, r1, r4}
    5d44:	ca13      	ldmia	r2!, {r0, r1, r4}
    5d46:	c313      	stmia	r3!, {r0, r1, r4}
    5d48:	6812      	ldr	r2, [r2, #0]
    5d4a:	601a      	str	r2, [r3, #0]
    5d4c:	234a      	movs	r3, #74	; 0x4a
    5d4e:	18fb      	adds	r3, r7, r3
    5d50:	2200      	movs	r2, #0
    5d52:	701a      	strb	r2, [r3, #0]
    5d54:	e00e      	b.n	5d74 <tc_init+0x74>
    5d56:	234a      	movs	r3, #74	; 0x4a
    5d58:	18fb      	adds	r3, r7, r3
    5d5a:	781a      	ldrb	r2, [r3, #0]
    5d5c:	68fb      	ldr	r3, [r7, #12]
    5d5e:	3202      	adds	r2, #2
    5d60:	0092      	lsls	r2, r2, #2
    5d62:	2100      	movs	r1, #0
    5d64:	50d1      	str	r1, [r2, r3]
    5d66:	234a      	movs	r3, #74	; 0x4a
    5d68:	18fb      	adds	r3, r7, r3
    5d6a:	781a      	ldrb	r2, [r3, #0]
    5d6c:	234a      	movs	r3, #74	; 0x4a
    5d6e:	18fb      	adds	r3, r7, r3
    5d70:	3201      	adds	r2, #1
    5d72:	701a      	strb	r2, [r3, #0]
    5d74:	234a      	movs	r3, #74	; 0x4a
    5d76:	18fb      	adds	r3, r7, r3
    5d78:	781b      	ldrb	r3, [r3, #0]
    5d7a:	2b03      	cmp	r3, #3
    5d7c:	d9eb      	bls.n	5d56 <tc_init+0x56>
    5d7e:	68fb      	ldr	r3, [r7, #12]
    5d80:	2200      	movs	r2, #0
    5d82:	761a      	strb	r2, [r3, #24]
    5d84:	68fb      	ldr	r3, [r7, #12]
    5d86:	2200      	movs	r2, #0
    5d88:	765a      	strb	r2, [r3, #25]
    5d8a:	2347      	movs	r3, #71	; 0x47
    5d8c:	18fb      	adds	r3, r7, r3
    5d8e:	781a      	ldrb	r2, [r3, #0]
    5d90:	4bbd      	ldr	r3, [pc, #756]	; (6088 <tc_init+0x388>)
    5d92:	0092      	lsls	r2, r2, #2
    5d94:	68f9      	ldr	r1, [r7, #12]
    5d96:	50d1      	str	r1, [r2, r3]
    5d98:	68fb      	ldr	r3, [r7, #12]
    5d9a:	68ba      	ldr	r2, [r7, #8]
    5d9c:	601a      	str	r2, [r3, #0]
    5d9e:	687b      	ldr	r3, [r7, #4]
    5da0:	2234      	movs	r2, #52	; 0x34
    5da2:	5c9a      	ldrb	r2, [r3, r2]
    5da4:	68fb      	ldr	r3, [r7, #12]
    5da6:	769a      	strb	r2, [r3, #26]
    5da8:	687b      	ldr	r3, [r7, #4]
    5daa:	78db      	ldrb	r3, [r3, #3]
    5dac:	2b08      	cmp	r3, #8
    5dae:	d107      	bne.n	5dc0 <tc_init+0xc0>
    5db0:	2347      	movs	r3, #71	; 0x47
    5db2:	18fb      	adds	r3, r7, r3
    5db4:	781b      	ldrb	r3, [r3, #0]
    5db6:	2201      	movs	r2, #1
    5db8:	4013      	ands	r3, r2
    5dba:	d001      	beq.n	5dc0 <tc_init+0xc0>
    5dbc:	2317      	movs	r3, #23
    5dbe:	e1ec      	b.n	619a <tc_init+0x49a>
    5dc0:	687b      	ldr	r3, [r7, #4]
    5dc2:	78da      	ldrb	r2, [r3, #3]
    5dc4:	68fb      	ldr	r3, [r7, #12]
    5dc6:	711a      	strb	r2, [r3, #4]
    5dc8:	68bb      	ldr	r3, [r7, #8]
    5dca:	681b      	ldr	r3, [r3, #0]
    5dcc:	2201      	movs	r2, #1
    5dce:	4013      	ands	r3, r2
    5dd0:	d001      	beq.n	5dd6 <tc_init+0xd6>
    5dd2:	2305      	movs	r3, #5
    5dd4:	e1e1      	b.n	619a <tc_init+0x49a>
    5dd6:	68bb      	ldr	r3, [r7, #8]
    5dd8:	7adb      	ldrb	r3, [r3, #11]
    5dda:	b2db      	uxtb	r3, r3
    5ddc:	001a      	movs	r2, r3
    5dde:	2302      	movs	r3, #2
    5de0:	4013      	ands	r3, r2
    5de2:	d001      	beq.n	5de8 <tc_init+0xe8>
    5de4:	231c      	movs	r3, #28
    5de6:	e1d8      	b.n	619a <tc_init+0x49a>
    5de8:	68bb      	ldr	r3, [r7, #8]
    5dea:	681b      	ldr	r3, [r3, #0]
    5dec:	2202      	movs	r2, #2
    5dee:	4013      	ands	r3, r2
    5df0:	d001      	beq.n	5df6 <tc_init+0xf6>
    5df2:	231c      	movs	r3, #28
    5df4:	e1d1      	b.n	619a <tc_init+0x49a>
    5df6:	687b      	ldr	r3, [r7, #4]
    5df8:	7c1b      	ldrb	r3, [r3, #16]
    5dfa:	2b00      	cmp	r3, #0
    5dfc:	d017      	beq.n	5e2e <tc_init+0x12e>
    5dfe:	2314      	movs	r3, #20
    5e00:	18fb      	adds	r3, r7, r3
    5e02:	0018      	movs	r0, r3
    5e04:	4ba1      	ldr	r3, [pc, #644]	; (608c <tc_init+0x38c>)
    5e06:	4798      	blx	r3
    5e08:	687b      	ldr	r3, [r7, #4]
    5e0a:	699b      	ldr	r3, [r3, #24]
    5e0c:	b2da      	uxtb	r2, r3
    5e0e:	2314      	movs	r3, #20
    5e10:	18fb      	adds	r3, r7, r3
    5e12:	701a      	strb	r2, [r3, #0]
    5e14:	2314      	movs	r3, #20
    5e16:	18fb      	adds	r3, r7, r3
    5e18:	2201      	movs	r2, #1
    5e1a:	705a      	strb	r2, [r3, #1]
    5e1c:	687b      	ldr	r3, [r7, #4]
    5e1e:	695b      	ldr	r3, [r3, #20]
    5e20:	b2db      	uxtb	r3, r3
    5e22:	2214      	movs	r2, #20
    5e24:	18ba      	adds	r2, r7, r2
    5e26:	0011      	movs	r1, r2
    5e28:	0018      	movs	r0, r3
    5e2a:	4b99      	ldr	r3, [pc, #612]	; (6090 <tc_init+0x390>)
    5e2c:	4798      	blx	r3
    5e2e:	687b      	ldr	r3, [r7, #4]
    5e30:	7f1b      	ldrb	r3, [r3, #28]
    5e32:	2b00      	cmp	r3, #0
    5e34:	d017      	beq.n	5e66 <tc_init+0x166>
    5e36:	2314      	movs	r3, #20
    5e38:	18fb      	adds	r3, r7, r3
    5e3a:	0018      	movs	r0, r3
    5e3c:	4b93      	ldr	r3, [pc, #588]	; (608c <tc_init+0x38c>)
    5e3e:	4798      	blx	r3
    5e40:	687b      	ldr	r3, [r7, #4]
    5e42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    5e44:	b2da      	uxtb	r2, r3
    5e46:	2314      	movs	r3, #20
    5e48:	18fb      	adds	r3, r7, r3
    5e4a:	701a      	strb	r2, [r3, #0]
    5e4c:	2314      	movs	r3, #20
    5e4e:	18fb      	adds	r3, r7, r3
    5e50:	2201      	movs	r2, #1
    5e52:	705a      	strb	r2, [r3, #1]
    5e54:	687b      	ldr	r3, [r7, #4]
    5e56:	6a1b      	ldr	r3, [r3, #32]
    5e58:	b2db      	uxtb	r3, r3
    5e5a:	2214      	movs	r2, #20
    5e5c:	18ba      	adds	r2, r7, r2
    5e5e:	0011      	movs	r1, r2
    5e60:	0018      	movs	r0, r3
    5e62:	4b8b      	ldr	r3, [pc, #556]	; (6090 <tc_init+0x390>)
    5e64:	4798      	blx	r3
    5e66:	2347      	movs	r3, #71	; 0x47
    5e68:	18fb      	adds	r3, r7, r3
    5e6a:	781b      	ldrb	r3, [r3, #0]
    5e6c:	005a      	lsls	r2, r3, #1
    5e6e:	2318      	movs	r3, #24
    5e70:	18fb      	adds	r3, r7, r3
    5e72:	0092      	lsls	r2, r2, #2
    5e74:	58d3      	ldr	r3, [r2, r3]
    5e76:	b2d8      	uxtb	r0, r3
    5e78:	2347      	movs	r3, #71	; 0x47
    5e7a:	18fb      	adds	r3, r7, r3
    5e7c:	781b      	ldrb	r3, [r3, #0]
    5e7e:	005b      	lsls	r3, r3, #1
    5e80:	1c5a      	adds	r2, r3, #1
    5e82:	2318      	movs	r3, #24
    5e84:	18fb      	adds	r3, r7, r3
    5e86:	0092      	lsls	r2, r2, #2
    5e88:	58d3      	ldr	r3, [r2, r3]
    5e8a:	0019      	movs	r1, r3
    5e8c:	4b81      	ldr	r3, [pc, #516]	; (6094 <tc_init+0x394>)
    5e8e:	4798      	blx	r3
    5e90:	687b      	ldr	r3, [r7, #4]
    5e92:	78db      	ldrb	r3, [r3, #3]
    5e94:	2b08      	cmp	r3, #8
    5e96:	d11c      	bne.n	5ed2 <tc_init+0x1d2>
    5e98:	2347      	movs	r3, #71	; 0x47
    5e9a:	18fb      	adds	r3, r7, r3
    5e9c:	781b      	ldrb	r3, [r3, #0]
    5e9e:	3301      	adds	r3, #1
    5ea0:	2b04      	cmp	r3, #4
    5ea2:	dc16      	bgt.n	5ed2 <tc_init+0x1d2>
    5ea4:	2347      	movs	r3, #71	; 0x47
    5ea6:	18fb      	adds	r3, r7, r3
    5ea8:	781b      	ldrb	r3, [r3, #0]
    5eaa:	3301      	adds	r3, #1
    5eac:	005a      	lsls	r2, r3, #1
    5eae:	2318      	movs	r3, #24
    5eb0:	18fb      	adds	r3, r7, r3
    5eb2:	0092      	lsls	r2, r2, #2
    5eb4:	58d3      	ldr	r3, [r2, r3]
    5eb6:	b2d8      	uxtb	r0, r3
    5eb8:	2347      	movs	r3, #71	; 0x47
    5eba:	18fb      	adds	r3, r7, r3
    5ebc:	781b      	ldrb	r3, [r3, #0]
    5ebe:	3301      	adds	r3, #1
    5ec0:	005b      	lsls	r3, r3, #1
    5ec2:	1c5a      	adds	r2, r3, #1
    5ec4:	2318      	movs	r3, #24
    5ec6:	18fb      	adds	r3, r7, r3
    5ec8:	0092      	lsls	r2, r2, #2
    5eca:	58d3      	ldr	r3, [r2, r3]
    5ecc:	0019      	movs	r1, r3
    5ece:	4b71      	ldr	r3, [pc, #452]	; (6094 <tc_init+0x394>)
    5ed0:	4798      	blx	r3
    5ed2:	2310      	movs	r3, #16
    5ed4:	18fb      	adds	r3, r7, r3
    5ed6:	0018      	movs	r0, r3
    5ed8:	4b6f      	ldr	r3, [pc, #444]	; (6098 <tc_init+0x398>)
    5eda:	4798      	blx	r3
    5edc:	687b      	ldr	r3, [r7, #4]
    5ede:	781a      	ldrb	r2, [r3, #0]
    5ee0:	2310      	movs	r3, #16
    5ee2:	18fb      	adds	r3, r7, r3
    5ee4:	701a      	strb	r2, [r3, #0]
    5ee6:	2347      	movs	r3, #71	; 0x47
    5ee8:	18fb      	adds	r3, r7, r3
    5eea:	781b      	ldrb	r3, [r3, #0]
    5eec:	2240      	movs	r2, #64	; 0x40
    5eee:	18ba      	adds	r2, r7, r2
    5ef0:	5cd3      	ldrb	r3, [r2, r3]
    5ef2:	2210      	movs	r2, #16
    5ef4:	18ba      	adds	r2, r7, r2
    5ef6:	0011      	movs	r1, r2
    5ef8:	0018      	movs	r0, r3
    5efa:	4b68      	ldr	r3, [pc, #416]	; (609c <tc_init+0x39c>)
    5efc:	4798      	blx	r3
    5efe:	2347      	movs	r3, #71	; 0x47
    5f00:	18fb      	adds	r3, r7, r3
    5f02:	781b      	ldrb	r3, [r3, #0]
    5f04:	2240      	movs	r2, #64	; 0x40
    5f06:	18ba      	adds	r2, r7, r2
    5f08:	5cd3      	ldrb	r3, [r2, r3]
    5f0a:	0018      	movs	r0, r3
    5f0c:	4b64      	ldr	r3, [pc, #400]	; (60a0 <tc_init+0x3a0>)
    5f0e:	4798      	blx	r3
    5f10:	687b      	ldr	r3, [r7, #4]
    5f12:	78da      	ldrb	r2, [r3, #3]
    5f14:	687b      	ldr	r3, [r7, #4]
    5f16:	79db      	ldrb	r3, [r3, #7]
    5f18:	4313      	orrs	r3, r2
    5f1a:	b2db      	uxtb	r3, r3
    5f1c:	001a      	movs	r2, r3
    5f1e:	687b      	ldr	r3, [r7, #4]
    5f20:	889b      	ldrh	r3, [r3, #4]
    5f22:	4313      	orrs	r3, r2
    5f24:	64fb      	str	r3, [r7, #76]	; 0x4c
    5f26:	2349      	movs	r3, #73	; 0x49
    5f28:	18fb      	adds	r3, r7, r3
    5f2a:	2200      	movs	r2, #0
    5f2c:	701a      	strb	r2, [r3, #0]
    5f2e:	e018      	b.n	5f62 <tc_init+0x262>
    5f30:	2349      	movs	r3, #73	; 0x49
    5f32:	18fb      	adds	r3, r7, r3
    5f34:	781b      	ldrb	r3, [r3, #0]
    5f36:	687a      	ldr	r2, [r7, #4]
    5f38:	18d3      	adds	r3, r2, r3
    5f3a:	7a5b      	ldrb	r3, [r3, #9]
    5f3c:	2b00      	cmp	r3, #0
    5f3e:	d009      	beq.n	5f54 <tc_init+0x254>
    5f40:	2349      	movs	r3, #73	; 0x49
    5f42:	18fb      	adds	r3, r7, r3
    5f44:	781b      	ldrb	r3, [r3, #0]
    5f46:	2280      	movs	r2, #128	; 0x80
    5f48:	0252      	lsls	r2, r2, #9
    5f4a:	409a      	lsls	r2, r3
    5f4c:	0013      	movs	r3, r2
    5f4e:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
    5f50:	4313      	orrs	r3, r2
    5f52:	64fb      	str	r3, [r7, #76]	; 0x4c
    5f54:	2349      	movs	r3, #73	; 0x49
    5f56:	18fb      	adds	r3, r7, r3
    5f58:	781a      	ldrb	r2, [r3, #0]
    5f5a:	2349      	movs	r3, #73	; 0x49
    5f5c:	18fb      	adds	r3, r7, r3
    5f5e:	3201      	adds	r2, #1
    5f60:	701a      	strb	r2, [r3, #0]
    5f62:	2349      	movs	r3, #73	; 0x49
    5f64:	18fb      	adds	r3, r7, r3
    5f66:	781b      	ldrb	r3, [r3, #0]
    5f68:	2b01      	cmp	r3, #1
    5f6a:	d9e1      	bls.n	5f30 <tc_init+0x230>
    5f6c:	2348      	movs	r3, #72	; 0x48
    5f6e:	18fb      	adds	r3, r7, r3
    5f70:	2200      	movs	r2, #0
    5f72:	701a      	strb	r2, [r3, #0]
    5f74:	e018      	b.n	5fa8 <tc_init+0x2a8>
    5f76:	2348      	movs	r3, #72	; 0x48
    5f78:	18fb      	adds	r3, r7, r3
    5f7a:	781b      	ldrb	r3, [r3, #0]
    5f7c:	687a      	ldr	r2, [r7, #4]
    5f7e:	18d3      	adds	r3, r2, r3
    5f80:	7adb      	ldrb	r3, [r3, #11]
    5f82:	2b00      	cmp	r3, #0
    5f84:	d009      	beq.n	5f9a <tc_init+0x29a>
    5f86:	2348      	movs	r3, #72	; 0x48
    5f88:	18fb      	adds	r3, r7, r3
    5f8a:	781b      	ldrb	r3, [r3, #0]
    5f8c:	2280      	movs	r2, #128	; 0x80
    5f8e:	0352      	lsls	r2, r2, #13
    5f90:	409a      	lsls	r2, r3
    5f92:	0013      	movs	r3, r2
    5f94:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
    5f96:	4313      	orrs	r3, r2
    5f98:	64fb      	str	r3, [r7, #76]	; 0x4c
    5f9a:	2348      	movs	r3, #72	; 0x48
    5f9c:	18fb      	adds	r3, r7, r3
    5f9e:	781a      	ldrb	r2, [r3, #0]
    5fa0:	2348      	movs	r3, #72	; 0x48
    5fa2:	18fb      	adds	r3, r7, r3
    5fa4:	3201      	adds	r2, #1
    5fa6:	701a      	strb	r2, [r3, #0]
    5fa8:	2348      	movs	r3, #72	; 0x48
    5faa:	18fb      	adds	r3, r7, r3
    5fac:	781b      	ldrb	r3, [r3, #0]
    5fae:	2b01      	cmp	r3, #1
    5fb0:	d9e1      	bls.n	5f76 <tc_init+0x276>
    5fb2:	687b      	ldr	r3, [r7, #4]
    5fb4:	785b      	ldrb	r3, [r3, #1]
    5fb6:	019a      	lsls	r2, r3, #6
    5fb8:	687b      	ldr	r3, [r7, #4]
    5fba:	789b      	ldrb	r3, [r3, #2]
    5fbc:	01db      	lsls	r3, r3, #7
    5fbe:	4313      	orrs	r3, r2
    5fc0:	001a      	movs	r2, r3
    5fc2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    5fc4:	4313      	orrs	r3, r2
    5fc6:	64fb      	str	r3, [r7, #76]	; 0x4c
    5fc8:	46c0      	nop			; (mov r8, r8)
    5fca:	68fb      	ldr	r3, [r7, #12]
    5fcc:	0018      	movs	r0, r3
    5fce:	4b35      	ldr	r3, [pc, #212]	; (60a4 <tc_init+0x3a4>)
    5fd0:	4798      	blx	r3
    5fd2:	1e03      	subs	r3, r0, #0
    5fd4:	d1f9      	bne.n	5fca <tc_init+0x2ca>
    5fd6:	68bb      	ldr	r3, [r7, #8]
    5fd8:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
    5fda:	601a      	str	r2, [r3, #0]
    5fdc:	46c0      	nop			; (mov r8, r8)
    5fde:	68fb      	ldr	r3, [r7, #12]
    5fe0:	0018      	movs	r0, r3
    5fe2:	4b30      	ldr	r3, [pc, #192]	; (60a4 <tc_init+0x3a4>)
    5fe4:	4798      	blx	r3
    5fe6:	1e03      	subs	r3, r0, #0
    5fe8:	d1f9      	bne.n	5fde <tc_init+0x2de>
    5fea:	687b      	ldr	r3, [r7, #4]
    5fec:	799a      	ldrb	r2, [r3, #6]
    5fee:	68bb      	ldr	r3, [r7, #8]
    5ff0:	731a      	strb	r2, [r3, #12]
    5ff2:	687b      	ldr	r3, [r7, #4]
    5ff4:	7b5b      	ldrb	r3, [r3, #13]
    5ff6:	2b00      	cmp	r3, #0
    5ff8:	d003      	beq.n	6002 <tc_init+0x302>
    5ffa:	234b      	movs	r3, #75	; 0x4b
    5ffc:	18fb      	adds	r3, r7, r3
    5ffe:	2204      	movs	r2, #4
    6000:	701a      	strb	r2, [r3, #0]
    6002:	687b      	ldr	r3, [r7, #4]
    6004:	7b9b      	ldrb	r3, [r3, #14]
    6006:	2b00      	cmp	r3, #0
    6008:	d007      	beq.n	601a <tc_init+0x31a>
    600a:	234b      	movs	r3, #75	; 0x4b
    600c:	18fb      	adds	r3, r7, r3
    600e:	224b      	movs	r2, #75	; 0x4b
    6010:	18ba      	adds	r2, r7, r2
    6012:	7812      	ldrb	r2, [r2, #0]
    6014:	2101      	movs	r1, #1
    6016:	430a      	orrs	r2, r1
    6018:	701a      	strb	r2, [r3, #0]
    601a:	46c0      	nop			; (mov r8, r8)
    601c:	68fb      	ldr	r3, [r7, #12]
    601e:	0018      	movs	r0, r3
    6020:	4b20      	ldr	r3, [pc, #128]	; (60a4 <tc_init+0x3a4>)
    6022:	4798      	blx	r3
    6024:	1e03      	subs	r3, r0, #0
    6026:	d1f9      	bne.n	601c <tc_init+0x31c>
    6028:	68bb      	ldr	r3, [r7, #8]
    602a:	22ff      	movs	r2, #255	; 0xff
    602c:	711a      	strb	r2, [r3, #4]
    602e:	234b      	movs	r3, #75	; 0x4b
    6030:	18fb      	adds	r3, r7, r3
    6032:	781b      	ldrb	r3, [r3, #0]
    6034:	2b00      	cmp	r3, #0
    6036:	d00b      	beq.n	6050 <tc_init+0x350>
    6038:	46c0      	nop			; (mov r8, r8)
    603a:	68fb      	ldr	r3, [r7, #12]
    603c:	0018      	movs	r0, r3
    603e:	4b19      	ldr	r3, [pc, #100]	; (60a4 <tc_init+0x3a4>)
    6040:	4798      	blx	r3
    6042:	1e03      	subs	r3, r0, #0
    6044:	d1f9      	bne.n	603a <tc_init+0x33a>
    6046:	68bb      	ldr	r3, [r7, #8]
    6048:	224b      	movs	r2, #75	; 0x4b
    604a:	18ba      	adds	r2, r7, r2
    604c:	7812      	ldrb	r2, [r2, #0]
    604e:	715a      	strb	r2, [r3, #5]
    6050:	687b      	ldr	r3, [r7, #4]
    6052:	7a1a      	ldrb	r2, [r3, #8]
    6054:	68bb      	ldr	r3, [r7, #8]
    6056:	735a      	strb	r2, [r3, #13]
    6058:	46c0      	nop			; (mov r8, r8)
    605a:	68fb      	ldr	r3, [r7, #12]
    605c:	0018      	movs	r0, r3
    605e:	4b11      	ldr	r3, [pc, #68]	; (60a4 <tc_init+0x3a4>)
    6060:	4798      	blx	r3
    6062:	1e03      	subs	r3, r0, #0
    6064:	d1f9      	bne.n	605a <tc_init+0x35a>
    6066:	68fb      	ldr	r3, [r7, #12]
    6068:	791b      	ldrb	r3, [r3, #4]
    606a:	2b04      	cmp	r3, #4
    606c:	d01c      	beq.n	60a8 <tc_init+0x3a8>
    606e:	2b08      	cmp	r3, #8
    6070:	d100      	bne.n	6074 <tc_init+0x374>
    6072:	e06e      	b.n	6152 <tc_init+0x452>
    6074:	2b00      	cmp	r3, #0
    6076:	d049      	beq.n	610c <tc_init+0x40c>
    6078:	e08e      	b.n	6198 <tc_init+0x498>
    607a:	46c0      	nop			; (mov r8, r8)
    607c:	00005cb5 	.word	0x00005cb5
    6080:	0001cc18 	.word	0x0001cc18
    6084:	0001cc20 	.word	0x0001cc20
    6088:	20000d34 	.word	0x20000d34
    608c:	00005c29 	.word	0x00005c29
    6090:	0000597d 	.word	0x0000597d
    6094:	00005bad 	.word	0x00005bad
    6098:	00005b95 	.word	0x00005b95
    609c:	000056c9 	.word	0x000056c9
    60a0:	00005709 	.word	0x00005709
    60a4:	00005c51 	.word	0x00005c51
    60a8:	46c0      	nop			; (mov r8, r8)
    60aa:	68fb      	ldr	r3, [r7, #12]
    60ac:	0018      	movs	r0, r3
    60ae:	4b3d      	ldr	r3, [pc, #244]	; (61a4 <tc_init+0x4a4>)
    60b0:	4798      	blx	r3
    60b2:	1e03      	subs	r3, r0, #0
    60b4:	d1f9      	bne.n	60aa <tc_init+0x3aa>
    60b6:	687b      	ldr	r3, [r7, #4]
    60b8:	2228      	movs	r2, #40	; 0x28
    60ba:	5c9a      	ldrb	r2, [r3, r2]
    60bc:	68bb      	ldr	r3, [r7, #8]
    60be:	751a      	strb	r2, [r3, #20]
    60c0:	46c0      	nop			; (mov r8, r8)
    60c2:	68fb      	ldr	r3, [r7, #12]
    60c4:	0018      	movs	r0, r3
    60c6:	4b37      	ldr	r3, [pc, #220]	; (61a4 <tc_init+0x4a4>)
    60c8:	4798      	blx	r3
    60ca:	1e03      	subs	r3, r0, #0
    60cc:	d1f9      	bne.n	60c2 <tc_init+0x3c2>
    60ce:	687b      	ldr	r3, [r7, #4]
    60d0:	2229      	movs	r2, #41	; 0x29
    60d2:	5c9a      	ldrb	r2, [r3, r2]
    60d4:	68bb      	ldr	r3, [r7, #8]
    60d6:	76da      	strb	r2, [r3, #27]
    60d8:	46c0      	nop			; (mov r8, r8)
    60da:	68fb      	ldr	r3, [r7, #12]
    60dc:	0018      	movs	r0, r3
    60de:	4b31      	ldr	r3, [pc, #196]	; (61a4 <tc_init+0x4a4>)
    60e0:	4798      	blx	r3
    60e2:	1e03      	subs	r3, r0, #0
    60e4:	d1f9      	bne.n	60da <tc_init+0x3da>
    60e6:	687b      	ldr	r3, [r7, #4]
    60e8:	222a      	movs	r2, #42	; 0x2a
    60ea:	5c9a      	ldrb	r2, [r3, r2]
    60ec:	68bb      	ldr	r3, [r7, #8]
    60ee:	771a      	strb	r2, [r3, #28]
    60f0:	46c0      	nop			; (mov r8, r8)
    60f2:	68fb      	ldr	r3, [r7, #12]
    60f4:	0018      	movs	r0, r3
    60f6:	4b2b      	ldr	r3, [pc, #172]	; (61a4 <tc_init+0x4a4>)
    60f8:	4798      	blx	r3
    60fa:	1e03      	subs	r3, r0, #0
    60fc:	d1f9      	bne.n	60f2 <tc_init+0x3f2>
    60fe:	687b      	ldr	r3, [r7, #4]
    6100:	222b      	movs	r2, #43	; 0x2b
    6102:	5c9a      	ldrb	r2, [r3, r2]
    6104:	68bb      	ldr	r3, [r7, #8]
    6106:	775a      	strb	r2, [r3, #29]
    6108:	2300      	movs	r3, #0
    610a:	e046      	b.n	619a <tc_init+0x49a>
    610c:	46c0      	nop			; (mov r8, r8)
    610e:	68fb      	ldr	r3, [r7, #12]
    6110:	0018      	movs	r0, r3
    6112:	4b24      	ldr	r3, [pc, #144]	; (61a4 <tc_init+0x4a4>)
    6114:	4798      	blx	r3
    6116:	1e03      	subs	r3, r0, #0
    6118:	d1f9      	bne.n	610e <tc_init+0x40e>
    611a:	687b      	ldr	r3, [r7, #4]
    611c:	8d1a      	ldrh	r2, [r3, #40]	; 0x28
    611e:	68bb      	ldr	r3, [r7, #8]
    6120:	829a      	strh	r2, [r3, #20]
    6122:	46c0      	nop			; (mov r8, r8)
    6124:	68fb      	ldr	r3, [r7, #12]
    6126:	0018      	movs	r0, r3
    6128:	4b1e      	ldr	r3, [pc, #120]	; (61a4 <tc_init+0x4a4>)
    612a:	4798      	blx	r3
    612c:	1e03      	subs	r3, r0, #0
    612e:	d1f9      	bne.n	6124 <tc_init+0x424>
    6130:	687b      	ldr	r3, [r7, #4]
    6132:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
    6134:	68bb      	ldr	r3, [r7, #8]
    6136:	839a      	strh	r2, [r3, #28]
    6138:	46c0      	nop			; (mov r8, r8)
    613a:	68fb      	ldr	r3, [r7, #12]
    613c:	0018      	movs	r0, r3
    613e:	4b19      	ldr	r3, [pc, #100]	; (61a4 <tc_init+0x4a4>)
    6140:	4798      	blx	r3
    6142:	1e03      	subs	r3, r0, #0
    6144:	d1f9      	bne.n	613a <tc_init+0x43a>
    6146:	687b      	ldr	r3, [r7, #4]
    6148:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
    614a:	68bb      	ldr	r3, [r7, #8]
    614c:	83da      	strh	r2, [r3, #30]
    614e:	2300      	movs	r3, #0
    6150:	e023      	b.n	619a <tc_init+0x49a>
    6152:	46c0      	nop			; (mov r8, r8)
    6154:	68fb      	ldr	r3, [r7, #12]
    6156:	0018      	movs	r0, r3
    6158:	4b12      	ldr	r3, [pc, #72]	; (61a4 <tc_init+0x4a4>)
    615a:	4798      	blx	r3
    615c:	1e03      	subs	r3, r0, #0
    615e:	d1f9      	bne.n	6154 <tc_init+0x454>
    6160:	687b      	ldr	r3, [r7, #4]
    6162:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    6164:	68bb      	ldr	r3, [r7, #8]
    6166:	615a      	str	r2, [r3, #20]
    6168:	46c0      	nop			; (mov r8, r8)
    616a:	68fb      	ldr	r3, [r7, #12]
    616c:	0018      	movs	r0, r3
    616e:	4b0d      	ldr	r3, [pc, #52]	; (61a4 <tc_init+0x4a4>)
    6170:	4798      	blx	r3
    6172:	1e03      	subs	r3, r0, #0
    6174:	d1f9      	bne.n	616a <tc_init+0x46a>
    6176:	687b      	ldr	r3, [r7, #4]
    6178:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    617a:	68bb      	ldr	r3, [r7, #8]
    617c:	61da      	str	r2, [r3, #28]
    617e:	46c0      	nop			; (mov r8, r8)
    6180:	68fb      	ldr	r3, [r7, #12]
    6182:	0018      	movs	r0, r3
    6184:	4b07      	ldr	r3, [pc, #28]	; (61a4 <tc_init+0x4a4>)
    6186:	4798      	blx	r3
    6188:	1e03      	subs	r3, r0, #0
    618a:	d1f9      	bne.n	6180 <tc_init+0x480>
    618c:	687b      	ldr	r3, [r7, #4]
    618e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    6190:	68bb      	ldr	r3, [r7, #8]
    6192:	621a      	str	r2, [r3, #32]
    6194:	2300      	movs	r3, #0
    6196:	e000      	b.n	619a <tc_init+0x49a>
    6198:	2317      	movs	r3, #23
    619a:	0018      	movs	r0, r3
    619c:	46bd      	mov	sp, r7
    619e:	b015      	add	sp, #84	; 0x54
    61a0:	bd90      	pop	{r4, r7, pc}
    61a2:	46c0      	nop			; (mov r8, r8)
    61a4:	00005c51 	.word	0x00005c51

000061a8 <tc_get_count_value>:
    61a8:	b580      	push	{r7, lr}
    61aa:	b084      	sub	sp, #16
    61ac:	af00      	add	r7, sp, #0
    61ae:	6078      	str	r0, [r7, #4]
    61b0:	687b      	ldr	r3, [r7, #4]
    61b2:	0018      	movs	r0, r3
    61b4:	4b12      	ldr	r3, [pc, #72]	; (6200 <tc_get_count_value+0x58>)
    61b6:	4798      	blx	r3
    61b8:	687b      	ldr	r3, [r7, #4]
    61ba:	681b      	ldr	r3, [r3, #0]
    61bc:	60fb      	str	r3, [r7, #12]
    61be:	46c0      	nop			; (mov r8, r8)
    61c0:	687b      	ldr	r3, [r7, #4]
    61c2:	0018      	movs	r0, r3
    61c4:	4b0f      	ldr	r3, [pc, #60]	; (6204 <tc_get_count_value+0x5c>)
    61c6:	4798      	blx	r3
    61c8:	1e03      	subs	r3, r0, #0
    61ca:	d1f9      	bne.n	61c0 <tc_get_count_value+0x18>
    61cc:	687b      	ldr	r3, [r7, #4]
    61ce:	791b      	ldrb	r3, [r3, #4]
    61d0:	2b04      	cmp	r3, #4
    61d2:	d004      	beq.n	61de <tc_get_count_value+0x36>
    61d4:	2b08      	cmp	r3, #8
    61d6:	d00a      	beq.n	61ee <tc_get_count_value+0x46>
    61d8:	2b00      	cmp	r3, #0
    61da:	d004      	beq.n	61e6 <tc_get_count_value+0x3e>
    61dc:	e00a      	b.n	61f4 <tc_get_count_value+0x4c>
    61de:	68fb      	ldr	r3, [r7, #12]
    61e0:	7d1b      	ldrb	r3, [r3, #20]
    61e2:	b2db      	uxtb	r3, r3
    61e4:	e007      	b.n	61f6 <tc_get_count_value+0x4e>
    61e6:	68fb      	ldr	r3, [r7, #12]
    61e8:	8a9b      	ldrh	r3, [r3, #20]
    61ea:	b29b      	uxth	r3, r3
    61ec:	e003      	b.n	61f6 <tc_get_count_value+0x4e>
    61ee:	68fb      	ldr	r3, [r7, #12]
    61f0:	695b      	ldr	r3, [r3, #20]
    61f2:	e000      	b.n	61f6 <tc_get_count_value+0x4e>
    61f4:	2300      	movs	r3, #0
    61f6:	0018      	movs	r0, r3
    61f8:	46bd      	mov	sp, r7
    61fa:	b004      	add	sp, #16
    61fc:	bd80      	pop	{r7, pc}
    61fe:	46c0      	nop			; (mov r8, r8)
    6200:	00005c71 	.word	0x00005c71
    6204:	00005c51 	.word	0x00005c51

00006208 <tc_set_compare_value>:
    6208:	b580      	push	{r7, lr}
    620a:	b086      	sub	sp, #24
    620c:	af00      	add	r7, sp, #0
    620e:	60f8      	str	r0, [r7, #12]
    6210:	607a      	str	r2, [r7, #4]
    6212:	230b      	movs	r3, #11
    6214:	18fb      	adds	r3, r7, r3
    6216:	1c0a      	adds	r2, r1, #0
    6218:	701a      	strb	r2, [r3, #0]
    621a:	68fb      	ldr	r3, [r7, #12]
    621c:	681b      	ldr	r3, [r3, #0]
    621e:	617b      	str	r3, [r7, #20]
    6220:	46c0      	nop			; (mov r8, r8)
    6222:	68fb      	ldr	r3, [r7, #12]
    6224:	0018      	movs	r0, r3
    6226:	4b38      	ldr	r3, [pc, #224]	; (6308 <tc_set_compare_value+0x100>)
    6228:	4798      	blx	r3
    622a:	1e03      	subs	r3, r0, #0
    622c:	d1f9      	bne.n	6222 <tc_set_compare_value+0x1a>
    622e:	68fb      	ldr	r3, [r7, #12]
    6230:	791b      	ldrb	r3, [r3, #4]
    6232:	2b04      	cmp	r3, #4
    6234:	d004      	beq.n	6240 <tc_set_compare_value+0x38>
    6236:	2b08      	cmp	r3, #8
    6238:	d043      	beq.n	62c2 <tc_set_compare_value+0xba>
    623a:	2b00      	cmp	r3, #0
    623c:	d020      	beq.n	6280 <tc_set_compare_value+0x78>
    623e:	e05e      	b.n	62fe <tc_set_compare_value+0xf6>
    6240:	230b      	movs	r3, #11
    6242:	18fb      	adds	r3, r7, r3
    6244:	781b      	ldrb	r3, [r3, #0]
    6246:	2b01      	cmp	r3, #1
    6248:	d81a      	bhi.n	6280 <tc_set_compare_value+0x78>
    624a:	68fb      	ldr	r3, [r7, #12]
    624c:	7e9b      	ldrb	r3, [r3, #26]
    624e:	2b00      	cmp	r3, #0
    6250:	d00b      	beq.n	626a <tc_set_compare_value+0x62>
    6252:	230b      	movs	r3, #11
    6254:	18fb      	adds	r3, r7, r3
    6256:	781b      	ldrb	r3, [r3, #0]
    6258:	687a      	ldr	r2, [r7, #4]
    625a:	b2d0      	uxtb	r0, r2
    625c:	697a      	ldr	r2, [r7, #20]
    625e:	2130      	movs	r1, #48	; 0x30
    6260:	18d3      	adds	r3, r2, r3
    6262:	185b      	adds	r3, r3, r1
    6264:	1c02      	adds	r2, r0, #0
    6266:	701a      	strb	r2, [r3, #0]
    6268:	e008      	b.n	627c <tc_set_compare_value+0x74>
    626a:	230b      	movs	r3, #11
    626c:	18fb      	adds	r3, r7, r3
    626e:	781b      	ldrb	r3, [r3, #0]
    6270:	687a      	ldr	r2, [r7, #4]
    6272:	b2d1      	uxtb	r1, r2
    6274:	697a      	ldr	r2, [r7, #20]
    6276:	18d3      	adds	r3, r2, r3
    6278:	1c0a      	adds	r2, r1, #0
    627a:	771a      	strb	r2, [r3, #28]
    627c:	2300      	movs	r3, #0
    627e:	e03f      	b.n	6300 <tc_set_compare_value+0xf8>
    6280:	230b      	movs	r3, #11
    6282:	18fb      	adds	r3, r7, r3
    6284:	781b      	ldrb	r3, [r3, #0]
    6286:	2b01      	cmp	r3, #1
    6288:	d81b      	bhi.n	62c2 <tc_set_compare_value+0xba>
    628a:	68fb      	ldr	r3, [r7, #12]
    628c:	7e9b      	ldrb	r3, [r3, #26]
    628e:	2b00      	cmp	r3, #0
    6290:	d009      	beq.n	62a6 <tc_set_compare_value+0x9e>
    6292:	230b      	movs	r3, #11
    6294:	18fb      	adds	r3, r7, r3
    6296:	781a      	ldrb	r2, [r3, #0]
    6298:	687b      	ldr	r3, [r7, #4]
    629a:	b299      	uxth	r1, r3
    629c:	697b      	ldr	r3, [r7, #20]
    629e:	3218      	adds	r2, #24
    62a0:	0052      	lsls	r2, r2, #1
    62a2:	52d1      	strh	r1, [r2, r3]
    62a4:	e00b      	b.n	62be <tc_set_compare_value+0xb6>
    62a6:	230b      	movs	r3, #11
    62a8:	18fb      	adds	r3, r7, r3
    62aa:	781b      	ldrb	r3, [r3, #0]
    62ac:	687a      	ldr	r2, [r7, #4]
    62ae:	b291      	uxth	r1, r2
    62b0:	697a      	ldr	r2, [r7, #20]
    62b2:	330c      	adds	r3, #12
    62b4:	005b      	lsls	r3, r3, #1
    62b6:	18d3      	adds	r3, r2, r3
    62b8:	3304      	adds	r3, #4
    62ba:	1c0a      	adds	r2, r1, #0
    62bc:	801a      	strh	r2, [r3, #0]
    62be:	2300      	movs	r3, #0
    62c0:	e01e      	b.n	6300 <tc_set_compare_value+0xf8>
    62c2:	230b      	movs	r3, #11
    62c4:	18fb      	adds	r3, r7, r3
    62c6:	781b      	ldrb	r3, [r3, #0]
    62c8:	2b01      	cmp	r3, #1
    62ca:	d818      	bhi.n	62fe <tc_set_compare_value+0xf6>
    62cc:	68fb      	ldr	r3, [r7, #12]
    62ce:	7e9b      	ldrb	r3, [r3, #26]
    62d0:	2b00      	cmp	r3, #0
    62d2:	d008      	beq.n	62e6 <tc_set_compare_value+0xde>
    62d4:	230b      	movs	r3, #11
    62d6:	18fb      	adds	r3, r7, r3
    62d8:	781a      	ldrb	r2, [r3, #0]
    62da:	697b      	ldr	r3, [r7, #20]
    62dc:	320c      	adds	r2, #12
    62de:	0092      	lsls	r2, r2, #2
    62e0:	6879      	ldr	r1, [r7, #4]
    62e2:	50d1      	str	r1, [r2, r3]
    62e4:	e009      	b.n	62fa <tc_set_compare_value+0xf2>
    62e6:	230b      	movs	r3, #11
    62e8:	18fb      	adds	r3, r7, r3
    62ea:	781b      	ldrb	r3, [r3, #0]
    62ec:	697a      	ldr	r2, [r7, #20]
    62ee:	3306      	adds	r3, #6
    62f0:	009b      	lsls	r3, r3, #2
    62f2:	18d3      	adds	r3, r2, r3
    62f4:	3304      	adds	r3, #4
    62f6:	687a      	ldr	r2, [r7, #4]
    62f8:	601a      	str	r2, [r3, #0]
    62fa:	2300      	movs	r3, #0
    62fc:	e000      	b.n	6300 <tc_set_compare_value+0xf8>
    62fe:	2317      	movs	r3, #23
    6300:	0018      	movs	r0, r3
    6302:	46bd      	mov	sp, r7
    6304:	b006      	add	sp, #24
    6306:	bd80      	pop	{r7, pc}
    6308:	00005c51 	.word	0x00005c51

0000630c <Reset_Handler>:
    630c:	b580      	push	{r7, lr}
    630e:	b082      	sub	sp, #8
    6310:	af00      	add	r7, sp, #0
    6312:	4b19      	ldr	r3, [pc, #100]	; (6378 <Reset_Handler+0x6c>)
    6314:	607b      	str	r3, [r7, #4]
    6316:	4b19      	ldr	r3, [pc, #100]	; (637c <Reset_Handler+0x70>)
    6318:	603b      	str	r3, [r7, #0]
    631a:	687a      	ldr	r2, [r7, #4]
    631c:	683b      	ldr	r3, [r7, #0]
    631e:	429a      	cmp	r2, r3
    6320:	d00c      	beq.n	633c <Reset_Handler+0x30>
    6322:	e007      	b.n	6334 <Reset_Handler+0x28>
    6324:	683b      	ldr	r3, [r7, #0]
    6326:	1d1a      	adds	r2, r3, #4
    6328:	603a      	str	r2, [r7, #0]
    632a:	687a      	ldr	r2, [r7, #4]
    632c:	1d11      	adds	r1, r2, #4
    632e:	6079      	str	r1, [r7, #4]
    6330:	6812      	ldr	r2, [r2, #0]
    6332:	601a      	str	r2, [r3, #0]
    6334:	683a      	ldr	r2, [r7, #0]
    6336:	4b12      	ldr	r3, [pc, #72]	; (6380 <Reset_Handler+0x74>)
    6338:	429a      	cmp	r2, r3
    633a:	d3f3      	bcc.n	6324 <Reset_Handler+0x18>
    633c:	4b11      	ldr	r3, [pc, #68]	; (6384 <Reset_Handler+0x78>)
    633e:	603b      	str	r3, [r7, #0]
    6340:	e004      	b.n	634c <Reset_Handler+0x40>
    6342:	683b      	ldr	r3, [r7, #0]
    6344:	1d1a      	adds	r2, r3, #4
    6346:	603a      	str	r2, [r7, #0]
    6348:	2200      	movs	r2, #0
    634a:	601a      	str	r2, [r3, #0]
    634c:	683a      	ldr	r2, [r7, #0]
    634e:	4b0e      	ldr	r3, [pc, #56]	; (6388 <Reset_Handler+0x7c>)
    6350:	429a      	cmp	r2, r3
    6352:	d3f6      	bcc.n	6342 <Reset_Handler+0x36>
    6354:	4b0d      	ldr	r3, [pc, #52]	; (638c <Reset_Handler+0x80>)
    6356:	607b      	str	r3, [r7, #4]
    6358:	4b0d      	ldr	r3, [pc, #52]	; (6390 <Reset_Handler+0x84>)
    635a:	687a      	ldr	r2, [r7, #4]
    635c:	21ff      	movs	r1, #255	; 0xff
    635e:	438a      	bics	r2, r1
    6360:	609a      	str	r2, [r3, #8]
    6362:	4a0c      	ldr	r2, [pc, #48]	; (6394 <Reset_Handler+0x88>)
    6364:	6853      	ldr	r3, [r2, #4]
    6366:	2180      	movs	r1, #128	; 0x80
    6368:	430b      	orrs	r3, r1
    636a:	6053      	str	r3, [r2, #4]
    636c:	4b0a      	ldr	r3, [pc, #40]	; (6398 <Reset_Handler+0x8c>)
    636e:	4798      	blx	r3
    6370:	4b0a      	ldr	r3, [pc, #40]	; (639c <Reset_Handler+0x90>)
    6372:	4798      	blx	r3
    6374:	e7fe      	b.n	6374 <Reset_Handler+0x68>
    6376:	46c0      	nop			; (mov r8, r8)
    6378:	0001e5a4 	.word	0x0001e5a4
    637c:	20000000 	.word	0x20000000
    6380:	200009e8 	.word	0x200009e8
    6384:	200009e8 	.word	0x200009e8
    6388:	20001c68 	.word	0x20001c68
    638c:	00000000 	.word	0x00000000
    6390:	e000ed00 	.word	0xe000ed00
    6394:	41004000 	.word	0x41004000
    6398:	000176cd 	.word	0x000176cd
    639c:	0001467d 	.word	0x0001467d

000063a0 <Dummy_Handler>:
    63a0:	b580      	push	{r7, lr}
    63a2:	af00      	add	r7, sp, #0
    63a4:	e7fe      	b.n	63a4 <Dummy_Handler+0x4>
	...

000063a8 <_read>:
    63a8:	b580      	push	{r7, lr}
    63aa:	b086      	sub	sp, #24
    63ac:	af00      	add	r7, sp, #0
    63ae:	60f8      	str	r0, [r7, #12]
    63b0:	60b9      	str	r1, [r7, #8]
    63b2:	607a      	str	r2, [r7, #4]
    63b4:	2300      	movs	r3, #0
    63b6:	617b      	str	r3, [r7, #20]
    63b8:	68fb      	ldr	r3, [r7, #12]
    63ba:	2b00      	cmp	r3, #0
    63bc:	d012      	beq.n	63e4 <_read+0x3c>
    63be:	2301      	movs	r3, #1
    63c0:	425b      	negs	r3, r3
    63c2:	e013      	b.n	63ec <_read+0x44>
    63c4:	4b0b      	ldr	r3, [pc, #44]	; (63f4 <_read+0x4c>)
    63c6:	681a      	ldr	r2, [r3, #0]
    63c8:	4b0b      	ldr	r3, [pc, #44]	; (63f8 <_read+0x50>)
    63ca:	681b      	ldr	r3, [r3, #0]
    63cc:	68b9      	ldr	r1, [r7, #8]
    63ce:	0018      	movs	r0, r3
    63d0:	4790      	blx	r2
    63d2:	68bb      	ldr	r3, [r7, #8]
    63d4:	3301      	adds	r3, #1
    63d6:	60bb      	str	r3, [r7, #8]
    63d8:	697b      	ldr	r3, [r7, #20]
    63da:	3301      	adds	r3, #1
    63dc:	617b      	str	r3, [r7, #20]
    63de:	687b      	ldr	r3, [r7, #4]
    63e0:	3b01      	subs	r3, #1
    63e2:	607b      	str	r3, [r7, #4]
    63e4:	687b      	ldr	r3, [r7, #4]
    63e6:	2b00      	cmp	r3, #0
    63e8:	dcec      	bgt.n	63c4 <_read+0x1c>
    63ea:	697b      	ldr	r3, [r7, #20]
    63ec:	0018      	movs	r0, r3
    63ee:	46bd      	mov	sp, r7
    63f0:	b006      	add	sp, #24
    63f2:	bd80      	pop	{r7, pc}
    63f4:	20000d48 	.word	0x20000d48
    63f8:	20000d50 	.word	0x20000d50

000063fc <_write>:
    63fc:	b580      	push	{r7, lr}
    63fe:	b086      	sub	sp, #24
    6400:	af00      	add	r7, sp, #0
    6402:	60f8      	str	r0, [r7, #12]
    6404:	60b9      	str	r1, [r7, #8]
    6406:	607a      	str	r2, [r7, #4]
    6408:	2300      	movs	r3, #0
    640a:	617b      	str	r3, [r7, #20]
    640c:	68fb      	ldr	r3, [r7, #12]
    640e:	2b01      	cmp	r3, #1
    6410:	d01d      	beq.n	644e <_write+0x52>
    6412:	68fb      	ldr	r3, [r7, #12]
    6414:	2b02      	cmp	r3, #2
    6416:	d01a      	beq.n	644e <_write+0x52>
    6418:	68fb      	ldr	r3, [r7, #12]
    641a:	2b03      	cmp	r3, #3
    641c:	d017      	beq.n	644e <_write+0x52>
    641e:	2301      	movs	r3, #1
    6420:	425b      	negs	r3, r3
    6422:	e018      	b.n	6456 <_write+0x5a>
    6424:	4b0e      	ldr	r3, [pc, #56]	; (6460 <_write+0x64>)
    6426:	681a      	ldr	r2, [r3, #0]
    6428:	4b0e      	ldr	r3, [pc, #56]	; (6464 <_write+0x68>)
    642a:	6818      	ldr	r0, [r3, #0]
    642c:	68bb      	ldr	r3, [r7, #8]
    642e:	1c59      	adds	r1, r3, #1
    6430:	60b9      	str	r1, [r7, #8]
    6432:	781b      	ldrb	r3, [r3, #0]
    6434:	0019      	movs	r1, r3
    6436:	4790      	blx	r2
    6438:	1e03      	subs	r3, r0, #0
    643a:	da02      	bge.n	6442 <_write+0x46>
    643c:	2301      	movs	r3, #1
    643e:	425b      	negs	r3, r3
    6440:	e009      	b.n	6456 <_write+0x5a>
    6442:	697b      	ldr	r3, [r7, #20]
    6444:	3301      	adds	r3, #1
    6446:	617b      	str	r3, [r7, #20]
    6448:	687b      	ldr	r3, [r7, #4]
    644a:	3b01      	subs	r3, #1
    644c:	607b      	str	r3, [r7, #4]
    644e:	687b      	ldr	r3, [r7, #4]
    6450:	2b00      	cmp	r3, #0
    6452:	d1e7      	bne.n	6424 <_write+0x28>
    6454:	697b      	ldr	r3, [r7, #20]
    6456:	0018      	movs	r0, r3
    6458:	46bd      	mov	sp, r7
    645a:	b006      	add	sp, #24
    645c:	bd80      	pop	{r7, pc}
    645e:	46c0      	nop			; (mov r8, r8)
    6460:	20000d4c 	.word	0x20000d4c
    6464:	20000d50 	.word	0x20000d50

00006468 <_sbrk>:
    6468:	b580      	push	{r7, lr}
    646a:	b084      	sub	sp, #16
    646c:	af00      	add	r7, sp, #0
    646e:	6078      	str	r0, [r7, #4]
    6470:	4b0a      	ldr	r3, [pc, #40]	; (649c <_sbrk+0x34>)
    6472:	681b      	ldr	r3, [r3, #0]
    6474:	2b00      	cmp	r3, #0
    6476:	d102      	bne.n	647e <_sbrk+0x16>
    6478:	4b08      	ldr	r3, [pc, #32]	; (649c <_sbrk+0x34>)
    647a:	4a09      	ldr	r2, [pc, #36]	; (64a0 <_sbrk+0x38>)
    647c:	601a      	str	r2, [r3, #0]
    647e:	4b07      	ldr	r3, [pc, #28]	; (649c <_sbrk+0x34>)
    6480:	681b      	ldr	r3, [r3, #0]
    6482:	60fb      	str	r3, [r7, #12]
    6484:	4b05      	ldr	r3, [pc, #20]	; (649c <_sbrk+0x34>)
    6486:	681a      	ldr	r2, [r3, #0]
    6488:	687b      	ldr	r3, [r7, #4]
    648a:	18d2      	adds	r2, r2, r3
    648c:	4b03      	ldr	r3, [pc, #12]	; (649c <_sbrk+0x34>)
    648e:	601a      	str	r2, [r3, #0]
    6490:	68fb      	ldr	r3, [r7, #12]
    6492:	0018      	movs	r0, r3
    6494:	46bd      	mov	sp, r7
    6496:	b004      	add	sp, #16
    6498:	bd80      	pop	{r7, pc}
    649a:	46c0      	nop			; (mov r8, r8)
    649c:	20000a48 	.word	0x20000a48
    64a0:	20003c68 	.word	0x20003c68

000064a4 <_close>:
    64a4:	b580      	push	{r7, lr}
    64a6:	b082      	sub	sp, #8
    64a8:	af00      	add	r7, sp, #0
    64aa:	6078      	str	r0, [r7, #4]
    64ac:	2301      	movs	r3, #1
    64ae:	425b      	negs	r3, r3
    64b0:	0018      	movs	r0, r3
    64b2:	46bd      	mov	sp, r7
    64b4:	b002      	add	sp, #8
    64b6:	bd80      	pop	{r7, pc}

000064b8 <_fstat>:
    64b8:	b580      	push	{r7, lr}
    64ba:	b082      	sub	sp, #8
    64bc:	af00      	add	r7, sp, #0
    64be:	6078      	str	r0, [r7, #4]
    64c0:	6039      	str	r1, [r7, #0]
    64c2:	683b      	ldr	r3, [r7, #0]
    64c4:	2280      	movs	r2, #128	; 0x80
    64c6:	0192      	lsls	r2, r2, #6
    64c8:	605a      	str	r2, [r3, #4]
    64ca:	2300      	movs	r3, #0
    64cc:	0018      	movs	r0, r3
    64ce:	46bd      	mov	sp, r7
    64d0:	b002      	add	sp, #8
    64d2:	bd80      	pop	{r7, pc}

000064d4 <_isatty>:
    64d4:	b580      	push	{r7, lr}
    64d6:	b082      	sub	sp, #8
    64d8:	af00      	add	r7, sp, #0
    64da:	6078      	str	r0, [r7, #4]
    64dc:	2301      	movs	r3, #1
    64de:	0018      	movs	r0, r3
    64e0:	46bd      	mov	sp, r7
    64e2:	b002      	add	sp, #8
    64e4:	bd80      	pop	{r7, pc}

000064e6 <_lseek>:
    64e6:	b580      	push	{r7, lr}
    64e8:	b084      	sub	sp, #16
    64ea:	af00      	add	r7, sp, #0
    64ec:	60f8      	str	r0, [r7, #12]
    64ee:	60b9      	str	r1, [r7, #8]
    64f0:	607a      	str	r2, [r7, #4]
    64f2:	2300      	movs	r3, #0
    64f4:	0018      	movs	r0, r3
    64f6:	46bd      	mov	sp, r7
    64f8:	b004      	add	sp, #16
    64fa:	bd80      	pop	{r7, pc}

000064fc <system_interrupt_enable>:
    64fc:	b580      	push	{r7, lr}
    64fe:	b082      	sub	sp, #8
    6500:	af00      	add	r7, sp, #0
    6502:	0002      	movs	r2, r0
    6504:	1dfb      	adds	r3, r7, #7
    6506:	701a      	strb	r2, [r3, #0]
    6508:	4b06      	ldr	r3, [pc, #24]	; (6524 <system_interrupt_enable+0x28>)
    650a:	1dfa      	adds	r2, r7, #7
    650c:	7812      	ldrb	r2, [r2, #0]
    650e:	0011      	movs	r1, r2
    6510:	221f      	movs	r2, #31
    6512:	400a      	ands	r2, r1
    6514:	2101      	movs	r1, #1
    6516:	4091      	lsls	r1, r2
    6518:	000a      	movs	r2, r1
    651a:	601a      	str	r2, [r3, #0]
    651c:	46c0      	nop			; (mov r8, r8)
    651e:	46bd      	mov	sp, r7
    6520:	b002      	add	sp, #8
    6522:	bd80      	pop	{r7, pc}
    6524:	e000e100 	.word	0xe000e100

00006528 <system_interrupt_disable>:
    6528:	b580      	push	{r7, lr}
    652a:	b082      	sub	sp, #8
    652c:	af00      	add	r7, sp, #0
    652e:	0002      	movs	r2, r0
    6530:	1dfb      	adds	r3, r7, #7
    6532:	701a      	strb	r2, [r3, #0]
    6534:	4a07      	ldr	r2, [pc, #28]	; (6554 <system_interrupt_disable+0x2c>)
    6536:	1dfb      	adds	r3, r7, #7
    6538:	781b      	ldrb	r3, [r3, #0]
    653a:	0019      	movs	r1, r3
    653c:	231f      	movs	r3, #31
    653e:	400b      	ands	r3, r1
    6540:	2101      	movs	r1, #1
    6542:	4099      	lsls	r1, r3
    6544:	000b      	movs	r3, r1
    6546:	0019      	movs	r1, r3
    6548:	2380      	movs	r3, #128	; 0x80
    654a:	50d1      	str	r1, [r2, r3]
    654c:	46c0      	nop			; (mov r8, r8)
    654e:	46bd      	mov	sp, r7
    6550:	b002      	add	sp, #8
    6552:	bd80      	pop	{r7, pc}
    6554:	e000e100 	.word	0xe000e100

00006558 <usart_is_syncing>:
    6558:	b580      	push	{r7, lr}
    655a:	b084      	sub	sp, #16
    655c:	af00      	add	r7, sp, #0
    655e:	6078      	str	r0, [r7, #4]
    6560:	687b      	ldr	r3, [r7, #4]
    6562:	681b      	ldr	r3, [r3, #0]
    6564:	60fb      	str	r3, [r7, #12]
    6566:	68fb      	ldr	r3, [r7, #12]
    6568:	69db      	ldr	r3, [r3, #28]
    656a:	1e5a      	subs	r2, r3, #1
    656c:	4193      	sbcs	r3, r2
    656e:	b2db      	uxtb	r3, r3
    6570:	0018      	movs	r0, r3
    6572:	46bd      	mov	sp, r7
    6574:	b004      	add	sp, #16
    6576:	bd80      	pop	{r7, pc}

00006578 <_usart_wait_for_sync>:
    6578:	b580      	push	{r7, lr}
    657a:	b082      	sub	sp, #8
    657c:	af00      	add	r7, sp, #0
    657e:	6078      	str	r0, [r7, #4]
    6580:	46c0      	nop			; (mov r8, r8)
    6582:	687b      	ldr	r3, [r7, #4]
    6584:	0018      	movs	r0, r3
    6586:	4b04      	ldr	r3, [pc, #16]	; (6598 <_usart_wait_for_sync+0x20>)
    6588:	4798      	blx	r3
    658a:	1e03      	subs	r3, r0, #0
    658c:	d1f9      	bne.n	6582 <_usart_wait_for_sync+0xa>
    658e:	46c0      	nop			; (mov r8, r8)
    6590:	46bd      	mov	sp, r7
    6592:	b002      	add	sp, #8
    6594:	bd80      	pop	{r7, pc}
    6596:	46c0      	nop			; (mov r8, r8)
    6598:	00006559 	.word	0x00006559

0000659c <usart_get_config_defaults>:
    659c:	b580      	push	{r7, lr}
    659e:	b082      	sub	sp, #8
    65a0:	af00      	add	r7, sp, #0
    65a2:	6078      	str	r0, [r7, #4]
    65a4:	687b      	ldr	r3, [r7, #4]
    65a6:	2280      	movs	r2, #128	; 0x80
    65a8:	05d2      	lsls	r2, r2, #23
    65aa:	601a      	str	r2, [r3, #0]
    65ac:	687b      	ldr	r3, [r7, #4]
    65ae:	2200      	movs	r2, #0
    65b0:	605a      	str	r2, [r3, #4]
    65b2:	687b      	ldr	r3, [r7, #4]
    65b4:	22ff      	movs	r2, #255	; 0xff
    65b6:	811a      	strh	r2, [r3, #8]
    65b8:	687b      	ldr	r3, [r7, #4]
    65ba:	2200      	movs	r2, #0
    65bc:	729a      	strb	r2, [r3, #10]
    65be:	687b      	ldr	r3, [r7, #4]
    65c0:	2200      	movs	r2, #0
    65c2:	72da      	strb	r2, [r3, #11]
    65c4:	687b      	ldr	r3, [r7, #4]
    65c6:	2296      	movs	r2, #150	; 0x96
    65c8:	0192      	lsls	r2, r2, #6
    65ca:	621a      	str	r2, [r3, #32]
    65cc:	687b      	ldr	r3, [r7, #4]
    65ce:	2224      	movs	r2, #36	; 0x24
    65d0:	2101      	movs	r1, #1
    65d2:	5499      	strb	r1, [r3, r2]
    65d4:	687b      	ldr	r3, [r7, #4]
    65d6:	2225      	movs	r2, #37	; 0x25
    65d8:	2101      	movs	r1, #1
    65da:	5499      	strb	r1, [r3, r2]
    65dc:	687b      	ldr	r3, [r7, #4]
    65de:	2226      	movs	r2, #38	; 0x26
    65e0:	2100      	movs	r1, #0
    65e2:	5499      	strb	r1, [r3, r2]
    65e4:	687b      	ldr	r3, [r7, #4]
    65e6:	2227      	movs	r2, #39	; 0x27
    65e8:	2100      	movs	r1, #0
    65ea:	5499      	strb	r1, [r3, r2]
    65ec:	687b      	ldr	r3, [r7, #4]
    65ee:	2200      	movs	r2, #0
    65f0:	629a      	str	r2, [r3, #40]	; 0x28
    65f2:	687b      	ldr	r3, [r7, #4]
    65f4:	2288      	movs	r2, #136	; 0x88
    65f6:	0352      	lsls	r2, r2, #13
    65f8:	60da      	str	r2, [r3, #12]
    65fa:	687b      	ldr	r3, [r7, #4]
    65fc:	222c      	movs	r2, #44	; 0x2c
    65fe:	2100      	movs	r1, #0
    6600:	5499      	strb	r1, [r3, r2]
    6602:	687b      	ldr	r3, [r7, #4]
    6604:	222d      	movs	r2, #45	; 0x2d
    6606:	2100      	movs	r1, #0
    6608:	5499      	strb	r1, [r3, r2]
    660a:	687b      	ldr	r3, [r7, #4]
    660c:	2200      	movs	r2, #0
    660e:	631a      	str	r2, [r3, #48]	; 0x30
    6610:	687b      	ldr	r3, [r7, #4]
    6612:	2200      	movs	r2, #0
    6614:	635a      	str	r2, [r3, #52]	; 0x34
    6616:	687b      	ldr	r3, [r7, #4]
    6618:	2200      	movs	r2, #0
    661a:	639a      	str	r2, [r3, #56]	; 0x38
    661c:	687b      	ldr	r3, [r7, #4]
    661e:	2200      	movs	r2, #0
    6620:	63da      	str	r2, [r3, #60]	; 0x3c
    6622:	687b      	ldr	r3, [r7, #4]
    6624:	2200      	movs	r2, #0
    6626:	615a      	str	r2, [r3, #20]
    6628:	687b      	ldr	r3, [r7, #4]
    662a:	2200      	movs	r2, #0
    662c:	821a      	strh	r2, [r3, #16]
    662e:	687b      	ldr	r3, [r7, #4]
    6630:	2200      	movs	r2, #0
    6632:	76da      	strb	r2, [r3, #27]
    6634:	687b      	ldr	r3, [r7, #4]
    6636:	2200      	movs	r2, #0
    6638:	761a      	strb	r2, [r3, #24]
    663a:	687b      	ldr	r3, [r7, #4]
    663c:	2200      	movs	r2, #0
    663e:	771a      	strb	r2, [r3, #28]
    6640:	687b      	ldr	r3, [r7, #4]
    6642:	2200      	movs	r2, #0
    6644:	765a      	strb	r2, [r3, #25]
    6646:	687b      	ldr	r3, [r7, #4]
    6648:	2213      	movs	r2, #19
    664a:	769a      	strb	r2, [r3, #26]
    664c:	687b      	ldr	r3, [r7, #4]
    664e:	2200      	movs	r2, #0
    6650:	775a      	strb	r2, [r3, #29]
    6652:	46c0      	nop			; (mov r8, r8)
    6654:	46bd      	mov	sp, r7
    6656:	b002      	add	sp, #8
    6658:	bd80      	pop	{r7, pc}
	...

0000665c <usart_enable>:
    665c:	b580      	push	{r7, lr}
    665e:	b084      	sub	sp, #16
    6660:	af00      	add	r7, sp, #0
    6662:	6078      	str	r0, [r7, #4]
    6664:	687b      	ldr	r3, [r7, #4]
    6666:	681b      	ldr	r3, [r3, #0]
    6668:	60fb      	str	r3, [r7, #12]
    666a:	687b      	ldr	r3, [r7, #4]
    666c:	681b      	ldr	r3, [r3, #0]
    666e:	0018      	movs	r0, r3
    6670:	4b09      	ldr	r3, [pc, #36]	; (6698 <usart_enable+0x3c>)
    6672:	4798      	blx	r3
    6674:	0003      	movs	r3, r0
    6676:	0018      	movs	r0, r3
    6678:	4b08      	ldr	r3, [pc, #32]	; (669c <usart_enable+0x40>)
    667a:	4798      	blx	r3
    667c:	687b      	ldr	r3, [r7, #4]
    667e:	0018      	movs	r0, r3
    6680:	4b07      	ldr	r3, [pc, #28]	; (66a0 <usart_enable+0x44>)
    6682:	4798      	blx	r3
    6684:	68fb      	ldr	r3, [r7, #12]
    6686:	681b      	ldr	r3, [r3, #0]
    6688:	2202      	movs	r2, #2
    668a:	431a      	orrs	r2, r3
    668c:	68fb      	ldr	r3, [r7, #12]
    668e:	601a      	str	r2, [r3, #0]
    6690:	46c0      	nop			; (mov r8, r8)
    6692:	46bd      	mov	sp, r7
    6694:	b004      	add	sp, #16
    6696:	bd80      	pop	{r7, pc}
    6698:	000031d5 	.word	0x000031d5
    669c:	000064fd 	.word	0x000064fd
    66a0:	00006579 	.word	0x00006579

000066a4 <usart_disable>:
    66a4:	b580      	push	{r7, lr}
    66a6:	b084      	sub	sp, #16
    66a8:	af00      	add	r7, sp, #0
    66aa:	6078      	str	r0, [r7, #4]
    66ac:	687b      	ldr	r3, [r7, #4]
    66ae:	681b      	ldr	r3, [r3, #0]
    66b0:	60fb      	str	r3, [r7, #12]
    66b2:	687b      	ldr	r3, [r7, #4]
    66b4:	681b      	ldr	r3, [r3, #0]
    66b6:	0018      	movs	r0, r3
    66b8:	4b0a      	ldr	r3, [pc, #40]	; (66e4 <usart_disable+0x40>)
    66ba:	4798      	blx	r3
    66bc:	0003      	movs	r3, r0
    66be:	0018      	movs	r0, r3
    66c0:	4b09      	ldr	r3, [pc, #36]	; (66e8 <usart_disable+0x44>)
    66c2:	4798      	blx	r3
    66c4:	687b      	ldr	r3, [r7, #4]
    66c6:	0018      	movs	r0, r3
    66c8:	4b08      	ldr	r3, [pc, #32]	; (66ec <usart_disable+0x48>)
    66ca:	4798      	blx	r3
    66cc:	68fb      	ldr	r3, [r7, #12]
    66ce:	681b      	ldr	r3, [r3, #0]
    66d0:	2202      	movs	r2, #2
    66d2:	4393      	bics	r3, r2
    66d4:	001a      	movs	r2, r3
    66d6:	68fb      	ldr	r3, [r7, #12]
    66d8:	601a      	str	r2, [r3, #0]
    66da:	46c0      	nop			; (mov r8, r8)
    66dc:	46bd      	mov	sp, r7
    66de:	b004      	add	sp, #16
    66e0:	bd80      	pop	{r7, pc}
    66e2:	46c0      	nop			; (mov r8, r8)
    66e4:	000031d5 	.word	0x000031d5
    66e8:	00006529 	.word	0x00006529
    66ec:	00006579 	.word	0x00006579

000066f0 <usart_enable_transceiver>:
    66f0:	b580      	push	{r7, lr}
    66f2:	b084      	sub	sp, #16
    66f4:	af00      	add	r7, sp, #0
    66f6:	6078      	str	r0, [r7, #4]
    66f8:	000a      	movs	r2, r1
    66fa:	1cfb      	adds	r3, r7, #3
    66fc:	701a      	strb	r2, [r3, #0]
    66fe:	687b      	ldr	r3, [r7, #4]
    6700:	681b      	ldr	r3, [r3, #0]
    6702:	60fb      	str	r3, [r7, #12]
    6704:	687b      	ldr	r3, [r7, #4]
    6706:	0018      	movs	r0, r3
    6708:	4b13      	ldr	r3, [pc, #76]	; (6758 <usart_enable_transceiver+0x68>)
    670a:	4798      	blx	r3
    670c:	1cfb      	adds	r3, r7, #3
    670e:	781b      	ldrb	r3, [r3, #0]
    6710:	2b00      	cmp	r3, #0
    6712:	d002      	beq.n	671a <usart_enable_transceiver+0x2a>
    6714:	2b01      	cmp	r3, #1
    6716:	d00b      	beq.n	6730 <usart_enable_transceiver+0x40>
    6718:	e015      	b.n	6746 <usart_enable_transceiver+0x56>
    671a:	68fb      	ldr	r3, [r7, #12]
    671c:	685b      	ldr	r3, [r3, #4]
    671e:	2280      	movs	r2, #128	; 0x80
    6720:	0292      	lsls	r2, r2, #10
    6722:	431a      	orrs	r2, r3
    6724:	68fb      	ldr	r3, [r7, #12]
    6726:	605a      	str	r2, [r3, #4]
    6728:	687b      	ldr	r3, [r7, #4]
    672a:	2201      	movs	r2, #1
    672c:	719a      	strb	r2, [r3, #6]
    672e:	e00a      	b.n	6746 <usart_enable_transceiver+0x56>
    6730:	68fb      	ldr	r3, [r7, #12]
    6732:	685b      	ldr	r3, [r3, #4]
    6734:	2280      	movs	r2, #128	; 0x80
    6736:	0252      	lsls	r2, r2, #9
    6738:	431a      	orrs	r2, r3
    673a:	68fb      	ldr	r3, [r7, #12]
    673c:	605a      	str	r2, [r3, #4]
    673e:	687b      	ldr	r3, [r7, #4]
    6740:	2201      	movs	r2, #1
    6742:	71da      	strb	r2, [r3, #7]
    6744:	46c0      	nop			; (mov r8, r8)
    6746:	687b      	ldr	r3, [r7, #4]
    6748:	0018      	movs	r0, r3
    674a:	4b03      	ldr	r3, [pc, #12]	; (6758 <usart_enable_transceiver+0x68>)
    674c:	4798      	blx	r3
    674e:	46c0      	nop			; (mov r8, r8)
    6750:	46bd      	mov	sp, r7
    6752:	b004      	add	sp, #16
    6754:	bd80      	pop	{r7, pc}
    6756:	46c0      	nop			; (mov r8, r8)
    6758:	00006579 	.word	0x00006579

0000675c <usart_serial_init>:
    675c:	b580      	push	{r7, lr}
    675e:	b084      	sub	sp, #16
    6760:	af00      	add	r7, sp, #0
    6762:	60f8      	str	r0, [r7, #12]
    6764:	60b9      	str	r1, [r7, #8]
    6766:	607a      	str	r2, [r7, #4]
    6768:	687a      	ldr	r2, [r7, #4]
    676a:	68b9      	ldr	r1, [r7, #8]
    676c:	68fb      	ldr	r3, [r7, #12]
    676e:	0018      	movs	r0, r3
    6770:	4b05      	ldr	r3, [pc, #20]	; (6788 <usart_serial_init+0x2c>)
    6772:	4798      	blx	r3
    6774:	1e03      	subs	r3, r0, #0
    6776:	d101      	bne.n	677c <usart_serial_init+0x20>
    6778:	2301      	movs	r3, #1
    677a:	e000      	b.n	677e <usart_serial_init+0x22>
    677c:	2300      	movs	r3, #0
    677e:	0018      	movs	r0, r3
    6780:	46bd      	mov	sp, r7
    6782:	b004      	add	sp, #16
    6784:	bd80      	pop	{r7, pc}
    6786:	46c0      	nop			; (mov r8, r8)
    6788:	00003fe5 	.word	0x00003fe5

0000678c <usart_serial_putchar>:
    678c:	b580      	push	{r7, lr}
    678e:	b082      	sub	sp, #8
    6790:	af00      	add	r7, sp, #0
    6792:	6078      	str	r0, [r7, #4]
    6794:	000a      	movs	r2, r1
    6796:	1cfb      	adds	r3, r7, #3
    6798:	701a      	strb	r2, [r3, #0]
    679a:	46c0      	nop			; (mov r8, r8)
    679c:	1cfb      	adds	r3, r7, #3
    679e:	781b      	ldrb	r3, [r3, #0]
    67a0:	b29a      	uxth	r2, r3
    67a2:	687b      	ldr	r3, [r7, #4]
    67a4:	0011      	movs	r1, r2
    67a6:	0018      	movs	r0, r3
    67a8:	4b04      	ldr	r3, [pc, #16]	; (67bc <usart_serial_putchar+0x30>)
    67aa:	4798      	blx	r3
    67ac:	1e03      	subs	r3, r0, #0
    67ae:	d1f5      	bne.n	679c <usart_serial_putchar+0x10>
    67b0:	2300      	movs	r3, #0
    67b2:	0018      	movs	r0, r3
    67b4:	46bd      	mov	sp, r7
    67b6:	b002      	add	sp, #8
    67b8:	bd80      	pop	{r7, pc}
    67ba:	46c0      	nop			; (mov r8, r8)
    67bc:	0000427d 	.word	0x0000427d

000067c0 <usart_serial_getchar>:
    67c0:	b580      	push	{r7, lr}
    67c2:	b084      	sub	sp, #16
    67c4:	af00      	add	r7, sp, #0
    67c6:	6078      	str	r0, [r7, #4]
    67c8:	6039      	str	r1, [r7, #0]
    67ca:	230e      	movs	r3, #14
    67cc:	18fb      	adds	r3, r7, r3
    67ce:	2200      	movs	r2, #0
    67d0:	801a      	strh	r2, [r3, #0]
    67d2:	46c0      	nop			; (mov r8, r8)
    67d4:	230e      	movs	r3, #14
    67d6:	18fa      	adds	r2, r7, r3
    67d8:	687b      	ldr	r3, [r7, #4]
    67da:	0011      	movs	r1, r2
    67dc:	0018      	movs	r0, r3
    67de:	4b07      	ldr	r3, [pc, #28]	; (67fc <usart_serial_getchar+0x3c>)
    67e0:	4798      	blx	r3
    67e2:	1e03      	subs	r3, r0, #0
    67e4:	d1f6      	bne.n	67d4 <usart_serial_getchar+0x14>
    67e6:	230e      	movs	r3, #14
    67e8:	18fb      	adds	r3, r7, r3
    67ea:	881b      	ldrh	r3, [r3, #0]
    67ec:	b2da      	uxtb	r2, r3
    67ee:	683b      	ldr	r3, [r7, #0]
    67f0:	701a      	strb	r2, [r3, #0]
    67f2:	46c0      	nop			; (mov r8, r8)
    67f4:	46bd      	mov	sp, r7
    67f6:	b004      	add	sp, #16
    67f8:	bd80      	pop	{r7, pc}
    67fa:	46c0      	nop			; (mov r8, r8)
    67fc:	000042d3 	.word	0x000042d3

00006800 <usart_serial_read_packet>:
    6800:	b580      	push	{r7, lr}
    6802:	b084      	sub	sp, #16
    6804:	af00      	add	r7, sp, #0
    6806:	60f8      	str	r0, [r7, #12]
    6808:	60b9      	str	r1, [r7, #8]
    680a:	1dbb      	adds	r3, r7, #6
    680c:	801a      	strh	r2, [r3, #0]
    680e:	1dbb      	adds	r3, r7, #6
    6810:	881a      	ldrh	r2, [r3, #0]
    6812:	68b9      	ldr	r1, [r7, #8]
    6814:	68fb      	ldr	r3, [r7, #12]
    6816:	0018      	movs	r0, r3
    6818:	4b03      	ldr	r3, [pc, #12]	; (6828 <usart_serial_read_packet+0x28>)
    681a:	4798      	blx	r3
    681c:	0003      	movs	r3, r0
    681e:	0018      	movs	r0, r3
    6820:	46bd      	mov	sp, r7
    6822:	b004      	add	sp, #16
    6824:	bd80      	pop	{r7, pc}
    6826:	46c0      	nop			; (mov r8, r8)
    6828:	000043b5 	.word	0x000043b5

0000682c <stdio_serial_init>:
    682c:	b580      	push	{r7, lr}
    682e:	b084      	sub	sp, #16
    6830:	af00      	add	r7, sp, #0
    6832:	60f8      	str	r0, [r7, #12]
    6834:	60b9      	str	r1, [r7, #8]
    6836:	607a      	str	r2, [r7, #4]
    6838:	4b10      	ldr	r3, [pc, #64]	; (687c <stdio_serial_init+0x50>)
    683a:	68fa      	ldr	r2, [r7, #12]
    683c:	601a      	str	r2, [r3, #0]
    683e:	4b10      	ldr	r3, [pc, #64]	; (6880 <stdio_serial_init+0x54>)
    6840:	4a10      	ldr	r2, [pc, #64]	; (6884 <stdio_serial_init+0x58>)
    6842:	601a      	str	r2, [r3, #0]
    6844:	4b10      	ldr	r3, [pc, #64]	; (6888 <stdio_serial_init+0x5c>)
    6846:	4a11      	ldr	r2, [pc, #68]	; (688c <stdio_serial_init+0x60>)
    6848:	601a      	str	r2, [r3, #0]
    684a:	687a      	ldr	r2, [r7, #4]
    684c:	68b9      	ldr	r1, [r7, #8]
    684e:	68fb      	ldr	r3, [r7, #12]
    6850:	0018      	movs	r0, r3
    6852:	4b0f      	ldr	r3, [pc, #60]	; (6890 <stdio_serial_init+0x64>)
    6854:	4798      	blx	r3
    6856:	4b0f      	ldr	r3, [pc, #60]	; (6894 <stdio_serial_init+0x68>)
    6858:	681b      	ldr	r3, [r3, #0]
    685a:	689b      	ldr	r3, [r3, #8]
    685c:	2100      	movs	r1, #0
    685e:	0018      	movs	r0, r3
    6860:	4b0d      	ldr	r3, [pc, #52]	; (6898 <stdio_serial_init+0x6c>)
    6862:	4798      	blx	r3
    6864:	4b0b      	ldr	r3, [pc, #44]	; (6894 <stdio_serial_init+0x68>)
    6866:	681b      	ldr	r3, [r3, #0]
    6868:	685b      	ldr	r3, [r3, #4]
    686a:	2100      	movs	r1, #0
    686c:	0018      	movs	r0, r3
    686e:	4b0a      	ldr	r3, [pc, #40]	; (6898 <stdio_serial_init+0x6c>)
    6870:	4798      	blx	r3
    6872:	46c0      	nop			; (mov r8, r8)
    6874:	46bd      	mov	sp, r7
    6876:	b004      	add	sp, #16
    6878:	bd80      	pop	{r7, pc}
    687a:	46c0      	nop			; (mov r8, r8)
    687c:	20000d50 	.word	0x20000d50
    6880:	20000d4c 	.word	0x20000d4c
    6884:	0000678d 	.word	0x0000678d
    6888:	20000d48 	.word	0x20000d48
    688c:	000067c1 	.word	0x000067c1
    6890:	0000675d 	.word	0x0000675d
    6894:	20000038 	.word	0x20000038
    6898:	0001794d 	.word	0x0001794d

0000689c <sio2host_init>:
    689c:	b590      	push	{r4, r7, lr}
    689e:	b091      	sub	sp, #68	; 0x44
    68a0:	af00      	add	r7, sp, #0
    68a2:	003b      	movs	r3, r7
    68a4:	0018      	movs	r0, r3
    68a6:	4b1f      	ldr	r3, [pc, #124]	; (6924 <sio2host_init+0x88>)
    68a8:	4798      	blx	r3
    68aa:	003b      	movs	r3, r7
    68ac:	2280      	movs	r2, #128	; 0x80
    68ae:	0352      	lsls	r2, r2, #13
    68b0:	60da      	str	r2, [r3, #12]
    68b2:	003b      	movs	r3, r7
    68b4:	4a1c      	ldr	r2, [pc, #112]	; (6928 <sio2host_init+0x8c>)
    68b6:	631a      	str	r2, [r3, #48]	; 0x30
    68b8:	003b      	movs	r3, r7
    68ba:	4a1c      	ldr	r2, [pc, #112]	; (692c <sio2host_init+0x90>)
    68bc:	635a      	str	r2, [r3, #52]	; 0x34
    68be:	003b      	movs	r3, r7
    68c0:	2201      	movs	r2, #1
    68c2:	4252      	negs	r2, r2
    68c4:	639a      	str	r2, [r3, #56]	; 0x38
    68c6:	003b      	movs	r3, r7
    68c8:	2201      	movs	r2, #1
    68ca:	4252      	negs	r2, r2
    68cc:	63da      	str	r2, [r3, #60]	; 0x3c
    68ce:	4b18      	ldr	r3, [pc, #96]	; (6930 <sio2host_init+0x94>)
    68d0:	685c      	ldr	r4, [r3, #4]
    68d2:	681b      	ldr	r3, [r3, #0]
    68d4:	001a      	movs	r2, r3
    68d6:	003b      	movs	r3, r7
    68d8:	621a      	str	r2, [r3, #32]
    68da:	003a      	movs	r2, r7
    68dc:	2384      	movs	r3, #132	; 0x84
    68de:	05d9      	lsls	r1, r3, #23
    68e0:	4b14      	ldr	r3, [pc, #80]	; (6934 <sio2host_init+0x98>)
    68e2:	0018      	movs	r0, r3
    68e4:	4b14      	ldr	r3, [pc, #80]	; (6938 <sio2host_init+0x9c>)
    68e6:	4798      	blx	r3
    68e8:	4b12      	ldr	r3, [pc, #72]	; (6934 <sio2host_init+0x98>)
    68ea:	0018      	movs	r0, r3
    68ec:	4b13      	ldr	r3, [pc, #76]	; (693c <sio2host_init+0xa0>)
    68ee:	4798      	blx	r3
    68f0:	4b10      	ldr	r3, [pc, #64]	; (6934 <sio2host_init+0x98>)
    68f2:	2101      	movs	r1, #1
    68f4:	0018      	movs	r0, r3
    68f6:	4b12      	ldr	r3, [pc, #72]	; (6940 <sio2host_init+0xa4>)
    68f8:	4798      	blx	r3
    68fa:	4b0e      	ldr	r3, [pc, #56]	; (6934 <sio2host_init+0x98>)
    68fc:	2100      	movs	r1, #0
    68fe:	0018      	movs	r0, r3
    6900:	4b0f      	ldr	r3, [pc, #60]	; (6940 <sio2host_init+0xa4>)
    6902:	4798      	blx	r3
    6904:	4b0f      	ldr	r3, [pc, #60]	; (6944 <sio2host_init+0xa8>)
    6906:	0019      	movs	r1, r3
    6908:	2000      	movs	r0, #0
    690a:	4b0f      	ldr	r3, [pc, #60]	; (6948 <sio2host_init+0xac>)
    690c:	4798      	blx	r3
    690e:	2384      	movs	r3, #132	; 0x84
    6910:	05db      	lsls	r3, r3, #23
    6912:	2204      	movs	r2, #4
    6914:	759a      	strb	r2, [r3, #22]
    6916:	2008      	movs	r0, #8
    6918:	4b0c      	ldr	r3, [pc, #48]	; (694c <sio2host_init+0xb0>)
    691a:	4798      	blx	r3
    691c:	46c0      	nop			; (mov r8, r8)
    691e:	46bd      	mov	sp, r7
    6920:	b011      	add	sp, #68	; 0x44
    6922:	bd90      	pop	{r4, r7, pc}
    6924:	0000659d 	.word	0x0000659d
    6928:	00040003 	.word	0x00040003
    692c:	00050003 	.word	0x00050003
    6930:	20001c18 	.word	0x20001c18
    6934:	20000a4c 	.word	0x20000a4c
    6938:	0000682d 	.word	0x0000682d
    693c:	0000665d 	.word	0x0000665d
    6940:	000066f1 	.word	0x000066f1
    6944:	00006aa9 	.word	0x00006aa9
    6948:	00003169 	.word	0x00003169
    694c:	000064fd 	.word	0x000064fd

00006950 <sio2host_rx>:
    6950:	b580      	push	{r7, lr}
    6952:	b084      	sub	sp, #16
    6954:	af00      	add	r7, sp, #0
    6956:	6078      	str	r0, [r7, #4]
    6958:	000a      	movs	r2, r1
    695a:	1cfb      	adds	r3, r7, #3
    695c:	701a      	strb	r2, [r3, #0]
    695e:	230f      	movs	r3, #15
    6960:	18fb      	adds	r3, r7, r3
    6962:	2200      	movs	r2, #0
    6964:	701a      	strb	r2, [r3, #0]
    6966:	4b36      	ldr	r3, [pc, #216]	; (6a40 <sio2host_rx+0xf0>)
    6968:	781a      	ldrb	r2, [r3, #0]
    696a:	4b36      	ldr	r3, [pc, #216]	; (6a44 <sio2host_rx+0xf4>)
    696c:	781b      	ldrb	r3, [r3, #0]
    696e:	429a      	cmp	r2, r3
    6970:	d308      	bcc.n	6984 <sio2host_rx+0x34>
    6972:	4b33      	ldr	r3, [pc, #204]	; (6a40 <sio2host_rx+0xf0>)
    6974:	781a      	ldrb	r2, [r3, #0]
    6976:	4b33      	ldr	r3, [pc, #204]	; (6a44 <sio2host_rx+0xf4>)
    6978:	781b      	ldrb	r3, [r3, #0]
    697a:	1ad3      	subs	r3, r2, r3
    697c:	b2da      	uxtb	r2, r3
    697e:	4b32      	ldr	r3, [pc, #200]	; (6a48 <sio2host_rx+0xf8>)
    6980:	701a      	strb	r2, [r3, #0]
    6982:	e009      	b.n	6998 <sio2host_rx+0x48>
    6984:	4b2e      	ldr	r3, [pc, #184]	; (6a40 <sio2host_rx+0xf0>)
    6986:	781a      	ldrb	r2, [r3, #0]
    6988:	4b2e      	ldr	r3, [pc, #184]	; (6a44 <sio2host_rx+0xf4>)
    698a:	781b      	ldrb	r3, [r3, #0]
    698c:	1ad3      	subs	r3, r2, r3
    698e:	b2db      	uxtb	r3, r3
    6990:	3b80      	subs	r3, #128	; 0x80
    6992:	b2da      	uxtb	r2, r3
    6994:	4b2c      	ldr	r3, [pc, #176]	; (6a48 <sio2host_rx+0xf8>)
    6996:	701a      	strb	r2, [r3, #0]
    6998:	4b2b      	ldr	r3, [pc, #172]	; (6a48 <sio2host_rx+0xf8>)
    699a:	781b      	ldrb	r3, [r3, #0]
    699c:	2b00      	cmp	r3, #0
    699e:	d101      	bne.n	69a4 <sio2host_rx+0x54>
    69a0:	2300      	movs	r3, #0
    69a2:	e048      	b.n	6a36 <sio2host_rx+0xe6>
    69a4:	4b28      	ldr	r3, [pc, #160]	; (6a48 <sio2host_rx+0xf8>)
    69a6:	781b      	ldrb	r3, [r3, #0]
    69a8:	b25b      	sxtb	r3, r3
    69aa:	2b00      	cmp	r3, #0
    69ac:	da0f      	bge.n	69ce <sio2host_rx+0x7e>
    69ae:	4b24      	ldr	r3, [pc, #144]	; (6a40 <sio2host_rx+0xf0>)
    69b0:	781a      	ldrb	r2, [r3, #0]
    69b2:	4b24      	ldr	r3, [pc, #144]	; (6a44 <sio2host_rx+0xf4>)
    69b4:	701a      	strb	r2, [r3, #0]
    69b6:	4b24      	ldr	r3, [pc, #144]	; (6a48 <sio2host_rx+0xf8>)
    69b8:	2280      	movs	r2, #128	; 0x80
    69ba:	701a      	strb	r2, [r3, #0]
    69bc:	1cfb      	adds	r3, r7, #3
    69be:	781b      	ldrb	r3, [r3, #0]
    69c0:	b25b      	sxtb	r3, r3
    69c2:	2b00      	cmp	r3, #0
    69c4:	da0d      	bge.n	69e2 <sio2host_rx+0x92>
    69c6:	1cfb      	adds	r3, r7, #3
    69c8:	2280      	movs	r2, #128	; 0x80
    69ca:	701a      	strb	r2, [r3, #0]
    69cc:	e009      	b.n	69e2 <sio2host_rx+0x92>
    69ce:	4b1e      	ldr	r3, [pc, #120]	; (6a48 <sio2host_rx+0xf8>)
    69d0:	781b      	ldrb	r3, [r3, #0]
    69d2:	1cfa      	adds	r2, r7, #3
    69d4:	7812      	ldrb	r2, [r2, #0]
    69d6:	429a      	cmp	r2, r3
    69d8:	d903      	bls.n	69e2 <sio2host_rx+0x92>
    69da:	1cfb      	adds	r3, r7, #3
    69dc:	4a1a      	ldr	r2, [pc, #104]	; (6a48 <sio2host_rx+0xf8>)
    69de:	7812      	ldrb	r2, [r2, #0]
    69e0:	701a      	strb	r2, [r3, #0]
    69e2:	230f      	movs	r3, #15
    69e4:	18fb      	adds	r3, r7, r3
    69e6:	1cfa      	adds	r2, r7, #3
    69e8:	7812      	ldrb	r2, [r2, #0]
    69ea:	701a      	strb	r2, [r3, #0]
    69ec:	e01c      	b.n	6a28 <sio2host_rx+0xd8>
    69ee:	4b15      	ldr	r3, [pc, #84]	; (6a44 <sio2host_rx+0xf4>)
    69f0:	781b      	ldrb	r3, [r3, #0]
    69f2:	001a      	movs	r2, r3
    69f4:	4b15      	ldr	r3, [pc, #84]	; (6a4c <sio2host_rx+0xfc>)
    69f6:	5c9a      	ldrb	r2, [r3, r2]
    69f8:	687b      	ldr	r3, [r7, #4]
    69fa:	701a      	strb	r2, [r3, #0]
    69fc:	687b      	ldr	r3, [r7, #4]
    69fe:	3301      	adds	r3, #1
    6a00:	607b      	str	r3, [r7, #4]
    6a02:	1cfb      	adds	r3, r7, #3
    6a04:	781a      	ldrb	r2, [r3, #0]
    6a06:	1cfb      	adds	r3, r7, #3
    6a08:	3a01      	subs	r2, #1
    6a0a:	701a      	strb	r2, [r3, #0]
    6a0c:	4b0d      	ldr	r3, [pc, #52]	; (6a44 <sio2host_rx+0xf4>)
    6a0e:	781b      	ldrb	r3, [r3, #0]
    6a10:	2b7f      	cmp	r3, #127	; 0x7f
    6a12:	d103      	bne.n	6a1c <sio2host_rx+0xcc>
    6a14:	4b0b      	ldr	r3, [pc, #44]	; (6a44 <sio2host_rx+0xf4>)
    6a16:	2200      	movs	r2, #0
    6a18:	701a      	strb	r2, [r3, #0]
    6a1a:	e005      	b.n	6a28 <sio2host_rx+0xd8>
    6a1c:	4b09      	ldr	r3, [pc, #36]	; (6a44 <sio2host_rx+0xf4>)
    6a1e:	781b      	ldrb	r3, [r3, #0]
    6a20:	3301      	adds	r3, #1
    6a22:	b2da      	uxtb	r2, r3
    6a24:	4b07      	ldr	r3, [pc, #28]	; (6a44 <sio2host_rx+0xf4>)
    6a26:	701a      	strb	r2, [r3, #0]
    6a28:	1cfb      	adds	r3, r7, #3
    6a2a:	781b      	ldrb	r3, [r3, #0]
    6a2c:	2b00      	cmp	r3, #0
    6a2e:	d1de      	bne.n	69ee <sio2host_rx+0x9e>
    6a30:	230f      	movs	r3, #15
    6a32:	18fb      	adds	r3, r7, r3
    6a34:	781b      	ldrb	r3, [r3, #0]
    6a36:	0018      	movs	r0, r3
    6a38:	46bd      	mov	sp, r7
    6a3a:	b004      	add	sp, #16
    6a3c:	bd80      	pop	{r7, pc}
    6a3e:	46c0      	nop			; (mov r8, r8)
    6a40:	20000b01 	.word	0x20000b01
    6a44:	20000b00 	.word	0x20000b00
    6a48:	20000b02 	.word	0x20000b02
    6a4c:	20000a80 	.word	0x20000a80

00006a50 <sio2host_getchar>:
    6a50:	b580      	push	{r7, lr}
    6a52:	b082      	sub	sp, #8
    6a54:	af00      	add	r7, sp, #0
    6a56:	46c0      	nop			; (mov r8, r8)
    6a58:	1dfb      	adds	r3, r7, #7
    6a5a:	2101      	movs	r1, #1
    6a5c:	0018      	movs	r0, r3
    6a5e:	4b05      	ldr	r3, [pc, #20]	; (6a74 <sio2host_getchar+0x24>)
    6a60:	4798      	blx	r3
    6a62:	1e03      	subs	r3, r0, #0
    6a64:	d0f8      	beq.n	6a58 <sio2host_getchar+0x8>
    6a66:	1dfb      	adds	r3, r7, #7
    6a68:	781b      	ldrb	r3, [r3, #0]
    6a6a:	0018      	movs	r0, r3
    6a6c:	46bd      	mov	sp, r7
    6a6e:	b002      	add	sp, #8
    6a70:	bd80      	pop	{r7, pc}
    6a72:	46c0      	nop			; (mov r8, r8)
    6a74:	00006951 	.word	0x00006951

00006a78 <sio2host_getchar_nowait>:
    6a78:	b580      	push	{r7, lr}
    6a7a:	b082      	sub	sp, #8
    6a7c:	af00      	add	r7, sp, #0
    6a7e:	1cfb      	adds	r3, r7, #3
    6a80:	2101      	movs	r1, #1
    6a82:	0018      	movs	r0, r3
    6a84:	4b07      	ldr	r3, [pc, #28]	; (6aa4 <sio2host_getchar_nowait+0x2c>)
    6a86:	4798      	blx	r3
    6a88:	0003      	movs	r3, r0
    6a8a:	607b      	str	r3, [r7, #4]
    6a8c:	687b      	ldr	r3, [r7, #4]
    6a8e:	2b00      	cmp	r3, #0
    6a90:	dd02      	ble.n	6a98 <sio2host_getchar_nowait+0x20>
    6a92:	1cfb      	adds	r3, r7, #3
    6a94:	781b      	ldrb	r3, [r3, #0]
    6a96:	e001      	b.n	6a9c <sio2host_getchar_nowait+0x24>
    6a98:	2301      	movs	r3, #1
    6a9a:	425b      	negs	r3, r3
    6a9c:	0018      	movs	r0, r3
    6a9e:	46bd      	mov	sp, r7
    6aa0:	b002      	add	sp, #8
    6aa2:	bd80      	pop	{r7, pc}
    6aa4:	00006951 	.word	0x00006951

00006aa8 <USART_HOST_ISR_VECT>:
    6aa8:	b580      	push	{r7, lr}
    6aaa:	b084      	sub	sp, #16
    6aac:	af00      	add	r7, sp, #0
    6aae:	0002      	movs	r2, r0
    6ab0:	1dfb      	adds	r3, r7, #7
    6ab2:	701a      	strb	r2, [r3, #0]
    6ab4:	230f      	movs	r3, #15
    6ab6:	18f9      	adds	r1, r7, r3
    6ab8:	4b15      	ldr	r3, [pc, #84]	; (6b10 <USART_HOST_ISR_VECT+0x68>)
    6aba:	2201      	movs	r2, #1
    6abc:	0018      	movs	r0, r3
    6abe:	4b15      	ldr	r3, [pc, #84]	; (6b14 <USART_HOST_ISR_VECT+0x6c>)
    6ac0:	4798      	blx	r3
    6ac2:	b672      	cpsid	i
    6ac4:	f3bf 8f5f 	dmb	sy
    6ac8:	4b13      	ldr	r3, [pc, #76]	; (6b18 <USART_HOST_ISR_VECT+0x70>)
    6aca:	2200      	movs	r2, #0
    6acc:	701a      	strb	r2, [r3, #0]
    6ace:	4b13      	ldr	r3, [pc, #76]	; (6b1c <USART_HOST_ISR_VECT+0x74>)
    6ad0:	781b      	ldrb	r3, [r3, #0]
    6ad2:	1c5a      	adds	r2, r3, #1
    6ad4:	b2d1      	uxtb	r1, r2
    6ad6:	4a11      	ldr	r2, [pc, #68]	; (6b1c <USART_HOST_ISR_VECT+0x74>)
    6ad8:	7011      	strb	r1, [r2, #0]
    6ada:	001a      	movs	r2, r3
    6adc:	230f      	movs	r3, #15
    6ade:	18fb      	adds	r3, r7, r3
    6ae0:	7819      	ldrb	r1, [r3, #0]
    6ae2:	4b0f      	ldr	r3, [pc, #60]	; (6b20 <USART_HOST_ISR_VECT+0x78>)
    6ae4:	5499      	strb	r1, [r3, r2]
    6ae6:	4b0d      	ldr	r3, [pc, #52]	; (6b1c <USART_HOST_ISR_VECT+0x74>)
    6ae8:	781b      	ldrb	r3, [r3, #0]
    6aea:	227f      	movs	r2, #127	; 0x7f
    6aec:	4013      	ands	r3, r2
    6aee:	b2da      	uxtb	r2, r3
    6af0:	4b0a      	ldr	r3, [pc, #40]	; (6b1c <USART_HOST_ISR_VECT+0x74>)
    6af2:	701a      	strb	r2, [r3, #0]
    6af4:	4b0b      	ldr	r3, [pc, #44]	; (6b24 <USART_HOST_ISR_VECT+0x7c>)
    6af6:	2201      	movs	r2, #1
    6af8:	701a      	strb	r2, [r3, #0]
    6afa:	4b07      	ldr	r3, [pc, #28]	; (6b18 <USART_HOST_ISR_VECT+0x70>)
    6afc:	2201      	movs	r2, #1
    6afe:	701a      	strb	r2, [r3, #0]
    6b00:	f3bf 8f5f 	dmb	sy
    6b04:	b662      	cpsie	i
    6b06:	46c0      	nop			; (mov r8, r8)
    6b08:	46bd      	mov	sp, r7
    6b0a:	b004      	add	sp, #16
    6b0c:	bd80      	pop	{r7, pc}
    6b0e:	46c0      	nop			; (mov r8, r8)
    6b10:	20000a4c 	.word	0x20000a4c
    6b14:	00006801 	.word	0x00006801
    6b18:	20000008 	.word	0x20000008
    6b1c:	20000b01 	.word	0x20000b01
    6b20:	20000a80 	.word	0x20000a80
    6b24:	20000c7d 	.word	0x20000c7d

00006b28 <sio2host_disable>:
    6b28:	b580      	push	{r7, lr}
    6b2a:	af00      	add	r7, sp, #0
    6b2c:	4b03      	ldr	r3, [pc, #12]	; (6b3c <sio2host_disable+0x14>)
    6b2e:	0018      	movs	r0, r3
    6b30:	4b03      	ldr	r3, [pc, #12]	; (6b40 <sio2host_disable+0x18>)
    6b32:	4798      	blx	r3
    6b34:	46c0      	nop			; (mov r8, r8)
    6b36:	46bd      	mov	sp, r7
    6b38:	bd80      	pop	{r7, pc}
    6b3a:	46c0      	nop			; (mov r8, r8)
    6b3c:	20000a4c 	.word	0x20000a4c
    6b40:	000066a5 	.word	0x000066a5

00006b44 <sio2host_disable2>:
    6b44:	b580      	push	{r7, lr}
    6b46:	af00      	add	r7, sp, #0
    6b48:	4b03      	ldr	r3, [pc, #12]	; (6b58 <sio2host_disable2+0x14>)
    6b4a:	0018      	movs	r0, r3
    6b4c:	4b03      	ldr	r3, [pc, #12]	; (6b5c <sio2host_disable2+0x18>)
    6b4e:	4798      	blx	r3
    6b50:	46c0      	nop			; (mov r8, r8)
    6b52:	46bd      	mov	sp, r7
    6b54:	bd80      	pop	{r7, pc}
    6b56:	46c0      	nop			; (mov r8, r8)
    6b58:	20000b04 	.word	0x20000b04
    6b5c:	000066a5 	.word	0x000066a5

00006b60 <system_pinmux_get_group_from_gpio_pin>:
    6b60:	b580      	push	{r7, lr}
    6b62:	b084      	sub	sp, #16
    6b64:	af00      	add	r7, sp, #0
    6b66:	0002      	movs	r2, r0
    6b68:	1dfb      	adds	r3, r7, #7
    6b6a:	701a      	strb	r2, [r3, #0]
    6b6c:	230f      	movs	r3, #15
    6b6e:	18fb      	adds	r3, r7, r3
    6b70:	1dfa      	adds	r2, r7, #7
    6b72:	7812      	ldrb	r2, [r2, #0]
    6b74:	09d2      	lsrs	r2, r2, #7
    6b76:	701a      	strb	r2, [r3, #0]
    6b78:	230e      	movs	r3, #14
    6b7a:	18fb      	adds	r3, r7, r3
    6b7c:	1dfa      	adds	r2, r7, #7
    6b7e:	7812      	ldrb	r2, [r2, #0]
    6b80:	0952      	lsrs	r2, r2, #5
    6b82:	701a      	strb	r2, [r3, #0]
    6b84:	4b0d      	ldr	r3, [pc, #52]	; (6bbc <system_pinmux_get_group_from_gpio_pin+0x5c>)
    6b86:	60bb      	str	r3, [r7, #8]
    6b88:	230f      	movs	r3, #15
    6b8a:	18fb      	adds	r3, r7, r3
    6b8c:	781b      	ldrb	r3, [r3, #0]
    6b8e:	2b00      	cmp	r3, #0
    6b90:	d10f      	bne.n	6bb2 <system_pinmux_get_group_from_gpio_pin+0x52>
    6b92:	230f      	movs	r3, #15
    6b94:	18fb      	adds	r3, r7, r3
    6b96:	781b      	ldrb	r3, [r3, #0]
    6b98:	009b      	lsls	r3, r3, #2
    6b9a:	2210      	movs	r2, #16
    6b9c:	4694      	mov	ip, r2
    6b9e:	44bc      	add	ip, r7
    6ba0:	4463      	add	r3, ip
    6ba2:	3b08      	subs	r3, #8
    6ba4:	681a      	ldr	r2, [r3, #0]
    6ba6:	230e      	movs	r3, #14
    6ba8:	18fb      	adds	r3, r7, r3
    6baa:	781b      	ldrb	r3, [r3, #0]
    6bac:	01db      	lsls	r3, r3, #7
    6bae:	18d3      	adds	r3, r2, r3
    6bb0:	e000      	b.n	6bb4 <system_pinmux_get_group_from_gpio_pin+0x54>
    6bb2:	2300      	movs	r3, #0
    6bb4:	0018      	movs	r0, r3
    6bb6:	46bd      	mov	sp, r7
    6bb8:	b004      	add	sp, #16
    6bba:	bd80      	pop	{r7, pc}
    6bbc:	40002800 	.word	0x40002800

00006bc0 <port_get_group_from_gpio_pin>:
    6bc0:	b580      	push	{r7, lr}
    6bc2:	b082      	sub	sp, #8
    6bc4:	af00      	add	r7, sp, #0
    6bc6:	0002      	movs	r2, r0
    6bc8:	1dfb      	adds	r3, r7, #7
    6bca:	701a      	strb	r2, [r3, #0]
    6bcc:	1dfb      	adds	r3, r7, #7
    6bce:	781b      	ldrb	r3, [r3, #0]
    6bd0:	0018      	movs	r0, r3
    6bd2:	4b03      	ldr	r3, [pc, #12]	; (6be0 <port_get_group_from_gpio_pin+0x20>)
    6bd4:	4798      	blx	r3
    6bd6:	0003      	movs	r3, r0
    6bd8:	0018      	movs	r0, r3
    6bda:	46bd      	mov	sp, r7
    6bdc:	b002      	add	sp, #8
    6bde:	bd80      	pop	{r7, pc}
    6be0:	00006b61 	.word	0x00006b61

00006be4 <port_get_config_defaults>:
    6be4:	b580      	push	{r7, lr}
    6be6:	b082      	sub	sp, #8
    6be8:	af00      	add	r7, sp, #0
    6bea:	6078      	str	r0, [r7, #4]
    6bec:	687b      	ldr	r3, [r7, #4]
    6bee:	2200      	movs	r2, #0
    6bf0:	701a      	strb	r2, [r3, #0]
    6bf2:	687b      	ldr	r3, [r7, #4]
    6bf4:	2201      	movs	r2, #1
    6bf6:	705a      	strb	r2, [r3, #1]
    6bf8:	687b      	ldr	r3, [r7, #4]
    6bfa:	2200      	movs	r2, #0
    6bfc:	709a      	strb	r2, [r3, #2]
    6bfe:	46c0      	nop			; (mov r8, r8)
    6c00:	46bd      	mov	sp, r7
    6c02:	b002      	add	sp, #8
    6c04:	bd80      	pop	{r7, pc}
	...

00006c08 <port_pin_set_output_level>:
    6c08:	b580      	push	{r7, lr}
    6c0a:	b084      	sub	sp, #16
    6c0c:	af00      	add	r7, sp, #0
    6c0e:	0002      	movs	r2, r0
    6c10:	1dfb      	adds	r3, r7, #7
    6c12:	701a      	strb	r2, [r3, #0]
    6c14:	1dbb      	adds	r3, r7, #6
    6c16:	1c0a      	adds	r2, r1, #0
    6c18:	701a      	strb	r2, [r3, #0]
    6c1a:	1dfb      	adds	r3, r7, #7
    6c1c:	781b      	ldrb	r3, [r3, #0]
    6c1e:	0018      	movs	r0, r3
    6c20:	4b0d      	ldr	r3, [pc, #52]	; (6c58 <port_pin_set_output_level+0x50>)
    6c22:	4798      	blx	r3
    6c24:	0003      	movs	r3, r0
    6c26:	60fb      	str	r3, [r7, #12]
    6c28:	1dfb      	adds	r3, r7, #7
    6c2a:	781b      	ldrb	r3, [r3, #0]
    6c2c:	221f      	movs	r2, #31
    6c2e:	4013      	ands	r3, r2
    6c30:	2201      	movs	r2, #1
    6c32:	409a      	lsls	r2, r3
    6c34:	0013      	movs	r3, r2
    6c36:	60bb      	str	r3, [r7, #8]
    6c38:	1dbb      	adds	r3, r7, #6
    6c3a:	781b      	ldrb	r3, [r3, #0]
    6c3c:	2b00      	cmp	r3, #0
    6c3e:	d003      	beq.n	6c48 <port_pin_set_output_level+0x40>
    6c40:	68fb      	ldr	r3, [r7, #12]
    6c42:	68ba      	ldr	r2, [r7, #8]
    6c44:	619a      	str	r2, [r3, #24]
    6c46:	e002      	b.n	6c4e <port_pin_set_output_level+0x46>
    6c48:	68fb      	ldr	r3, [r7, #12]
    6c4a:	68ba      	ldr	r2, [r7, #8]
    6c4c:	615a      	str	r2, [r3, #20]
    6c4e:	46c0      	nop			; (mov r8, r8)
    6c50:	46bd      	mov	sp, r7
    6c52:	b004      	add	sp, #16
    6c54:	bd80      	pop	{r7, pc}
    6c56:	46c0      	nop			; (mov r8, r8)
    6c58:	00006bc1 	.word	0x00006bc1

00006c5c <spi_is_syncing>:
    6c5c:	b580      	push	{r7, lr}
    6c5e:	b084      	sub	sp, #16
    6c60:	af00      	add	r7, sp, #0
    6c62:	6078      	str	r0, [r7, #4]
    6c64:	687b      	ldr	r3, [r7, #4]
    6c66:	681b      	ldr	r3, [r3, #0]
    6c68:	60fb      	str	r3, [r7, #12]
    6c6a:	68fb      	ldr	r3, [r7, #12]
    6c6c:	69db      	ldr	r3, [r3, #28]
    6c6e:	1e5a      	subs	r2, r3, #1
    6c70:	4193      	sbcs	r3, r2
    6c72:	b2db      	uxtb	r3, r3
    6c74:	0018      	movs	r0, r3
    6c76:	46bd      	mov	sp, r7
    6c78:	b004      	add	sp, #16
    6c7a:	bd80      	pop	{r7, pc}

00006c7c <spi_get_config_defaults>:
    6c7c:	b580      	push	{r7, lr}
    6c7e:	b082      	sub	sp, #8
    6c80:	af00      	add	r7, sp, #0
    6c82:	6078      	str	r0, [r7, #4]
    6c84:	687b      	ldr	r3, [r7, #4]
    6c86:	2201      	movs	r2, #1
    6c88:	701a      	strb	r2, [r3, #0]
    6c8a:	687b      	ldr	r3, [r7, #4]
    6c8c:	2200      	movs	r2, #0
    6c8e:	605a      	str	r2, [r3, #4]
    6c90:	687b      	ldr	r3, [r7, #4]
    6c92:	2200      	movs	r2, #0
    6c94:	609a      	str	r2, [r3, #8]
    6c96:	687b      	ldr	r3, [r7, #4]
    6c98:	22c0      	movs	r2, #192	; 0xc0
    6c9a:	0392      	lsls	r2, r2, #14
    6c9c:	60da      	str	r2, [r3, #12]
    6c9e:	687b      	ldr	r3, [r7, #4]
    6ca0:	2200      	movs	r2, #0
    6ca2:	741a      	strb	r2, [r3, #16]
    6ca4:	687b      	ldr	r3, [r7, #4]
    6ca6:	2200      	movs	r2, #0
    6ca8:	745a      	strb	r2, [r3, #17]
    6caa:	687b      	ldr	r3, [r7, #4]
    6cac:	2201      	movs	r2, #1
    6cae:	749a      	strb	r2, [r3, #18]
    6cb0:	687b      	ldr	r3, [r7, #4]
    6cb2:	2201      	movs	r2, #1
    6cb4:	74da      	strb	r2, [r3, #19]
    6cb6:	687b      	ldr	r3, [r7, #4]
    6cb8:	2200      	movs	r2, #0
    6cba:	751a      	strb	r2, [r3, #20]
    6cbc:	687b      	ldr	r3, [r7, #4]
    6cbe:	2224      	movs	r2, #36	; 0x24
    6cc0:	2100      	movs	r1, #0
    6cc2:	5499      	strb	r1, [r3, r2]
    6cc4:	687b      	ldr	r3, [r7, #4]
    6cc6:	3318      	adds	r3, #24
    6cc8:	220c      	movs	r2, #12
    6cca:	2100      	movs	r1, #0
    6ccc:	0018      	movs	r0, r3
    6cce:	4b0a      	ldr	r3, [pc, #40]	; (6cf8 <spi_get_config_defaults+0x7c>)
    6cd0:	4798      	blx	r3
    6cd2:	687b      	ldr	r3, [r7, #4]
    6cd4:	4a09      	ldr	r2, [pc, #36]	; (6cfc <spi_get_config_defaults+0x80>)
    6cd6:	619a      	str	r2, [r3, #24]
    6cd8:	687b      	ldr	r3, [r7, #4]
    6cda:	2200      	movs	r2, #0
    6cdc:	629a      	str	r2, [r3, #40]	; 0x28
    6cde:	687b      	ldr	r3, [r7, #4]
    6ce0:	2200      	movs	r2, #0
    6ce2:	62da      	str	r2, [r3, #44]	; 0x2c
    6ce4:	687b      	ldr	r3, [r7, #4]
    6ce6:	2200      	movs	r2, #0
    6ce8:	631a      	str	r2, [r3, #48]	; 0x30
    6cea:	687b      	ldr	r3, [r7, #4]
    6cec:	2200      	movs	r2, #0
    6cee:	635a      	str	r2, [r3, #52]	; 0x34
    6cf0:	46c0      	nop			; (mov r8, r8)
    6cf2:	46bd      	mov	sp, r7
    6cf4:	b002      	add	sp, #8
    6cf6:	bd80      	pop	{r7, pc}
    6cf8:	00017799 	.word	0x00017799
    6cfc:	000186a0 	.word	0x000186a0

00006d00 <spi_slave_inst_get_config_defaults>:
    6d00:	b580      	push	{r7, lr}
    6d02:	b082      	sub	sp, #8
    6d04:	af00      	add	r7, sp, #0
    6d06:	6078      	str	r0, [r7, #4]
    6d08:	687b      	ldr	r3, [r7, #4]
    6d0a:	220a      	movs	r2, #10
    6d0c:	701a      	strb	r2, [r3, #0]
    6d0e:	687b      	ldr	r3, [r7, #4]
    6d10:	2200      	movs	r2, #0
    6d12:	705a      	strb	r2, [r3, #1]
    6d14:	687b      	ldr	r3, [r7, #4]
    6d16:	2200      	movs	r2, #0
    6d18:	709a      	strb	r2, [r3, #2]
    6d1a:	46c0      	nop			; (mov r8, r8)
    6d1c:	46bd      	mov	sp, r7
    6d1e:	b002      	add	sp, #8
    6d20:	bd80      	pop	{r7, pc}
	...

00006d24 <spi_attach_slave>:
    6d24:	b580      	push	{r7, lr}
    6d26:	b084      	sub	sp, #16
    6d28:	af00      	add	r7, sp, #0
    6d2a:	6078      	str	r0, [r7, #4]
    6d2c:	6039      	str	r1, [r7, #0]
    6d2e:	683b      	ldr	r3, [r7, #0]
    6d30:	781a      	ldrb	r2, [r3, #0]
    6d32:	687b      	ldr	r3, [r7, #4]
    6d34:	701a      	strb	r2, [r3, #0]
    6d36:	683b      	ldr	r3, [r7, #0]
    6d38:	785a      	ldrb	r2, [r3, #1]
    6d3a:	687b      	ldr	r3, [r7, #4]
    6d3c:	705a      	strb	r2, [r3, #1]
    6d3e:	683b      	ldr	r3, [r7, #0]
    6d40:	789a      	ldrb	r2, [r3, #2]
    6d42:	687b      	ldr	r3, [r7, #4]
    6d44:	709a      	strb	r2, [r3, #2]
    6d46:	230c      	movs	r3, #12
    6d48:	18fb      	adds	r3, r7, r3
    6d4a:	0018      	movs	r0, r3
    6d4c:	4b0b      	ldr	r3, [pc, #44]	; (6d7c <spi_attach_slave+0x58>)
    6d4e:	4798      	blx	r3
    6d50:	230c      	movs	r3, #12
    6d52:	18fb      	adds	r3, r7, r3
    6d54:	2201      	movs	r2, #1
    6d56:	701a      	strb	r2, [r3, #0]
    6d58:	687b      	ldr	r3, [r7, #4]
    6d5a:	781b      	ldrb	r3, [r3, #0]
    6d5c:	220c      	movs	r2, #12
    6d5e:	18ba      	adds	r2, r7, r2
    6d60:	0011      	movs	r1, r2
    6d62:	0018      	movs	r0, r3
    6d64:	4b06      	ldr	r3, [pc, #24]	; (6d80 <spi_attach_slave+0x5c>)
    6d66:	4798      	blx	r3
    6d68:	687b      	ldr	r3, [r7, #4]
    6d6a:	781b      	ldrb	r3, [r3, #0]
    6d6c:	2101      	movs	r1, #1
    6d6e:	0018      	movs	r0, r3
    6d70:	4b04      	ldr	r3, [pc, #16]	; (6d84 <spi_attach_slave+0x60>)
    6d72:	4798      	blx	r3
    6d74:	46c0      	nop			; (mov r8, r8)
    6d76:	46bd      	mov	sp, r7
    6d78:	b004      	add	sp, #16
    6d7a:	bd80      	pop	{r7, pc}
    6d7c:	00006be5 	.word	0x00006be5
    6d80:	000018bd 	.word	0x000018bd
    6d84:	00006c09 	.word	0x00006c09

00006d88 <spi_enable>:
    6d88:	b580      	push	{r7, lr}
    6d8a:	b084      	sub	sp, #16
    6d8c:	af00      	add	r7, sp, #0
    6d8e:	6078      	str	r0, [r7, #4]
    6d90:	687b      	ldr	r3, [r7, #4]
    6d92:	681b      	ldr	r3, [r3, #0]
    6d94:	60fb      	str	r3, [r7, #12]
    6d96:	46c0      	nop			; (mov r8, r8)
    6d98:	687b      	ldr	r3, [r7, #4]
    6d9a:	0018      	movs	r0, r3
    6d9c:	4b06      	ldr	r3, [pc, #24]	; (6db8 <spi_enable+0x30>)
    6d9e:	4798      	blx	r3
    6da0:	1e03      	subs	r3, r0, #0
    6da2:	d1f9      	bne.n	6d98 <spi_enable+0x10>
    6da4:	68fb      	ldr	r3, [r7, #12]
    6da6:	681b      	ldr	r3, [r3, #0]
    6da8:	2202      	movs	r2, #2
    6daa:	431a      	orrs	r2, r3
    6dac:	68fb      	ldr	r3, [r7, #12]
    6dae:	601a      	str	r2, [r3, #0]
    6db0:	46c0      	nop			; (mov r8, r8)
    6db2:	46bd      	mov	sp, r7
    6db4:	b004      	add	sp, #16
    6db6:	bd80      	pop	{r7, pc}
    6db8:	00006c5d 	.word	0x00006c5d

00006dbc <spi_disable>:
    6dbc:	b580      	push	{r7, lr}
    6dbe:	b084      	sub	sp, #16
    6dc0:	af00      	add	r7, sp, #0
    6dc2:	6078      	str	r0, [r7, #4]
    6dc4:	687b      	ldr	r3, [r7, #4]
    6dc6:	681b      	ldr	r3, [r3, #0]
    6dc8:	60fb      	str	r3, [r7, #12]
    6dca:	46c0      	nop			; (mov r8, r8)
    6dcc:	687b      	ldr	r3, [r7, #4]
    6dce:	0018      	movs	r0, r3
    6dd0:	4b0a      	ldr	r3, [pc, #40]	; (6dfc <spi_disable+0x40>)
    6dd2:	4798      	blx	r3
    6dd4:	1e03      	subs	r3, r0, #0
    6dd6:	d1f9      	bne.n	6dcc <spi_disable+0x10>
    6dd8:	68fb      	ldr	r3, [r7, #12]
    6dda:	228f      	movs	r2, #143	; 0x8f
    6ddc:	751a      	strb	r2, [r3, #20]
    6dde:	68fb      	ldr	r3, [r7, #12]
    6de0:	228f      	movs	r2, #143	; 0x8f
    6de2:	761a      	strb	r2, [r3, #24]
    6de4:	68fb      	ldr	r3, [r7, #12]
    6de6:	681b      	ldr	r3, [r3, #0]
    6de8:	2202      	movs	r2, #2
    6dea:	4393      	bics	r3, r2
    6dec:	001a      	movs	r2, r3
    6dee:	68fb      	ldr	r3, [r7, #12]
    6df0:	601a      	str	r2, [r3, #0]
    6df2:	46c0      	nop			; (mov r8, r8)
    6df4:	46bd      	mov	sp, r7
    6df6:	b004      	add	sp, #16
    6df8:	bd80      	pop	{r7, pc}
    6dfa:	46c0      	nop			; (mov r8, r8)
    6dfc:	00006c5d 	.word	0x00006c5d

00006e00 <spi_is_write_complete>:
    6e00:	b580      	push	{r7, lr}
    6e02:	b084      	sub	sp, #16
    6e04:	af00      	add	r7, sp, #0
    6e06:	6078      	str	r0, [r7, #4]
    6e08:	687b      	ldr	r3, [r7, #4]
    6e0a:	681b      	ldr	r3, [r3, #0]
    6e0c:	60fb      	str	r3, [r7, #12]
    6e0e:	68fb      	ldr	r3, [r7, #12]
    6e10:	7e1b      	ldrb	r3, [r3, #24]
    6e12:	b2db      	uxtb	r3, r3
    6e14:	001a      	movs	r2, r3
    6e16:	2302      	movs	r3, #2
    6e18:	4013      	ands	r3, r2
    6e1a:	1e5a      	subs	r2, r3, #1
    6e1c:	4193      	sbcs	r3, r2
    6e1e:	b2db      	uxtb	r3, r3
    6e20:	0018      	movs	r0, r3
    6e22:	46bd      	mov	sp, r7
    6e24:	b004      	add	sp, #16
    6e26:	bd80      	pop	{r7, pc}

00006e28 <spi_is_ready_to_write>:
    6e28:	b580      	push	{r7, lr}
    6e2a:	b084      	sub	sp, #16
    6e2c:	af00      	add	r7, sp, #0
    6e2e:	6078      	str	r0, [r7, #4]
    6e30:	687b      	ldr	r3, [r7, #4]
    6e32:	681b      	ldr	r3, [r3, #0]
    6e34:	60fb      	str	r3, [r7, #12]
    6e36:	68fb      	ldr	r3, [r7, #12]
    6e38:	7e1b      	ldrb	r3, [r3, #24]
    6e3a:	b2db      	uxtb	r3, r3
    6e3c:	001a      	movs	r2, r3
    6e3e:	2301      	movs	r3, #1
    6e40:	4013      	ands	r3, r2
    6e42:	1e5a      	subs	r2, r3, #1
    6e44:	4193      	sbcs	r3, r2
    6e46:	b2db      	uxtb	r3, r3
    6e48:	0018      	movs	r0, r3
    6e4a:	46bd      	mov	sp, r7
    6e4c:	b004      	add	sp, #16
    6e4e:	bd80      	pop	{r7, pc}

00006e50 <spi_is_ready_to_read>:
    6e50:	b580      	push	{r7, lr}
    6e52:	b084      	sub	sp, #16
    6e54:	af00      	add	r7, sp, #0
    6e56:	6078      	str	r0, [r7, #4]
    6e58:	687b      	ldr	r3, [r7, #4]
    6e5a:	681b      	ldr	r3, [r3, #0]
    6e5c:	60fb      	str	r3, [r7, #12]
    6e5e:	68fb      	ldr	r3, [r7, #12]
    6e60:	7e1b      	ldrb	r3, [r3, #24]
    6e62:	b2db      	uxtb	r3, r3
    6e64:	001a      	movs	r2, r3
    6e66:	2304      	movs	r3, #4
    6e68:	4013      	ands	r3, r2
    6e6a:	1e5a      	subs	r2, r3, #1
    6e6c:	4193      	sbcs	r3, r2
    6e6e:	b2db      	uxtb	r3, r3
    6e70:	0018      	movs	r0, r3
    6e72:	46bd      	mov	sp, r7
    6e74:	b004      	add	sp, #16
    6e76:	bd80      	pop	{r7, pc}

00006e78 <spi_write>:
    6e78:	b580      	push	{r7, lr}
    6e7a:	b084      	sub	sp, #16
    6e7c:	af00      	add	r7, sp, #0
    6e7e:	6078      	str	r0, [r7, #4]
    6e80:	000a      	movs	r2, r1
    6e82:	1cbb      	adds	r3, r7, #2
    6e84:	801a      	strh	r2, [r3, #0]
    6e86:	687b      	ldr	r3, [r7, #4]
    6e88:	681b      	ldr	r3, [r3, #0]
    6e8a:	60fb      	str	r3, [r7, #12]
    6e8c:	687b      	ldr	r3, [r7, #4]
    6e8e:	0018      	movs	r0, r3
    6e90:	4b0a      	ldr	r3, [pc, #40]	; (6ebc <spi_write+0x44>)
    6e92:	4798      	blx	r3
    6e94:	0003      	movs	r3, r0
    6e96:	001a      	movs	r2, r3
    6e98:	2301      	movs	r3, #1
    6e9a:	4053      	eors	r3, r2
    6e9c:	b2db      	uxtb	r3, r3
    6e9e:	2b00      	cmp	r3, #0
    6ea0:	d001      	beq.n	6ea6 <spi_write+0x2e>
    6ea2:	2305      	movs	r3, #5
    6ea4:	e006      	b.n	6eb4 <spi_write+0x3c>
    6ea6:	1cbb      	adds	r3, r7, #2
    6ea8:	881b      	ldrh	r3, [r3, #0]
    6eaa:	05db      	lsls	r3, r3, #23
    6eac:	0dda      	lsrs	r2, r3, #23
    6eae:	68fb      	ldr	r3, [r7, #12]
    6eb0:	629a      	str	r2, [r3, #40]	; 0x28
    6eb2:	2300      	movs	r3, #0
    6eb4:	0018      	movs	r0, r3
    6eb6:	46bd      	mov	sp, r7
    6eb8:	b004      	add	sp, #16
    6eba:	bd80      	pop	{r7, pc}
    6ebc:	00006e29 	.word	0x00006e29

00006ec0 <spi_read>:
    6ec0:	b580      	push	{r7, lr}
    6ec2:	b084      	sub	sp, #16
    6ec4:	af00      	add	r7, sp, #0
    6ec6:	6078      	str	r0, [r7, #4]
    6ec8:	6039      	str	r1, [r7, #0]
    6eca:	687b      	ldr	r3, [r7, #4]
    6ecc:	681b      	ldr	r3, [r3, #0]
    6ece:	60bb      	str	r3, [r7, #8]
    6ed0:	687b      	ldr	r3, [r7, #4]
    6ed2:	0018      	movs	r0, r3
    6ed4:	4b1b      	ldr	r3, [pc, #108]	; (6f44 <spi_read+0x84>)
    6ed6:	4798      	blx	r3
    6ed8:	0003      	movs	r3, r0
    6eda:	001a      	movs	r2, r3
    6edc:	2301      	movs	r3, #1
    6ede:	4053      	eors	r3, r2
    6ee0:	b2db      	uxtb	r3, r3
    6ee2:	2b00      	cmp	r3, #0
    6ee4:	d001      	beq.n	6eea <spi_read+0x2a>
    6ee6:	2310      	movs	r3, #16
    6ee8:	e027      	b.n	6f3a <spi_read+0x7a>
    6eea:	230f      	movs	r3, #15
    6eec:	18fb      	adds	r3, r7, r3
    6eee:	2200      	movs	r2, #0
    6ef0:	701a      	strb	r2, [r3, #0]
    6ef2:	68bb      	ldr	r3, [r7, #8]
    6ef4:	8b5b      	ldrh	r3, [r3, #26]
    6ef6:	b29b      	uxth	r3, r3
    6ef8:	001a      	movs	r2, r3
    6efa:	2304      	movs	r3, #4
    6efc:	4013      	ands	r3, r2
    6efe:	d006      	beq.n	6f0e <spi_read+0x4e>
    6f00:	230f      	movs	r3, #15
    6f02:	18fb      	adds	r3, r7, r3
    6f04:	221e      	movs	r2, #30
    6f06:	701a      	strb	r2, [r3, #0]
    6f08:	68bb      	ldr	r3, [r7, #8]
    6f0a:	2204      	movs	r2, #4
    6f0c:	835a      	strh	r2, [r3, #26]
    6f0e:	687b      	ldr	r3, [r7, #4]
    6f10:	799b      	ldrb	r3, [r3, #6]
    6f12:	2b01      	cmp	r3, #1
    6f14:	d108      	bne.n	6f28 <spi_read+0x68>
    6f16:	68bb      	ldr	r3, [r7, #8]
    6f18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    6f1a:	b29b      	uxth	r3, r3
    6f1c:	05db      	lsls	r3, r3, #23
    6f1e:	0ddb      	lsrs	r3, r3, #23
    6f20:	b29a      	uxth	r2, r3
    6f22:	683b      	ldr	r3, [r7, #0]
    6f24:	801a      	strh	r2, [r3, #0]
    6f26:	e005      	b.n	6f34 <spi_read+0x74>
    6f28:	68bb      	ldr	r3, [r7, #8]
    6f2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    6f2c:	b2db      	uxtb	r3, r3
    6f2e:	b29a      	uxth	r2, r3
    6f30:	683b      	ldr	r3, [r7, #0]
    6f32:	801a      	strh	r2, [r3, #0]
    6f34:	230f      	movs	r3, #15
    6f36:	18fb      	adds	r3, r7, r3
    6f38:	781b      	ldrb	r3, [r3, #0]
    6f3a:	0018      	movs	r0, r3
    6f3c:	46bd      	mov	sp, r7
    6f3e:	b004      	add	sp, #16
    6f40:	bd80      	pop	{r7, pc}
    6f42:	46c0      	nop			; (mov r8, r8)
    6f44:	00006e51 	.word	0x00006e51

00006f48 <HAL_RadioInit>:
    6f48:	b580      	push	{r7, lr}
    6f4a:	af00      	add	r7, sp, #0
    6f4c:	4b03      	ldr	r3, [pc, #12]	; (6f5c <HAL_RadioInit+0x14>)
    6f4e:	4798      	blx	r3
    6f50:	4b03      	ldr	r3, [pc, #12]	; (6f60 <HAL_RadioInit+0x18>)
    6f52:	4798      	blx	r3
    6f54:	46c0      	nop			; (mov r8, r8)
    6f56:	46bd      	mov	sp, r7
    6f58:	bd80      	pop	{r7, pc}
    6f5a:	46c0      	nop			; (mov r8, r8)
    6f5c:	00007211 	.word	0x00007211
    6f60:	00007165 	.word	0x00007165

00006f64 <HAL_RadioDeInit>:
    6f64:	b580      	push	{r7, lr}
    6f66:	af00      	add	r7, sp, #0
    6f68:	4b03      	ldr	r3, [pc, #12]	; (6f78 <HAL_RadioDeInit+0x14>)
    6f6a:	0018      	movs	r0, r3
    6f6c:	4b03      	ldr	r3, [pc, #12]	; (6f7c <HAL_RadioDeInit+0x18>)
    6f6e:	4798      	blx	r3
    6f70:	46c0      	nop			; (mov r8, r8)
    6f72:	46bd      	mov	sp, r7
    6f74:	bd80      	pop	{r7, pc}
    6f76:	46c0      	nop			; (mov r8, r8)
    6f78:	20000b40 	.word	0x20000b40
    6f7c:	00006dbd 	.word	0x00006dbd

00006f80 <RADIO_RegisterWrite>:
    6f80:	b580      	push	{r7, lr}
    6f82:	b082      	sub	sp, #8
    6f84:	af00      	add	r7, sp, #0
    6f86:	0002      	movs	r2, r0
    6f88:	1dfb      	adds	r3, r7, #7
    6f8a:	701a      	strb	r2, [r3, #0]
    6f8c:	1dbb      	adds	r3, r7, #6
    6f8e:	1c0a      	adds	r2, r1, #0
    6f90:	701a      	strb	r2, [r3, #0]
    6f92:	4b0b      	ldr	r3, [pc, #44]	; (6fc0 <RADIO_RegisterWrite+0x40>)
    6f94:	4798      	blx	r3
    6f96:	1dfb      	adds	r3, r7, #7
    6f98:	781b      	ldrb	r3, [r3, #0]
    6f9a:	2280      	movs	r2, #128	; 0x80
    6f9c:	4252      	negs	r2, r2
    6f9e:	4313      	orrs	r3, r2
    6fa0:	b2db      	uxtb	r3, r3
    6fa2:	0018      	movs	r0, r3
    6fa4:	4b07      	ldr	r3, [pc, #28]	; (6fc4 <RADIO_RegisterWrite+0x44>)
    6fa6:	4798      	blx	r3
    6fa8:	1dbb      	adds	r3, r7, #6
    6faa:	781b      	ldrb	r3, [r3, #0]
    6fac:	0018      	movs	r0, r3
    6fae:	4b05      	ldr	r3, [pc, #20]	; (6fc4 <RADIO_RegisterWrite+0x44>)
    6fb0:	4798      	blx	r3
    6fb2:	4b05      	ldr	r3, [pc, #20]	; (6fc8 <RADIO_RegisterWrite+0x48>)
    6fb4:	4798      	blx	r3
    6fb6:	46c0      	nop			; (mov r8, r8)
    6fb8:	46bd      	mov	sp, r7
    6fba:	b002      	add	sp, #8
    6fbc:	bd80      	pop	{r7, pc}
    6fbe:	46c0      	nop			; (mov r8, r8)
    6fc0:	0000731d 	.word	0x0000731d
    6fc4:	00007365 	.word	0x00007365
    6fc8:	00007341 	.word	0x00007341

00006fcc <RADIO_RegisterRead>:
    6fcc:	b590      	push	{r4, r7, lr}
    6fce:	b085      	sub	sp, #20
    6fd0:	af00      	add	r7, sp, #0
    6fd2:	0002      	movs	r2, r0
    6fd4:	1dfb      	adds	r3, r7, #7
    6fd6:	701a      	strb	r2, [r3, #0]
    6fd8:	1dfb      	adds	r3, r7, #7
    6fda:	1dfa      	adds	r2, r7, #7
    6fdc:	7812      	ldrb	r2, [r2, #0]
    6fde:	217f      	movs	r1, #127	; 0x7f
    6fe0:	400a      	ands	r2, r1
    6fe2:	701a      	strb	r2, [r3, #0]
    6fe4:	4b0b      	ldr	r3, [pc, #44]	; (7014 <RADIO_RegisterRead+0x48>)
    6fe6:	4798      	blx	r3
    6fe8:	1dfb      	adds	r3, r7, #7
    6fea:	781b      	ldrb	r3, [r3, #0]
    6fec:	0018      	movs	r0, r3
    6fee:	4b0a      	ldr	r3, [pc, #40]	; (7018 <RADIO_RegisterRead+0x4c>)
    6ff0:	4798      	blx	r3
    6ff2:	230f      	movs	r3, #15
    6ff4:	18fc      	adds	r4, r7, r3
    6ff6:	20ff      	movs	r0, #255	; 0xff
    6ff8:	4b07      	ldr	r3, [pc, #28]	; (7018 <RADIO_RegisterRead+0x4c>)
    6ffa:	4798      	blx	r3
    6ffc:	0003      	movs	r3, r0
    6ffe:	7023      	strb	r3, [r4, #0]
    7000:	4b06      	ldr	r3, [pc, #24]	; (701c <RADIO_RegisterRead+0x50>)
    7002:	4798      	blx	r3
    7004:	230f      	movs	r3, #15
    7006:	18fb      	adds	r3, r7, r3
    7008:	781b      	ldrb	r3, [r3, #0]
    700a:	0018      	movs	r0, r3
    700c:	46bd      	mov	sp, r7
    700e:	b005      	add	sp, #20
    7010:	bd90      	pop	{r4, r7, pc}
    7012:	46c0      	nop			; (mov r8, r8)
    7014:	0000731d 	.word	0x0000731d
    7018:	00007365 	.word	0x00007365
    701c:	00007341 	.word	0x00007341

00007020 <RADIO_FrameWrite>:
    7020:	b580      	push	{r7, lr}
    7022:	b084      	sub	sp, #16
    7024:	af00      	add	r7, sp, #0
    7026:	6039      	str	r1, [r7, #0]
    7028:	0011      	movs	r1, r2
    702a:	1dfb      	adds	r3, r7, #7
    702c:	1c02      	adds	r2, r0, #0
    702e:	701a      	strb	r2, [r3, #0]
    7030:	1dbb      	adds	r3, r7, #6
    7032:	1c0a      	adds	r2, r1, #0
    7034:	701a      	strb	r2, [r3, #0]
    7036:	4b16      	ldr	r3, [pc, #88]	; (7090 <RADIO_FrameWrite+0x70>)
    7038:	4798      	blx	r3
    703a:	1dfb      	adds	r3, r7, #7
    703c:	781b      	ldrb	r3, [r3, #0]
    703e:	2280      	movs	r2, #128	; 0x80
    7040:	4252      	negs	r2, r2
    7042:	4313      	orrs	r3, r2
    7044:	b2db      	uxtb	r3, r3
    7046:	0018      	movs	r0, r3
    7048:	4b12      	ldr	r3, [pc, #72]	; (7094 <RADIO_FrameWrite+0x74>)
    704a:	4798      	blx	r3
    704c:	230f      	movs	r3, #15
    704e:	18fb      	adds	r3, r7, r3
    7050:	2200      	movs	r2, #0
    7052:	701a      	strb	r2, [r3, #0]
    7054:	e00f      	b.n	7076 <RADIO_FrameWrite+0x56>
    7056:	230f      	movs	r3, #15
    7058:	18fb      	adds	r3, r7, r3
    705a:	781b      	ldrb	r3, [r3, #0]
    705c:	683a      	ldr	r2, [r7, #0]
    705e:	18d3      	adds	r3, r2, r3
    7060:	781b      	ldrb	r3, [r3, #0]
    7062:	0018      	movs	r0, r3
    7064:	4b0b      	ldr	r3, [pc, #44]	; (7094 <RADIO_FrameWrite+0x74>)
    7066:	4798      	blx	r3
    7068:	230f      	movs	r3, #15
    706a:	18fb      	adds	r3, r7, r3
    706c:	781a      	ldrb	r2, [r3, #0]
    706e:	230f      	movs	r3, #15
    7070:	18fb      	adds	r3, r7, r3
    7072:	3201      	adds	r2, #1
    7074:	701a      	strb	r2, [r3, #0]
    7076:	230f      	movs	r3, #15
    7078:	18fa      	adds	r2, r7, r3
    707a:	1dbb      	adds	r3, r7, #6
    707c:	7812      	ldrb	r2, [r2, #0]
    707e:	781b      	ldrb	r3, [r3, #0]
    7080:	429a      	cmp	r2, r3
    7082:	d3e8      	bcc.n	7056 <RADIO_FrameWrite+0x36>
    7084:	4b04      	ldr	r3, [pc, #16]	; (7098 <RADIO_FrameWrite+0x78>)
    7086:	4798      	blx	r3
    7088:	46c0      	nop			; (mov r8, r8)
    708a:	46bd      	mov	sp, r7
    708c:	b004      	add	sp, #16
    708e:	bd80      	pop	{r7, pc}
    7090:	0000731d 	.word	0x0000731d
    7094:	00007365 	.word	0x00007365
    7098:	00007341 	.word	0x00007341

0000709c <RADIO_FrameRead>:
    709c:	b590      	push	{r4, r7, lr}
    709e:	b085      	sub	sp, #20
    70a0:	af00      	add	r7, sp, #0
    70a2:	6039      	str	r1, [r7, #0]
    70a4:	0011      	movs	r1, r2
    70a6:	1dfb      	adds	r3, r7, #7
    70a8:	1c02      	adds	r2, r0, #0
    70aa:	701a      	strb	r2, [r3, #0]
    70ac:	1dbb      	adds	r3, r7, #6
    70ae:	1c0a      	adds	r2, r1, #0
    70b0:	701a      	strb	r2, [r3, #0]
    70b2:	4b15      	ldr	r3, [pc, #84]	; (7108 <RADIO_FrameRead+0x6c>)
    70b4:	4798      	blx	r3
    70b6:	1dfb      	adds	r3, r7, #7
    70b8:	781b      	ldrb	r3, [r3, #0]
    70ba:	0018      	movs	r0, r3
    70bc:	4b13      	ldr	r3, [pc, #76]	; (710c <RADIO_FrameRead+0x70>)
    70be:	4798      	blx	r3
    70c0:	230f      	movs	r3, #15
    70c2:	18fb      	adds	r3, r7, r3
    70c4:	2200      	movs	r2, #0
    70c6:	701a      	strb	r2, [r3, #0]
    70c8:	e010      	b.n	70ec <RADIO_FrameRead+0x50>
    70ca:	230f      	movs	r3, #15
    70cc:	18fb      	adds	r3, r7, r3
    70ce:	781b      	ldrb	r3, [r3, #0]
    70d0:	683a      	ldr	r2, [r7, #0]
    70d2:	18d4      	adds	r4, r2, r3
    70d4:	20ff      	movs	r0, #255	; 0xff
    70d6:	4b0d      	ldr	r3, [pc, #52]	; (710c <RADIO_FrameRead+0x70>)
    70d8:	4798      	blx	r3
    70da:	0003      	movs	r3, r0
    70dc:	7023      	strb	r3, [r4, #0]
    70de:	230f      	movs	r3, #15
    70e0:	18fb      	adds	r3, r7, r3
    70e2:	781a      	ldrb	r2, [r3, #0]
    70e4:	230f      	movs	r3, #15
    70e6:	18fb      	adds	r3, r7, r3
    70e8:	3201      	adds	r2, #1
    70ea:	701a      	strb	r2, [r3, #0]
    70ec:	230f      	movs	r3, #15
    70ee:	18fa      	adds	r2, r7, r3
    70f0:	1dbb      	adds	r3, r7, #6
    70f2:	7812      	ldrb	r2, [r2, #0]
    70f4:	781b      	ldrb	r3, [r3, #0]
    70f6:	429a      	cmp	r2, r3
    70f8:	d3e7      	bcc.n	70ca <RADIO_FrameRead+0x2e>
    70fa:	4b05      	ldr	r3, [pc, #20]	; (7110 <RADIO_FrameRead+0x74>)
    70fc:	4798      	blx	r3
    70fe:	46c0      	nop			; (mov r8, r8)
    7100:	46bd      	mov	sp, r7
    7102:	b005      	add	sp, #20
    7104:	bd90      	pop	{r4, r7, pc}
    7106:	46c0      	nop			; (mov r8, r8)
    7108:	0000731d 	.word	0x0000731d
    710c:	00007365 	.word	0x00007365
    7110:	00007341 	.word	0x00007341

00007114 <HAL_EnableDIO0Interrupt>:
    7114:	b580      	push	{r7, lr}
    7116:	af00      	add	r7, sp, #0
    7118:	2100      	movs	r1, #0
    711a:	2000      	movs	r0, #0
    711c:	4b02      	ldr	r3, [pc, #8]	; (7128 <HAL_EnableDIO0Interrupt+0x14>)
    711e:	4798      	blx	r3
    7120:	46c0      	nop			; (mov r8, r8)
    7122:	46bd      	mov	sp, r7
    7124:	bd80      	pop	{r7, pc}
    7126:	46c0      	nop			; (mov r8, r8)
    7128:	00000939 	.word	0x00000939

0000712c <HAL_RadioDIO0Callback>:
    712c:	b580      	push	{r7, lr}
    712e:	af00      	add	r7, sp, #0
    7130:	4b04      	ldr	r3, [pc, #16]	; (7144 <HAL_RadioDIO0Callback+0x18>)
    7132:	681b      	ldr	r3, [r3, #0]
    7134:	2b00      	cmp	r3, #0
    7136:	d002      	beq.n	713e <HAL_RadioDIO0Callback+0x12>
    7138:	4b02      	ldr	r3, [pc, #8]	; (7144 <HAL_RadioDIO0Callback+0x18>)
    713a:	681b      	ldr	r3, [r3, #0]
    713c:	4798      	blx	r3
    713e:	46c0      	nop			; (mov r8, r8)
    7140:	46bd      	mov	sp, r7
    7142:	bd80      	pop	{r7, pc}
    7144:	20000b38 	.word	0x20000b38

00007148 <HAL_RadioDIO1Callback>:
    7148:	b580      	push	{r7, lr}
    714a:	af00      	add	r7, sp, #0
    714c:	4b04      	ldr	r3, [pc, #16]	; (7160 <HAL_RadioDIO1Callback+0x18>)
    714e:	681b      	ldr	r3, [r3, #0]
    7150:	2b00      	cmp	r3, #0
    7152:	d002      	beq.n	715a <HAL_RadioDIO1Callback+0x12>
    7154:	4b02      	ldr	r3, [pc, #8]	; (7160 <HAL_RadioDIO1Callback+0x18>)
    7156:	681b      	ldr	r3, [r3, #0]
    7158:	4798      	blx	r3
    715a:	46c0      	nop			; (mov r8, r8)
    715c:	46bd      	mov	sp, r7
    715e:	bd80      	pop	{r7, pc}
    7160:	20000b3c 	.word	0x20000b3c

00007164 <HAL_RadioSpiInit>:
    7164:	b580      	push	{r7, lr}
    7166:	b090      	sub	sp, #64	; 0x40
    7168:	af00      	add	r7, sp, #0
    716a:	1d3b      	adds	r3, r7, #4
    716c:	0018      	movs	r0, r3
    716e:	4b1c      	ldr	r3, [pc, #112]	; (71e0 <HAL_RadioSpiInit+0x7c>)
    7170:	4798      	blx	r3
    7172:	1d3b      	adds	r3, r7, #4
    7174:	223f      	movs	r2, #63	; 0x3f
    7176:	701a      	strb	r2, [r3, #0]
    7178:	1d3a      	adds	r2, r7, #4
    717a:	4b1a      	ldr	r3, [pc, #104]	; (71e4 <HAL_RadioSpiInit+0x80>)
    717c:	0011      	movs	r1, r2
    717e:	0018      	movs	r0, r3
    7180:	4b19      	ldr	r3, [pc, #100]	; (71e8 <HAL_RadioSpiInit+0x84>)
    7182:	4798      	blx	r3
    7184:	2308      	movs	r3, #8
    7186:	18fb      	adds	r3, r7, r3
    7188:	0018      	movs	r0, r3
    718a:	4b18      	ldr	r3, [pc, #96]	; (71ec <HAL_RadioSpiInit+0x88>)
    718c:	4798      	blx	r3
    718e:	2308      	movs	r3, #8
    7190:	18fb      	adds	r3, r7, r3
    7192:	4a17      	ldr	r2, [pc, #92]	; (71f0 <HAL_RadioSpiInit+0x8c>)
    7194:	619a      	str	r2, [r3, #24]
    7196:	2308      	movs	r3, #8
    7198:	18fb      	adds	r3, r7, r3
    719a:	2280      	movs	r2, #128	; 0x80
    719c:	0252      	lsls	r2, r2, #9
    719e:	60da      	str	r2, [r3, #12]
    71a0:	2308      	movs	r3, #8
    71a2:	18fb      	adds	r3, r7, r3
    71a4:	4a13      	ldr	r2, [pc, #76]	; (71f4 <HAL_RadioSpiInit+0x90>)
    71a6:	629a      	str	r2, [r3, #40]	; 0x28
    71a8:	2308      	movs	r3, #8
    71aa:	18fb      	adds	r3, r7, r3
    71ac:	2201      	movs	r2, #1
    71ae:	4252      	negs	r2, r2
    71b0:	62da      	str	r2, [r3, #44]	; 0x2c
    71b2:	2308      	movs	r3, #8
    71b4:	18fb      	adds	r3, r7, r3
    71b6:	4a10      	ldr	r2, [pc, #64]	; (71f8 <HAL_RadioSpiInit+0x94>)
    71b8:	631a      	str	r2, [r3, #48]	; 0x30
    71ba:	2308      	movs	r3, #8
    71bc:	18fb      	adds	r3, r7, r3
    71be:	4a0f      	ldr	r2, [pc, #60]	; (71fc <HAL_RadioSpiInit+0x98>)
    71c0:	635a      	str	r2, [r3, #52]	; 0x34
    71c2:	2308      	movs	r3, #8
    71c4:	18fa      	adds	r2, r7, r3
    71c6:	490e      	ldr	r1, [pc, #56]	; (7200 <HAL_RadioSpiInit+0x9c>)
    71c8:	4b0e      	ldr	r3, [pc, #56]	; (7204 <HAL_RadioSpiInit+0xa0>)
    71ca:	0018      	movs	r0, r3
    71cc:	4b0e      	ldr	r3, [pc, #56]	; (7208 <HAL_RadioSpiInit+0xa4>)
    71ce:	4798      	blx	r3
    71d0:	4b0c      	ldr	r3, [pc, #48]	; (7204 <HAL_RadioSpiInit+0xa0>)
    71d2:	0018      	movs	r0, r3
    71d4:	4b0d      	ldr	r3, [pc, #52]	; (720c <HAL_RadioSpiInit+0xa8>)
    71d6:	4798      	blx	r3
    71d8:	46c0      	nop			; (mov r8, r8)
    71da:	46bd      	mov	sp, r7
    71dc:	b010      	add	sp, #64	; 0x40
    71de:	bd80      	pop	{r7, pc}
    71e0:	00006d01 	.word	0x00006d01
    71e4:	20000d58 	.word	0x20000d58
    71e8:	00006d25 	.word	0x00006d25
    71ec:	00006c7d 	.word	0x00006c7d
    71f0:	001e8480 	.word	0x001e8480
    71f4:	00530005 	.word	0x00530005
    71f8:	003e0005 	.word	0x003e0005
    71fc:	00520005 	.word	0x00520005
    7200:	42001000 	.word	0x42001000
    7204:	20000b40 	.word	0x20000b40
    7208:	000039dd 	.word	0x000039dd
    720c:	00006d89 	.word	0x00006d89

00007210 <HAL_RadioIOInit>:
    7210:	b580      	push	{r7, lr}
    7212:	b084      	sub	sp, #16
    7214:	af00      	add	r7, sp, #0
    7216:	003b      	movs	r3, r7
    7218:	0018      	movs	r0, r3
    721a:	4b37      	ldr	r3, [pc, #220]	; (72f8 <HAL_RadioIOInit+0xe8>)
    721c:	4798      	blx	r3
    721e:	003b      	movs	r3, r7
    7220:	2201      	movs	r2, #1
    7222:	701a      	strb	r2, [r3, #0]
    7224:	003b      	movs	r3, r7
    7226:	0019      	movs	r1, r3
    7228:	2052      	movs	r0, #82	; 0x52
    722a:	4b34      	ldr	r3, [pc, #208]	; (72fc <HAL_RadioIOInit+0xec>)
    722c:	4798      	blx	r3
    722e:	003b      	movs	r3, r7
    7230:	0019      	movs	r1, r3
    7232:	203e      	movs	r0, #62	; 0x3e
    7234:	4b31      	ldr	r3, [pc, #196]	; (72fc <HAL_RadioIOInit+0xec>)
    7236:	4798      	blx	r3
    7238:	003b      	movs	r3, r7
    723a:	0019      	movs	r1, r3
    723c:	203f      	movs	r0, #63	; 0x3f
    723e:	4b2f      	ldr	r3, [pc, #188]	; (72fc <HAL_RadioIOInit+0xec>)
    7240:	4798      	blx	r3
    7242:	003b      	movs	r3, r7
    7244:	0019      	movs	r1, r3
    7246:	202f      	movs	r0, #47	; 0x2f
    7248:	4b2c      	ldr	r3, [pc, #176]	; (72fc <HAL_RadioIOInit+0xec>)
    724a:	4798      	blx	r3
    724c:	2101      	movs	r1, #1
    724e:	2052      	movs	r0, #82	; 0x52
    7250:	4b2b      	ldr	r3, [pc, #172]	; (7300 <HAL_RadioIOInit+0xf0>)
    7252:	4798      	blx	r3
    7254:	2101      	movs	r1, #1
    7256:	203e      	movs	r0, #62	; 0x3e
    7258:	4b29      	ldr	r3, [pc, #164]	; (7300 <HAL_RadioIOInit+0xf0>)
    725a:	4798      	blx	r3
    725c:	2101      	movs	r1, #1
    725e:	203f      	movs	r0, #63	; 0x3f
    7260:	4b27      	ldr	r3, [pc, #156]	; (7300 <HAL_RadioIOInit+0xf0>)
    7262:	4798      	blx	r3
    7264:	2101      	movs	r1, #1
    7266:	202f      	movs	r0, #47	; 0x2f
    7268:	4b25      	ldr	r3, [pc, #148]	; (7300 <HAL_RadioIOInit+0xf0>)
    726a:	4798      	blx	r3
    726c:	003b      	movs	r3, r7
    726e:	2200      	movs	r2, #0
    7270:	701a      	strb	r2, [r3, #0]
    7272:	003b      	movs	r3, r7
    7274:	0019      	movs	r1, r3
    7276:	2053      	movs	r0, #83	; 0x53
    7278:	4b20      	ldr	r3, [pc, #128]	; (72fc <HAL_RadioIOInit+0xec>)
    727a:	4798      	blx	r3
    727c:	1d3b      	adds	r3, r7, #4
    727e:	0018      	movs	r0, r3
    7280:	4b20      	ldr	r3, [pc, #128]	; (7304 <HAL_RadioIOInit+0xf4>)
    7282:	4798      	blx	r3
    7284:	1d3b      	adds	r3, r7, #4
    7286:	2230      	movs	r2, #48	; 0x30
    7288:	601a      	str	r2, [r3, #0]
    728a:	1d3b      	adds	r3, r7, #4
    728c:	2200      	movs	r2, #0
    728e:	605a      	str	r2, [r3, #4]
    7290:	1d3b      	adds	r3, r7, #4
    7292:	2200      	movs	r2, #0
    7294:	721a      	strb	r2, [r3, #8]
    7296:	1d3b      	adds	r3, r7, #4
    7298:	2201      	movs	r2, #1
    729a:	72da      	strb	r2, [r3, #11]
    729c:	1d3b      	adds	r3, r7, #4
    729e:	0019      	movs	r1, r3
    72a0:	2000      	movs	r0, #0
    72a2:	4b19      	ldr	r3, [pc, #100]	; (7308 <HAL_RadioIOInit+0xf8>)
    72a4:	4798      	blx	r3
    72a6:	4b19      	ldr	r3, [pc, #100]	; (730c <HAL_RadioIOInit+0xfc>)
    72a8:	2200      	movs	r2, #0
    72aa:	2100      	movs	r1, #0
    72ac:	0018      	movs	r0, r3
    72ae:	4b18      	ldr	r3, [pc, #96]	; (7310 <HAL_RadioIOInit+0x100>)
    72b0:	4798      	blx	r3
    72b2:	2100      	movs	r1, #0
    72b4:	2000      	movs	r0, #0
    72b6:	4b17      	ldr	r3, [pc, #92]	; (7314 <HAL_RadioIOInit+0x104>)
    72b8:	4798      	blx	r3
    72ba:	1d3b      	adds	r3, r7, #4
    72bc:	220b      	movs	r2, #11
    72be:	601a      	str	r2, [r3, #0]
    72c0:	1d3b      	adds	r3, r7, #4
    72c2:	2200      	movs	r2, #0
    72c4:	605a      	str	r2, [r3, #4]
    72c6:	1d3b      	adds	r3, r7, #4
    72c8:	2200      	movs	r2, #0
    72ca:	721a      	strb	r2, [r3, #8]
    72cc:	1d3b      	adds	r3, r7, #4
    72ce:	2201      	movs	r2, #1
    72d0:	72da      	strb	r2, [r3, #11]
    72d2:	1d3b      	adds	r3, r7, #4
    72d4:	0019      	movs	r1, r3
    72d6:	200b      	movs	r0, #11
    72d8:	4b0b      	ldr	r3, [pc, #44]	; (7308 <HAL_RadioIOInit+0xf8>)
    72da:	4798      	blx	r3
    72dc:	4b0e      	ldr	r3, [pc, #56]	; (7318 <HAL_RadioIOInit+0x108>)
    72de:	2200      	movs	r2, #0
    72e0:	210b      	movs	r1, #11
    72e2:	0018      	movs	r0, r3
    72e4:	4b0a      	ldr	r3, [pc, #40]	; (7310 <HAL_RadioIOInit+0x100>)
    72e6:	4798      	blx	r3
    72e8:	2100      	movs	r1, #0
    72ea:	200b      	movs	r0, #11
    72ec:	4b09      	ldr	r3, [pc, #36]	; (7314 <HAL_RadioIOInit+0x104>)
    72ee:	4798      	blx	r3
    72f0:	46c0      	nop			; (mov r8, r8)
    72f2:	46bd      	mov	sp, r7
    72f4:	b004      	add	sp, #16
    72f6:	bd80      	pop	{r7, pc}
    72f8:	00006be5 	.word	0x00006be5
    72fc:	000018bd 	.word	0x000018bd
    7300:	00006c09 	.word	0x00006c09
    7304:	00000d09 	.word	0x00000d09
    7308:	00000d3d 	.word	0x00000d3d
    730c:	0000712d 	.word	0x0000712d
    7310:	000008d5 	.word	0x000008d5
    7314:	00000939 	.word	0x00000939
    7318:	00007149 	.word	0x00007149

0000731c <HAL_SPICSAssert>:
    731c:	b580      	push	{r7, lr}
    731e:	af00      	add	r7, sp, #0
    7320:	4904      	ldr	r1, [pc, #16]	; (7334 <HAL_SPICSAssert+0x18>)
    7322:	4b05      	ldr	r3, [pc, #20]	; (7338 <HAL_SPICSAssert+0x1c>)
    7324:	2201      	movs	r2, #1
    7326:	0018      	movs	r0, r3
    7328:	4b04      	ldr	r3, [pc, #16]	; (733c <HAL_SPICSAssert+0x20>)
    732a:	4798      	blx	r3
    732c:	46c0      	nop			; (mov r8, r8)
    732e:	46bd      	mov	sp, r7
    7330:	bd80      	pop	{r7, pc}
    7332:	46c0      	nop			; (mov r8, r8)
    7334:	20000d58 	.word	0x20000d58
    7338:	20000b40 	.word	0x20000b40
    733c:	00003af5 	.word	0x00003af5

00007340 <HAL_SPICSDeassert>:
    7340:	b580      	push	{r7, lr}
    7342:	af00      	add	r7, sp, #0
    7344:	4904      	ldr	r1, [pc, #16]	; (7358 <HAL_SPICSDeassert+0x18>)
    7346:	4b05      	ldr	r3, [pc, #20]	; (735c <HAL_SPICSDeassert+0x1c>)
    7348:	2200      	movs	r2, #0
    734a:	0018      	movs	r0, r3
    734c:	4b04      	ldr	r3, [pc, #16]	; (7360 <HAL_SPICSDeassert+0x20>)
    734e:	4798      	blx	r3
    7350:	46c0      	nop			; (mov r8, r8)
    7352:	46bd      	mov	sp, r7
    7354:	bd80      	pop	{r7, pc}
    7356:	46c0      	nop			; (mov r8, r8)
    7358:	20000d58 	.word	0x20000d58
    735c:	20000b40 	.word	0x20000b40
    7360:	00003af5 	.word	0x00003af5

00007364 <HAL_SPISend>:
    7364:	b580      	push	{r7, lr}
    7366:	b084      	sub	sp, #16
    7368:	af00      	add	r7, sp, #0
    736a:	0002      	movs	r2, r0
    736c:	1dfb      	adds	r3, r7, #7
    736e:	701a      	strb	r2, [r3, #0]
    7370:	230e      	movs	r3, #14
    7372:	18fb      	adds	r3, r7, r3
    7374:	2200      	movs	r2, #0
    7376:	801a      	strh	r2, [r3, #0]
    7378:	46c0      	nop			; (mov r8, r8)
    737a:	4b1d      	ldr	r3, [pc, #116]	; (73f0 <HAL_SPISend+0x8c>)
    737c:	0018      	movs	r0, r3
    737e:	4b1d      	ldr	r3, [pc, #116]	; (73f4 <HAL_SPISend+0x90>)
    7380:	4798      	blx	r3
    7382:	0003      	movs	r3, r0
    7384:	001a      	movs	r2, r3
    7386:	2301      	movs	r3, #1
    7388:	4053      	eors	r3, r2
    738a:	b2db      	uxtb	r3, r3
    738c:	2b00      	cmp	r3, #0
    738e:	d1f4      	bne.n	737a <HAL_SPISend+0x16>
    7390:	1dfb      	adds	r3, r7, #7
    7392:	781b      	ldrb	r3, [r3, #0]
    7394:	b29a      	uxth	r2, r3
    7396:	4b16      	ldr	r3, [pc, #88]	; (73f0 <HAL_SPISend+0x8c>)
    7398:	0011      	movs	r1, r2
    739a:	0018      	movs	r0, r3
    739c:	4b16      	ldr	r3, [pc, #88]	; (73f8 <HAL_SPISend+0x94>)
    739e:	4798      	blx	r3
    73a0:	46c0      	nop			; (mov r8, r8)
    73a2:	4b13      	ldr	r3, [pc, #76]	; (73f0 <HAL_SPISend+0x8c>)
    73a4:	0018      	movs	r0, r3
    73a6:	4b15      	ldr	r3, [pc, #84]	; (73fc <HAL_SPISend+0x98>)
    73a8:	4798      	blx	r3
    73aa:	0003      	movs	r3, r0
    73ac:	001a      	movs	r2, r3
    73ae:	2301      	movs	r3, #1
    73b0:	4053      	eors	r3, r2
    73b2:	b2db      	uxtb	r3, r3
    73b4:	2b00      	cmp	r3, #0
    73b6:	d1f4      	bne.n	73a2 <HAL_SPISend+0x3e>
    73b8:	46c0      	nop			; (mov r8, r8)
    73ba:	4b0d      	ldr	r3, [pc, #52]	; (73f0 <HAL_SPISend+0x8c>)
    73bc:	0018      	movs	r0, r3
    73be:	4b10      	ldr	r3, [pc, #64]	; (7400 <HAL_SPISend+0x9c>)
    73c0:	4798      	blx	r3
    73c2:	0003      	movs	r3, r0
    73c4:	001a      	movs	r2, r3
    73c6:	2301      	movs	r3, #1
    73c8:	4053      	eors	r3, r2
    73ca:	b2db      	uxtb	r3, r3
    73cc:	2b00      	cmp	r3, #0
    73ce:	d1f4      	bne.n	73ba <HAL_SPISend+0x56>
    73d0:	230e      	movs	r3, #14
    73d2:	18fa      	adds	r2, r7, r3
    73d4:	4b06      	ldr	r3, [pc, #24]	; (73f0 <HAL_SPISend+0x8c>)
    73d6:	0011      	movs	r1, r2
    73d8:	0018      	movs	r0, r3
    73da:	4b0a      	ldr	r3, [pc, #40]	; (7404 <HAL_SPISend+0xa0>)
    73dc:	4798      	blx	r3
    73de:	230e      	movs	r3, #14
    73e0:	18fb      	adds	r3, r7, r3
    73e2:	881b      	ldrh	r3, [r3, #0]
    73e4:	b2db      	uxtb	r3, r3
    73e6:	0018      	movs	r0, r3
    73e8:	46bd      	mov	sp, r7
    73ea:	b004      	add	sp, #16
    73ec:	bd80      	pop	{r7, pc}
    73ee:	46c0      	nop			; (mov r8, r8)
    73f0:	20000b40 	.word	0x20000b40
    73f4:	00006e29 	.word	0x00006e29
    73f8:	00006e79 	.word	0x00006e79
    73fc:	00006e01 	.word	0x00006e01
    7400:	00006e51 	.word	0x00006e51
    7404:	00006ec1 	.word	0x00006ec1

00007408 <HAL_RegisterDioInterruptHandler>:
    7408:	b580      	push	{r7, lr}
    740a:	b082      	sub	sp, #8
    740c:	af00      	add	r7, sp, #0
    740e:	0002      	movs	r2, r0
    7410:	6039      	str	r1, [r7, #0]
    7412:	1dfb      	adds	r3, r7, #7
    7414:	701a      	strb	r2, [r3, #0]
    7416:	1dfb      	adds	r3, r7, #7
    7418:	781b      	ldrb	r3, [r3, #0]
    741a:	2b01      	cmp	r3, #1
    741c:	d002      	beq.n	7424 <HAL_RegisterDioInterruptHandler+0x1c>
    741e:	2b02      	cmp	r3, #2
    7420:	d004      	beq.n	742c <HAL_RegisterDioInterruptHandler+0x24>
    7422:	e007      	b.n	7434 <HAL_RegisterDioInterruptHandler+0x2c>
    7424:	4b05      	ldr	r3, [pc, #20]	; (743c <HAL_RegisterDioInterruptHandler+0x34>)
    7426:	683a      	ldr	r2, [r7, #0]
    7428:	601a      	str	r2, [r3, #0]
    742a:	e003      	b.n	7434 <HAL_RegisterDioInterruptHandler+0x2c>
    742c:	4b04      	ldr	r3, [pc, #16]	; (7440 <HAL_RegisterDioInterruptHandler+0x38>)
    742e:	683a      	ldr	r2, [r7, #0]
    7430:	601a      	str	r2, [r3, #0]
    7432:	46c0      	nop			; (mov r8, r8)
    7434:	46c0      	nop			; (mov r8, r8)
    7436:	46bd      	mov	sp, r7
    7438:	b002      	add	sp, #8
    743a:	bd80      	pop	{r7, pc}
    743c:	20000b38 	.word	0x20000b38
    7440:	20000b3c 	.word	0x20000b3c

00007444 <HAL_TCXOPowerOn>:
    7444:	b580      	push	{r7, lr}
    7446:	af00      	add	r7, sp, #0
    7448:	2101      	movs	r1, #1
    744a:	2009      	movs	r0, #9
    744c:	4b03      	ldr	r3, [pc, #12]	; (745c <HAL_TCXOPowerOn+0x18>)
    744e:	4798      	blx	r3
    7450:	2002      	movs	r0, #2
    7452:	4b03      	ldr	r3, [pc, #12]	; (7460 <HAL_TCXOPowerOn+0x1c>)
    7454:	4798      	blx	r3
    7456:	46c0      	nop			; (mov r8, r8)
    7458:	46bd      	mov	sp, r7
    745a:	bd80      	pop	{r7, pc}
    745c:	00006c09 	.word	0x00006c09
    7460:	000001a1 	.word	0x000001a1

00007464 <HAL_TCXOPowerOff>:
    7464:	b580      	push	{r7, lr}
    7466:	af00      	add	r7, sp, #0
    7468:	2100      	movs	r1, #0
    746a:	2009      	movs	r0, #9
    746c:	4b02      	ldr	r3, [pc, #8]	; (7478 <HAL_TCXOPowerOff+0x14>)
    746e:	4798      	blx	r3
    7470:	46c0      	nop			; (mov r8, r8)
    7472:	46bd      	mov	sp, r7
    7474:	bd80      	pop	{r7, pc}
    7476:	46c0      	nop			; (mov r8, r8)
    7478:	00006c09 	.word	0x00006c09

0000747c <system_interrupt_enter_critical_section>:
    747c:	b580      	push	{r7, lr}
    747e:	af00      	add	r7, sp, #0
    7480:	4b02      	ldr	r3, [pc, #8]	; (748c <system_interrupt_enter_critical_section+0x10>)
    7482:	4798      	blx	r3
    7484:	46c0      	nop			; (mov r8, r8)
    7486:	46bd      	mov	sp, r7
    7488:	bd80      	pop	{r7, pc}
    748a:	46c0      	nop			; (mov r8, r8)
    748c:	000001d1 	.word	0x000001d1

00007490 <system_interrupt_leave_critical_section>:
    7490:	b580      	push	{r7, lr}
    7492:	af00      	add	r7, sp, #0
    7494:	4b02      	ldr	r3, [pc, #8]	; (74a0 <system_interrupt_leave_critical_section+0x10>)
    7496:	4798      	blx	r3
    7498:	46c0      	nop			; (mov r8, r8)
    749a:	46bd      	mov	sp, r7
    749c:	bd80      	pop	{r7, pc}
    749e:	46c0      	nop			; (mov r8, r8)
    74a0:	00000225 	.word	0x00000225

000074a4 <system_enter_critical_section>:
    74a4:	b580      	push	{r7, lr}
    74a6:	af00      	add	r7, sp, #0
    74a8:	4b02      	ldr	r3, [pc, #8]	; (74b4 <system_enter_critical_section+0x10>)
    74aa:	4798      	blx	r3
    74ac:	46c0      	nop			; (mov r8, r8)
    74ae:	46bd      	mov	sp, r7
    74b0:	bd80      	pop	{r7, pc}
    74b2:	46c0      	nop			; (mov r8, r8)
    74b4:	0000747d 	.word	0x0000747d

000074b8 <system_leave_critical_section>:
    74b8:	b580      	push	{r7, lr}
    74ba:	af00      	add	r7, sp, #0
    74bc:	4b02      	ldr	r3, [pc, #8]	; (74c8 <system_leave_critical_section+0x10>)
    74be:	4798      	blx	r3
    74c0:	46c0      	nop			; (mov r8, r8)
    74c2:	46bd      	mov	sp, r7
    74c4:	bd80      	pop	{r7, pc}
    74c6:	46c0      	nop			; (mov r8, r8)
    74c8:	00007491 	.word	0x00007491

000074cc <AESInit>:
    74cc:	b580      	push	{r7, lr}
    74ce:	af00      	add	r7, sp, #0
    74d0:	4b08      	ldr	r3, [pc, #32]	; (74f4 <AESInit+0x28>)
    74d2:	0018      	movs	r0, r3
    74d4:	4b08      	ldr	r3, [pc, #32]	; (74f8 <AESInit+0x2c>)
    74d6:	4798      	blx	r3
    74d8:	4a06      	ldr	r2, [pc, #24]	; (74f4 <AESInit+0x28>)
    74da:	4908      	ldr	r1, [pc, #32]	; (74fc <AESInit+0x30>)
    74dc:	4b08      	ldr	r3, [pc, #32]	; (7500 <AESInit+0x34>)
    74de:	0018      	movs	r0, r3
    74e0:	4b08      	ldr	r3, [pc, #32]	; (7504 <AESInit+0x38>)
    74e2:	4798      	blx	r3
    74e4:	4b06      	ldr	r3, [pc, #24]	; (7500 <AESInit+0x34>)
    74e6:	0018      	movs	r0, r3
    74e8:	4b07      	ldr	r3, [pc, #28]	; (7508 <AESInit+0x3c>)
    74ea:	4798      	blx	r3
    74ec:	46c0      	nop			; (mov r8, r8)
    74ee:	46bd      	mov	sp, r7
    74f0:	bd80      	pop	{r7, pc}
    74f2:	46c0      	nop			; (mov r8, r8)
    74f4:	20000d5c 	.word	0x20000d5c
    74f8:	00000679 	.word	0x00000679
    74fc:	42003400 	.word	0x42003400
    7500:	20000d68 	.word	0x20000d68
    7504:	000006c1 	.word	0x000006c1
    7508:	000006fd 	.word	0x000006fd

0000750c <system_interrupt_enable>:
    750c:	b580      	push	{r7, lr}
    750e:	b082      	sub	sp, #8
    7510:	af00      	add	r7, sp, #0
    7512:	0002      	movs	r2, r0
    7514:	1dfb      	adds	r3, r7, #7
    7516:	701a      	strb	r2, [r3, #0]
    7518:	4b06      	ldr	r3, [pc, #24]	; (7534 <system_interrupt_enable+0x28>)
    751a:	1dfa      	adds	r2, r7, #7
    751c:	7812      	ldrb	r2, [r2, #0]
    751e:	0011      	movs	r1, r2
    7520:	221f      	movs	r2, #31
    7522:	400a      	ands	r2, r1
    7524:	2101      	movs	r1, #1
    7526:	4091      	lsls	r1, r2
    7528:	000a      	movs	r2, r1
    752a:	601a      	str	r2, [r3, #0]
    752c:	46c0      	nop			; (mov r8, r8)
    752e:	46bd      	mov	sp, r7
    7530:	b002      	add	sp, #8
    7532:	bd80      	pop	{r7, pc}
    7534:	e000e100 	.word	0xe000e100

00007538 <i2c_master_is_syncing>:
    7538:	b580      	push	{r7, lr}
    753a:	b084      	sub	sp, #16
    753c:	af00      	add	r7, sp, #0
    753e:	6078      	str	r0, [r7, #4]
    7540:	687b      	ldr	r3, [r7, #4]
    7542:	681b      	ldr	r3, [r3, #0]
    7544:	60fb      	str	r3, [r7, #12]
    7546:	68fb      	ldr	r3, [r7, #12]
    7548:	69db      	ldr	r3, [r3, #28]
    754a:	2207      	movs	r2, #7
    754c:	4013      	ands	r3, r2
    754e:	1e5a      	subs	r2, r3, #1
    7550:	4193      	sbcs	r3, r2
    7552:	b2db      	uxtb	r3, r3
    7554:	0018      	movs	r0, r3
    7556:	46bd      	mov	sp, r7
    7558:	b004      	add	sp, #16
    755a:	bd80      	pop	{r7, pc}

0000755c <_i2c_master_wait_for_sync>:
    755c:	b580      	push	{r7, lr}
    755e:	b082      	sub	sp, #8
    7560:	af00      	add	r7, sp, #0
    7562:	6078      	str	r0, [r7, #4]
    7564:	46c0      	nop			; (mov r8, r8)
    7566:	687b      	ldr	r3, [r7, #4]
    7568:	0018      	movs	r0, r3
    756a:	4b04      	ldr	r3, [pc, #16]	; (757c <_i2c_master_wait_for_sync+0x20>)
    756c:	4798      	blx	r3
    756e:	1e03      	subs	r3, r0, #0
    7570:	d1f9      	bne.n	7566 <_i2c_master_wait_for_sync+0xa>
    7572:	46c0      	nop			; (mov r8, r8)
    7574:	46bd      	mov	sp, r7
    7576:	b002      	add	sp, #8
    7578:	bd80      	pop	{r7, pc}
    757a:	46c0      	nop			; (mov r8, r8)
    757c:	00007539 	.word	0x00007539

00007580 <i2c_master_get_config_defaults>:
    7580:	b580      	push	{r7, lr}
    7582:	b082      	sub	sp, #8
    7584:	af00      	add	r7, sp, #0
    7586:	6078      	str	r0, [r7, #4]
    7588:	687b      	ldr	r3, [r7, #4]
    758a:	2264      	movs	r2, #100	; 0x64
    758c:	601a      	str	r2, [r3, #0]
    758e:	687b      	ldr	r3, [r7, #4]
    7590:	4a1b      	ldr	r2, [pc, #108]	; (7600 <i2c_master_get_config_defaults+0x80>)
    7592:	605a      	str	r2, [r3, #4]
    7594:	687b      	ldr	r3, [r7, #4]
    7596:	2200      	movs	r2, #0
    7598:	609a      	str	r2, [r3, #8]
    759a:	687b      	ldr	r3, [r7, #4]
    759c:	2200      	movs	r2, #0
    759e:	731a      	strb	r2, [r3, #12]
    75a0:	687b      	ldr	r3, [r7, #4]
    75a2:	2200      	movs	r2, #0
    75a4:	761a      	strb	r2, [r3, #24]
    75a6:	687b      	ldr	r3, [r7, #4]
    75a8:	2280      	movs	r2, #128	; 0x80
    75aa:	0392      	lsls	r2, r2, #14
    75ac:	611a      	str	r2, [r3, #16]
    75ae:	687b      	ldr	r3, [r7, #4]
    75b0:	2201      	movs	r2, #1
    75b2:	4252      	negs	r2, r2
    75b4:	82da      	strh	r2, [r3, #22]
    75b6:	687b      	ldr	r3, [r7, #4]
    75b8:	2201      	movs	r2, #1
    75ba:	4252      	negs	r2, r2
    75bc:	829a      	strh	r2, [r3, #20]
    75be:	687b      	ldr	r3, [r7, #4]
    75c0:	2200      	movs	r2, #0
    75c2:	61da      	str	r2, [r3, #28]
    75c4:	687b      	ldr	r3, [r7, #4]
    75c6:	2200      	movs	r2, #0
    75c8:	621a      	str	r2, [r3, #32]
    75ca:	687b      	ldr	r3, [r7, #4]
    75cc:	2224      	movs	r2, #36	; 0x24
    75ce:	2100      	movs	r1, #0
    75d0:	5499      	strb	r1, [r3, r2]
    75d2:	687b      	ldr	r3, [r7, #4]
    75d4:	2200      	movs	r2, #0
    75d6:	629a      	str	r2, [r3, #40]	; 0x28
    75d8:	687b      	ldr	r3, [r7, #4]
    75da:	222c      	movs	r2, #44	; 0x2c
    75dc:	2100      	movs	r1, #0
    75de:	5499      	strb	r1, [r3, r2]
    75e0:	687b      	ldr	r3, [r7, #4]
    75e2:	222d      	movs	r2, #45	; 0x2d
    75e4:	2100      	movs	r1, #0
    75e6:	5499      	strb	r1, [r3, r2]
    75e8:	687b      	ldr	r3, [r7, #4]
    75ea:	222e      	movs	r2, #46	; 0x2e
    75ec:	2100      	movs	r1, #0
    75ee:	5499      	strb	r1, [r3, r2]
    75f0:	687b      	ldr	r3, [r7, #4]
    75f2:	22d7      	movs	r2, #215	; 0xd7
    75f4:	861a      	strh	r2, [r3, #48]	; 0x30
    75f6:	46c0      	nop			; (mov r8, r8)
    75f8:	46bd      	mov	sp, r7
    75fa:	b002      	add	sp, #8
    75fc:	bd80      	pop	{r7, pc}
    75fe:	46c0      	nop			; (mov r8, r8)
    7600:	00000d48 	.word	0x00000d48

00007604 <i2c_master_enable>:
    7604:	b580      	push	{r7, lr}
    7606:	b084      	sub	sp, #16
    7608:	af00      	add	r7, sp, #0
    760a:	6078      	str	r0, [r7, #4]
    760c:	687b      	ldr	r3, [r7, #4]
    760e:	681b      	ldr	r3, [r3, #0]
    7610:	60bb      	str	r3, [r7, #8]
    7612:	2300      	movs	r3, #0
    7614:	60fb      	str	r3, [r7, #12]
    7616:	687b      	ldr	r3, [r7, #4]
    7618:	0018      	movs	r0, r3
    761a:	4b14      	ldr	r3, [pc, #80]	; (766c <i2c_master_enable+0x68>)
    761c:	4798      	blx	r3
    761e:	68bb      	ldr	r3, [r7, #8]
    7620:	681b      	ldr	r3, [r3, #0]
    7622:	2202      	movs	r2, #2
    7624:	431a      	orrs	r2, r3
    7626:	68bb      	ldr	r3, [r7, #8]
    7628:	601a      	str	r2, [r3, #0]
    762a:	687b      	ldr	r3, [r7, #4]
    762c:	681b      	ldr	r3, [r3, #0]
    762e:	0018      	movs	r0, r3
    7630:	4b0f      	ldr	r3, [pc, #60]	; (7670 <i2c_master_enable+0x6c>)
    7632:	4798      	blx	r3
    7634:	0003      	movs	r3, r0
    7636:	0018      	movs	r0, r3
    7638:	4b0e      	ldr	r3, [pc, #56]	; (7674 <i2c_master_enable+0x70>)
    763a:	4798      	blx	r3
    763c:	e00c      	b.n	7658 <i2c_master_enable+0x54>
    763e:	68fb      	ldr	r3, [r7, #12]
    7640:	3301      	adds	r3, #1
    7642:	60fb      	str	r3, [r7, #12]
    7644:	687b      	ldr	r3, [r7, #4]
    7646:	88db      	ldrh	r3, [r3, #6]
    7648:	001a      	movs	r2, r3
    764a:	68fb      	ldr	r3, [r7, #12]
    764c:	429a      	cmp	r2, r3
    764e:	d803      	bhi.n	7658 <i2c_master_enable+0x54>
    7650:	68bb      	ldr	r3, [r7, #8]
    7652:	2210      	movs	r2, #16
    7654:	835a      	strh	r2, [r3, #26]
    7656:	e006      	b.n	7666 <i2c_master_enable+0x62>
    7658:	68bb      	ldr	r3, [r7, #8]
    765a:	8b5b      	ldrh	r3, [r3, #26]
    765c:	b29b      	uxth	r3, r3
    765e:	001a      	movs	r2, r3
    7660:	2310      	movs	r3, #16
    7662:	4013      	ands	r3, r2
    7664:	d0eb      	beq.n	763e <i2c_master_enable+0x3a>
    7666:	46bd      	mov	sp, r7
    7668:	b004      	add	sp, #16
    766a:	bd80      	pop	{r7, pc}
    766c:	0000755d 	.word	0x0000755d
    7670:	000031d5 	.word	0x000031d5
    7674:	0000750d 	.word	0x0000750d

00007678 <configure_i2c_master>:
    7678:	b580      	push	{r7, lr}
    767a:	b08e      	sub	sp, #56	; 0x38
    767c:	af00      	add	r7, sp, #0
    767e:	1d3b      	adds	r3, r7, #4
    7680:	0018      	movs	r0, r3
    7682:	4b0b      	ldr	r3, [pc, #44]	; (76b0 <configure_i2c_master+0x38>)
    7684:	4798      	blx	r3
    7686:	1d3b      	adds	r3, r7, #4
    7688:	4a0a      	ldr	r2, [pc, #40]	; (76b4 <configure_i2c_master+0x3c>)
    768a:	61da      	str	r2, [r3, #28]
    768c:	1d3b      	adds	r3, r7, #4
    768e:	4a0a      	ldr	r2, [pc, #40]	; (76b8 <configure_i2c_master+0x40>)
    7690:	621a      	str	r2, [r3, #32]
    7692:	1d3a      	adds	r2, r7, #4
    7694:	4909      	ldr	r1, [pc, #36]	; (76bc <configure_i2c_master+0x44>)
    7696:	4b0a      	ldr	r3, [pc, #40]	; (76c0 <configure_i2c_master+0x48>)
    7698:	0018      	movs	r0, r3
    769a:	4b0a      	ldr	r3, [pc, #40]	; (76c4 <configure_i2c_master+0x4c>)
    769c:	4798      	blx	r3
    769e:	4b08      	ldr	r3, [pc, #32]	; (76c0 <configure_i2c_master+0x48>)
    76a0:	0018      	movs	r0, r3
    76a2:	4b09      	ldr	r3, [pc, #36]	; (76c8 <configure_i2c_master+0x50>)
    76a4:	4798      	blx	r3
    76a6:	46c0      	nop			; (mov r8, r8)
    76a8:	46bd      	mov	sp, r7
    76aa:	b00e      	add	sp, #56	; 0x38
    76ac:	bd80      	pop	{r7, pc}
    76ae:	46c0      	nop			; (mov r8, r8)
    76b0:	00007581 	.word	0x00007581
    76b4:	00100002 	.word	0x00100002
    76b8:	00110002 	.word	0x00110002
    76bc:	42000400 	.word	0x42000400
    76c0:	20000f7c 	.word	0x20000f7c
    76c4:	00001fd9 	.word	0x00001fd9
    76c8:	00007605 	.word	0x00007605

000076cc <edbg_eui_read_eui64>:
    76cc:	b580      	push	{r7, lr}
    76ce:	b084      	sub	sp, #16
    76d0:	af00      	add	r7, sp, #0
    76d2:	6078      	str	r0, [r7, #4]
    76d4:	4ba6      	ldr	r3, [pc, #664]	; (7970 <edbg_eui_read_eui64+0x2a4>)
    76d6:	4798      	blx	r3
    76d8:	2300      	movs	r3, #0
    76da:	60fb      	str	r3, [r7, #12]
    76dc:	4ba5      	ldr	r3, [pc, #660]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    76de:	2200      	movs	r2, #0
    76e0:	801a      	strh	r2, [r3, #0]
    76e2:	4ba4      	ldr	r3, [pc, #656]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    76e4:	2200      	movs	r2, #0
    76e6:	805a      	strh	r2, [r3, #2]
    76e8:	4ba2      	ldr	r3, [pc, #648]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    76ea:	2200      	movs	r2, #0
    76ec:	605a      	str	r2, [r3, #4]
    76ee:	4ba1      	ldr	r3, [pc, #644]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    76f0:	2200      	movs	r2, #0
    76f2:	721a      	strb	r2, [r3, #8]
    76f4:	4b9f      	ldr	r3, [pc, #636]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    76f6:	2200      	movs	r2, #0
    76f8:	725a      	strb	r2, [r3, #9]
    76fa:	4b9e      	ldr	r3, [pc, #632]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    76fc:	2200      	movs	r2, #0
    76fe:	729a      	strb	r2, [r3, #10]
    7700:	e004      	b.n	770c <edbg_eui_read_eui64+0x40>
    7702:	68fb      	ldr	r3, [r7, #12]
    7704:	1c5a      	adds	r2, r3, #1
    7706:	60fa      	str	r2, [r7, #12]
    7708:	2b01      	cmp	r3, #1
    770a:	d008      	beq.n	771e <edbg_eui_read_eui64+0x52>
    770c:	4a99      	ldr	r2, [pc, #612]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    770e:	4b9a      	ldr	r3, [pc, #616]	; (7978 <edbg_eui_read_eui64+0x2ac>)
    7710:	0011      	movs	r1, r2
    7712:	0018      	movs	r0, r3
    7714:	4b99      	ldr	r3, [pc, #612]	; (797c <edbg_eui_read_eui64+0x2b0>)
    7716:	4798      	blx	r3
    7718:	1e03      	subs	r3, r0, #0
    771a:	d1f2      	bne.n	7702 <edbg_eui_read_eui64+0x36>
    771c:	e000      	b.n	7720 <edbg_eui_read_eui64+0x54>
    771e:	46c0      	nop			; (mov r8, r8)
    7720:	2005      	movs	r0, #5
    7722:	4b97      	ldr	r3, [pc, #604]	; (7980 <edbg_eui_read_eui64+0x2b4>)
    7724:	4798      	blx	r3
    7726:	4b93      	ldr	r3, [pc, #588]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    7728:	2260      	movs	r2, #96	; 0x60
    772a:	801a      	strh	r2, [r3, #0]
    772c:	4b91      	ldr	r3, [pc, #580]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    772e:	2202      	movs	r2, #2
    7730:	805a      	strh	r2, [r3, #2]
    7732:	4b90      	ldr	r3, [pc, #576]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    7734:	4a93      	ldr	r2, [pc, #588]	; (7984 <edbg_eui_read_eui64+0x2b8>)
    7736:	605a      	str	r2, [r3, #4]
    7738:	4b8e      	ldr	r3, [pc, #568]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    773a:	2200      	movs	r2, #0
    773c:	721a      	strb	r2, [r3, #8]
    773e:	4b8d      	ldr	r3, [pc, #564]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    7740:	2200      	movs	r2, #0
    7742:	725a      	strb	r2, [r3, #9]
    7744:	4b8b      	ldr	r3, [pc, #556]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    7746:	2200      	movs	r2, #0
    7748:	729a      	strb	r2, [r3, #10]
    774a:	4b89      	ldr	r3, [pc, #548]	; (7970 <edbg_eui_read_eui64+0x2a4>)
    774c:	4798      	blx	r3
    774e:	230b      	movs	r3, #11
    7750:	18fb      	adds	r3, r7, r3
    7752:	2200      	movs	r2, #0
    7754:	701a      	strb	r2, [r3, #0]
    7756:	e00c      	b.n	7772 <edbg_eui_read_eui64+0xa6>
    7758:	230b      	movs	r3, #11
    775a:	18fb      	adds	r3, r7, r3
    775c:	781b      	ldrb	r3, [r3, #0]
    775e:	4a8a      	ldr	r2, [pc, #552]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    7760:	2100      	movs	r1, #0
    7762:	54d1      	strb	r1, [r2, r3]
    7764:	230b      	movs	r3, #11
    7766:	18fb      	adds	r3, r7, r3
    7768:	781a      	ldrb	r2, [r3, #0]
    776a:	230b      	movs	r3, #11
    776c:	18fb      	adds	r3, r7, r3
    776e:	3201      	adds	r2, #1
    7770:	701a      	strb	r2, [r3, #0]
    7772:	230b      	movs	r3, #11
    7774:	18fb      	adds	r3, r7, r3
    7776:	781b      	ldrb	r3, [r3, #0]
    7778:	2b1f      	cmp	r3, #31
    777a:	d9ed      	bls.n	7758 <edbg_eui_read_eui64+0x8c>
    777c:	4b7d      	ldr	r3, [pc, #500]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    777e:	2204      	movs	r2, #4
    7780:	805a      	strh	r2, [r3, #2]
    7782:	4b7c      	ldr	r3, [pc, #496]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    7784:	4a80      	ldr	r2, [pc, #512]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    7786:	605a      	str	r2, [r3, #4]
    7788:	e004      	b.n	7794 <edbg_eui_read_eui64+0xc8>
    778a:	68fb      	ldr	r3, [r7, #12]
    778c:	1c5a      	adds	r2, r3, #1
    778e:	60fa      	str	r2, [r7, #12]
    7790:	2b01      	cmp	r3, #1
    7792:	d008      	beq.n	77a6 <edbg_eui_read_eui64+0xda>
    7794:	4a77      	ldr	r2, [pc, #476]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    7796:	4b78      	ldr	r3, [pc, #480]	; (7978 <edbg_eui_read_eui64+0x2ac>)
    7798:	0011      	movs	r1, r2
    779a:	0018      	movs	r0, r3
    779c:	4b7b      	ldr	r3, [pc, #492]	; (798c <edbg_eui_read_eui64+0x2c0>)
    779e:	4798      	blx	r3
    77a0:	1e03      	subs	r3, r0, #0
    77a2:	d1f2      	bne.n	778a <edbg_eui_read_eui64+0xbe>
    77a4:	e000      	b.n	77a8 <edbg_eui_read_eui64+0xdc>
    77a6:	46c0      	nop			; (mov r8, r8)
    77a8:	230b      	movs	r3, #11
    77aa:	18fb      	adds	r3, r7, r3
    77ac:	2200      	movs	r2, #0
    77ae:	701a      	strb	r2, [r3, #0]
    77b0:	e00c      	b.n	77cc <edbg_eui_read_eui64+0x100>
    77b2:	230b      	movs	r3, #11
    77b4:	18fb      	adds	r3, r7, r3
    77b6:	781b      	ldrb	r3, [r3, #0]
    77b8:	4a73      	ldr	r2, [pc, #460]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    77ba:	2100      	movs	r1, #0
    77bc:	54d1      	strb	r1, [r2, r3]
    77be:	230b      	movs	r3, #11
    77c0:	18fb      	adds	r3, r7, r3
    77c2:	781a      	ldrb	r2, [r3, #0]
    77c4:	230b      	movs	r3, #11
    77c6:	18fb      	adds	r3, r7, r3
    77c8:	3201      	adds	r2, #1
    77ca:	701a      	strb	r2, [r3, #0]
    77cc:	230b      	movs	r3, #11
    77ce:	18fb      	adds	r3, r7, r3
    77d0:	781b      	ldrb	r3, [r3, #0]
    77d2:	2b1f      	cmp	r3, #31
    77d4:	d9ed      	bls.n	77b2 <edbg_eui_read_eui64+0xe6>
    77d6:	4b67      	ldr	r3, [pc, #412]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    77d8:	2208      	movs	r2, #8
    77da:	805a      	strh	r2, [r3, #2]
    77dc:	4b6a      	ldr	r3, [pc, #424]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    77de:	2203      	movs	r2, #3
    77e0:	701a      	strb	r2, [r3, #0]
    77e2:	4b69      	ldr	r3, [pc, #420]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    77e4:	2207      	movs	r2, #7
    77e6:	705a      	strb	r2, [r3, #1]
    77e8:	4b67      	ldr	r3, [pc, #412]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    77ea:	2202      	movs	r2, #2
    77ec:	709a      	strb	r2, [r3, #2]
    77ee:	4b66      	ldr	r3, [pc, #408]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    77f0:	2280      	movs	r2, #128	; 0x80
    77f2:	70da      	strb	r2, [r3, #3]
    77f4:	4b64      	ldr	r3, [pc, #400]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    77f6:	2200      	movs	r2, #0
    77f8:	711a      	strb	r2, [r3, #4]
    77fa:	4b63      	ldr	r3, [pc, #396]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    77fc:	2200      	movs	r2, #0
    77fe:	715a      	strb	r2, [r3, #5]
    7800:	4b61      	ldr	r3, [pc, #388]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    7802:	2209      	movs	r2, #9
    7804:	719a      	strb	r2, [r3, #6]
    7806:	4b60      	ldr	r3, [pc, #384]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    7808:	22ad      	movs	r2, #173	; 0xad
    780a:	71da      	strb	r2, [r3, #7]
    780c:	4b59      	ldr	r3, [pc, #356]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    780e:	4a5e      	ldr	r2, [pc, #376]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    7810:	605a      	str	r2, [r3, #4]
    7812:	e004      	b.n	781e <edbg_eui_read_eui64+0x152>
    7814:	68fb      	ldr	r3, [r7, #12]
    7816:	1c5a      	adds	r2, r3, #1
    7818:	60fa      	str	r2, [r7, #12]
    781a:	2b01      	cmp	r3, #1
    781c:	d008      	beq.n	7830 <edbg_eui_read_eui64+0x164>
    781e:	4a55      	ldr	r2, [pc, #340]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    7820:	4b55      	ldr	r3, [pc, #340]	; (7978 <edbg_eui_read_eui64+0x2ac>)
    7822:	0011      	movs	r1, r2
    7824:	0018      	movs	r0, r3
    7826:	4b55      	ldr	r3, [pc, #340]	; (797c <edbg_eui_read_eui64+0x2b0>)
    7828:	4798      	blx	r3
    782a:	1e03      	subs	r3, r0, #0
    782c:	d1f2      	bne.n	7814 <edbg_eui_read_eui64+0x148>
    782e:	e000      	b.n	7832 <edbg_eui_read_eui64+0x166>
    7830:	46c0      	nop			; (mov r8, r8)
    7832:	230b      	movs	r3, #11
    7834:	18fb      	adds	r3, r7, r3
    7836:	2200      	movs	r2, #0
    7838:	701a      	strb	r2, [r3, #0]
    783a:	e00c      	b.n	7856 <edbg_eui_read_eui64+0x18a>
    783c:	230b      	movs	r3, #11
    783e:	18fb      	adds	r3, r7, r3
    7840:	781b      	ldrb	r3, [r3, #0]
    7842:	4a51      	ldr	r2, [pc, #324]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    7844:	2100      	movs	r1, #0
    7846:	54d1      	strb	r1, [r2, r3]
    7848:	230b      	movs	r3, #11
    784a:	18fb      	adds	r3, r7, r3
    784c:	781a      	ldrb	r2, [r3, #0]
    784e:	230b      	movs	r3, #11
    7850:	18fb      	adds	r3, r7, r3
    7852:	3201      	adds	r2, #1
    7854:	701a      	strb	r2, [r3, #0]
    7856:	230b      	movs	r3, #11
    7858:	18fb      	adds	r3, r7, r3
    785a:	781b      	ldrb	r3, [r3, #0]
    785c:	2b1f      	cmp	r3, #31
    785e:	d9ed      	bls.n	783c <edbg_eui_read_eui64+0x170>
    7860:	4b44      	ldr	r3, [pc, #272]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    7862:	2201      	movs	r2, #1
    7864:	805a      	strh	r2, [r3, #2]
    7866:	4b43      	ldr	r3, [pc, #268]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    7868:	4a47      	ldr	r2, [pc, #284]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    786a:	605a      	str	r2, [r3, #4]
    786c:	2300      	movs	r3, #0
    786e:	60fb      	str	r3, [r7, #12]
    7870:	e004      	b.n	787c <edbg_eui_read_eui64+0x1b0>
    7872:	68fb      	ldr	r3, [r7, #12]
    7874:	1c5a      	adds	r2, r3, #1
    7876:	60fa      	str	r2, [r7, #12]
    7878:	2b01      	cmp	r3, #1
    787a:	d008      	beq.n	788e <edbg_eui_read_eui64+0x1c2>
    787c:	4a3d      	ldr	r2, [pc, #244]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    787e:	4b3e      	ldr	r3, [pc, #248]	; (7978 <edbg_eui_read_eui64+0x2ac>)
    7880:	0011      	movs	r1, r2
    7882:	0018      	movs	r0, r3
    7884:	4b41      	ldr	r3, [pc, #260]	; (798c <edbg_eui_read_eui64+0x2c0>)
    7886:	4798      	blx	r3
    7888:	1e03      	subs	r3, r0, #0
    788a:	d1f2      	bne.n	7872 <edbg_eui_read_eui64+0x1a6>
    788c:	e000      	b.n	7890 <edbg_eui_read_eui64+0x1c4>
    788e:	46c0      	nop			; (mov r8, r8)
    7890:	230b      	movs	r3, #11
    7892:	18fb      	adds	r3, r7, r3
    7894:	2200      	movs	r2, #0
    7896:	701a      	strb	r2, [r3, #0]
    7898:	e00c      	b.n	78b4 <edbg_eui_read_eui64+0x1e8>
    789a:	230b      	movs	r3, #11
    789c:	18fb      	adds	r3, r7, r3
    789e:	781b      	ldrb	r3, [r3, #0]
    78a0:	4a39      	ldr	r2, [pc, #228]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    78a2:	2100      	movs	r1, #0
    78a4:	54d1      	strb	r1, [r2, r3]
    78a6:	230b      	movs	r3, #11
    78a8:	18fb      	adds	r3, r7, r3
    78aa:	781a      	ldrb	r2, [r3, #0]
    78ac:	230b      	movs	r3, #11
    78ae:	18fb      	adds	r3, r7, r3
    78b0:	3201      	adds	r2, #1
    78b2:	701a      	strb	r2, [r3, #0]
    78b4:	230b      	movs	r3, #11
    78b6:	18fb      	adds	r3, r7, r3
    78b8:	781b      	ldrb	r3, [r3, #0]
    78ba:	2b1f      	cmp	r3, #31
    78bc:	d9ed      	bls.n	789a <edbg_eui_read_eui64+0x1ce>
    78be:	4b2d      	ldr	r3, [pc, #180]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    78c0:	2210      	movs	r2, #16
    78c2:	805a      	strh	r2, [r3, #2]
    78c4:	4b2b      	ldr	r3, [pc, #172]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    78c6:	4a30      	ldr	r2, [pc, #192]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    78c8:	605a      	str	r2, [r3, #4]
    78ca:	e004      	b.n	78d6 <edbg_eui_read_eui64+0x20a>
    78cc:	68fb      	ldr	r3, [r7, #12]
    78ce:	1c5a      	adds	r2, r3, #1
    78d0:	60fa      	str	r2, [r7, #12]
    78d2:	2b01      	cmp	r3, #1
    78d4:	d008      	beq.n	78e8 <edbg_eui_read_eui64+0x21c>
    78d6:	4a27      	ldr	r2, [pc, #156]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    78d8:	4b27      	ldr	r3, [pc, #156]	; (7978 <edbg_eui_read_eui64+0x2ac>)
    78da:	0011      	movs	r1, r2
    78dc:	0018      	movs	r0, r3
    78de:	4b2b      	ldr	r3, [pc, #172]	; (798c <edbg_eui_read_eui64+0x2c0>)
    78e0:	4798      	blx	r3
    78e2:	1e03      	subs	r3, r0, #0
    78e4:	d1f2      	bne.n	78cc <edbg_eui_read_eui64+0x200>
    78e6:	e000      	b.n	78ea <edbg_eui_read_eui64+0x21e>
    78e8:	46c0      	nop			; (mov r8, r8)
    78ea:	4b27      	ldr	r3, [pc, #156]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    78ec:	789a      	ldrb	r2, [r3, #2]
    78ee:	4b28      	ldr	r3, [pc, #160]	; (7990 <edbg_eui_read_eui64+0x2c4>)
    78f0:	71da      	strb	r2, [r3, #7]
    78f2:	4b25      	ldr	r3, [pc, #148]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    78f4:	78da      	ldrb	r2, [r3, #3]
    78f6:	4b26      	ldr	r3, [pc, #152]	; (7990 <edbg_eui_read_eui64+0x2c4>)
    78f8:	719a      	strb	r2, [r3, #6]
    78fa:	4b23      	ldr	r3, [pc, #140]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    78fc:	791a      	ldrb	r2, [r3, #4]
    78fe:	4b24      	ldr	r3, [pc, #144]	; (7990 <edbg_eui_read_eui64+0x2c4>)
    7900:	715a      	strb	r2, [r3, #5]
    7902:	4b21      	ldr	r3, [pc, #132]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    7904:	7a5a      	ldrb	r2, [r3, #9]
    7906:	4b22      	ldr	r3, [pc, #136]	; (7990 <edbg_eui_read_eui64+0x2c4>)
    7908:	711a      	strb	r2, [r3, #4]
    790a:	4b1f      	ldr	r3, [pc, #124]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    790c:	7a9a      	ldrb	r2, [r3, #10]
    790e:	4b20      	ldr	r3, [pc, #128]	; (7990 <edbg_eui_read_eui64+0x2c4>)
    7910:	70da      	strb	r2, [r3, #3]
    7912:	4b1d      	ldr	r3, [pc, #116]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    7914:	7ada      	ldrb	r2, [r3, #11]
    7916:	4b1e      	ldr	r3, [pc, #120]	; (7990 <edbg_eui_read_eui64+0x2c4>)
    7918:	709a      	strb	r2, [r3, #2]
    791a:	4b1b      	ldr	r3, [pc, #108]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    791c:	7b1a      	ldrb	r2, [r3, #12]
    791e:	4b1c      	ldr	r3, [pc, #112]	; (7990 <edbg_eui_read_eui64+0x2c4>)
    7920:	705a      	strb	r2, [r3, #1]
    7922:	4b19      	ldr	r3, [pc, #100]	; (7988 <edbg_eui_read_eui64+0x2bc>)
    7924:	7b5a      	ldrb	r2, [r3, #13]
    7926:	4b1a      	ldr	r3, [pc, #104]	; (7990 <edbg_eui_read_eui64+0x2c4>)
    7928:	701a      	strb	r2, [r3, #0]
    792a:	4b12      	ldr	r3, [pc, #72]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    792c:	2201      	movs	r2, #1
    792e:	805a      	strh	r2, [r3, #2]
    7930:	4b10      	ldr	r3, [pc, #64]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    7932:	2202      	movs	r2, #2
    7934:	605a      	str	r2, [r3, #4]
    7936:	e004      	b.n	7942 <edbg_eui_read_eui64+0x276>
    7938:	68fb      	ldr	r3, [r7, #12]
    793a:	1c5a      	adds	r2, r3, #1
    793c:	60fa      	str	r2, [r7, #12]
    793e:	2b01      	cmp	r3, #1
    7940:	d008      	beq.n	7954 <edbg_eui_read_eui64+0x288>
    7942:	4a0c      	ldr	r2, [pc, #48]	; (7974 <edbg_eui_read_eui64+0x2a8>)
    7944:	4b0c      	ldr	r3, [pc, #48]	; (7978 <edbg_eui_read_eui64+0x2ac>)
    7946:	0011      	movs	r1, r2
    7948:	0018      	movs	r0, r3
    794a:	4b0c      	ldr	r3, [pc, #48]	; (797c <edbg_eui_read_eui64+0x2b0>)
    794c:	4798      	blx	r3
    794e:	1e03      	subs	r3, r0, #0
    7950:	d1f2      	bne.n	7938 <edbg_eui_read_eui64+0x26c>
    7952:	e000      	b.n	7956 <edbg_eui_read_eui64+0x28a>
    7954:	46c0      	nop			; (mov r8, r8)
    7956:	687a      	ldr	r2, [r7, #4]
    7958:	4b0d      	ldr	r3, [pc, #52]	; (7990 <edbg_eui_read_eui64+0x2c4>)
    795a:	0010      	movs	r0, r2
    795c:	0019      	movs	r1, r3
    795e:	2308      	movs	r3, #8
    7960:	001a      	movs	r2, r3
    7962:	4b0c      	ldr	r3, [pc, #48]	; (7994 <edbg_eui_read_eui64+0x2c8>)
    7964:	4798      	blx	r3
    7966:	46c0      	nop			; (mov r8, r8)
    7968:	46bd      	mov	sp, r7
    796a:	b004      	add	sp, #16
    796c:	bd80      	pop	{r7, pc}
    796e:	46c0      	nop			; (mov r8, r8)
    7970:	00007679 	.word	0x00007679
    7974:	20000f70 	.word	0x20000f70
    7978:	20000f7c 	.word	0x20000f7c
    797c:	0000266d 	.word	0x0000266d
    7980:	000001a1 	.word	0x000001a1
    7984:	2000000c 	.word	0x2000000c
    7988:	20000e70 	.word	0x20000e70
    798c:	000024b5 	.word	0x000024b5
    7990:	20000010 	.word	0x20000010
    7994:	00017715 	.word	0x00017715

00007998 <PDS_Init>:
    7998:	b590      	push	{r4, r7, lr}
    799a:	b083      	sub	sp, #12
    799c:	af00      	add	r7, sp, #0
    799e:	1dfc      	adds	r4, r7, #7
    79a0:	4b06      	ldr	r3, [pc, #24]	; (79bc <PDS_Init+0x24>)
    79a2:	4798      	blx	r3
    79a4:	0003      	movs	r3, r0
    79a6:	7023      	strb	r3, [r4, #0]
    79a8:	4b05      	ldr	r3, [pc, #20]	; (79c0 <PDS_Init+0x28>)
    79aa:	2200      	movs	r2, #0
    79ac:	701a      	strb	r2, [r3, #0]
    79ae:	1dfb      	adds	r3, r7, #7
    79b0:	781b      	ldrb	r3, [r3, #0]
    79b2:	0018      	movs	r0, r3
    79b4:	46bd      	mov	sp, r7
    79b6:	b003      	add	sp, #12
    79b8:	bd90      	pop	{r4, r7, pc}
    79ba:	46c0      	nop			; (mov r8, r8)
    79bc:	00007c15 	.word	0x00007c15
    79c0:	20000b4c 	.word	0x20000b4c

000079c4 <pdsNvmInit>:
    79c4:	b590      	push	{r4, r7, lr}
    79c6:	b087      	sub	sp, #28
    79c8:	af00      	add	r7, sp, #0
    79ca:	2317      	movs	r3, #23
    79cc:	18fb      	adds	r3, r7, r3
    79ce:	2200      	movs	r2, #0
    79d0:	701a      	strb	r2, [r3, #0]
    79d2:	1d3b      	adds	r3, r7, #4
    79d4:	0018      	movs	r0, r3
    79d6:	4b11      	ldr	r3, [pc, #68]	; (7a1c <pdsNvmInit+0x58>)
    79d8:	4798      	blx	r3
    79da:	2316      	movs	r3, #22
    79dc:	18fc      	adds	r4, r7, r3
    79de:	2000      	movs	r0, #0
    79e0:	4b0f      	ldr	r3, [pc, #60]	; (7a20 <pdsNvmInit+0x5c>)
    79e2:	4798      	blx	r3
    79e4:	0003      	movs	r3, r0
    79e6:	7023      	strb	r3, [r4, #0]
    79e8:	2316      	movs	r3, #22
    79ea:	18fb      	adds	r3, r7, r3
    79ec:	781b      	ldrb	r3, [r3, #0]
    79ee:	b25b      	sxtb	r3, r3
    79f0:	2b00      	cmp	r3, #0
    79f2:	d001      	beq.n	79f8 <pdsNvmInit+0x34>
    79f4:	2302      	movs	r3, #2
    79f6:	e00c      	b.n	7a12 <pdsNvmInit+0x4e>
    79f8:	1d3b      	adds	r3, r7, #4
    79fa:	899b      	ldrh	r3, [r3, #12]
    79fc:	089b      	lsrs	r3, r3, #2
    79fe:	b29b      	uxth	r3, r3
    7a00:	021b      	lsls	r3, r3, #8
    7a02:	4a08      	ldr	r2, [pc, #32]	; (7a24 <pdsNvmInit+0x60>)
    7a04:	4293      	cmp	r3, r2
    7a06:	dc01      	bgt.n	7a0c <pdsNvmInit+0x48>
    7a08:	2304      	movs	r3, #4
    7a0a:	e002      	b.n	7a12 <pdsNvmInit+0x4e>
    7a0c:	2317      	movs	r3, #23
    7a0e:	18fb      	adds	r3, r7, r3
    7a10:	781b      	ldrb	r3, [r3, #0]
    7a12:	0018      	movs	r0, r3
    7a14:	46bd      	mov	sp, r7
    7a16:	b007      	add	sp, #28
    7a18:	bd90      	pop	{r4, r7, pc}
    7a1a:	46c0      	nop			; (mov r8, r8)
    7a1c:	000017d1 	.word	0x000017d1
    7a20:	0001083d 	.word	0x0001083d
    7a24:	00001fff 	.word	0x00001fff

00007a28 <pdsNvmRead>:
    7a28:	b590      	push	{r4, r7, lr}
    7a2a:	b087      	sub	sp, #28
    7a2c:	af00      	add	r7, sp, #0
    7a2e:	6039      	str	r1, [r7, #0]
    7a30:	0011      	movs	r1, r2
    7a32:	1dbb      	adds	r3, r7, #6
    7a34:	1c02      	adds	r2, r0, #0
    7a36:	801a      	strh	r2, [r3, #0]
    7a38:	1d3b      	adds	r3, r7, #4
    7a3a:	1c0a      	adds	r2, r1, #0
    7a3c:	801a      	strh	r2, [r3, #0]
    7a3e:	2316      	movs	r3, #22
    7a40:	18fb      	adds	r3, r7, r3
    7a42:	2200      	movs	r2, #0
    7a44:	701a      	strb	r2, [r3, #0]
    7a46:	1dbb      	adds	r3, r7, #6
    7a48:	881b      	ldrh	r3, [r3, #0]
    7a4a:	0018      	movs	r0, r3
    7a4c:	4b2c      	ldr	r3, [pc, #176]	; (7b00 <pdsNvmRead+0xd8>)
    7a4e:	4798      	blx	r3
    7a50:	0003      	movs	r3, r0
    7a52:	613b      	str	r3, [r7, #16]
    7a54:	1d3b      	adds	r3, r7, #4
    7a56:	881a      	ldrh	r2, [r3, #0]
    7a58:	2380      	movs	r3, #128	; 0x80
    7a5a:	005b      	lsls	r3, r3, #1
    7a5c:	429a      	cmp	r2, r3
    7a5e:	d111      	bne.n	7a84 <pdsNvmRead+0x5c>
    7a60:	1d3b      	adds	r3, r7, #4
    7a62:	881b      	ldrh	r3, [r3, #0]
    7a64:	683a      	ldr	r2, [r7, #0]
    7a66:	6939      	ldr	r1, [r7, #16]
    7a68:	2000      	movs	r0, #0
    7a6a:	4c26      	ldr	r4, [pc, #152]	; (7b04 <pdsNvmRead+0xdc>)
    7a6c:	47a0      	blx	r4
    7a6e:	0003      	movs	r3, r0
    7a70:	001a      	movs	r2, r3
    7a72:	2317      	movs	r3, #23
    7a74:	18fb      	adds	r3, r7, r3
    7a76:	701a      	strb	r2, [r3, #0]
    7a78:	2317      	movs	r3, #23
    7a7a:	18fb      	adds	r3, r7, r3
    7a7c:	781b      	ldrb	r3, [r3, #0]
    7a7e:	2b05      	cmp	r3, #5
    7a80:	d0ee      	beq.n	7a60 <pdsNvmRead+0x38>
    7a82:	e015      	b.n	7ab0 <pdsNvmRead+0x88>
    7a84:	1d3b      	adds	r3, r7, #4
    7a86:	1d3a      	adds	r2, r7, #4
    7a88:	8812      	ldrh	r2, [r2, #0]
    7a8a:	3204      	adds	r2, #4
    7a8c:	801a      	strh	r2, [r3, #0]
    7a8e:	1d3b      	adds	r3, r7, #4
    7a90:	881b      	ldrh	r3, [r3, #0]
    7a92:	683a      	ldr	r2, [r7, #0]
    7a94:	6939      	ldr	r1, [r7, #16]
    7a96:	2000      	movs	r0, #0
    7a98:	4c1a      	ldr	r4, [pc, #104]	; (7b04 <pdsNvmRead+0xdc>)
    7a9a:	47a0      	blx	r4
    7a9c:	0003      	movs	r3, r0
    7a9e:	001a      	movs	r2, r3
    7aa0:	2317      	movs	r3, #23
    7aa2:	18fb      	adds	r3, r7, r3
    7aa4:	701a      	strb	r2, [r3, #0]
    7aa6:	2317      	movs	r3, #23
    7aa8:	18fb      	adds	r3, r7, r3
    7aaa:	781b      	ldrb	r3, [r3, #0]
    7aac:	2b05      	cmp	r3, #5
    7aae:	d0ee      	beq.n	7a8e <pdsNvmRead+0x66>
    7ab0:	2317      	movs	r3, #23
    7ab2:	18fb      	adds	r3, r7, r3
    7ab4:	781b      	ldrb	r3, [r3, #0]
    7ab6:	2b00      	cmp	r3, #0
    7ab8:	d001      	beq.n	7abe <pdsNvmRead+0x96>
    7aba:	2302      	movs	r3, #2
    7abc:	e01c      	b.n	7af8 <pdsNvmRead+0xd0>
    7abe:	230e      	movs	r3, #14
    7ac0:	18fa      	adds	r2, r7, r3
    7ac2:	683b      	ldr	r3, [r7, #0]
    7ac4:	7819      	ldrb	r1, [r3, #0]
    7ac6:	785b      	ldrb	r3, [r3, #1]
    7ac8:	021b      	lsls	r3, r3, #8
    7aca:	430b      	orrs	r3, r1
    7acc:	8013      	strh	r3, [r2, #0]
    7ace:	683b      	ldr	r3, [r7, #0]
    7ad0:	789b      	ldrb	r3, [r3, #2]
    7ad2:	b29a      	uxth	r2, r3
    7ad4:	683b      	ldr	r3, [r7, #0]
    7ad6:	3304      	adds	r3, #4
    7ad8:	0019      	movs	r1, r3
    7ada:	0010      	movs	r0, r2
    7adc:	4b0a      	ldr	r3, [pc, #40]	; (7b08 <pdsNvmRead+0xe0>)
    7ade:	4798      	blx	r3
    7ae0:	0003      	movs	r3, r0
    7ae2:	001a      	movs	r2, r3
    7ae4:	230e      	movs	r3, #14
    7ae6:	18fb      	adds	r3, r7, r3
    7ae8:	881b      	ldrh	r3, [r3, #0]
    7aea:	4293      	cmp	r3, r2
    7aec:	d001      	beq.n	7af2 <pdsNvmRead+0xca>
    7aee:	2301      	movs	r3, #1
    7af0:	e002      	b.n	7af8 <pdsNvmRead+0xd0>
    7af2:	2316      	movs	r3, #22
    7af4:	18fb      	adds	r3, r7, r3
    7af6:	781b      	ldrb	r3, [r3, #0]
    7af8:	0018      	movs	r0, r3
    7afa:	46bd      	mov	sp, r7
    7afc:	b007      	add	sp, #28
    7afe:	bd90      	pop	{r4, r7, pc}
    7b00:	00007bf1 	.word	0x00007bf1
    7b04:	00010725 	.word	0x00010725
    7b08:	00007b81 	.word	0x00007b81

00007b0c <Crc16Ccitt>:
    7b0c:	b580      	push	{r7, lr}
    7b0e:	b082      	sub	sp, #8
    7b10:	af00      	add	r7, sp, #0
    7b12:	0002      	movs	r2, r0
    7b14:	1dbb      	adds	r3, r7, #6
    7b16:	801a      	strh	r2, [r3, #0]
    7b18:	1d7b      	adds	r3, r7, #5
    7b1a:	1c0a      	adds	r2, r1, #0
    7b1c:	701a      	strb	r2, [r3, #0]
    7b1e:	1dbb      	adds	r3, r7, #6
    7b20:	881b      	ldrh	r3, [r3, #0]
    7b22:	b2d9      	uxtb	r1, r3
    7b24:	1d7b      	adds	r3, r7, #5
    7b26:	1d7a      	adds	r2, r7, #5
    7b28:	7812      	ldrb	r2, [r2, #0]
    7b2a:	404a      	eors	r2, r1
    7b2c:	701a      	strb	r2, [r3, #0]
    7b2e:	1d7b      	adds	r3, r7, #5
    7b30:	781b      	ldrb	r3, [r3, #0]
    7b32:	011b      	lsls	r3, r3, #4
    7b34:	b25a      	sxtb	r2, r3
    7b36:	1d7b      	adds	r3, r7, #5
    7b38:	781b      	ldrb	r3, [r3, #0]
    7b3a:	b25b      	sxtb	r3, r3
    7b3c:	4053      	eors	r3, r2
    7b3e:	b25a      	sxtb	r2, r3
    7b40:	1d7b      	adds	r3, r7, #5
    7b42:	701a      	strb	r2, [r3, #0]
    7b44:	1d7b      	adds	r3, r7, #5
    7b46:	781b      	ldrb	r3, [r3, #0]
    7b48:	b29b      	uxth	r3, r3
    7b4a:	021b      	lsls	r3, r3, #8
    7b4c:	b29a      	uxth	r2, r3
    7b4e:	1dbb      	adds	r3, r7, #6
    7b50:	881b      	ldrh	r3, [r3, #0]
    7b52:	0a1b      	lsrs	r3, r3, #8
    7b54:	b29b      	uxth	r3, r3
    7b56:	4313      	orrs	r3, r2
    7b58:	b29a      	uxth	r2, r3
    7b5a:	1d7b      	adds	r3, r7, #5
    7b5c:	781b      	ldrb	r3, [r3, #0]
    7b5e:	091b      	lsrs	r3, r3, #4
    7b60:	b2db      	uxtb	r3, r3
    7b62:	b29b      	uxth	r3, r3
    7b64:	4053      	eors	r3, r2
    7b66:	b29a      	uxth	r2, r3
    7b68:	1d7b      	adds	r3, r7, #5
    7b6a:	781b      	ldrb	r3, [r3, #0]
    7b6c:	b29b      	uxth	r3, r3
    7b6e:	00db      	lsls	r3, r3, #3
    7b70:	b29b      	uxth	r3, r3
    7b72:	4053      	eors	r3, r2
    7b74:	b29b      	uxth	r3, r3
    7b76:	0018      	movs	r0, r3
    7b78:	46bd      	mov	sp, r7
    7b7a:	b002      	add	sp, #8
    7b7c:	bd80      	pop	{r7, pc}
	...

00007b80 <calculate_crc>:
    7b80:	b590      	push	{r4, r7, lr}
    7b82:	b085      	sub	sp, #20
    7b84:	af00      	add	r7, sp, #0
    7b86:	0002      	movs	r2, r0
    7b88:	6039      	str	r1, [r7, #0]
    7b8a:	1dbb      	adds	r3, r7, #6
    7b8c:	801a      	strh	r2, [r3, #0]
    7b8e:	230e      	movs	r3, #14
    7b90:	18fb      	adds	r3, r7, r3
    7b92:	2200      	movs	r2, #0
    7b94:	801a      	strh	r2, [r3, #0]
    7b96:	230c      	movs	r3, #12
    7b98:	18fb      	adds	r3, r7, r3
    7b9a:	2200      	movs	r2, #0
    7b9c:	801a      	strh	r2, [r3, #0]
    7b9e:	e017      	b.n	7bd0 <calculate_crc+0x50>
    7ba0:	230c      	movs	r3, #12
    7ba2:	18fb      	adds	r3, r7, r3
    7ba4:	881b      	ldrh	r3, [r3, #0]
    7ba6:	683a      	ldr	r2, [r7, #0]
    7ba8:	18d3      	adds	r3, r2, r3
    7baa:	781a      	ldrb	r2, [r3, #0]
    7bac:	230e      	movs	r3, #14
    7bae:	18fc      	adds	r4, r7, r3
    7bb0:	230e      	movs	r3, #14
    7bb2:	18fb      	adds	r3, r7, r3
    7bb4:	881b      	ldrh	r3, [r3, #0]
    7bb6:	0011      	movs	r1, r2
    7bb8:	0018      	movs	r0, r3
    7bba:	4b0c      	ldr	r3, [pc, #48]	; (7bec <calculate_crc+0x6c>)
    7bbc:	4798      	blx	r3
    7bbe:	0003      	movs	r3, r0
    7bc0:	8023      	strh	r3, [r4, #0]
    7bc2:	230c      	movs	r3, #12
    7bc4:	18fb      	adds	r3, r7, r3
    7bc6:	881a      	ldrh	r2, [r3, #0]
    7bc8:	230c      	movs	r3, #12
    7bca:	18fb      	adds	r3, r7, r3
    7bcc:	3201      	adds	r2, #1
    7bce:	801a      	strh	r2, [r3, #0]
    7bd0:	230c      	movs	r3, #12
    7bd2:	18fa      	adds	r2, r7, r3
    7bd4:	1dbb      	adds	r3, r7, #6
    7bd6:	8812      	ldrh	r2, [r2, #0]
    7bd8:	881b      	ldrh	r3, [r3, #0]
    7bda:	429a      	cmp	r2, r3
    7bdc:	d3e0      	bcc.n	7ba0 <calculate_crc+0x20>
    7bde:	230e      	movs	r3, #14
    7be0:	18fb      	adds	r3, r7, r3
    7be2:	881b      	ldrh	r3, [r3, #0]
    7be4:	0018      	movs	r0, r3
    7be6:	46bd      	mov	sp, r7
    7be8:	b005      	add	sp, #20
    7bea:	bd90      	pop	{r4, r7, pc}
    7bec:	00007b0d 	.word	0x00007b0d

00007bf0 <nvmLogicalRowToPhysicalAddr>:
    7bf0:	b580      	push	{r7, lr}
    7bf2:	b082      	sub	sp, #8
    7bf4:	af00      	add	r7, sp, #0
    7bf6:	0002      	movs	r2, r0
    7bf8:	1dbb      	adds	r3, r7, #6
    7bfa:	801a      	strh	r2, [r3, #0]
    7bfc:	1dbb      	adds	r3, r7, #6
    7bfe:	881b      	ldrh	r3, [r3, #0]
    7c00:	2280      	movs	r2, #128	; 0x80
    7c02:	01d2      	lsls	r2, r2, #7
    7c04:	4694      	mov	ip, r2
    7c06:	4463      	add	r3, ip
    7c08:	021b      	lsls	r3, r3, #8
    7c0a:	0018      	movs	r0, r3
    7c0c:	46bd      	mov	sp, r7
    7c0e:	b002      	add	sp, #8
    7c10:	bd80      	pop	{r7, pc}
	...

00007c14 <pdsWlInit>:
    7c14:	b590      	push	{r4, r7, lr}
    7c16:	b0c5      	sub	sp, #276	; 0x114
    7c18:	af00      	add	r7, sp, #0
    7c1a:	2387      	movs	r3, #135	; 0x87
    7c1c:	005b      	lsls	r3, r3, #1
    7c1e:	18fc      	adds	r4, r7, r3
    7c20:	4b5f      	ldr	r3, [pc, #380]	; (7da0 <pdsWlInit+0x18c>)
    7c22:	4798      	blx	r3
    7c24:	0003      	movs	r3, r0
    7c26:	7023      	strb	r3, [r4, #0]
    7c28:	2387      	movs	r3, #135	; 0x87
    7c2a:	005b      	lsls	r3, r3, #1
    7c2c:	18fb      	adds	r3, r7, r3
    7c2e:	781b      	ldrb	r3, [r3, #0]
    7c30:	2b00      	cmp	r3, #0
    7c32:	d004      	beq.n	7c3e <pdsWlInit+0x2a>
    7c34:	2387      	movs	r3, #135	; 0x87
    7c36:	005b      	lsls	r3, r3, #1
    7c38:	18fb      	adds	r3, r7, r3
    7c3a:	781b      	ldrb	r3, [r3, #0]
    7c3c:	e0ac      	b.n	7d98 <pdsWlInit+0x184>
    7c3e:	2380      	movs	r3, #128	; 0x80
    7c40:	005a      	lsls	r2, r3, #1
    7c42:	4b58      	ldr	r3, [pc, #352]	; (7da4 <pdsWlInit+0x190>)
    7c44:	21ff      	movs	r1, #255	; 0xff
    7c46:	0018      	movs	r0, r3
    7c48:	4b57      	ldr	r3, [pc, #348]	; (7da8 <pdsWlInit+0x194>)
    7c4a:	4798      	blx	r3
    7c4c:	4b57      	ldr	r3, [pc, #348]	; (7dac <pdsWlInit+0x198>)
    7c4e:	221a      	movs	r2, #26
    7c50:	21ff      	movs	r1, #255	; 0xff
    7c52:	0018      	movs	r0, r3
    7c54:	4b54      	ldr	r3, [pc, #336]	; (7da8 <pdsWlInit+0x194>)
    7c56:	4798      	blx	r3
    7c58:	2380      	movs	r3, #128	; 0x80
    7c5a:	005a      	lsls	r2, r3, #1
    7c5c:	230c      	movs	r3, #12
    7c5e:	18fb      	adds	r3, r7, r3
    7c60:	2100      	movs	r1, #0
    7c62:	0018      	movs	r0, r3
    7c64:	4b50      	ldr	r3, [pc, #320]	; (7da8 <pdsWlInit+0x194>)
    7c66:	4798      	blx	r3
    7c68:	2310      	movs	r3, #16
    7c6a:	33ff      	adds	r3, #255	; 0xff
    7c6c:	18fb      	adds	r3, r7, r3
    7c6e:	2200      	movs	r2, #0
    7c70:	701a      	strb	r2, [r3, #0]
    7c72:	e087      	b.n	7d84 <pdsWlInit+0x170>
    7c74:	2310      	movs	r3, #16
    7c76:	33ff      	adds	r3, #255	; 0xff
    7c78:	18fb      	adds	r3, r7, r3
    7c7a:	781b      	ldrb	r3, [r3, #0]
    7c7c:	b298      	uxth	r0, r3
    7c7e:	2387      	movs	r3, #135	; 0x87
    7c80:	005b      	lsls	r3, r3, #1
    7c82:	18fc      	adds	r4, r7, r3
    7c84:	2380      	movs	r3, #128	; 0x80
    7c86:	005a      	lsls	r2, r3, #1
    7c88:	230c      	movs	r3, #12
    7c8a:	18fb      	adds	r3, r7, r3
    7c8c:	0019      	movs	r1, r3
    7c8e:	4b48      	ldr	r3, [pc, #288]	; (7db0 <pdsWlInit+0x19c>)
    7c90:	4798      	blx	r3
    7c92:	0003      	movs	r3, r0
    7c94:	7023      	strb	r3, [r4, #0]
    7c96:	2387      	movs	r3, #135	; 0x87
    7c98:	005b      	lsls	r3, r3, #1
    7c9a:	18fb      	adds	r3, r7, r3
    7c9c:	781b      	ldrb	r3, [r3, #0]
    7c9e:	2b00      	cmp	r3, #0
    7ca0:	d167      	bne.n	7d72 <pdsWlInit+0x15e>
    7ca2:	2310      	movs	r3, #16
    7ca4:	33ff      	adds	r3, #255	; 0xff
    7ca6:	18fb      	adds	r3, r7, r3
    7ca8:	781a      	ldrb	r2, [r3, #0]
    7caa:	4b42      	ldr	r3, [pc, #264]	; (7db4 <pdsWlInit+0x1a0>)
    7cac:	2188      	movs	r1, #136	; 0x88
    7cae:	0049      	lsls	r1, r1, #1
    7cb0:	468c      	mov	ip, r1
    7cb2:	44bc      	add	ip, r7
    7cb4:	4463      	add	r3, ip
    7cb6:	6899      	ldr	r1, [r3, #8]
    7cb8:	0a09      	lsrs	r1, r1, #8
    7cba:	7b1b      	ldrb	r3, [r3, #12]
    7cbc:	061b      	lsls	r3, r3, #24
    7cbe:	430b      	orrs	r3, r1
    7cc0:	0019      	movs	r1, r3
    7cc2:	4b38      	ldr	r3, [pc, #224]	; (7da4 <pdsWlInit+0x190>)
    7cc4:	00d2      	lsls	r2, r2, #3
    7cc6:	50d1      	str	r1, [r2, r3]
    7cc8:	2310      	movs	r3, #16
    7cca:	33ff      	adds	r3, #255	; 0xff
    7ccc:	18fb      	adds	r3, r7, r3
    7cce:	7819      	ldrb	r1, [r3, #0]
    7cd0:	4b38      	ldr	r3, [pc, #224]	; (7db4 <pdsWlInit+0x1a0>)
    7cd2:	2288      	movs	r2, #136	; 0x88
    7cd4:	0052      	lsls	r2, r2, #1
    7cd6:	4694      	mov	ip, r2
    7cd8:	44bc      	add	ip, r7
    7cda:	4463      	add	r3, ip
    7cdc:	79da      	ldrb	r2, [r3, #7]
    7cde:	7a1b      	ldrb	r3, [r3, #8]
    7ce0:	021b      	lsls	r3, r3, #8
    7ce2:	4313      	orrs	r3, r2
    7ce4:	b298      	uxth	r0, r3
    7ce6:	4a2f      	ldr	r2, [pc, #188]	; (7da4 <pdsWlInit+0x190>)
    7ce8:	00cb      	lsls	r3, r1, #3
    7cea:	18d3      	adds	r3, r2, r3
    7cec:	3304      	adds	r3, #4
    7cee:	1c02      	adds	r2, r0, #0
    7cf0:	801a      	strh	r2, [r3, #0]
    7cf2:	2310      	movs	r3, #16
    7cf4:	33ff      	adds	r3, #255	; 0xff
    7cf6:	18fb      	adds	r3, r7, r3
    7cf8:	781b      	ldrb	r3, [r3, #0]
    7cfa:	4a2a      	ldr	r2, [pc, #168]	; (7da4 <pdsWlInit+0x190>)
    7cfc:	00db      	lsls	r3, r3, #3
    7cfe:	18d3      	adds	r3, r2, r3
    7d00:	3306      	adds	r3, #6
    7d02:	2201      	movs	r2, #1
    7d04:	4252      	negs	r2, r2
    7d06:	801a      	strh	r2, [r3, #0]
    7d08:	4b2a      	ldr	r3, [pc, #168]	; (7db4 <pdsWlInit+0x1a0>)
    7d0a:	2288      	movs	r2, #136	; 0x88
    7d0c:	0052      	lsls	r2, r2, #1
    7d0e:	4694      	mov	ip, r2
    7d10:	44bc      	add	ip, r7
    7d12:	4463      	add	r3, ip
    7d14:	689a      	ldr	r2, [r3, #8]
    7d16:	0a12      	lsrs	r2, r2, #8
    7d18:	7b1b      	ldrb	r3, [r3, #12]
    7d1a:	061b      	lsls	r3, r3, #24
    7d1c:	4313      	orrs	r3, r2
    7d1e:	001a      	movs	r2, r3
    7d20:	4b25      	ldr	r3, [pc, #148]	; (7db8 <pdsWlInit+0x1a4>)
    7d22:	2188      	movs	r1, #136	; 0x88
    7d24:	0049      	lsls	r1, r1, #1
    7d26:	468c      	mov	ip, r1
    7d28:	44bc      	add	ip, r7
    7d2a:	4463      	add	r3, ip
    7d2c:	601a      	str	r2, [r3, #0]
    7d2e:	4b21      	ldr	r3, [pc, #132]	; (7db4 <pdsWlInit+0x1a0>)
    7d30:	2288      	movs	r2, #136	; 0x88
    7d32:	0052      	lsls	r2, r2, #1
    7d34:	4694      	mov	ip, r2
    7d36:	44bc      	add	ip, r7
    7d38:	4463      	add	r3, ip
    7d3a:	79da      	ldrb	r2, [r3, #7]
    7d3c:	7a1b      	ldrb	r3, [r3, #8]
    7d3e:	021b      	lsls	r3, r3, #8
    7d40:	4313      	orrs	r3, r2
    7d42:	b29a      	uxth	r2, r3
    7d44:	4b1c      	ldr	r3, [pc, #112]	; (7db8 <pdsWlInit+0x1a4>)
    7d46:	2188      	movs	r1, #136	; 0x88
    7d48:	0049      	lsls	r1, r1, #1
    7d4a:	468c      	mov	ip, r1
    7d4c:	44bc      	add	ip, r7
    7d4e:	4463      	add	r3, ip
    7d50:	809a      	strh	r2, [r3, #4]
    7d52:	2310      	movs	r3, #16
    7d54:	33ff      	adds	r3, #255	; 0xff
    7d56:	18fb      	adds	r3, r7, r3
    7d58:	781b      	ldrb	r3, [r3, #0]
    7d5a:	b29a      	uxth	r2, r3
    7d5c:	4b16      	ldr	r3, [pc, #88]	; (7db8 <pdsWlInit+0x1a4>)
    7d5e:	2188      	movs	r1, #136	; 0x88
    7d60:	0049      	lsls	r1, r1, #1
    7d62:	468c      	mov	ip, r1
    7d64:	44bc      	add	ip, r7
    7d66:	4463      	add	r3, ip
    7d68:	80da      	strh	r2, [r3, #6]
    7d6a:	1d3b      	adds	r3, r7, #4
    7d6c:	0018      	movs	r0, r3
    7d6e:	4b13      	ldr	r3, [pc, #76]	; (7dbc <pdsWlInit+0x1a8>)
    7d70:	4798      	blx	r3
    7d72:	2310      	movs	r3, #16
    7d74:	33ff      	adds	r3, #255	; 0xff
    7d76:	18fb      	adds	r3, r7, r3
    7d78:	781a      	ldrb	r2, [r3, #0]
    7d7a:	2310      	movs	r3, #16
    7d7c:	33ff      	adds	r3, #255	; 0xff
    7d7e:	18fb      	adds	r3, r7, r3
    7d80:	3201      	adds	r2, #1
    7d82:	701a      	strb	r2, [r3, #0]
    7d84:	2310      	movs	r3, #16
    7d86:	33ff      	adds	r3, #255	; 0xff
    7d88:	18fb      	adds	r3, r7, r3
    7d8a:	781b      	ldrb	r3, [r3, #0]
    7d8c:	2b1f      	cmp	r3, #31
    7d8e:	d800      	bhi.n	7d92 <pdsWlInit+0x17e>
    7d90:	e770      	b.n	7c74 <pdsWlInit+0x60>
    7d92:	4b0b      	ldr	r3, [pc, #44]	; (7dc0 <pdsWlInit+0x1ac>)
    7d94:	4798      	blx	r3
    7d96:	2300      	movs	r3, #0
    7d98:	0018      	movs	r0, r3
    7d9a:	46bd      	mov	sp, r7
    7d9c:	b045      	add	sp, #276	; 0x114
    7d9e:	bd90      	pop	{r4, r7, pc}
    7da0:	000079c5 	.word	0x000079c5
    7da4:	20000b50 	.word	0x20000b50
    7da8:	00017799 	.word	0x00017799
    7dac:	20000c50 	.word	0x20000c50
    7db0:	00007a29 	.word	0x00007a29
    7db4:	fffffefc 	.word	0xfffffefc
    7db8:	fffffef4 	.word	0xfffffef4
    7dbc:	00007ea1 	.word	0x00007ea1
    7dc0:	00007dc5 	.word	0x00007dc5

00007dc4 <pdsUpdateRowMap>:
    7dc4:	b580      	push	{r7, lr}
    7dc6:	b082      	sub	sp, #8
    7dc8:	af00      	add	r7, sp, #0
    7dca:	1dbb      	adds	r3, r7, #6
    7dcc:	2201      	movs	r2, #1
    7dce:	4252      	negs	r2, r2
    7dd0:	801a      	strh	r2, [r3, #0]
    7dd2:	1d3b      	adds	r3, r7, #4
    7dd4:	2200      	movs	r2, #0
    7dd6:	801a      	strh	r2, [r3, #0]
    7dd8:	1cbb      	adds	r3, r7, #2
    7dda:	2200      	movs	r2, #0
    7ddc:	801a      	strh	r2, [r3, #0]
    7dde:	e051      	b.n	7e84 <pdsUpdateRowMap+0xc0>
    7de0:	1d3b      	adds	r3, r7, #4
    7de2:	881a      	ldrh	r2, [r3, #0]
    7de4:	4b2b      	ldr	r3, [pc, #172]	; (7e94 <pdsUpdateRowMap+0xd0>)
    7de6:	0052      	lsls	r2, r2, #1
    7de8:	5ad3      	ldrh	r3, [r2, r3]
    7dea:	4a2b      	ldr	r2, [pc, #172]	; (7e98 <pdsUpdateRowMap+0xd4>)
    7dec:	4293      	cmp	r3, r2
    7dee:	d044      	beq.n	7e7a <pdsUpdateRowMap+0xb6>
    7df0:	1d3b      	adds	r3, r7, #4
    7df2:	881a      	ldrh	r2, [r3, #0]
    7df4:	4b27      	ldr	r3, [pc, #156]	; (7e94 <pdsUpdateRowMap+0xd0>)
    7df6:	0052      	lsls	r2, r2, #1
    7df8:	5ad3      	ldrh	r3, [r2, r3]
    7dfa:	001a      	movs	r2, r3
    7dfc:	1dbb      	adds	r3, r7, #6
    7dfe:	4927      	ldr	r1, [pc, #156]	; (7e9c <pdsUpdateRowMap+0xd8>)
    7e00:	00d2      	lsls	r2, r2, #3
    7e02:	188a      	adds	r2, r1, r2
    7e04:	3206      	adds	r2, #6
    7e06:	8812      	ldrh	r2, [r2, #0]
    7e08:	801a      	strh	r2, [r3, #0]
    7e0a:	1d3b      	adds	r3, r7, #4
    7e0c:	881a      	ldrh	r2, [r3, #0]
    7e0e:	4b21      	ldr	r3, [pc, #132]	; (7e94 <pdsUpdateRowMap+0xd0>)
    7e10:	0052      	lsls	r2, r2, #1
    7e12:	5ad3      	ldrh	r3, [r2, r3]
    7e14:	4a21      	ldr	r2, [pc, #132]	; (7e9c <pdsUpdateRowMap+0xd8>)
    7e16:	00db      	lsls	r3, r3, #3
    7e18:	18d3      	adds	r3, r2, r3
    7e1a:	3306      	adds	r3, #6
    7e1c:	2201      	movs	r2, #1
    7e1e:	4252      	negs	r2, r2
    7e20:	801a      	strh	r2, [r3, #0]
    7e22:	e025      	b.n	7e70 <pdsUpdateRowMap+0xac>
    7e24:	1dbb      	adds	r3, r7, #6
    7e26:	881a      	ldrh	r2, [r3, #0]
    7e28:	1cbb      	adds	r3, r7, #2
    7e2a:	491c      	ldr	r1, [pc, #112]	; (7e9c <pdsUpdateRowMap+0xd8>)
    7e2c:	00d2      	lsls	r2, r2, #3
    7e2e:	188a      	adds	r2, r1, r2
    7e30:	3206      	adds	r2, #6
    7e32:	8812      	ldrh	r2, [r2, #0]
    7e34:	801a      	strh	r2, [r3, #0]
    7e36:	1dbb      	adds	r3, r7, #6
    7e38:	881b      	ldrh	r3, [r3, #0]
    7e3a:	4a18      	ldr	r2, [pc, #96]	; (7e9c <pdsUpdateRowMap+0xd8>)
    7e3c:	00db      	lsls	r3, r3, #3
    7e3e:	18d3      	adds	r3, r2, r3
    7e40:	3306      	adds	r3, #6
    7e42:	2201      	movs	r2, #1
    7e44:	4252      	negs	r2, r2
    7e46:	801a      	strh	r2, [r3, #0]
    7e48:	1dbb      	adds	r3, r7, #6
    7e4a:	881a      	ldrh	r2, [r3, #0]
    7e4c:	4b13      	ldr	r3, [pc, #76]	; (7e9c <pdsUpdateRowMap+0xd8>)
    7e4e:	00d2      	lsls	r2, r2, #3
    7e50:	2101      	movs	r1, #1
    7e52:	4249      	negs	r1, r1
    7e54:	50d1      	str	r1, [r2, r3]
    7e56:	1dbb      	adds	r3, r7, #6
    7e58:	881b      	ldrh	r3, [r3, #0]
    7e5a:	4a10      	ldr	r2, [pc, #64]	; (7e9c <pdsUpdateRowMap+0xd8>)
    7e5c:	00db      	lsls	r3, r3, #3
    7e5e:	18d3      	adds	r3, r2, r3
    7e60:	3304      	adds	r3, #4
    7e62:	2201      	movs	r2, #1
    7e64:	4252      	negs	r2, r2
    7e66:	801a      	strh	r2, [r3, #0]
    7e68:	1dbb      	adds	r3, r7, #6
    7e6a:	1cba      	adds	r2, r7, #2
    7e6c:	8812      	ldrh	r2, [r2, #0]
    7e6e:	801a      	strh	r2, [r3, #0]
    7e70:	1dbb      	adds	r3, r7, #6
    7e72:	881b      	ldrh	r3, [r3, #0]
    7e74:	4a08      	ldr	r2, [pc, #32]	; (7e98 <pdsUpdateRowMap+0xd4>)
    7e76:	4293      	cmp	r3, r2
    7e78:	d1d4      	bne.n	7e24 <pdsUpdateRowMap+0x60>
    7e7a:	1d3b      	adds	r3, r7, #4
    7e7c:	881a      	ldrh	r2, [r3, #0]
    7e7e:	1d3b      	adds	r3, r7, #4
    7e80:	3201      	adds	r2, #1
    7e82:	801a      	strh	r2, [r3, #0]
    7e84:	1d3b      	adds	r3, r7, #4
    7e86:	881b      	ldrh	r3, [r3, #0]
    7e88:	2b0c      	cmp	r3, #12
    7e8a:	d9a9      	bls.n	7de0 <pdsUpdateRowMap+0x1c>
    7e8c:	46c0      	nop			; (mov r8, r8)
    7e8e:	46bd      	mov	sp, r7
    7e90:	b002      	add	sp, #8
    7e92:	bd80      	pop	{r7, pc}
    7e94:	20000c50 	.word	0x20000c50
    7e98:	0000ffff 	.word	0x0000ffff
    7e9c:	20000b50 	.word	0x20000b50

00007ea0 <pdsUpdateFileMap>:
    7ea0:	b580      	push	{r7, lr}
    7ea2:	b086      	sub	sp, #24
    7ea4:	af00      	add	r7, sp, #0
    7ea6:	6078      	str	r0, [r7, #4]
    7ea8:	687b      	ldr	r3, [r7, #4]
    7eaa:	889b      	ldrh	r3, [r3, #4]
    7eac:	001a      	movs	r2, r3
    7eae:	4b50      	ldr	r3, [pc, #320]	; (7ff0 <pdsUpdateFileMap+0x150>)
    7eb0:	0052      	lsls	r2, r2, #1
    7eb2:	5ad3      	ldrh	r3, [r2, r3]
    7eb4:	4a4f      	ldr	r2, [pc, #316]	; (7ff4 <pdsUpdateFileMap+0x154>)
    7eb6:	4293      	cmp	r3, r2
    7eb8:	d108      	bne.n	7ecc <pdsUpdateFileMap+0x2c>
    7eba:	687b      	ldr	r3, [r7, #4]
    7ebc:	889b      	ldrh	r3, [r3, #4]
    7ebe:	001a      	movs	r2, r3
    7ec0:	687b      	ldr	r3, [r7, #4]
    7ec2:	88d9      	ldrh	r1, [r3, #6]
    7ec4:	4b4a      	ldr	r3, [pc, #296]	; (7ff0 <pdsUpdateFileMap+0x150>)
    7ec6:	0052      	lsls	r2, r2, #1
    7ec8:	52d1      	strh	r1, [r2, r3]
    7eca:	e08d      	b.n	7fe8 <pdsUpdateFileMap+0x148>
    7ecc:	687b      	ldr	r3, [r7, #4]
    7ece:	889b      	ldrh	r3, [r3, #4]
    7ed0:	001a      	movs	r2, r3
    7ed2:	4b47      	ldr	r3, [pc, #284]	; (7ff0 <pdsUpdateFileMap+0x150>)
    7ed4:	0052      	lsls	r2, r2, #1
    7ed6:	5ad3      	ldrh	r3, [r2, r3]
    7ed8:	001a      	movs	r2, r3
    7eda:	4b47      	ldr	r3, [pc, #284]	; (7ff8 <pdsUpdateFileMap+0x158>)
    7edc:	00d2      	lsls	r2, r2, #3
    7ede:	58d2      	ldr	r2, [r2, r3]
    7ee0:	687b      	ldr	r3, [r7, #4]
    7ee2:	88db      	ldrh	r3, [r3, #6]
    7ee4:	0019      	movs	r1, r3
    7ee6:	4b44      	ldr	r3, [pc, #272]	; (7ff8 <pdsUpdateFileMap+0x158>)
    7ee8:	00c9      	lsls	r1, r1, #3
    7eea:	58cb      	ldr	r3, [r1, r3]
    7eec:	429a      	cmp	r2, r3
    7eee:	d217      	bcs.n	7f20 <pdsUpdateFileMap+0x80>
    7ef0:	687b      	ldr	r3, [r7, #4]
    7ef2:	88db      	ldrh	r3, [r3, #6]
    7ef4:	0018      	movs	r0, r3
    7ef6:	687b      	ldr	r3, [r7, #4]
    7ef8:	889b      	ldrh	r3, [r3, #4]
    7efa:	001a      	movs	r2, r3
    7efc:	4b3c      	ldr	r3, [pc, #240]	; (7ff0 <pdsUpdateFileMap+0x150>)
    7efe:	0052      	lsls	r2, r2, #1
    7f00:	5ad1      	ldrh	r1, [r2, r3]
    7f02:	4a3d      	ldr	r2, [pc, #244]	; (7ff8 <pdsUpdateFileMap+0x158>)
    7f04:	00c3      	lsls	r3, r0, #3
    7f06:	18d3      	adds	r3, r2, r3
    7f08:	3306      	adds	r3, #6
    7f0a:	1c0a      	adds	r2, r1, #0
    7f0c:	801a      	strh	r2, [r3, #0]
    7f0e:	687b      	ldr	r3, [r7, #4]
    7f10:	889b      	ldrh	r3, [r3, #4]
    7f12:	001a      	movs	r2, r3
    7f14:	687b      	ldr	r3, [r7, #4]
    7f16:	88d9      	ldrh	r1, [r3, #6]
    7f18:	4b35      	ldr	r3, [pc, #212]	; (7ff0 <pdsUpdateFileMap+0x150>)
    7f1a:	0052      	lsls	r2, r2, #1
    7f1c:	52d1      	strh	r1, [r2, r3]
    7f1e:	e063      	b.n	7fe8 <pdsUpdateFileMap+0x148>
    7f20:	687b      	ldr	r3, [r7, #4]
    7f22:	889b      	ldrh	r3, [r3, #4]
    7f24:	001a      	movs	r2, r3
    7f26:	4b32      	ldr	r3, [pc, #200]	; (7ff0 <pdsUpdateFileMap+0x150>)
    7f28:	0052      	lsls	r2, r2, #1
    7f2a:	5ad3      	ldrh	r3, [r2, r3]
    7f2c:	001a      	movs	r2, r3
    7f2e:	4b32      	ldr	r3, [pc, #200]	; (7ff8 <pdsUpdateFileMap+0x158>)
    7f30:	00d2      	lsls	r2, r2, #3
    7f32:	58d2      	ldr	r2, [r2, r3]
    7f34:	687b      	ldr	r3, [r7, #4]
    7f36:	88db      	ldrh	r3, [r3, #6]
    7f38:	0019      	movs	r1, r3
    7f3a:	4b2f      	ldr	r3, [pc, #188]	; (7ff8 <pdsUpdateFileMap+0x158>)
    7f3c:	00c9      	lsls	r1, r1, #3
    7f3e:	58cb      	ldr	r3, [r1, r3]
    7f40:	429a      	cmp	r2, r3
    7f42:	d050      	beq.n	7fe6 <pdsUpdateFileMap+0x146>
    7f44:	687b      	ldr	r3, [r7, #4]
    7f46:	889b      	ldrh	r3, [r3, #4]
    7f48:	001a      	movs	r2, r3
    7f4a:	4b29      	ldr	r3, [pc, #164]	; (7ff0 <pdsUpdateFileMap+0x150>)
    7f4c:	0052      	lsls	r2, r2, #1
    7f4e:	5ad3      	ldrh	r3, [r2, r3]
    7f50:	00da      	lsls	r2, r3, #3
    7f52:	4b29      	ldr	r3, [pc, #164]	; (7ff8 <pdsUpdateFileMap+0x158>)
    7f54:	18d3      	adds	r3, r2, r3
    7f56:	3306      	adds	r3, #6
    7f58:	617b      	str	r3, [r7, #20]
    7f5a:	687b      	ldr	r3, [r7, #4]
    7f5c:	3306      	adds	r3, #6
    7f5e:	60fb      	str	r3, [r7, #12]
    7f60:	687b      	ldr	r3, [r7, #4]
    7f62:	889b      	ldrh	r3, [r3, #4]
    7f64:	005a      	lsls	r2, r3, #1
    7f66:	4b22      	ldr	r3, [pc, #136]	; (7ff0 <pdsUpdateFileMap+0x150>)
    7f68:	18d3      	adds	r3, r2, r3
    7f6a:	613b      	str	r3, [r7, #16]
    7f6c:	697b      	ldr	r3, [r7, #20]
    7f6e:	881b      	ldrh	r3, [r3, #0]
    7f70:	4a20      	ldr	r2, [pc, #128]	; (7ff4 <pdsUpdateFileMap+0x154>)
    7f72:	4293      	cmp	r3, r2
    7f74:	d104      	bne.n	7f80 <pdsUpdateFileMap+0xe0>
    7f76:	68fb      	ldr	r3, [r7, #12]
    7f78:	881a      	ldrh	r2, [r3, #0]
    7f7a:	697b      	ldr	r3, [r7, #20]
    7f7c:	801a      	strh	r2, [r3, #0]
    7f7e:	e033      	b.n	7fe8 <pdsUpdateFileMap+0x148>
    7f80:	697b      	ldr	r3, [r7, #20]
    7f82:	881b      	ldrh	r3, [r3, #0]
    7f84:	001a      	movs	r2, r3
    7f86:	4b1c      	ldr	r3, [pc, #112]	; (7ff8 <pdsUpdateFileMap+0x158>)
    7f88:	00d2      	lsls	r2, r2, #3
    7f8a:	58d2      	ldr	r2, [r2, r3]
    7f8c:	68fb      	ldr	r3, [r7, #12]
    7f8e:	881b      	ldrh	r3, [r3, #0]
    7f90:	0019      	movs	r1, r3
    7f92:	4b19      	ldr	r3, [pc, #100]	; (7ff8 <pdsUpdateFileMap+0x158>)
    7f94:	00c9      	lsls	r1, r1, #3
    7f96:	58cb      	ldr	r3, [r1, r3]
    7f98:	429a      	cmp	r2, r3
    7f9a:	d909      	bls.n	7fb0 <pdsUpdateFileMap+0x110>
    7f9c:	697b      	ldr	r3, [r7, #20]
    7f9e:	613b      	str	r3, [r7, #16]
    7fa0:	697b      	ldr	r3, [r7, #20]
    7fa2:	881b      	ldrh	r3, [r3, #0]
    7fa4:	00da      	lsls	r2, r3, #3
    7fa6:	4b14      	ldr	r3, [pc, #80]	; (7ff8 <pdsUpdateFileMap+0x158>)
    7fa8:	18d3      	adds	r3, r2, r3
    7faa:	3306      	adds	r3, #6
    7fac:	617b      	str	r3, [r7, #20]
    7fae:	e7dd      	b.n	7f6c <pdsUpdateFileMap+0xcc>
    7fb0:	230a      	movs	r3, #10
    7fb2:	18fb      	adds	r3, r7, r3
    7fb4:	697a      	ldr	r2, [r7, #20]
    7fb6:	8812      	ldrh	r2, [r2, #0]
    7fb8:	801a      	strh	r2, [r3, #0]
    7fba:	693b      	ldr	r3, [r7, #16]
    7fbc:	881b      	ldrh	r3, [r3, #0]
    7fbe:	0018      	movs	r0, r3
    7fc0:	68fb      	ldr	r3, [r7, #12]
    7fc2:	8819      	ldrh	r1, [r3, #0]
    7fc4:	4a0c      	ldr	r2, [pc, #48]	; (7ff8 <pdsUpdateFileMap+0x158>)
    7fc6:	00c3      	lsls	r3, r0, #3
    7fc8:	18d3      	adds	r3, r2, r3
    7fca:	3306      	adds	r3, #6
    7fcc:	1c0a      	adds	r2, r1, #0
    7fce:	801a      	strh	r2, [r3, #0]
    7fd0:	68fb      	ldr	r3, [r7, #12]
    7fd2:	881b      	ldrh	r3, [r3, #0]
    7fd4:	4a08      	ldr	r2, [pc, #32]	; (7ff8 <pdsUpdateFileMap+0x158>)
    7fd6:	00db      	lsls	r3, r3, #3
    7fd8:	18d3      	adds	r3, r2, r3
    7fda:	3306      	adds	r3, #6
    7fdc:	220a      	movs	r2, #10
    7fde:	18ba      	adds	r2, r7, r2
    7fe0:	8812      	ldrh	r2, [r2, #0]
    7fe2:	801a      	strh	r2, [r3, #0]
    7fe4:	e000      	b.n	7fe8 <pdsUpdateFileMap+0x148>
    7fe6:	46c0      	nop			; (mov r8, r8)
    7fe8:	46bd      	mov	sp, r7
    7fea:	b006      	add	sp, #24
    7fec:	bd80      	pop	{r7, pc}
    7fee:	46c0      	nop			; (mov r8, r8)
    7ff0:	20000c50 	.word	0x20000c50
    7ff4:	0000ffff 	.word	0x0000ffff
    7ff8:	20000b50 	.word	0x20000b50

00007ffc <cpu_irq_save>:
    7ffc:	b580      	push	{r7, lr}
    7ffe:	b082      	sub	sp, #8
    8000:	af00      	add	r7, sp, #0
    8002:	f3ef 8310 	mrs	r3, PRIMASK
    8006:	607b      	str	r3, [r7, #4]
    8008:	687b      	ldr	r3, [r7, #4]
    800a:	425a      	negs	r2, r3
    800c:	4153      	adcs	r3, r2
    800e:	b2db      	uxtb	r3, r3
    8010:	603b      	str	r3, [r7, #0]
    8012:	b672      	cpsid	i
    8014:	f3bf 8f5f 	dmb	sy
    8018:	4b03      	ldr	r3, [pc, #12]	; (8028 <cpu_irq_save+0x2c>)
    801a:	2200      	movs	r2, #0
    801c:	701a      	strb	r2, [r3, #0]
    801e:	683b      	ldr	r3, [r7, #0]
    8020:	0018      	movs	r0, r3
    8022:	46bd      	mov	sp, r7
    8024:	b002      	add	sp, #8
    8026:	bd80      	pop	{r7, pc}
    8028:	20000008 	.word	0x20000008

0000802c <cpu_irq_is_enabled_flags>:
    802c:	b580      	push	{r7, lr}
    802e:	b082      	sub	sp, #8
    8030:	af00      	add	r7, sp, #0
    8032:	6078      	str	r0, [r7, #4]
    8034:	687b      	ldr	r3, [r7, #4]
    8036:	1e5a      	subs	r2, r3, #1
    8038:	4193      	sbcs	r3, r2
    803a:	b2db      	uxtb	r3, r3
    803c:	0018      	movs	r0, r3
    803e:	46bd      	mov	sp, r7
    8040:	b002      	add	sp, #8
    8042:	bd80      	pop	{r7, pc}

00008044 <cpu_irq_restore>:
    8044:	b580      	push	{r7, lr}
    8046:	b082      	sub	sp, #8
    8048:	af00      	add	r7, sp, #0
    804a:	6078      	str	r0, [r7, #4]
    804c:	687b      	ldr	r3, [r7, #4]
    804e:	0018      	movs	r0, r3
    8050:	4b06      	ldr	r3, [pc, #24]	; (806c <cpu_irq_restore+0x28>)
    8052:	4798      	blx	r3
    8054:	1e03      	subs	r3, r0, #0
    8056:	d005      	beq.n	8064 <cpu_irq_restore+0x20>
    8058:	4b05      	ldr	r3, [pc, #20]	; (8070 <cpu_irq_restore+0x2c>)
    805a:	2201      	movs	r2, #1
    805c:	701a      	strb	r2, [r3, #0]
    805e:	f3bf 8f5f 	dmb	sy
    8062:	b662      	cpsie	i
    8064:	46c0      	nop			; (mov r8, r8)
    8066:	46bd      	mov	sp, r7
    8068:	b002      	add	sp, #8
    806a:	bd80      	pop	{r7, pc}
    806c:	0000802d 	.word	0x0000802d
    8070:	20000008 	.word	0x20000008

00008074 <hwTimerOverflowCallback>:
    8074:	b580      	push	{r7, lr}
    8076:	b082      	sub	sp, #8
    8078:	af00      	add	r7, sp, #0
    807a:	1dbb      	adds	r3, r7, #6
    807c:	4a0c      	ldr	r2, [pc, #48]	; (80b0 <hwTimerOverflowCallback+0x3c>)
    807e:	8812      	ldrh	r2, [r2, #0]
    8080:	801a      	strh	r2, [r3, #0]
    8082:	4b0b      	ldr	r3, [pc, #44]	; (80b0 <hwTimerOverflowCallback+0x3c>)
    8084:	881b      	ldrh	r3, [r3, #0]
    8086:	b29b      	uxth	r3, r3
    8088:	3301      	adds	r3, #1
    808a:	b29b      	uxth	r3, r3
    808c:	4a08      	ldr	r2, [pc, #32]	; (80b0 <hwTimerOverflowCallback+0x3c>)
    808e:	1c19      	adds	r1, r3, #0
    8090:	8011      	strh	r1, [r2, #0]
    8092:	1dba      	adds	r2, r7, #6
    8094:	8812      	ldrh	r2, [r2, #0]
    8096:	429a      	cmp	r2, r3
    8098:	d904      	bls.n	80a4 <hwTimerOverflowCallback+0x30>
    809a:	4b06      	ldr	r3, [pc, #24]	; (80b4 <hwTimerOverflowCallback+0x40>)
    809c:	681b      	ldr	r3, [r3, #0]
    809e:	1c5a      	adds	r2, r3, #1
    80a0:	4b04      	ldr	r3, [pc, #16]	; (80b4 <hwTimerOverflowCallback+0x40>)
    80a2:	601a      	str	r2, [r3, #0]
    80a4:	4b04      	ldr	r3, [pc, #16]	; (80b8 <hwTimerOverflowCallback+0x44>)
    80a6:	4798      	blx	r3
    80a8:	46c0      	nop			; (mov r8, r8)
    80aa:	46bd      	mov	sp, r7
    80ac:	b002      	add	sp, #8
    80ae:	bd80      	pop	{r7, pc}
    80b0:	20001134 	.word	0x20001134
    80b4:	20001138 	.word	0x20001138
    80b8:	000080e9 	.word	0x000080e9

000080bc <hwTimerExpiryCallback>:
    80bc:	b580      	push	{r7, lr}
    80be:	af00      	add	r7, sp, #0
    80c0:	4b06      	ldr	r3, [pc, #24]	; (80dc <hwTimerExpiryCallback+0x20>)
    80c2:	781b      	ldrb	r3, [r3, #0]
    80c4:	b2db      	uxtb	r3, r3
    80c6:	2b00      	cmp	r3, #0
    80c8:	d005      	beq.n	80d6 <hwTimerExpiryCallback+0x1a>
    80ca:	4b05      	ldr	r3, [pc, #20]	; (80e0 <hwTimerExpiryCallback+0x24>)
    80cc:	2201      	movs	r2, #1
    80ce:	701a      	strb	r2, [r3, #0]
    80d0:	2001      	movs	r0, #1
    80d2:	4b04      	ldr	r3, [pc, #16]	; (80e4 <hwTimerExpiryCallback+0x28>)
    80d4:	4798      	blx	r3
    80d6:	46c0      	nop			; (mov r8, r8)
    80d8:	46bd      	mov	sp, r7
    80da:	bd80      	pop	{r7, pc}
    80dc:	20000c6a 	.word	0x20000c6a
    80e0:	20001136 	.word	0x20001136
    80e4:	0000ec05 	.word	0x0000ec05

000080e8 <swtimerProcessOverflow>:
    80e8:	b580      	push	{r7, lr}
    80ea:	b084      	sub	sp, #16
    80ec:	af00      	add	r7, sp, #0
    80ee:	4b26      	ldr	r3, [pc, #152]	; (8188 <swtimerProcessOverflow+0xa0>)
    80f0:	4798      	blx	r3
    80f2:	0002      	movs	r2, r0
    80f4:	230f      	movs	r3, #15
    80f6:	18fb      	adds	r3, r7, r3
    80f8:	701a      	strb	r2, [r3, #0]
    80fa:	4b24      	ldr	r3, [pc, #144]	; (818c <swtimerProcessOverflow+0xa4>)
    80fc:	681b      	ldr	r3, [r3, #0]
    80fe:	2bff      	cmp	r3, #255	; 0xff
    8100:	d037      	beq.n	8172 <swtimerProcessOverflow+0x8a>
    8102:	4b22      	ldr	r3, [pc, #136]	; (818c <swtimerProcessOverflow+0xa4>)
    8104:	681b      	ldr	r3, [r3, #0]
    8106:	4a22      	ldr	r2, [pc, #136]	; (8190 <swtimerProcessOverflow+0xa8>)
    8108:	011b      	lsls	r3, r3, #4
    810a:	18d3      	adds	r3, r2, r3
    810c:	330d      	adds	r3, #13
    810e:	781b      	ldrb	r3, [r3, #0]
    8110:	2201      	movs	r2, #1
    8112:	4053      	eors	r3, r2
    8114:	b2db      	uxtb	r3, r3
    8116:	2b00      	cmp	r3, #0
    8118:	d02b      	beq.n	8172 <swtimerProcessOverflow+0x8a>
    811a:	4b1c      	ldr	r3, [pc, #112]	; (818c <swtimerProcessOverflow+0xa4>)
    811c:	681a      	ldr	r2, [r3, #0]
    811e:	4b1c      	ldr	r3, [pc, #112]	; (8190 <swtimerProcessOverflow+0xa8>)
    8120:	0112      	lsls	r2, r2, #4
    8122:	58d3      	ldr	r3, [r2, r3]
    8124:	60bb      	str	r3, [r7, #8]
    8126:	68bb      	ldr	r3, [r7, #8]
    8128:	0c1a      	lsrs	r2, r3, #16
    812a:	1dbb      	adds	r3, r7, #6
    812c:	801a      	strh	r2, [r3, #0]
    812e:	4b19      	ldr	r3, [pc, #100]	; (8194 <swtimerProcessOverflow+0xac>)
    8130:	881b      	ldrh	r3, [r3, #0]
    8132:	b29b      	uxth	r3, r3
    8134:	1dba      	adds	r2, r7, #6
    8136:	8812      	ldrh	r2, [r2, #0]
    8138:	429a      	cmp	r2, r3
    813a:	d11a      	bne.n	8172 <swtimerProcessOverflow+0x8a>
    813c:	1d3b      	adds	r3, r7, #4
    813e:	68ba      	ldr	r2, [r7, #8]
    8140:	801a      	strh	r2, [r3, #0]
    8142:	1d3b      	adds	r3, r7, #4
    8144:	881b      	ldrh	r3, [r3, #0]
    8146:	2bff      	cmp	r3, #255	; 0xff
    8148:	d90d      	bls.n	8166 <swtimerProcessOverflow+0x7e>
    814a:	1d3b      	adds	r3, r7, #4
    814c:	881b      	ldrh	r3, [r3, #0]
    814e:	0018      	movs	r0, r3
    8150:	4b11      	ldr	r3, [pc, #68]	; (8198 <swtimerProcessOverflow+0xb0>)
    8152:	4798      	blx	r3
    8154:	4b0d      	ldr	r3, [pc, #52]	; (818c <swtimerProcessOverflow+0xa4>)
    8156:	681b      	ldr	r3, [r3, #0]
    8158:	4a0d      	ldr	r2, [pc, #52]	; (8190 <swtimerProcessOverflow+0xa8>)
    815a:	011b      	lsls	r3, r3, #4
    815c:	18d3      	adds	r3, r2, r3
    815e:	330d      	adds	r3, #13
    8160:	2201      	movs	r2, #1
    8162:	701a      	strb	r2, [r3, #0]
    8164:	e005      	b.n	8172 <swtimerProcessOverflow+0x8a>
    8166:	4b0d      	ldr	r3, [pc, #52]	; (819c <swtimerProcessOverflow+0xb4>)
    8168:	2201      	movs	r2, #1
    816a:	701a      	strb	r2, [r3, #0]
    816c:	2001      	movs	r0, #1
    816e:	4b0c      	ldr	r3, [pc, #48]	; (81a0 <swtimerProcessOverflow+0xb8>)
    8170:	4798      	blx	r3
    8172:	230f      	movs	r3, #15
    8174:	18fb      	adds	r3, r7, r3
    8176:	781b      	ldrb	r3, [r3, #0]
    8178:	0018      	movs	r0, r3
    817a:	4b0a      	ldr	r3, [pc, #40]	; (81a4 <swtimerProcessOverflow+0xbc>)
    817c:	4798      	blx	r3
    817e:	46c0      	nop			; (mov r8, r8)
    8180:	46bd      	mov	sp, r7
    8182:	b004      	add	sp, #16
    8184:	bd80      	pop	{r7, pc}
    8186:	46c0      	nop			; (mov r8, r8)
    8188:	00007ffd 	.word	0x00007ffd
    818c:	20000c6c 	.word	0x20000c6c
    8190:	20000fa4 	.word	0x20000fa4
    8194:	20001134 	.word	0x20001134
    8198:	00014885 	.word	0x00014885
    819c:	20001136 	.word	0x20001136
    81a0:	0000ec05 	.word	0x0000ec05
    81a4:	00008045 	.word	0x00008045

000081a8 <SwTimerReset>:
    81a8:	b580      	push	{r7, lr}
    81aa:	b082      	sub	sp, #8
    81ac:	af00      	add	r7, sp, #0
    81ae:	4b19      	ldr	r3, [pc, #100]	; (8214 <SwTimerReset+0x6c>)
    81b0:	2200      	movs	r2, #0
    81b2:	701a      	strb	r2, [r3, #0]
    81b4:	4b18      	ldr	r3, [pc, #96]	; (8218 <SwTimerReset+0x70>)
    81b6:	2200      	movs	r2, #0
    81b8:	701a      	strb	r2, [r3, #0]
    81ba:	4b18      	ldr	r3, [pc, #96]	; (821c <SwTimerReset+0x74>)
    81bc:	22ff      	movs	r2, #255	; 0xff
    81be:	601a      	str	r2, [r3, #0]
    81c0:	4b17      	ldr	r3, [pc, #92]	; (8220 <SwTimerReset+0x78>)
    81c2:	22ff      	movs	r2, #255	; 0xff
    81c4:	601a      	str	r2, [r3, #0]
    81c6:	4b17      	ldr	r3, [pc, #92]	; (8224 <SwTimerReset+0x7c>)
    81c8:	22ff      	movs	r2, #255	; 0xff
    81ca:	601a      	str	r2, [r3, #0]
    81cc:	1dfb      	adds	r3, r7, #7
    81ce:	2200      	movs	r2, #0
    81d0:	701a      	strb	r2, [r3, #0]
    81d2:	e014      	b.n	81fe <SwTimerReset+0x56>
    81d4:	1dfb      	adds	r3, r7, #7
    81d6:	781b      	ldrb	r3, [r3, #0]
    81d8:	4a13      	ldr	r2, [pc, #76]	; (8228 <SwTimerReset+0x80>)
    81da:	011b      	lsls	r3, r3, #4
    81dc:	18d3      	adds	r3, r2, r3
    81de:	330c      	adds	r3, #12
    81e0:	22ff      	movs	r2, #255	; 0xff
    81e2:	701a      	strb	r2, [r3, #0]
    81e4:	1dfb      	adds	r3, r7, #7
    81e6:	781b      	ldrb	r3, [r3, #0]
    81e8:	4a0f      	ldr	r2, [pc, #60]	; (8228 <SwTimerReset+0x80>)
    81ea:	011b      	lsls	r3, r3, #4
    81ec:	18d3      	adds	r3, r2, r3
    81ee:	3304      	adds	r3, #4
    81f0:	2200      	movs	r2, #0
    81f2:	601a      	str	r2, [r3, #0]
    81f4:	1dfb      	adds	r3, r7, #7
    81f6:	781a      	ldrb	r2, [r3, #0]
    81f8:	1dfb      	adds	r3, r7, #7
    81fa:	3201      	adds	r2, #1
    81fc:	701a      	strb	r2, [r3, #0]
    81fe:	1dfb      	adds	r3, r7, #7
    8200:	781b      	ldrb	r3, [r3, #0]
    8202:	2b18      	cmp	r3, #24
    8204:	d9e6      	bls.n	81d4 <SwTimerReset+0x2c>
    8206:	4b09      	ldr	r3, [pc, #36]	; (822c <SwTimerReset+0x84>)
    8208:	2200      	movs	r2, #0
    820a:	701a      	strb	r2, [r3, #0]
    820c:	46c0      	nop			; (mov r8, r8)
    820e:	46bd      	mov	sp, r7
    8210:	b002      	add	sp, #8
    8212:	bd80      	pop	{r7, pc}
    8214:	20000c6a 	.word	0x20000c6a
    8218:	20001136 	.word	0x20001136
    821c:	20000c6c 	.word	0x20000c6c
    8220:	20000c70 	.word	0x20000c70
    8224:	20000c74 	.word	0x20000c74
    8228:	20000fa4 	.word	0x20000fa4
    822c:	20000c78 	.word	0x20000c78

00008230 <SystemTimerInit>:
    8230:	b580      	push	{r7, lr}
    8232:	af00      	add	r7, sp, #0
    8234:	4b0a      	ldr	r3, [pc, #40]	; (8260 <SystemTimerInit+0x30>)
    8236:	4798      	blx	r3
    8238:	4b0a      	ldr	r3, [pc, #40]	; (8264 <SystemTimerInit+0x34>)
    823a:	2200      	movs	r2, #0
    823c:	801a      	strh	r2, [r3, #0]
    823e:	4b0a      	ldr	r3, [pc, #40]	; (8268 <SystemTimerInit+0x38>)
    8240:	2200      	movs	r2, #0
    8242:	601a      	str	r2, [r3, #0]
    8244:	4b09      	ldr	r3, [pc, #36]	; (826c <SystemTimerInit+0x3c>)
    8246:	4798      	blx	r3
    8248:	4b09      	ldr	r3, [pc, #36]	; (8270 <SystemTimerInit+0x40>)
    824a:	0018      	movs	r0, r3
    824c:	4b09      	ldr	r3, [pc, #36]	; (8274 <SystemTimerInit+0x44>)
    824e:	4798      	blx	r3
    8250:	4b09      	ldr	r3, [pc, #36]	; (8278 <SystemTimerInit+0x48>)
    8252:	0018      	movs	r0, r3
    8254:	4b09      	ldr	r3, [pc, #36]	; (827c <SystemTimerInit+0x4c>)
    8256:	4798      	blx	r3
    8258:	46c0      	nop			; (mov r8, r8)
    825a:	46bd      	mov	sp, r7
    825c:	bd80      	pop	{r7, pc}
    825e:	46c0      	nop			; (mov r8, r8)
    8260:	000081a9 	.word	0x000081a9
    8264:	20001134 	.word	0x20001134
    8268:	20001138 	.word	0x20001138
    826c:	000148f1 	.word	0x000148f1
    8270:	00008075 	.word	0x00008075
    8274:	00014975 	.word	0x00014975
    8278:	000080bd 	.word	0x000080bd
    827c:	00014981 	.word	0x00014981

00008280 <system_pinmux_get_group_from_gpio_pin>:
 *
 * \return Base address of the associated PORT module.
 */
static inline PortGroup* system_pinmux_get_group_from_gpio_pin(
		const uint8_t gpio_pin)
{
    8280:	b580      	push	{r7, lr}
    8282:	b084      	sub	sp, #16
    8284:	af00      	add	r7, sp, #0
    8286:	0002      	movs	r2, r0
    8288:	1dfb      	adds	r3, r7, #7
    828a:	701a      	strb	r2, [r3, #0]
	uint8_t port_index  = (gpio_pin / 128);
    828c:	230f      	movs	r3, #15
    828e:	18fb      	adds	r3, r7, r3
    8290:	1dfa      	adds	r2, r7, #7
    8292:	7812      	ldrb	r2, [r2, #0]
    8294:	09d2      	lsrs	r2, r2, #7
    8296:	701a      	strb	r2, [r3, #0]
	uint8_t group_index = (gpio_pin / 32);
    8298:	230e      	movs	r3, #14
    829a:	18fb      	adds	r3, r7, r3
    829c:	1dfa      	adds	r2, r7, #7
    829e:	7812      	ldrb	r2, [r2, #0]
    82a0:	0952      	lsrs	r2, r2, #5
    82a2:	701a      	strb	r2, [r3, #0]

	/* Array of available ports */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;
    82a4:	4b0d      	ldr	r3, [pc, #52]	; (82dc <system_pinmux_get_group_from_gpio_pin+0x5c>)
    82a6:	60bb      	str	r3, [r7, #8]

	if (port_index < PORT_INST_NUM) {
    82a8:	230f      	movs	r3, #15
    82aa:	18fb      	adds	r3, r7, r3
    82ac:	781b      	ldrb	r3, [r3, #0]
    82ae:	2b00      	cmp	r3, #0
    82b0:	d10f      	bne.n	82d2 <system_pinmux_get_group_from_gpio_pin+0x52>
		return &(ports[port_index]->Group[group_index]);
    82b2:	230f      	movs	r3, #15
    82b4:	18fb      	adds	r3, r7, r3
    82b6:	781b      	ldrb	r3, [r3, #0]
    82b8:	009b      	lsls	r3, r3, #2
    82ba:	2210      	movs	r2, #16
    82bc:	4694      	mov	ip, r2
    82be:	44bc      	add	ip, r7
    82c0:	4463      	add	r3, ip
    82c2:	3b08      	subs	r3, #8
    82c4:	681a      	ldr	r2, [r3, #0]
    82c6:	230e      	movs	r3, #14
    82c8:	18fb      	adds	r3, r7, r3
    82ca:	781b      	ldrb	r3, [r3, #0]
    82cc:	01db      	lsls	r3, r3, #7
    82ce:	18d3      	adds	r3, r2, r3
    82d0:	e000      	b.n	82d4 <system_pinmux_get_group_from_gpio_pin+0x54>
	} else {
		Assert(false);
		return NULL;
    82d2:	2300      	movs	r3, #0
	}
}
    82d4:	0018      	movs	r0, r3
    82d6:	46bd      	mov	sp, r7
    82d8:	b004      	add	sp, #16
    82da:	bd80      	pop	{r7, pc}
    82dc:	40002800 	.word	0x40002800

000082e0 <port_get_group_from_gpio_pin>:
 *
 *  \return Base address of the associated PORT module.
 */
static inline PortGroup* port_get_group_from_gpio_pin(
		const uint8_t gpio_pin)
{
    82e0:	b580      	push	{r7, lr}
    82e2:	b082      	sub	sp, #8
    82e4:	af00      	add	r7, sp, #0
    82e6:	0002      	movs	r2, r0
    82e8:	1dfb      	adds	r3, r7, #7
    82ea:	701a      	strb	r2, [r3, #0]
	return system_pinmux_get_group_from_gpio_pin(gpio_pin);
    82ec:	1dfb      	adds	r3, r7, #7
    82ee:	781b      	ldrb	r3, [r3, #0]
    82f0:	0018      	movs	r0, r3
    82f2:	4b03      	ldr	r3, [pc, #12]	; (8300 <port_get_group_from_gpio_pin+0x20>)
    82f4:	4798      	blx	r3
    82f6:	0003      	movs	r3, r0
}
    82f8:	0018      	movs	r0, r3
    82fa:	46bd      	mov	sp, r7
    82fc:	b002      	add	sp, #8
    82fe:	bd80      	pop	{r7, pc}
    8300:	00008281 	.word	0x00008281

00008304 <port_pin_set_output_level>:
 *  \param[in] level     Logical level to set the given pin to
 */
static inline void port_pin_set_output_level(
		const uint8_t gpio_pin,
		const bool level)
{
    8304:	b580      	push	{r7, lr}
    8306:	b084      	sub	sp, #16
    8308:	af00      	add	r7, sp, #0
    830a:	0002      	movs	r2, r0
    830c:	1dfb      	adds	r3, r7, #7
    830e:	701a      	strb	r2, [r3, #0]
    8310:	1dbb      	adds	r3, r7, #6
    8312:	1c0a      	adds	r2, r1, #0
    8314:	701a      	strb	r2, [r3, #0]
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
    8316:	1dfb      	adds	r3, r7, #7
    8318:	781b      	ldrb	r3, [r3, #0]
    831a:	0018      	movs	r0, r3
    831c:	4b0d      	ldr	r3, [pc, #52]	; (8354 <port_pin_set_output_level+0x50>)
    831e:	4798      	blx	r3
    8320:	0003      	movs	r3, r0
    8322:	60fb      	str	r3, [r7, #12]
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));
    8324:	1dfb      	adds	r3, r7, #7
    8326:	781b      	ldrb	r3, [r3, #0]
    8328:	221f      	movs	r2, #31
    832a:	4013      	ands	r3, r2
    832c:	2201      	movs	r2, #1
    832e:	409a      	lsls	r2, r3
    8330:	0013      	movs	r3, r2
    8332:	60bb      	str	r3, [r7, #8]

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
    8334:	1dbb      	adds	r3, r7, #6
    8336:	781b      	ldrb	r3, [r3, #0]
    8338:	2b00      	cmp	r3, #0
    833a:	d003      	beq.n	8344 <port_pin_set_output_level+0x40>
		port_base->OUTSET.reg = pin_mask;
    833c:	68fb      	ldr	r3, [r7, #12]
    833e:	68ba      	ldr	r2, [r7, #8]
    8340:	619a      	str	r2, [r3, #24]
	} else {
		port_base->OUTCLR.reg = pin_mask;
	}
}
    8342:	e002      	b.n	834a <port_pin_set_output_level+0x46>
		port_base->OUTCLR.reg = pin_mask;
    8344:	68fb      	ldr	r3, [r7, #12]
    8346:	68ba      	ldr	r2, [r7, #8]
    8348:	615a      	str	r2, [r3, #20]
}
    834a:	46c0      	nop			; (mov r8, r8)
    834c:	46bd      	mov	sp, r7
    834e:	b004      	add	sp, #16
    8350:	bd80      	pop	{r7, pc}
    8352:	46c0      	nop			; (mov r8, r8)
    8354:	000082e1 	.word	0x000082e1

00008358 <BroadcastJitter>:
        //                  multiple devices to rebroadcast the message 
        //                  at different time, thus lower the possibility
        //                  of packet collision in rebroadcast.
        /******************************************************************/
        void BroadcastJitter(uint8_t range)
        {
    8358:	b580      	push	{r7, lr}
    835a:	b086      	sub	sp, #24
    835c:	af00      	add	r7, sp, #0
    835e:	0002      	movs	r2, r0
    8360:	1dfb      	adds	r3, r7, #7
    8362:	701a      	strb	r2, [r3, #0]
            uint8_t jitter = rand() % range;
    8364:	4b14      	ldr	r3, [pc, #80]	; (83b8 <BroadcastJitter+0x60>)
    8366:	4798      	blx	r3
    8368:	1dfb      	adds	r3, r7, #7
    836a:	781a      	ldrb	r2, [r3, #0]
    836c:	4b13      	ldr	r3, [pc, #76]	; (83bc <BroadcastJitter+0x64>)
    836e:	0011      	movs	r1, r2
    8370:	4798      	blx	r3
    8372:	000b      	movs	r3, r1
    8374:	001a      	movs	r2, r3
    8376:	2317      	movs	r3, #23
    8378:	18fb      	adds	r3, r7, r3
    837a:	701a      	strb	r2, [r3, #0]
            MIWI_TICK t1, t2;

			//printf("Jitter");
            while( jitter > 0 )
    837c:	e013      	b.n	83a6 <BroadcastJitter+0x4e>
            {
                jitter--;
    837e:	2317      	movs	r3, #23
    8380:	18fb      	adds	r3, r7, r3
    8382:	781a      	ldrb	r2, [r3, #0]
    8384:	2317      	movs	r3, #23
    8386:	18fb      	adds	r3, r7, r3
    8388:	3a01      	subs	r2, #1
    838a:	701a      	strb	r2, [r3, #0]
                t1 = MiWi_TickGet();
    838c:	4b0c      	ldr	r3, [pc, #48]	; (83c0 <BroadcastJitter+0x68>)
    838e:	4798      	blx	r3
    8390:	0003      	movs	r3, r0
    8392:	613b      	str	r3, [r7, #16]
                while(1)
                {
                    t2 = MiWi_TickGet();
    8394:	4b0a      	ldr	r3, [pc, #40]	; (83c0 <BroadcastJitter+0x68>)
    8396:	4798      	blx	r3
    8398:	0003      	movs	r3, r0
    839a:	60fb      	str	r3, [r7, #12]
                    if( MiWi_TickGetDiff(t2, t1) > FIVE_MILI_SECOND )
    839c:	68fa      	ldr	r2, [r7, #12]
    839e:	693b      	ldr	r3, [r7, #16]
    83a0:	1ad3      	subs	r3, r2, r3
    83a2:	2b14      	cmp	r3, #20
    83a4:	d9f6      	bls.n	8394 <BroadcastJitter+0x3c>
            while( jitter > 0 )
    83a6:	2317      	movs	r3, #23
    83a8:	18fb      	adds	r3, r7, r3
    83aa:	781b      	ldrb	r3, [r3, #0]
    83ac:	2b00      	cmp	r3, #0
    83ae:	d1e6      	bne.n	837e <BroadcastJitter+0x26>
                    {
                        break;
                    }
                }        
            }  
        }
    83b0:	46c0      	nop			; (mov r8, r8)
    83b2:	46bd      	mov	sp, r7
    83b4:	b006      	add	sp, #24
    83b6:	bd80      	pop	{r7, pc}
    83b8:	00017919 	.word	0x00017919
    83bc:	00014c6d 	.word	0x00014c6d
    83c0:	0000ebad 	.word	0x0000ebad

000083c4 <MiWiPROTasks>:
     *
     * Overview:        This function maintains the operation of the stack
     *                  It should be called as often as possible.  
     ********************************************************************/
    void MiWiPROTasks(void)
    {
    83c4:	b590      	push	{r4, r7, lr}
    83c6:	b091      	sub	sp, #68	; 0x44
    83c8:	af00      	add	r7, sp, #0
        uint8_t i,Conv_channel;
        MIWI_TICK t1, t2;        
		
        if( MiMAC_ReceivedPacket() )
    83ca:	4bda      	ldr	r3, [pc, #872]	; (8734 <MiWiPROTasks+0x370>)
    83cc:	4798      	blx	r3
    83ce:	1e03      	subs	r3, r0, #0
    83d0:	d101      	bne.n	83d6 <MiWiPROTasks+0x12>
    83d2:	f002 ffef 	bl	b3b4 <MiWiPROTasks+0x2ff0>
        {
			
            if( MiWiPROStateMachine.bits.RxHasUserData )
    83d6:	4bd8      	ldr	r3, [pc, #864]	; (8738 <MiWiPROTasks+0x374>)
    83d8:	781b      	ldrb	r3, [r3, #0]
    83da:	2204      	movs	r2, #4
    83dc:	4013      	ands	r3, r2
    83de:	b2db      	uxtb	r3, r3
    83e0:	2b00      	cmp	r3, #0
    83e2:	d001      	beq.n	83e8 <MiWiPROTasks+0x24>
    83e4:	f003 fb60 	bl	baa8 <MiWiPROTasks+0x36e4>
            {
		
                return;
            }
            
            rxMessage.flags.Val = 0;
    83e8:	4bd4      	ldr	r3, [pc, #848]	; (873c <MiWiPROTasks+0x378>)
    83ea:	2200      	movs	r2, #0
    83ec:	701a      	strb	r2, [r3, #0]
            rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
    83ee:	4bd4      	ldr	r3, [pc, #848]	; (8740 <MiWiPROTasks+0x37c>)
    83f0:	781b      	ldrb	r3, [r3, #0]
    83f2:	075b      	lsls	r3, r3, #29
    83f4:	0fdb      	lsrs	r3, r3, #31
    83f6:	b2db      	uxtb	r3, r3
    83f8:	1c1a      	adds	r2, r3, #0
    83fa:	2303      	movs	r3, #3
    83fc:	4013      	ands	r3, r2
    83fe:	b2da      	uxtb	r2, r3
    8400:	4bce      	ldr	r3, [pc, #824]	; (873c <MiWiPROTasks+0x378>)
    8402:	2103      	movs	r1, #3
    8404:	400a      	ands	r2, r1
    8406:	0010      	movs	r0, r2
    8408:	781a      	ldrb	r2, [r3, #0]
    840a:	2103      	movs	r1, #3
    840c:	438a      	bics	r2, r1
    840e:	1c11      	adds	r1, r2, #0
    8410:	1c02      	adds	r2, r0, #0
    8412:	430a      	orrs	r2, r1
    8414:	701a      	strb	r2, [r3, #0]
            rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
    8416:	4bca      	ldr	r3, [pc, #808]	; (8740 <MiWiPROTasks+0x37c>)
    8418:	781b      	ldrb	r3, [r3, #0]
    841a:	071b      	lsls	r3, r3, #28
    841c:	0fdb      	lsrs	r3, r3, #31
    841e:	b2da      	uxtb	r2, r3
    8420:	4bc6      	ldr	r3, [pc, #792]	; (873c <MiWiPROTasks+0x378>)
    8422:	2101      	movs	r1, #1
    8424:	400a      	ands	r2, r1
    8426:	00d0      	lsls	r0, r2, #3
    8428:	781a      	ldrb	r2, [r3, #0]
    842a:	2108      	movs	r1, #8
    842c:	438a      	bics	r2, r1
    842e:	1c11      	adds	r1, r2, #0
    8430:	1c02      	adds	r2, r0, #0
    8432:	430a      	orrs	r2, r1
    8434:	701a      	strb	r2, [r3, #0]
            rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == PACKET_TYPE_COMMAND) ? 1:0;
    8436:	4bc2      	ldr	r3, [pc, #776]	; (8740 <MiWiPROTasks+0x37c>)
    8438:	781b      	ldrb	r3, [r3, #0]
    843a:	2203      	movs	r2, #3
    843c:	4013      	ands	r3, r2
    843e:	b2db      	uxtb	r3, r3
    8440:	3b01      	subs	r3, #1
    8442:	425a      	negs	r2, r3
    8444:	4153      	adcs	r3, r2
    8446:	b2da      	uxtb	r2, r3
    8448:	4bbc      	ldr	r3, [pc, #752]	; (873c <MiWiPROTasks+0x378>)
    844a:	2101      	movs	r1, #1
    844c:	400a      	ands	r2, r1
    844e:	0150      	lsls	r0, r2, #5
    8450:	781a      	ldrb	r2, [r3, #0]
    8452:	2120      	movs	r1, #32
    8454:	438a      	bics	r2, r1
    8456:	1c11      	adds	r1, r2, #0
    8458:	1c02      	adds	r2, r0, #0
    845a:	430a      	orrs	r2, r1
    845c:	701a      	strb	r2, [r3, #0]
            rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
    845e:	4bb8      	ldr	r3, [pc, #736]	; (8740 <MiWiPROTasks+0x37c>)
    8460:	781b      	ldrb	r3, [r3, #0]
    8462:	061b      	lsls	r3, r3, #24
    8464:	0fdb      	lsrs	r3, r3, #31
    8466:	b2da      	uxtb	r2, r3
    8468:	4bb4      	ldr	r3, [pc, #720]	; (873c <MiWiPROTasks+0x378>)
    846a:	2101      	movs	r1, #1
    846c:	400a      	ands	r2, r1
    846e:	0190      	lsls	r0, r2, #6
    8470:	781a      	ldrb	r2, [r3, #0]
    8472:	2140      	movs	r1, #64	; 0x40
    8474:	438a      	bics	r2, r1
    8476:	1c11      	adds	r1, r2, #0
    8478:	1c02      	adds	r2, r0, #0
    847a:	430a      	orrs	r2, r1
    847c:	701a      	strb	r2, [r3, #0]
            
            if( MACRxPacket.flags.bits.sourcePrsnt )
    847e:	4bb0      	ldr	r3, [pc, #704]	; (8740 <MiWiPROTasks+0x37c>)
    8480:	781b      	ldrb	r3, [r3, #0]
    8482:	227f      	movs	r2, #127	; 0x7f
    8484:	4393      	bics	r3, r2
    8486:	b2db      	uxtb	r3, r3
    8488:	2b00      	cmp	r3, #0
    848a:	d009      	beq.n	84a0 <MiWiPROTasks+0xdc>
            {
                #if defined(IEEE_802_15_4)
                    rxMessage.flags.bits.altSrcAddr = MACRxPacket.altSourceAddress;
                #else
                    rxMessage.flags.bits.altSrcAddr = 1;
    848c:	4bab      	ldr	r3, [pc, #684]	; (873c <MiWiPROTasks+0x378>)
    848e:	781a      	ldrb	r2, [r3, #0]
    8490:	2180      	movs	r1, #128	; 0x80
    8492:	4249      	negs	r1, r1
    8494:	430a      	orrs	r2, r1
    8496:	701a      	strb	r2, [r3, #0]
                #endif
                rxMessage.SourceAddress = MACRxPacket.SourceAddress;
    8498:	4ba9      	ldr	r3, [pc, #676]	; (8740 <MiWiPROTasks+0x37c>)
    849a:	685a      	ldr	r2, [r3, #4]
    849c:	4ba7      	ldr	r3, [pc, #668]	; (873c <MiWiPROTasks+0x378>)
    849e:	605a      	str	r2, [r3, #4]
            }
            #if defined(IEEE_802_15_4) 
                rxMessage.SourcePANID.Val = MACRxPacket.SourcePANID.Val;
            #endif
            rxMessage.PacketLQI = MACRxPacket.LQIValue;
    84a0:	4ba7      	ldr	r3, [pc, #668]	; (8740 <MiWiPROTasks+0x37c>)
    84a2:	7c1a      	ldrb	r2, [r3, #16]
    84a4:	4ba5      	ldr	r3, [pc, #660]	; (873c <MiWiPROTasks+0x378>)
    84a6:	741a      	strb	r2, [r3, #16]
			
			MACRxPacket.RSSIValue = MiMAC_ChannelAssessment(CHANNEL_ASSESSMENT_CARRIER_SENSE);
    84a8:	2000      	movs	r0, #0
    84aa:	4ba6      	ldr	r3, [pc, #664]	; (8744 <MiWiPROTasks+0x380>)
    84ac:	4798      	blx	r3
    84ae:	0003      	movs	r3, r0
    84b0:	001a      	movs	r2, r3
    84b2:	4ba3      	ldr	r3, [pc, #652]	; (8740 <MiWiPROTasks+0x37c>)
    84b4:	81da      	strh	r2, [r3, #14]
			rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
    84b6:	4ba2      	ldr	r3, [pc, #648]	; (8740 <MiWiPROTasks+0x37c>)
    84b8:	220e      	movs	r2, #14
    84ba:	5e9a      	ldrsh	r2, [r3, r2]
    84bc:	4b9f      	ldr	r3, [pc, #636]	; (873c <MiWiPROTasks+0x378>)
    84be:	81da      	strh	r2, [r3, #14]
            
            MiWiPROStateMachine.bits.RxHasUserData = 0;
    84c0:	4b9d      	ldr	r3, [pc, #628]	; (8738 <MiWiPROTasks+0x374>)
    84c2:	781a      	ldrb	r2, [r3, #0]
    84c4:	2104      	movs	r1, #4
    84c6:	438a      	bics	r2, r1
    84c8:	701a      	strb	r2, [r3, #0]
    
	
			if(MACRxPacket.flags.bits.packetType == 0x03 && MACRxPacket.flags.bits.ackReq == 0x01){
    84ca:	4b9d      	ldr	r3, [pc, #628]	; (8740 <MiWiPROTasks+0x37c>)
    84cc:	781b      	ldrb	r3, [r3, #0]
    84ce:	2203      	movs	r2, #3
    84d0:	4013      	ands	r3, r2
    84d2:	b2db      	uxtb	r3, r3
    84d4:	2b03      	cmp	r3, #3
    84d6:	d10b      	bne.n	84f0 <MiWiPROTasks+0x12c>
    84d8:	4b99      	ldr	r3, [pc, #612]	; (8740 <MiWiPROTasks+0x37c>)
    84da:	781b      	ldrb	r3, [r3, #0]
    84dc:	2220      	movs	r2, #32
    84de:	4013      	ands	r3, r2
    84e0:	b2db      	uxtb	r3, r3
    84e2:	2b00      	cmp	r3, #0
    84e4:	d004      	beq.n	84f0 <MiWiPROTasks+0x12c>
				MACRxPacket.flags.bits.packetType = 0x00;
    84e6:	4b96      	ldr	r3, [pc, #600]	; (8740 <MiWiPROTasks+0x37c>)
    84e8:	781a      	ldrb	r2, [r3, #0]
    84ea:	2103      	movs	r1, #3
    84ec:	438a      	bics	r2, r1
    84ee:	701a      	strb	r2, [r3, #0]
			}
	
            //determine what type of packet it is.
            switch(MACRxPacket.flags.bits.packetType)
    84f0:	4b93      	ldr	r3, [pc, #588]	; (8740 <MiWiPROTasks+0x37c>)
    84f2:	781b      	ldrb	r3, [r3, #0]
    84f4:	079b      	lsls	r3, r3, #30
    84f6:	0f9b      	lsrs	r3, r3, #30
    84f8:	b2db      	uxtb	r3, r3
    84fa:	2b01      	cmp	r3, #1
    84fc:	d101      	bne.n	8502 <MiWiPROTasks+0x13e>
    84fe:	f001 ff04 	bl	a30a <MiWiPROTasks+0x1f46>
    8502:	2b03      	cmp	r3, #3
    8504:	d101      	bne.n	850a <MiWiPROTasks+0x146>
    8506:	f001 fdb5 	bl	a074 <MiWiPROTasks+0x1cb0>
    850a:	2b00      	cmp	r3, #0
    850c:	d001      	beq.n	8512 <MiWiPROTasks+0x14e>
                            break;
                      }
                    break;
                    
                default:
                    break;
    850e:	f002 ff48 	bl	b3a2 <MiWiPROTasks+0x2fde>
                        if( MACRxPacket.PayloadLen < 10 )
    8512:	4b8b      	ldr	r3, [pc, #556]	; (8740 <MiWiPROTasks+0x37c>)
    8514:	7b1b      	ldrb	r3, [r3, #12]
    8516:	2b09      	cmp	r3, #9
    8518:	d801      	bhi.n	851e <MiWiPROTasks+0x15a>
    851a:	f002 ff35 	bl	b388 <MiWiPROTasks+0x2fc4>
                        destPANID.v[0] = MACRxPacket.Payload[2];
    851e:	4b88      	ldr	r3, [pc, #544]	; (8740 <MiWiPROTasks+0x37c>)
    8520:	689b      	ldr	r3, [r3, #8]
    8522:	789a      	ldrb	r2, [r3, #2]
    8524:	2318      	movs	r3, #24
    8526:	18fb      	adds	r3, r7, r3
    8528:	701a      	strb	r2, [r3, #0]
                        destPANID.v[1] = MACRxPacket.Payload[3];
    852a:	4b85      	ldr	r3, [pc, #532]	; (8740 <MiWiPROTasks+0x37c>)
    852c:	689b      	ldr	r3, [r3, #8]
    852e:	78da      	ldrb	r2, [r3, #3]
    8530:	2318      	movs	r3, #24
    8532:	18fb      	adds	r3, r7, r3
    8534:	705a      	strb	r2, [r3, #1]
						if( myPANID.Val != destPANID.Val){
    8536:	4b84      	ldr	r3, [pc, #528]	; (8748 <MiWiPROTasks+0x384>)
    8538:	881a      	ldrh	r2, [r3, #0]
    853a:	2318      	movs	r3, #24
    853c:	18fb      	adds	r3, r7, r3
    853e:	881b      	ldrh	r3, [r3, #0]
    8540:	429a      	cmp	r2, r3
    8542:	d001      	beq.n	8548 <MiWiPROTasks+0x184>
    8544:	f002 ff22 	bl	b38c <MiWiPROTasks+0x2fc8>
						destShortAddress.v[0] = MACRxPacket.Payload[4];
    8548:	4b7d      	ldr	r3, [pc, #500]	; (8740 <MiWiPROTasks+0x37c>)
    854a:	689b      	ldr	r3, [r3, #8]
    854c:	791a      	ldrb	r2, [r3, #4]
    854e:	230c      	movs	r3, #12
    8550:	18fb      	adds	r3, r7, r3
    8552:	701a      	strb	r2, [r3, #0]
                        destShortAddress.v[1] = MACRxPacket.Payload[5];
    8554:	4b7a      	ldr	r3, [pc, #488]	; (8740 <MiWiPROTasks+0x37c>)
    8556:	689b      	ldr	r3, [r3, #8]
    8558:	795a      	ldrb	r2, [r3, #5]
    855a:	230c      	movs	r3, #12
    855c:	18fb      	adds	r3, r7, r3
    855e:	705a      	strb	r2, [r3, #1]
                        sourcePANID.v[0] = MACRxPacket.Payload[6];
    8560:	4b77      	ldr	r3, [pc, #476]	; (8740 <MiWiPROTasks+0x37c>)
    8562:	689b      	ldr	r3, [r3, #8]
    8564:	799a      	ldrb	r2, [r3, #6]
    8566:	2314      	movs	r3, #20
    8568:	18fb      	adds	r3, r7, r3
    856a:	701a      	strb	r2, [r3, #0]
                        sourcePANID.v[1] = MACRxPacket.Payload[7];
    856c:	4b74      	ldr	r3, [pc, #464]	; (8740 <MiWiPROTasks+0x37c>)
    856e:	689b      	ldr	r3, [r3, #8]
    8570:	79da      	ldrb	r2, [r3, #7]
    8572:	2314      	movs	r3, #20
    8574:	18fb      	adds	r3, r7, r3
    8576:	705a      	strb	r2, [r3, #1]
                        sourceShortAddress.v[0] = MACRxPacket.Payload[8];
    8578:	4b71      	ldr	r3, [pc, #452]	; (8740 <MiWiPROTasks+0x37c>)
    857a:	689b      	ldr	r3, [r3, #8]
    857c:	7a1a      	ldrb	r2, [r3, #8]
    857e:	2310      	movs	r3, #16
    8580:	18fb      	adds	r3, r7, r3
    8582:	701a      	strb	r2, [r3, #0]
                        sourceShortAddress.v[1] = MACRxPacket.Payload[9];                 
    8584:	4b6e      	ldr	r3, [pc, #440]	; (8740 <MiWiPROTasks+0x37c>)
    8586:	689b      	ldr	r3, [r3, #8]
    8588:	7a5a      	ldrb	r2, [r3, #9]
    858a:	2310      	movs	r3, #16
    858c:	18fb      	adds	r3, r7, r3
    858e:	705a      	strb	r2, [r3, #1]
                        rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
    8590:	4b6b      	ldr	r3, [pc, #428]	; (8740 <MiWiPROTasks+0x37c>)
    8592:	781b      	ldrb	r3, [r3, #0]
    8594:	071b      	lsls	r3, r3, #28
    8596:	0fdb      	lsrs	r3, r3, #31
    8598:	b2da      	uxtb	r2, r3
    859a:	4b68      	ldr	r3, [pc, #416]	; (873c <MiWiPROTasks+0x378>)
    859c:	2101      	movs	r1, #1
    859e:	400a      	ands	r2, r1
    85a0:	00d0      	lsls	r0, r2, #3
    85a2:	781a      	ldrb	r2, [r3, #0]
    85a4:	2108      	movs	r1, #8
    85a6:	438a      	bics	r2, r1
    85a8:	1c11      	adds	r1, r2, #0
    85aa:	1c02      	adds	r2, r0, #0
    85ac:	430a      	orrs	r2, r1
    85ae:	701a      	strb	r2, [r3, #0]
                        if(rxMessage.flags.bits.broadcast || destShortAddress.Val > 0xFFFC)
    85b0:	4b62      	ldr	r3, [pc, #392]	; (873c <MiWiPROTasks+0x378>)
    85b2:	781b      	ldrb	r3, [r3, #0]
    85b4:	2203      	movs	r2, #3
    85b6:	4013      	ands	r3, r2
    85b8:	b2db      	uxtb	r3, r3
    85ba:	2b00      	cmp	r3, #0
    85bc:	d106      	bne.n	85cc <MiWiPROTasks+0x208>
    85be:	230c      	movs	r3, #12
    85c0:	18fb      	adds	r3, r7, r3
    85c2:	881b      	ldrh	r3, [r3, #0]
    85c4:	4a61      	ldr	r2, [pc, #388]	; (874c <MiWiPROTasks+0x388>)
    85c6:	4293      	cmp	r3, r2
    85c8:	d800      	bhi.n	85cc <MiWiPROTasks+0x208>
    85ca:	e135      	b.n	8838 <MiWiPROTasks+0x474>
                            if( sourceShortAddress.Val == myShortAddress.Val && 
    85cc:	2310      	movs	r3, #16
    85ce:	18fb      	adds	r3, r7, r3
    85d0:	881a      	ldrh	r2, [r3, #0]
    85d2:	4b5f      	ldr	r3, [pc, #380]	; (8750 <MiWiPROTasks+0x38c>)
    85d4:	881b      	ldrh	r3, [r3, #0]
    85d6:	429a      	cmp	r2, r3
    85d8:	d108      	bne.n	85ec <MiWiPROTasks+0x228>
                                sourcePANID.Val == myPANID.Val )
    85da:	2314      	movs	r3, #20
    85dc:	18fb      	adds	r3, r7, r3
    85de:	881a      	ldrh	r2, [r3, #0]
    85e0:	4b59      	ldr	r3, [pc, #356]	; (8748 <MiWiPROTasks+0x384>)
    85e2:	881b      	ldrh	r3, [r3, #0]
                            if( sourceShortAddress.Val == myShortAddress.Val && 
    85e4:	429a      	cmp	r2, r3
    85e6:	d101      	bne.n	85ec <MiWiPROTasks+0x228>
    85e8:	f002 fed2 	bl	b390 <MiWiPROTasks+0x2fcc>
                            for(i = 0; i < PACKET_RECORD_SIZE; i++)
    85ec:	233f      	movs	r3, #63	; 0x3f
    85ee:	18fb      	adds	r3, r7, r3
    85f0:	2200      	movs	r2, #0
    85f2:	701a      	strb	r2, [r3, #0]
    85f4:	e029      	b.n	864a <MiWiPROTasks+0x286>
                                if( PacketRecords[i].RxCounter && 
    85f6:	233f      	movs	r3, #63	; 0x3f
    85f8:	18fb      	adds	r3, r7, r3
    85fa:	781b      	ldrb	r3, [r3, #0]
    85fc:	4a55      	ldr	r2, [pc, #340]	; (8754 <MiWiPROTasks+0x390>)
    85fe:	00db      	lsls	r3, r3, #3
    8600:	18d3      	adds	r3, r2, r3
    8602:	3303      	adds	r3, #3
    8604:	781b      	ldrb	r3, [r3, #0]
    8606:	2b00      	cmp	r3, #0
    8608:	d018      	beq.n	863c <MiWiPROTasks+0x278>
                                    PacketRecords[i].AltSourceAddr.Val == sourceShortAddress.Val &&
    860a:	233f      	movs	r3, #63	; 0x3f
    860c:	18fb      	adds	r3, r7, r3
    860e:	781a      	ldrb	r2, [r3, #0]
    8610:	4b50      	ldr	r3, [pc, #320]	; (8754 <MiWiPROTasks+0x390>)
    8612:	00d2      	lsls	r2, r2, #3
    8614:	5ad2      	ldrh	r2, [r2, r3]
    8616:	2310      	movs	r3, #16
    8618:	18fb      	adds	r3, r7, r3
    861a:	881b      	ldrh	r3, [r3, #0]
                                if( PacketRecords[i].RxCounter && 
    861c:	429a      	cmp	r2, r3
    861e:	d10d      	bne.n	863c <MiWiPROTasks+0x278>
                                    PacketRecords[i].MiWiPROSeq == MACRxPacket.Payload[10] )
    8620:	233f      	movs	r3, #63	; 0x3f
    8622:	18fb      	adds	r3, r7, r3
    8624:	781b      	ldrb	r3, [r3, #0]
    8626:	4a4b      	ldr	r2, [pc, #300]	; (8754 <MiWiPROTasks+0x390>)
    8628:	00db      	lsls	r3, r3, #3
    862a:	18d3      	adds	r3, r2, r3
    862c:	3302      	adds	r3, #2
    862e:	781a      	ldrb	r2, [r3, #0]
    8630:	4b43      	ldr	r3, [pc, #268]	; (8740 <MiWiPROTasks+0x37c>)
    8632:	689b      	ldr	r3, [r3, #8]
    8634:	330a      	adds	r3, #10
    8636:	781b      	ldrb	r3, [r3, #0]
                                    PacketRecords[i].AltSourceAddr.Val == sourceShortAddress.Val &&
    8638:	429a      	cmp	r2, r3
    863a:	d00c      	beq.n	8656 <MiWiPROTasks+0x292>
                            for(i = 0; i < PACKET_RECORD_SIZE; i++)
    863c:	233f      	movs	r3, #63	; 0x3f
    863e:	18fb      	adds	r3, r7, r3
    8640:	781a      	ldrb	r2, [r3, #0]
    8642:	233f      	movs	r3, #63	; 0x3f
    8644:	18fb      	adds	r3, r7, r3
    8646:	3201      	adds	r2, #1
    8648:	701a      	strb	r2, [r3, #0]
    864a:	233f      	movs	r3, #63	; 0x3f
    864c:	18fb      	adds	r3, r7, r3
    864e:	781b      	ldrb	r3, [r3, #0]
    8650:	2b07      	cmp	r3, #7
    8652:	d9d0      	bls.n	85f6 <MiWiPROTasks+0x232>
    8654:	e000      	b.n	8658 <MiWiPROTasks+0x294>
                                    break;
    8656:	46c0      	nop			; (mov r8, r8)
                            if( i < PACKET_RECORD_SIZE )
    8658:	233f      	movs	r3, #63	; 0x3f
    865a:	18fb      	adds	r3, r7, r3
    865c:	781b      	ldrb	r3, [r3, #0]
    865e:	2b07      	cmp	r3, #7
    8660:	d801      	bhi.n	8666 <MiWiPROTasks+0x2a2>
    8662:	f002 fe97 	bl	b394 <MiWiPROTasks+0x2fd0>
                            for(i = 0; i < PACKET_RECORD_SIZE; i++)
    8666:	233f      	movs	r3, #63	; 0x3f
    8668:	18fb      	adds	r3, r7, r3
    866a:	2200      	movs	r2, #0
    866c:	701a      	strb	r2, [r3, #0]
    866e:	e010      	b.n	8692 <MiWiPROTasks+0x2ce>
                                if( PacketRecords[i].RxCounter == 0 )
    8670:	233f      	movs	r3, #63	; 0x3f
    8672:	18fb      	adds	r3, r7, r3
    8674:	781b      	ldrb	r3, [r3, #0]
    8676:	4a37      	ldr	r2, [pc, #220]	; (8754 <MiWiPROTasks+0x390>)
    8678:	00db      	lsls	r3, r3, #3
    867a:	18d3      	adds	r3, r2, r3
    867c:	3303      	adds	r3, #3
    867e:	781b      	ldrb	r3, [r3, #0]
    8680:	2b00      	cmp	r3, #0
    8682:	d00c      	beq.n	869e <MiWiPROTasks+0x2da>
                            for(i = 0; i < PACKET_RECORD_SIZE; i++)
    8684:	233f      	movs	r3, #63	; 0x3f
    8686:	18fb      	adds	r3, r7, r3
    8688:	781a      	ldrb	r2, [r3, #0]
    868a:	233f      	movs	r3, #63	; 0x3f
    868c:	18fb      	adds	r3, r7, r3
    868e:	3201      	adds	r2, #1
    8690:	701a      	strb	r2, [r3, #0]
    8692:	233f      	movs	r3, #63	; 0x3f
    8694:	18fb      	adds	r3, r7, r3
    8696:	781b      	ldrb	r3, [r3, #0]
    8698:	2b07      	cmp	r3, #7
    869a:	d9e9      	bls.n	8670 <MiWiPROTasks+0x2ac>
    869c:	e000      	b.n	86a0 <MiWiPROTasks+0x2dc>
                                    break;
    869e:	46c0      	nop			; (mov r8, r8)
                            if( i < PACKET_RECORD_SIZE )
    86a0:	233f      	movs	r3, #63	; 0x3f
    86a2:	18fb      	adds	r3, r7, r3
    86a4:	781b      	ldrb	r3, [r3, #0]
    86a6:	2b07      	cmp	r3, #7
    86a8:	d828      	bhi.n	86fc <MiWiPROTasks+0x338>
                                PacketRecords[i].AltSourceAddr.Val = sourceShortAddress.Val;
    86aa:	233f      	movs	r3, #63	; 0x3f
    86ac:	18fb      	adds	r3, r7, r3
    86ae:	781a      	ldrb	r2, [r3, #0]
    86b0:	2310      	movs	r3, #16
    86b2:	18fb      	adds	r3, r7, r3
    86b4:	8819      	ldrh	r1, [r3, #0]
    86b6:	4b27      	ldr	r3, [pc, #156]	; (8754 <MiWiPROTasks+0x390>)
    86b8:	00d2      	lsls	r2, r2, #3
    86ba:	52d1      	strh	r1, [r2, r3]
                                PacketRecords[i].MiWiPROSeq = MACRxPacket.Payload[10];
    86bc:	233f      	movs	r3, #63	; 0x3f
    86be:	18fb      	adds	r3, r7, r3
    86c0:	7819      	ldrb	r1, [r3, #0]
    86c2:	4b1f      	ldr	r3, [pc, #124]	; (8740 <MiWiPROTasks+0x37c>)
    86c4:	689b      	ldr	r3, [r3, #8]
    86c6:	7a98      	ldrb	r0, [r3, #10]
    86c8:	4a22      	ldr	r2, [pc, #136]	; (8754 <MiWiPROTasks+0x390>)
    86ca:	00cb      	lsls	r3, r1, #3
    86cc:	18d3      	adds	r3, r2, r3
    86ce:	3302      	adds	r3, #2
    86d0:	1c02      	adds	r2, r0, #0
    86d2:	701a      	strb	r2, [r3, #0]
                                PacketRecords[i].RxCounter = INDIRECT_MESSAGE_TIMEOUT_CYCLE + 1;
    86d4:	233f      	movs	r3, #63	; 0x3f
    86d6:	18fb      	adds	r3, r7, r3
    86d8:	781b      	ldrb	r3, [r3, #0]
    86da:	4a1e      	ldr	r2, [pc, #120]	; (8754 <MiWiPROTasks+0x390>)
    86dc:	00db      	lsls	r3, r3, #3
    86de:	18d3      	adds	r3, r2, r3
    86e0:	3303      	adds	r3, #3
    86e2:	2203      	movs	r2, #3
    86e4:	701a      	strb	r2, [r3, #0]
                                    PacketRecords[i].StartTick = MiWi_TickGet();
    86e6:	233f      	movs	r3, #63	; 0x3f
    86e8:	18fb      	adds	r3, r7, r3
    86ea:	781b      	ldrb	r3, [r3, #0]
    86ec:	4a19      	ldr	r2, [pc, #100]	; (8754 <MiWiPROTasks+0x390>)
    86ee:	00db      	lsls	r3, r3, #3
    86f0:	18d3      	adds	r3, r2, r3
    86f2:	1d1c      	adds	r4, r3, #4
    86f4:	4b18      	ldr	r3, [pc, #96]	; (8758 <MiWiPROTasks+0x394>)
    86f6:	4798      	blx	r3
    86f8:	0003      	movs	r3, r0
    86fa:	6023      	str	r3, [r4, #0]
                            if( destShortAddress.Val == 0xFFFF )
    86fc:	230c      	movs	r3, #12
    86fe:	18fb      	adds	r3, r7, r3
    8700:	881b      	ldrh	r3, [r3, #0]
    8702:	4a16      	ldr	r2, [pc, #88]	; (875c <MiWiPROTasks+0x398>)
    8704:	4293      	cmp	r3, r2
    8706:	d108      	bne.n	871a <MiWiPROTasks+0x356>
                                rxMessage.flags.bits.broadcast = BROADCAST_TO_ALL;
    8708:	4b0c      	ldr	r3, [pc, #48]	; (873c <MiWiPROTasks+0x378>)
    870a:	781a      	ldrb	r2, [r3, #0]
    870c:	2103      	movs	r1, #3
    870e:	438a      	bics	r2, r1
    8710:	1c11      	adds	r1, r2, #0
    8712:	2201      	movs	r2, #1
    8714:	430a      	orrs	r2, r1
    8716:	701a      	strb	r2, [r3, #0]
    8718:	e032      	b.n	8780 <MiWiPROTasks+0x3bc>
                            else if( destShortAddress.Val == 0xFFFE )
    871a:	230c      	movs	r3, #12
    871c:	18fb      	adds	r3, r7, r3
    871e:	881b      	ldrh	r3, [r3, #0]
    8720:	4a0f      	ldr	r2, [pc, #60]	; (8760 <MiWiPROTasks+0x39c>)
    8722:	4293      	cmp	r3, r2
    8724:	d11e      	bne.n	8764 <MiWiPROTasks+0x3a0>
                                rxMessage.flags.bits.broadcast = MULTICAST_TO_FFDS;
    8726:	4b05      	ldr	r3, [pc, #20]	; (873c <MiWiPROTasks+0x378>)
    8728:	781a      	ldrb	r2, [r3, #0]
    872a:	2103      	movs	r1, #3
    872c:	430a      	orrs	r2, r1
    872e:	701a      	strb	r2, [r3, #0]
    8730:	e026      	b.n	8780 <MiWiPROTasks+0x3bc>
    8732:	46c0      	nop			; (mov r8, r8)
    8734:	0000ffa5 	.word	0x0000ffa5
    8738:	20001144 	.word	0x20001144
    873c:	20001504 	.word	0x20001504
    8740:	2000126c 	.word	0x2000126c
    8744:	00010151 	.word	0x00010151
    8748:	20001290 	.word	0x20001290
    874c:	0000fffc 	.word	0x0000fffc
    8750:	20001140 	.word	0x20001140
    8754:	20001544 	.word	0x20001544
    8758:	0000ebad 	.word	0x0000ebad
    875c:	0000ffff 	.word	0x0000ffff
    8760:	0000fffe 	.word	0x0000fffe
                            else if( destShortAddress.Val == 0xFFFD )    
    8764:	230c      	movs	r3, #12
    8766:	18fb      	adds	r3, r7, r3
    8768:	881b      	ldrh	r3, [r3, #0]
    876a:	4ade      	ldr	r2, [pc, #888]	; (8ae4 <MiWiPROTasks+0x720>)
    876c:	4293      	cmp	r3, r2
    876e:	d107      	bne.n	8780 <MiWiPROTasks+0x3bc>
                                rxMessage.flags.bits.broadcast = MULTICAST_TO_COORDINATORS;
    8770:	4bdd      	ldr	r3, [pc, #884]	; (8ae8 <MiWiPROTasks+0x724>)
    8772:	781a      	ldrb	r2, [r3, #0]
    8774:	2103      	movs	r1, #3
    8776:	438a      	bics	r2, r1
    8778:	1c11      	adds	r1, r2, #0
    877a:	2202      	movs	r2, #2
    877c:	430a      	orrs	r2, r1
    877e:	701a      	strb	r2, [r3, #0]
                                if(MACRxPacket.Payload[0]>1)
    8780:	4bda      	ldr	r3, [pc, #872]	; (8aec <MiWiPROTasks+0x728>)
    8782:	689b      	ldr	r3, [r3, #8]
    8784:	781b      	ldrb	r3, [r3, #0]
    8786:	2b01      	cmp	r3, #1
    8788:	d800      	bhi.n	878c <MiWiPROTasks+0x3c8>
    878a:	e0f5      	b.n	8978 <MiWiPROTasks+0x5b4>
                                    MACRxPacket.Payload[0]--;
    878c:	4bd7      	ldr	r3, [pc, #860]	; (8aec <MiWiPROTasks+0x728>)
    878e:	689b      	ldr	r3, [r3, #8]
    8790:	781a      	ldrb	r2, [r3, #0]
    8792:	3a01      	subs	r2, #1
    8794:	b2d2      	uxtb	r2, r2
    8796:	701a      	strb	r2, [r3, #0]
                                    if( MiWiPROStatus.bits.COMM_RANDOM_SEND )
    8798:	4bd5      	ldr	r3, [pc, #852]	; (8af0 <MiWiPROTasks+0x72c>)
    879a:	781b      	ldrb	r3, [r3, #0]
    879c:	2201      	movs	r2, #1
    879e:	4013      	ands	r3, r2
    87a0:	b2db      	uxtb	r3, r3
    87a2:	2b00      	cmp	r3, #0
    87a4:	d007      	beq.n	87b6 <MiWiPROTasks+0x3f2>
                                        MiMAC_SendPacket(RandomSendInfo.MTP, RandomSendInfo.RandomSendTxBuffer, RandomSendInfo.RandomSendTxData);
    87a6:	4bd3      	ldr	r3, [pc, #844]	; (8af4 <MiWiPROTasks+0x730>)
    87a8:	7b5b      	ldrb	r3, [r3, #13]
    87aa:	4ad3      	ldr	r2, [pc, #844]	; (8af8 <MiWiPROTasks+0x734>)
    87ac:	49d1      	ldr	r1, [pc, #836]	; (8af4 <MiWiPROTasks+0x730>)
    87ae:	6848      	ldr	r0, [r1, #4]
    87b0:	6889      	ldr	r1, [r1, #8]
    87b2:	4cd2      	ldr	r4, [pc, #840]	; (8afc <MiWiPROTasks+0x738>)
    87b4:	47a0      	blx	r4
                                    RandomSendInfo.RandomSendTxData = 0;
    87b6:	4bcf      	ldr	r3, [pc, #828]	; (8af4 <MiWiPROTasks+0x730>)
    87b8:	2200      	movs	r2, #0
    87ba:	735a      	strb	r2, [r3, #13]
                                    for(i = 0; i < MACRxPacket.PayloadLen; i++)
    87bc:	233f      	movs	r3, #63	; 0x3f
    87be:	18fb      	adds	r3, r7, r3
    87c0:	2200      	movs	r2, #0
    87c2:	701a      	strb	r2, [r3, #0]
    87c4:	e017      	b.n	87f6 <MiWiPROTasks+0x432>
                                        RandomSendInfo.RandomSendTxBuffer[RandomSendInfo.RandomSendTxData++] = MACRxPacket.Payload[i];
    87c6:	4bcb      	ldr	r3, [pc, #812]	; (8af4 <MiWiPROTasks+0x730>)
    87c8:	7b5b      	ldrb	r3, [r3, #13]
    87ca:	1c5a      	adds	r2, r3, #1
    87cc:	b2d1      	uxtb	r1, r2
    87ce:	4ac9      	ldr	r2, [pc, #804]	; (8af4 <MiWiPROTasks+0x730>)
    87d0:	7351      	strb	r1, [r2, #13]
    87d2:	0019      	movs	r1, r3
    87d4:	4bc5      	ldr	r3, [pc, #788]	; (8aec <MiWiPROTasks+0x728>)
    87d6:	689a      	ldr	r2, [r3, #8]
    87d8:	233f      	movs	r3, #63	; 0x3f
    87da:	18fb      	adds	r3, r7, r3
    87dc:	781b      	ldrb	r3, [r3, #0]
    87de:	18d3      	adds	r3, r2, r3
    87e0:	781a      	ldrb	r2, [r3, #0]
    87e2:	4bc4      	ldr	r3, [pc, #784]	; (8af4 <MiWiPROTasks+0x730>)
    87e4:	185b      	adds	r3, r3, r1
    87e6:	739a      	strb	r2, [r3, #14]
                                    for(i = 0; i < MACRxPacket.PayloadLen; i++)
    87e8:	233f      	movs	r3, #63	; 0x3f
    87ea:	18fb      	adds	r3, r7, r3
    87ec:	781a      	ldrb	r2, [r3, #0]
    87ee:	233f      	movs	r3, #63	; 0x3f
    87f0:	18fb      	adds	r3, r7, r3
    87f2:	3201      	adds	r2, #1
    87f4:	701a      	strb	r2, [r3, #0]
    87f6:	4bbd      	ldr	r3, [pc, #756]	; (8aec <MiWiPROTasks+0x728>)
    87f8:	7b1b      	ldrb	r3, [r3, #12]
    87fa:	223f      	movs	r2, #63	; 0x3f
    87fc:	18ba      	adds	r2, r7, r2
    87fe:	7812      	ldrb	r2, [r2, #0]
    8800:	429a      	cmp	r2, r3
    8802:	d3e0      	bcc.n	87c6 <MiWiPROTasks+0x402>
                                    RandomSendInfo.MTP.flags.Val = MACRxPacket.flags.Val;
    8804:	4bb9      	ldr	r3, [pc, #740]	; (8aec <MiWiPROTasks+0x728>)
    8806:	781a      	ldrb	r2, [r3, #0]
    8808:	4bba      	ldr	r3, [pc, #744]	; (8af4 <MiWiPROTasks+0x730>)
    880a:	711a      	strb	r2, [r3, #4]
									RandomSendInfo.StartTick = MiWi_TickGet();
    880c:	4cb9      	ldr	r4, [pc, #740]	; (8af4 <MiWiPROTasks+0x730>)
    880e:	4bbc      	ldr	r3, [pc, #752]	; (8b00 <MiWiPROTasks+0x73c>)
    8810:	4798      	blx	r3
    8812:	0003      	movs	r3, r0
    8814:	6023      	str	r3, [r4, #0]
									RandomSendInfo.RandomDelayInMilliSecond = (rand() % RANDOM_DELAY_RANGE);
    8816:	4bbb      	ldr	r3, [pc, #748]	; (8b04 <MiWiPROTasks+0x740>)
    8818:	4798      	blx	r3
    881a:	0002      	movs	r2, r0
    881c:	4bba      	ldr	r3, [pc, #744]	; (8b08 <MiWiPROTasks+0x744>)
    881e:	21c8      	movs	r1, #200	; 0xc8
    8820:	0010      	movs	r0, r2
    8822:	4798      	blx	r3
    8824:	000b      	movs	r3, r1
    8826:	b2da      	uxtb	r2, r3
    8828:	4bb2      	ldr	r3, [pc, #712]	; (8af4 <MiWiPROTasks+0x730>)
    882a:	731a      	strb	r2, [r3, #12]
                                    MiWiPROStatus.bits.COMM_RANDOM_SEND = 1;
    882c:	4bb0      	ldr	r3, [pc, #704]	; (8af0 <MiWiPROTasks+0x72c>)
    882e:	781a      	ldrb	r2, [r3, #0]
    8830:	2101      	movs	r1, #1
    8832:	430a      	orrs	r2, r1
    8834:	701a      	strb	r2, [r3, #0]
                            goto ThisPacketIsForMe;
    8836:	e09f      	b.n	8978 <MiWiPROTasks+0x5b4>
                        if((destPANID.Val == myPANID.Val) && (destShortAddress.Val == myShortAddress.Val))
    8838:	2318      	movs	r3, #24
    883a:	18fb      	adds	r3, r7, r3
    883c:	881a      	ldrh	r2, [r3, #0]
    883e:	4bb3      	ldr	r3, [pc, #716]	; (8b0c <MiWiPROTasks+0x748>)
    8840:	881b      	ldrh	r3, [r3, #0]
    8842:	429a      	cmp	r2, r3
    8844:	d001      	beq.n	884a <MiWiPROTasks+0x486>
    8846:	f001 fb71 	bl	9f2c <MiWiPROTasks+0x1b68>
    884a:	230c      	movs	r3, #12
    884c:	18fb      	adds	r3, r7, r3
    884e:	881a      	ldrh	r2, [r3, #0]
    8850:	4baf      	ldr	r3, [pc, #700]	; (8b10 <MiWiPROTasks+0x74c>)
    8852:	881b      	ldrh	r3, [r3, #0]
    8854:	429a      	cmp	r2, r3
    8856:	d001      	beq.n	885c <MiWiPROTasks+0x498>
    8858:	f001 fb68 	bl	9f2c <MiWiPROTasks+0x1b68>
                            if(MACRxPacket.Payload[1] & MIWI_PRO_ACK_REQ)
    885c:	4ba3      	ldr	r3, [pc, #652]	; (8aec <MiWiPROTasks+0x728>)
    885e:	689b      	ldr	r3, [r3, #8]
    8860:	3301      	adds	r3, #1
    8862:	781b      	ldrb	r3, [r3, #0]
    8864:	001a      	movs	r2, r3
    8866:	2304      	movs	r3, #4
    8868:	4013      	ands	r3, r2
    886a:	d100      	bne.n	886e <MiWiPROTasks+0x4aa>
    886c:	e085      	b.n	897a <MiWiPROTasks+0x5b6>
                                TxBuffer[0] = defaultHops;		    //number of hops
    886e:	4ba9      	ldr	r3, [pc, #676]	; (8b14 <MiWiPROTasks+0x750>)
    8870:	781a      	ldrb	r2, [r3, #0]
    8872:	4ba9      	ldr	r3, [pc, #676]	; (8b18 <MiWiPROTasks+0x754>)
    8874:	701a      	strb	r2, [r3, #0]
                                TxBuffer[1] = 0x02;		            //Frame Control
    8876:	4ba8      	ldr	r3, [pc, #672]	; (8b18 <MiWiPROTasks+0x754>)
    8878:	2202      	movs	r2, #2
    887a:	705a      	strb	r2, [r3, #1]
                                TxBuffer[2] = sourcePANID.v[0];		
    887c:	2314      	movs	r3, #20
    887e:	18fb      	adds	r3, r7, r3
    8880:	781a      	ldrb	r2, [r3, #0]
    8882:	4ba5      	ldr	r3, [pc, #660]	; (8b18 <MiWiPROTasks+0x754>)
    8884:	709a      	strb	r2, [r3, #2]
                                TxBuffer[3] = sourcePANID.v[1];
    8886:	2314      	movs	r3, #20
    8888:	18fb      	adds	r3, r7, r3
    888a:	785a      	ldrb	r2, [r3, #1]
    888c:	4ba2      	ldr	r3, [pc, #648]	; (8b18 <MiWiPROTasks+0x754>)
    888e:	70da      	strb	r2, [r3, #3]
                                TxBuffer[4] = sourceShortAddress.v[0]; 
    8890:	2310      	movs	r3, #16
    8892:	18fb      	adds	r3, r7, r3
    8894:	781a      	ldrb	r2, [r3, #0]
    8896:	4ba0      	ldr	r3, [pc, #640]	; (8b18 <MiWiPROTasks+0x754>)
    8898:	711a      	strb	r2, [r3, #4]
                                TxBuffer[5] = sourceShortAddress.v[1];
    889a:	2310      	movs	r3, #16
    889c:	18fb      	adds	r3, r7, r3
    889e:	785a      	ldrb	r2, [r3, #1]
    88a0:	4b9d      	ldr	r3, [pc, #628]	; (8b18 <MiWiPROTasks+0x754>)
    88a2:	715a      	strb	r2, [r3, #5]
                                TxBuffer[6] = myPANID.v[0];			//source PANID LSB
    88a4:	4b99      	ldr	r3, [pc, #612]	; (8b0c <MiWiPROTasks+0x748>)
    88a6:	781a      	ldrb	r2, [r3, #0]
    88a8:	4b9b      	ldr	r3, [pc, #620]	; (8b18 <MiWiPROTasks+0x754>)
    88aa:	719a      	strb	r2, [r3, #6]
                                TxBuffer[7] = myPANID.v[1];			//source PANID MSB
    88ac:	4b97      	ldr	r3, [pc, #604]	; (8b0c <MiWiPROTasks+0x748>)
    88ae:	785a      	ldrb	r2, [r3, #1]
    88b0:	4b99      	ldr	r3, [pc, #612]	; (8b18 <MiWiPROTasks+0x754>)
    88b2:	71da      	strb	r2, [r3, #7]
                                TxBuffer[8] = myShortAddress.v[0];	//source address LSB
    88b4:	4b96      	ldr	r3, [pc, #600]	; (8b10 <MiWiPROTasks+0x74c>)
    88b6:	781a      	ldrb	r2, [r3, #0]
    88b8:	4b97      	ldr	r3, [pc, #604]	; (8b18 <MiWiPROTasks+0x754>)
    88ba:	721a      	strb	r2, [r3, #8]
                                TxBuffer[9] = myShortAddress.v[1];	//source address MSB
    88bc:	4b94      	ldr	r3, [pc, #592]	; (8b10 <MiWiPROTasks+0x74c>)
    88be:	785a      	ldrb	r2, [r3, #1]
    88c0:	4b95      	ldr	r3, [pc, #596]	; (8b18 <MiWiPROTasks+0x754>)
    88c2:	725a      	strb	r2, [r3, #9]
                                TxBuffer[10] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN-1];   //sequence number
    88c4:	4b89      	ldr	r3, [pc, #548]	; (8aec <MiWiPROTasks+0x728>)
    88c6:	689b      	ldr	r3, [r3, #8]
    88c8:	7a9a      	ldrb	r2, [r3, #10]
    88ca:	4b93      	ldr	r3, [pc, #588]	; (8b18 <MiWiPROTasks+0x754>)
    88cc:	729a      	strb	r2, [r3, #10]
                                TxBuffer[11] = MIWI_PRO_STACK_REPORT_TYPE;
    88ce:	4b92      	ldr	r3, [pc, #584]	; (8b18 <MiWiPROTasks+0x754>)
    88d0:	2200      	movs	r2, #0
    88d2:	72da      	strb	r2, [r3, #11]
                                TxBuffer[12] = ACK_REPORT_TYPE;
    88d4:	4b90      	ldr	r3, [pc, #576]	; (8b18 <MiWiPROTasks+0x754>)
    88d6:	2230      	movs	r2, #48	; 0x30
    88d8:	731a      	strb	r2, [r3, #12]
                                TxData = 13;
    88da:	4b90      	ldr	r3, [pc, #576]	; (8b1c <MiWiPROTasks+0x758>)
    88dc:	220d      	movs	r2, #13
    88de:	701a      	strb	r2, [r3, #0]
                                    if( sourceShortAddress.v[1] != myShortAddress.v[1] )
    88e0:	2310      	movs	r3, #16
    88e2:	18fb      	adds	r3, r7, r3
    88e4:	785a      	ldrb	r2, [r3, #1]
    88e6:	4b8a      	ldr	r3, [pc, #552]	; (8b10 <MiWiPROTasks+0x74c>)
    88e8:	785b      	ldrb	r3, [r3, #1]
    88ea:	429a      	cmp	r2, r3
    88ec:	d13e      	bne.n	896c <MiWiPROTasks+0x5a8>
                                        MTP.flags.Val = 0;
    88ee:	4b8c      	ldr	r3, [pc, #560]	; (8b20 <MiWiPROTasks+0x75c>)
    88f0:	2200      	movs	r2, #0
    88f2:	701a      	strb	r2, [r3, #0]
                                        MTP.flags.bits.ackReq = 1;
    88f4:	4b8a      	ldr	r3, [pc, #552]	; (8b20 <MiWiPROTasks+0x75c>)
    88f6:	781a      	ldrb	r2, [r3, #0]
    88f8:	2120      	movs	r1, #32
    88fa:	430a      	orrs	r2, r1
    88fc:	701a      	strb	r2, [r3, #0]
                                            tempShortAddress.Val = sourceShortAddress.Val;
    88fe:	2310      	movs	r3, #16
    8900:	18fb      	adds	r3, r7, r3
    8902:	881a      	ldrh	r2, [r3, #0]
    8904:	4b87      	ldr	r3, [pc, #540]	; (8b24 <MiWiPROTasks+0x760>)
    8906:	801a      	strh	r2, [r3, #0]
                                            tempPANID.Val = sourcePANID.Val;
    8908:	2314      	movs	r3, #20
    890a:	18fb      	adds	r3, r7, r3
    890c:	881a      	ldrh	r2, [r3, #0]
    890e:	4b86      	ldr	r3, [pc, #536]	; (8b28 <MiWiPROTasks+0x764>)
    8910:	801a      	strh	r2, [r3, #0]
                                            if( (i = SearchForShortAddress()) != 0xFF )
    8912:	233f      	movs	r3, #63	; 0x3f
    8914:	18fc      	adds	r4, r7, r3
    8916:	4b85      	ldr	r3, [pc, #532]	; (8b2c <MiWiPROTasks+0x768>)
    8918:	4798      	blx	r3
    891a:	0003      	movs	r3, r0
    891c:	7023      	strb	r3, [r4, #0]
    891e:	233f      	movs	r3, #63	; 0x3f
    8920:	18fb      	adds	r3, r7, r3
    8922:	781b      	ldrb	r3, [r3, #0]
    8924:	2bff      	cmp	r3, #255	; 0xff
    8926:	d008      	beq.n	893a <MiWiPROTasks+0x576>
                                                MTP.DestAddress = ConnectionTable[i].Address;
    8928:	233f      	movs	r3, #63	; 0x3f
    892a:	18fb      	adds	r3, r7, r3
    892c:	781b      	ldrb	r3, [r3, #0]
    892e:	011a      	lsls	r2, r3, #4
    8930:	4b7f      	ldr	r3, [pc, #508]	; (8b30 <MiWiPROTasks+0x76c>)
    8932:	18d3      	adds	r3, r2, r3
    8934:	1d1a      	adds	r2, r3, #4
    8936:	4b7a      	ldr	r3, [pc, #488]	; (8b20 <MiWiPROTasks+0x75c>)
    8938:	605a      	str	r2, [r3, #4]
                                       	printf("TX3....\n\r");
    893a:	4b7e      	ldr	r3, [pc, #504]	; (8b34 <MiWiPROTasks+0x770>)
    893c:	0018      	movs	r0, r3
    893e:	4b7e      	ldr	r3, [pc, #504]	; (8b38 <MiWiPROTasks+0x774>)
    8940:	4798      	blx	r3
										if(RF_OUTPUT==20){
    8942:	4b7e      	ldr	r3, [pc, #504]	; (8b3c <MiWiPROTasks+0x778>)
    8944:	781b      	ldrb	r3, [r3, #0]
    8946:	2b14      	cmp	r3, #20
    8948:	d104      	bne.n	8954 <MiWiPROTasks+0x590>
											port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_INACTIVE);//kwlee 200721		//ihkim 20220510	unicast ACK
    894a:	2100      	movs	r1, #0
    894c:	200d      	movs	r0, #13
    894e:	4b7c      	ldr	r3, [pc, #496]	; (8b40 <MiWiPROTasks+0x77c>)
    8950:	4798      	blx	r3
    8952:	e003      	b.n	895c <MiWiPROTasks+0x598>
											port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_ACTIVE);//kwlee 200727		//ihkim 20220510
    8954:	2101      	movs	r1, #1
    8956:	200d      	movs	r0, #13
    8958:	4b79      	ldr	r3, [pc, #484]	; (8b40 <MiWiPROTasks+0x77c>)
    895a:	4798      	blx	r3
                                        MiMAC_SendPacket(MTP, TxBuffer, TxData);
    895c:	4b6f      	ldr	r3, [pc, #444]	; (8b1c <MiWiPROTasks+0x758>)
    895e:	781b      	ldrb	r3, [r3, #0]
    8960:	4a6d      	ldr	r2, [pc, #436]	; (8b18 <MiWiPROTasks+0x754>)
    8962:	496f      	ldr	r1, [pc, #444]	; (8b20 <MiWiPROTasks+0x75c>)
    8964:	6808      	ldr	r0, [r1, #0]
    8966:	6849      	ldr	r1, [r1, #4]
    8968:	4c64      	ldr	r4, [pc, #400]	; (8afc <MiWiPROTasks+0x738>)
    896a:	47a0      	blx	r4
                                rxMessage.flags.bits.ackReq = 1;
    896c:	4b5e      	ldr	r3, [pc, #376]	; (8ae8 <MiWiPROTasks+0x724>)
    896e:	781a      	ldrb	r2, [r3, #0]
    8970:	2104      	movs	r1, #4
    8972:	430a      	orrs	r2, r1
    8974:	701a      	strb	r2, [r3, #0]
    8976:	e000      	b.n	897a <MiWiPROTasks+0x5b6>
                            goto ThisPacketIsForMe;
    8978:	46c0      	nop			; (mov r8, r8)
                            if(MACRxPacket.Payload[MIWI_PRO_HEADER_LEN] == MIWI_PRO_STACK_REPORT_TYPE)
    897a:	4b5c      	ldr	r3, [pc, #368]	; (8aec <MiWiPROTasks+0x728>)
    897c:	689b      	ldr	r3, [r3, #8]
    897e:	330b      	adds	r3, #11
    8980:	781b      	ldrb	r3, [r3, #0]
    8982:	2b00      	cmp	r3, #0
    8984:	d001      	beq.n	898a <MiWiPROTasks+0x5c6>
    8986:	f001 fa6b 	bl	9e60 <MiWiPROTasks+0x1a9c>
                                if( MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+1] != ACK_REPORT_TYPE)
    898a:	4b58      	ldr	r3, [pc, #352]	; (8aec <MiWiPROTasks+0x728>)
    898c:	689b      	ldr	r3, [r3, #8]
    898e:	330c      	adds	r3, #12
    8990:	781b      	ldrb	r3, [r3, #0]
    8992:	2b30      	cmp	r3, #48	; 0x30
    8994:	d101      	bne.n	899a <MiWiPROTasks+0x5d6>
    8996:	f001 fa4c 	bl	9e32 <MiWiPROTasks+0x1a6e>
                                    switch(MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+1])
    899a:	4b54      	ldr	r3, [pc, #336]	; (8aec <MiWiPROTasks+0x728>)
    899c:	689b      	ldr	r3, [r3, #8]
    899e:	330c      	adds	r3, #12
    89a0:	781b      	ldrb	r3, [r3, #0]
    89a2:	2ba1      	cmp	r3, #161	; 0xa1
    89a4:	d101      	bne.n	89aa <MiWiPROTasks+0x5e6>
    89a6:	f000 fcdc 	bl	9362 <MiWiPROTasks+0xf9e>
    89aa:	dc18      	bgt.n	89de <MiWiPROTasks+0x61a>
    89ac:	2b40      	cmp	r3, #64	; 0x40
    89ae:	d101      	bne.n	89b4 <MiWiPROTasks+0x5f0>
    89b0:	f001 fa14 	bl	9ddc <MiWiPROTasks+0x1a18>
    89b4:	dc07      	bgt.n	89c6 <MiWiPROTasks+0x602>
    89b6:	2b10      	cmp	r3, #16
    89b8:	d030      	beq.n	8a1c <MiWiPROTasks+0x658>
    89ba:	2b11      	cmp	r3, #17
    89bc:	d101      	bne.n	89c2 <MiWiPROTasks+0x5fe>
    89be:	f000 ffe4 	bl	998a <MiWiPROTasks+0x15c6>
                                            break;
    89c2:	f001 fab2 	bl	9f2a <MiWiPROTasks+0x1b66>
                                    switch(MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+1])
    89c6:	2b42      	cmp	r3, #66	; 0x42
    89c8:	d101      	bne.n	89ce <MiWiPROTasks+0x60a>
    89ca:	f001 fa2c 	bl	9e26 <MiWiPROTasks+0x1a62>
    89ce:	da01      	bge.n	89d4 <MiWiPROTasks+0x610>
    89d0:	f001 f95b 	bl	9c8a <MiWiPROTasks+0x18c6>
    89d4:	2ba0      	cmp	r3, #160	; 0xa0
    89d6:	d100      	bne.n	89da <MiWiPROTasks+0x616>
    89d8:	e20c      	b.n	8df4 <MiWiPROTasks+0xa30>
                                            break;
    89da:	f001 faa6 	bl	9f2a <MiWiPROTasks+0x1b66>
                                    switch(MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+1])
    89de:	2bb0      	cmp	r3, #176	; 0xb0
    89e0:	d101      	bne.n	89e6 <MiWiPROTasks+0x622>
    89e2:	f001 f8b7 	bl	9b54 <MiWiPROTasks+0x1790>
    89e6:	dc0c      	bgt.n	8a02 <MiWiPROTasks+0x63e>
    89e8:	2ba3      	cmp	r3, #163	; 0xa3
    89ea:	d101      	bne.n	89f0 <MiWiPROTasks+0x62c>
    89ec:	f000 fde9 	bl	95c2 <MiWiPROTasks+0x11fe>
    89f0:	da01      	bge.n	89f6 <MiWiPROTasks+0x632>
    89f2:	f000 fda9 	bl	9548 <MiWiPROTasks+0x1184>
    89f6:	2ba4      	cmp	r3, #164	; 0xa4
    89f8:	d101      	bne.n	89fe <MiWiPROTasks+0x63a>
    89fa:	f000 fe3d 	bl	9678 <MiWiPROTasks+0x12b4>
                                            break;
    89fe:	f001 fa94 	bl	9f2a <MiWiPROTasks+0x1b66>
                                    switch(MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+1])
    8a02:	2bb2      	cmp	r3, #178	; 0xb2
    8a04:	d101      	bne.n	8a0a <MiWiPROTasks+0x646>
    8a06:	f001 f8f9 	bl	9bfc <MiWiPROTasks+0x1838>
    8a0a:	da01      	bge.n	8a10 <MiWiPROTasks+0x64c>
    8a0c:	f001 f8d4 	bl	9bb8 <MiWiPROTasks+0x17f4>
    8a10:	2bb3      	cmp	r3, #179	; 0xb3
    8a12:	d101      	bne.n	8a18 <MiWiPROTasks+0x654>
    8a14:	f001 f927 	bl	9c66 <MiWiPROTasks+0x18a2>
                                            break;
    8a18:	f001 fa87 	bl	9f2a <MiWiPROTasks+0x1b66>
                                                    if(openSocketInfo.status.bits.requestIsOpen == 0)
    8a1c:	4b49      	ldr	r3, [pc, #292]	; (8b44 <MiWiPROTasks+0x780>)
    8a1e:	781b      	ldrb	r3, [r3, #0]
    8a20:	2202      	movs	r2, #2
    8a22:	4013      	ands	r3, r2
    8a24:	b2db      	uxtb	r3, r3
    8a26:	2b00      	cmp	r3, #0
    8a28:	d000      	beq.n	8a2c <MiWiPROTasks+0x668>
    8a2a:	e08d      	b.n	8b48 <MiWiPROTasks+0x784>
                                                        openSocketInfo.socketStart = MiWi_TickGet();
    8a2c:	4c45      	ldr	r4, [pc, #276]	; (8b44 <MiWiPROTasks+0x780>)
    8a2e:	4b34      	ldr	r3, [pc, #208]	; (8b00 <MiWiPROTasks+0x73c>)
    8a30:	4798      	blx	r3
    8a32:	0003      	movs	r3, r0
    8a34:	61a3      	str	r3, [r4, #24]
                                                        openSocketInfo.ShortAddress1.v[0] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN-3];
    8a36:	4b2d      	ldr	r3, [pc, #180]	; (8aec <MiWiPROTasks+0x728>)
    8a38:	689b      	ldr	r3, [r3, #8]
    8a3a:	7a1a      	ldrb	r2, [r3, #8]
    8a3c:	4b41      	ldr	r3, [pc, #260]	; (8b44 <MiWiPROTasks+0x780>)
    8a3e:	709a      	strb	r2, [r3, #2]
                                                        openSocketInfo.ShortAddress1.v[1] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN-2];
    8a40:	4b2a      	ldr	r3, [pc, #168]	; (8aec <MiWiPROTasks+0x728>)
    8a42:	689b      	ldr	r3, [r3, #8]
    8a44:	7a5a      	ldrb	r2, [r3, #9]
    8a46:	4b3f      	ldr	r3, [pc, #252]	; (8b44 <MiWiPROTasks+0x780>)
    8a48:	70da      	strb	r2, [r3, #3]
                                                        for(j=0;j<MY_ADDRESS_LENGTH;j++)
    8a4a:	233e      	movs	r3, #62	; 0x3e
    8a4c:	18fb      	adds	r3, r7, r3
    8a4e:	2200      	movs	r2, #0
    8a50:	701a      	strb	r2, [r3, #0]
    8a52:	e015      	b.n	8a80 <MiWiPROTasks+0x6bc>
                                                            openSocketInfo.LongAddress1[j] = MACRxPacket.Payload[j+2+MIWI_PRO_HEADER_LEN];
    8a54:	233e      	movs	r3, #62	; 0x3e
    8a56:	18fb      	adds	r3, r7, r3
    8a58:	781a      	ldrb	r2, [r3, #0]
    8a5a:	4b24      	ldr	r3, [pc, #144]	; (8aec <MiWiPROTasks+0x728>)
    8a5c:	6899      	ldr	r1, [r3, #8]
    8a5e:	233e      	movs	r3, #62	; 0x3e
    8a60:	18fb      	adds	r3, r7, r3
    8a62:	781b      	ldrb	r3, [r3, #0]
    8a64:	330d      	adds	r3, #13
    8a66:	18cb      	adds	r3, r1, r3
    8a68:	7819      	ldrb	r1, [r3, #0]
    8a6a:	4b36      	ldr	r3, [pc, #216]	; (8b44 <MiWiPROTasks+0x780>)
    8a6c:	189b      	adds	r3, r3, r2
    8a6e:	1c0a      	adds	r2, r1, #0
    8a70:	711a      	strb	r2, [r3, #4]
                                                        for(j=0;j<MY_ADDRESS_LENGTH;j++)
    8a72:	233e      	movs	r3, #62	; 0x3e
    8a74:	18fb      	adds	r3, r7, r3
    8a76:	781a      	ldrb	r2, [r3, #0]
    8a78:	233e      	movs	r3, #62	; 0x3e
    8a7a:	18fb      	adds	r3, r7, r3
    8a7c:	3201      	adds	r2, #1
    8a7e:	701a      	strb	r2, [r3, #0]
    8a80:	233e      	movs	r3, #62	; 0x3e
    8a82:	18fb      	adds	r3, r7, r3
    8a84:	781b      	ldrb	r3, [r3, #0]
    8a86:	2b07      	cmp	r3, #7
    8a88:	d9e4      	bls.n	8a54 <MiWiPROTasks+0x690>
                                                        openSocketInfo.status.bits.requestIsOpen = 1;
    8a8a:	4b2e      	ldr	r3, [pc, #184]	; (8b44 <MiWiPROTasks+0x780>)
    8a8c:	781a      	ldrb	r2, [r3, #0]
    8a8e:	2102      	movs	r1, #2
    8a90:	430a      	orrs	r2, r1
    8a92:	701a      	strb	r2, [r3, #0]
                                                        openSocketInfo.status.bits.matchFound = 0;
    8a94:	4b2b      	ldr	r3, [pc, #172]	; (8b44 <MiWiPROTasks+0x780>)
    8a96:	781a      	ldrb	r2, [r3, #0]
    8a98:	2101      	movs	r1, #1
    8a9a:	438a      	bics	r2, r1
    8a9c:	701a      	strb	r2, [r3, #0]
                                                            for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    8a9e:	233e      	movs	r3, #62	; 0x3e
    8aa0:	18fb      	adds	r3, r7, r3
    8aa2:	2200      	movs	r2, #0
    8aa4:	701a      	strb	r2, [r3, #0]
    8aa6:	e015      	b.n	8ad4 <MiWiPROTasks+0x710>
                                                                openSocketInfo.AdditionalNodeID1[j] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2+MY_ADDRESS_LENGTH+j];
    8aa8:	233e      	movs	r3, #62	; 0x3e
    8aaa:	18fb      	adds	r3, r7, r3
    8aac:	781a      	ldrb	r2, [r3, #0]
    8aae:	4b0f      	ldr	r3, [pc, #60]	; (8aec <MiWiPROTasks+0x728>)
    8ab0:	689b      	ldr	r3, [r3, #8]
    8ab2:	213e      	movs	r1, #62	; 0x3e
    8ab4:	1879      	adds	r1, r7, r1
    8ab6:	7809      	ldrb	r1, [r1, #0]
    8ab8:	3115      	adds	r1, #21
    8aba:	185b      	adds	r3, r3, r1
    8abc:	7819      	ldrb	r1, [r3, #0]
    8abe:	4b21      	ldr	r3, [pc, #132]	; (8b44 <MiWiPROTasks+0x780>)
    8ac0:	189b      	adds	r3, r3, r2
    8ac2:	1c0a      	adds	r2, r1, #0
    8ac4:	731a      	strb	r2, [r3, #12]
                                                            for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    8ac6:	233e      	movs	r3, #62	; 0x3e
    8ac8:	18fb      	adds	r3, r7, r3
    8aca:	781a      	ldrb	r2, [r3, #0]
    8acc:	233e      	movs	r3, #62	; 0x3e
    8ace:	18fb      	adds	r3, r7, r3
    8ad0:	3201      	adds	r2, #1
    8ad2:	701a      	strb	r2, [r3, #0]
    8ad4:	233e      	movs	r3, #62	; 0x3e
    8ad6:	18fb      	adds	r3, r7, r3
    8ad8:	781b      	ldrb	r3, [r3, #0]
    8ada:	2b01      	cmp	r3, #1
    8adc:	d9e4      	bls.n	8aa8 <MiWiPROTasks+0x6e4>
                                                break;
    8ade:	f001 fa24 	bl	9f2a <MiWiPROTasks+0x1b66>
    8ae2:	46c0      	nop			; (mov r8, r8)
    8ae4:	0000fffd 	.word	0x0000fffd
    8ae8:	20001504 	.word	0x20001504
    8aec:	2000126c 	.word	0x2000126c
    8af0:	200012c4 	.word	0x200012c4
    8af4:	200013c8 	.word	0x200013c8
    8af8:	200013d6 	.word	0x200013d6
    8afc:	0000fd09 	.word	0x0000fd09
    8b00:	0000ebad 	.word	0x0000ebad
    8b04:	00017919 	.word	0x00017919
    8b08:	00014c6d 	.word	0x00014c6d
    8b0c:	20001290 	.word	0x20001290
    8b10:	20001140 	.word	0x20001140
    8b14:	2000001b 	.word	0x2000001b
    8b18:	200012e4 	.word	0x200012e4
    8b1c:	200012dc 	.word	0x200012dc
    8b20:	200012b8 	.word	0x200012b8
    8b24:	200012e0 	.word	0x200012e0
    8b28:	200012c0 	.word	0x200012c0
    8b2c:	0000cb71 	.word	0x0000cb71
    8b30:	20001150 	.word	0x20001150
    8b34:	0001cc84 	.word	0x0001cc84
    8b38:	0001782d 	.word	0x0001782d
    8b3c:	2000002e 	.word	0x2000002e
    8b40:	00008305 	.word	0x00008305
    8b44:	20001250 	.word	0x20001250
                                                        if( (MACRxPacket.Payload[MIWI_PRO_HEADER_LEN-3] == openSocketInfo.ShortAddress1.v[0]) && 
    8b48:	4bde      	ldr	r3, [pc, #888]	; (8ec4 <MiWiPROTasks+0xb00>)
    8b4a:	689b      	ldr	r3, [r3, #8]
    8b4c:	3308      	adds	r3, #8
    8b4e:	781a      	ldrb	r2, [r3, #0]
    8b50:	4bdd      	ldr	r3, [pc, #884]	; (8ec8 <MiWiPROTasks+0xb04>)
    8b52:	789b      	ldrb	r3, [r3, #2]
    8b54:	429a      	cmp	r2, r3
    8b56:	d108      	bne.n	8b6a <MiWiPROTasks+0x7a6>
                                                            (MACRxPacket.Payload[MIWI_PRO_HEADER_LEN-2] == openSocketInfo.ShortAddress1.v[1]))
    8b58:	4bda      	ldr	r3, [pc, #872]	; (8ec4 <MiWiPROTasks+0xb00>)
    8b5a:	689b      	ldr	r3, [r3, #8]
    8b5c:	3309      	adds	r3, #9
    8b5e:	781a      	ldrb	r2, [r3, #0]
    8b60:	4bd9      	ldr	r3, [pc, #868]	; (8ec8 <MiWiPROTasks+0xb04>)
    8b62:	78db      	ldrb	r3, [r3, #3]
                                                        if( (MACRxPacket.Payload[MIWI_PRO_HEADER_LEN-3] == openSocketInfo.ShortAddress1.v[0]) && 
    8b64:	429a      	cmp	r2, r3
    8b66:	d100      	bne.n	8b6a <MiWiPROTasks+0x7a6>
    8b68:	e142      	b.n	8df0 <MiWiPROTasks+0xa2c>
                                                        else if(openSocketInfo.ShortAddress1.Val == 0x0000)
    8b6a:	4bd7      	ldr	r3, [pc, #860]	; (8ec8 <MiWiPROTasks+0xb04>)
    8b6c:	885b      	ldrh	r3, [r3, #2]
    8b6e:	2b00      	cmp	r3, #0
    8b70:	d000      	beq.n	8b74 <MiWiPROTasks+0x7b0>
    8b72:	e0a5      	b.n	8cc0 <MiWiPROTasks+0x8fc>
                                                            for(j=0;j<MY_ADDRESS_LENGTH;j++)
    8b74:	233e      	movs	r3, #62	; 0x3e
    8b76:	18fb      	adds	r3, r7, r3
    8b78:	2200      	movs	r2, #0
    8b7a:	701a      	strb	r2, [r3, #0]
    8b7c:	e020      	b.n	8bc0 <MiWiPROTasks+0x7fc>
                                                                openSocketInfo.LongAddress2[j] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2+j];      //Data byte
    8b7e:	233e      	movs	r3, #62	; 0x3e
    8b80:	18fb      	adds	r3, r7, r3
    8b82:	781a      	ldrb	r2, [r3, #0]
    8b84:	4bcf      	ldr	r3, [pc, #828]	; (8ec4 <MiWiPROTasks+0xb00>)
    8b86:	689b      	ldr	r3, [r3, #8]
    8b88:	213e      	movs	r1, #62	; 0x3e
    8b8a:	1879      	adds	r1, r7, r1
    8b8c:	7809      	ldrb	r1, [r1, #0]
    8b8e:	310d      	adds	r1, #13
    8b90:	185b      	adds	r3, r3, r1
    8b92:	7819      	ldrb	r1, [r3, #0]
    8b94:	4bcc      	ldr	r3, [pc, #816]	; (8ec8 <MiWiPROTasks+0xb04>)
    8b96:	189b      	adds	r3, r3, r2
    8b98:	1c0a      	adds	r2, r1, #0
    8b9a:	741a      	strb	r2, [r3, #16]
                                                                tempLongAddress[j] = openSocketInfo.LongAddress2[j];
    8b9c:	233e      	movs	r3, #62	; 0x3e
    8b9e:	18fb      	adds	r3, r7, r3
    8ba0:	781b      	ldrb	r3, [r3, #0]
    8ba2:	223e      	movs	r2, #62	; 0x3e
    8ba4:	18ba      	adds	r2, r7, r2
    8ba6:	7812      	ldrb	r2, [r2, #0]
    8ba8:	49c7      	ldr	r1, [pc, #796]	; (8ec8 <MiWiPROTasks+0xb04>)
    8baa:	188a      	adds	r2, r1, r2
    8bac:	7c11      	ldrb	r1, [r2, #16]
    8bae:	4ac7      	ldr	r2, [pc, #796]	; (8ecc <MiWiPROTasks+0xb08>)
    8bb0:	54d1      	strb	r1, [r2, r3]
                                                            for(j=0;j<MY_ADDRESS_LENGTH;j++)
    8bb2:	233e      	movs	r3, #62	; 0x3e
    8bb4:	18fb      	adds	r3, r7, r3
    8bb6:	781a      	ldrb	r2, [r3, #0]
    8bb8:	233e      	movs	r3, #62	; 0x3e
    8bba:	18fb      	adds	r3, r7, r3
    8bbc:	3201      	adds	r2, #1
    8bbe:	701a      	strb	r2, [r3, #0]
    8bc0:	233e      	movs	r3, #62	; 0x3e
    8bc2:	18fb      	adds	r3, r7, r3
    8bc4:	781b      	ldrb	r3, [r3, #0]
    8bc6:	2b07      	cmp	r3, #7
    8bc8:	d9d9      	bls.n	8b7e <MiWiPROTasks+0x7ba>
                                                            openSocketInfo.ShortAddress2.v[0] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN-3];
    8bca:	4bbe      	ldr	r3, [pc, #760]	; (8ec4 <MiWiPROTasks+0xb00>)
    8bcc:	689b      	ldr	r3, [r3, #8]
    8bce:	7a1a      	ldrb	r2, [r3, #8]
    8bd0:	4bbd      	ldr	r3, [pc, #756]	; (8ec8 <MiWiPROTasks+0xb04>)
    8bd2:	739a      	strb	r2, [r3, #14]
                                                            openSocketInfo.ShortAddress2.v[1] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN-2];
    8bd4:	4bbb      	ldr	r3, [pc, #748]	; (8ec4 <MiWiPROTasks+0xb00>)
    8bd6:	689b      	ldr	r3, [r3, #8]
    8bd8:	7a5a      	ldrb	r2, [r3, #9]
    8bda:	4bbb      	ldr	r3, [pc, #748]	; (8ec8 <MiWiPROTasks+0xb04>)
    8bdc:	73da      	strb	r2, [r3, #15]
                                                            tempShortAddress.v[0] = openSocketInfo.ShortAddress2.v[0];
    8bde:	4bba      	ldr	r3, [pc, #744]	; (8ec8 <MiWiPROTasks+0xb04>)
    8be0:	7b9a      	ldrb	r2, [r3, #14]
    8be2:	4bbb      	ldr	r3, [pc, #748]	; (8ed0 <MiWiPROTasks+0xb0c>)
    8be4:	701a      	strb	r2, [r3, #0]
                                                            tempShortAddress.v[1] = openSocketInfo.ShortAddress2.v[1];
    8be6:	4bb8      	ldr	r3, [pc, #736]	; (8ec8 <MiWiPROTasks+0xb04>)
    8be8:	7bda      	ldrb	r2, [r3, #15]
    8bea:	4bb9      	ldr	r3, [pc, #740]	; (8ed0 <MiWiPROTasks+0xb0c>)
    8bec:	705a      	strb	r2, [r3, #1]
                                                            tempPANID.Val = myPANID.Val;
    8bee:	4bb9      	ldr	r3, [pc, #740]	; (8ed4 <MiWiPROTasks+0xb10>)
    8bf0:	881a      	ldrh	r2, [r3, #0]
    8bf2:	4bb9      	ldr	r3, [pc, #740]	; (8ed8 <MiWiPROTasks+0xb14>)
    8bf4:	801a      	strh	r2, [r3, #0]
                                                            openSocketInfo.socketHandle = SearchForShortAddress();
    8bf6:	4bb9      	ldr	r3, [pc, #740]	; (8edc <MiWiPROTasks+0xb18>)
    8bf8:	4798      	blx	r3
    8bfa:	0003      	movs	r3, r0
    8bfc:	001a      	movs	r2, r3
    8bfe:	4bb2      	ldr	r3, [pc, #712]	; (8ec8 <MiWiPROTasks+0xb04>)
    8c00:	705a      	strb	r2, [r3, #1]
                                                            if(openSocketInfo.socketHandle == 0xFF)
    8c02:	4bb1      	ldr	r3, [pc, #708]	; (8ec8 <MiWiPROTasks+0xb04>)
    8c04:	785b      	ldrb	r3, [r3, #1]
    8c06:	2bff      	cmp	r3, #255	; 0xff
    8c08:	d14e      	bne.n	8ca8 <MiWiPROTasks+0x8e4>
                                                                tempNodeStatus.Val = 0x8D;
    8c0a:	4bb5      	ldr	r3, [pc, #724]	; (8ee0 <MiWiPROTasks+0xb1c>)
    8c0c:	228d      	movs	r2, #141	; 0x8d
    8c0e:	701a      	strb	r2, [r3, #0]
                                                                if(tempShortAddress.v[0] & 0x80)
    8c10:	4baf      	ldr	r3, [pc, #700]	; (8ed0 <MiWiPROTasks+0xb0c>)
    8c12:	781b      	ldrb	r3, [r3, #0]
    8c14:	b25b      	sxtb	r3, r3
    8c16:	2b00      	cmp	r3, #0
    8c18:	da04      	bge.n	8c24 <MiWiPROTasks+0x860>
                                                                    tempNodeStatus.bits.RXOnWhenIdle = 0;
    8c1a:	4bb1      	ldr	r3, [pc, #708]	; (8ee0 <MiWiPROTasks+0xb1c>)
    8c1c:	781a      	ldrb	r2, [r3, #0]
    8c1e:	2101      	movs	r1, #1
    8c20:	438a      	bics	r2, r1
    8c22:	701a      	strb	r2, [r3, #0]
                                                                openSocketInfo.socketHandle = AddNodeToNetworkTable();
    8c24:	4baf      	ldr	r3, [pc, #700]	; (8ee4 <MiWiPROTasks+0xb20>)
    8c26:	4798      	blx	r3
    8c28:	0003      	movs	r3, r0
    8c2a:	001a      	movs	r2, r3
    8c2c:	4ba6      	ldr	r3, [pc, #664]	; (8ec8 <MiWiPROTasks+0xb04>)
    8c2e:	705a      	strb	r2, [r3, #1]
                                                                if( openSocketInfo.socketHandle < 0xFF )
    8c30:	4ba5      	ldr	r3, [pc, #660]	; (8ec8 <MiWiPROTasks+0xb04>)
    8c32:	785b      	ldrb	r3, [r3, #1]
    8c34:	2bff      	cmp	r3, #255	; 0xff
    8c36:	d037      	beq.n	8ca8 <MiWiPROTasks+0x8e4>
                                                                        for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    8c38:	233e      	movs	r3, #62	; 0x3e
    8c3a:	18fb      	adds	r3, r7, r3
    8c3c:	2200      	movs	r2, #0
    8c3e:	701a      	strb	r2, [r3, #0]
    8c40:	e01b      	b.n	8c7a <MiWiPROTasks+0x8b6>
                                                                            ConnectionTable[openSocketInfo.socketHandle].PeerInfo[j] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2+MY_ADDRESS_LENGTH+j];
    8c42:	4ba1      	ldr	r3, [pc, #644]	; (8ec8 <MiWiPROTasks+0xb04>)
    8c44:	785b      	ldrb	r3, [r3, #1]
    8c46:	001c      	movs	r4, r3
    8c48:	233e      	movs	r3, #62	; 0x3e
    8c4a:	18fb      	adds	r3, r7, r3
    8c4c:	781a      	ldrb	r2, [r3, #0]
    8c4e:	4b9d      	ldr	r3, [pc, #628]	; (8ec4 <MiWiPROTasks+0xb00>)
    8c50:	689b      	ldr	r3, [r3, #8]
    8c52:	213e      	movs	r1, #62	; 0x3e
    8c54:	1879      	adds	r1, r7, r1
    8c56:	7809      	ldrb	r1, [r1, #0]
    8c58:	3115      	adds	r1, #21
    8c5a:	185b      	adds	r3, r3, r1
    8c5c:	7818      	ldrb	r0, [r3, #0]
    8c5e:	49a2      	ldr	r1, [pc, #648]	; (8ee8 <MiWiPROTasks+0xb24>)
    8c60:	0123      	lsls	r3, r4, #4
    8c62:	18cb      	adds	r3, r1, r3
    8c64:	189b      	adds	r3, r3, r2
    8c66:	330d      	adds	r3, #13
    8c68:	1c02      	adds	r2, r0, #0
    8c6a:	701a      	strb	r2, [r3, #0]
                                                                        for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    8c6c:	233e      	movs	r3, #62	; 0x3e
    8c6e:	18fb      	adds	r3, r7, r3
    8c70:	781a      	ldrb	r2, [r3, #0]
    8c72:	233e      	movs	r3, #62	; 0x3e
    8c74:	18fb      	adds	r3, r7, r3
    8c76:	3201      	adds	r2, #1
    8c78:	701a      	strb	r2, [r3, #0]
    8c7a:	233e      	movs	r3, #62	; 0x3e
    8c7c:	18fb      	adds	r3, r7, r3
    8c7e:	781b      	ldrb	r3, [r3, #0]
    8c80:	2b01      	cmp	r3, #1
    8c82:	d9de      	bls.n	8c42 <MiWiPROTasks+0x87e>
                                                                        nvmPutConnectionTableIndex(&(ConnectionTable[openSocketInfo.socketHandle]), openSocketInfo.socketHandle);
    8c84:	4b90      	ldr	r3, [pc, #576]	; (8ec8 <MiWiPROTasks+0xb04>)
    8c86:	785b      	ldrb	r3, [r3, #1]
    8c88:	011a      	lsls	r2, r3, #4
    8c8a:	4b97      	ldr	r3, [pc, #604]	; (8ee8 <MiWiPROTasks+0xb24>)
    8c8c:	18d0      	adds	r0, r2, r3
    8c8e:	4b8e      	ldr	r3, [pc, #568]	; (8ec8 <MiWiPROTasks+0xb04>)
    8c90:	785b      	ldrb	r3, [r3, #1]
    8c92:	b29b      	uxth	r3, r3
    8c94:	011b      	lsls	r3, r3, #4
    8c96:	b29a      	uxth	r2, r3
    8c98:	4b94      	ldr	r3, [pc, #592]	; (8eec <MiWiPROTasks+0xb28>)
    8c9a:	881b      	ldrh	r3, [r3, #0]
    8c9c:	18d3      	adds	r3, r2, r3
    8c9e:	b29b      	uxth	r3, r3
    8ca0:	2210      	movs	r2, #16
    8ca2:	0019      	movs	r1, r3
    8ca4:	4b92      	ldr	r3, [pc, #584]	; (8ef0 <MiWiPROTasks+0xb2c>)
    8ca6:	4798      	blx	r3
                                                            openSocketInfo.status.bits.requestIsOpen = 1;
    8ca8:	4b87      	ldr	r3, [pc, #540]	; (8ec8 <MiWiPROTasks+0xb04>)
    8caa:	781a      	ldrb	r2, [r3, #0]
    8cac:	2102      	movs	r1, #2
    8cae:	430a      	orrs	r2, r1
    8cb0:	701a      	strb	r2, [r3, #0]
                                                            openSocketInfo.status.bits.matchFound = 1; 
    8cb2:	4b85      	ldr	r3, [pc, #532]	; (8ec8 <MiWiPROTasks+0xb04>)
    8cb4:	781a      	ldrb	r2, [r3, #0]
    8cb6:	2101      	movs	r1, #1
    8cb8:	430a      	orrs	r2, r1
    8cba:	701a      	strb	r2, [r3, #0]
                                                break;
    8cbc:	f001 f935 	bl	9f2a <MiWiPROTasks+0x1b66>
                                                            MiApp_FlushTx();
    8cc0:	4b8c      	ldr	r3, [pc, #560]	; (8ef4 <MiWiPROTasks+0xb30>)
    8cc2:	220b      	movs	r2, #11
    8cc4:	701a      	strb	r2, [r3, #0]
                                                            MiApp_WriteData(MIWI_PRO_STACK_REPORT_TYPE);          //Report Type
    8cc6:	4b8b      	ldr	r3, [pc, #556]	; (8ef4 <MiWiPROTasks+0xb30>)
    8cc8:	781b      	ldrb	r3, [r3, #0]
    8cca:	1c5a      	adds	r2, r3, #1
    8ccc:	b2d1      	uxtb	r1, r2
    8cce:	4a89      	ldr	r2, [pc, #548]	; (8ef4 <MiWiPROTasks+0xb30>)
    8cd0:	7011      	strb	r1, [r2, #0]
    8cd2:	001a      	movs	r2, r3
    8cd4:	4b88      	ldr	r3, [pc, #544]	; (8ef8 <MiWiPROTasks+0xb34>)
    8cd6:	2100      	movs	r1, #0
    8cd8:	5499      	strb	r1, [r3, r2]
                                                            MiApp_WriteData(OPEN_SOCKET_RESPONSE);    //Report ID
    8cda:	4b86      	ldr	r3, [pc, #536]	; (8ef4 <MiWiPROTasks+0xb30>)
    8cdc:	781b      	ldrb	r3, [r3, #0]
    8cde:	1c5a      	adds	r2, r3, #1
    8ce0:	b2d1      	uxtb	r1, r2
    8ce2:	4a84      	ldr	r2, [pc, #528]	; (8ef4 <MiWiPROTasks+0xb30>)
    8ce4:	7011      	strb	r1, [r2, #0]
    8ce6:	001a      	movs	r2, r3
    8ce8:	4b83      	ldr	r3, [pc, #524]	; (8ef8 <MiWiPROTasks+0xb34>)
    8cea:	2111      	movs	r1, #17
    8cec:	5499      	strb	r1, [r3, r2]
                                                            for(j=0;j<MY_ADDRESS_LENGTH;j++)
    8cee:	233e      	movs	r3, #62	; 0x3e
    8cf0:	18fb      	adds	r3, r7, r3
    8cf2:	2200      	movs	r2, #0
    8cf4:	701a      	strb	r2, [r3, #0]
    8cf6:	e024      	b.n	8d42 <MiWiPROTasks+0x97e>
                                                                openSocketInfo.LongAddress2[j] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2+j];      //Data byte
    8cf8:	233e      	movs	r3, #62	; 0x3e
    8cfa:	18fb      	adds	r3, r7, r3
    8cfc:	781a      	ldrb	r2, [r3, #0]
    8cfe:	4b71      	ldr	r3, [pc, #452]	; (8ec4 <MiWiPROTasks+0xb00>)
    8d00:	689b      	ldr	r3, [r3, #8]
    8d02:	213e      	movs	r1, #62	; 0x3e
    8d04:	1879      	adds	r1, r7, r1
    8d06:	7809      	ldrb	r1, [r1, #0]
    8d08:	310d      	adds	r1, #13
    8d0a:	185b      	adds	r3, r3, r1
    8d0c:	7819      	ldrb	r1, [r3, #0]
    8d0e:	4b6e      	ldr	r3, [pc, #440]	; (8ec8 <MiWiPROTasks+0xb04>)
    8d10:	189b      	adds	r3, r3, r2
    8d12:	1c0a      	adds	r2, r1, #0
    8d14:	741a      	strb	r2, [r3, #16]
                                                                MiApp_WriteData(openSocketInfo.LongAddress2[j]); 
    8d16:	4b77      	ldr	r3, [pc, #476]	; (8ef4 <MiWiPROTasks+0xb30>)
    8d18:	781b      	ldrb	r3, [r3, #0]
    8d1a:	1c5a      	adds	r2, r3, #1
    8d1c:	b2d1      	uxtb	r1, r2
    8d1e:	4a75      	ldr	r2, [pc, #468]	; (8ef4 <MiWiPROTasks+0xb30>)
    8d20:	7011      	strb	r1, [r2, #0]
    8d22:	0019      	movs	r1, r3
    8d24:	233e      	movs	r3, #62	; 0x3e
    8d26:	18fb      	adds	r3, r7, r3
    8d28:	781b      	ldrb	r3, [r3, #0]
    8d2a:	4a67      	ldr	r2, [pc, #412]	; (8ec8 <MiWiPROTasks+0xb04>)
    8d2c:	18d3      	adds	r3, r2, r3
    8d2e:	7c1a      	ldrb	r2, [r3, #16]
    8d30:	4b71      	ldr	r3, [pc, #452]	; (8ef8 <MiWiPROTasks+0xb34>)
    8d32:	545a      	strb	r2, [r3, r1]
                                                            for(j=0;j<MY_ADDRESS_LENGTH;j++)
    8d34:	233e      	movs	r3, #62	; 0x3e
    8d36:	18fb      	adds	r3, r7, r3
    8d38:	781a      	ldrb	r2, [r3, #0]
    8d3a:	233e      	movs	r3, #62	; 0x3e
    8d3c:	18fb      	adds	r3, r7, r3
    8d3e:	3201      	adds	r2, #1
    8d40:	701a      	strb	r2, [r3, #0]
    8d42:	233e      	movs	r3, #62	; 0x3e
    8d44:	18fb      	adds	r3, r7, r3
    8d46:	781b      	ldrb	r3, [r3, #0]
    8d48:	2b07      	cmp	r3, #7
    8d4a:	d9d5      	bls.n	8cf8 <MiWiPROTasks+0x934>
                                                            openSocketInfo.ShortAddress2.v[0] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN-3];
    8d4c:	4b5d      	ldr	r3, [pc, #372]	; (8ec4 <MiWiPROTasks+0xb00>)
    8d4e:	689b      	ldr	r3, [r3, #8]
    8d50:	7a1a      	ldrb	r2, [r3, #8]
    8d52:	4b5d      	ldr	r3, [pc, #372]	; (8ec8 <MiWiPROTasks+0xb04>)
    8d54:	739a      	strb	r2, [r3, #14]
                                                            openSocketInfo.ShortAddress2.v[1] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN-2];
    8d56:	4b5b      	ldr	r3, [pc, #364]	; (8ec4 <MiWiPROTasks+0xb00>)
    8d58:	689b      	ldr	r3, [r3, #8]
    8d5a:	7a5a      	ldrb	r2, [r3, #9]
    8d5c:	4b5a      	ldr	r3, [pc, #360]	; (8ec8 <MiWiPROTasks+0xb04>)
    8d5e:	73da      	strb	r2, [r3, #15]
                                                            MiApp_WriteData(openSocketInfo.ShortAddress2.v[0]);
    8d60:	4b64      	ldr	r3, [pc, #400]	; (8ef4 <MiWiPROTasks+0xb30>)
    8d62:	781b      	ldrb	r3, [r3, #0]
    8d64:	1c5a      	adds	r2, r3, #1
    8d66:	b2d1      	uxtb	r1, r2
    8d68:	4a62      	ldr	r2, [pc, #392]	; (8ef4 <MiWiPROTasks+0xb30>)
    8d6a:	7011      	strb	r1, [r2, #0]
    8d6c:	001a      	movs	r2, r3
    8d6e:	4b56      	ldr	r3, [pc, #344]	; (8ec8 <MiWiPROTasks+0xb04>)
    8d70:	7b99      	ldrb	r1, [r3, #14]
    8d72:	4b61      	ldr	r3, [pc, #388]	; (8ef8 <MiWiPROTasks+0xb34>)
    8d74:	5499      	strb	r1, [r3, r2]
                                                            MiApp_WriteData(openSocketInfo.ShortAddress2.v[1]);
    8d76:	4b5f      	ldr	r3, [pc, #380]	; (8ef4 <MiWiPROTasks+0xb30>)
    8d78:	781b      	ldrb	r3, [r3, #0]
    8d7a:	1c5a      	adds	r2, r3, #1
    8d7c:	b2d1      	uxtb	r1, r2
    8d7e:	4a5d      	ldr	r2, [pc, #372]	; (8ef4 <MiWiPROTasks+0xb30>)
    8d80:	7011      	strb	r1, [r2, #0]
    8d82:	001a      	movs	r2, r3
    8d84:	4b50      	ldr	r3, [pc, #320]	; (8ec8 <MiWiPROTasks+0xb04>)
    8d86:	7bd9      	ldrb	r1, [r3, #15]
    8d88:	4b5b      	ldr	r3, [pc, #364]	; (8ef8 <MiWiPROTasks+0xb34>)
    8d8a:	5499      	strb	r1, [r3, r2]
                                                                for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    8d8c:	233e      	movs	r3, #62	; 0x3e
    8d8e:	18fb      	adds	r3, r7, r3
    8d90:	2200      	movs	r2, #0
    8d92:	701a      	strb	r2, [r3, #0]
    8d94:	e017      	b.n	8dc6 <MiWiPROTasks+0xa02>
                                                                    MiApp_WriteData(MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2+MY_ADDRESS_LENGTH+j]);
    8d96:	4b57      	ldr	r3, [pc, #348]	; (8ef4 <MiWiPROTasks+0xb30>)
    8d98:	781b      	ldrb	r3, [r3, #0]
    8d9a:	1c5a      	adds	r2, r3, #1
    8d9c:	b2d1      	uxtb	r1, r2
    8d9e:	4a55      	ldr	r2, [pc, #340]	; (8ef4 <MiWiPROTasks+0xb30>)
    8da0:	7011      	strb	r1, [r2, #0]
    8da2:	0019      	movs	r1, r3
    8da4:	4b47      	ldr	r3, [pc, #284]	; (8ec4 <MiWiPROTasks+0xb00>)
    8da6:	689b      	ldr	r3, [r3, #8]
    8da8:	223e      	movs	r2, #62	; 0x3e
    8daa:	18ba      	adds	r2, r7, r2
    8dac:	7812      	ldrb	r2, [r2, #0]
    8dae:	3215      	adds	r2, #21
    8db0:	189b      	adds	r3, r3, r2
    8db2:	781a      	ldrb	r2, [r3, #0]
    8db4:	4b50      	ldr	r3, [pc, #320]	; (8ef8 <MiWiPROTasks+0xb34>)
    8db6:	545a      	strb	r2, [r3, r1]
                                                                for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    8db8:	233e      	movs	r3, #62	; 0x3e
    8dba:	18fb      	adds	r3, r7, r3
    8dbc:	781a      	ldrb	r2, [r3, #0]
    8dbe:	233e      	movs	r3, #62	; 0x3e
    8dc0:	18fb      	adds	r3, r7, r3
    8dc2:	3201      	adds	r2, #1
    8dc4:	701a      	strb	r2, [r3, #0]
    8dc6:	233e      	movs	r3, #62	; 0x3e
    8dc8:	18fb      	adds	r3, r7, r3
    8dca:	781b      	ldrb	r3, [r3, #0]
    8dcc:	2b01      	cmp	r3, #1
    8dce:	d9e2      	bls.n	8d96 <MiWiPROTasks+0x9d2>
                                                            UnicastShortAddress(openSocketInfo.ShortAddress1.v);
    8dd0:	4b4a      	ldr	r3, [pc, #296]	; (8efc <MiWiPROTasks+0xb38>)
    8dd2:	0018      	movs	r0, r3
    8dd4:	4b4a      	ldr	r3, [pc, #296]	; (8f00 <MiWiPROTasks+0xb3c>)
    8dd6:	4798      	blx	r3
                                                            openSocketInfo.status.bits.requestIsOpen = 1;
    8dd8:	4b3b      	ldr	r3, [pc, #236]	; (8ec8 <MiWiPROTasks+0xb04>)
    8dda:	781a      	ldrb	r2, [r3, #0]
    8ddc:	2102      	movs	r1, #2
    8dde:	430a      	orrs	r2, r1
    8de0:	701a      	strb	r2, [r3, #0]
                                                            openSocketInfo.status.bits.matchFound = 1;    
    8de2:	4b39      	ldr	r3, [pc, #228]	; (8ec8 <MiWiPROTasks+0xb04>)
    8de4:	781a      	ldrb	r2, [r3, #0]
    8de6:	2101      	movs	r1, #1
    8de8:	430a      	orrs	r2, r1
    8dea:	701a      	strb	r2, [r3, #0]
                                                break;
    8dec:	f001 f89d 	bl	9f2a <MiWiPROTasks+0x1b66>
    8df0:	f001 f89b 	bl	9f2a <MiWiPROTasks+0x1b66>
                                                    if( role == ROLE_PAN_COORDINATOR )
    8df4:	4b43      	ldr	r3, [pc, #268]	; (8f04 <MiWiPROTasks+0xb40>)
    8df6:	781b      	ldrb	r3, [r3, #0]
    8df8:	2b02      	cmp	r3, #2
    8dfa:	d001      	beq.n	8e00 <MiWiPROTasks+0xa3c>
    8dfc:	f001 f882 	bl	9f04 <MiWiPROTasks+0x1b40>
                                                        if(MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2] == COORDINATOR_REPORT_STATUS_JOIN )
    8e00:	4b30      	ldr	r3, [pc, #192]	; (8ec4 <MiWiPROTasks+0xb00>)
    8e02:	689b      	ldr	r3, [r3, #8]
    8e04:	330d      	adds	r3, #13
    8e06:	781b      	ldrb	r3, [r3, #0]
    8e08:	2b00      	cmp	r3, #0
    8e0a:	d000      	beq.n	8e0e <MiWiPROTasks+0xa4a>
    8e0c:	e1a3      	b.n	9156 <MiWiPROTasks+0xd92>
                                                            MiApp_FlushTx();
    8e0e:	4b39      	ldr	r3, [pc, #228]	; (8ef4 <MiWiPROTasks+0xb30>)
    8e10:	220b      	movs	r2, #11
    8e12:	701a      	strb	r2, [r3, #0]
                                                            MiApp_WriteData(MIWI_PRO_STACK_REPORT_TYPE);        //Report Type
    8e14:	4b37      	ldr	r3, [pc, #220]	; (8ef4 <MiWiPROTasks+0xb30>)
    8e16:	781b      	ldrb	r3, [r3, #0]
    8e18:	1c5a      	adds	r2, r3, #1
    8e1a:	b2d1      	uxtb	r1, r2
    8e1c:	4a35      	ldr	r2, [pc, #212]	; (8ef4 <MiWiPROTasks+0xb30>)
    8e1e:	7011      	strb	r1, [r2, #0]
    8e20:	001a      	movs	r2, r3
    8e22:	4b35      	ldr	r3, [pc, #212]	; (8ef8 <MiWiPROTasks+0xb34>)
    8e24:	2100      	movs	r1, #0
    8e26:	5499      	strb	r1, [r3, r2]
                                                            MiApp_WriteData(COORDINATOR_RESPONSE);          //Report ID
    8e28:	4b32      	ldr	r3, [pc, #200]	; (8ef4 <MiWiPROTasks+0xb30>)
    8e2a:	781b      	ldrb	r3, [r3, #0]
    8e2c:	1c5a      	adds	r2, r3, #1
    8e2e:	b2d1      	uxtb	r1, r2
    8e30:	4a30      	ldr	r2, [pc, #192]	; (8ef4 <MiWiPROTasks+0xb30>)
    8e32:	7011      	strb	r1, [r2, #0]
    8e34:	001a      	movs	r2, r3
    8e36:	4b30      	ldr	r3, [pc, #192]	; (8ef8 <MiWiPROTasks+0xb34>)
    8e38:	21a1      	movs	r1, #161	; 0xa1
    8e3a:	5499      	strb	r1, [r3, r2]
                                                            for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    8e3c:	233f      	movs	r3, #63	; 0x3f
    8e3e:	18fb      	adds	r3, r7, r3
    8e40:	2200      	movs	r2, #0
    8e42:	701a      	strb	r2, [r3, #0]
    8e44:	e024      	b.n	8e90 <MiWiPROTasks+0xacc>
                                                                tempLongAddress[i] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+3+i];
    8e46:	233f      	movs	r3, #63	; 0x3f
    8e48:	18fb      	adds	r3, r7, r3
    8e4a:	781a      	ldrb	r2, [r3, #0]
    8e4c:	4b1d      	ldr	r3, [pc, #116]	; (8ec4 <MiWiPROTasks+0xb00>)
    8e4e:	689b      	ldr	r3, [r3, #8]
    8e50:	213f      	movs	r1, #63	; 0x3f
    8e52:	1879      	adds	r1, r7, r1
    8e54:	7809      	ldrb	r1, [r1, #0]
    8e56:	310e      	adds	r1, #14
    8e58:	185b      	adds	r3, r3, r1
    8e5a:	7819      	ldrb	r1, [r3, #0]
    8e5c:	4b1b      	ldr	r3, [pc, #108]	; (8ecc <MiWiPROTasks+0xb08>)
    8e5e:	5499      	strb	r1, [r3, r2]
                                                                MiApp_WriteData(MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+3+i]);
    8e60:	4b24      	ldr	r3, [pc, #144]	; (8ef4 <MiWiPROTasks+0xb30>)
    8e62:	781b      	ldrb	r3, [r3, #0]
    8e64:	1c5a      	adds	r2, r3, #1
    8e66:	b2d1      	uxtb	r1, r2
    8e68:	4a22      	ldr	r2, [pc, #136]	; (8ef4 <MiWiPROTasks+0xb30>)
    8e6a:	7011      	strb	r1, [r2, #0]
    8e6c:	0019      	movs	r1, r3
    8e6e:	4b15      	ldr	r3, [pc, #84]	; (8ec4 <MiWiPROTasks+0xb00>)
    8e70:	689b      	ldr	r3, [r3, #8]
    8e72:	223f      	movs	r2, #63	; 0x3f
    8e74:	18ba      	adds	r2, r7, r2
    8e76:	7812      	ldrb	r2, [r2, #0]
    8e78:	320e      	adds	r2, #14
    8e7a:	189b      	adds	r3, r3, r2
    8e7c:	781a      	ldrb	r2, [r3, #0]
    8e7e:	4b1e      	ldr	r3, [pc, #120]	; (8ef8 <MiWiPROTasks+0xb34>)
    8e80:	545a      	strb	r2, [r3, r1]
                                                            for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    8e82:	233f      	movs	r3, #63	; 0x3f
    8e84:	18fb      	adds	r3, r7, r3
    8e86:	781a      	ldrb	r2, [r3, #0]
    8e88:	233f      	movs	r3, #63	; 0x3f
    8e8a:	18fb      	adds	r3, r7, r3
    8e8c:	3201      	adds	r2, #1
    8e8e:	701a      	strb	r2, [r3, #0]
    8e90:	233f      	movs	r3, #63	; 0x3f
    8e92:	18fb      	adds	r3, r7, r3
    8e94:	781b      	ldrb	r3, [r3, #0]
    8e96:	2b07      	cmp	r3, #7
    8e98:	d9d5      	bls.n	8e46 <MiWiPROTasks+0xa82>
                                                            if( (entry = SearchForLongAddress()) == 0xFF )
    8e9a:	2331      	movs	r3, #49	; 0x31
    8e9c:	18fc      	adds	r4, r7, r3
    8e9e:	4b1a      	ldr	r3, [pc, #104]	; (8f08 <MiWiPROTasks+0xb44>)
    8ea0:	4798      	blx	r3
    8ea2:	0003      	movs	r3, r0
    8ea4:	7023      	strb	r3, [r4, #0]
    8ea6:	2331      	movs	r3, #49	; 0x31
    8ea8:	18fb      	adds	r3, r7, r3
    8eaa:	781b      	ldrb	r3, [r3, #0]
    8eac:	2bff      	cmp	r3, #255	; 0xff
    8eae:	d000      	beq.n	8eb2 <MiWiPROTasks+0xaee>
    8eb0:	e0d3      	b.n	905a <MiWiPROTasks+0xc96>
                                                                tempShortAddress.v[0] = 0;
    8eb2:	4b07      	ldr	r3, [pc, #28]	; (8ed0 <MiWiPROTasks+0xb0c>)
    8eb4:	2200      	movs	r2, #0
    8eb6:	701a      	strb	r2, [r3, #0]
                                                                for(i = 1; i < NUM_COORDINATOR; i++)
    8eb8:	233f      	movs	r3, #63	; 0x3f
    8eba:	18fb      	adds	r3, r7, r3
    8ebc:	2201      	movs	r2, #1
    8ebe:	701a      	strb	r2, [r3, #0]
    8ec0:	e03b      	b.n	8f3a <MiWiPROTasks+0xb76>
    8ec2:	46c0      	nop			; (mov r8, r8)
    8ec4:	2000126c 	.word	0x2000126c
    8ec8:	20001250 	.word	0x20001250
    8ecc:	20001288 	.word	0x20001288
    8ed0:	200012e0 	.word	0x200012e0
    8ed4:	20001290 	.word	0x20001290
    8ed8:	200012c0 	.word	0x200012c0
    8edc:	0000cb71 	.word	0x0000cb71
    8ee0:	200012c8 	.word	0x200012c8
    8ee4:	0000cddd 	.word	0x0000cddd
    8ee8:	20001150 	.word	0x20001150
    8eec:	2000159a 	.word	0x2000159a
    8ef0:	0000e9c1 	.word	0x0000e9c1
    8ef4:	200012dc 	.word	0x200012dc
    8ef8:	200012e4 	.word	0x200012e4
    8efc:	20001252 	.word	0x20001252
    8f00:	0000db3d 	.word	0x0000db3d
    8f04:	200012de 	.word	0x200012de
    8f08:	0000cd35 	.word	0x0000cd35
                                                                    tempShortAddress.v[1] = i;
    8f0c:	4bd9      	ldr	r3, [pc, #868]	; (9274 <MiWiPROTasks+0xeb0>)
    8f0e:	223f      	movs	r2, #63	; 0x3f
    8f10:	18ba      	adds	r2, r7, r2
    8f12:	7812      	ldrb	r2, [r2, #0]
    8f14:	705a      	strb	r2, [r3, #1]
                                                                    if( (entry = SearchForShortAddress()) == 0xFF )
    8f16:	2331      	movs	r3, #49	; 0x31
    8f18:	18fc      	adds	r4, r7, r3
    8f1a:	4bd7      	ldr	r3, [pc, #860]	; (9278 <MiWiPROTasks+0xeb4>)
    8f1c:	4798      	blx	r3
    8f1e:	0003      	movs	r3, r0
    8f20:	7023      	strb	r3, [r4, #0]
    8f22:	2331      	movs	r3, #49	; 0x31
    8f24:	18fb      	adds	r3, r7, r3
    8f26:	781b      	ldrb	r3, [r3, #0]
    8f28:	2bff      	cmp	r3, #255	; 0xff
    8f2a:	d00c      	beq.n	8f46 <MiWiPROTasks+0xb82>
                                                                for(i = 1; i < NUM_COORDINATOR; i++)
    8f2c:	233f      	movs	r3, #63	; 0x3f
    8f2e:	18fb      	adds	r3, r7, r3
    8f30:	781a      	ldrb	r2, [r3, #0]
    8f32:	233f      	movs	r3, #63	; 0x3f
    8f34:	18fb      	adds	r3, r7, r3
    8f36:	3201      	adds	r2, #1
    8f38:	701a      	strb	r2, [r3, #0]
    8f3a:	233f      	movs	r3, #63	; 0x3f
    8f3c:	18fb      	adds	r3, r7, r3
    8f3e:	781b      	ldrb	r3, [r3, #0]
    8f40:	2b00      	cmp	r3, #0
    8f42:	d0e3      	beq.n	8f0c <MiWiPROTasks+0xb48>
    8f44:	e000      	b.n	8f48 <MiWiPROTasks+0xb84>
                                                                        break;
    8f46:	46c0      	nop			; (mov r8, r8)
                                                                if( i < NUM_COORDINATOR )
    8f48:	233f      	movs	r3, #63	; 0x3f
    8f4a:	18fb      	adds	r3, r7, r3
    8f4c:	781b      	ldrb	r3, [r3, #0]
    8f4e:	2b00      	cmp	r3, #0
    8f50:	d000      	beq.n	8f54 <MiWiPROTasks+0xb90>
    8f52:	e077      	b.n	9044 <MiWiPROTasks+0xc80>
                                                                    FamilyTree[i] = sourceShortAddress.v[1];
    8f54:	233f      	movs	r3, #63	; 0x3f
    8f56:	18fb      	adds	r3, r7, r3
    8f58:	781b      	ldrb	r3, [r3, #0]
    8f5a:	2210      	movs	r2, #16
    8f5c:	18ba      	adds	r2, r7, r2
    8f5e:	7851      	ldrb	r1, [r2, #1]
    8f60:	4ac6      	ldr	r2, [pc, #792]	; (927c <MiWiPROTasks+0xeb8>)
    8f62:	54d1      	strb	r1, [r2, r3]
                                                                    MiApp_WriteData(i);
    8f64:	4bc6      	ldr	r3, [pc, #792]	; (9280 <MiWiPROTasks+0xebc>)
    8f66:	781b      	ldrb	r3, [r3, #0]
    8f68:	1c5a      	adds	r2, r3, #1
    8f6a:	b2d1      	uxtb	r1, r2
    8f6c:	4ac4      	ldr	r2, [pc, #784]	; (9280 <MiWiPROTasks+0xebc>)
    8f6e:	7011      	strb	r1, [r2, #0]
    8f70:	0019      	movs	r1, r3
    8f72:	4bc4      	ldr	r3, [pc, #784]	; (9284 <MiWiPROTasks+0xec0>)
    8f74:	223f      	movs	r2, #63	; 0x3f
    8f76:	18ba      	adds	r2, r7, r2
    8f78:	7812      	ldrb	r2, [r2, #0]
    8f7a:	545a      	strb	r2, [r3, r1]
                                                                    tempNodeStatus.Val = 0x9D;
    8f7c:	4bc2      	ldr	r3, [pc, #776]	; (9288 <MiWiPROTasks+0xec4>)
    8f7e:	229d      	movs	r2, #157	; 0x9d
    8f80:	701a      	strb	r2, [r3, #0]
                                                                    tempPANID.Val = myPANID.Val;
    8f82:	4bc2      	ldr	r3, [pc, #776]	; (928c <MiWiPROTasks+0xec8>)
    8f84:	881a      	ldrh	r2, [r3, #0]
    8f86:	4bc2      	ldr	r3, [pc, #776]	; (9290 <MiWiPROTasks+0xecc>)
    8f88:	801a      	strh	r2, [r3, #0]
                                                                    entry = AddNodeToNetworkTable();
    8f8a:	2331      	movs	r3, #49	; 0x31
    8f8c:	18fc      	adds	r4, r7, r3
    8f8e:	4bc1      	ldr	r3, [pc, #772]	; (9294 <MiWiPROTasks+0xed0>)
    8f90:	4798      	blx	r3
    8f92:	0003      	movs	r3, r0
    8f94:	7023      	strb	r3, [r4, #0]
                                                                    if( entry < CONNECTION_SIZE )
    8f96:	2331      	movs	r3, #49	; 0x31
    8f98:	18fb      	adds	r3, r7, r3
    8f9a:	781b      	ldrb	r3, [r3, #0]
    8f9c:	2b0f      	cmp	r3, #15
    8f9e:	d840      	bhi.n	9022 <MiWiPROTasks+0xc5e>
                                                                            for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    8fa0:	233f      	movs	r3, #63	; 0x3f
    8fa2:	18fb      	adds	r3, r7, r3
    8fa4:	2200      	movs	r2, #0
    8fa6:	701a      	strb	r2, [r3, #0]
    8fa8:	e01b      	b.n	8fe2 <MiWiPROTasks+0xc1e>
                                                                                ConnectionTable[entry].PeerInfo[i] = MACRxPacket.Payload[14+MY_ADDRESS_LENGTH+i];
    8faa:	2331      	movs	r3, #49	; 0x31
    8fac:	18fb      	adds	r3, r7, r3
    8fae:	7818      	ldrb	r0, [r3, #0]
    8fb0:	233f      	movs	r3, #63	; 0x3f
    8fb2:	18fb      	adds	r3, r7, r3
    8fb4:	781a      	ldrb	r2, [r3, #0]
    8fb6:	4bb8      	ldr	r3, [pc, #736]	; (9298 <MiWiPROTasks+0xed4>)
    8fb8:	689b      	ldr	r3, [r3, #8]
    8fba:	213f      	movs	r1, #63	; 0x3f
    8fbc:	1879      	adds	r1, r7, r1
    8fbe:	7809      	ldrb	r1, [r1, #0]
    8fc0:	3116      	adds	r1, #22
    8fc2:	185b      	adds	r3, r3, r1
    8fc4:	781c      	ldrb	r4, [r3, #0]
    8fc6:	49b5      	ldr	r1, [pc, #724]	; (929c <MiWiPROTasks+0xed8>)
    8fc8:	0103      	lsls	r3, r0, #4
    8fca:	18cb      	adds	r3, r1, r3
    8fcc:	189b      	adds	r3, r3, r2
    8fce:	330d      	adds	r3, #13
    8fd0:	1c22      	adds	r2, r4, #0
    8fd2:	701a      	strb	r2, [r3, #0]
                                                                            for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    8fd4:	233f      	movs	r3, #63	; 0x3f
    8fd6:	18fb      	adds	r3, r7, r3
    8fd8:	781a      	ldrb	r2, [r3, #0]
    8fda:	233f      	movs	r3, #63	; 0x3f
    8fdc:	18fb      	adds	r3, r7, r3
    8fde:	3201      	adds	r2, #1
    8fe0:	701a      	strb	r2, [r3, #0]
    8fe2:	233f      	movs	r3, #63	; 0x3f
    8fe4:	18fb      	adds	r3, r7, r3
    8fe6:	781b      	ldrb	r3, [r3, #0]
    8fe8:	2b01      	cmp	r3, #1
    8fea:	d9de      	bls.n	8faa <MiWiPROTasks+0xbe6>
                                                                            if( entry < CONNECTION_SIZE )
    8fec:	2331      	movs	r3, #49	; 0x31
    8fee:	18fb      	adds	r3, r7, r3
    8ff0:	781b      	ldrb	r3, [r3, #0]
    8ff2:	2b0f      	cmp	r3, #15
    8ff4:	d900      	bls.n	8ff8 <MiWiPROTasks+0xc34>
    8ff6:	e08e      	b.n	9116 <MiWiPROTasks+0xd52>
                                                                                nvmPutConnectionTableIndex(&(ConnectionTable[entry]), entry);
    8ff8:	2331      	movs	r3, #49	; 0x31
    8ffa:	18fb      	adds	r3, r7, r3
    8ffc:	781b      	ldrb	r3, [r3, #0]
    8ffe:	011a      	lsls	r2, r3, #4
    9000:	4ba6      	ldr	r3, [pc, #664]	; (929c <MiWiPROTasks+0xed8>)
    9002:	18d0      	adds	r0, r2, r3
    9004:	2331      	movs	r3, #49	; 0x31
    9006:	18fb      	adds	r3, r7, r3
    9008:	781b      	ldrb	r3, [r3, #0]
    900a:	b29b      	uxth	r3, r3
    900c:	011b      	lsls	r3, r3, #4
    900e:	b29a      	uxth	r2, r3
    9010:	4ba3      	ldr	r3, [pc, #652]	; (92a0 <MiWiPROTasks+0xedc>)
    9012:	881b      	ldrh	r3, [r3, #0]
    9014:	18d3      	adds	r3, r2, r3
    9016:	b29b      	uxth	r3, r3
    9018:	2210      	movs	r2, #16
    901a:	0019      	movs	r1, r3
    901c:	4ba1      	ldr	r3, [pc, #644]	; (92a4 <MiWiPROTasks+0xee0>)
    901e:	4798      	blx	r3
    9020:	e079      	b.n	9116 <MiWiPROTasks+0xd52>
                                                                        FamilyTree[i] = 0xFF;
    9022:	233f      	movs	r3, #63	; 0x3f
    9024:	18fb      	adds	r3, r7, r3
    9026:	781b      	ldrb	r3, [r3, #0]
    9028:	4a94      	ldr	r2, [pc, #592]	; (927c <MiWiPROTasks+0xeb8>)
    902a:	21ff      	movs	r1, #255	; 0xff
    902c:	54d1      	strb	r1, [r2, r3]
                                                                        MiApp_WriteData(0xFF);
    902e:	4b94      	ldr	r3, [pc, #592]	; (9280 <MiWiPROTasks+0xebc>)
    9030:	781b      	ldrb	r3, [r3, #0]
    9032:	1c5a      	adds	r2, r3, #1
    9034:	b2d1      	uxtb	r1, r2
    9036:	4a92      	ldr	r2, [pc, #584]	; (9280 <MiWiPROTasks+0xebc>)
    9038:	7011      	strb	r1, [r2, #0]
    903a:	001a      	movs	r2, r3
    903c:	4b91      	ldr	r3, [pc, #580]	; (9284 <MiWiPROTasks+0xec0>)
    903e:	21ff      	movs	r1, #255	; 0xff
    9040:	5499      	strb	r1, [r3, r2]
    9042:	e068      	b.n	9116 <MiWiPROTasks+0xd52>
                                                                    MiApp_WriteData(0xFF);
    9044:	4b8e      	ldr	r3, [pc, #568]	; (9280 <MiWiPROTasks+0xebc>)
    9046:	781b      	ldrb	r3, [r3, #0]
    9048:	1c5a      	adds	r2, r3, #1
    904a:	b2d1      	uxtb	r1, r2
    904c:	4a8c      	ldr	r2, [pc, #560]	; (9280 <MiWiPROTasks+0xebc>)
    904e:	7011      	strb	r1, [r2, #0]
    9050:	001a      	movs	r2, r3
    9052:	4b8c      	ldr	r3, [pc, #560]	; (9284 <MiWiPROTasks+0xec0>)
    9054:	21ff      	movs	r1, #255	; 0xff
    9056:	5499      	strb	r1, [r3, r2]
    9058:	e05d      	b.n	9116 <MiWiPROTasks+0xd52>
                                                                if( ConnectionTable[entry].AltAddress.v[0] == 0 )
    905a:	2331      	movs	r3, #49	; 0x31
    905c:	18fb      	adds	r3, r7, r3
    905e:	781b      	ldrb	r3, [r3, #0]
    9060:	4a8e      	ldr	r2, [pc, #568]	; (929c <MiWiPROTasks+0xed8>)
    9062:	011b      	lsls	r3, r3, #4
    9064:	18d3      	adds	r3, r2, r3
    9066:	3302      	adds	r3, #2
    9068:	781b      	ldrb	r3, [r3, #0]
    906a:	2b00      	cmp	r3, #0
    906c:	d149      	bne.n	9102 <MiWiPROTasks+0xd3e>
                                                                    uint8_t loopCheckTarget = sourceShortAddress.v[1];
    906e:	233d      	movs	r3, #61	; 0x3d
    9070:	18fb      	adds	r3, r7, r3
    9072:	2210      	movs	r2, #16
    9074:	18ba      	adds	r2, r7, r2
    9076:	7852      	ldrb	r2, [r2, #1]
    9078:	701a      	strb	r2, [r3, #0]
                                                                    while( loopCheckTarget )
    907a:	e016      	b.n	90aa <MiWiPROTasks+0xce6>
                                                                        if( FamilyTree[loopCheckTarget] == ConnectionTable[entry].AltAddress.v[1] )
    907c:	233d      	movs	r3, #61	; 0x3d
    907e:	18fb      	adds	r3, r7, r3
    9080:	781b      	ldrb	r3, [r3, #0]
    9082:	4a7e      	ldr	r2, [pc, #504]	; (927c <MiWiPROTasks+0xeb8>)
    9084:	5cd2      	ldrb	r2, [r2, r3]
    9086:	2331      	movs	r3, #49	; 0x31
    9088:	18fb      	adds	r3, r7, r3
    908a:	781b      	ldrb	r3, [r3, #0]
    908c:	4983      	ldr	r1, [pc, #524]	; (929c <MiWiPROTasks+0xed8>)
    908e:	011b      	lsls	r3, r3, #4
    9090:	18cb      	adds	r3, r1, r3
    9092:	3303      	adds	r3, #3
    9094:	781b      	ldrb	r3, [r3, #0]
    9096:	429a      	cmp	r2, r3
    9098:	d00d      	beq.n	90b6 <MiWiPROTasks+0xcf2>
                                                                        loopCheckTarget = FamilyTree[loopCheckTarget];
    909a:	233d      	movs	r3, #61	; 0x3d
    909c:	18fb      	adds	r3, r7, r3
    909e:	781a      	ldrb	r2, [r3, #0]
    90a0:	233d      	movs	r3, #61	; 0x3d
    90a2:	18fb      	adds	r3, r7, r3
    90a4:	4975      	ldr	r1, [pc, #468]	; (927c <MiWiPROTasks+0xeb8>)
    90a6:	5c8a      	ldrb	r2, [r1, r2]
    90a8:	701a      	strb	r2, [r3, #0]
                                                                    while( loopCheckTarget )
    90aa:	233d      	movs	r3, #61	; 0x3d
    90ac:	18fb      	adds	r3, r7, r3
    90ae:	781b      	ldrb	r3, [r3, #0]
    90b0:	2b00      	cmp	r3, #0
    90b2:	d1e3      	bne.n	907c <MiWiPROTasks+0xcb8>
    90b4:	e000      	b.n	90b8 <MiWiPROTasks+0xcf4>
                                                                            break;
    90b6:	46c0      	nop			; (mov r8, r8)
                                                                    if( loopCheckTarget == 0 )
    90b8:	233d      	movs	r3, #61	; 0x3d
    90ba:	18fb      	adds	r3, r7, r3
    90bc:	781b      	ldrb	r3, [r3, #0]
    90be:	2b00      	cmp	r3, #0
    90c0:	d10d      	bne.n	90de <MiWiPROTasks+0xd1a>
                                                                        FamilyTree[ConnectionTable[entry].AltAddress.v[1]] = sourceShortAddress.v[1];
    90c2:	2331      	movs	r3, #49	; 0x31
    90c4:	18fb      	adds	r3, r7, r3
    90c6:	781b      	ldrb	r3, [r3, #0]
    90c8:	4a74      	ldr	r2, [pc, #464]	; (929c <MiWiPROTasks+0xed8>)
    90ca:	011b      	lsls	r3, r3, #4
    90cc:	18d3      	adds	r3, r2, r3
    90ce:	3303      	adds	r3, #3
    90d0:	781b      	ldrb	r3, [r3, #0]
    90d2:	001a      	movs	r2, r3
    90d4:	2310      	movs	r3, #16
    90d6:	18fb      	adds	r3, r7, r3
    90d8:	7859      	ldrb	r1, [r3, #1]
    90da:	4b68      	ldr	r3, [pc, #416]	; (927c <MiWiPROTasks+0xeb8>)
    90dc:	5499      	strb	r1, [r3, r2]
                                                                    MiApp_WriteData( ConnectionTable[entry].AltAddress.v[1] );
    90de:	4b68      	ldr	r3, [pc, #416]	; (9280 <MiWiPROTasks+0xebc>)
    90e0:	781b      	ldrb	r3, [r3, #0]
    90e2:	1c5a      	adds	r2, r3, #1
    90e4:	b2d1      	uxtb	r1, r2
    90e6:	4a66      	ldr	r2, [pc, #408]	; (9280 <MiWiPROTasks+0xebc>)
    90e8:	7011      	strb	r1, [r2, #0]
    90ea:	0019      	movs	r1, r3
    90ec:	2331      	movs	r3, #49	; 0x31
    90ee:	18fb      	adds	r3, r7, r3
    90f0:	781b      	ldrb	r3, [r3, #0]
    90f2:	4a6a      	ldr	r2, [pc, #424]	; (929c <MiWiPROTasks+0xed8>)
    90f4:	011b      	lsls	r3, r3, #4
    90f6:	18d3      	adds	r3, r2, r3
    90f8:	3303      	adds	r3, #3
    90fa:	781a      	ldrb	r2, [r3, #0]
    90fc:	4b61      	ldr	r3, [pc, #388]	; (9284 <MiWiPROTasks+0xec0>)
    90fe:	545a      	strb	r2, [r3, r1]
    9100:	e009      	b.n	9116 <MiWiPROTasks+0xd52>
                                                                    ConnectionTable[entry].status.Val = 0;
    9102:	2331      	movs	r3, #49	; 0x31
    9104:	18fb      	adds	r3, r7, r3
    9106:	781b      	ldrb	r3, [r3, #0]
    9108:	4a64      	ldr	r2, [pc, #400]	; (929c <MiWiPROTasks+0xed8>)
    910a:	011b      	lsls	r3, r3, #4
    910c:	18d3      	adds	r3, r2, r3
    910e:	330c      	adds	r3, #12
    9110:	2200      	movs	r2, #0
    9112:	701a      	strb	r2, [r3, #0]
                                                                    goto ASSIGN_COORDINATOR_SHORT_ADDRESS;
    9114:	e6cd      	b.n	8eb2 <MiWiPROTasks+0xaee>
                                                            UnicastShortAddress(sourceShortAddress.v);
    9116:	2310      	movs	r3, #16
    9118:	18fb      	adds	r3, r7, r3
    911a:	0018      	movs	r0, r3
    911c:	4b62      	ldr	r3, [pc, #392]	; (92a8 <MiWiPROTasks+0xee4>)
    911e:	4798      	blx	r3
                                                            MiWiPROStatus.bits.COMM_FAMILY_TREE = FAMILY_TREE_BROADCAST;
    9120:	4b62      	ldr	r3, [pc, #392]	; (92ac <MiWiPROTasks+0xee8>)
    9122:	781a      	ldrb	r2, [r3, #0]
    9124:	210e      	movs	r1, #14
    9126:	438a      	bics	r2, r1
    9128:	1c11      	adds	r1, r2, #0
    912a:	2206      	movs	r2, #6
    912c:	430a      	orrs	r2, r1
    912e:	701a      	strb	r2, [r3, #0]
                                                            backgroundTaskTick = MiWi_TickGet();
    9130:	4b5f      	ldr	r3, [pc, #380]	; (92b0 <MiWiPROTasks+0xeec>)
    9132:	4798      	blx	r3
    9134:	0003      	movs	r3, r0
    9136:	001a      	movs	r2, r3
    9138:	4b5e      	ldr	r3, [pc, #376]	; (92b4 <MiWiPROTasks+0xef0>)
    913a:	601a      	str	r2, [r3, #0]
                                                            backgroundTaskTick.Val -= (ONE_SECOND/2);
    913c:	4b5d      	ldr	r3, [pc, #372]	; (92b4 <MiWiPROTasks+0xef0>)
    913e:	681b      	ldr	r3, [r3, #0]
    9140:	4a5d      	ldr	r2, [pc, #372]	; (92b8 <MiWiPROTasks+0xef4>)
    9142:	189a      	adds	r2, r3, r2
    9144:	4b5b      	ldr	r3, [pc, #364]	; (92b4 <MiWiPROTasks+0xef0>)
    9146:	601a      	str	r2, [r3, #0]
                                                            MiWiPRONVMStatus.bits.saveFamilyTree = 1;
    9148:	4b5c      	ldr	r3, [pc, #368]	; (92bc <MiWiPROTasks+0xef8>)
    914a:	781a      	ldrb	r2, [r3, #0]
    914c:	2101      	movs	r1, #1
    914e:	430a      	orrs	r2, r1
    9150:	701a      	strb	r2, [r3, #0]
                                                break;
    9152:	f000 fed7 	bl	9f04 <MiWiPROTasks+0x1b40>
                                                            for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    9156:	233f      	movs	r3, #63	; 0x3f
    9158:	18fb      	adds	r3, r7, r3
    915a:	2200      	movs	r2, #0
    915c:	701a      	strb	r2, [r3, #0]
    915e:	e013      	b.n	9188 <MiWiPROTasks+0xdc4>
                                                                tempLongAddress[i] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+3+i];
    9160:	233f      	movs	r3, #63	; 0x3f
    9162:	18fb      	adds	r3, r7, r3
    9164:	781a      	ldrb	r2, [r3, #0]
    9166:	4b4c      	ldr	r3, [pc, #304]	; (9298 <MiWiPROTasks+0xed4>)
    9168:	689b      	ldr	r3, [r3, #8]
    916a:	213f      	movs	r1, #63	; 0x3f
    916c:	1879      	adds	r1, r7, r1
    916e:	7809      	ldrb	r1, [r1, #0]
    9170:	310e      	adds	r1, #14
    9172:	185b      	adds	r3, r3, r1
    9174:	7819      	ldrb	r1, [r3, #0]
    9176:	4b52      	ldr	r3, [pc, #328]	; (92c0 <MiWiPROTasks+0xefc>)
    9178:	5499      	strb	r1, [r3, r2]
                                                            for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    917a:	233f      	movs	r3, #63	; 0x3f
    917c:	18fb      	adds	r3, r7, r3
    917e:	781a      	ldrb	r2, [r3, #0]
    9180:	233f      	movs	r3, #63	; 0x3f
    9182:	18fb      	adds	r3, r7, r3
    9184:	3201      	adds	r2, #1
    9186:	701a      	strb	r2, [r3, #0]
    9188:	233f      	movs	r3, #63	; 0x3f
    918a:	18fb      	adds	r3, r7, r3
    918c:	781b      	ldrb	r3, [r3, #0]
    918e:	2b07      	cmp	r3, #7
    9190:	d9e6      	bls.n	9160 <MiWiPROTasks+0xd9c>
                                                            if( (entry = SearchForLongAddress()) != 0xFF )
    9192:	2331      	movs	r3, #49	; 0x31
    9194:	18fc      	adds	r4, r7, r3
    9196:	4b4b      	ldr	r3, [pc, #300]	; (92c4 <MiWiPROTasks+0xf00>)
    9198:	4798      	blx	r3
    919a:	0003      	movs	r3, r0
    919c:	7023      	strb	r3, [r4, #0]
    919e:	2331      	movs	r3, #49	; 0x31
    91a0:	18fb      	adds	r3, r7, r3
    91a2:	781b      	ldrb	r3, [r3, #0]
    91a4:	2bff      	cmp	r3, #255	; 0xff
    91a6:	d101      	bne.n	91ac <MiWiPROTasks+0xde8>
    91a8:	f000 feac 	bl	9f04 <MiWiPROTasks+0x1b40>
                                                                for(i = (NUM_COORDINATOR-1); i > 0; i--)
    91ac:	233f      	movs	r3, #63	; 0x3f
    91ae:	18fb      	adds	r3, r7, r3
    91b0:	2200      	movs	r2, #0
    91b2:	701a      	strb	r2, [r3, #0]
    91b4:	e090      	b.n	92d8 <MiWiPROTasks+0xf14>
                                                                    index = i;
    91b6:	233c      	movs	r3, #60	; 0x3c
    91b8:	18fb      	adds	r3, r7, r3
    91ba:	223f      	movs	r2, #63	; 0x3f
    91bc:	18ba      	adds	r2, r7, r2
    91be:	7812      	ldrb	r2, [r2, #0]
    91c0:	701a      	strb	r2, [r3, #0]
                                                                    loopCheck = 0;
    91c2:	233b      	movs	r3, #59	; 0x3b
    91c4:	18fb      	adds	r3, r7, r3
    91c6:	2200      	movs	r2, #0
    91c8:	701a      	strb	r2, [r3, #0]
                                                                    while(index > 0)
    91ca:	e049      	b.n	9260 <MiWiPROTasks+0xe9c>
                                                                        if( FamilyTree[index] == 0xFF )
    91cc:	233c      	movs	r3, #60	; 0x3c
    91ce:	18fb      	adds	r3, r7, r3
    91d0:	781b      	ldrb	r3, [r3, #0]
    91d2:	4a2a      	ldr	r2, [pc, #168]	; (927c <MiWiPROTasks+0xeb8>)
    91d4:	5cd3      	ldrb	r3, [r2, r3]
    91d6:	2bff      	cmp	r3, #255	; 0xff
    91d8:	d048      	beq.n	926c <MiWiPROTasks+0xea8>
                                                                        if( FamilyTree[index] == ConnectionTable[entry].AltAddress.v[1] )
    91da:	233c      	movs	r3, #60	; 0x3c
    91dc:	18fb      	adds	r3, r7, r3
    91de:	781b      	ldrb	r3, [r3, #0]
    91e0:	4a26      	ldr	r2, [pc, #152]	; (927c <MiWiPROTasks+0xeb8>)
    91e2:	5cd2      	ldrb	r2, [r2, r3]
    91e4:	2331      	movs	r3, #49	; 0x31
    91e6:	18fb      	adds	r3, r7, r3
    91e8:	781b      	ldrb	r3, [r3, #0]
    91ea:	492c      	ldr	r1, [pc, #176]	; (929c <MiWiPROTasks+0xed8>)
    91ec:	011b      	lsls	r3, r3, #4
    91ee:	18cb      	adds	r3, r1, r3
    91f0:	3303      	adds	r3, #3
    91f2:	781b      	ldrb	r3, [r3, #0]
    91f4:	429a      	cmp	r2, r3
    91f6:	d122      	bne.n	923e <MiWiPROTasks+0xe7a>
                                                                            FamilyTree[i] = 0xFF;
    91f8:	233f      	movs	r3, #63	; 0x3f
    91fa:	18fb      	adds	r3, r7, r3
    91fc:	781b      	ldrb	r3, [r3, #0]
    91fe:	4a1f      	ldr	r2, [pc, #124]	; (927c <MiWiPROTasks+0xeb8>)
    9200:	21ff      	movs	r1, #255	; 0xff
    9202:	54d1      	strb	r1, [r2, r3]
                                                                            tempShortAddress.v[0] = 0;
    9204:	4b1b      	ldr	r3, [pc, #108]	; (9274 <MiWiPROTasks+0xeb0>)
    9206:	2200      	movs	r2, #0
    9208:	701a      	strb	r2, [r3, #0]
                                                                            tempShortAddress.v[1] = i;
    920a:	4b1a      	ldr	r3, [pc, #104]	; (9274 <MiWiPROTasks+0xeb0>)
    920c:	223f      	movs	r2, #63	; 0x3f
    920e:	18ba      	adds	r2, r7, r2
    9210:	7812      	ldrb	r2, [r2, #0]
    9212:	705a      	strb	r2, [r3, #1]
                                                                            if( (entry2 = SearchForShortAddress()) != 0xFF )
    9214:	2330      	movs	r3, #48	; 0x30
    9216:	18fc      	adds	r4, r7, r3
    9218:	4b17      	ldr	r3, [pc, #92]	; (9278 <MiWiPROTasks+0xeb4>)
    921a:	4798      	blx	r3
    921c:	0003      	movs	r3, r0
    921e:	7023      	strb	r3, [r4, #0]
    9220:	2330      	movs	r3, #48	; 0x30
    9222:	18fb      	adds	r3, r7, r3
    9224:	781b      	ldrb	r3, [r3, #0]
    9226:	2bff      	cmp	r3, #255	; 0xff
    9228:	d022      	beq.n	9270 <MiWiPROTasks+0xeac>
                                                                                ConnectionTable[entry2].status.Val = 0;
    922a:	2330      	movs	r3, #48	; 0x30
    922c:	18fb      	adds	r3, r7, r3
    922e:	781b      	ldrb	r3, [r3, #0]
    9230:	4a1a      	ldr	r2, [pc, #104]	; (929c <MiWiPROTasks+0xed8>)
    9232:	011b      	lsls	r3, r3, #4
    9234:	18d3      	adds	r3, r2, r3
    9236:	330c      	adds	r3, #12
    9238:	2200      	movs	r2, #0
    923a:	701a      	strb	r2, [r3, #0]
                                                                            break;
    923c:	e018      	b.n	9270 <MiWiPROTasks+0xeac>
                                                                        index = FamilyTree[index];
    923e:	233c      	movs	r3, #60	; 0x3c
    9240:	18fb      	adds	r3, r7, r3
    9242:	781a      	ldrb	r2, [r3, #0]
    9244:	233c      	movs	r3, #60	; 0x3c
    9246:	18fb      	adds	r3, r7, r3
    9248:	490c      	ldr	r1, [pc, #48]	; (927c <MiWiPROTasks+0xeb8>)
    924a:	5c8a      	ldrb	r2, [r1, r2]
    924c:	701a      	strb	r2, [r3, #0]
                                                                        if( loopCheck++ > NUM_COORDINATOR )
    924e:	233b      	movs	r3, #59	; 0x3b
    9250:	18fb      	adds	r3, r7, r3
    9252:	781b      	ldrb	r3, [r3, #0]
    9254:	223b      	movs	r2, #59	; 0x3b
    9256:	18ba      	adds	r2, r7, r2
    9258:	1c59      	adds	r1, r3, #1
    925a:	7011      	strb	r1, [r2, #0]
    925c:	2b01      	cmp	r3, #1
    925e:	d833      	bhi.n	92c8 <MiWiPROTasks+0xf04>
                                                                    while(index > 0)
    9260:	233c      	movs	r3, #60	; 0x3c
    9262:	18fb      	adds	r3, r7, r3
    9264:	781b      	ldrb	r3, [r3, #0]
    9266:	2b00      	cmp	r3, #0
    9268:	d1b0      	bne.n	91cc <MiWiPROTasks+0xe08>
    926a:	e02e      	b.n	92ca <MiWiPROTasks+0xf06>
                                                                            break;
    926c:	46c0      	nop			; (mov r8, r8)
    926e:	e02c      	b.n	92ca <MiWiPROTasks+0xf06>
                                                                            break;
    9270:	46c0      	nop			; (mov r8, r8)
    9272:	e02a      	b.n	92ca <MiWiPROTasks+0xf06>
    9274:	200012e0 	.word	0x200012e0
    9278:	0000cb71 	.word	0x0000cb71
    927c:	20001518 	.word	0x20001518
    9280:	200012dc 	.word	0x200012dc
    9284:	200012e4 	.word	0x200012e4
    9288:	200012c8 	.word	0x200012c8
    928c:	20001290 	.word	0x20001290
    9290:	200012c0 	.word	0x200012c0
    9294:	0000cddd 	.word	0x0000cddd
    9298:	2000126c 	.word	0x2000126c
    929c:	20001150 	.word	0x20001150
    92a0:	2000159a 	.word	0x2000159a
    92a4:	0000e9c1 	.word	0x0000e9c1
    92a8:	0000db3d 	.word	0x0000db3d
    92ac:	200012c4 	.word	0x200012c4
    92b0:	0000ebad 	.word	0x0000ebad
    92b4:	2000113c 	.word	0x2000113c
    92b8:	fffff800 	.word	0xfffff800
    92bc:	200013c4 	.word	0x200013c4
    92c0:	20001288 	.word	0x20001288
    92c4:	0000cd35 	.word	0x0000cd35
                                                                            break;
    92c8:	46c0      	nop			; (mov r8, r8)
                                                                for(i = (NUM_COORDINATOR-1); i > 0; i--)
    92ca:	233f      	movs	r3, #63	; 0x3f
    92cc:	18fb      	adds	r3, r7, r3
    92ce:	781a      	ldrb	r2, [r3, #0]
    92d0:	233f      	movs	r3, #63	; 0x3f
    92d2:	18fb      	adds	r3, r7, r3
    92d4:	3a01      	subs	r2, #1
    92d6:	701a      	strb	r2, [r3, #0]
    92d8:	233f      	movs	r3, #63	; 0x3f
    92da:	18fb      	adds	r3, r7, r3
    92dc:	781b      	ldrb	r3, [r3, #0]
    92de:	2b00      	cmp	r3, #0
    92e0:	d000      	beq.n	92e4 <MiWiPROTasks+0xf20>
    92e2:	e768      	b.n	91b6 <MiWiPROTasks+0xdf2>
                                                                FamilyTree[ConnectionTable[entry].AltAddress.v[1]] = 0xFF;
    92e4:	2331      	movs	r3, #49	; 0x31
    92e6:	18fb      	adds	r3, r7, r3
    92e8:	781b      	ldrb	r3, [r3, #0]
    92ea:	4acb      	ldr	r2, [pc, #812]	; (9618 <MiWiPROTasks+0x1254>)
    92ec:	011b      	lsls	r3, r3, #4
    92ee:	18d3      	adds	r3, r2, r3
    92f0:	3303      	adds	r3, #3
    92f2:	781b      	ldrb	r3, [r3, #0]
    92f4:	001a      	movs	r2, r3
    92f6:	4bc9      	ldr	r3, [pc, #804]	; (961c <MiWiPROTasks+0x1258>)
    92f8:	21ff      	movs	r1, #255	; 0xff
    92fa:	5499      	strb	r1, [r3, r2]
                                                                ConnectionTable[entry].status.Val = 0;
    92fc:	2331      	movs	r3, #49	; 0x31
    92fe:	18fb      	adds	r3, r7, r3
    9300:	781b      	ldrb	r3, [r3, #0]
    9302:	4ac5      	ldr	r2, [pc, #788]	; (9618 <MiWiPROTasks+0x1254>)
    9304:	011b      	lsls	r3, r3, #4
    9306:	18d3      	adds	r3, r2, r3
    9308:	330c      	adds	r3, #12
    930a:	2200      	movs	r2, #0
    930c:	701a      	strb	r2, [r3, #0]
                                                                    nvmPutConnectionTableIndex(&(ConnectionTable[entry]), entry);  
    930e:	2331      	movs	r3, #49	; 0x31
    9310:	18fb      	adds	r3, r7, r3
    9312:	781b      	ldrb	r3, [r3, #0]
    9314:	011a      	lsls	r2, r3, #4
    9316:	4bc0      	ldr	r3, [pc, #768]	; (9618 <MiWiPROTasks+0x1254>)
    9318:	18d0      	adds	r0, r2, r3
    931a:	2331      	movs	r3, #49	; 0x31
    931c:	18fb      	adds	r3, r7, r3
    931e:	781b      	ldrb	r3, [r3, #0]
    9320:	b29b      	uxth	r3, r3
    9322:	011b      	lsls	r3, r3, #4
    9324:	b29a      	uxth	r2, r3
    9326:	4bbe      	ldr	r3, [pc, #760]	; (9620 <MiWiPROTasks+0x125c>)
    9328:	881b      	ldrh	r3, [r3, #0]
    932a:	18d3      	adds	r3, r2, r3
    932c:	b29b      	uxth	r3, r3
    932e:	2210      	movs	r2, #16
    9330:	0019      	movs	r1, r3
    9332:	4bbc      	ldr	r3, [pc, #752]	; (9624 <MiWiPROTasks+0x1260>)
    9334:	4798      	blx	r3
                                                                MiWiPROStatus.bits.COMM_FAMILY_TREE = FAMILY_TREE_BROADCAST;
    9336:	4bbc      	ldr	r3, [pc, #752]	; (9628 <MiWiPROTasks+0x1264>)
    9338:	781a      	ldrb	r2, [r3, #0]
    933a:	210e      	movs	r1, #14
    933c:	438a      	bics	r2, r1
    933e:	1c11      	adds	r1, r2, #0
    9340:	2206      	movs	r2, #6
    9342:	430a      	orrs	r2, r1
    9344:	701a      	strb	r2, [r3, #0]
                                                                backgroundTaskTick = MiWi_TickGet();
    9346:	4bb9      	ldr	r3, [pc, #740]	; (962c <MiWiPROTasks+0x1268>)
    9348:	4798      	blx	r3
    934a:	0003      	movs	r3, r0
    934c:	001a      	movs	r2, r3
    934e:	4bb8      	ldr	r3, [pc, #736]	; (9630 <MiWiPROTasks+0x126c>)
    9350:	601a      	str	r2, [r3, #0]
                                                                backgroundTaskTick.Val -= (ONE_SECOND/2);
    9352:	4bb7      	ldr	r3, [pc, #732]	; (9630 <MiWiPROTasks+0x126c>)
    9354:	681b      	ldr	r3, [r3, #0]
    9356:	4ab7      	ldr	r2, [pc, #732]	; (9634 <MiWiPROTasks+0x1270>)
    9358:	189a      	adds	r2, r3, r2
    935a:	4bb5      	ldr	r3, [pc, #724]	; (9630 <MiWiPROTasks+0x126c>)
    935c:	601a      	str	r2, [r3, #0]
                                                break;
    935e:	f000 fdd1 	bl	9f04 <MiWiPROTasks+0x1b40>
                                                    uint8_t associateStatus = ASSOCIATION_SUCCESSFUL;
    9362:	2339      	movs	r3, #57	; 0x39
    9364:	18fb      	adds	r3, r7, r3
    9366:	2200      	movs	r2, #0
    9368:	701a      	strb	r2, [r3, #0]
                                                    for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    936a:	233f      	movs	r3, #63	; 0x3f
    936c:	18fb      	adds	r3, r7, r3
    936e:	2200      	movs	r2, #0
    9370:	701a      	strb	r2, [r3, #0]
    9372:	e013      	b.n	939c <MiWiPROTasks+0xfd8>
                                                        tempLongAddress[i] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2+i];
    9374:	233f      	movs	r3, #63	; 0x3f
    9376:	18fb      	adds	r3, r7, r3
    9378:	781a      	ldrb	r2, [r3, #0]
    937a:	4baf      	ldr	r3, [pc, #700]	; (9638 <MiWiPROTasks+0x1274>)
    937c:	689b      	ldr	r3, [r3, #8]
    937e:	213f      	movs	r1, #63	; 0x3f
    9380:	1879      	adds	r1, r7, r1
    9382:	7809      	ldrb	r1, [r1, #0]
    9384:	310d      	adds	r1, #13
    9386:	185b      	adds	r3, r3, r1
    9388:	7819      	ldrb	r1, [r3, #0]
    938a:	4bac      	ldr	r3, [pc, #688]	; (963c <MiWiPROTasks+0x1278>)
    938c:	5499      	strb	r1, [r3, r2]
                                                    for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    938e:	233f      	movs	r3, #63	; 0x3f
    9390:	18fb      	adds	r3, r7, r3
    9392:	781a      	ldrb	r2, [r3, #0]
    9394:	233f      	movs	r3, #63	; 0x3f
    9396:	18fb      	adds	r3, r7, r3
    9398:	3201      	adds	r2, #1
    939a:	701a      	strb	r2, [r3, #0]
    939c:	233f      	movs	r3, #63	; 0x3f
    939e:	18fb      	adds	r3, r7, r3
    93a0:	781b      	ldrb	r3, [r3, #0]
    93a2:	2b07      	cmp	r3, #7
    93a4:	d9e6      	bls.n	9374 <MiWiPROTasks+0xfb0>
                                                    tempNodeStatus.Val = 0xBF;
    93a6:	4ba6      	ldr	r3, [pc, #664]	; (9640 <MiWiPROTasks+0x127c>)
    93a8:	22bf      	movs	r2, #191	; 0xbf
    93aa:	701a      	strb	r2, [r3, #0]
                                                    if( MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2+MY_ADDRESS_LENGTH] == 0xFF )
    93ac:	4ba2      	ldr	r3, [pc, #648]	; (9638 <MiWiPROTasks+0x1274>)
    93ae:	689b      	ldr	r3, [r3, #8]
    93b0:	3315      	adds	r3, #21
    93b2:	781b      	ldrb	r3, [r3, #0]
    93b4:	2bff      	cmp	r3, #255	; 0xff
    93b6:	d15a      	bne.n	946e <MiWiPROTasks+0x10aa>
                                                        handle = SearchForLongAddress();
    93b8:	232f      	movs	r3, #47	; 0x2f
    93ba:	18fc      	adds	r4, r7, r3
    93bc:	4ba1      	ldr	r3, [pc, #644]	; (9644 <MiWiPROTasks+0x1280>)
    93be:	4798      	blx	r3
    93c0:	0003      	movs	r3, r0
    93c2:	7023      	strb	r3, [r4, #0]
                                                        if( handle < CONNECTION_SIZE )
    93c4:	232f      	movs	r3, #47	; 0x2f
    93c6:	18fb      	adds	r3, r7, r3
    93c8:	781b      	ldrb	r3, [r3, #0]
    93ca:	2b0f      	cmp	r3, #15
    93cc:	d901      	bls.n	93d2 <MiWiPROTasks+0x100e>
    93ce:	f000 fd9b 	bl	9f08 <MiWiPROTasks+0x1b44>
                                                            tempShortAddress.v[1] = myShortAddress.v[1];
    93d2:	4b9d      	ldr	r3, [pc, #628]	; (9648 <MiWiPROTasks+0x1284>)
    93d4:	785a      	ldrb	r2, [r3, #1]
    93d6:	4b9d      	ldr	r3, [pc, #628]	; (964c <MiWiPROTasks+0x1288>)
    93d8:	705a      	strb	r2, [r3, #1]
                                                            entry = 1;
    93da:	233a      	movs	r3, #58	; 0x3a
    93dc:	18fb      	adds	r3, r7, r3
    93de:	2201      	movs	r2, #1
    93e0:	701a      	strb	r2, [r3, #0]
                                                            for(i = 0; i < CONNECTION_SIZE; i++)
    93e2:	233f      	movs	r3, #63	; 0x3f
    93e4:	18fb      	adds	r3, r7, r3
    93e6:	2200      	movs	r2, #0
    93e8:	701a      	strb	r2, [r3, #0]
    93ea:	e023      	b.n	9434 <MiWiPROTasks+0x1070>
                                                                tempShortAddress.v[0] = entry;
    93ec:	4b97      	ldr	r3, [pc, #604]	; (964c <MiWiPROTasks+0x1288>)
    93ee:	223a      	movs	r2, #58	; 0x3a
    93f0:	18ba      	adds	r2, r7, r2
    93f2:	7812      	ldrb	r2, [r2, #0]
    93f4:	701a      	strb	r2, [r3, #0]
                                                                if( SearchForShortAddress() == 0xFF )
    93f6:	4b96      	ldr	r3, [pc, #600]	; (9650 <MiWiPROTasks+0x128c>)
    93f8:	4798      	blx	r3
    93fa:	0003      	movs	r3, r0
    93fc:	2bff      	cmp	r3, #255	; 0xff
    93fe:	d10b      	bne.n	9418 <MiWiPROTasks+0x1054>
                                                                    tempShortAddress.v[0] = entry + 0x80;
    9400:	233a      	movs	r3, #58	; 0x3a
    9402:	18fb      	adds	r3, r7, r3
    9404:	781b      	ldrb	r3, [r3, #0]
    9406:	3b80      	subs	r3, #128	; 0x80
    9408:	b2da      	uxtb	r2, r3
    940a:	4b90      	ldr	r3, [pc, #576]	; (964c <MiWiPROTasks+0x1288>)
    940c:	701a      	strb	r2, [r3, #0]
                                                                    if( SearchForShortAddress() == 0xFF )
    940e:	4b90      	ldr	r3, [pc, #576]	; (9650 <MiWiPROTasks+0x128c>)
    9410:	4798      	blx	r3
    9412:	0003      	movs	r3, r0
    9414:	2bff      	cmp	r3, #255	; 0xff
    9416:	d013      	beq.n	9440 <MiWiPROTasks+0x107c>
                                                                entry++;       
    9418:	233a      	movs	r3, #58	; 0x3a
    941a:	18fb      	adds	r3, r7, r3
    941c:	781a      	ldrb	r2, [r3, #0]
    941e:	233a      	movs	r3, #58	; 0x3a
    9420:	18fb      	adds	r3, r7, r3
    9422:	3201      	adds	r2, #1
    9424:	701a      	strb	r2, [r3, #0]
                                                            for(i = 0; i < CONNECTION_SIZE; i++)
    9426:	233f      	movs	r3, #63	; 0x3f
    9428:	18fb      	adds	r3, r7, r3
    942a:	781a      	ldrb	r2, [r3, #0]
    942c:	233f      	movs	r3, #63	; 0x3f
    942e:	18fb      	adds	r3, r7, r3
    9430:	3201      	adds	r2, #1
    9432:	701a      	strb	r2, [r3, #0]
    9434:	233f      	movs	r3, #63	; 0x3f
    9436:	18fb      	adds	r3, r7, r3
    9438:	781b      	ldrb	r3, [r3, #0]
    943a:	2b0f      	cmp	r3, #15
    943c:	d9d6      	bls.n	93ec <MiWiPROTasks+0x1028>
    943e:	e000      	b.n	9442 <MiWiPROTasks+0x107e>
                                                                        break;
    9440:	46c0      	nop			; (mov r8, r8)
                                                            if( i < CONNECTION_SIZE )
    9442:	233f      	movs	r3, #63	; 0x3f
    9444:	18fb      	adds	r3, r7, r3
    9446:	781b      	ldrb	r3, [r3, #0]
    9448:	2b0f      	cmp	r3, #15
    944a:	d818      	bhi.n	947e <MiWiPROTasks+0x10ba>
                                                                if( entry < 128 )
    944c:	233a      	movs	r3, #58	; 0x3a
    944e:	18fb      	adds	r3, r7, r3
    9450:	781b      	ldrb	r3, [r3, #0]
    9452:	b25b      	sxtb	r3, r3
    9454:	2b00      	cmp	r3, #0
    9456:	db05      	blt.n	9464 <MiWiPROTasks+0x10a0>
                                                                    tempShortAddress.v[0] = entry;
    9458:	4b7c      	ldr	r3, [pc, #496]	; (964c <MiWiPROTasks+0x1288>)
    945a:	223a      	movs	r2, #58	; 0x3a
    945c:	18ba      	adds	r2, r7, r2
    945e:	7812      	ldrb	r2, [r2, #0]
    9460:	701a      	strb	r2, [r3, #0]
    9462:	e00c      	b.n	947e <MiWiPROTasks+0x10ba>
                                                                    associateStatus = ASSOCIATION_PAN_FULL;
    9464:	2339      	movs	r3, #57	; 0x39
    9466:	18fb      	adds	r3, r7, r3
    9468:	2201      	movs	r2, #1
    946a:	701a      	strb	r2, [r3, #0]
    946c:	e007      	b.n	947e <MiWiPROTasks+0x10ba>
                                                        tempShortAddress.v[0] = 0;
    946e:	4b77      	ldr	r3, [pc, #476]	; (964c <MiWiPROTasks+0x1288>)
    9470:	2200      	movs	r2, #0
    9472:	701a      	strb	r2, [r3, #0]
                                                        tempShortAddress.v[1] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2+MY_ADDRESS_LENGTH];
    9474:	4b70      	ldr	r3, [pc, #448]	; (9638 <MiWiPROTasks+0x1274>)
    9476:	689b      	ldr	r3, [r3, #8]
    9478:	7d5a      	ldrb	r2, [r3, #21]
    947a:	4b74      	ldr	r3, [pc, #464]	; (964c <MiWiPROTasks+0x1288>)
    947c:	705a      	strb	r2, [r3, #1]
                                                    tempPANID.Val = myPANID.Val;
    947e:	4b75      	ldr	r3, [pc, #468]	; (9654 <MiWiPROTasks+0x1290>)
    9480:	881a      	ldrh	r2, [r3, #0]
    9482:	4b75      	ldr	r3, [pc, #468]	; (9658 <MiWiPROTasks+0x1294>)
    9484:	801a      	strh	r2, [r3, #0]
                                                    handle = AddNodeToNetworkTable();
    9486:	232f      	movs	r3, #47	; 0x2f
    9488:	18fc      	adds	r4, r7, r3
    948a:	4b74      	ldr	r3, [pc, #464]	; (965c <MiWiPROTasks+0x1298>)
    948c:	4798      	blx	r3
    948e:	0003      	movs	r3, r0
    9490:	7023      	strb	r3, [r4, #0]
                                                    TxBuffer[0] = MAC_COMMAND_ASSOCIATION_RESPONSE;
    9492:	4b73      	ldr	r3, [pc, #460]	; (9660 <MiWiPROTasks+0x129c>)
    9494:	2202      	movs	r2, #2
    9496:	701a      	strb	r2, [r3, #0]
                                                    TxBuffer[1] = tempShortAddress.v[0];
    9498:	4b6c      	ldr	r3, [pc, #432]	; (964c <MiWiPROTasks+0x1288>)
    949a:	781a      	ldrb	r2, [r3, #0]
    949c:	4b70      	ldr	r3, [pc, #448]	; (9660 <MiWiPROTasks+0x129c>)
    949e:	705a      	strb	r2, [r3, #1]
                                                    TxBuffer[2] = tempShortAddress.v[1];
    94a0:	4b6a      	ldr	r3, [pc, #424]	; (964c <MiWiPROTasks+0x1288>)
    94a2:	785a      	ldrb	r2, [r3, #1]
    94a4:	4b6e      	ldr	r3, [pc, #440]	; (9660 <MiWiPROTasks+0x129c>)
    94a6:	709a      	strb	r2, [r3, #2]
                                                    TxBuffer[3] = associateStatus;
    94a8:	4b6d      	ldr	r3, [pc, #436]	; (9660 <MiWiPROTasks+0x129c>)
    94aa:	2239      	movs	r2, #57	; 0x39
    94ac:	18ba      	adds	r2, r7, r2
    94ae:	7812      	ldrb	r2, [r2, #0]
    94b0:	70da      	strb	r2, [r3, #3]
                                                        for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    94b2:	233f      	movs	r3, #63	; 0x3f
    94b4:	18fb      	adds	r3, r7, r3
    94b6:	2200      	movs	r2, #0
    94b8:	701a      	strb	r2, [r3, #0]
    94ba:	e011      	b.n	94e0 <MiWiPROTasks+0x111c>
                                                            TxBuffer[4+i] = AdditionalNodeID[i];
    94bc:	233f      	movs	r3, #63	; 0x3f
    94be:	18fb      	adds	r3, r7, r3
    94c0:	781b      	ldrb	r3, [r3, #0]
    94c2:	3304      	adds	r3, #4
    94c4:	223f      	movs	r2, #63	; 0x3f
    94c6:	18ba      	adds	r2, r7, r2
    94c8:	7812      	ldrb	r2, [r2, #0]
    94ca:	4966      	ldr	r1, [pc, #408]	; (9664 <MiWiPROTasks+0x12a0>)
    94cc:	5c89      	ldrb	r1, [r1, r2]
    94ce:	4a64      	ldr	r2, [pc, #400]	; (9660 <MiWiPROTasks+0x129c>)
    94d0:	54d1      	strb	r1, [r2, r3]
                                                        for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    94d2:	233f      	movs	r3, #63	; 0x3f
    94d4:	18fb      	adds	r3, r7, r3
    94d6:	781a      	ldrb	r2, [r3, #0]
    94d8:	233f      	movs	r3, #63	; 0x3f
    94da:	18fb      	adds	r3, r7, r3
    94dc:	3201      	adds	r2, #1
    94de:	701a      	strb	r2, [r3, #0]
    94e0:	233f      	movs	r3, #63	; 0x3f
    94e2:	18fb      	adds	r3, r7, r3
    94e4:	781b      	ldrb	r3, [r3, #0]
    94e6:	2b01      	cmp	r3, #1
    94e8:	d9e8      	bls.n	94bc <MiWiPROTasks+0x10f8>
                                                        TxBuffer[4+ADDITIONAL_NODE_ID_SIZE] = myShortAddress.v[1];
    94ea:	4b57      	ldr	r3, [pc, #348]	; (9648 <MiWiPROTasks+0x1284>)
    94ec:	785a      	ldrb	r2, [r3, #1]
    94ee:	4b5c      	ldr	r3, [pc, #368]	; (9660 <MiWiPROTasks+0x129c>)
    94f0:	719a      	strb	r2, [r3, #6]
                                                        TxData = 5 + ADDITIONAL_NODE_ID_SIZE;
    94f2:	4b5d      	ldr	r3, [pc, #372]	; (9668 <MiWiPROTasks+0x12a4>)
    94f4:	2207      	movs	r2, #7
    94f6:	701a      	strb	r2, [r3, #0]
                                                        SendMACPacket(ConnectionTable[handle].Address, PACKET_TYPE_COMMAND);
    94f8:	232f      	movs	r3, #47	; 0x2f
    94fa:	18fb      	adds	r3, r7, r3
    94fc:	781b      	ldrb	r3, [r3, #0]
    94fe:	011a      	lsls	r2, r3, #4
    9500:	4b45      	ldr	r3, [pc, #276]	; (9618 <MiWiPROTasks+0x1254>)
    9502:	18d3      	adds	r3, r2, r3
    9504:	3304      	adds	r3, #4
    9506:	2101      	movs	r1, #1
    9508:	0018      	movs	r0, r3
    950a:	4b58      	ldr	r3, [pc, #352]	; (966c <MiWiPROTasks+0x12a8>)
    950c:	4798      	blx	r3
                                                        if( handle < CONNECTION_SIZE )
    950e:	232f      	movs	r3, #47	; 0x2f
    9510:	18fb      	adds	r3, r7, r3
    9512:	781b      	ldrb	r3, [r3, #0]
    9514:	2b0f      	cmp	r3, #15
    9516:	d901      	bls.n	951c <MiWiPROTasks+0x1158>
    9518:	f000 fcf8 	bl	9f0c <MiWiPROTasks+0x1b48>
                                                            nvmPutConnectionTableIndex(&(ConnectionTable[handle]), handle);
    951c:	232f      	movs	r3, #47	; 0x2f
    951e:	18fb      	adds	r3, r7, r3
    9520:	781b      	ldrb	r3, [r3, #0]
    9522:	011a      	lsls	r2, r3, #4
    9524:	4b3c      	ldr	r3, [pc, #240]	; (9618 <MiWiPROTasks+0x1254>)
    9526:	18d0      	adds	r0, r2, r3
    9528:	232f      	movs	r3, #47	; 0x2f
    952a:	18fb      	adds	r3, r7, r3
    952c:	781b      	ldrb	r3, [r3, #0]
    952e:	b29b      	uxth	r3, r3
    9530:	011b      	lsls	r3, r3, #4
    9532:	b29a      	uxth	r2, r3
    9534:	4b3a      	ldr	r3, [pc, #232]	; (9620 <MiWiPROTasks+0x125c>)
    9536:	881b      	ldrh	r3, [r3, #0]
    9538:	18d3      	adds	r3, r2, r3
    953a:	b29b      	uxth	r3, r3
    953c:	2210      	movs	r2, #16
    953e:	0019      	movs	r1, r3
    9540:	4b38      	ldr	r3, [pc, #224]	; (9624 <MiWiPROTasks+0x1260>)
    9542:	4798      	blx	r3
                                                break;
    9544:	f000 fce2 	bl	9f0c <MiWiPROTasks+0x1b48>
                                                    MiApp_FlushTx();
    9548:	4b47      	ldr	r3, [pc, #284]	; (9668 <MiWiPROTasks+0x12a4>)
    954a:	220b      	movs	r2, #11
    954c:	701a      	strb	r2, [r3, #0]
                                                    MiApp_WriteData(MIWI_PRO_STACK_REPORT_TYPE);
    954e:	4b46      	ldr	r3, [pc, #280]	; (9668 <MiWiPROTasks+0x12a4>)
    9550:	781b      	ldrb	r3, [r3, #0]
    9552:	1c5a      	adds	r2, r3, #1
    9554:	b2d1      	uxtb	r1, r2
    9556:	4a44      	ldr	r2, [pc, #272]	; (9668 <MiWiPROTasks+0x12a4>)
    9558:	7011      	strb	r1, [r2, #0]
    955a:	001a      	movs	r2, r3
    955c:	4b40      	ldr	r3, [pc, #256]	; (9660 <MiWiPROTasks+0x129c>)
    955e:	2100      	movs	r1, #0
    9560:	5499      	strb	r1, [r3, r2]
                                                    MiApp_WriteData(FAMILY_TREE_REPORT);
    9562:	4b41      	ldr	r3, [pc, #260]	; (9668 <MiWiPROTasks+0x12a4>)
    9564:	781b      	ldrb	r3, [r3, #0]
    9566:	1c5a      	adds	r2, r3, #1
    9568:	b2d1      	uxtb	r1, r2
    956a:	4a3f      	ldr	r2, [pc, #252]	; (9668 <MiWiPROTasks+0x12a4>)
    956c:	7011      	strb	r1, [r2, #0]
    956e:	001a      	movs	r2, r3
    9570:	4b3b      	ldr	r3, [pc, #236]	; (9660 <MiWiPROTasks+0x129c>)
    9572:	21a3      	movs	r1, #163	; 0xa3
    9574:	5499      	strb	r1, [r3, r2]
                                                    for(i = 0; i < NUM_COORDINATOR; i++)
    9576:	233f      	movs	r3, #63	; 0x3f
    9578:	18fb      	adds	r3, r7, r3
    957a:	2200      	movs	r2, #0
    957c:	701a      	strb	r2, [r3, #0]
    957e:	e014      	b.n	95aa <MiWiPROTasks+0x11e6>
                                                        MiApp_WriteData(FamilyTree[i]);
    9580:	4b39      	ldr	r3, [pc, #228]	; (9668 <MiWiPROTasks+0x12a4>)
    9582:	781b      	ldrb	r3, [r3, #0]
    9584:	1c5a      	adds	r2, r3, #1
    9586:	b2d1      	uxtb	r1, r2
    9588:	4a37      	ldr	r2, [pc, #220]	; (9668 <MiWiPROTasks+0x12a4>)
    958a:	7011      	strb	r1, [r2, #0]
    958c:	0019      	movs	r1, r3
    958e:	233f      	movs	r3, #63	; 0x3f
    9590:	18fb      	adds	r3, r7, r3
    9592:	781b      	ldrb	r3, [r3, #0]
    9594:	4a21      	ldr	r2, [pc, #132]	; (961c <MiWiPROTasks+0x1258>)
    9596:	5cd2      	ldrb	r2, [r2, r3]
    9598:	4b31      	ldr	r3, [pc, #196]	; (9660 <MiWiPROTasks+0x129c>)
    959a:	545a      	strb	r2, [r3, r1]
                                                    for(i = 0; i < NUM_COORDINATOR; i++)
    959c:	233f      	movs	r3, #63	; 0x3f
    959e:	18fb      	adds	r3, r7, r3
    95a0:	781a      	ldrb	r2, [r3, #0]
    95a2:	233f      	movs	r3, #63	; 0x3f
    95a4:	18fb      	adds	r3, r7, r3
    95a6:	3201      	adds	r2, #1
    95a8:	701a      	strb	r2, [r3, #0]
    95aa:	233f      	movs	r3, #63	; 0x3f
    95ac:	18fb      	adds	r3, r7, r3
    95ae:	781b      	ldrb	r3, [r3, #0]
    95b0:	2b00      	cmp	r3, #0
    95b2:	d0e5      	beq.n	9580 <MiWiPROTasks+0x11bc>
                                                    UnicastShortAddress(sourceShortAddress.v);
    95b4:	2310      	movs	r3, #16
    95b6:	18fb      	adds	r3, r7, r3
    95b8:	0018      	movs	r0, r3
    95ba:	4b2d      	ldr	r3, [pc, #180]	; (9670 <MiWiPROTasks+0x12ac>)
    95bc:	4798      	blx	r3
                                                break;
    95be:	f000 fcb4 	bl	9f2a <MiWiPROTasks+0x1b66>
                                                    for(i = 0; i < NUM_COORDINATOR; i++)
    95c2:	233f      	movs	r3, #63	; 0x3f
    95c4:	18fb      	adds	r3, r7, r3
    95c6:	2200      	movs	r2, #0
    95c8:	701a      	strb	r2, [r3, #0]
    95ca:	e013      	b.n	95f4 <MiWiPROTasks+0x1230>
                                                        FamilyTree[i] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2+i];
    95cc:	233f      	movs	r3, #63	; 0x3f
    95ce:	18fb      	adds	r3, r7, r3
    95d0:	781a      	ldrb	r2, [r3, #0]
    95d2:	4b19      	ldr	r3, [pc, #100]	; (9638 <MiWiPROTasks+0x1274>)
    95d4:	689b      	ldr	r3, [r3, #8]
    95d6:	213f      	movs	r1, #63	; 0x3f
    95d8:	1879      	adds	r1, r7, r1
    95da:	7809      	ldrb	r1, [r1, #0]
    95dc:	310d      	adds	r1, #13
    95de:	185b      	adds	r3, r3, r1
    95e0:	7819      	ldrb	r1, [r3, #0]
    95e2:	4b0e      	ldr	r3, [pc, #56]	; (961c <MiWiPROTasks+0x1258>)
    95e4:	5499      	strb	r1, [r3, r2]
                                                    for(i = 0; i < NUM_COORDINATOR; i++)
    95e6:	233f      	movs	r3, #63	; 0x3f
    95e8:	18fb      	adds	r3, r7, r3
    95ea:	781a      	ldrb	r2, [r3, #0]
    95ec:	233f      	movs	r3, #63	; 0x3f
    95ee:	18fb      	adds	r3, r7, r3
    95f0:	3201      	adds	r2, #1
    95f2:	701a      	strb	r2, [r3, #0]
    95f4:	233f      	movs	r3, #63	; 0x3f
    95f6:	18fb      	adds	r3, r7, r3
    95f8:	781b      	ldrb	r3, [r3, #0]
    95fa:	2b00      	cmp	r3, #0
    95fc:	d0e6      	beq.n	95cc <MiWiPROTasks+0x1208>
                                                    backgroundTaskTick = MiWi_TickGet();
    95fe:	4b0b      	ldr	r3, [pc, #44]	; (962c <MiWiPROTasks+0x1268>)
    9600:	4798      	blx	r3
    9602:	0003      	movs	r3, r0
    9604:	001a      	movs	r2, r3
    9606:	4b0a      	ldr	r3, [pc, #40]	; (9630 <MiWiPROTasks+0x126c>)
    9608:	601a      	str	r2, [r3, #0]
                                                        MiWiPRONVMStatus.bits.saveFamilyTree = 1;
    960a:	4b1a      	ldr	r3, [pc, #104]	; (9674 <MiWiPROTasks+0x12b0>)
    960c:	781a      	ldrb	r2, [r3, #0]
    960e:	2101      	movs	r1, #1
    9610:	430a      	orrs	r2, r1
    9612:	701a      	strb	r2, [r3, #0]
                                                break;
    9614:	f000 fc89 	bl	9f2a <MiWiPROTasks+0x1b66>
    9618:	20001150 	.word	0x20001150
    961c:	20001518 	.word	0x20001518
    9620:	2000159a 	.word	0x2000159a
    9624:	0000e9c1 	.word	0x0000e9c1
    9628:	200012c4 	.word	0x200012c4
    962c:	0000ebad 	.word	0x0000ebad
    9630:	2000113c 	.word	0x2000113c
    9634:	fffff800 	.word	0xfffff800
    9638:	2000126c 	.word	0x2000126c
    963c:	20001288 	.word	0x20001288
    9640:	200012c8 	.word	0x200012c8
    9644:	0000cd35 	.word	0x0000cd35
    9648:	20001140 	.word	0x20001140
    964c:	200012e0 	.word	0x200012e0
    9650:	0000cb71 	.word	0x0000cb71
    9654:	20001290 	.word	0x20001290
    9658:	200012c0 	.word	0x200012c0
    965c:	0000cddd 	.word	0x0000cddd
    9660:	200012e4 	.word	0x200012e4
    9664:	20000034 	.word	0x20000034
    9668:	200012dc 	.word	0x200012dc
    966c:	0000c52d 	.word	0x0000c52d
    9670:	0000db3d 	.word	0x0000db3d
    9674:	200013c4 	.word	0x200013c4
                                                    if( MACRxPacket.RSSIValue > COMM_RSSI_THRESHOLD )
    9678:	4bc6      	ldr	r3, [pc, #792]	; (9994 <MiWiPROTasks+0x15d0>)
    967a:	220e      	movs	r2, #14
    967c:	5e9b      	ldrsh	r3, [r3, r2]
    967e:	2b01      	cmp	r3, #1
    9680:	dc01      	bgt.n	9686 <MiWiPROTasks+0x12c2>
    9682:	f000 fc45 	bl	9f10 <MiWiPROTasks+0x1b4c>
                                                            uint8_t index = MIWI_PRO_HEADER_LEN+3;
    9686:	232e      	movs	r3, #46	; 0x2e
    9688:	18fb      	adds	r3, r7, r3
    968a:	220e      	movs	r2, #14
    968c:	701a      	strb	r2, [r3, #0]
                                                        uint8_t initiator = MACRxPacket.Payload[index];
    968e:	4bc1      	ldr	r3, [pc, #772]	; (9994 <MiWiPROTasks+0x15d0>)
    9690:	689a      	ldr	r2, [r3, #8]
    9692:	232e      	movs	r3, #46	; 0x2e
    9694:	18fb      	adds	r3, r7, r3
    9696:	781b      	ldrb	r3, [r3, #0]
    9698:	18d2      	adds	r2, r2, r3
    969a:	232d      	movs	r3, #45	; 0x2d
    969c:	18fb      	adds	r3, r7, r3
    969e:	7812      	ldrb	r2, [r2, #0]
    96a0:	701a      	strb	r2, [r3, #0]
                                                        for(i = 0; i < NUM_COORDINATOR/8; i++)
    96a2:	233f      	movs	r3, #63	; 0x3f
    96a4:	18fb      	adds	r3, r7, r3
    96a6:	2200      	movs	r2, #0
    96a8:	701a      	strb	r2, [r3, #0]
    96aa:	46c0      	nop			; (mov r8, r8)
                                                                if( (RoutingTable[sourceShortAddress.v[1]/8] & (0x01 << (MACRxPacket.Payload[index-1]%8))) == 0 )
    96ac:	2310      	movs	r3, #16
    96ae:	18fb      	adds	r3, r7, r3
    96b0:	785b      	ldrb	r3, [r3, #1]
    96b2:	08db      	lsrs	r3, r3, #3
    96b4:	b2db      	uxtb	r3, r3
    96b6:	001a      	movs	r2, r3
    96b8:	4bb7      	ldr	r3, [pc, #732]	; (9998 <MiWiPROTasks+0x15d4>)
    96ba:	5c9b      	ldrb	r3, [r3, r2]
    96bc:	0019      	movs	r1, r3
    96be:	4bb5      	ldr	r3, [pc, #724]	; (9994 <MiWiPROTasks+0x15d0>)
    96c0:	689a      	ldr	r2, [r3, #8]
    96c2:	232e      	movs	r3, #46	; 0x2e
    96c4:	18fb      	adds	r3, r7, r3
    96c6:	781b      	ldrb	r3, [r3, #0]
    96c8:	3b01      	subs	r3, #1
    96ca:	18d3      	adds	r3, r2, r3
    96cc:	781b      	ldrb	r3, [r3, #0]
    96ce:	001a      	movs	r2, r3
    96d0:	2307      	movs	r3, #7
    96d2:	4013      	ands	r3, r2
    96d4:	4119      	asrs	r1, r3
    96d6:	000b      	movs	r3, r1
    96d8:	2201      	movs	r2, #1
    96da:	4013      	ands	r3, r2
    96dc:	d122      	bne.n	9724 <MiWiPROTasks+0x1360>
                                                                    RoutingTable[sourceShortAddress.v[1]/8] |= (0x01 << (MACRxPacket.Payload[index-1]%8));
    96de:	2310      	movs	r3, #16
    96e0:	18fb      	adds	r3, r7, r3
    96e2:	785b      	ldrb	r3, [r3, #1]
    96e4:	08db      	lsrs	r3, r3, #3
    96e6:	b2db      	uxtb	r3, r3
    96e8:	0018      	movs	r0, r3
    96ea:	001a      	movs	r2, r3
    96ec:	4baa      	ldr	r3, [pc, #680]	; (9998 <MiWiPROTasks+0x15d4>)
    96ee:	5c9b      	ldrb	r3, [r3, r2]
    96f0:	b25a      	sxtb	r2, r3
    96f2:	4ba8      	ldr	r3, [pc, #672]	; (9994 <MiWiPROTasks+0x15d0>)
    96f4:	6899      	ldr	r1, [r3, #8]
    96f6:	232e      	movs	r3, #46	; 0x2e
    96f8:	18fb      	adds	r3, r7, r3
    96fa:	781b      	ldrb	r3, [r3, #0]
    96fc:	3b01      	subs	r3, #1
    96fe:	18cb      	adds	r3, r1, r3
    9700:	781b      	ldrb	r3, [r3, #0]
    9702:	0019      	movs	r1, r3
    9704:	2307      	movs	r3, #7
    9706:	400b      	ands	r3, r1
    9708:	2101      	movs	r1, #1
    970a:	4099      	lsls	r1, r3
    970c:	000b      	movs	r3, r1
    970e:	b25b      	sxtb	r3, r3
    9710:	4313      	orrs	r3, r2
    9712:	b25b      	sxtb	r3, r3
    9714:	b2da      	uxtb	r2, r3
    9716:	4ba0      	ldr	r3, [pc, #640]	; (9998 <MiWiPROTasks+0x15d4>)
    9718:	541a      	strb	r2, [r3, r0]
                                                                    MiWiPRONVMStatus.bits.saveRoutingTable = 1;
    971a:	4ba0      	ldr	r3, [pc, #640]	; (999c <MiWiPROTasks+0x15d8>)
    971c:	781a      	ldrb	r2, [r3, #0]
    971e:	2102      	movs	r1, #2
    9720:	430a      	orrs	r2, r1
    9722:	701a      	strb	r2, [r3, #0]
                                                            for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    9724:	233f      	movs	r3, #63	; 0x3f
    9726:	18fb      	adds	r3, r7, r3
    9728:	2200      	movs	r2, #0
    972a:	701a      	strb	r2, [r3, #0]
    972c:	e012      	b.n	9754 <MiWiPROTasks+0x1390>
                                                                tempLongAddress[i] = MACRxPacket.SourceAddress[i];
    972e:	233f      	movs	r3, #63	; 0x3f
    9730:	18fb      	adds	r3, r7, r3
    9732:	781a      	ldrb	r2, [r3, #0]
    9734:	4b97      	ldr	r3, [pc, #604]	; (9994 <MiWiPROTasks+0x15d0>)
    9736:	6859      	ldr	r1, [r3, #4]
    9738:	233f      	movs	r3, #63	; 0x3f
    973a:	18fb      	adds	r3, r7, r3
    973c:	781b      	ldrb	r3, [r3, #0]
    973e:	18cb      	adds	r3, r1, r3
    9740:	7819      	ldrb	r1, [r3, #0]
    9742:	4b97      	ldr	r3, [pc, #604]	; (99a0 <MiWiPROTasks+0x15dc>)
    9744:	5499      	strb	r1, [r3, r2]
                                                            for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    9746:	233f      	movs	r3, #63	; 0x3f
    9748:	18fb      	adds	r3, r7, r3
    974a:	781a      	ldrb	r2, [r3, #0]
    974c:	233f      	movs	r3, #63	; 0x3f
    974e:	18fb      	adds	r3, r7, r3
    9750:	3201      	adds	r2, #1
    9752:	701a      	strb	r2, [r3, #0]
    9754:	233f      	movs	r3, #63	; 0x3f
    9756:	18fb      	adds	r3, r7, r3
    9758:	781b      	ldrb	r3, [r3, #0]
    975a:	2b07      	cmp	r3, #7
    975c:	d9e7      	bls.n	972e <MiWiPROTasks+0x136a>
                                                            tempShortAddress.v[0] = 0;
    975e:	4b91      	ldr	r3, [pc, #580]	; (99a4 <MiWiPROTasks+0x15e0>)
    9760:	2200      	movs	r2, #0
    9762:	701a      	strb	r2, [r3, #0]
                                                            tempShortAddress.v[1] = MACRxPacket.Payload[index-1];
    9764:	4b8b      	ldr	r3, [pc, #556]	; (9994 <MiWiPROTasks+0x15d0>)
    9766:	689a      	ldr	r2, [r3, #8]
    9768:	232e      	movs	r3, #46	; 0x2e
    976a:	18fb      	adds	r3, r7, r3
    976c:	781b      	ldrb	r3, [r3, #0]
    976e:	3b01      	subs	r3, #1
    9770:	18d3      	adds	r3, r2, r3
    9772:	781a      	ldrb	r2, [r3, #0]
    9774:	4b8b      	ldr	r3, [pc, #556]	; (99a4 <MiWiPROTasks+0x15e0>)
    9776:	705a      	strb	r2, [r3, #1]
                                                            tempNodeStatus.Val = 0x8F;
    9778:	4b8b      	ldr	r3, [pc, #556]	; (99a8 <MiWiPROTasks+0x15e4>)
    977a:	228f      	movs	r2, #143	; 0x8f
    977c:	701a      	strb	r2, [r3, #0]
                                                            tempPANID.Val = myPANID.Val;
    977e:	4b8b      	ldr	r3, [pc, #556]	; (99ac <MiWiPROTasks+0x15e8>)
    9780:	881a      	ldrh	r2, [r3, #0]
    9782:	4b8b      	ldr	r3, [pc, #556]	; (99b0 <MiWiPROTasks+0x15ec>)
    9784:	801a      	strh	r2, [r3, #0]
                                                            if( (i = SearchForLongAddress()) < CONNECTION_SIZE )
    9786:	233f      	movs	r3, #63	; 0x3f
    9788:	18fc      	adds	r4, r7, r3
    978a:	4b8a      	ldr	r3, [pc, #552]	; (99b4 <MiWiPROTasks+0x15f0>)
    978c:	4798      	blx	r3
    978e:	0003      	movs	r3, r0
    9790:	7023      	strb	r3, [r4, #0]
    9792:	233f      	movs	r3, #63	; 0x3f
    9794:	18fb      	adds	r3, r7, r3
    9796:	781b      	ldrb	r3, [r3, #0]
    9798:	2b0f      	cmp	r3, #15
    979a:	d834      	bhi.n	9806 <MiWiPROTasks+0x1442>
                                                                if( ConnectionTable[i].AltAddress.Val != tempShortAddress.Val )
    979c:	233f      	movs	r3, #63	; 0x3f
    979e:	18fb      	adds	r3, r7, r3
    97a0:	781b      	ldrb	r3, [r3, #0]
    97a2:	4a85      	ldr	r2, [pc, #532]	; (99b8 <MiWiPROTasks+0x15f4>)
    97a4:	011b      	lsls	r3, r3, #4
    97a6:	18d3      	adds	r3, r2, r3
    97a8:	3302      	adds	r3, #2
    97aa:	881a      	ldrh	r2, [r3, #0]
    97ac:	4b7d      	ldr	r3, [pc, #500]	; (99a4 <MiWiPROTasks+0x15e0>)
    97ae:	881b      	ldrh	r3, [r3, #0]
    97b0:	429a      	cmp	r2, r3
    97b2:	d01b      	beq.n	97ec <MiWiPROTasks+0x1428>
                                                                    ConnectionTable[i].AltAddress.Val = tempShortAddress.Val;
    97b4:	233f      	movs	r3, #63	; 0x3f
    97b6:	18fb      	adds	r3, r7, r3
    97b8:	781b      	ldrb	r3, [r3, #0]
    97ba:	4a7a      	ldr	r2, [pc, #488]	; (99a4 <MiWiPROTasks+0x15e0>)
    97bc:	8811      	ldrh	r1, [r2, #0]
    97be:	4a7e      	ldr	r2, [pc, #504]	; (99b8 <MiWiPROTasks+0x15f4>)
    97c0:	011b      	lsls	r3, r3, #4
    97c2:	18d3      	adds	r3, r2, r3
    97c4:	3302      	adds	r3, #2
    97c6:	1c0a      	adds	r2, r1, #0
    97c8:	801a      	strh	r2, [r3, #0]
                                                                    ConnectionTable[i].status.bits.shortAddressValid = 1;
    97ca:	233f      	movs	r3, #63	; 0x3f
    97cc:	18fb      	adds	r3, r7, r3
    97ce:	781b      	ldrb	r3, [r3, #0]
    97d0:	4a79      	ldr	r2, [pc, #484]	; (99b8 <MiWiPROTasks+0x15f4>)
    97d2:	2108      	movs	r1, #8
    97d4:	011b      	lsls	r3, r3, #4
    97d6:	18d3      	adds	r3, r2, r3
    97d8:	185b      	adds	r3, r3, r1
    97da:	791a      	ldrb	r2, [r3, #4]
    97dc:	2108      	movs	r1, #8
    97de:	430a      	orrs	r2, r1
    97e0:	711a      	strb	r2, [r3, #4]
                                                                    MiWiPRONVMStatus.bits.saveConnectionTable = 1;
    97e2:	4b6e      	ldr	r3, [pc, #440]	; (999c <MiWiPROTasks+0x15d8>)
    97e4:	781a      	ldrb	r2, [r3, #0]
    97e6:	2108      	movs	r1, #8
    97e8:	430a      	orrs	r2, r1
    97ea:	701a      	strb	r2, [r3, #0]
                                                                ConnectionTable[i].status.bits.directConnection = 1;
    97ec:	233f      	movs	r3, #63	; 0x3f
    97ee:	18fb      	adds	r3, r7, r3
    97f0:	781b      	ldrb	r3, [r3, #0]
    97f2:	4a71      	ldr	r2, [pc, #452]	; (99b8 <MiWiPROTasks+0x15f4>)
    97f4:	2108      	movs	r1, #8
    97f6:	011b      	lsls	r3, r3, #4
    97f8:	18d3      	adds	r3, r2, r3
    97fa:	185b      	adds	r3, r3, r1
    97fc:	791a      	ldrb	r2, [r3, #4]
    97fe:	2102      	movs	r1, #2
    9800:	430a      	orrs	r2, r1
    9802:	711a      	strb	r2, [r3, #4]
    9804:	e009      	b.n	981a <MiWiPROTasks+0x1456>
                                                                if( AddNodeToNetworkTable() < CONNECTION_SIZE )
    9806:	4b6d      	ldr	r3, [pc, #436]	; (99bc <MiWiPROTasks+0x15f8>)
    9808:	4798      	blx	r3
    980a:	0003      	movs	r3, r0
    980c:	2b0f      	cmp	r3, #15
    980e:	d804      	bhi.n	981a <MiWiPROTasks+0x1456>
                                                                    MiWiPRONVMStatus.bits.saveConnectionTable = 1;
    9810:	4b62      	ldr	r3, [pc, #392]	; (999c <MiWiPROTasks+0x15d8>)
    9812:	781a      	ldrb	r2, [r3, #0]
    9814:	2108      	movs	r1, #8
    9816:	430a      	orrs	r2, r1
    9818:	701a      	strb	r2, [r3, #0]
                                                            if( initiator == MACRxPacket.Payload[index-1] )
    981a:	4b5e      	ldr	r3, [pc, #376]	; (9994 <MiWiPROTasks+0x15d0>)
    981c:	689a      	ldr	r2, [r3, #8]
    981e:	232e      	movs	r3, #46	; 0x2e
    9820:	18fb      	adds	r3, r7, r3
    9822:	781b      	ldrb	r3, [r3, #0]
    9824:	3b01      	subs	r3, #1
    9826:	18d3      	adds	r3, r2, r3
    9828:	781b      	ldrb	r3, [r3, #0]
    982a:	222d      	movs	r2, #45	; 0x2d
    982c:	18ba      	adds	r2, r7, r2
    982e:	7812      	ldrb	r2, [r2, #0]
    9830:	429a      	cmp	r2, r3
    9832:	d000      	beq.n	9836 <MiWiPROTasks+0x1472>
    9834:	e089      	b.n	994a <MiWiPROTasks+0x1586>
                                                            if( MiWiPROStatus.bits.COMM_RANDOM_SEND )
    9836:	4b62      	ldr	r3, [pc, #392]	; (99c0 <MiWiPROTasks+0x15fc>)
    9838:	781b      	ldrb	r3, [r3, #0]
    983a:	2201      	movs	r2, #1
    983c:	4013      	ands	r3, r2
    983e:	b2db      	uxtb	r3, r3
    9840:	2b00      	cmp	r3, #0
    9842:	d00c      	beq.n	985e <MiWiPROTasks+0x149a>
                                                                MiMAC_SendPacket(RandomSendInfo.MTP, RandomSendInfo.RandomSendTxBuffer, RandomSendInfo.RandomSendTxData);
    9844:	4b5f      	ldr	r3, [pc, #380]	; (99c4 <MiWiPROTasks+0x1600>)
    9846:	7b5b      	ldrb	r3, [r3, #13]
    9848:	4a5f      	ldr	r2, [pc, #380]	; (99c8 <MiWiPROTasks+0x1604>)
    984a:	495e      	ldr	r1, [pc, #376]	; (99c4 <MiWiPROTasks+0x1600>)
    984c:	6848      	ldr	r0, [r1, #4]
    984e:	6889      	ldr	r1, [r1, #8]
    9850:	4c5e      	ldr	r4, [pc, #376]	; (99cc <MiWiPROTasks+0x1608>)
    9852:	47a0      	blx	r4
                                                                MiWiPROStatus.bits.COMM_RANDOM_SEND = 0;    
    9854:	4b5a      	ldr	r3, [pc, #360]	; (99c0 <MiWiPROTasks+0x15fc>)
    9856:	781a      	ldrb	r2, [r3, #0]
    9858:	2101      	movs	r1, #1
    985a:	438a      	bics	r2, r1
    985c:	701a      	strb	r2, [r3, #0]
                                                            RandomSendInfo.RandomSendTxBuffer[0] = 1;
    985e:	4b59      	ldr	r3, [pc, #356]	; (99c4 <MiWiPROTasks+0x1600>)
    9860:	2201      	movs	r2, #1
    9862:	739a      	strb	r2, [r3, #14]
                                                            RandomSendInfo.RandomSendTxBuffer[1] = 0x02;
    9864:	4b57      	ldr	r3, [pc, #348]	; (99c4 <MiWiPROTasks+0x1600>)
    9866:	2202      	movs	r2, #2
    9868:	73da      	strb	r2, [r3, #15]
                                                            RandomSendInfo.RandomSendTxBuffer[2] = myPANID.v[0];
    986a:	4b50      	ldr	r3, [pc, #320]	; (99ac <MiWiPROTasks+0x15e8>)
    986c:	781a      	ldrb	r2, [r3, #0]
    986e:	4b55      	ldr	r3, [pc, #340]	; (99c4 <MiWiPROTasks+0x1600>)
    9870:	741a      	strb	r2, [r3, #16]
                                                            RandomSendInfo.RandomSendTxBuffer[3] = myPANID.v[1];
    9872:	4b4e      	ldr	r3, [pc, #312]	; (99ac <MiWiPROTasks+0x15e8>)
    9874:	785a      	ldrb	r2, [r3, #1]
    9876:	4b53      	ldr	r3, [pc, #332]	; (99c4 <MiWiPROTasks+0x1600>)
    9878:	745a      	strb	r2, [r3, #17]
                                                            RandomSendInfo.RandomSendTxBuffer[4] = 0xFD; 
    987a:	4b52      	ldr	r3, [pc, #328]	; (99c4 <MiWiPROTasks+0x1600>)
    987c:	22fd      	movs	r2, #253	; 0xfd
    987e:	749a      	strb	r2, [r3, #18]
                                                            RandomSendInfo.RandomSendTxBuffer[5] = 0xFF;
    9880:	4b50      	ldr	r3, [pc, #320]	; (99c4 <MiWiPROTasks+0x1600>)
    9882:	22ff      	movs	r2, #255	; 0xff
    9884:	74da      	strb	r2, [r3, #19]
                                                            RandomSendInfo.RandomSendTxBuffer[6] = myPANID.v[0];
    9886:	4b49      	ldr	r3, [pc, #292]	; (99ac <MiWiPROTasks+0x15e8>)
    9888:	781a      	ldrb	r2, [r3, #0]
    988a:	4b4e      	ldr	r3, [pc, #312]	; (99c4 <MiWiPROTasks+0x1600>)
    988c:	751a      	strb	r2, [r3, #20]
                                                            RandomSendInfo.RandomSendTxBuffer[7] = myPANID.v[1];
    988e:	4b47      	ldr	r3, [pc, #284]	; (99ac <MiWiPROTasks+0x15e8>)
    9890:	785a      	ldrb	r2, [r3, #1]
    9892:	4b4c      	ldr	r3, [pc, #304]	; (99c4 <MiWiPROTasks+0x1600>)
    9894:	755a      	strb	r2, [r3, #21]
                                                            RandomSendInfo.RandomSendTxBuffer[8] = myShortAddress.v[0];
    9896:	4b4e      	ldr	r3, [pc, #312]	; (99d0 <MiWiPROTasks+0x160c>)
    9898:	781a      	ldrb	r2, [r3, #0]
    989a:	4b4a      	ldr	r3, [pc, #296]	; (99c4 <MiWiPROTasks+0x1600>)
    989c:	759a      	strb	r2, [r3, #22]
                                                            RandomSendInfo.RandomSendTxBuffer[9] = myShortAddress.v[1];
    989e:	4b4c      	ldr	r3, [pc, #304]	; (99d0 <MiWiPROTasks+0x160c>)
    98a0:	785a      	ldrb	r2, [r3, #1]
    98a2:	4b48      	ldr	r3, [pc, #288]	; (99c4 <MiWiPROTasks+0x1600>)
    98a4:	75da      	strb	r2, [r3, #23]
                                                            RandomSendInfo.RandomSendTxBuffer[10] = MiWiPROSeqNum++;
    98a6:	4b4b      	ldr	r3, [pc, #300]	; (99d4 <MiWiPROTasks+0x1610>)
    98a8:	781b      	ldrb	r3, [r3, #0]
    98aa:	1c5a      	adds	r2, r3, #1
    98ac:	b2d1      	uxtb	r1, r2
    98ae:	4a49      	ldr	r2, [pc, #292]	; (99d4 <MiWiPROTasks+0x1610>)
    98b0:	7011      	strb	r1, [r2, #0]
    98b2:	4a44      	ldr	r2, [pc, #272]	; (99c4 <MiWiPROTasks+0x1600>)
    98b4:	7613      	strb	r3, [r2, #24]
                                                            RandomSendInfo.RandomSendTxBuffer[11] = MIWI_PRO_STACK_REPORT_TYPE;
    98b6:	4b43      	ldr	r3, [pc, #268]	; (99c4 <MiWiPROTasks+0x1600>)
    98b8:	2200      	movs	r2, #0
    98ba:	765a      	strb	r2, [r3, #25]
                                                            RandomSendInfo.RandomSendTxBuffer[12] = ROUTING_TABLE_REPORT;
    98bc:	4b41      	ldr	r3, [pc, #260]	; (99c4 <MiWiPROTasks+0x1600>)
    98be:	22a4      	movs	r2, #164	; 0xa4
    98c0:	769a      	strb	r2, [r3, #26]
                                                            RandomSendInfo.RandomSendTxData = 13;
    98c2:	4b40      	ldr	r3, [pc, #256]	; (99c4 <MiWiPROTasks+0x1600>)
    98c4:	220d      	movs	r2, #13
    98c6:	735a      	strb	r2, [r3, #13]
                                                                RandomSendInfo.RandomSendTxBuffer[RandomSendInfo.RandomSendTxData++] = myShortAddress.v[1];
    98c8:	4b3e      	ldr	r3, [pc, #248]	; (99c4 <MiWiPROTasks+0x1600>)
    98ca:	7b5b      	ldrb	r3, [r3, #13]
    98cc:	1c5a      	adds	r2, r3, #1
    98ce:	b2d1      	uxtb	r1, r2
    98d0:	4a3c      	ldr	r2, [pc, #240]	; (99c4 <MiWiPROTasks+0x1600>)
    98d2:	7351      	strb	r1, [r2, #13]
    98d4:	0019      	movs	r1, r3
    98d6:	4b3e      	ldr	r3, [pc, #248]	; (99d0 <MiWiPROTasks+0x160c>)
    98d8:	785a      	ldrb	r2, [r3, #1]
    98da:	4b3a      	ldr	r3, [pc, #232]	; (99c4 <MiWiPROTasks+0x1600>)
    98dc:	185b      	adds	r3, r3, r1
    98de:	739a      	strb	r2, [r3, #14]
                                                            RandomSendInfo.RandomSendTxBuffer[RandomSendInfo.RandomSendTxData++] = initiator;
    98e0:	4b38      	ldr	r3, [pc, #224]	; (99c4 <MiWiPROTasks+0x1600>)
    98e2:	7b5b      	ldrb	r3, [r3, #13]
    98e4:	1c5a      	adds	r2, r3, #1
    98e6:	b2d1      	uxtb	r1, r2
    98e8:	4a36      	ldr	r2, [pc, #216]	; (99c4 <MiWiPROTasks+0x1600>)
    98ea:	7351      	strb	r1, [r2, #13]
    98ec:	001a      	movs	r2, r3
    98ee:	4b35      	ldr	r3, [pc, #212]	; (99c4 <MiWiPROTasks+0x1600>)
    98f0:	189b      	adds	r3, r3, r2
    98f2:	222d      	movs	r2, #45	; 0x2d
    98f4:	18ba      	adds	r2, r7, r2
    98f6:	7812      	ldrb	r2, [r2, #0]
    98f8:	739a      	strb	r2, [r3, #14]
                                                            for(i = 0; i < NUM_COORDINATOR/8; i++)
    98fa:	233f      	movs	r3, #63	; 0x3f
    98fc:	18fb      	adds	r3, r7, r3
    98fe:	2200      	movs	r2, #0
    9900:	701a      	strb	r2, [r3, #0]
    9902:	46c0      	nop			; (mov r8, r8)
                                                            RandomSendInfo.MTP.flags.Val = 0;
    9904:	4b2f      	ldr	r3, [pc, #188]	; (99c4 <MiWiPROTasks+0x1600>)
    9906:	2200      	movs	r2, #0
    9908:	711a      	strb	r2, [r3, #4]
                                                            RandomSendInfo.MTP.flags.bits.broadcast = 1;
    990a:	4b2e      	ldr	r3, [pc, #184]	; (99c4 <MiWiPROTasks+0x1600>)
    990c:	791a      	ldrb	r2, [r3, #4]
    990e:	2104      	movs	r1, #4
    9910:	430a      	orrs	r2, r1
    9912:	711a      	strb	r2, [r3, #4]
                                                                RandomSendInfo.MTP.flags.bits.sourcePrsnt = 1;
    9914:	4b2b      	ldr	r3, [pc, #172]	; (99c4 <MiWiPROTasks+0x1600>)
    9916:	791a      	ldrb	r2, [r3, #4]
    9918:	2180      	movs	r1, #128	; 0x80
    991a:	4249      	negs	r1, r1
    991c:	430a      	orrs	r2, r1
    991e:	711a      	strb	r2, [r3, #4]
                                                            RandomSendInfo.RandomDelayInMilliSecond = (rand() % RANDOM_DELAY_RANGE);
    9920:	4b2d      	ldr	r3, [pc, #180]	; (99d8 <MiWiPROTasks+0x1614>)
    9922:	4798      	blx	r3
    9924:	0002      	movs	r2, r0
    9926:	4b2d      	ldr	r3, [pc, #180]	; (99dc <MiWiPROTasks+0x1618>)
    9928:	21c8      	movs	r1, #200	; 0xc8
    992a:	0010      	movs	r0, r2
    992c:	4798      	blx	r3
    992e:	000b      	movs	r3, r1
    9930:	b2da      	uxtb	r2, r3
    9932:	4b24      	ldr	r3, [pc, #144]	; (99c4 <MiWiPROTasks+0x1600>)
    9934:	731a      	strb	r2, [r3, #12]
                                                            RandomSendInfo.StartTick = MiWi_TickGet();
    9936:	4c23      	ldr	r4, [pc, #140]	; (99c4 <MiWiPROTasks+0x1600>)
    9938:	4b29      	ldr	r3, [pc, #164]	; (99e0 <MiWiPROTasks+0x161c>)
    993a:	4798      	blx	r3
    993c:	0003      	movs	r3, r0
    993e:	6023      	str	r3, [r4, #0]
                                                            MiWiPROStatus.bits.COMM_RANDOM_SEND = 1;
    9940:	4b1f      	ldr	r3, [pc, #124]	; (99c0 <MiWiPROTasks+0x15fc>)
    9942:	781a      	ldrb	r2, [r3, #0]
    9944:	2101      	movs	r1, #1
    9946:	430a      	orrs	r2, r1
    9948:	701a      	strb	r2, [r3, #0]
                                                            if( RoutingUpdateCounter[sourceShortAddress.v[1]] == 0 )
    994a:	2310      	movs	r3, #16
    994c:	18fb      	adds	r3, r7, r3
    994e:	785b      	ldrb	r3, [r3, #1]
    9950:	001a      	movs	r2, r3
    9952:	4b24      	ldr	r3, [pc, #144]	; (99e4 <MiWiPROTasks+0x1620>)
    9954:	5c9b      	ldrb	r3, [r3, r2]
    9956:	2b00      	cmp	r3, #0
    9958:	d109      	bne.n	996e <MiWiPROTasks+0x15aa>
                                                                MiWiPRONVMStatus.bits.saveRoutingTable = 1;
    995a:	4b10      	ldr	r3, [pc, #64]	; (999c <MiWiPROTasks+0x15d8>)
    995c:	781a      	ldrb	r2, [r3, #0]
    995e:	2102      	movs	r1, #2
    9960:	430a      	orrs	r2, r1
    9962:	701a      	strb	r2, [r3, #0]
                                                                MiWiPRONVMStatus.bits.saveNeighborTable = 1; 
    9964:	4b0d      	ldr	r3, [pc, #52]	; (999c <MiWiPROTasks+0x15d8>)
    9966:	781a      	ldrb	r2, [r3, #0]
    9968:	2104      	movs	r1, #4
    996a:	430a      	orrs	r2, r1
    996c:	701a      	strb	r2, [r3, #0]
                                                            RoutingUpdateCounter[sourceShortAddress.v[1]] = ROUTING_UPDATE_EXPIRATION;
    996e:	2310      	movs	r3, #16
    9970:	18fb      	adds	r3, r7, r3
    9972:	785b      	ldrb	r3, [r3, #1]
    9974:	001a      	movs	r2, r3
    9976:	4b1b      	ldr	r3, [pc, #108]	; (99e4 <MiWiPROTasks+0x1620>)
    9978:	2103      	movs	r1, #3
    997a:	5499      	strb	r1, [r3, r2]
                                                        backgroundTaskTick = MiWi_TickGet();
    997c:	4b18      	ldr	r3, [pc, #96]	; (99e0 <MiWiPROTasks+0x161c>)
    997e:	4798      	blx	r3
    9980:	0003      	movs	r3, r0
    9982:	001a      	movs	r2, r3
    9984:	4b18      	ldr	r3, [pc, #96]	; (99e8 <MiWiPROTasks+0x1624>)
    9986:	601a      	str	r2, [r3, #0]
                                                break;                
    9988:	e2c2      	b.n	9f10 <MiWiPROTasks+0x1b4c>
                                                for(j=0;j<MY_ADDRESS_LENGTH;j++)
    998a:	2338      	movs	r3, #56	; 0x38
    998c:	18fb      	adds	r3, r7, r3
    998e:	2200      	movs	r2, #0
    9990:	701a      	strb	r2, [r3, #0]
    9992:	e03f      	b.n	9a14 <MiWiPROTasks+0x1650>
    9994:	2000126c 	.word	0x2000126c
    9998:	20001250 	.word	0x20001250
    999c:	200013c4 	.word	0x200013c4
    99a0:	20001288 	.word	0x20001288
    99a4:	200012e0 	.word	0x200012e0
    99a8:	200012c8 	.word	0x200012c8
    99ac:	20001290 	.word	0x20001290
    99b0:	200012c0 	.word	0x200012c0
    99b4:	0000cd35 	.word	0x0000cd35
    99b8:	20001150 	.word	0x20001150
    99bc:	0000cddd 	.word	0x0000cddd
    99c0:	200012c4 	.word	0x200012c4
    99c4:	200013c8 	.word	0x200013c8
    99c8:	200013d6 	.word	0x200013d6
    99cc:	0000fd09 	.word	0x0000fd09
    99d0:	20001140 	.word	0x20001140
    99d4:	200012dd 	.word	0x200012dd
    99d8:	00017919 	.word	0x00017919
    99dc:	00014c6d 	.word	0x00014c6d
    99e0:	0000ebad 	.word	0x0000ebad
    99e4:	20001500 	.word	0x20001500
    99e8:	2000113c 	.word	0x2000113c
                                                    tempLongAddress[j] = MACRxPacket.Payload[j+MIWI_PRO_HEADER_LEN+2];
    99ec:	2338      	movs	r3, #56	; 0x38
    99ee:	18fb      	adds	r3, r7, r3
    99f0:	781a      	ldrb	r2, [r3, #0]
    99f2:	4bdf      	ldr	r3, [pc, #892]	; (9d70 <MiWiPROTasks+0x19ac>)
    99f4:	6899      	ldr	r1, [r3, #8]
    99f6:	2338      	movs	r3, #56	; 0x38
    99f8:	18fb      	adds	r3, r7, r3
    99fa:	781b      	ldrb	r3, [r3, #0]
    99fc:	330d      	adds	r3, #13
    99fe:	18cb      	adds	r3, r1, r3
    9a00:	7819      	ldrb	r1, [r3, #0]
    9a02:	4bdc      	ldr	r3, [pc, #880]	; (9d74 <MiWiPROTasks+0x19b0>)
    9a04:	5499      	strb	r1, [r3, r2]
                                                for(j=0;j<MY_ADDRESS_LENGTH;j++)
    9a06:	2338      	movs	r3, #56	; 0x38
    9a08:	18fb      	adds	r3, r7, r3
    9a0a:	781a      	ldrb	r2, [r3, #0]
    9a0c:	2338      	movs	r3, #56	; 0x38
    9a0e:	18fb      	adds	r3, r7, r3
    9a10:	3201      	adds	r2, #1
    9a12:	701a      	strb	r2, [r3, #0]
    9a14:	2338      	movs	r3, #56	; 0x38
    9a16:	18fb      	adds	r3, r7, r3
    9a18:	781b      	ldrb	r3, [r3, #0]
    9a1a:	2b07      	cmp	r3, #7
    9a1c:	d9e6      	bls.n	99ec <MiWiPROTasks+0x1628>
                                                tempNodeStatus.Val = 0x8D;
    9a1e:	4bd6      	ldr	r3, [pc, #856]	; (9d78 <MiWiPROTasks+0x19b4>)
    9a20:	228d      	movs	r2, #141	; 0x8d
    9a22:	701a      	strb	r2, [r3, #0]
                                                if(MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2+MY_ADDRESS_LENGTH] & 0x80)
    9a24:	4bd2      	ldr	r3, [pc, #840]	; (9d70 <MiWiPROTasks+0x19ac>)
    9a26:	689b      	ldr	r3, [r3, #8]
    9a28:	3315      	adds	r3, #21
    9a2a:	781b      	ldrb	r3, [r3, #0]
    9a2c:	b25b      	sxtb	r3, r3
    9a2e:	2b00      	cmp	r3, #0
    9a30:	da04      	bge.n	9a3c <MiWiPROTasks+0x1678>
                                                    tempNodeStatus.bits.RXOnWhenIdle = 0;
    9a32:	4bd1      	ldr	r3, [pc, #836]	; (9d78 <MiWiPROTasks+0x19b4>)
    9a34:	781a      	ldrb	r2, [r3, #0]
    9a36:	2101      	movs	r1, #1
    9a38:	438a      	bics	r2, r1
    9a3a:	701a      	strb	r2, [r3, #0]
                                                tempShortAddress.v[0] = MACRxPacket.Payload[MY_ADDRESS_LENGTH+MIWI_PRO_HEADER_LEN+2];
    9a3c:	4bcc      	ldr	r3, [pc, #816]	; (9d70 <MiWiPROTasks+0x19ac>)
    9a3e:	689b      	ldr	r3, [r3, #8]
    9a40:	7d5a      	ldrb	r2, [r3, #21]
    9a42:	4bce      	ldr	r3, [pc, #824]	; (9d7c <MiWiPROTasks+0x19b8>)
    9a44:	701a      	strb	r2, [r3, #0]
                                                tempShortAddress.v[1] = MACRxPacket.Payload[MY_ADDRESS_LENGTH+MIWI_PRO_HEADER_LEN+3];
    9a46:	4bca      	ldr	r3, [pc, #808]	; (9d70 <MiWiPROTasks+0x19ac>)
    9a48:	689b      	ldr	r3, [r3, #8]
    9a4a:	7d9a      	ldrb	r2, [r3, #22]
    9a4c:	4bcb      	ldr	r3, [pc, #812]	; (9d7c <MiWiPROTasks+0x19b8>)
    9a4e:	705a      	strb	r2, [r3, #1]
                                                tempPANID.Val = myPANID.Val;
    9a50:	4bcb      	ldr	r3, [pc, #812]	; (9d80 <MiWiPROTasks+0x19bc>)
    9a52:	881a      	ldrh	r2, [r3, #0]
    9a54:	4bcb      	ldr	r3, [pc, #812]	; (9d84 <MiWiPROTasks+0x19c0>)
    9a56:	801a      	strh	r2, [r3, #0]
                                                openSocketInfo.socketHandle = SearchForShortAddress();
    9a58:	4bcb      	ldr	r3, [pc, #812]	; (9d88 <MiWiPROTasks+0x19c4>)
    9a5a:	4798      	blx	r3
    9a5c:	0003      	movs	r3, r0
    9a5e:	001a      	movs	r2, r3
    9a60:	4bca      	ldr	r3, [pc, #808]	; (9d8c <MiWiPROTasks+0x19c8>)
    9a62:	705a      	strb	r2, [r3, #1]
                                                if(openSocketInfo.socketHandle != 0xFF)
    9a64:	4bc9      	ldr	r3, [pc, #804]	; (9d8c <MiWiPROTasks+0x19c8>)
    9a66:	785b      	ldrb	r3, [r3, #1]
    9a68:	2bff      	cmp	r3, #255	; 0xff
    9a6a:	d013      	beq.n	9a94 <MiWiPROTasks+0x16d0>
                                                    tempNodeStatus.Val = ConnectionTable[openSocketInfo.socketHandle].status.Val;
    9a6c:	4bc7      	ldr	r3, [pc, #796]	; (9d8c <MiWiPROTasks+0x19c8>)
    9a6e:	785b      	ldrb	r3, [r3, #1]
    9a70:	4ac7      	ldr	r2, [pc, #796]	; (9d90 <MiWiPROTasks+0x19cc>)
    9a72:	011b      	lsls	r3, r3, #4
    9a74:	18d3      	adds	r3, r2, r3
    9a76:	330c      	adds	r3, #12
    9a78:	781a      	ldrb	r2, [r3, #0]
    9a7a:	4bbf      	ldr	r3, [pc, #764]	; (9d78 <MiWiPROTasks+0x19b4>)
    9a7c:	701a      	strb	r2, [r3, #0]
                                                    tempNodeStatus.bits.longAddressValid = 1;
    9a7e:	4bbe      	ldr	r3, [pc, #760]	; (9d78 <MiWiPROTasks+0x19b4>)
    9a80:	781a      	ldrb	r2, [r3, #0]
    9a82:	2104      	movs	r1, #4
    9a84:	430a      	orrs	r2, r1
    9a86:	701a      	strb	r2, [r3, #0]
                                                    tempNodeStatus.bits.shortAddressValid = 1;
    9a88:	4bbb      	ldr	r3, [pc, #748]	; (9d78 <MiWiPROTasks+0x19b4>)
    9a8a:	781a      	ldrb	r2, [r3, #0]
    9a8c:	2108      	movs	r1, #8
    9a8e:	430a      	orrs	r2, r1
    9a90:	701a      	strb	r2, [r3, #0]
    9a92:	e00c      	b.n	9aae <MiWiPROTasks+0x16ea>
                                                    tempNodeStatus.Val = 0x8D;
    9a94:	4bb8      	ldr	r3, [pc, #736]	; (9d78 <MiWiPROTasks+0x19b4>)
    9a96:	228d      	movs	r2, #141	; 0x8d
    9a98:	701a      	strb	r2, [r3, #0]
                                                    if(tempShortAddress.v[0] & 0x80)
    9a9a:	4bb8      	ldr	r3, [pc, #736]	; (9d7c <MiWiPROTasks+0x19b8>)
    9a9c:	781b      	ldrb	r3, [r3, #0]
    9a9e:	b25b      	sxtb	r3, r3
    9aa0:	2b00      	cmp	r3, #0
    9aa2:	da04      	bge.n	9aae <MiWiPROTasks+0x16ea>
                                                        tempNodeStatus.bits.RXOnWhenIdle = 0;
    9aa4:	4bb4      	ldr	r3, [pc, #720]	; (9d78 <MiWiPROTasks+0x19b4>)
    9aa6:	781a      	ldrb	r2, [r3, #0]
    9aa8:	2101      	movs	r1, #1
    9aaa:	438a      	bics	r2, r1
    9aac:	701a      	strb	r2, [r3, #0]
                                                openSocketInfo.socketHandle = AddNodeToNetworkTable();
    9aae:	4bb9      	ldr	r3, [pc, #740]	; (9d94 <MiWiPROTasks+0x19d0>)
    9ab0:	4798      	blx	r3
    9ab2:	0003      	movs	r3, r0
    9ab4:	001a      	movs	r2, r3
    9ab6:	4bb5      	ldr	r3, [pc, #724]	; (9d8c <MiWiPROTasks+0x19c8>)
    9ab8:	705a      	strb	r2, [r3, #1]
                                                if( openSocketInfo.socketHandle < 0xFF )
    9aba:	4bb4      	ldr	r3, [pc, #720]	; (9d8c <MiWiPROTasks+0x19c8>)
    9abc:	785b      	ldrb	r3, [r3, #1]
    9abe:	2bff      	cmp	r3, #255	; 0xff
    9ac0:	d03d      	beq.n	9b3e <MiWiPROTasks+0x177a>
                                                        for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    9ac2:	2338      	movs	r3, #56	; 0x38
    9ac4:	18fb      	adds	r3, r7, r3
    9ac6:	2200      	movs	r2, #0
    9ac8:	701a      	strb	r2, [r3, #0]
    9aca:	e01b      	b.n	9b04 <MiWiPROTasks+0x1740>
                                                            ConnectionTable[openSocketInfo.socketHandle].PeerInfo[j] = MACRxPacket.Payload[MY_ADDRESS_LENGTH+4+MIWI_PRO_HEADER_LEN+j];
    9acc:	4baf      	ldr	r3, [pc, #700]	; (9d8c <MiWiPROTasks+0x19c8>)
    9ace:	785b      	ldrb	r3, [r3, #1]
    9ad0:	001c      	movs	r4, r3
    9ad2:	2338      	movs	r3, #56	; 0x38
    9ad4:	18fb      	adds	r3, r7, r3
    9ad6:	781a      	ldrb	r2, [r3, #0]
    9ad8:	4ba5      	ldr	r3, [pc, #660]	; (9d70 <MiWiPROTasks+0x19ac>)
    9ada:	689b      	ldr	r3, [r3, #8]
    9adc:	2138      	movs	r1, #56	; 0x38
    9ade:	1879      	adds	r1, r7, r1
    9ae0:	7809      	ldrb	r1, [r1, #0]
    9ae2:	3117      	adds	r1, #23
    9ae4:	185b      	adds	r3, r3, r1
    9ae6:	7818      	ldrb	r0, [r3, #0]
    9ae8:	49a9      	ldr	r1, [pc, #676]	; (9d90 <MiWiPROTasks+0x19cc>)
    9aea:	0123      	lsls	r3, r4, #4
    9aec:	18cb      	adds	r3, r1, r3
    9aee:	189b      	adds	r3, r3, r2
    9af0:	330d      	adds	r3, #13
    9af2:	1c02      	adds	r2, r0, #0
    9af4:	701a      	strb	r2, [r3, #0]
                                                        for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    9af6:	2338      	movs	r3, #56	; 0x38
    9af8:	18fb      	adds	r3, r7, r3
    9afa:	781a      	ldrb	r2, [r3, #0]
    9afc:	2338      	movs	r3, #56	; 0x38
    9afe:	18fb      	adds	r3, r7, r3
    9b00:	3201      	adds	r2, #1
    9b02:	701a      	strb	r2, [r3, #0]
    9b04:	2338      	movs	r3, #56	; 0x38
    9b06:	18fb      	adds	r3, r7, r3
    9b08:	781b      	ldrb	r3, [r3, #0]
    9b0a:	2b01      	cmp	r3, #1
    9b0c:	d9de      	bls.n	9acc <MiWiPROTasks+0x1708>
                                                        nvmPutConnectionTableIndex(&(ConnectionTable[openSocketInfo.socketHandle]), openSocketInfo.socketHandle);
    9b0e:	4b9f      	ldr	r3, [pc, #636]	; (9d8c <MiWiPROTasks+0x19c8>)
    9b10:	785b      	ldrb	r3, [r3, #1]
    9b12:	011a      	lsls	r2, r3, #4
    9b14:	4b9e      	ldr	r3, [pc, #632]	; (9d90 <MiWiPROTasks+0x19cc>)
    9b16:	18d0      	adds	r0, r2, r3
    9b18:	4b9c      	ldr	r3, [pc, #624]	; (9d8c <MiWiPROTasks+0x19c8>)
    9b1a:	785b      	ldrb	r3, [r3, #1]
    9b1c:	b29b      	uxth	r3, r3
    9b1e:	011b      	lsls	r3, r3, #4
    9b20:	b29a      	uxth	r2, r3
    9b22:	4b9d      	ldr	r3, [pc, #628]	; (9d98 <MiWiPROTasks+0x19d4>)
    9b24:	881b      	ldrh	r3, [r3, #0]
    9b26:	18d3      	adds	r3, r2, r3
    9b28:	b29b      	uxth	r3, r3
    9b2a:	2210      	movs	r2, #16
    9b2c:	0019      	movs	r1, r3
    9b2e:	4b9b      	ldr	r3, [pc, #620]	; (9d9c <MiWiPROTasks+0x19d8>)
    9b30:	4798      	blx	r3
                                                    openSocketInfo.status.bits.matchFound = 1;
    9b32:	4b96      	ldr	r3, [pc, #600]	; (9d8c <MiWiPROTasks+0x19c8>)
    9b34:	781a      	ldrb	r2, [r3, #0]
    9b36:	2101      	movs	r1, #1
    9b38:	430a      	orrs	r2, r1
    9b3a:	701a      	strb	r2, [r3, #0]
    9b3c:	e004      	b.n	9b48 <MiWiPROTasks+0x1784>
                                                    openSocketInfo.status.bits.matchFound = 0;
    9b3e:	4b93      	ldr	r3, [pc, #588]	; (9d8c <MiWiPROTasks+0x19c8>)
    9b40:	781a      	ldrb	r2, [r3, #0]
    9b42:	2101      	movs	r1, #1
    9b44:	438a      	bics	r2, r1
    9b46:	701a      	strb	r2, [r3, #0]
                                                openSocketInfo.status.bits.requestIsOpen = 0;
    9b48:	4b90      	ldr	r3, [pc, #576]	; (9d8c <MiWiPROTasks+0x19c8>)
    9b4a:	781a      	ldrb	r2, [r3, #0]
    9b4c:	2102      	movs	r1, #2
    9b4e:	438a      	bics	r2, r1
    9b50:	701a      	strb	r2, [r3, #0]
                                            break;
    9b52:	e1ea      	b.n	9f2a <MiWiPROTasks+0x1b66>
                                                        ChannelMap.v[0] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2];
    9b54:	4b86      	ldr	r3, [pc, #536]	; (9d70 <MiWiPROTasks+0x19ac>)
    9b56:	689b      	ldr	r3, [r3, #8]
    9b58:	7b5a      	ldrb	r2, [r3, #13]
    9b5a:	2308      	movs	r3, #8
    9b5c:	18fb      	adds	r3, r7, r3
    9b5e:	701a      	strb	r2, [r3, #0]
                                                        ChannelMap.v[1] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+3];
    9b60:	4b83      	ldr	r3, [pc, #524]	; (9d70 <MiWiPROTasks+0x19ac>)
    9b62:	689b      	ldr	r3, [r3, #8]
    9b64:	7b9a      	ldrb	r2, [r3, #14]
    9b66:	2308      	movs	r3, #8
    9b68:	18fb      	adds	r3, r7, r3
    9b6a:	705a      	strb	r2, [r3, #1]
                                                        ChannelMap.v[2] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+4];
    9b6c:	4b80      	ldr	r3, [pc, #512]	; (9d70 <MiWiPROTasks+0x19ac>)
    9b6e:	689b      	ldr	r3, [r3, #8]
    9b70:	7bda      	ldrb	r2, [r3, #15]
    9b72:	2308      	movs	r3, #8
    9b74:	18fb      	adds	r3, r7, r3
    9b76:	709a      	strb	r2, [r3, #2]
                                                        ChannelMap.v[3] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+5];
    9b78:	4b7d      	ldr	r3, [pc, #500]	; (9d70 <MiWiPROTasks+0x19ac>)
    9b7a:	689b      	ldr	r3, [r3, #8]
    9b7c:	7c1a      	ldrb	r2, [r3, #16]
    9b7e:	2308      	movs	r3, #8
    9b80:	18fb      	adds	r3, r7, r3
    9b82:	70da      	strb	r2, [r3, #3]
                                                        MiApp_DiscardMessage();
    9b84:	4b86      	ldr	r3, [pc, #536]	; (9da0 <MiWiPROTasks+0x19dc>)
    9b86:	4798      	blx	r3
                                                            if(MiWiPROStatus.bits.COMM_FREQ_HOPPING == 0)
    9b88:	4b86      	ldr	r3, [pc, #536]	; (9da4 <MiWiPROTasks+0x19e0>)
    9b8a:	781b      	ldrb	r3, [r3, #0]
    9b8c:	227f      	movs	r2, #127	; 0x7f
    9b8e:	4393      	bics	r3, r2
    9b90:	b2db      	uxtb	r3, r3
    9b92:	2b00      	cmp	r3, #0
    9b94:	d000      	beq.n	9b98 <MiWiPROTasks+0x17d4>
    9b96:	e1bd      	b.n	9f14 <MiWiPROTasks+0x1b50>
                                                                MiWiPROStatus.bits.COMM_FREQ_HOPPING = 1;
    9b98:	4b82      	ldr	r3, [pc, #520]	; (9da4 <MiWiPROTasks+0x19e0>)
    9b9a:	781a      	ldrb	r2, [r3, #0]
    9b9c:	2180      	movs	r1, #128	; 0x80
    9b9e:	4249      	negs	r1, r1
    9ba0:	430a      	orrs	r2, r1
    9ba2:	701a      	strb	r2, [r3, #0]
                                                                MiApp_InitChannelHopping(ChannelMap.Val);
    9ba4:	68bb      	ldr	r3, [r7, #8]
    9ba6:	0018      	movs	r0, r3
    9ba8:	4b7f      	ldr	r3, [pc, #508]	; (9da8 <MiWiPROTasks+0x19e4>)
    9baa:	4798      	blx	r3
                                                                MiWiPROStatus.bits.COMM_FREQ_HOPPING = 0;
    9bac:	4b7d      	ldr	r3, [pc, #500]	; (9da4 <MiWiPROTasks+0x19e0>)
    9bae:	781a      	ldrb	r2, [r3, #0]
    9bb0:	217f      	movs	r1, #127	; 0x7f
    9bb2:	400a      	ands	r2, r1
    9bb4:	701a      	strb	r2, [r3, #0]
                                                    break;    
    9bb6:	e1ad      	b.n	9f14 <MiWiPROTasks+0x1b50>
                                                        FrequencyAgilityInfo.ChannelMap.v[0] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2];
    9bb8:	4b6d      	ldr	r3, [pc, #436]	; (9d70 <MiWiPROTasks+0x19ac>)
    9bba:	689b      	ldr	r3, [r3, #8]
    9bbc:	7b5a      	ldrb	r2, [r3, #13]
    9bbe:	4b7b      	ldr	r3, [pc, #492]	; (9dac <MiWiPROTasks+0x19e8>)
    9bc0:	711a      	strb	r2, [r3, #4]
                                                        FrequencyAgilityInfo.ChannelMap.v[1] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+3];
    9bc2:	4b6b      	ldr	r3, [pc, #428]	; (9d70 <MiWiPROTasks+0x19ac>)
    9bc4:	689b      	ldr	r3, [r3, #8]
    9bc6:	7b9a      	ldrb	r2, [r3, #14]
    9bc8:	4b78      	ldr	r3, [pc, #480]	; (9dac <MiWiPROTasks+0x19e8>)
    9bca:	715a      	strb	r2, [r3, #5]
                                                        FrequencyAgilityInfo.ChannelMap.v[2] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+4];
    9bcc:	4b68      	ldr	r3, [pc, #416]	; (9d70 <MiWiPROTasks+0x19ac>)
    9bce:	689b      	ldr	r3, [r3, #8]
    9bd0:	7bda      	ldrb	r2, [r3, #15]
    9bd2:	4b76      	ldr	r3, [pc, #472]	; (9dac <MiWiPROTasks+0x19e8>)
    9bd4:	719a      	strb	r2, [r3, #6]
                                                        FrequencyAgilityInfo.ChannelMap.v[3] = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+5];
    9bd6:	4b66      	ldr	r3, [pc, #408]	; (9d70 <MiWiPROTasks+0x19ac>)
    9bd8:	689b      	ldr	r3, [r3, #8]
    9bda:	7c1a      	ldrb	r2, [r3, #16]
    9bdc:	4b73      	ldr	r3, [pc, #460]	; (9dac <MiWiPROTasks+0x19e8>)
    9bde:	71da      	strb	r2, [r3, #7]
                                                        FrequencyAgilityInfo.status.Val = 0;
    9be0:	4b72      	ldr	r3, [pc, #456]	; (9dac <MiWiPROTasks+0x19e8>)
    9be2:	2200      	movs	r2, #0
    9be4:	701a      	strb	r2, [r3, #0]
                                                        FrequencyAgilityInfo.status.bits.EnergyScan = 1;
    9be6:	4b71      	ldr	r3, [pc, #452]	; (9dac <MiWiPROTasks+0x19e8>)
    9be8:	781a      	ldrb	r2, [r3, #0]
    9bea:	2101      	movs	r1, #1
    9bec:	430a      	orrs	r2, r1
    9bee:	701a      	strb	r2, [r3, #0]
                                                        FrequencyAgilityInfo.FA_StatTick = MiWi_TickGet();
    9bf0:	4c6e      	ldr	r4, [pc, #440]	; (9dac <MiWiPROTasks+0x19e8>)
    9bf2:	4b6f      	ldr	r3, [pc, #444]	; (9db0 <MiWiPROTasks+0x19ec>)
    9bf4:	4798      	blx	r3
    9bf6:	0003      	movs	r3, r0
    9bf8:	60a3      	str	r3, [r4, #8]
                                                    break;
    9bfa:	e196      	b.n	9f2a <MiWiPROTasks+0x1b66>
                                                        if( FA_MAX_NOISE_THRESHOLD < EnergyScanResults[MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2]] )
    9bfc:	4b5c      	ldr	r3, [pc, #368]	; (9d70 <MiWiPROTasks+0x19ac>)
    9bfe:	689b      	ldr	r3, [r3, #8]
    9c00:	330d      	adds	r3, #13
    9c02:	781b      	ldrb	r3, [r3, #0]
    9c04:	001a      	movs	r2, r3
    9c06:	4b6b      	ldr	r3, [pc, #428]	; (9db4 <MiWiPROTasks+0x19f0>)
    9c08:	5c9b      	ldrb	r3, [r3, r2]
    9c0a:	2b80      	cmp	r3, #128	; 0x80
    9c0c:	d800      	bhi.n	9c10 <MiWiPROTasks+0x184c>
    9c0e:	e183      	b.n	9f18 <MiWiPROTasks+0x1b54>
                                                            MiApp_FlushTx();
    9c10:	4b69      	ldr	r3, [pc, #420]	; (9db8 <MiWiPROTasks+0x19f4>)
    9c12:	220b      	movs	r2, #11
    9c14:	701a      	strb	r2, [r3, #0]
                                                            MiApp_WriteData(MIWI_PRO_STACK_REPORT_TYPE);
    9c16:	4b68      	ldr	r3, [pc, #416]	; (9db8 <MiWiPROTasks+0x19f4>)
    9c18:	781b      	ldrb	r3, [r3, #0]
    9c1a:	1c5a      	adds	r2, r3, #1
    9c1c:	b2d1      	uxtb	r1, r2
    9c1e:	4a66      	ldr	r2, [pc, #408]	; (9db8 <MiWiPROTasks+0x19f4>)
    9c20:	7011      	strb	r1, [r2, #0]
    9c22:	001a      	movs	r2, r3
    9c24:	4b65      	ldr	r3, [pc, #404]	; (9dbc <MiWiPROTasks+0x19f8>)
    9c26:	2100      	movs	r1, #0
    9c28:	5499      	strb	r1, [r3, r2]
                                                            MiApp_WriteData(FA_DISPUTE_CHANNEL);
    9c2a:	4b63      	ldr	r3, [pc, #396]	; (9db8 <MiWiPROTasks+0x19f4>)
    9c2c:	781b      	ldrb	r3, [r3, #0]
    9c2e:	1c5a      	adds	r2, r3, #1
    9c30:	b2d1      	uxtb	r1, r2
    9c32:	4a61      	ldr	r2, [pc, #388]	; (9db8 <MiWiPROTasks+0x19f4>)
    9c34:	7011      	strb	r1, [r2, #0]
    9c36:	001a      	movs	r2, r3
    9c38:	4b60      	ldr	r3, [pc, #384]	; (9dbc <MiWiPROTasks+0x19f8>)
    9c3a:	21b3      	movs	r1, #179	; 0xb3
    9c3c:	5499      	strb	r1, [r3, r2]
                                                            MiApp_WriteData(MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2]);
    9c3e:	4b5e      	ldr	r3, [pc, #376]	; (9db8 <MiWiPROTasks+0x19f4>)
    9c40:	781b      	ldrb	r3, [r3, #0]
    9c42:	1c5a      	adds	r2, r3, #1
    9c44:	b2d1      	uxtb	r1, r2
    9c46:	4a5c      	ldr	r2, [pc, #368]	; (9db8 <MiWiPROTasks+0x19f4>)
    9c48:	7011      	strb	r1, [r2, #0]
    9c4a:	001a      	movs	r2, r3
    9c4c:	4b48      	ldr	r3, [pc, #288]	; (9d70 <MiWiPROTasks+0x19ac>)
    9c4e:	689b      	ldr	r3, [r3, #8]
    9c50:	7b59      	ldrb	r1, [r3, #13]
    9c52:	4b5a      	ldr	r3, [pc, #360]	; (9dbc <MiWiPROTasks+0x19f8>)
    9c54:	5499      	strb	r1, [r3, r2]
                                                            tempShortAddress.Val = 0;
    9c56:	4b49      	ldr	r3, [pc, #292]	; (9d7c <MiWiPROTasks+0x19b8>)
    9c58:	2200      	movs	r2, #0
    9c5a:	801a      	strh	r2, [r3, #0]
                                                            UnicastShortAddress(tempShortAddress.v);
    9c5c:	4b47      	ldr	r3, [pc, #284]	; (9d7c <MiWiPROTasks+0x19b8>)
    9c5e:	0018      	movs	r0, r3
    9c60:	4b57      	ldr	r3, [pc, #348]	; (9dc0 <MiWiPROTasks+0x19fc>)
    9c62:	4798      	blx	r3
                                                    break;
    9c64:	e158      	b.n	9f18 <MiWiPROTasks+0x1b54>
                                                        if( MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2] == FrequencyAgilityInfo.status.bits.SuggestChannel )
    9c66:	4b42      	ldr	r3, [pc, #264]	; (9d70 <MiWiPROTasks+0x19ac>)
    9c68:	689b      	ldr	r3, [r3, #8]
    9c6a:	330d      	adds	r3, #13
    9c6c:	781b      	ldrb	r3, [r3, #0]
    9c6e:	4a4f      	ldr	r2, [pc, #316]	; (9dac <MiWiPROTasks+0x19e8>)
    9c70:	7812      	ldrb	r2, [r2, #0]
    9c72:	0612      	lsls	r2, r2, #24
    9c74:	0ed2      	lsrs	r2, r2, #27
    9c76:	b2d2      	uxtb	r2, r2
    9c78:	4293      	cmp	r3, r2
    9c7a:	d000      	beq.n	9c7e <MiWiPROTasks+0x18ba>
    9c7c:	e14e      	b.n	9f1c <MiWiPROTasks+0x1b58>
                                                            FrequencyAgilityInfo.status.bits.DisputeChannel = 1;
    9c7e:	4b4b      	ldr	r3, [pc, #300]	; (9dac <MiWiPROTasks+0x19e8>)
    9c80:	781a      	ldrb	r2, [r3, #0]
    9c82:	2104      	movs	r1, #4
    9c84:	430a      	orrs	r2, r1
    9c86:	701a      	strb	r2, [r3, #0]
                                                    break;            
    9c88:	e148      	b.n	9f1c <MiWiPROTasks+0x1b58>
                                                        if( MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2] != currentChannel )
    9c8a:	4b39      	ldr	r3, [pc, #228]	; (9d70 <MiWiPROTasks+0x19ac>)
    9c8c:	689b      	ldr	r3, [r3, #8]
    9c8e:	330d      	adds	r3, #13
    9c90:	781a      	ldrb	r2, [r3, #0]
    9c92:	4b4c      	ldr	r3, [pc, #304]	; (9dc4 <MiWiPROTasks+0x1a00>)
    9c94:	781b      	ldrb	r3, [r3, #0]
    9c96:	429a      	cmp	r2, r3
    9c98:	d000      	beq.n	9c9c <MiWiPROTasks+0x18d8>
    9c9a:	e141      	b.n	9f20 <MiWiPROTasks+0x1b5c>
                                                        MAC_FlushTx();
    9c9c:	4b46      	ldr	r3, [pc, #280]	; (9db8 <MiWiPROTasks+0x19f4>)
    9c9e:	2200      	movs	r2, #0
    9ca0:	701a      	strb	r2, [r3, #0]
                                                        TxBuffer[0] = defaultHops;
    9ca2:	4b49      	ldr	r3, [pc, #292]	; (9dc8 <MiWiPROTasks+0x1a04>)
    9ca4:	781a      	ldrb	r2, [r3, #0]
    9ca6:	4b45      	ldr	r3, [pc, #276]	; (9dbc <MiWiPROTasks+0x19f8>)
    9ca8:	701a      	strb	r2, [r3, #0]
                                                        TxBuffer[1] = 0x02;
    9caa:	4b44      	ldr	r3, [pc, #272]	; (9dbc <MiWiPROTasks+0x19f8>)
    9cac:	2202      	movs	r2, #2
    9cae:	705a      	strb	r2, [r3, #1]
                                                        TxBuffer[2] = myPANID.v[0];
    9cb0:	4b33      	ldr	r3, [pc, #204]	; (9d80 <MiWiPROTasks+0x19bc>)
    9cb2:	781a      	ldrb	r2, [r3, #0]
    9cb4:	4b41      	ldr	r3, [pc, #260]	; (9dbc <MiWiPROTasks+0x19f8>)
    9cb6:	709a      	strb	r2, [r3, #2]
                                                        TxBuffer[3] = myPANID.v[1];
    9cb8:	4b31      	ldr	r3, [pc, #196]	; (9d80 <MiWiPROTasks+0x19bc>)
    9cba:	785a      	ldrb	r2, [r3, #1]
    9cbc:	4b3f      	ldr	r3, [pc, #252]	; (9dbc <MiWiPROTasks+0x19f8>)
    9cbe:	70da      	strb	r2, [r3, #3]
                                                        TxBuffer[4] = MACRxPacket.Payload[8];
    9cc0:	4b2b      	ldr	r3, [pc, #172]	; (9d70 <MiWiPROTasks+0x19ac>)
    9cc2:	689b      	ldr	r3, [r3, #8]
    9cc4:	7a1a      	ldrb	r2, [r3, #8]
    9cc6:	4b3d      	ldr	r3, [pc, #244]	; (9dbc <MiWiPROTasks+0x19f8>)
    9cc8:	711a      	strb	r2, [r3, #4]
                                                        TxBuffer[5] = MACRxPacket.Payload[9];
    9cca:	4b29      	ldr	r3, [pc, #164]	; (9d70 <MiWiPROTasks+0x19ac>)
    9ccc:	689b      	ldr	r3, [r3, #8]
    9cce:	7a5a      	ldrb	r2, [r3, #9]
    9cd0:	4b3a      	ldr	r3, [pc, #232]	; (9dbc <MiWiPROTasks+0x19f8>)
    9cd2:	715a      	strb	r2, [r3, #5]
                                                        TxBuffer[6] = myPANID.v[0];
    9cd4:	4b2a      	ldr	r3, [pc, #168]	; (9d80 <MiWiPROTasks+0x19bc>)
    9cd6:	781a      	ldrb	r2, [r3, #0]
    9cd8:	4b38      	ldr	r3, [pc, #224]	; (9dbc <MiWiPROTasks+0x19f8>)
    9cda:	719a      	strb	r2, [r3, #6]
                                                        TxBuffer[7] = myPANID.v[1];
    9cdc:	4b28      	ldr	r3, [pc, #160]	; (9d80 <MiWiPROTasks+0x19bc>)
    9cde:	785a      	ldrb	r2, [r3, #1]
    9ce0:	4b36      	ldr	r3, [pc, #216]	; (9dbc <MiWiPROTasks+0x19f8>)
    9ce2:	71da      	strb	r2, [r3, #7]
                                                        TxBuffer[8] = myShortAddress.v[0];
    9ce4:	4b39      	ldr	r3, [pc, #228]	; (9dcc <MiWiPROTasks+0x1a08>)
    9ce6:	781a      	ldrb	r2, [r3, #0]
    9ce8:	4b34      	ldr	r3, [pc, #208]	; (9dbc <MiWiPROTasks+0x19f8>)
    9cea:	721a      	strb	r2, [r3, #8]
                                                        TxBuffer[9] = myShortAddress.v[1];
    9cec:	4b37      	ldr	r3, [pc, #220]	; (9dcc <MiWiPROTasks+0x1a08>)
    9cee:	785a      	ldrb	r2, [r3, #1]
    9cf0:	4b32      	ldr	r3, [pc, #200]	; (9dbc <MiWiPROTasks+0x19f8>)
    9cf2:	725a      	strb	r2, [r3, #9]
                                                        TxBuffer[10] = MiWiPROSeqNum++;
    9cf4:	4b36      	ldr	r3, [pc, #216]	; (9dd0 <MiWiPROTasks+0x1a0c>)
    9cf6:	781b      	ldrb	r3, [r3, #0]
    9cf8:	1c5a      	adds	r2, r3, #1
    9cfa:	b2d1      	uxtb	r1, r2
    9cfc:	4a34      	ldr	r2, [pc, #208]	; (9dd0 <MiWiPROTasks+0x1a0c>)
    9cfe:	7011      	strb	r1, [r2, #0]
    9d00:	4a2e      	ldr	r2, [pc, #184]	; (9dbc <MiWiPROTasks+0x19f8>)
    9d02:	7293      	strb	r3, [r2, #10]
                                                        TxBuffer[11] = MIWI_PRO_STACK_REPORT_TYPE;
    9d04:	4b2d      	ldr	r3, [pc, #180]	; (9dbc <MiWiPROTasks+0x19f8>)
    9d06:	2200      	movs	r2, #0
    9d08:	72da      	strb	r2, [r3, #11]
                                                        TxBuffer[12] = RESYNCHRONIZATION_RESPONSE;
    9d0a:	4b2c      	ldr	r3, [pc, #176]	; (9dbc <MiWiPROTasks+0x19f8>)
    9d0c:	2242      	movs	r2, #66	; 0x42
    9d0e:	731a      	strb	r2, [r3, #12]
                                                        MTP.flags.Val = 0;
    9d10:	4b30      	ldr	r3, [pc, #192]	; (9dd4 <MiWiPROTasks+0x1a10>)
    9d12:	2200      	movs	r2, #0
    9d14:	701a      	strb	r2, [r3, #0]
                                                        MTP.flags.bits.ackReq = 1;
    9d16:	4b2f      	ldr	r3, [pc, #188]	; (9dd4 <MiWiPROTasks+0x1a10>)
    9d18:	781a      	ldrb	r2, [r3, #0]
    9d1a:	2120      	movs	r1, #32
    9d1c:	430a      	orrs	r2, r1
    9d1e:	701a      	strb	r2, [r3, #0]
                                                            tempShortAddress.v[0] = MACRxPacket.Payload[8];
    9d20:	4b13      	ldr	r3, [pc, #76]	; (9d70 <MiWiPROTasks+0x19ac>)
    9d22:	689b      	ldr	r3, [r3, #8]
    9d24:	7a1a      	ldrb	r2, [r3, #8]
    9d26:	4b15      	ldr	r3, [pc, #84]	; (9d7c <MiWiPROTasks+0x19b8>)
    9d28:	701a      	strb	r2, [r3, #0]
                                                            tempShortAddress.v[1] = MACRxPacket.Payload[9];
    9d2a:	4b11      	ldr	r3, [pc, #68]	; (9d70 <MiWiPROTasks+0x19ac>)
    9d2c:	689b      	ldr	r3, [r3, #8]
    9d2e:	7a5a      	ldrb	r2, [r3, #9]
    9d30:	4b12      	ldr	r3, [pc, #72]	; (9d7c <MiWiPROTasks+0x19b8>)
    9d32:	705a      	strb	r2, [r3, #1]
                                                            i = SearchForShortAddress();
    9d34:	233f      	movs	r3, #63	; 0x3f
    9d36:	18fc      	adds	r4, r7, r3
    9d38:	4b13      	ldr	r3, [pc, #76]	; (9d88 <MiWiPROTasks+0x19c4>)
    9d3a:	4798      	blx	r3
    9d3c:	0003      	movs	r3, r0
    9d3e:	7023      	strb	r3, [r4, #0]
                                                            if( i == 0xFF )
    9d40:	233f      	movs	r3, #63	; 0x3f
    9d42:	18fb      	adds	r3, r7, r3
    9d44:	781b      	ldrb	r3, [r3, #0]
    9d46:	2bff      	cmp	r3, #255	; 0xff
    9d48:	d100      	bne.n	9d4c <MiWiPROTasks+0x1988>
    9d4a:	e0eb      	b.n	9f24 <MiWiPROTasks+0x1b60>
                                                            MTP.DestAddress = ConnectionTable[i].Address;
    9d4c:	233f      	movs	r3, #63	; 0x3f
    9d4e:	18fb      	adds	r3, r7, r3
    9d50:	781b      	ldrb	r3, [r3, #0]
    9d52:	011a      	lsls	r2, r3, #4
    9d54:	4b0e      	ldr	r3, [pc, #56]	; (9d90 <MiWiPROTasks+0x19cc>)
    9d56:	18d3      	adds	r3, r2, r3
    9d58:	1d1a      	adds	r2, r3, #4
    9d5a:	4b1e      	ldr	r3, [pc, #120]	; (9dd4 <MiWiPROTasks+0x1a10>)
    9d5c:	605a      	str	r2, [r3, #4]
                                                        MiMAC_SendPacket(MTP, TxBuffer, 13);
    9d5e:	4a17      	ldr	r2, [pc, #92]	; (9dbc <MiWiPROTasks+0x19f8>)
    9d60:	491c      	ldr	r1, [pc, #112]	; (9dd4 <MiWiPROTasks+0x1a10>)
    9d62:	230d      	movs	r3, #13
    9d64:	6808      	ldr	r0, [r1, #0]
    9d66:	6849      	ldr	r1, [r1, #4]
    9d68:	4c1b      	ldr	r4, [pc, #108]	; (9dd8 <MiWiPROTasks+0x1a14>)
    9d6a:	47a0      	blx	r4
                                                    break;
    9d6c:	e0dd      	b.n	9f2a <MiWiPROTasks+0x1b66>
    9d6e:	46c0      	nop			; (mov r8, r8)
    9d70:	2000126c 	.word	0x2000126c
    9d74:	20001288 	.word	0x20001288
    9d78:	200012c8 	.word	0x200012c8
    9d7c:	200012e0 	.word	0x200012e0
    9d80:	20001290 	.word	0x20001290
    9d84:	200012c0 	.word	0x200012c0
    9d88:	0000cb71 	.word	0x0000cb71
    9d8c:	20001250 	.word	0x20001250
    9d90:	20001150 	.word	0x20001150
    9d94:	0000cddd 	.word	0x0000cddd
    9d98:	2000159a 	.word	0x2000159a
    9d9c:	0000e9c1 	.word	0x0000e9c1
    9da0:	0000d7e5 	.word	0x0000d7e5
    9da4:	200012c4 	.word	0x200012c4
    9da8:	0000e3f1 	.word	0x0000e3f1
    9dac:	200012cc 	.word	0x200012cc
    9db0:	0000ebad 	.word	0x0000ebad
    9db4:	20001294 	.word	0x20001294
    9db8:	200012dc 	.word	0x200012dc
    9dbc:	200012e4 	.word	0x200012e4
    9dc0:	0000db3d 	.word	0x0000db3d
    9dc4:	200014b5 	.word	0x200014b5
    9dc8:	2000001b 	.word	0x2000001b
    9dcc:	20001140 	.word	0x20001140
    9dd0:	200012dd 	.word	0x200012dd
    9dd4:	200012b8 	.word	0x200012b8
    9dd8:	0000fd09 	.word	0x0000fd09
                                                    if( MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+2] == currentChannel )
    9ddc:	4b94      	ldr	r3, [pc, #592]	; (a030 <MiWiPROTasks+0x1c6c>)
    9dde:	689b      	ldr	r3, [r3, #8]
    9de0:	330d      	adds	r3, #13
    9de2:	781a      	ldrb	r2, [r3, #0]
    9de4:	4b93      	ldr	r3, [pc, #588]	; (a034 <MiWiPROTasks+0x1c70>)
    9de6:	781b      	ldrb	r3, [r3, #0]
    9de8:	429a      	cmp	r2, r3
    9dea:	d000      	beq.n	9dee <MiWiPROTasks+0x1a2a>
    9dec:	e09c      	b.n	9f28 <MiWiPROTasks+0x1b64>
                                                        FrequencyAgilityInfo.FA_StatTick = MiWi_TickGet();
    9dee:	4c92      	ldr	r4, [pc, #584]	; (a038 <MiWiPROTasks+0x1c74>)
    9df0:	4b92      	ldr	r3, [pc, #584]	; (a03c <MiWiPROTasks+0x1c78>)
    9df2:	4798      	blx	r3
    9df4:	0003      	movs	r3, r0
    9df6:	60a3      	str	r3, [r4, #8]
                                                        FrequencyAgilityInfo.status.bits.ChangeChannel = 1;
    9df8:	4b8f      	ldr	r3, [pc, #572]	; (a038 <MiWiPROTasks+0x1c74>)
    9dfa:	781a      	ldrb	r2, [r3, #0]
    9dfc:	2102      	movs	r1, #2
    9dfe:	430a      	orrs	r2, r1
    9e00:	701a      	strb	r2, [r3, #0]
                                                        FrequencyAgilityInfo.status.bits.SuggestChannel = MACRxPacket.Payload[MIWI_PRO_HEADER_LEN+3];
    9e02:	4b8b      	ldr	r3, [pc, #556]	; (a030 <MiWiPROTasks+0x1c6c>)
    9e04:	689b      	ldr	r3, [r3, #8]
    9e06:	330e      	adds	r3, #14
    9e08:	781b      	ldrb	r3, [r3, #0]
    9e0a:	1c1a      	adds	r2, r3, #0
    9e0c:	231f      	movs	r3, #31
    9e0e:	4013      	ands	r3, r2
    9e10:	b2da      	uxtb	r2, r3
    9e12:	4b89      	ldr	r3, [pc, #548]	; (a038 <MiWiPROTasks+0x1c74>)
    9e14:	00d0      	lsls	r0, r2, #3
    9e16:	781a      	ldrb	r2, [r3, #0]
    9e18:	2107      	movs	r1, #7
    9e1a:	400a      	ands	r2, r1
    9e1c:	1c11      	adds	r1, r2, #0
    9e1e:	1c02      	adds	r2, r0, #0
    9e20:	430a      	orrs	r2, r1
    9e22:	701a      	strb	r2, [r3, #0]
                                                break;
    9e24:	e080      	b.n	9f28 <MiWiPROTasks+0x1b64>
                                                    MiWiPROStateMachine.bits.Resynning = 0;
    9e26:	4b86      	ldr	r3, [pc, #536]	; (a040 <MiWiPROTasks+0x1c7c>)
    9e28:	781a      	ldrb	r2, [r3, #0]
    9e2a:	2140      	movs	r1, #64	; 0x40
    9e2c:	438a      	bics	r2, r1
    9e2e:	701a      	strb	r2, [r3, #0]
                                                break;
    9e30:	e07b      	b.n	9f2a <MiWiPROTasks+0x1b66>
                                    if( (AcknowledgementSeq == MACRxPacket.Payload[MIWI_PRO_HEADER_LEN-1]) &&
    9e32:	4b7f      	ldr	r3, [pc, #508]	; (a030 <MiWiPROTasks+0x1c6c>)
    9e34:	689b      	ldr	r3, [r3, #8]
    9e36:	330a      	adds	r3, #10
    9e38:	781a      	ldrb	r2, [r3, #0]
    9e3a:	4b82      	ldr	r3, [pc, #520]	; (a044 <MiWiPROTasks+0x1c80>)
    9e3c:	781b      	ldrb	r3, [r3, #0]
    9e3e:	429a      	cmp	r2, r3
    9e40:	d10b      	bne.n	9e5a <MiWiPROTasks+0x1a96>
                                        (sourceShortAddress.Val == AcknowledgementAddr.Val) )
    9e42:	2310      	movs	r3, #16
    9e44:	18fb      	adds	r3, r7, r3
    9e46:	881a      	ldrh	r2, [r3, #0]
    9e48:	4b7f      	ldr	r3, [pc, #508]	; (a048 <MiWiPROTasks+0x1c84>)
    9e4a:	881b      	ldrh	r3, [r3, #0]
                                    if( (AcknowledgementSeq == MACRxPacket.Payload[MIWI_PRO_HEADER_LEN-1]) &&
    9e4c:	429a      	cmp	r2, r3
    9e4e:	d104      	bne.n	9e5a <MiWiPROTasks+0x1a96>
                                        MiWiPROStateMachine.bits.MiWiPROAckInProgress = 0;
    9e50:	4b7b      	ldr	r3, [pc, #492]	; (a040 <MiWiPROTasks+0x1c7c>)
    9e52:	781a      	ldrb	r2, [r3, #0]
    9e54:	2108      	movs	r1, #8
    9e56:	438a      	bics	r2, r1
    9e58:	701a      	strb	r2, [r3, #0]
                                    break;
    9e5a:	46c0      	nop			; (mov r8, r8)
    9e5c:	f001 faa1 	bl	b3a2 <MiWiPROTasks+0x2fde>
                                rxMessage.PayloadSize = MACRxPacket.PayloadLen - 11;
    9e60:	4b73      	ldr	r3, [pc, #460]	; (a030 <MiWiPROTasks+0x1c6c>)
    9e62:	7b1b      	ldrb	r3, [r3, #12]
    9e64:	3b0b      	subs	r3, #11
    9e66:	b2da      	uxtb	r2, r3
    9e68:	4b78      	ldr	r3, [pc, #480]	; (a04c <MiWiPROTasks+0x1c88>)
    9e6a:	731a      	strb	r2, [r3, #12]
                                rxMessage.Payload = &MACRxPacket.Payload[11];
    9e6c:	4b70      	ldr	r3, [pc, #448]	; (a030 <MiWiPROTasks+0x1c6c>)
    9e6e:	689b      	ldr	r3, [r3, #8]
    9e70:	330b      	adds	r3, #11
    9e72:	001a      	movs	r2, r3
    9e74:	4b75      	ldr	r3, [pc, #468]	; (a04c <MiWiPROTasks+0x1c88>)
    9e76:	609a      	str	r2, [r3, #8]
                                rxMessage.SourcePANID.Val = sourcePANID.Val;
    9e78:	2314      	movs	r3, #20
    9e7a:	18fb      	adds	r3, r7, r3
    9e7c:	881a      	ldrh	r2, [r3, #0]
    9e7e:	4b73      	ldr	r3, [pc, #460]	; (a04c <MiWiPROTasks+0x1c88>)
    9e80:	805a      	strh	r2, [r3, #2]
                                if( MACRxPacket.Payload[8] == 0xFF && MACRxPacket.Payload[9] == 0xFF )
    9e82:	4b6b      	ldr	r3, [pc, #428]	; (a030 <MiWiPROTasks+0x1c6c>)
    9e84:	689b      	ldr	r3, [r3, #8]
    9e86:	3308      	adds	r3, #8
    9e88:	781b      	ldrb	r3, [r3, #0]
    9e8a:	2bff      	cmp	r3, #255	; 0xff
    9e8c:	d11e      	bne.n	9ecc <MiWiPROTasks+0x1b08>
    9e8e:	4b68      	ldr	r3, [pc, #416]	; (a030 <MiWiPROTasks+0x1c6c>)
    9e90:	689b      	ldr	r3, [r3, #8]
    9e92:	3309      	adds	r3, #9
    9e94:	781b      	ldrb	r3, [r3, #0]
    9e96:	2bff      	cmp	r3, #255	; 0xff
    9e98:	d118      	bne.n	9ecc <MiWiPROTasks+0x1b08>
                                        if( MACRxPacket.flags.bits.sourcePrsnt )
    9e9a:	4b65      	ldr	r3, [pc, #404]	; (a030 <MiWiPROTasks+0x1c6c>)
    9e9c:	781b      	ldrb	r3, [r3, #0]
    9e9e:	227f      	movs	r2, #127	; 0x7f
    9ea0:	4393      	bics	r3, r2
    9ea2:	b2db      	uxtb	r3, r3
    9ea4:	2b00      	cmp	r3, #0
    9ea6:	d004      	beq.n	9eb2 <MiWiPROTasks+0x1aee>
                                            rxMessage.SourceAddress = MACRxPacket.SourceAddress; 
    9ea8:	4b61      	ldr	r3, [pc, #388]	; (a030 <MiWiPROTasks+0x1c6c>)
    9eaa:	685a      	ldr	r2, [r3, #4]
    9eac:	4b67      	ldr	r3, [pc, #412]	; (a04c <MiWiPROTasks+0x1c88>)
    9eae:	605a      	str	r2, [r3, #4]
                                        if( MACRxPacket.flags.bits.sourcePrsnt )
    9eb0:	e018      	b.n	9ee4 <MiWiPROTasks+0x1b20>
                                            rxMessage.flags.bits.altSrcAddr = 1;
    9eb2:	4b66      	ldr	r3, [pc, #408]	; (a04c <MiWiPROTasks+0x1c88>)
    9eb4:	781a      	ldrb	r2, [r3, #0]
    9eb6:	2180      	movs	r1, #128	; 0x80
    9eb8:	4249      	negs	r1, r1
    9eba:	430a      	orrs	r2, r1
    9ebc:	701a      	strb	r2, [r3, #0]
                                            rxMessage.SourceAddress = &(MACRxPacket.Payload[8]);
    9ebe:	4b5c      	ldr	r3, [pc, #368]	; (a030 <MiWiPROTasks+0x1c6c>)
    9ec0:	689b      	ldr	r3, [r3, #8]
    9ec2:	3308      	adds	r3, #8
    9ec4:	001a      	movs	r2, r3
    9ec6:	4b61      	ldr	r3, [pc, #388]	; (a04c <MiWiPROTasks+0x1c88>)
    9ec8:	605a      	str	r2, [r3, #4]
                                        if( MACRxPacket.flags.bits.sourcePrsnt )
    9eca:	e00b      	b.n	9ee4 <MiWiPROTasks+0x1b20>
                                    rxMessage.flags.bits.altSrcAddr = 1;
    9ecc:	4b5f      	ldr	r3, [pc, #380]	; (a04c <MiWiPROTasks+0x1c88>)
    9ece:	781a      	ldrb	r2, [r3, #0]
    9ed0:	2180      	movs	r1, #128	; 0x80
    9ed2:	4249      	negs	r1, r1
    9ed4:	430a      	orrs	r2, r1
    9ed6:	701a      	strb	r2, [r3, #0]
                                    rxMessage.SourceAddress = &(MACRxPacket.Payload[8]);
    9ed8:	4b55      	ldr	r3, [pc, #340]	; (a030 <MiWiPROTasks+0x1c6c>)
    9eda:	689b      	ldr	r3, [r3, #8]
    9edc:	3308      	adds	r3, #8
    9ede:	001a      	movs	r2, r3
    9ee0:	4b5a      	ldr	r3, [pc, #360]	; (a04c <MiWiPROTasks+0x1c88>)
    9ee2:	605a      	str	r2, [r3, #4]
                                rxMessage.flags.bits.srcPrsnt = 1;
    9ee4:	4b59      	ldr	r3, [pc, #356]	; (a04c <MiWiPROTasks+0x1c88>)
    9ee6:	781a      	ldrb	r2, [r3, #0]
    9ee8:	2140      	movs	r1, #64	; 0x40
    9eea:	430a      	orrs	r2, r1
    9eec:	701a      	strb	r2, [r3, #0]
                                if( rxMessage.PayloadSize > 0 )
    9eee:	4b57      	ldr	r3, [pc, #348]	; (a04c <MiWiPROTasks+0x1c88>)
    9ef0:	7b1b      	ldrb	r3, [r3, #12]
    9ef2:	2b00      	cmp	r3, #0
    9ef4:	d100      	bne.n	9ef8 <MiWiPROTasks+0x1b34>
    9ef6:	e098      	b.n	a02a <MiWiPROTasks+0x1c66>
                                    MiWiPROStateMachine.bits.RxHasUserData = 1;
    9ef8:	4b51      	ldr	r3, [pc, #324]	; (a040 <MiWiPROTasks+0x1c7c>)
    9efa:	781a      	ldrb	r2, [r3, #0]
    9efc:	2104      	movs	r1, #4
    9efe:	430a      	orrs	r2, r1
    9f00:	701a      	strb	r2, [r3, #0]
                            if(MACRxPacket.Payload[MIWI_PRO_HEADER_LEN] == MIWI_PRO_STACK_REPORT_TYPE)
    9f02:	e092      	b.n	a02a <MiWiPROTasks+0x1c66>
                                                break;
    9f04:	46c0      	nop			; (mov r8, r8)
    9f06:	e090      	b.n	a02a <MiWiPROTasks+0x1c66>
                                                            break;
    9f08:	46c0      	nop			; (mov r8, r8)
    9f0a:	e08e      	b.n	a02a <MiWiPROTasks+0x1c66>
                                                break;
    9f0c:	46c0      	nop			; (mov r8, r8)
    9f0e:	e08c      	b.n	a02a <MiWiPROTasks+0x1c66>
                                                break;                
    9f10:	46c0      	nop			; (mov r8, r8)
    9f12:	e08a      	b.n	a02a <MiWiPROTasks+0x1c66>
                                                    break;    
    9f14:	46c0      	nop			; (mov r8, r8)
    9f16:	e088      	b.n	a02a <MiWiPROTasks+0x1c66>
                                                    break;
    9f18:	46c0      	nop			; (mov r8, r8)
    9f1a:	e086      	b.n	a02a <MiWiPROTasks+0x1c66>
                                                    break;            
    9f1c:	46c0      	nop			; (mov r8, r8)
    9f1e:	e084      	b.n	a02a <MiWiPROTasks+0x1c66>
                                                            break;
    9f20:	46c0      	nop			; (mov r8, r8)
    9f22:	e082      	b.n	a02a <MiWiPROTasks+0x1c66>
                                                                break;
    9f24:	46c0      	nop			; (mov r8, r8)
    9f26:	e080      	b.n	a02a <MiWiPROTasks+0x1c66>
                                                break;
    9f28:	46c0      	nop			; (mov r8, r8)
                            if(MACRxPacket.Payload[MIWI_PRO_HEADER_LEN] == MIWI_PRO_STACK_REPORT_TYPE)
    9f2a:	e07e      	b.n	a02a <MiWiPROTasks+0x1c66>
                                if( MACRxPacket.Payload[0] > 0 )
    9f2c:	4b40      	ldr	r3, [pc, #256]	; (a030 <MiWiPROTasks+0x1c6c>)
    9f2e:	689b      	ldr	r3, [r3, #8]
    9f30:	781b      	ldrb	r3, [r3, #0]
    9f32:	2b00      	cmp	r3, #0
    9f34:	d101      	bne.n	9f3a <MiWiPROTasks+0x1b76>
    9f36:	f001 fa2f 	bl	b398 <MiWiPROTasks+0x2fd4>
                                    MACRxPacket.Payload[0]--;      //decrement the hops counter
    9f3a:	4b3d      	ldr	r3, [pc, #244]	; (a030 <MiWiPROTasks+0x1c6c>)
    9f3c:	689b      	ldr	r3, [r3, #8]
    9f3e:	781a      	ldrb	r2, [r3, #0]
    9f40:	3a01      	subs	r2, #1
    9f42:	b2d2      	uxtb	r2, r2
    9f44:	701a      	strb	r2, [r3, #0]
                                    MAC_FlushTx();
    9f46:	4b42      	ldr	r3, [pc, #264]	; (a050 <MiWiPROTasks+0x1c8c>)
    9f48:	2200      	movs	r2, #0
    9f4a:	701a      	strb	r2, [r3, #0]
                                    for(i = 0; i < MACRxPacket.PayloadLen; i++)
    9f4c:	233f      	movs	r3, #63	; 0x3f
    9f4e:	18fb      	adds	r3, r7, r3
    9f50:	2200      	movs	r2, #0
    9f52:	701a      	strb	r2, [r3, #0]
    9f54:	e016      	b.n	9f84 <MiWiPROTasks+0x1bc0>
                                        MiApp_WriteData(MACRxPacket.Payload[i]);
    9f56:	4b3e      	ldr	r3, [pc, #248]	; (a050 <MiWiPROTasks+0x1c8c>)
    9f58:	781b      	ldrb	r3, [r3, #0]
    9f5a:	1c5a      	adds	r2, r3, #1
    9f5c:	b2d1      	uxtb	r1, r2
    9f5e:	4a3c      	ldr	r2, [pc, #240]	; (a050 <MiWiPROTasks+0x1c8c>)
    9f60:	7011      	strb	r1, [r2, #0]
    9f62:	0019      	movs	r1, r3
    9f64:	4b32      	ldr	r3, [pc, #200]	; (a030 <MiWiPROTasks+0x1c6c>)
    9f66:	689a      	ldr	r2, [r3, #8]
    9f68:	233f      	movs	r3, #63	; 0x3f
    9f6a:	18fb      	adds	r3, r7, r3
    9f6c:	781b      	ldrb	r3, [r3, #0]
    9f6e:	18d3      	adds	r3, r2, r3
    9f70:	781a      	ldrb	r2, [r3, #0]
    9f72:	4b38      	ldr	r3, [pc, #224]	; (a054 <MiWiPROTasks+0x1c90>)
    9f74:	545a      	strb	r2, [r3, r1]
                                    for(i = 0; i < MACRxPacket.PayloadLen; i++)
    9f76:	233f      	movs	r3, #63	; 0x3f
    9f78:	18fb      	adds	r3, r7, r3
    9f7a:	781a      	ldrb	r2, [r3, #0]
    9f7c:	233f      	movs	r3, #63	; 0x3f
    9f7e:	18fb      	adds	r3, r7, r3
    9f80:	3201      	adds	r2, #1
    9f82:	701a      	strb	r2, [r3, #0]
    9f84:	4b2a      	ldr	r3, [pc, #168]	; (a030 <MiWiPROTasks+0x1c6c>)
    9f86:	7b1b      	ldrb	r3, [r3, #12]
    9f88:	223f      	movs	r2, #63	; 0x3f
    9f8a:	18ba      	adds	r2, r7, r2
    9f8c:	7812      	ldrb	r2, [r2, #0]
    9f8e:	429a      	cmp	r2, r3
    9f90:	d3e1      	bcc.n	9f56 <MiWiPROTasks+0x1b92>
                                    if( (destShortAddress.v[1] == myShortAddress.v[1]) &&
    9f92:	230c      	movs	r3, #12
    9f94:	18fb      	adds	r3, r7, r3
    9f96:	785a      	ldrb	r2, [r3, #1]
    9f98:	4b2f      	ldr	r3, [pc, #188]	; (a058 <MiWiPROTasks+0x1c94>)
    9f9a:	785b      	ldrb	r3, [r3, #1]
    9f9c:	429a      	cmp	r2, r3
    9f9e:	d131      	bne.n	a004 <MiWiPROTasks+0x1c40>
                                        (TxBuffer[11] == MIWI_PRO_STACK_REPORT_TYPE) &&
    9fa0:	4b2c      	ldr	r3, [pc, #176]	; (a054 <MiWiPROTasks+0x1c90>)
    9fa2:	7adb      	ldrb	r3, [r3, #11]
                                    if( (destShortAddress.v[1] == myShortAddress.v[1]) &&
    9fa4:	2b00      	cmp	r3, #0
    9fa6:	d12d      	bne.n	a004 <MiWiPROTasks+0x1c40>
                                        (TxBuffer[12] == ACK_REPORT_TYPE) )
    9fa8:	4b2a      	ldr	r3, [pc, #168]	; (a054 <MiWiPROTasks+0x1c90>)
    9faa:	7b1b      	ldrb	r3, [r3, #12]
                                        (TxBuffer[11] == MIWI_PRO_STACK_REPORT_TYPE) &&
    9fac:	2b30      	cmp	r3, #48	; 0x30
    9fae:	d129      	bne.n	a004 <MiWiPROTasks+0x1c40>
                                        MTP.flags.Val = 0;
    9fb0:	4b2a      	ldr	r3, [pc, #168]	; (a05c <MiWiPROTasks+0x1c98>)
    9fb2:	2200      	movs	r2, #0
    9fb4:	701a      	strb	r2, [r3, #0]
                                        MTP.flags.bits.ackReq = 1;
    9fb6:	4b29      	ldr	r3, [pc, #164]	; (a05c <MiWiPROTasks+0x1c98>)
    9fb8:	781a      	ldrb	r2, [r3, #0]
    9fba:	2120      	movs	r1, #32
    9fbc:	430a      	orrs	r2, r1
    9fbe:	701a      	strb	r2, [r3, #0]
                                            tempShortAddress.Val = destShortAddress.Val;
    9fc0:	230c      	movs	r3, #12
    9fc2:	18fb      	adds	r3, r7, r3
    9fc4:	881a      	ldrh	r2, [r3, #0]
    9fc6:	4b26      	ldr	r3, [pc, #152]	; (a060 <MiWiPROTasks+0x1c9c>)
    9fc8:	801a      	strh	r2, [r3, #0]
                                            if( (i = SearchForShortAddress()) != 0xFF )
    9fca:	233f      	movs	r3, #63	; 0x3f
    9fcc:	18fc      	adds	r4, r7, r3
    9fce:	4b25      	ldr	r3, [pc, #148]	; (a064 <MiWiPROTasks+0x1ca0>)
    9fd0:	4798      	blx	r3
    9fd2:	0003      	movs	r3, r0
    9fd4:	7023      	strb	r3, [r4, #0]
    9fd6:	233f      	movs	r3, #63	; 0x3f
    9fd8:	18fb      	adds	r3, r7, r3
    9fda:	781b      	ldrb	r3, [r3, #0]
    9fdc:	2bff      	cmp	r3, #255	; 0xff
    9fde:	d025      	beq.n	a02c <MiWiPROTasks+0x1c68>
                                                MTP.DestAddress = ConnectionTable[i].Address;
    9fe0:	233f      	movs	r3, #63	; 0x3f
    9fe2:	18fb      	adds	r3, r7, r3
    9fe4:	781b      	ldrb	r3, [r3, #0]
    9fe6:	011a      	lsls	r2, r3, #4
    9fe8:	4b1f      	ldr	r3, [pc, #124]	; (a068 <MiWiPROTasks+0x1ca4>)
    9fea:	18d3      	adds	r3, r2, r3
    9fec:	1d1a      	adds	r2, r3, #4
    9fee:	4b1b      	ldr	r3, [pc, #108]	; (a05c <MiWiPROTasks+0x1c98>)
    9ff0:	605a      	str	r2, [r3, #4]
                                                MiMAC_SendPacket(MTP, TxBuffer, TxData);
    9ff2:	4b17      	ldr	r3, [pc, #92]	; (a050 <MiWiPROTasks+0x1c8c>)
    9ff4:	781b      	ldrb	r3, [r3, #0]
    9ff6:	4a17      	ldr	r2, [pc, #92]	; (a054 <MiWiPROTasks+0x1c90>)
    9ff8:	4918      	ldr	r1, [pc, #96]	; (a05c <MiWiPROTasks+0x1c98>)
    9ffa:	6808      	ldr	r0, [r1, #0]
    9ffc:	6849      	ldr	r1, [r1, #4]
    9ffe:	4c1b      	ldr	r4, [pc, #108]	; (a06c <MiWiPROTasks+0x1ca8>)
    a000:	47a0      	blx	r4
                                            if( (i = SearchForShortAddress()) != 0xFF )
    a002:	e013      	b.n	a02c <MiWiPROTasks+0x1c68>
                                        RouteMessage(destPANID, destShortAddress, MACRxPacket.flags.bits.secEn);
    a004:	4b0a      	ldr	r3, [pc, #40]	; (a030 <MiWiPROTasks+0x1c6c>)
    a006:	781b      	ldrb	r3, [r3, #0]
    a008:	071b      	lsls	r3, r3, #28
    a00a:	0fdb      	lsrs	r3, r3, #31
    a00c:	b2db      	uxtb	r3, r3
    a00e:	1e5a      	subs	r2, r3, #1
    a010:	4193      	sbcs	r3, r2
    a012:	b2da      	uxtb	r2, r3
    a014:	230c      	movs	r3, #12
    a016:	18fb      	adds	r3, r7, r3
    a018:	8819      	ldrh	r1, [r3, #0]
    a01a:	2318      	movs	r3, #24
    a01c:	18fb      	adds	r3, r7, r3
    a01e:	881b      	ldrh	r3, [r3, #0]
    a020:	1c18      	adds	r0, r3, #0
    a022:	4b13      	ldr	r3, [pc, #76]	; (a070 <MiWiPROTasks+0x1cac>)
    a024:	4798      	blx	r3
                    break;
    a026:	f001 f9b7 	bl	b398 <MiWiPROTasks+0x2fd4>
                            if(MACRxPacket.Payload[MIWI_PRO_HEADER_LEN] == MIWI_PRO_STACK_REPORT_TYPE)
    a02a:	46c0      	nop			; (mov r8, r8)
                    break;
    a02c:	f001 f9b4 	bl	b398 <MiWiPROTasks+0x2fd4>
    a030:	2000126c 	.word	0x2000126c
    a034:	200014b5 	.word	0x200014b5
    a038:	200012cc 	.word	0x200012cc
    a03c:	0000ebad 	.word	0x0000ebad
    a040:	20001144 	.word	0x20001144
    a044:	20000019 	.word	0x20000019
    a048:	200013c0 	.word	0x200013c0
    a04c:	20001504 	.word	0x20001504
    a050:	200012dc 	.word	0x200012dc
    a054:	200012e4 	.word	0x200012e4
    a058:	20001140 	.word	0x20001140
    a05c:	200012b8 	.word	0x200012b8
    a060:	200012e0 	.word	0x200012e0
    a064:	0000cb71 	.word	0x0000cb71
    a068:	20001150 	.word	0x20001150
    a06c:	0000fd09 	.word	0x0000fd09
    a070:	0000c189 	.word	0x0000c189
                            rxIndex = 4;
    a074:	232c      	movs	r3, #44	; 0x2c
    a076:	18fb      	adds	r3, r7, r3
    a078:	2204      	movs	r2, #4
    a07a:	701a      	strb	r2, [r3, #0]
						printf("RX Beacon...\n\r");
    a07c:	4be7      	ldr	r3, [pc, #924]	; (a41c <MiWiPROTasks+0x2058>)
    a07e:	0018      	movs	r0, r3
    a080:	4be7      	ldr	r3, [pc, #924]	; (a420 <MiWiPROTasks+0x205c>)
    a082:	4798      	blx	r3
                        if(MACRxPacket.Payload[rxIndex+4] != MIWI_PRO_PROTOCOL_ID)
    a084:	4be7      	ldr	r3, [pc, #924]	; (a424 <MiWiPROTasks+0x2060>)
    a086:	689a      	ldr	r2, [r3, #8]
    a088:	232c      	movs	r3, #44	; 0x2c
    a08a:	18fb      	adds	r3, r7, r3
    a08c:	781b      	ldrb	r3, [r3, #0]
    a08e:	3304      	adds	r3, #4
    a090:	18d3      	adds	r3, r2, r3
    a092:	781b      	ldrb	r3, [r3, #0]
    a094:	2b5d      	cmp	r3, #93	; 0x5d
    a096:	d001      	beq.n	a09c <MiWiPROTasks+0x1cd8>
    a098:	f001 f980 	bl	b39c <MiWiPROTasks+0x2fd8>
                        if(MiWiPROStateMachine.bits.searchingForNetwork)
    a09c:	4be2      	ldr	r3, [pc, #904]	; (a428 <MiWiPROTasks+0x2064>)
    a09e:	781b      	ldrb	r3, [r3, #0]
    a0a0:	2201      	movs	r2, #1
    a0a2:	4013      	ands	r3, r2
    a0a4:	b2db      	uxtb	r3, r3
    a0a6:	2b00      	cmp	r3, #0
    a0a8:	d101      	bne.n	a0ae <MiWiPROTasks+0x1cea>
    a0aa:	f001 f979 	bl	b3a0 <MiWiPROTasks+0x2fdc>
                                tempPANID.v[0] = MACRxPacket.Payload[0];
    a0ae:	4bdd      	ldr	r3, [pc, #884]	; (a424 <MiWiPROTasks+0x2060>)
    a0b0:	689b      	ldr	r3, [r3, #8]
    a0b2:	781a      	ldrb	r2, [r3, #0]
    a0b4:	4bdd      	ldr	r3, [pc, #884]	; (a42c <MiWiPROTasks+0x2068>)
    a0b6:	701a      	strb	r2, [r3, #0]
                                tempPANID.v[1] = MACRxPacket.Payload[1];
    a0b8:	4bda      	ldr	r3, [pc, #872]	; (a424 <MiWiPROTasks+0x2060>)
    a0ba:	689b      	ldr	r3, [r3, #8]
    a0bc:	785a      	ldrb	r2, [r3, #1]
    a0be:	4bdb      	ldr	r3, [pc, #876]	; (a42c <MiWiPROTasks+0x2068>)
    a0c0:	705a      	strb	r2, [r3, #1]
                                tempShortAddress.v[0] = MACRxPacket.Payload[2];
    a0c2:	4bd8      	ldr	r3, [pc, #864]	; (a424 <MiWiPROTasks+0x2060>)
    a0c4:	689b      	ldr	r3, [r3, #8]
    a0c6:	789a      	ldrb	r2, [r3, #2]
    a0c8:	4bd9      	ldr	r3, [pc, #868]	; (a430 <MiWiPROTasks+0x206c>)
    a0ca:	701a      	strb	r2, [r3, #0]
                                tempShortAddress.v[1] = MACRxPacket.Payload[3]; 
    a0cc:	4bd5      	ldr	r3, [pc, #852]	; (a424 <MiWiPROTasks+0x2060>)
    a0ce:	689b      	ldr	r3, [r3, #8]
    a0d0:	78da      	ldrb	r2, [r3, #3]
    a0d2:	4bd7      	ldr	r3, [pc, #860]	; (a430 <MiWiPROTasks+0x206c>)
    a0d4:	705a      	strb	r2, [r3, #1]
                            if(MACRxPacket.Payload[rxIndex] == 0xFF)
    a0d6:	4bd3      	ldr	r3, [pc, #844]	; (a424 <MiWiPROTasks+0x2060>)
    a0d8:	689a      	ldr	r2, [r3, #8]
    a0da:	232c      	movs	r3, #44	; 0x2c
    a0dc:	18fb      	adds	r3, r7, r3
    a0de:	781b      	ldrb	r3, [r3, #0]
    a0e0:	18d3      	adds	r3, r2, r3
    a0e2:	781b      	ldrb	r3, [r3, #0]
    a0e4:	2bff      	cmp	r3, #255	; 0xff
    a0e6:	d001      	beq.n	a0ec <MiWiPROTasks+0x1d28>
    a0e8:	f001 f95a 	bl	b3a0 <MiWiPROTasks+0x2fdc>
                                CapacityByte.Val = MACRxPacket.Payload[rxIndex+1];
    a0ec:	4bcd      	ldr	r3, [pc, #820]	; (a424 <MiWiPROTasks+0x2060>)
    a0ee:	689a      	ldr	r2, [r3, #8]
    a0f0:	232c      	movs	r3, #44	; 0x2c
    a0f2:	18fb      	adds	r3, r7, r3
    a0f4:	781b      	ldrb	r3, [r3, #0]
    a0f6:	3301      	adds	r3, #1
    a0f8:	18d3      	adds	r3, r2, r3
    a0fa:	781a      	ldrb	r2, [r3, #0]
    a0fc:	1d3b      	adds	r3, r7, #4
    a0fe:	701a      	strb	r2, [r3, #0]
                                if( (ActiveScanResultIndex < ACTIVE_SCAN_RESULT_SIZE) && (CapacityByte.bits.ConnMode <= ENABLE_PREV_CONN) )
    a100:	4bcc      	ldr	r3, [pc, #816]	; (a434 <MiWiPROTasks+0x2070>)
    a102:	781b      	ldrb	r3, [r3, #0]
    a104:	2b03      	cmp	r3, #3
    a106:	d901      	bls.n	a10c <MiWiPROTasks+0x1d48>
    a108:	f001 f94a 	bl	b3a0 <MiWiPROTasks+0x2fdc>
    a10c:	1d3b      	adds	r3, r7, #4
    a10e:	781b      	ldrb	r3, [r3, #0]
    a110:	069b      	lsls	r3, r3, #26
    a112:	0f9b      	lsrs	r3, r3, #30
    a114:	b2db      	uxtb	r3, r3
    a116:	2b01      	cmp	r3, #1
    a118:	dd01      	ble.n	a11e <MiWiPROTasks+0x1d5a>
    a11a:	f001 f941 	bl	b3a0 <MiWiPROTasks+0x2fdc>
                                    ActiveScanResults[ActiveScanResultIndex].Channel = currentChannel;
    a11e:	4bc5      	ldr	r3, [pc, #788]	; (a434 <MiWiPROTasks+0x2070>)
    a120:	781b      	ldrb	r3, [r3, #0]
    a122:	0019      	movs	r1, r3
    a124:	4bc4      	ldr	r3, [pc, #784]	; (a438 <MiWiPROTasks+0x2074>)
    a126:	7818      	ldrb	r0, [r3, #0]
    a128:	4ac4      	ldr	r2, [pc, #784]	; (a43c <MiWiPROTasks+0x2078>)
    a12a:	000b      	movs	r3, r1
    a12c:	00db      	lsls	r3, r3, #3
    a12e:	185b      	adds	r3, r3, r1
    a130:	005b      	lsls	r3, r3, #1
    a132:	1c01      	adds	r1, r0, #0
    a134:	5499      	strb	r1, [r3, r2]
                                    ActiveScanResults[ActiveScanResultIndex].RSSIValue = rxMessage.PacketRSSI;
    a136:	4bbf      	ldr	r3, [pc, #764]	; (a434 <MiWiPROTasks+0x2070>)
    a138:	781b      	ldrb	r3, [r3, #0]
    a13a:	0019      	movs	r1, r3
    a13c:	4bc0      	ldr	r3, [pc, #768]	; (a440 <MiWiPROTasks+0x207c>)
    a13e:	220e      	movs	r2, #14
    a140:	5e9b      	ldrsh	r3, [r3, r2]
    a142:	b2d8      	uxtb	r0, r3
    a144:	4abd      	ldr	r2, [pc, #756]	; (a43c <MiWiPROTasks+0x2078>)
    a146:	000b      	movs	r3, r1
    a148:	00db      	lsls	r3, r3, #3
    a14a:	185b      	adds	r3, r3, r1
    a14c:	005b      	lsls	r3, r3, #1
    a14e:	18d3      	adds	r3, r2, r3
    a150:	330c      	adds	r3, #12
    a152:	1c02      	adds	r2, r0, #0
    a154:	701a      	strb	r2, [r3, #0]
                                    ActiveScanResults[ActiveScanResultIndex].LQIValue = rxMessage.PacketLQI;
    a156:	4bb7      	ldr	r3, [pc, #732]	; (a434 <MiWiPROTasks+0x2070>)
    a158:	781b      	ldrb	r3, [r3, #0]
    a15a:	0019      	movs	r1, r3
    a15c:	4bb8      	ldr	r3, [pc, #736]	; (a440 <MiWiPROTasks+0x207c>)
    a15e:	7c18      	ldrb	r0, [r3, #16]
    a160:	4ab6      	ldr	r2, [pc, #728]	; (a43c <MiWiPROTasks+0x2078>)
    a162:	000b      	movs	r3, r1
    a164:	00db      	lsls	r3, r3, #3
    a166:	185b      	adds	r3, r3, r1
    a168:	005b      	lsls	r3, r3, #1
    a16a:	18d3      	adds	r3, r2, r3
    a16c:	330d      	adds	r3, #13
    a16e:	1c02      	adds	r2, r0, #0
    a170:	701a      	strb	r2, [r3, #0]
                                    ActiveScanResults[ActiveScanResultIndex].PANID.Val = tempPANID.Val;
    a172:	4bb0      	ldr	r3, [pc, #704]	; (a434 <MiWiPROTasks+0x2070>)
    a174:	781b      	ldrb	r3, [r3, #0]
    a176:	0019      	movs	r1, r3
    a178:	4bac      	ldr	r3, [pc, #688]	; (a42c <MiWiPROTasks+0x2068>)
    a17a:	8818      	ldrh	r0, [r3, #0]
    a17c:	4aaf      	ldr	r2, [pc, #700]	; (a43c <MiWiPROTasks+0x2078>)
    a17e:	000b      	movs	r3, r1
    a180:	00db      	lsls	r3, r3, #3
    a182:	185b      	adds	r3, r3, r1
    a184:	005b      	lsls	r3, r3, #1
    a186:	18d3      	adds	r3, r2, r3
    a188:	330a      	adds	r3, #10
    a18a:	1c02      	adds	r2, r0, #0
    a18c:	801a      	strh	r2, [r3, #0]
                                    ActiveScanResults[ActiveScanResultIndex].Capability.Val = 0;
    a18e:	4ba9      	ldr	r3, [pc, #676]	; (a434 <MiWiPROTasks+0x2070>)
    a190:	781b      	ldrb	r3, [r3, #0]
    a192:	0019      	movs	r1, r3
    a194:	4aa9      	ldr	r2, [pc, #676]	; (a43c <MiWiPROTasks+0x2078>)
    a196:	000b      	movs	r3, r1
    a198:	00db      	lsls	r3, r3, #3
    a19a:	185b      	adds	r3, r3, r1
    a19c:	005b      	lsls	r3, r3, #1
    a19e:	18d3      	adds	r3, r2, r3
    a1a0:	330e      	adds	r3, #14
    a1a2:	2200      	movs	r2, #0
    a1a4:	701a      	strb	r2, [r3, #0]
                                    ActiveScanResults[ActiveScanResultIndex].Capability.bits.Direct = 1;
    a1a6:	4ba3      	ldr	r3, [pc, #652]	; (a434 <MiWiPROTasks+0x2070>)
    a1a8:	781b      	ldrb	r3, [r3, #0]
    a1aa:	0018      	movs	r0, r3
    a1ac:	4aa3      	ldr	r2, [pc, #652]	; (a43c <MiWiPROTasks+0x2078>)
    a1ae:	2108      	movs	r1, #8
    a1b0:	0003      	movs	r3, r0
    a1b2:	00db      	lsls	r3, r3, #3
    a1b4:	181b      	adds	r3, r3, r0
    a1b6:	005b      	lsls	r3, r3, #1
    a1b8:	18d3      	adds	r3, r2, r3
    a1ba:	185b      	adds	r3, r3, r1
    a1bc:	799a      	ldrb	r2, [r3, #6]
    a1be:	2140      	movs	r1, #64	; 0x40
    a1c0:	430a      	orrs	r2, r1
    a1c2:	719a      	strb	r2, [r3, #6]
                                    ActiveScanResults[ActiveScanResultIndex].Capability.bits.Role = CapacityByte.bits.Role;
    a1c4:	4b9b      	ldr	r3, [pc, #620]	; (a434 <MiWiPROTasks+0x2070>)
    a1c6:	781b      	ldrb	r3, [r3, #0]
    a1c8:	001c      	movs	r4, r3
    a1ca:	1d3b      	adds	r3, r7, #4
    a1cc:	781b      	ldrb	r3, [r3, #0]
    a1ce:	075b      	lsls	r3, r3, #29
    a1d0:	0f9b      	lsrs	r3, r3, #30
    a1d2:	b2da      	uxtb	r2, r3
    a1d4:	4999      	ldr	r1, [pc, #612]	; (a43c <MiWiPROTasks+0x2078>)
    a1d6:	2008      	movs	r0, #8
    a1d8:	0023      	movs	r3, r4
    a1da:	00db      	lsls	r3, r3, #3
    a1dc:	191b      	adds	r3, r3, r4
    a1de:	005b      	lsls	r3, r3, #1
    a1e0:	18cb      	adds	r3, r1, r3
    a1e2:	181b      	adds	r3, r3, r0
    a1e4:	2103      	movs	r1, #3
    a1e6:	400a      	ands	r2, r1
    a1e8:	0010      	movs	r0, r2
    a1ea:	799a      	ldrb	r2, [r3, #6]
    a1ec:	2103      	movs	r1, #3
    a1ee:	438a      	bics	r2, r1
    a1f0:	1c11      	adds	r1, r2, #0
    a1f2:	1c02      	adds	r2, r0, #0
    a1f4:	430a      	orrs	r2, r1
    a1f6:	719a      	strb	r2, [r3, #6]
                                    if( CapacityByte.bits.Security )
    a1f8:	1d3b      	adds	r3, r7, #4
    a1fa:	781b      	ldrb	r3, [r3, #0]
    a1fc:	2208      	movs	r2, #8
    a1fe:	4013      	ands	r3, r2
    a200:	b2db      	uxtb	r3, r3
    a202:	2b00      	cmp	r3, #0
    a204:	d00e      	beq.n	a224 <MiWiPROTasks+0x1e60>
                                        ActiveScanResults[ActiveScanResultIndex].Capability.bits.SecurityEn = 1;
    a206:	4b8b      	ldr	r3, [pc, #556]	; (a434 <MiWiPROTasks+0x2070>)
    a208:	781b      	ldrb	r3, [r3, #0]
    a20a:	0018      	movs	r0, r3
    a20c:	4a8b      	ldr	r2, [pc, #556]	; (a43c <MiWiPROTasks+0x2078>)
    a20e:	2108      	movs	r1, #8
    a210:	0003      	movs	r3, r0
    a212:	00db      	lsls	r3, r3, #3
    a214:	181b      	adds	r3, r3, r0
    a216:	005b      	lsls	r3, r3, #1
    a218:	18d3      	adds	r3, r2, r3
    a21a:	185b      	adds	r3, r3, r1
    a21c:	799a      	ldrb	r2, [r3, #6]
    a21e:	2108      	movs	r1, #8
    a220:	430a      	orrs	r2, r1
    a222:	719a      	strb	r2, [r3, #6]
                                    if( CapacityByte.bits.ConnMode <= ENABLE_PREV_CONN )
    a224:	1d3b      	adds	r3, r7, #4
    a226:	781b      	ldrb	r3, [r3, #0]
    a228:	069b      	lsls	r3, r3, #26
    a22a:	0f9b      	lsrs	r3, r3, #30
    a22c:	b2db      	uxtb	r3, r3
    a22e:	2b01      	cmp	r3, #1
    a230:	dc0e      	bgt.n	a250 <MiWiPROTasks+0x1e8c>
                                        ActiveScanResults[ActiveScanResultIndex].Capability.bits.AllowJoin = 1;
    a232:	4b80      	ldr	r3, [pc, #512]	; (a434 <MiWiPROTasks+0x2070>)
    a234:	781b      	ldrb	r3, [r3, #0]
    a236:	0018      	movs	r0, r3
    a238:	4a80      	ldr	r2, [pc, #512]	; (a43c <MiWiPROTasks+0x2078>)
    a23a:	2108      	movs	r1, #8
    a23c:	0003      	movs	r3, r0
    a23e:	00db      	lsls	r3, r3, #3
    a240:	181b      	adds	r3, r3, r0
    a242:	005b      	lsls	r3, r3, #1
    a244:	18d3      	adds	r3, r2, r3
    a246:	185b      	adds	r3, r3, r1
    a248:	799a      	ldrb	r2, [r3, #6]
    a24a:	2120      	movs	r1, #32
    a24c:	430a      	orrs	r2, r1
    a24e:	719a      	strb	r2, [r3, #6]
                                        for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    a250:	233f      	movs	r3, #63	; 0x3f
    a252:	18fb      	adds	r3, r7, r3
    a254:	2200      	movs	r2, #0
    a256:	701a      	strb	r2, [r3, #0]
    a258:	e01d      	b.n	a296 <MiWiPROTasks+0x1ed2>
                                            ActiveScanResults[ActiveScanResultIndex].Address[i] = rxMessage.SourceAddress[i];
    a25a:	4b76      	ldr	r3, [pc, #472]	; (a434 <MiWiPROTasks+0x2070>)
    a25c:	781b      	ldrb	r3, [r3, #0]
    a25e:	0018      	movs	r0, r3
    a260:	233f      	movs	r3, #63	; 0x3f
    a262:	18fb      	adds	r3, r7, r3
    a264:	781a      	ldrb	r2, [r3, #0]
    a266:	4b76      	ldr	r3, [pc, #472]	; (a440 <MiWiPROTasks+0x207c>)
    a268:	6859      	ldr	r1, [r3, #4]
    a26a:	233f      	movs	r3, #63	; 0x3f
    a26c:	18fb      	adds	r3, r7, r3
    a26e:	781b      	ldrb	r3, [r3, #0]
    a270:	18cb      	adds	r3, r1, r3
    a272:	781c      	ldrb	r4, [r3, #0]
    a274:	4971      	ldr	r1, [pc, #452]	; (a43c <MiWiPROTasks+0x2078>)
    a276:	0003      	movs	r3, r0
    a278:	00db      	lsls	r3, r3, #3
    a27a:	181b      	adds	r3, r3, r0
    a27c:	005b      	lsls	r3, r3, #1
    a27e:	18cb      	adds	r3, r1, r3
    a280:	189b      	adds	r3, r3, r2
    a282:	3301      	adds	r3, #1
    a284:	1c22      	adds	r2, r4, #0
    a286:	701a      	strb	r2, [r3, #0]
                                        for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    a288:	233f      	movs	r3, #63	; 0x3f
    a28a:	18fb      	adds	r3, r7, r3
    a28c:	781a      	ldrb	r2, [r3, #0]
    a28e:	233f      	movs	r3, #63	; 0x3f
    a290:	18fb      	adds	r3, r7, r3
    a292:	3201      	adds	r2, #1
    a294:	701a      	strb	r2, [r3, #0]
    a296:	233f      	movs	r3, #63	; 0x3f
    a298:	18fb      	adds	r3, r7, r3
    a29a:	781b      	ldrb	r3, [r3, #0]
    a29c:	2b07      	cmp	r3, #7
    a29e:	d9dc      	bls.n	a25a <MiWiPROTasks+0x1e96>
                                        for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    a2a0:	233f      	movs	r3, #63	; 0x3f
    a2a2:	18fb      	adds	r3, r7, r3
    a2a4:	2200      	movs	r2, #0
    a2a6:	701a      	strb	r2, [r3, #0]
    a2a8:	e022      	b.n	a2f0 <MiWiPROTasks+0x1f2c>
                                            ActiveScanResults[ActiveScanResultIndex].PeerInfo[i] = MACRxPacket.Payload[rxIndex+6+i];
    a2aa:	4b62      	ldr	r3, [pc, #392]	; (a434 <MiWiPROTasks+0x2070>)
    a2ac:	781b      	ldrb	r3, [r3, #0]
    a2ae:	001c      	movs	r4, r3
    a2b0:	233f      	movs	r3, #63	; 0x3f
    a2b2:	18fb      	adds	r3, r7, r3
    a2b4:	781a      	ldrb	r2, [r3, #0]
    a2b6:	4b5b      	ldr	r3, [pc, #364]	; (a424 <MiWiPROTasks+0x2060>)
    a2b8:	689b      	ldr	r3, [r3, #8]
    a2ba:	212c      	movs	r1, #44	; 0x2c
    a2bc:	1879      	adds	r1, r7, r1
    a2be:	7809      	ldrb	r1, [r1, #0]
    a2c0:	1d88      	adds	r0, r1, #6
    a2c2:	213f      	movs	r1, #63	; 0x3f
    a2c4:	1879      	adds	r1, r7, r1
    a2c6:	7809      	ldrb	r1, [r1, #0]
    a2c8:	1841      	adds	r1, r0, r1
    a2ca:	185b      	adds	r3, r3, r1
    a2cc:	7818      	ldrb	r0, [r3, #0]
    a2ce:	495b      	ldr	r1, [pc, #364]	; (a43c <MiWiPROTasks+0x2078>)
    a2d0:	0023      	movs	r3, r4
    a2d2:	00db      	lsls	r3, r3, #3
    a2d4:	191b      	adds	r3, r3, r4
    a2d6:	005b      	lsls	r3, r3, #1
    a2d8:	18cb      	adds	r3, r1, r3
    a2da:	189b      	adds	r3, r3, r2
    a2dc:	330f      	adds	r3, #15
    a2de:	1c02      	adds	r2, r0, #0
    a2e0:	701a      	strb	r2, [r3, #0]
                                        for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    a2e2:	233f      	movs	r3, #63	; 0x3f
    a2e4:	18fb      	adds	r3, r7, r3
    a2e6:	781a      	ldrb	r2, [r3, #0]
    a2e8:	233f      	movs	r3, #63	; 0x3f
    a2ea:	18fb      	adds	r3, r7, r3
    a2ec:	3201      	adds	r2, #1
    a2ee:	701a      	strb	r2, [r3, #0]
    a2f0:	233f      	movs	r3, #63	; 0x3f
    a2f2:	18fb      	adds	r3, r7, r3
    a2f4:	781b      	ldrb	r3, [r3, #0]
    a2f6:	2b01      	cmp	r3, #1
    a2f8:	d9d7      	bls.n	a2aa <MiWiPROTasks+0x1ee6>
                                    ActiveScanResultIndex++;
    a2fa:	4b4e      	ldr	r3, [pc, #312]	; (a434 <MiWiPROTasks+0x2070>)
    a2fc:	781b      	ldrb	r3, [r3, #0]
    a2fe:	3301      	adds	r3, #1
    a300:	b2da      	uxtb	r2, r3
    a302:	4b4c      	ldr	r3, [pc, #304]	; (a434 <MiWiPROTasks+0x2070>)
    a304:	701a      	strb	r2, [r3, #0]
                    break;
    a306:	f001 f84b 	bl	b3a0 <MiWiPROTasks+0x2fdc>
                    switch(MACRxPacket.Payload[0])
    a30a:	4b46      	ldr	r3, [pc, #280]	; (a424 <MiWiPROTasks+0x2060>)
    a30c:	689b      	ldr	r3, [r3, #8]
    a30e:	781b      	ldrb	r3, [r3, #0]
    a310:	2b02      	cmp	r3, #2
    a312:	d100      	bne.n	a316 <MiWiPROTasks+0x1f52>
    a314:	e32c      	b.n	a970 <MiWiPROTasks+0x25ac>
    a316:	dc03      	bgt.n	a320 <MiWiPROTasks+0x1f5c>
    a318:	2b01      	cmp	r3, #1
    a31a:	d00b      	beq.n	a334 <MiWiPROTasks+0x1f70>
                            break;
    a31c:	f001 f833 	bl	b386 <MiWiPROTasks+0x2fc2>
                    switch(MACRxPacket.Payload[0])
    a320:	2b03      	cmp	r3, #3
    a322:	d101      	bne.n	a328 <MiWiPROTasks+0x1f64>
    a324:	f000 fc37 	bl	ab96 <MiWiPROTasks+0x27d2>
    a328:	2b07      	cmp	r3, #7
    a32a:	d101      	bne.n	a330 <MiWiPROTasks+0x1f6c>
    a32c:	f000 ff42 	bl	b1b4 <MiWiPROTasks+0x2df0>
                            break;
    a330:	f001 f829 	bl	b386 <MiWiPROTasks+0x2fc2>
                                uint8_t associateStatus = ASSOCIATION_SUCCESSFUL;
    a334:	2336      	movs	r3, #54	; 0x36
    a336:	18fb      	adds	r3, r7, r3
    a338:	2200      	movs	r2, #0
    a33a:	701a      	strb	r2, [r3, #0]
                                if( ConnMode > ENABLE_PREV_CONN )
    a33c:	4b41      	ldr	r3, [pc, #260]	; (a444 <MiWiPROTasks+0x2080>)
    a33e:	781b      	ldrb	r3, [r3, #0]
    a340:	2b01      	cmp	r3, #1
    a342:	d901      	bls.n	a348 <MiWiPROTasks+0x1f84>
    a344:	f001 f80c 	bl	b360 <MiWiPROTasks+0x2f9c>
                                if( MiWiPROStateMachine.bits.memberOfNetwork == 0 )
    a348:	4b37      	ldr	r3, [pc, #220]	; (a428 <MiWiPROTasks+0x2064>)
    a34a:	781b      	ldrb	r3, [r3, #0]
    a34c:	2202      	movs	r2, #2
    a34e:	4013      	ands	r3, r2
    a350:	b2db      	uxtb	r3, r3
    a352:	2b00      	cmp	r3, #0
    a354:	d101      	bne.n	a35a <MiWiPROTasks+0x1f96>
    a356:	f001 f805 	bl	b364 <MiWiPROTasks+0x2fa0>
                                for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    a35a:	233f      	movs	r3, #63	; 0x3f
    a35c:	18fb      	adds	r3, r7, r3
    a35e:	2200      	movs	r2, #0
    a360:	701a      	strb	r2, [r3, #0]
    a362:	e012      	b.n	a38a <MiWiPROTasks+0x1fc6>
                                    tempLongAddress[i] = MACRxPacket.SourceAddress[i];
    a364:	233f      	movs	r3, #63	; 0x3f
    a366:	18fb      	adds	r3, r7, r3
    a368:	781a      	ldrb	r2, [r3, #0]
    a36a:	4b2e      	ldr	r3, [pc, #184]	; (a424 <MiWiPROTasks+0x2060>)
    a36c:	6859      	ldr	r1, [r3, #4]
    a36e:	233f      	movs	r3, #63	; 0x3f
    a370:	18fb      	adds	r3, r7, r3
    a372:	781b      	ldrb	r3, [r3, #0]
    a374:	18cb      	adds	r3, r1, r3
    a376:	7819      	ldrb	r1, [r3, #0]
    a378:	4b33      	ldr	r3, [pc, #204]	; (a448 <MiWiPROTasks+0x2084>)
    a37a:	5499      	strb	r1, [r3, r2]
                                for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    a37c:	233f      	movs	r3, #63	; 0x3f
    a37e:	18fb      	adds	r3, r7, r3
    a380:	781a      	ldrb	r2, [r3, #0]
    a382:	233f      	movs	r3, #63	; 0x3f
    a384:	18fb      	adds	r3, r7, r3
    a386:	3201      	adds	r2, #1
    a388:	701a      	strb	r2, [r3, #0]
    a38a:	233f      	movs	r3, #63	; 0x3f
    a38c:	18fb      	adds	r3, r7, r3
    a38e:	781b      	ldrb	r3, [r3, #0]
    a390:	2b07      	cmp	r3, #7
    a392:	d9e7      	bls.n	a364 <MiWiPROTasks+0x1fa0>
                                handle = SearchForLongAddress();
    a394:	2337      	movs	r3, #55	; 0x37
    a396:	18fc      	adds	r4, r7, r3
    a398:	4b2c      	ldr	r3, [pc, #176]	; (a44c <MiWiPROTasks+0x2088>)
    a39a:	4798      	blx	r3
    a39c:	0003      	movs	r3, r0
    a39e:	7023      	strb	r3, [r4, #0]
                                if( handle != 0xFF && ConnectionTable[handle].status.bits.isFamily && handle != myParent && 
    a3a0:	2337      	movs	r3, #55	; 0x37
    a3a2:	18fb      	adds	r3, r7, r3
    a3a4:	781b      	ldrb	r3, [r3, #0]
    a3a6:	2bff      	cmp	r3, #255	; 0xff
    a3a8:	d100      	bne.n	a3ac <MiWiPROTasks+0x1fe8>
    a3aa:	e077      	b.n	a49c <MiWiPROTasks+0x20d8>
    a3ac:	2337      	movs	r3, #55	; 0x37
    a3ae:	18fb      	adds	r3, r7, r3
    a3b0:	781b      	ldrb	r3, [r3, #0]
    a3b2:	4a27      	ldr	r2, [pc, #156]	; (a450 <MiWiPROTasks+0x208c>)
    a3b4:	2108      	movs	r1, #8
    a3b6:	011b      	lsls	r3, r3, #4
    a3b8:	18d3      	adds	r3, r2, r3
    a3ba:	185b      	adds	r3, r3, r1
    a3bc:	791b      	ldrb	r3, [r3, #4]
    a3be:	069b      	lsls	r3, r3, #26
    a3c0:	0fdb      	lsrs	r3, r3, #31
    a3c2:	b2db      	uxtb	r3, r3
    a3c4:	2b00      	cmp	r3, #0
    a3c6:	d069      	beq.n	a49c <MiWiPROTasks+0x20d8>
    a3c8:	4b22      	ldr	r3, [pc, #136]	; (a454 <MiWiPROTasks+0x2090>)
    a3ca:	781b      	ldrb	r3, [r3, #0]
    a3cc:	2237      	movs	r2, #55	; 0x37
    a3ce:	18ba      	adds	r2, r7, r2
    a3d0:	7812      	ldrb	r2, [r2, #0]
    a3d2:	429a      	cmp	r2, r3
    a3d4:	d062      	beq.n	a49c <MiWiPROTasks+0x20d8>
                                    ConnectionTable[handle].status.bits.shortAddressValid )
    a3d6:	2337      	movs	r3, #55	; 0x37
    a3d8:	18fb      	adds	r3, r7, r3
    a3da:	781b      	ldrb	r3, [r3, #0]
    a3dc:	4a1c      	ldr	r2, [pc, #112]	; (a450 <MiWiPROTasks+0x208c>)
    a3de:	2108      	movs	r1, #8
    a3e0:	011b      	lsls	r3, r3, #4
    a3e2:	18d3      	adds	r3, r2, r3
    a3e4:	185b      	adds	r3, r3, r1
    a3e6:	791b      	ldrb	r3, [r3, #4]
    a3e8:	071b      	lsls	r3, r3, #28
    a3ea:	0fdb      	lsrs	r3, r3, #31
    a3ec:	b2db      	uxtb	r3, r3
                                if( handle != 0xFF && ConnectionTable[handle].status.bits.isFamily && handle != myParent && 
    a3ee:	2b00      	cmp	r3, #0
    a3f0:	d054      	beq.n	a49c <MiWiPROTasks+0x20d8>
                                    tempShortAddress.Val = ConnectionTable[handle].AltAddress.Val;
    a3f2:	2337      	movs	r3, #55	; 0x37
    a3f4:	18fb      	adds	r3, r7, r3
    a3f6:	781b      	ldrb	r3, [r3, #0]
    a3f8:	4a15      	ldr	r2, [pc, #84]	; (a450 <MiWiPROTasks+0x208c>)
    a3fa:	011b      	lsls	r3, r3, #4
    a3fc:	18d3      	adds	r3, r2, r3
    a3fe:	3302      	adds	r3, #2
    a400:	881a      	ldrh	r2, [r3, #0]
    a402:	4b0b      	ldr	r3, [pc, #44]	; (a430 <MiWiPROTasks+0x206c>)
    a404:	801a      	strh	r2, [r3, #0]
                                    if( ConnMode > ENABLE_PREV_CONN )
    a406:	4b0f      	ldr	r3, [pc, #60]	; (a444 <MiWiPROTasks+0x2080>)
    a408:	781b      	ldrb	r3, [r3, #0]
    a40a:	2b01      	cmp	r3, #1
    a40c:	d901      	bls.n	a412 <MiWiPROTasks+0x204e>
    a40e:	f000 ffab 	bl	b368 <MiWiPROTasks+0x2fa4>
                                        for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    a412:	233f      	movs	r3, #63	; 0x3f
    a414:	18fb      	adds	r3, r7, r3
    a416:	2200      	movs	r2, #0
    a418:	701a      	strb	r2, [r3, #0]
    a41a:	e039      	b.n	a490 <MiWiPROTasks+0x20cc>
    a41c:	0001cc90 	.word	0x0001cc90
    a420:	0001782d 	.word	0x0001782d
    a424:	2000126c 	.word	0x2000126c
    a428:	20001144 	.word	0x20001144
    a42c:	200012c0 	.word	0x200012c0
    a430:	200012e0 	.word	0x200012e0
    a434:	20001519 	.word	0x20001519
    a438:	200014b5 	.word	0x200014b5
    a43c:	200014b8 	.word	0x200014b8
    a440:	20001504 	.word	0x20001504
    a444:	20000018 	.word	0x20000018
    a448:	20001288 	.word	0x20001288
    a44c:	0000cd35 	.word	0x0000cd35
    a450:	20001150 	.word	0x20001150
    a454:	200014b4 	.word	0x200014b4
                                            ConnectionTable[handle].PeerInfo[i] = MACRxPacket.Payload[2+i];
    a458:	2337      	movs	r3, #55	; 0x37
    a45a:	18fb      	adds	r3, r7, r3
    a45c:	7818      	ldrb	r0, [r3, #0]
    a45e:	233f      	movs	r3, #63	; 0x3f
    a460:	18fb      	adds	r3, r7, r3
    a462:	781a      	ldrb	r2, [r3, #0]
    a464:	4bd7      	ldr	r3, [pc, #860]	; (a7c4 <MiWiPROTasks+0x2400>)
    a466:	689b      	ldr	r3, [r3, #8]
    a468:	213f      	movs	r1, #63	; 0x3f
    a46a:	1879      	adds	r1, r7, r1
    a46c:	7809      	ldrb	r1, [r1, #0]
    a46e:	3102      	adds	r1, #2
    a470:	185b      	adds	r3, r3, r1
    a472:	781c      	ldrb	r4, [r3, #0]
    a474:	49d4      	ldr	r1, [pc, #848]	; (a7c8 <MiWiPROTasks+0x2404>)
    a476:	0103      	lsls	r3, r0, #4
    a478:	18cb      	adds	r3, r1, r3
    a47a:	189b      	adds	r3, r3, r2
    a47c:	330d      	adds	r3, #13
    a47e:	1c22      	adds	r2, r4, #0
    a480:	701a      	strb	r2, [r3, #0]
                                        for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    a482:	233f      	movs	r3, #63	; 0x3f
    a484:	18fb      	adds	r3, r7, r3
    a486:	781a      	ldrb	r2, [r3, #0]
    a488:	233f      	movs	r3, #63	; 0x3f
    a48a:	18fb      	adds	r3, r7, r3
    a48c:	3201      	adds	r2, #1
    a48e:	701a      	strb	r2, [r3, #0]
    a490:	233f      	movs	r3, #63	; 0x3f
    a492:	18fb      	adds	r3, r7, r3
    a494:	781b      	ldrb	r3, [r3, #0]
    a496:	2b01      	cmp	r3, #1
    a498:	d9de      	bls.n	a458 <MiWiPROTasks+0x2094>
                                    goto START_ASSOCIATION_RESPONSE;
    a49a:	e229      	b.n	a8f0 <MiWiPROTasks+0x252c>
                                if( ConnMode > ENABLE_ALL_CONN )
    a49c:	4bcb      	ldr	r3, [pc, #812]	; (a7cc <MiWiPROTasks+0x2408>)
    a49e:	781b      	ldrb	r3, [r3, #0]
    a4a0:	2b00      	cmp	r3, #0
    a4a2:	d001      	beq.n	a4a8 <MiWiPROTasks+0x20e4>
    a4a4:	f000 ff62 	bl	b36c <MiWiPROTasks+0x2fa8>
                                tempNodeStatus.Val = 0xA7;
    a4a8:	4bc9      	ldr	r3, [pc, #804]	; (a7d0 <MiWiPROTasks+0x240c>)
    a4aa:	22a7      	movs	r2, #167	; 0xa7
    a4ac:	701a      	strb	r2, [r3, #0]
                                tempPANID.Val = myPANID.Val;
    a4ae:	4bc9      	ldr	r3, [pc, #804]	; (a7d4 <MiWiPROTasks+0x2410>)
    a4b0:	881a      	ldrh	r2, [r3, #0]
    a4b2:	4bc9      	ldr	r3, [pc, #804]	; (a7d8 <MiWiPROTasks+0x2414>)
    a4b4:	801a      	strh	r2, [r3, #0]
                                handle = AddNodeToNetworkTable();
    a4b6:	2337      	movs	r3, #55	; 0x37
    a4b8:	18fc      	adds	r4, r7, r3
    a4ba:	4bc8      	ldr	r3, [pc, #800]	; (a7dc <MiWiPROTasks+0x2418>)
    a4bc:	4798      	blx	r3
    a4be:	0003      	movs	r3, r0
    a4c0:	7023      	strb	r3, [r4, #0]
                                if( handle == 0xFF )
    a4c2:	2337      	movs	r3, #55	; 0x37
    a4c4:	18fb      	adds	r3, r7, r3
    a4c6:	781b      	ldrb	r3, [r3, #0]
    a4c8:	2bff      	cmp	r3, #255	; 0xff
    a4ca:	d10c      	bne.n	a4e6 <MiWiPROTasks+0x2122>
									printf("Network Full...\n\r");
    a4cc:	4bc4      	ldr	r3, [pc, #784]	; (a7e0 <MiWiPROTasks+0x241c>)
    a4ce:	0018      	movs	r0, r3
    a4d0:	4bc4      	ldr	r3, [pc, #784]	; (a7e4 <MiWiPROTasks+0x2420>)
    a4d2:	4798      	blx	r3
                                    associateStatus = ASSOCIATION_PAN_FULL;
    a4d4:	2336      	movs	r3, #54	; 0x36
    a4d6:	18fb      	adds	r3, r7, r3
    a4d8:	2201      	movs	r2, #1
    a4da:	701a      	strb	r2, [r3, #0]
                                    tempShortAddress.Val = 0xFFFE;
    a4dc:	4bc2      	ldr	r3, [pc, #776]	; (a7e8 <MiWiPROTasks+0x2424>)
    a4de:	2202      	movs	r2, #2
    a4e0:	4252      	negs	r2, r2
    a4e2:	801a      	strh	r2, [r3, #0]
                                    goto START_ASSOCIATION_RESPONSE;
    a4e4:	e204      	b.n	a8f0 <MiWiPROTasks+0x252c>
                                    for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    a4e6:	233f      	movs	r3, #63	; 0x3f
    a4e8:	18fb      	adds	r3, r7, r3
    a4ea:	2200      	movs	r2, #0
    a4ec:	701a      	strb	r2, [r3, #0]
    a4ee:	e01b      	b.n	a528 <MiWiPROTasks+0x2164>
                                        ConnectionTable[handle].PeerInfo[i] = MACRxPacket.Payload[2+i];
    a4f0:	2337      	movs	r3, #55	; 0x37
    a4f2:	18fb      	adds	r3, r7, r3
    a4f4:	7818      	ldrb	r0, [r3, #0]
    a4f6:	233f      	movs	r3, #63	; 0x3f
    a4f8:	18fb      	adds	r3, r7, r3
    a4fa:	781a      	ldrb	r2, [r3, #0]
    a4fc:	4bb1      	ldr	r3, [pc, #708]	; (a7c4 <MiWiPROTasks+0x2400>)
    a4fe:	689b      	ldr	r3, [r3, #8]
    a500:	213f      	movs	r1, #63	; 0x3f
    a502:	1879      	adds	r1, r7, r1
    a504:	7809      	ldrb	r1, [r1, #0]
    a506:	3102      	adds	r1, #2
    a508:	185b      	adds	r3, r3, r1
    a50a:	781c      	ldrb	r4, [r3, #0]
    a50c:	49ae      	ldr	r1, [pc, #696]	; (a7c8 <MiWiPROTasks+0x2404>)
    a50e:	0103      	lsls	r3, r0, #4
    a510:	18cb      	adds	r3, r1, r3
    a512:	189b      	adds	r3, r3, r2
    a514:	330d      	adds	r3, #13
    a516:	1c22      	adds	r2, r4, #0
    a518:	701a      	strb	r2, [r3, #0]
                                    for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    a51a:	233f      	movs	r3, #63	; 0x3f
    a51c:	18fb      	adds	r3, r7, r3
    a51e:	781a      	ldrb	r2, [r3, #0]
    a520:	233f      	movs	r3, #63	; 0x3f
    a522:	18fb      	adds	r3, r7, r3
    a524:	3201      	adds	r2, #1
    a526:	701a      	strb	r2, [r3, #0]
    a528:	233f      	movs	r3, #63	; 0x3f
    a52a:	18fb      	adds	r3, r7, r3
    a52c:	781b      	ldrb	r3, [r3, #0]
    a52e:	2b01      	cmp	r3, #1
    a530:	d9de      	bls.n	a4f0 <MiWiPROTasks+0x212c>
                                if( MACRxPacket.Payload[1] & 0x40 )
    a532:	4ba4      	ldr	r3, [pc, #656]	; (a7c4 <MiWiPROTasks+0x2400>)
    a534:	689b      	ldr	r3, [r3, #8]
    a536:	3301      	adds	r3, #1
    a538:	781b      	ldrb	r3, [r3, #0]
    a53a:	001a      	movs	r2, r3
    a53c:	2340      	movs	r3, #64	; 0x40
    a53e:	4013      	ands	r3, r2
    a540:	d100      	bne.n	a544 <MiWiPROTasks+0x2180>
    a542:	e0fe      	b.n	a742 <MiWiPROTasks+0x237e>
                                    if( role != ROLE_PAN_COORDINATOR )
    a544:	4ba9      	ldr	r3, [pc, #676]	; (a7ec <MiWiPROTasks+0x2428>)
    a546:	781b      	ldrb	r3, [r3, #0]
    a548:	2b02      	cmp	r3, #2
    a54a:	d067      	beq.n	a61c <MiWiPROTasks+0x2258>
                                        MiApp_FlushTx();
    a54c:	4ba8      	ldr	r3, [pc, #672]	; (a7f0 <MiWiPROTasks+0x242c>)
    a54e:	220b      	movs	r2, #11
    a550:	701a      	strb	r2, [r3, #0]
                                        MiApp_WriteData(MIWI_PRO_STACK_REPORT_TYPE);    //Report Type
    a552:	4ba7      	ldr	r3, [pc, #668]	; (a7f0 <MiWiPROTasks+0x242c>)
    a554:	781b      	ldrb	r3, [r3, #0]
    a556:	1c5a      	adds	r2, r3, #1
    a558:	b2d1      	uxtb	r1, r2
    a55a:	4aa5      	ldr	r2, [pc, #660]	; (a7f0 <MiWiPROTasks+0x242c>)
    a55c:	7011      	strb	r1, [r2, #0]
    a55e:	001a      	movs	r2, r3
    a560:	4ba4      	ldr	r3, [pc, #656]	; (a7f4 <MiWiPROTasks+0x2430>)
    a562:	2100      	movs	r1, #0
    a564:	5499      	strb	r1, [r3, r2]
                                        MiApp_WriteData(COORDINATOR_REPORT);        //Report ID
    a566:	4ba2      	ldr	r3, [pc, #648]	; (a7f0 <MiWiPROTasks+0x242c>)
    a568:	781b      	ldrb	r3, [r3, #0]
    a56a:	1c5a      	adds	r2, r3, #1
    a56c:	b2d1      	uxtb	r1, r2
    a56e:	4aa0      	ldr	r2, [pc, #640]	; (a7f0 <MiWiPROTasks+0x242c>)
    a570:	7011      	strb	r1, [r2, #0]
    a572:	001a      	movs	r2, r3
    a574:	4b9f      	ldr	r3, [pc, #636]	; (a7f4 <MiWiPROTasks+0x2430>)
    a576:	21a0      	movs	r1, #160	; 0xa0
    a578:	5499      	strb	r1, [r3, r2]
                                        MiApp_WriteData(COORDINATOR_REPORT_STATUS_JOIN);
    a57a:	4b9d      	ldr	r3, [pc, #628]	; (a7f0 <MiWiPROTasks+0x242c>)
    a57c:	781b      	ldrb	r3, [r3, #0]
    a57e:	1c5a      	adds	r2, r3, #1
    a580:	b2d1      	uxtb	r1, r2
    a582:	4a9b      	ldr	r2, [pc, #620]	; (a7f0 <MiWiPROTasks+0x242c>)
    a584:	7011      	strb	r1, [r2, #0]
    a586:	001a      	movs	r2, r3
    a588:	4b9a      	ldr	r3, [pc, #616]	; (a7f4 <MiWiPROTasks+0x2430>)
    a58a:	2100      	movs	r1, #0
    a58c:	5499      	strb	r1, [r3, r2]
                                        for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    a58e:	233f      	movs	r3, #63	; 0x3f
    a590:	18fb      	adds	r3, r7, r3
    a592:	2200      	movs	r2, #0
    a594:	701a      	strb	r2, [r3, #0]
    a596:	e014      	b.n	a5c2 <MiWiPROTasks+0x21fe>
                                            MiApp_WriteData(tempLongAddress[i]);        
    a598:	4b95      	ldr	r3, [pc, #596]	; (a7f0 <MiWiPROTasks+0x242c>)
    a59a:	781b      	ldrb	r3, [r3, #0]
    a59c:	1c5a      	adds	r2, r3, #1
    a59e:	b2d1      	uxtb	r1, r2
    a5a0:	4a93      	ldr	r2, [pc, #588]	; (a7f0 <MiWiPROTasks+0x242c>)
    a5a2:	7011      	strb	r1, [r2, #0]
    a5a4:	0019      	movs	r1, r3
    a5a6:	233f      	movs	r3, #63	; 0x3f
    a5a8:	18fb      	adds	r3, r7, r3
    a5aa:	781b      	ldrb	r3, [r3, #0]
    a5ac:	4a92      	ldr	r2, [pc, #584]	; (a7f8 <MiWiPROTasks+0x2434>)
    a5ae:	5cd2      	ldrb	r2, [r2, r3]
    a5b0:	4b90      	ldr	r3, [pc, #576]	; (a7f4 <MiWiPROTasks+0x2430>)
    a5b2:	545a      	strb	r2, [r3, r1]
                                        for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    a5b4:	233f      	movs	r3, #63	; 0x3f
    a5b6:	18fb      	adds	r3, r7, r3
    a5b8:	781a      	ldrb	r2, [r3, #0]
    a5ba:	233f      	movs	r3, #63	; 0x3f
    a5bc:	18fb      	adds	r3, r7, r3
    a5be:	3201      	adds	r2, #1
    a5c0:	701a      	strb	r2, [r3, #0]
    a5c2:	233f      	movs	r3, #63	; 0x3f
    a5c4:	18fb      	adds	r3, r7, r3
    a5c6:	781b      	ldrb	r3, [r3, #0]
    a5c8:	2b07      	cmp	r3, #7
    a5ca:	d9e5      	bls.n	a598 <MiWiPROTasks+0x21d4>
                                            for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    a5cc:	233f      	movs	r3, #63	; 0x3f
    a5ce:	18fb      	adds	r3, r7, r3
    a5d0:	2200      	movs	r2, #0
    a5d2:	701a      	strb	r2, [r3, #0]
    a5d4:	e014      	b.n	a600 <MiWiPROTasks+0x223c>
                                                MiApp_WriteData(AdditionalNodeID[i]);
    a5d6:	4b86      	ldr	r3, [pc, #536]	; (a7f0 <MiWiPROTasks+0x242c>)
    a5d8:	781b      	ldrb	r3, [r3, #0]
    a5da:	1c5a      	adds	r2, r3, #1
    a5dc:	b2d1      	uxtb	r1, r2
    a5de:	4a84      	ldr	r2, [pc, #528]	; (a7f0 <MiWiPROTasks+0x242c>)
    a5e0:	7011      	strb	r1, [r2, #0]
    a5e2:	0019      	movs	r1, r3
    a5e4:	233f      	movs	r3, #63	; 0x3f
    a5e6:	18fb      	adds	r3, r7, r3
    a5e8:	781b      	ldrb	r3, [r3, #0]
    a5ea:	4a84      	ldr	r2, [pc, #528]	; (a7fc <MiWiPROTasks+0x2438>)
    a5ec:	5cd2      	ldrb	r2, [r2, r3]
    a5ee:	4b81      	ldr	r3, [pc, #516]	; (a7f4 <MiWiPROTasks+0x2430>)
    a5f0:	545a      	strb	r2, [r3, r1]
                                            for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    a5f2:	233f      	movs	r3, #63	; 0x3f
    a5f4:	18fb      	adds	r3, r7, r3
    a5f6:	781a      	ldrb	r2, [r3, #0]
    a5f8:	233f      	movs	r3, #63	; 0x3f
    a5fa:	18fb      	adds	r3, r7, r3
    a5fc:	3201      	adds	r2, #1
    a5fe:	701a      	strb	r2, [r3, #0]
    a600:	233f      	movs	r3, #63	; 0x3f
    a602:	18fb      	adds	r3, r7, r3
    a604:	781b      	ldrb	r3, [r3, #0]
    a606:	2b01      	cmp	r3, #1
    a608:	d9e5      	bls.n	a5d6 <MiWiPROTasks+0x2212>
                                        tempShortAddress.Val = 0;
    a60a:	4b77      	ldr	r3, [pc, #476]	; (a7e8 <MiWiPROTasks+0x2424>)
    a60c:	2200      	movs	r2, #0
    a60e:	801a      	strh	r2, [r3, #0]
                                        UnicastShortAddress(tempShortAddress.v);
    a610:	4b75      	ldr	r3, [pc, #468]	; (a7e8 <MiWiPROTasks+0x2424>)
    a612:	0018      	movs	r0, r3
    a614:	4b7a      	ldr	r3, [pc, #488]	; (a800 <MiWiPROTasks+0x243c>)
    a616:	4798      	blx	r3
                                        break;
    a618:	f000 feb5 	bl	b386 <MiWiPROTasks+0x2fc2>
                                        tempShortAddress.v[0] = 0;
    a61c:	4b72      	ldr	r3, [pc, #456]	; (a7e8 <MiWiPROTasks+0x2424>)
    a61e:	2200      	movs	r2, #0
    a620:	701a      	strb	r2, [r3, #0]
                                        for(j=1;j<NUM_COORDINATOR;j++)
    a622:	2335      	movs	r3, #53	; 0x35
    a624:	18fb      	adds	r3, r7, r3
    a626:	2201      	movs	r2, #1
    a628:	701a      	strb	r2, [r3, #0]
    a62a:	e03e      	b.n	a6aa <MiWiPROTasks+0x22e6>
                                            tempShortAddress.v[1] = j;                                        
    a62c:	4b6e      	ldr	r3, [pc, #440]	; (a7e8 <MiWiPROTasks+0x2424>)
    a62e:	2235      	movs	r2, #53	; 0x35
    a630:	18ba      	adds	r2, r7, r2
    a632:	7812      	ldrb	r2, [r2, #0]
    a634:	705a      	strb	r2, [r3, #1]
                                            entry = SearchForShortAddress();
    a636:	232b      	movs	r3, #43	; 0x2b
    a638:	18fc      	adds	r4, r7, r3
    a63a:	4b72      	ldr	r3, [pc, #456]	; (a804 <MiWiPROTasks+0x2440>)
    a63c:	4798      	blx	r3
    a63e:	0003      	movs	r3, r0
    a640:	7023      	strb	r3, [r4, #0]
                                            if(entry == 0xFF)
    a642:	232b      	movs	r3, #43	; 0x2b
    a644:	18fb      	adds	r3, r7, r3
    a646:	781b      	ldrb	r3, [r3, #0]
    a648:	2bff      	cmp	r3, #255	; 0xff
    a64a:	d127      	bne.n	a69c <MiWiPROTasks+0x22d8>
                                                tempShortAddress.v[0] = 0x00;
    a64c:	4b66      	ldr	r3, [pc, #408]	; (a7e8 <MiWiPROTasks+0x2424>)
    a64e:	2200      	movs	r2, #0
    a650:	701a      	strb	r2, [r3, #0]
                                                tempShortAddress.v[1] = j;
    a652:	4b65      	ldr	r3, [pc, #404]	; (a7e8 <MiWiPROTasks+0x2424>)
    a654:	2235      	movs	r2, #53	; 0x35
    a656:	18ba      	adds	r2, r7, r2
    a658:	7812      	ldrb	r2, [r2, #0]
    a65a:	705a      	strb	r2, [r3, #1]
                                                FamilyTree[j] = 0;
    a65c:	2335      	movs	r3, #53	; 0x35
    a65e:	18fb      	adds	r3, r7, r3
    a660:	781b      	ldrb	r3, [r3, #0]
    a662:	4a69      	ldr	r2, [pc, #420]	; (a808 <MiWiPROTasks+0x2444>)
    a664:	2100      	movs	r1, #0
    a666:	54d1      	strb	r1, [r2, r3]
                                                MiWiPROStatus.bits.COMM_FAMILY_TREE = FAMILY_TREE_BROADCAST;
    a668:	4b68      	ldr	r3, [pc, #416]	; (a80c <MiWiPROTasks+0x2448>)
    a66a:	781a      	ldrb	r2, [r3, #0]
    a66c:	210e      	movs	r1, #14
    a66e:	438a      	bics	r2, r1
    a670:	1c11      	adds	r1, r2, #0
    a672:	2206      	movs	r2, #6
    a674:	430a      	orrs	r2, r1
    a676:	701a      	strb	r2, [r3, #0]
                                                backgroundTaskTick = MiWi_TickGet();
    a678:	4b65      	ldr	r3, [pc, #404]	; (a810 <MiWiPROTasks+0x244c>)
    a67a:	4798      	blx	r3
    a67c:	0003      	movs	r3, r0
    a67e:	001a      	movs	r2, r3
    a680:	4b64      	ldr	r3, [pc, #400]	; (a814 <MiWiPROTasks+0x2450>)
    a682:	601a      	str	r2, [r3, #0]
                                                backgroundTaskTick.Val -= (ONE_SECOND/2);
    a684:	4b63      	ldr	r3, [pc, #396]	; (a814 <MiWiPROTasks+0x2450>)
    a686:	681b      	ldr	r3, [r3, #0]
    a688:	4a63      	ldr	r2, [pc, #396]	; (a818 <MiWiPROTasks+0x2454>)
    a68a:	189a      	adds	r2, r3, r2
    a68c:	4b61      	ldr	r3, [pc, #388]	; (a814 <MiWiPROTasks+0x2450>)
    a68e:	601a      	str	r2, [r3, #0]
                                                MiWiPRONVMStatus.bits.saveFamilyTree = 1;
    a690:	4b62      	ldr	r3, [pc, #392]	; (a81c <MiWiPROTasks+0x2458>)
    a692:	781a      	ldrb	r2, [r3, #0]
    a694:	2101      	movs	r1, #1
    a696:	430a      	orrs	r2, r1
    a698:	701a      	strb	r2, [r3, #0]
                                                break;
    a69a:	e00b      	b.n	a6b4 <MiWiPROTasks+0x22f0>
                                        for(j=1;j<NUM_COORDINATOR;j++)
    a69c:	2335      	movs	r3, #53	; 0x35
    a69e:	18fb      	adds	r3, r7, r3
    a6a0:	781a      	ldrb	r2, [r3, #0]
    a6a2:	2335      	movs	r3, #53	; 0x35
    a6a4:	18fb      	adds	r3, r7, r3
    a6a6:	3201      	adds	r2, #1
    a6a8:	701a      	strb	r2, [r3, #0]
    a6aa:	2335      	movs	r3, #53	; 0x35
    a6ac:	18fb      	adds	r3, r7, r3
    a6ae:	781b      	ldrb	r3, [r3, #0]
    a6b0:	2b00      	cmp	r3, #0
    a6b2:	d0bb      	beq.n	a62c <MiWiPROTasks+0x2268>
                                        if(j==NUM_COORDINATOR)
    a6b4:	2335      	movs	r3, #53	; 0x35
    a6b6:	18fb      	adds	r3, r7, r3
    a6b8:	781b      	ldrb	r3, [r3, #0]
    a6ba:	2b01      	cmp	r3, #1
    a6bc:	d000      	beq.n	a6c0 <MiWiPROTasks+0x22fc>
    a6be:	e0b1      	b.n	a824 <MiWiPROTasks+0x2460>
                                            tempShortAddress.v[1] = 0;
    a6c0:	4b49      	ldr	r3, [pc, #292]	; (a7e8 <MiWiPROTasks+0x2424>)
    a6c2:	2200      	movs	r2, #0
    a6c4:	705a      	strb	r2, [r3, #1]
                                            for(i = 1; i < 128; i++)
    a6c6:	233f      	movs	r3, #63	; 0x3f
    a6c8:	18fb      	adds	r3, r7, r3
    a6ca:	2201      	movs	r2, #1
    a6cc:	701a      	strb	r2, [r3, #0]
    a6ce:	e022      	b.n	a716 <MiWiPROTasks+0x2352>
                                                tempShortAddress.v[0] = i;
    a6d0:	4b45      	ldr	r3, [pc, #276]	; (a7e8 <MiWiPROTasks+0x2424>)
    a6d2:	223f      	movs	r2, #63	; 0x3f
    a6d4:	18ba      	adds	r2, r7, r2
    a6d6:	7812      	ldrb	r2, [r2, #0]
    a6d8:	701a      	strb	r2, [r3, #0]
                                                if( SearchForShortAddress() == 0xFF )
    a6da:	4b4a      	ldr	r3, [pc, #296]	; (a804 <MiWiPROTasks+0x2440>)
    a6dc:	4798      	blx	r3
    a6de:	0003      	movs	r3, r0
    a6e0:	2bff      	cmp	r3, #255	; 0xff
    a6e2:	d111      	bne.n	a708 <MiWiPROTasks+0x2344>
                                                    tempShortAddress.v[0] = i + 0x80;
    a6e4:	233f      	movs	r3, #63	; 0x3f
    a6e6:	18fb      	adds	r3, r7, r3
    a6e8:	781b      	ldrb	r3, [r3, #0]
    a6ea:	3b80      	subs	r3, #128	; 0x80
    a6ec:	b2da      	uxtb	r2, r3
    a6ee:	4b3e      	ldr	r3, [pc, #248]	; (a7e8 <MiWiPROTasks+0x2424>)
    a6f0:	701a      	strb	r2, [r3, #0]
                                                    if( SearchForShortAddress() == 0xFF )
    a6f2:	4b44      	ldr	r3, [pc, #272]	; (a804 <MiWiPROTasks+0x2440>)
    a6f4:	4798      	blx	r3
    a6f6:	0003      	movs	r3, r0
    a6f8:	2bff      	cmp	r3, #255	; 0xff
    a6fa:	d105      	bne.n	a708 <MiWiPROTasks+0x2344>
                                                        tempShortAddress.v[0] = i;
    a6fc:	4b3a      	ldr	r3, [pc, #232]	; (a7e8 <MiWiPROTasks+0x2424>)
    a6fe:	223f      	movs	r2, #63	; 0x3f
    a700:	18ba      	adds	r2, r7, r2
    a702:	7812      	ldrb	r2, [r2, #0]
    a704:	701a      	strb	r2, [r3, #0]
                                                        break;
    a706:	e00c      	b.n	a722 <MiWiPROTasks+0x235e>
                                            for(i = 1; i < 128; i++)
    a708:	233f      	movs	r3, #63	; 0x3f
    a70a:	18fb      	adds	r3, r7, r3
    a70c:	781a      	ldrb	r2, [r3, #0]
    a70e:	233f      	movs	r3, #63	; 0x3f
    a710:	18fb      	adds	r3, r7, r3
    a712:	3201      	adds	r2, #1
    a714:	701a      	strb	r2, [r3, #0]
    a716:	233f      	movs	r3, #63	; 0x3f
    a718:	18fb      	adds	r3, r7, r3
    a71a:	781b      	ldrb	r3, [r3, #0]
    a71c:	b25b      	sxtb	r3, r3
    a71e:	2b00      	cmp	r3, #0
    a720:	dad6      	bge.n	a6d0 <MiWiPROTasks+0x230c>
                                            if( i > 127 )
    a722:	233f      	movs	r3, #63	; 0x3f
    a724:	18fb      	adds	r3, r7, r3
    a726:	781b      	ldrb	r3, [r3, #0]
    a728:	b25b      	sxtb	r3, r3
    a72a:	2b00      	cmp	r3, #0
    a72c:	db00      	blt.n	a730 <MiWiPROTasks+0x236c>
    a72e:	e079      	b.n	a824 <MiWiPROTasks+0x2460>
                                                associateStatus = ASSOCIATION_PAN_FULL;
    a730:	2336      	movs	r3, #54	; 0x36
    a732:	18fb      	adds	r3, r7, r3
    a734:	2201      	movs	r2, #1
    a736:	701a      	strb	r2, [r3, #0]
                                                tempShortAddress.Val = 0xFFFE;
    a738:	4b2b      	ldr	r3, [pc, #172]	; (a7e8 <MiWiPROTasks+0x2424>)
    a73a:	2202      	movs	r2, #2
    a73c:	4252      	negs	r2, r2
    a73e:	801a      	strh	r2, [r3, #0]
                                                goto START_ASSOCIATION_RESPONSE;
    a740:	e0d6      	b.n	a8f0 <MiWiPROTasks+0x252c>
                                    tempShortAddress.v[1] = myShortAddress.v[1];
    a742:	4b37      	ldr	r3, [pc, #220]	; (a820 <MiWiPROTasks+0x245c>)
    a744:	785a      	ldrb	r2, [r3, #1]
    a746:	4b28      	ldr	r3, [pc, #160]	; (a7e8 <MiWiPROTasks+0x2424>)
    a748:	705a      	strb	r2, [r3, #1]
                                    for(i = 1; i < 128; i++)
    a74a:	233f      	movs	r3, #63	; 0x3f
    a74c:	18fb      	adds	r3, r7, r3
    a74e:	2201      	movs	r2, #1
    a750:	701a      	strb	r2, [r3, #0]
    a752:	e022      	b.n	a79a <MiWiPROTasks+0x23d6>
                                        tempShortAddress.v[0] = i;
    a754:	4b24      	ldr	r3, [pc, #144]	; (a7e8 <MiWiPROTasks+0x2424>)
    a756:	223f      	movs	r2, #63	; 0x3f
    a758:	18ba      	adds	r2, r7, r2
    a75a:	7812      	ldrb	r2, [r2, #0]
    a75c:	701a      	strb	r2, [r3, #0]
                                        if( SearchForShortAddress() == 0xFF )
    a75e:	4b29      	ldr	r3, [pc, #164]	; (a804 <MiWiPROTasks+0x2440>)
    a760:	4798      	blx	r3
    a762:	0003      	movs	r3, r0
    a764:	2bff      	cmp	r3, #255	; 0xff
    a766:	d111      	bne.n	a78c <MiWiPROTasks+0x23c8>
                                            tempShortAddress.v[0] = i + 0x80;
    a768:	233f      	movs	r3, #63	; 0x3f
    a76a:	18fb      	adds	r3, r7, r3
    a76c:	781b      	ldrb	r3, [r3, #0]
    a76e:	3b80      	subs	r3, #128	; 0x80
    a770:	b2da      	uxtb	r2, r3
    a772:	4b1d      	ldr	r3, [pc, #116]	; (a7e8 <MiWiPROTasks+0x2424>)
    a774:	701a      	strb	r2, [r3, #0]
                                            if( SearchForShortAddress() == 0xFF )
    a776:	4b23      	ldr	r3, [pc, #140]	; (a804 <MiWiPROTasks+0x2440>)
    a778:	4798      	blx	r3
    a77a:	0003      	movs	r3, r0
    a77c:	2bff      	cmp	r3, #255	; 0xff
    a77e:	d105      	bne.n	a78c <MiWiPROTasks+0x23c8>
                                                tempShortAddress.v[0] = i;  
    a780:	4b19      	ldr	r3, [pc, #100]	; (a7e8 <MiWiPROTasks+0x2424>)
    a782:	223f      	movs	r2, #63	; 0x3f
    a784:	18ba      	adds	r2, r7, r2
    a786:	7812      	ldrb	r2, [r2, #0]
    a788:	701a      	strb	r2, [r3, #0]
                                                break;
    a78a:	e00c      	b.n	a7a6 <MiWiPROTasks+0x23e2>
                                    for(i = 1; i < 128; i++)
    a78c:	233f      	movs	r3, #63	; 0x3f
    a78e:	18fb      	adds	r3, r7, r3
    a790:	781a      	ldrb	r2, [r3, #0]
    a792:	233f      	movs	r3, #63	; 0x3f
    a794:	18fb      	adds	r3, r7, r3
    a796:	3201      	adds	r2, #1
    a798:	701a      	strb	r2, [r3, #0]
    a79a:	233f      	movs	r3, #63	; 0x3f
    a79c:	18fb      	adds	r3, r7, r3
    a79e:	781b      	ldrb	r3, [r3, #0]
    a7a0:	b25b      	sxtb	r3, r3
    a7a2:	2b00      	cmp	r3, #0
    a7a4:	dad6      	bge.n	a754 <MiWiPROTasks+0x2390>
                                    if( i > 127 )
    a7a6:	233f      	movs	r3, #63	; 0x3f
    a7a8:	18fb      	adds	r3, r7, r3
    a7aa:	781b      	ldrb	r3, [r3, #0]
    a7ac:	b25b      	sxtb	r3, r3
    a7ae:	2b00      	cmp	r3, #0
    a7b0:	da38      	bge.n	a824 <MiWiPROTasks+0x2460>
                                        associateStatus = ASSOCIATION_PAN_FULL;
    a7b2:	2336      	movs	r3, #54	; 0x36
    a7b4:	18fb      	adds	r3, r7, r3
    a7b6:	2201      	movs	r2, #1
    a7b8:	701a      	strb	r2, [r3, #0]
                                        tempShortAddress.Val = 0xFFFE;
    a7ba:	4b0b      	ldr	r3, [pc, #44]	; (a7e8 <MiWiPROTasks+0x2424>)
    a7bc:	2202      	movs	r2, #2
    a7be:	4252      	negs	r2, r2
    a7c0:	801a      	strh	r2, [r3, #0]
                                        goto START_ASSOCIATION_RESPONSE;
    a7c2:	e095      	b.n	a8f0 <MiWiPROTasks+0x252c>
    a7c4:	2000126c 	.word	0x2000126c
    a7c8:	20001150 	.word	0x20001150
    a7cc:	20000018 	.word	0x20000018
    a7d0:	200012c8 	.word	0x200012c8
    a7d4:	20001290 	.word	0x20001290
    a7d8:	200012c0 	.word	0x200012c0
    a7dc:	0000cddd 	.word	0x0000cddd
    a7e0:	0001cca0 	.word	0x0001cca0
    a7e4:	0001782d 	.word	0x0001782d
    a7e8:	200012e0 	.word	0x200012e0
    a7ec:	200012de 	.word	0x200012de
    a7f0:	200012dc 	.word	0x200012dc
    a7f4:	200012e4 	.word	0x200012e4
    a7f8:	20001288 	.word	0x20001288
    a7fc:	20000034 	.word	0x20000034
    a800:	0000db3d 	.word	0x0000db3d
    a804:	0000cb71 	.word	0x0000cb71
    a808:	20001518 	.word	0x20001518
    a80c:	200012c4 	.word	0x200012c4
    a810:	0000ebad 	.word	0x0000ebad
    a814:	2000113c 	.word	0x2000113c
    a818:	fffff800 	.word	0xfffff800
    a81c:	200013c4 	.word	0x200013c4
    a820:	20001140 	.word	0x20001140
                                tempNodeStatus.Val = 0xBF;
    a824:	4be3      	ldr	r3, [pc, #908]	; (abb4 <MiWiPROTasks+0x27f0>)
    a826:	22bf      	movs	r2, #191	; 0xbf
    a828:	701a      	strb	r2, [r3, #0]
                                if((MACRxPacket.Payload[1] & 0x01) == 0)
    a82a:	4be3      	ldr	r3, [pc, #908]	; (abb8 <MiWiPROTasks+0x27f4>)
    a82c:	689b      	ldr	r3, [r3, #8]
    a82e:	3301      	adds	r3, #1
    a830:	781b      	ldrb	r3, [r3, #0]
    a832:	001a      	movs	r2, r3
    a834:	2301      	movs	r3, #1
    a836:	4013      	ands	r3, r2
    a838:	d10c      	bne.n	a854 <MiWiPROTasks+0x2490>
                                    tempNodeStatus.bits.RXOnWhenIdle = 0;
    a83a:	4bde      	ldr	r3, [pc, #888]	; (abb4 <MiWiPROTasks+0x27f0>)
    a83c:	781a      	ldrb	r2, [r3, #0]
    a83e:	2101      	movs	r1, #1
    a840:	438a      	bics	r2, r1
    a842:	701a      	strb	r2, [r3, #0]
                                    tempShortAddress.v[0] |= 0x80;                                   
    a844:	4bdd      	ldr	r3, [pc, #884]	; (abbc <MiWiPROTasks+0x27f8>)
    a846:	781b      	ldrb	r3, [r3, #0]
    a848:	2280      	movs	r2, #128	; 0x80
    a84a:	4252      	negs	r2, r2
    a84c:	4313      	orrs	r3, r2
    a84e:	b2da      	uxtb	r2, r3
    a850:	4bda      	ldr	r3, [pc, #872]	; (abbc <MiWiPROTasks+0x27f8>)
    a852:	701a      	strb	r2, [r3, #0]
                                if( associateStatus == ASSOCIATION_SUCCESSFUL )
    a854:	2336      	movs	r3, #54	; 0x36
    a856:	18fb      	adds	r3, r7, r3
    a858:	781b      	ldrb	r3, [r3, #0]
    a85a:	2b00      	cmp	r3, #0
    a85c:	d148      	bne.n	a8f0 <MiWiPROTasks+0x252c>
                                    tempPANID.Val = myPANID.Val;
    a85e:	4bd8      	ldr	r3, [pc, #864]	; (abc0 <MiWiPROTasks+0x27fc>)
    a860:	881a      	ldrh	r2, [r3, #0]
    a862:	4bd8      	ldr	r3, [pc, #864]	; (abc4 <MiWiPROTasks+0x2800>)
    a864:	801a      	strh	r2, [r3, #0]
                                    handle = AddNodeToNetworkTable();
    a866:	2337      	movs	r3, #55	; 0x37
    a868:	18fc      	adds	r4, r7, r3
    a86a:	4bd7      	ldr	r3, [pc, #860]	; (abc8 <MiWiPROTasks+0x2804>)
    a86c:	4798      	blx	r3
    a86e:	0003      	movs	r3, r0
    a870:	7023      	strb	r3, [r4, #0]
                                    if( handle < CONNECTION_SIZE )
    a872:	2337      	movs	r3, #55	; 0x37
    a874:	18fb      	adds	r3, r7, r3
    a876:	781b      	ldrb	r3, [r3, #0]
    a878:	2b0f      	cmp	r3, #15
    a87a:	d839      	bhi.n	a8f0 <MiWiPROTasks+0x252c>
										printf("Join Success...1\n\r");
    a87c:	4bd3      	ldr	r3, [pc, #844]	; (abcc <MiWiPROTasks+0x2808>)
    a87e:	0018      	movs	r0, r3
    a880:	4bd3      	ldr	r3, [pc, #844]	; (abd0 <MiWiPROTasks+0x280c>)
    a882:	4798      	blx	r3
                                        ConnectionTable[handle].status.bits.FinishJoin = 1;    
    a884:	2337      	movs	r3, #55	; 0x37
    a886:	18fb      	adds	r3, r7, r3
    a888:	781b      	ldrb	r3, [r3, #0]
    a88a:	4ad2      	ldr	r2, [pc, #840]	; (abd4 <MiWiPROTasks+0x2810>)
    a88c:	2108      	movs	r1, #8
    a88e:	011b      	lsls	r3, r3, #4
    a890:	18d3      	adds	r3, r2, r3
    a892:	185b      	adds	r3, r3, r1
    a894:	791a      	ldrb	r2, [r3, #4]
    a896:	2110      	movs	r1, #16
    a898:	430a      	orrs	r2, r1
    a89a:	711a      	strb	r2, [r3, #4]
                                            for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    a89c:	233f      	movs	r3, #63	; 0x3f
    a89e:	18fb      	adds	r3, r7, r3
    a8a0:	2200      	movs	r2, #0
    a8a2:	701a      	strb	r2, [r3, #0]
    a8a4:	e01b      	b.n	a8de <MiWiPROTasks+0x251a>
                                                ConnectionTable[handle].PeerInfo[i] = MACRxPacket.Payload[2+i];
    a8a6:	2337      	movs	r3, #55	; 0x37
    a8a8:	18fb      	adds	r3, r7, r3
    a8aa:	7818      	ldrb	r0, [r3, #0]
    a8ac:	233f      	movs	r3, #63	; 0x3f
    a8ae:	18fb      	adds	r3, r7, r3
    a8b0:	781a      	ldrb	r2, [r3, #0]
    a8b2:	4bc1      	ldr	r3, [pc, #772]	; (abb8 <MiWiPROTasks+0x27f4>)
    a8b4:	689b      	ldr	r3, [r3, #8]
    a8b6:	213f      	movs	r1, #63	; 0x3f
    a8b8:	1879      	adds	r1, r7, r1
    a8ba:	7809      	ldrb	r1, [r1, #0]
    a8bc:	3102      	adds	r1, #2
    a8be:	185b      	adds	r3, r3, r1
    a8c0:	781c      	ldrb	r4, [r3, #0]
    a8c2:	49c4      	ldr	r1, [pc, #784]	; (abd4 <MiWiPROTasks+0x2810>)
    a8c4:	0103      	lsls	r3, r0, #4
    a8c6:	18cb      	adds	r3, r1, r3
    a8c8:	189b      	adds	r3, r3, r2
    a8ca:	330d      	adds	r3, #13
    a8cc:	1c22      	adds	r2, r4, #0
    a8ce:	701a      	strb	r2, [r3, #0]
                                            for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    a8d0:	233f      	movs	r3, #63	; 0x3f
    a8d2:	18fb      	adds	r3, r7, r3
    a8d4:	781a      	ldrb	r2, [r3, #0]
    a8d6:	233f      	movs	r3, #63	; 0x3f
    a8d8:	18fb      	adds	r3, r7, r3
    a8da:	3201      	adds	r2, #1
    a8dc:	701a      	strb	r2, [r3, #0]
    a8de:	233f      	movs	r3, #63	; 0x3f
    a8e0:	18fb      	adds	r3, r7, r3
    a8e2:	781b      	ldrb	r3, [r3, #0]
    a8e4:	2b01      	cmp	r3, #1
    a8e6:	d9de      	bls.n	a8a6 <MiWiPROTasks+0x24e2>
											NVM_Write_ConTable(ConnectionTable);
    a8e8:	4bba      	ldr	r3, [pc, #744]	; (abd4 <MiWiPROTasks+0x2810>)
    a8ea:	0018      	movs	r0, r3
    a8ec:	4bba      	ldr	r3, [pc, #744]	; (abd8 <MiWiPROTasks+0x2814>)
    a8ee:	4798      	blx	r3
                                TxBuffer[0] = MAC_COMMAND_ASSOCIATION_RESPONSE;
    a8f0:	4bba      	ldr	r3, [pc, #744]	; (abdc <MiWiPROTasks+0x2818>)
    a8f2:	2202      	movs	r2, #2
    a8f4:	701a      	strb	r2, [r3, #0]
                                TxBuffer[1] = tempShortAddress.v[0];
    a8f6:	4bb1      	ldr	r3, [pc, #708]	; (abbc <MiWiPROTasks+0x27f8>)
    a8f8:	781a      	ldrb	r2, [r3, #0]
    a8fa:	4bb8      	ldr	r3, [pc, #736]	; (abdc <MiWiPROTasks+0x2818>)
    a8fc:	705a      	strb	r2, [r3, #1]
                                TxBuffer[2] = tempShortAddress.v[1];
    a8fe:	4baf      	ldr	r3, [pc, #700]	; (abbc <MiWiPROTasks+0x27f8>)
    a900:	785a      	ldrb	r2, [r3, #1]
    a902:	4bb6      	ldr	r3, [pc, #728]	; (abdc <MiWiPROTasks+0x2818>)
    a904:	709a      	strb	r2, [r3, #2]
                                TxBuffer[3] = associateStatus;
    a906:	4bb5      	ldr	r3, [pc, #724]	; (abdc <MiWiPROTasks+0x2818>)
    a908:	2236      	movs	r2, #54	; 0x36
    a90a:	18ba      	adds	r2, r7, r2
    a90c:	7812      	ldrb	r2, [r2, #0]
    a90e:	70da      	strb	r2, [r3, #3]
                                    for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    a910:	233f      	movs	r3, #63	; 0x3f
    a912:	18fb      	adds	r3, r7, r3
    a914:	2200      	movs	r2, #0
    a916:	701a      	strb	r2, [r3, #0]
    a918:	e011      	b.n	a93e <MiWiPROTasks+0x257a>
                                        TxBuffer[4+i] = AdditionalNodeID[i];
    a91a:	233f      	movs	r3, #63	; 0x3f
    a91c:	18fb      	adds	r3, r7, r3
    a91e:	781b      	ldrb	r3, [r3, #0]
    a920:	3304      	adds	r3, #4
    a922:	223f      	movs	r2, #63	; 0x3f
    a924:	18ba      	adds	r2, r7, r2
    a926:	7812      	ldrb	r2, [r2, #0]
    a928:	49ad      	ldr	r1, [pc, #692]	; (abe0 <MiWiPROTasks+0x281c>)
    a92a:	5c89      	ldrb	r1, [r1, r2]
    a92c:	4aab      	ldr	r2, [pc, #684]	; (abdc <MiWiPROTasks+0x2818>)
    a92e:	54d1      	strb	r1, [r2, r3]
                                    for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    a930:	233f      	movs	r3, #63	; 0x3f
    a932:	18fb      	adds	r3, r7, r3
    a934:	781a      	ldrb	r2, [r3, #0]
    a936:	233f      	movs	r3, #63	; 0x3f
    a938:	18fb      	adds	r3, r7, r3
    a93a:	3201      	adds	r2, #1
    a93c:	701a      	strb	r2, [r3, #0]
    a93e:	233f      	movs	r3, #63	; 0x3f
    a940:	18fb      	adds	r3, r7, r3
    a942:	781b      	ldrb	r3, [r3, #0]
    a944:	2b01      	cmp	r3, #1
    a946:	d9e8      	bls.n	a91a <MiWiPROTasks+0x2556>
                                    TxBuffer[4+ADDITIONAL_NODE_ID_SIZE] = myShortAddress.v[1];
    a948:	4ba6      	ldr	r3, [pc, #664]	; (abe4 <MiWiPROTasks+0x2820>)
    a94a:	785a      	ldrb	r2, [r3, #1]
    a94c:	4ba3      	ldr	r3, [pc, #652]	; (abdc <MiWiPROTasks+0x2818>)
    a94e:	719a      	strb	r2, [r3, #6]
                                    TxData = 5 + ADDITIONAL_NODE_ID_SIZE;
    a950:	4ba5      	ldr	r3, [pc, #660]	; (abe8 <MiWiPROTasks+0x2824>)
    a952:	2207      	movs	r2, #7
    a954:	701a      	strb	r2, [r3, #0]
                                    SendMACPacket(ConnectionTable[handle].Address, PACKET_TYPE_COMMAND);
    a956:	2337      	movs	r3, #55	; 0x37
    a958:	18fb      	adds	r3, r7, r3
    a95a:	781b      	ldrb	r3, [r3, #0]
    a95c:	011a      	lsls	r2, r3, #4
    a95e:	4b9d      	ldr	r3, [pc, #628]	; (abd4 <MiWiPROTasks+0x2810>)
    a960:	18d3      	adds	r3, r2, r3
    a962:	3304      	adds	r3, #4
    a964:	2101      	movs	r1, #1
    a966:	0018      	movs	r0, r3
    a968:	4ba0      	ldr	r3, [pc, #640]	; (abec <MiWiPROTasks+0x2828>)
    a96a:	4798      	blx	r3
                            break;
    a96c:	f000 fd0b 	bl	b386 <MiWiPROTasks+0x2fc2>
								if(MACRxPacket.Payload[3] == ASSOCIATION_SUCCESSFUL)
    a970:	4b91      	ldr	r3, [pc, #580]	; (abb8 <MiWiPROTasks+0x27f4>)
    a972:	689b      	ldr	r3, [r3, #8]
    a974:	3303      	adds	r3, #3
    a976:	781b      	ldrb	r3, [r3, #0]
    a978:	2b00      	cmp	r3, #0
    a97a:	d000      	beq.n	a97e <MiWiPROTasks+0x25ba>
    a97c:	e0ea      	b.n	ab54 <MiWiPROTasks+0x2790>
                                    myShortAddress.v[0] = MACRxPacket.Payload[1];
    a97e:	4b8e      	ldr	r3, [pc, #568]	; (abb8 <MiWiPROTasks+0x27f4>)
    a980:	689b      	ldr	r3, [r3, #8]
    a982:	785a      	ldrb	r2, [r3, #1]
    a984:	4b97      	ldr	r3, [pc, #604]	; (abe4 <MiWiPROTasks+0x2820>)
    a986:	701a      	strb	r2, [r3, #0]
                                    myShortAddress.v[1] = MACRxPacket.Payload[2];									
    a988:	4b8b      	ldr	r3, [pc, #556]	; (abb8 <MiWiPROTasks+0x27f4>)
    a98a:	689b      	ldr	r3, [r3, #8]
    a98c:	789a      	ldrb	r2, [r3, #2]
    a98e:	4b95      	ldr	r3, [pc, #596]	; (abe4 <MiWiPROTasks+0x2820>)
    a990:	705a      	strb	r2, [r3, #1]
									printf("RCV ADDR: 0x%4x - CH : %d\r\n",myShortAddress.Val,currentChannel);
    a992:	4b94      	ldr	r3, [pc, #592]	; (abe4 <MiWiPROTasks+0x2820>)
    a994:	881b      	ldrh	r3, [r3, #0]
    a996:	0019      	movs	r1, r3
    a998:	4b95      	ldr	r3, [pc, #596]	; (abf0 <MiWiPROTasks+0x282c>)
    a99a:	781b      	ldrb	r3, [r3, #0]
    a99c:	001a      	movs	r2, r3
    a99e:	4b95      	ldr	r3, [pc, #596]	; (abf4 <MiWiPROTasks+0x2830>)
    a9a0:	0018      	movs	r0, r3
    a9a2:	4b8b      	ldr	r3, [pc, #556]	; (abd0 <MiWiPROTasks+0x280c>)
    a9a4:	4798      	blx	r3
										NVM_Write_CH(currentChannel);	//save channel
    a9a6:	4b92      	ldr	r3, [pc, #584]	; (abf0 <MiWiPROTasks+0x282c>)
    a9a8:	781b      	ldrb	r3, [r3, #0]
    a9aa:	0018      	movs	r0, r3
    a9ac:	4b92      	ldr	r3, [pc, #584]	; (abf8 <MiWiPROTasks+0x2834>)
    a9ae:	4798      	blx	r3
                                        if(myShortAddress.v[0] == 0x00)
    a9b0:	4b8c      	ldr	r3, [pc, #560]	; (abe4 <MiWiPROTasks+0x2820>)
    a9b2:	781b      	ldrb	r3, [r3, #0]
    a9b4:	2b00      	cmp	r3, #0
    a9b6:	d114      	bne.n	a9e2 <MiWiPROTasks+0x261e>
                                            role = ROLE_COORDINATOR;
    a9b8:	4b90      	ldr	r3, [pc, #576]	; (abfc <MiWiPROTasks+0x2838>)
    a9ba:	2201      	movs	r2, #1
    a9bc:	701a      	strb	r2, [r3, #0]
                                            MiWiPROCapacityInfo.bits.Role = role;
    a9be:	4b8f      	ldr	r3, [pc, #572]	; (abfc <MiWiPROTasks+0x2838>)
    a9c0:	781b      	ldrb	r3, [r3, #0]
    a9c2:	1c1a      	adds	r2, r3, #0
    a9c4:	2303      	movs	r3, #3
    a9c6:	4013      	ands	r3, r2
    a9c8:	b2da      	uxtb	r2, r3
    a9ca:	4b8d      	ldr	r3, [pc, #564]	; (ac00 <MiWiPROTasks+0x283c>)
    a9cc:	2103      	movs	r1, #3
    a9ce:	400a      	ands	r2, r1
    a9d0:	1890      	adds	r0, r2, r2
    a9d2:	781a      	ldrb	r2, [r3, #0]
    a9d4:	2106      	movs	r1, #6
    a9d6:	438a      	bics	r2, r1
    a9d8:	1c11      	adds	r1, r2, #0
    a9da:	1c02      	adds	r2, r0, #0
    a9dc:	430a      	orrs	r2, r1
    a9de:	701a      	strb	r2, [r3, #0]
    a9e0:	e013      	b.n	aa0a <MiWiPROTasks+0x2646>
                                            role = ROLE_FFD_END_DEVICE;
    a9e2:	4b86      	ldr	r3, [pc, #536]	; (abfc <MiWiPROTasks+0x2838>)
    a9e4:	2200      	movs	r2, #0
    a9e6:	701a      	strb	r2, [r3, #0]
                                            MiWiPROCapacityInfo.bits.Role = role;
    a9e8:	4b84      	ldr	r3, [pc, #528]	; (abfc <MiWiPROTasks+0x2838>)
    a9ea:	781b      	ldrb	r3, [r3, #0]
    a9ec:	1c1a      	adds	r2, r3, #0
    a9ee:	2303      	movs	r3, #3
    a9f0:	4013      	ands	r3, r2
    a9f2:	b2da      	uxtb	r2, r3
    a9f4:	4b82      	ldr	r3, [pc, #520]	; (ac00 <MiWiPROTasks+0x283c>)
    a9f6:	2103      	movs	r1, #3
    a9f8:	400a      	ands	r2, r1
    a9fa:	1890      	adds	r0, r2, r2
    a9fc:	781a      	ldrb	r2, [r3, #0]
    a9fe:	2106      	movs	r1, #6
    aa00:	438a      	bics	r2, r1
    aa02:	1c11      	adds	r1, r2, #0
    aa04:	1c02      	adds	r2, r0, #0
    aa06:	430a      	orrs	r2, r1
    aa08:	701a      	strb	r2, [r3, #0]
                                        nvmPutRole(&role);
    aa0a:	4b7e      	ldr	r3, [pc, #504]	; (ac04 <MiWiPROTasks+0x2840>)
    aa0c:	8819      	ldrh	r1, [r3, #0]
    aa0e:	4b7b      	ldr	r3, [pc, #492]	; (abfc <MiWiPROTasks+0x2838>)
    aa10:	2201      	movs	r2, #1
    aa12:	0018      	movs	r0, r3
    aa14:	4b7c      	ldr	r3, [pc, #496]	; (ac08 <MiWiPROTasks+0x2844>)
    aa16:	4798      	blx	r3
                                    MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
    aa18:	4a69      	ldr	r2, [pc, #420]	; (abc0 <MiWiPROTasks+0x27fc>)
    aa1a:	4b72      	ldr	r3, [pc, #456]	; (abe4 <MiWiPROTasks+0x2820>)
    aa1c:	0011      	movs	r1, r2
    aa1e:	0018      	movs	r0, r3
    aa20:	4b7a      	ldr	r3, [pc, #488]	; (ac0c <MiWiPROTasks+0x2848>)
    aa22:	4798      	blx	r3
                                    MiWiPROStateMachine.bits.memberOfNetwork = 1;
    aa24:	4b7a      	ldr	r3, [pc, #488]	; (ac10 <MiWiPROTasks+0x284c>)
    aa26:	781a      	ldrb	r2, [r3, #0]
    aa28:	2102      	movs	r1, #2
    aa2a:	430a      	orrs	r2, r1
    aa2c:	701a      	strb	r2, [r3, #0]
                                    tempNodeStatus.Val = 0xBF;
    aa2e:	4b61      	ldr	r3, [pc, #388]	; (abb4 <MiWiPROTasks+0x27f0>)
    aa30:	22bf      	movs	r2, #191	; 0xbf
    aa32:	701a      	strb	r2, [r3, #0]
                                    for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    aa34:	233f      	movs	r3, #63	; 0x3f
    aa36:	18fb      	adds	r3, r7, r3
    aa38:	2200      	movs	r2, #0
    aa3a:	701a      	strb	r2, [r3, #0]
    aa3c:	e012      	b.n	aa64 <MiWiPROTasks+0x26a0>
                                        tempLongAddress[i] = MACRxPacket.SourceAddress[i];
    aa3e:	233f      	movs	r3, #63	; 0x3f
    aa40:	18fb      	adds	r3, r7, r3
    aa42:	781a      	ldrb	r2, [r3, #0]
    aa44:	4b5c      	ldr	r3, [pc, #368]	; (abb8 <MiWiPROTasks+0x27f4>)
    aa46:	6859      	ldr	r1, [r3, #4]
    aa48:	233f      	movs	r3, #63	; 0x3f
    aa4a:	18fb      	adds	r3, r7, r3
    aa4c:	781b      	ldrb	r3, [r3, #0]
    aa4e:	18cb      	adds	r3, r1, r3
    aa50:	7819      	ldrb	r1, [r3, #0]
    aa52:	4b70      	ldr	r3, [pc, #448]	; (ac14 <MiWiPROTasks+0x2850>)
    aa54:	5499      	strb	r1, [r3, r2]
                                    for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    aa56:	233f      	movs	r3, #63	; 0x3f
    aa58:	18fb      	adds	r3, r7, r3
    aa5a:	781a      	ldrb	r2, [r3, #0]
    aa5c:	233f      	movs	r3, #63	; 0x3f
    aa5e:	18fb      	adds	r3, r7, r3
    aa60:	3201      	adds	r2, #1
    aa62:	701a      	strb	r2, [r3, #0]
    aa64:	233f      	movs	r3, #63	; 0x3f
    aa66:	18fb      	adds	r3, r7, r3
    aa68:	781b      	ldrb	r3, [r3, #0]
    aa6a:	2b07      	cmp	r3, #7
    aa6c:	d9e7      	bls.n	aa3e <MiWiPROTasks+0x267a>
                                        tempShortAddress.v[0] = 0;
    aa6e:	4b53      	ldr	r3, [pc, #332]	; (abbc <MiWiPROTasks+0x27f8>)
    aa70:	2200      	movs	r2, #0
    aa72:	701a      	strb	r2, [r3, #0]
                                        tempShortAddress.v[1] = MACRxPacket.Payload[4+ADDITIONAL_NODE_ID_SIZE];
    aa74:	4b50      	ldr	r3, [pc, #320]	; (abb8 <MiWiPROTasks+0x27f4>)
    aa76:	689b      	ldr	r3, [r3, #8]
    aa78:	799a      	ldrb	r2, [r3, #6]
    aa7a:	4b50      	ldr	r3, [pc, #320]	; (abbc <MiWiPROTasks+0x27f8>)
    aa7c:	705a      	strb	r2, [r3, #1]
                                    tempPANID.Val = myPANID.Val;
    aa7e:	4b50      	ldr	r3, [pc, #320]	; (abc0 <MiWiPROTasks+0x27fc>)
    aa80:	881a      	ldrh	r2, [r3, #0]
    aa82:	4b50      	ldr	r3, [pc, #320]	; (abc4 <MiWiPROTasks+0x2800>)
    aa84:	801a      	strh	r2, [r3, #0]
                                    myParent = AddNodeToNetworkTable();
    aa86:	4b50      	ldr	r3, [pc, #320]	; (abc8 <MiWiPROTasks+0x2804>)
    aa88:	4798      	blx	r3
    aa8a:	0003      	movs	r3, r0
    aa8c:	001a      	movs	r2, r3
    aa8e:	4b62      	ldr	r3, [pc, #392]	; (ac18 <MiWiPROTasks+0x2854>)
    aa90:	701a      	strb	r2, [r3, #0]
        					            for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    aa92:	233f      	movs	r3, #63	; 0x3f
    aa94:	18fb      	adds	r3, r7, r3
    aa96:	2200      	movs	r2, #0
    aa98:	701a      	strb	r2, [r3, #0]
    aa9a:	e01b      	b.n	aad4 <MiWiPROTasks+0x2710>
            					            ConnectionTable[myParent].PeerInfo[i] = MACRxPacket.Payload[4+i];
    aa9c:	4b5e      	ldr	r3, [pc, #376]	; (ac18 <MiWiPROTasks+0x2854>)
    aa9e:	781b      	ldrb	r3, [r3, #0]
    aaa0:	001c      	movs	r4, r3
    aaa2:	233f      	movs	r3, #63	; 0x3f
    aaa4:	18fb      	adds	r3, r7, r3
    aaa6:	781a      	ldrb	r2, [r3, #0]
    aaa8:	4b43      	ldr	r3, [pc, #268]	; (abb8 <MiWiPROTasks+0x27f4>)
    aaaa:	689b      	ldr	r3, [r3, #8]
    aaac:	213f      	movs	r1, #63	; 0x3f
    aaae:	1879      	adds	r1, r7, r1
    aab0:	7809      	ldrb	r1, [r1, #0]
    aab2:	3104      	adds	r1, #4
    aab4:	185b      	adds	r3, r3, r1
    aab6:	7818      	ldrb	r0, [r3, #0]
    aab8:	4946      	ldr	r1, [pc, #280]	; (abd4 <MiWiPROTasks+0x2810>)
    aaba:	0123      	lsls	r3, r4, #4
    aabc:	18cb      	adds	r3, r1, r3
    aabe:	189b      	adds	r3, r3, r2
    aac0:	330d      	adds	r3, #13
    aac2:	1c02      	adds	r2, r0, #0
    aac4:	701a      	strb	r2, [r3, #0]
        					            for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    aac6:	233f      	movs	r3, #63	; 0x3f
    aac8:	18fb      	adds	r3, r7, r3
    aaca:	781a      	ldrb	r2, [r3, #0]
    aacc:	233f      	movs	r3, #63	; 0x3f
    aace:	18fb      	adds	r3, r7, r3
    aad0:	3201      	adds	r2, #1
    aad2:	701a      	strb	r2, [r3, #0]
    aad4:	233f      	movs	r3, #63	; 0x3f
    aad6:	18fb      	adds	r3, r7, r3
    aad8:	781b      	ldrb	r3, [r3, #0]
    aada:	2b01      	cmp	r3, #1
    aadc:	d9de      	bls.n	aa9c <MiWiPROTasks+0x26d8>
                                        MiWiPROStatus.bits.COMM_ROUTING_TABLE = ROUTING_TABLE_BROADCAST;
    aade:	4b4f      	ldr	r3, [pc, #316]	; (ac1c <MiWiPROTasks+0x2858>)
    aae0:	781a      	ldrb	r2, [r3, #0]
    aae2:	2170      	movs	r1, #112	; 0x70
    aae4:	438a      	bics	r2, r1
    aae6:	1c11      	adds	r1, r2, #0
    aae8:	2230      	movs	r2, #48	; 0x30
    aaea:	430a      	orrs	r2, r1
    aaec:	701a      	strb	r2, [r3, #0]
                                        backgroundTaskTick = MiWi_TickGet();
    aaee:	4b4c      	ldr	r3, [pc, #304]	; (ac20 <MiWiPROTasks+0x285c>)
    aaf0:	4798      	blx	r3
    aaf2:	0003      	movs	r3, r0
    aaf4:	001a      	movs	r2, r3
    aaf6:	4b4b      	ldr	r3, [pc, #300]	; (ac24 <MiWiPROTasks+0x2860>)
    aaf8:	601a      	str	r2, [r3, #0]
										networkInfo.CH = currentChannel;																		
    aafa:	4b3d      	ldr	r3, [pc, #244]	; (abf0 <MiWiPROTasks+0x282c>)
    aafc:	781a      	ldrb	r2, [r3, #0]
    aafe:	4b4a      	ldr	r3, [pc, #296]	; (ac28 <MiWiPROTasks+0x2864>)
    ab00:	711a      	strb	r2, [r3, #4]
										networkInfo.PANID = myPANID;
    ab02:	4b49      	ldr	r3, [pc, #292]	; (ac28 <MiWiPROTasks+0x2864>)
    ab04:	4a2e      	ldr	r2, [pc, #184]	; (abc0 <MiWiPROTasks+0x27fc>)
    ab06:	8812      	ldrh	r2, [r2, #0]
    ab08:	805a      	strh	r2, [r3, #2]
										memcpy(networkInfo.LADDR,myLongAddress,sizeof(myLongAddress));
    ab0a:	4b47      	ldr	r3, [pc, #284]	; (ac28 <MiWiPROTasks+0x2864>)
    ab0c:	220e      	movs	r2, #14
    ab0e:	4947      	ldr	r1, [pc, #284]	; (ac2c <MiWiPROTasks+0x2868>)
    ab10:	189b      	adds	r3, r3, r2
    ab12:	2208      	movs	r2, #8
    ab14:	0018      	movs	r0, r3
    ab16:	4b46      	ldr	r3, [pc, #280]	; (ac30 <MiWiPROTasks+0x286c>)
    ab18:	4798      	blx	r3
										networkInfo.OCH = ChannelMAP;
    ab1a:	4b46      	ldr	r3, [pc, #280]	; (ac34 <MiWiPROTasks+0x2870>)
    ab1c:	681a      	ldr	r2, [r3, #0]
    ab1e:	4b42      	ldr	r3, [pc, #264]	; (ac28 <MiWiPROTasks+0x2864>)
    ab20:	609a      	str	r2, [r3, #8]
										networkInfo.SADDR.Val = myShortAddress.Val;
    ab22:	4b30      	ldr	r3, [pc, #192]	; (abe4 <MiWiPROTasks+0x2820>)
    ab24:	881a      	ldrh	r2, [r3, #0]
    ab26:	4b40      	ldr	r3, [pc, #256]	; (ac28 <MiWiPROTasks+0x2864>)
    ab28:	819a      	strh	r2, [r3, #12]
										networkInfo.Status = 0x01; //network created
    ab2a:	4b3f      	ldr	r3, [pc, #252]	; (ac28 <MiWiPROTasks+0x2864>)
    ab2c:	2201      	movs	r2, #1
    ab2e:	701a      	strb	r2, [r3, #0]
										networkInfo.myParent = myParent;
    ab30:	4b39      	ldr	r3, [pc, #228]	; (ac18 <MiWiPROTasks+0x2854>)
    ab32:	781a      	ldrb	r2, [r3, #0]
    ab34:	4b3c      	ldr	r3, [pc, #240]	; (ac28 <MiWiPROTasks+0x2864>)
    ab36:	759a      	strb	r2, [r3, #22]
										NVM_Write_NetInfo(&networkInfo);
    ab38:	4b3b      	ldr	r3, [pc, #236]	; (ac28 <MiWiPROTasks+0x2864>)
    ab3a:	0018      	movs	r0, r3
    ab3c:	4b3e      	ldr	r3, [pc, #248]	; (ac38 <MiWiPROTasks+0x2874>)
    ab3e:	4798      	blx	r3
										NVM_Write_ConTable(ConnectionTable);
    ab40:	4b24      	ldr	r3, [pc, #144]	; (abd4 <MiWiPROTasks+0x2810>)
    ab42:	0018      	movs	r0, r3
    ab44:	4b24      	ldr	r3, [pc, #144]	; (abd8 <MiWiPROTasks+0x2814>)
    ab46:	4798      	blx	r3
                                    printf("\r\nJoin the network successfully\r\n");                            
    ab48:	4b3c      	ldr	r3, [pc, #240]	; (ac3c <MiWiPROTasks+0x2878>)
    ab4a:	0018      	movs	r0, r3
    ab4c:	4b3c      	ldr	r3, [pc, #240]	; (ac40 <MiWiPROTasks+0x287c>)
    ab4e:	4798      	blx	r3
                            break;
    ab50:	f000 fc19 	bl	b386 <MiWiPROTasks+0x2fc2>
                                    myParent = 0xFF;
    ab54:	4b30      	ldr	r3, [pc, #192]	; (ac18 <MiWiPROTasks+0x2854>)
    ab56:	22ff      	movs	r2, #255	; 0xff
    ab58:	701a      	strb	r2, [r3, #0]
                                    myPANID.Val = 0xFFFF;
    ab5a:	4b19      	ldr	r3, [pc, #100]	; (abc0 <MiWiPROTasks+0x27fc>)
    ab5c:	2201      	movs	r2, #1
    ab5e:	4252      	negs	r2, r2
    ab60:	801a      	strh	r2, [r3, #0]
                                    tempShortAddress.Val = 0xFFFF;
    ab62:	4b16      	ldr	r3, [pc, #88]	; (abbc <MiWiPROTasks+0x27f8>)
    ab64:	2201      	movs	r2, #1
    ab66:	4252      	negs	r2, r2
    ab68:	801a      	strh	r2, [r3, #0]
                                    MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
    ab6a:	4a15      	ldr	r2, [pc, #84]	; (abc0 <MiWiPROTasks+0x27fc>)
    ab6c:	4b13      	ldr	r3, [pc, #76]	; (abbc <MiWiPROTasks+0x27f8>)
    ab6e:	0011      	movs	r1, r2
    ab70:	0018      	movs	r0, r3
    ab72:	4b26      	ldr	r3, [pc, #152]	; (ac0c <MiWiPROTasks+0x2848>)
    ab74:	4798      	blx	r3
                                        nvmPutMyParent(&myParent);
    ab76:	4b33      	ldr	r3, [pc, #204]	; (ac44 <MiWiPROTasks+0x2880>)
    ab78:	8819      	ldrh	r1, [r3, #0]
    ab7a:	4b27      	ldr	r3, [pc, #156]	; (ac18 <MiWiPROTasks+0x2854>)
    ab7c:	2201      	movs	r2, #1
    ab7e:	0018      	movs	r0, r3
    ab80:	4b21      	ldr	r3, [pc, #132]	; (ac08 <MiWiPROTasks+0x2844>)
    ab82:	4798      	blx	r3
                                        nvmPutMyPANID(myPANID.v);
    ab84:	4b30      	ldr	r3, [pc, #192]	; (ac48 <MiWiPROTasks+0x2884>)
    ab86:	8819      	ldrh	r1, [r3, #0]
    ab88:	4b0d      	ldr	r3, [pc, #52]	; (abc0 <MiWiPROTasks+0x27fc>)
    ab8a:	2202      	movs	r2, #2
    ab8c:	0018      	movs	r0, r3
    ab8e:	4b1e      	ldr	r3, [pc, #120]	; (ac08 <MiWiPROTasks+0x2844>)
    ab90:	4798      	blx	r3
                            break;
    ab92:	f000 fbf8 	bl	b386 <MiWiPROTasks+0x2fc2>
                                    if( MiWiPROStateMachine.bits.memberOfNetwork == 0 )
    ab96:	4b1e      	ldr	r3, [pc, #120]	; (ac10 <MiWiPROTasks+0x284c>)
    ab98:	781b      	ldrb	r3, [r3, #0]
    ab9a:	2202      	movs	r2, #2
    ab9c:	4013      	ands	r3, r2
    ab9e:	b2db      	uxtb	r3, r3
    aba0:	2b00      	cmp	r3, #0
    aba2:	d101      	bne.n	aba8 <MiWiPROTasks+0x27e4>
    aba4:	f000 fbe4 	bl	b370 <MiWiPROTasks+0x2fac>
                                        for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    aba8:	233f      	movs	r3, #63	; 0x3f
    abaa:	18fb      	adds	r3, r7, r3
    abac:	2200      	movs	r2, #0
    abae:	701a      	strb	r2, [r3, #0]
    abb0:	e05f      	b.n	ac72 <MiWiPROTasks+0x28ae>
    abb2:	46c0      	nop			; (mov r8, r8)
    abb4:	200012c8 	.word	0x200012c8
    abb8:	2000126c 	.word	0x2000126c
    abbc:	200012e0 	.word	0x200012e0
    abc0:	20001290 	.word	0x20001290
    abc4:	200012c0 	.word	0x200012c0
    abc8:	0000cddd 	.word	0x0000cddd
    abcc:	0001ccb4 	.word	0x0001ccb4
    abd0:	0001782d 	.word	0x0001782d
    abd4:	20001150 	.word	0x20001150
    abd8:	0000e80d 	.word	0x0000e80d
    abdc:	200012e4 	.word	0x200012e4
    abe0:	20000034 	.word	0x20000034
    abe4:	20001140 	.word	0x20001140
    abe8:	200012dc 	.word	0x200012dc
    abec:	0000c52d 	.word	0x0000c52d
    abf0:	200014b5 	.word	0x200014b5
    abf4:	0001ccc8 	.word	0x0001ccc8
    abf8:	0000e7a1 	.word	0x0000e7a1
    abfc:	200012de 	.word	0x200012de
    ac00:	20001284 	.word	0x20001284
    ac04:	20001588 	.word	0x20001588
    ac08:	0000e9c1 	.word	0x0000e9c1
    ac0c:	00010211 	.word	0x00010211
    ac10:	20001144 	.word	0x20001144
    ac14:	20001288 	.word	0x20001288
    ac18:	200014b4 	.word	0x200014b4
    ac1c:	200012c4 	.word	0x200012c4
    ac20:	0000ebad 	.word	0x0000ebad
    ac24:	2000113c 	.word	0x2000113c
    ac28:	2000151c 	.word	0x2000151c
    ac2c:	20000010 	.word	0x20000010
    ac30:	00017715 	.word	0x00017715
    ac34:	2000114c 	.word	0x2000114c
    ac38:	0000e8a1 	.word	0x0000e8a1
    ac3c:	0001cce4 	.word	0x0001cce4
    ac40:	00017905 	.word	0x00017905
    ac44:	2000158a 	.word	0x2000158a
    ac48:	2000158c 	.word	0x2000158c
                                            tempLongAddress[i] = MACRxPacket.SourceAddress[i];
    ac4c:	233f      	movs	r3, #63	; 0x3f
    ac4e:	18fb      	adds	r3, r7, r3
    ac50:	781a      	ldrb	r2, [r3, #0]
    ac52:	4bb4      	ldr	r3, [pc, #720]	; (af24 <MiWiPROTasks+0x2b60>)
    ac54:	6859      	ldr	r1, [r3, #4]
    ac56:	233f      	movs	r3, #63	; 0x3f
    ac58:	18fb      	adds	r3, r7, r3
    ac5a:	781b      	ldrb	r3, [r3, #0]
    ac5c:	18cb      	adds	r3, r1, r3
    ac5e:	7819      	ldrb	r1, [r3, #0]
    ac60:	4bb1      	ldr	r3, [pc, #708]	; (af28 <MiWiPROTasks+0x2b64>)
    ac62:	5499      	strb	r1, [r3, r2]
                                        for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    ac64:	233f      	movs	r3, #63	; 0x3f
    ac66:	18fb      	adds	r3, r7, r3
    ac68:	781a      	ldrb	r2, [r3, #0]
    ac6a:	233f      	movs	r3, #63	; 0x3f
    ac6c:	18fb      	adds	r3, r7, r3
    ac6e:	3201      	adds	r2, #1
    ac70:	701a      	strb	r2, [r3, #0]
    ac72:	233f      	movs	r3, #63	; 0x3f
    ac74:	18fb      	adds	r3, r7, r3
    ac76:	781b      	ldrb	r3, [r3, #0]
    ac78:	2b07      	cmp	r3, #7
    ac7a:	d9e7      	bls.n	ac4c <MiWiPROTasks+0x2888>
                                        if( (cIndex = SearchForLongAddress()) == 0xFF )
    ac7c:	232a      	movs	r3, #42	; 0x2a
    ac7e:	18fc      	adds	r4, r7, r3
    ac80:	4baa      	ldr	r3, [pc, #680]	; (af2c <MiWiPROTasks+0x2b68>)
    ac82:	4798      	blx	r3
    ac84:	0003      	movs	r3, r0
    ac86:	7023      	strb	r3, [r4, #0]
    ac88:	232a      	movs	r3, #42	; 0x2a
    ac8a:	18fb      	adds	r3, r7, r3
    ac8c:	781b      	ldrb	r3, [r3, #0]
    ac8e:	2bff      	cmp	r3, #255	; 0xff
    ac90:	d100      	bne.n	ac94 <MiWiPROTasks+0x28d0>
    ac92:	e36f      	b.n	b374 <MiWiPROTasks+0x2fb0>
                                        if( ConnectionTable[cIndex].status.bits.isFamily )
    ac94:	232a      	movs	r3, #42	; 0x2a
    ac96:	18fb      	adds	r3, r7, r3
    ac98:	781b      	ldrb	r3, [r3, #0]
    ac9a:	4aa5      	ldr	r2, [pc, #660]	; (af30 <MiWiPROTasks+0x2b6c>)
    ac9c:	2108      	movs	r1, #8
    ac9e:	011b      	lsls	r3, r3, #4
    aca0:	18d3      	adds	r3, r2, r3
    aca2:	185b      	adds	r3, r3, r1
    aca4:	791b      	ldrb	r3, [r3, #4]
    aca6:	069b      	lsls	r3, r3, #26
    aca8:	0fdb      	lsrs	r3, r3, #31
    acaa:	b2db      	uxtb	r3, r3
    acac:	2b00      	cmp	r3, #0
    acae:	d100      	bne.n	acb2 <MiWiPROTasks+0x28ee>
    acb0:	e362      	b.n	b378 <MiWiPROTasks+0x2fb4>
                                            if( cIndex != myParent ) // it is from my child
    acb2:	4ba0      	ldr	r3, [pc, #640]	; (af34 <MiWiPROTasks+0x2b70>)
    acb4:	781b      	ldrb	r3, [r3, #0]
    acb6:	222a      	movs	r2, #42	; 0x2a
    acb8:	18ba      	adds	r2, r7, r2
    acba:	7812      	ldrb	r2, [r2, #0]
    acbc:	429a      	cmp	r2, r3
    acbe:	d100      	bne.n	acc2 <MiWiPROTasks+0x28fe>
    acc0:	e12a      	b.n	af18 <MiWiPROTasks+0x2b54>
                                                if( ConnectionTable[cIndex].AltAddress.v[0] == 0 )
    acc2:	232a      	movs	r3, #42	; 0x2a
    acc4:	18fb      	adds	r3, r7, r3
    acc6:	781b      	ldrb	r3, [r3, #0]
    acc8:	4a99      	ldr	r2, [pc, #612]	; (af30 <MiWiPROTasks+0x2b6c>)
    acca:	011b      	lsls	r3, r3, #4
    accc:	18d3      	adds	r3, r2, r3
    acce:	3302      	adds	r3, #2
    acd0:	781b      	ldrb	r3, [r3, #0]
    acd2:	2b00      	cmp	r3, #0
    acd4:	d000      	beq.n	acd8 <MiWiPROTasks+0x2914>
    acd6:	e101      	b.n	aedc <MiWiPROTasks+0x2b18>
                                                    if( role == ROLE_PAN_COORDINATOR )
    acd8:	4b97      	ldr	r3, [pc, #604]	; (af38 <MiWiPROTasks+0x2b74>)
    acda:	781b      	ldrb	r3, [r3, #0]
    acdc:	2b02      	cmp	r3, #2
    acde:	d000      	beq.n	ace2 <MiWiPROTasks+0x291e>
    ace0:	e0ae      	b.n	ae40 <MiWiPROTasks+0x2a7c>
                                                        for(i = (NUM_COORDINATOR-1); i > 0; i--)
    ace2:	233f      	movs	r3, #63	; 0x3f
    ace4:	18fb      	adds	r3, r7, r3
    ace6:	2200      	movs	r2, #0
    ace8:	701a      	strb	r2, [r3, #0]
    acea:	e066      	b.n	adba <MiWiPROTasks+0x29f6>
                                                            index = i;
    acec:	2334      	movs	r3, #52	; 0x34
    acee:	18fb      	adds	r3, r7, r3
    acf0:	223f      	movs	r2, #63	; 0x3f
    acf2:	18ba      	adds	r2, r7, r2
    acf4:	7812      	ldrb	r2, [r2, #0]
    acf6:	701a      	strb	r2, [r3, #0]
                                                            loopCheck = 0;
    acf8:	2333      	movs	r3, #51	; 0x33
    acfa:	18fb      	adds	r3, r7, r3
    acfc:	2200      	movs	r2, #0
    acfe:	701a      	strb	r2, [r3, #0]
                                                            while(index > 0)
    ad00:	e049      	b.n	ad96 <MiWiPROTasks+0x29d2>
                                                                if( FamilyTree[index] == 0xFF )
    ad02:	2334      	movs	r3, #52	; 0x34
    ad04:	18fb      	adds	r3, r7, r3
    ad06:	781b      	ldrb	r3, [r3, #0]
    ad08:	4a8c      	ldr	r2, [pc, #560]	; (af3c <MiWiPROTasks+0x2b78>)
    ad0a:	5cd3      	ldrb	r3, [r2, r3]
    ad0c:	2bff      	cmp	r3, #255	; 0xff
    ad0e:	d048      	beq.n	ada2 <MiWiPROTasks+0x29de>
                                                                if( FamilyTree[index] == ConnectionTable[cIndex].AltAddress.v[1] )
    ad10:	2334      	movs	r3, #52	; 0x34
    ad12:	18fb      	adds	r3, r7, r3
    ad14:	781b      	ldrb	r3, [r3, #0]
    ad16:	4a89      	ldr	r2, [pc, #548]	; (af3c <MiWiPROTasks+0x2b78>)
    ad18:	5cd2      	ldrb	r2, [r2, r3]
    ad1a:	232a      	movs	r3, #42	; 0x2a
    ad1c:	18fb      	adds	r3, r7, r3
    ad1e:	781b      	ldrb	r3, [r3, #0]
    ad20:	4983      	ldr	r1, [pc, #524]	; (af30 <MiWiPROTasks+0x2b6c>)
    ad22:	011b      	lsls	r3, r3, #4
    ad24:	18cb      	adds	r3, r1, r3
    ad26:	3303      	adds	r3, #3
    ad28:	781b      	ldrb	r3, [r3, #0]
    ad2a:	429a      	cmp	r2, r3
    ad2c:	d122      	bne.n	ad74 <MiWiPROTasks+0x29b0>
                                                                    FamilyTree[i] = 0xFF;
    ad2e:	233f      	movs	r3, #63	; 0x3f
    ad30:	18fb      	adds	r3, r7, r3
    ad32:	781b      	ldrb	r3, [r3, #0]
    ad34:	4a81      	ldr	r2, [pc, #516]	; (af3c <MiWiPROTasks+0x2b78>)
    ad36:	21ff      	movs	r1, #255	; 0xff
    ad38:	54d1      	strb	r1, [r2, r3]
                                                                    tempShortAddress.v[0] = 0;
    ad3a:	4b81      	ldr	r3, [pc, #516]	; (af40 <MiWiPROTasks+0x2b7c>)
    ad3c:	2200      	movs	r2, #0
    ad3e:	701a      	strb	r2, [r3, #0]
                                                                    tempShortAddress.v[1] = i;
    ad40:	4b7f      	ldr	r3, [pc, #508]	; (af40 <MiWiPROTasks+0x2b7c>)
    ad42:	223f      	movs	r2, #63	; 0x3f
    ad44:	18ba      	adds	r2, r7, r2
    ad46:	7812      	ldrb	r2, [r2, #0]
    ad48:	705a      	strb	r2, [r3, #1]
                                                                    if( (entry2 = SearchForShortAddress()) != 0xFF )
    ad4a:	2329      	movs	r3, #41	; 0x29
    ad4c:	18fc      	adds	r4, r7, r3
    ad4e:	4b7d      	ldr	r3, [pc, #500]	; (af44 <MiWiPROTasks+0x2b80>)
    ad50:	4798      	blx	r3
    ad52:	0003      	movs	r3, r0
    ad54:	7023      	strb	r3, [r4, #0]
    ad56:	2329      	movs	r3, #41	; 0x29
    ad58:	18fb      	adds	r3, r7, r3
    ad5a:	781b      	ldrb	r3, [r3, #0]
    ad5c:	2bff      	cmp	r3, #255	; 0xff
    ad5e:	d022      	beq.n	ada6 <MiWiPROTasks+0x29e2>
                                                                        ConnectionTable[entry2].status.Val = 0;
    ad60:	2329      	movs	r3, #41	; 0x29
    ad62:	18fb      	adds	r3, r7, r3
    ad64:	781b      	ldrb	r3, [r3, #0]
    ad66:	4a72      	ldr	r2, [pc, #456]	; (af30 <MiWiPROTasks+0x2b6c>)
    ad68:	011b      	lsls	r3, r3, #4
    ad6a:	18d3      	adds	r3, r2, r3
    ad6c:	330c      	adds	r3, #12
    ad6e:	2200      	movs	r2, #0
    ad70:	701a      	strb	r2, [r3, #0]
                                                                    break;
    ad72:	e018      	b.n	ada6 <MiWiPROTasks+0x29e2>
                                                                index = FamilyTree[index];
    ad74:	2334      	movs	r3, #52	; 0x34
    ad76:	18fb      	adds	r3, r7, r3
    ad78:	781a      	ldrb	r2, [r3, #0]
    ad7a:	2334      	movs	r3, #52	; 0x34
    ad7c:	18fb      	adds	r3, r7, r3
    ad7e:	496f      	ldr	r1, [pc, #444]	; (af3c <MiWiPROTasks+0x2b78>)
    ad80:	5c8a      	ldrb	r2, [r1, r2]
    ad82:	701a      	strb	r2, [r3, #0]
                                                                if( loopCheck++ > NUM_COORDINATOR )
    ad84:	2333      	movs	r3, #51	; 0x33
    ad86:	18fb      	adds	r3, r7, r3
    ad88:	781b      	ldrb	r3, [r3, #0]
    ad8a:	2233      	movs	r2, #51	; 0x33
    ad8c:	18ba      	adds	r2, r7, r2
    ad8e:	1c59      	adds	r1, r3, #1
    ad90:	7011      	strb	r1, [r2, #0]
    ad92:	2b01      	cmp	r3, #1
    ad94:	d809      	bhi.n	adaa <MiWiPROTasks+0x29e6>
                                                            while(index > 0)
    ad96:	2334      	movs	r3, #52	; 0x34
    ad98:	18fb      	adds	r3, r7, r3
    ad9a:	781b      	ldrb	r3, [r3, #0]
    ad9c:	2b00      	cmp	r3, #0
    ad9e:	d1b0      	bne.n	ad02 <MiWiPROTasks+0x293e>
    ada0:	e004      	b.n	adac <MiWiPROTasks+0x29e8>
                                                                    break;
    ada2:	46c0      	nop			; (mov r8, r8)
    ada4:	e002      	b.n	adac <MiWiPROTasks+0x29e8>
                                                                    break;
    ada6:	46c0      	nop			; (mov r8, r8)
    ada8:	e000      	b.n	adac <MiWiPROTasks+0x29e8>
                                                                    break;
    adaa:	46c0      	nop			; (mov r8, r8)
                                                        for(i = (NUM_COORDINATOR-1); i > 0; i--)
    adac:	233f      	movs	r3, #63	; 0x3f
    adae:	18fb      	adds	r3, r7, r3
    adb0:	781a      	ldrb	r2, [r3, #0]
    adb2:	233f      	movs	r3, #63	; 0x3f
    adb4:	18fb      	adds	r3, r7, r3
    adb6:	3a01      	subs	r2, #1
    adb8:	701a      	strb	r2, [r3, #0]
    adba:	233f      	movs	r3, #63	; 0x3f
    adbc:	18fb      	adds	r3, r7, r3
    adbe:	781b      	ldrb	r3, [r3, #0]
    adc0:	2b00      	cmp	r3, #0
    adc2:	d193      	bne.n	acec <MiWiPROTasks+0x2928>
                                                        FamilyTree[ConnectionTable[cIndex].AltAddress.v[1]] = 0xFF;
    adc4:	232a      	movs	r3, #42	; 0x2a
    adc6:	18fb      	adds	r3, r7, r3
    adc8:	781b      	ldrb	r3, [r3, #0]
    adca:	4a59      	ldr	r2, [pc, #356]	; (af30 <MiWiPROTasks+0x2b6c>)
    adcc:	011b      	lsls	r3, r3, #4
    adce:	18d3      	adds	r3, r2, r3
    add0:	3303      	adds	r3, #3
    add2:	781b      	ldrb	r3, [r3, #0]
    add4:	001a      	movs	r2, r3
    add6:	4b59      	ldr	r3, [pc, #356]	; (af3c <MiWiPROTasks+0x2b78>)
    add8:	21ff      	movs	r1, #255	; 0xff
    adda:	5499      	strb	r1, [r3, r2]
                                                        ConnectionTable[cIndex].status.Val = 0;
    addc:	232a      	movs	r3, #42	; 0x2a
    adde:	18fb      	adds	r3, r7, r3
    ade0:	781b      	ldrb	r3, [r3, #0]
    ade2:	4a53      	ldr	r2, [pc, #332]	; (af30 <MiWiPROTasks+0x2b6c>)
    ade4:	011b      	lsls	r3, r3, #4
    ade6:	18d3      	adds	r3, r2, r3
    ade8:	330c      	adds	r3, #12
    adea:	2200      	movs	r2, #0
    adec:	701a      	strb	r2, [r3, #0]
                                                            nvmPutConnectionTableIndex(&(ConnectionTable[cIndex]), cIndex);  
    adee:	232a      	movs	r3, #42	; 0x2a
    adf0:	18fb      	adds	r3, r7, r3
    adf2:	781b      	ldrb	r3, [r3, #0]
    adf4:	011a      	lsls	r2, r3, #4
    adf6:	4b4e      	ldr	r3, [pc, #312]	; (af30 <MiWiPROTasks+0x2b6c>)
    adf8:	18d0      	adds	r0, r2, r3
    adfa:	232a      	movs	r3, #42	; 0x2a
    adfc:	18fb      	adds	r3, r7, r3
    adfe:	781b      	ldrb	r3, [r3, #0]
    ae00:	b29b      	uxth	r3, r3
    ae02:	011b      	lsls	r3, r3, #4
    ae04:	b29a      	uxth	r2, r3
    ae06:	4b50      	ldr	r3, [pc, #320]	; (af48 <MiWiPROTasks+0x2b84>)
    ae08:	881b      	ldrh	r3, [r3, #0]
    ae0a:	18d3      	adds	r3, r2, r3
    ae0c:	b29b      	uxth	r3, r3
    ae0e:	2210      	movs	r2, #16
    ae10:	0019      	movs	r1, r3
    ae12:	4b4e      	ldr	r3, [pc, #312]	; (af4c <MiWiPROTasks+0x2b88>)
    ae14:	4798      	blx	r3
                                                        MiWiPROStatus.bits.COMM_FAMILY_TREE = FAMILY_TREE_BROADCAST;
    ae16:	4b4e      	ldr	r3, [pc, #312]	; (af50 <MiWiPROTasks+0x2b8c>)
    ae18:	781a      	ldrb	r2, [r3, #0]
    ae1a:	210e      	movs	r1, #14
    ae1c:	438a      	bics	r2, r1
    ae1e:	1c11      	adds	r1, r2, #0
    ae20:	2206      	movs	r2, #6
    ae22:	430a      	orrs	r2, r1
    ae24:	701a      	strb	r2, [r3, #0]
                                                        backgroundTaskTick = MiWi_TickGet();
    ae26:	4b4b      	ldr	r3, [pc, #300]	; (af54 <MiWiPROTasks+0x2b90>)
    ae28:	4798      	blx	r3
    ae2a:	0003      	movs	r3, r0
    ae2c:	001a      	movs	r2, r3
    ae2e:	4b4a      	ldr	r3, [pc, #296]	; (af58 <MiWiPROTasks+0x2b94>)
    ae30:	601a      	str	r2, [r3, #0]
                                                        backgroundTaskTick.Val -= (ONE_SECOND/2);                                                        
    ae32:	4b49      	ldr	r3, [pc, #292]	; (af58 <MiWiPROTasks+0x2b94>)
    ae34:	681b      	ldr	r3, [r3, #0]
    ae36:	4a49      	ldr	r2, [pc, #292]	; (af5c <MiWiPROTasks+0x2b98>)
    ae38:	189a      	adds	r2, r3, r2
    ae3a:	4b47      	ldr	r3, [pc, #284]	; (af58 <MiWiPROTasks+0x2b94>)
    ae3c:	601a      	str	r2, [r3, #0]
    ae3e:	e04d      	b.n	aedc <MiWiPROTasks+0x2b18>
                                                        MiApp_FlushTx();
    ae40:	4b47      	ldr	r3, [pc, #284]	; (af60 <MiWiPROTasks+0x2b9c>)
    ae42:	220b      	movs	r2, #11
    ae44:	701a      	strb	r2, [r3, #0]
                                                        MiApp_WriteData(MIWI_PRO_STACK_REPORT_TYPE);    //Report Type
    ae46:	4b46      	ldr	r3, [pc, #280]	; (af60 <MiWiPROTasks+0x2b9c>)
    ae48:	781b      	ldrb	r3, [r3, #0]
    ae4a:	1c5a      	adds	r2, r3, #1
    ae4c:	b2d1      	uxtb	r1, r2
    ae4e:	4a44      	ldr	r2, [pc, #272]	; (af60 <MiWiPROTasks+0x2b9c>)
    ae50:	7011      	strb	r1, [r2, #0]
    ae52:	001a      	movs	r2, r3
    ae54:	4b43      	ldr	r3, [pc, #268]	; (af64 <MiWiPROTasks+0x2ba0>)
    ae56:	2100      	movs	r1, #0
    ae58:	5499      	strb	r1, [r3, r2]
                                                        MiApp_WriteData(COORDINATOR_REPORT);        //Report ID
    ae5a:	4b41      	ldr	r3, [pc, #260]	; (af60 <MiWiPROTasks+0x2b9c>)
    ae5c:	781b      	ldrb	r3, [r3, #0]
    ae5e:	1c5a      	adds	r2, r3, #1
    ae60:	b2d1      	uxtb	r1, r2
    ae62:	4a3f      	ldr	r2, [pc, #252]	; (af60 <MiWiPROTasks+0x2b9c>)
    ae64:	7011      	strb	r1, [r2, #0]
    ae66:	001a      	movs	r2, r3
    ae68:	4b3e      	ldr	r3, [pc, #248]	; (af64 <MiWiPROTasks+0x2ba0>)
    ae6a:	21a0      	movs	r1, #160	; 0xa0
    ae6c:	5499      	strb	r1, [r3, r2]
                                                        MiApp_WriteData(COORDINATOR_REPORT_STATUS_LEAVE);
    ae6e:	4b3c      	ldr	r3, [pc, #240]	; (af60 <MiWiPROTasks+0x2b9c>)
    ae70:	781b      	ldrb	r3, [r3, #0]
    ae72:	1c5a      	adds	r2, r3, #1
    ae74:	b2d1      	uxtb	r1, r2
    ae76:	4a3a      	ldr	r2, [pc, #232]	; (af60 <MiWiPROTasks+0x2b9c>)
    ae78:	7011      	strb	r1, [r2, #0]
    ae7a:	001a      	movs	r2, r3
    ae7c:	4b39      	ldr	r3, [pc, #228]	; (af64 <MiWiPROTasks+0x2ba0>)
    ae7e:	2101      	movs	r1, #1
    ae80:	5499      	strb	r1, [r3, r2]
                                                        for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    ae82:	233f      	movs	r3, #63	; 0x3f
    ae84:	18fb      	adds	r3, r7, r3
    ae86:	2200      	movs	r2, #0
    ae88:	701a      	strb	r2, [r3, #0]
    ae8a:	e01b      	b.n	aec4 <MiWiPROTasks+0x2b00>
                                                            MiApp_WriteData(ConnectionTable[cIndex].Address[i]);
    ae8c:	4b34      	ldr	r3, [pc, #208]	; (af60 <MiWiPROTasks+0x2b9c>)
    ae8e:	781b      	ldrb	r3, [r3, #0]
    ae90:	1c5a      	adds	r2, r3, #1
    ae92:	b2d1      	uxtb	r1, r2
    ae94:	4a32      	ldr	r2, [pc, #200]	; (af60 <MiWiPROTasks+0x2b9c>)
    ae96:	7011      	strb	r1, [r2, #0]
    ae98:	0018      	movs	r0, r3
    ae9a:	232a      	movs	r3, #42	; 0x2a
    ae9c:	18fb      	adds	r3, r7, r3
    ae9e:	781a      	ldrb	r2, [r3, #0]
    aea0:	233f      	movs	r3, #63	; 0x3f
    aea2:	18fb      	adds	r3, r7, r3
    aea4:	781b      	ldrb	r3, [r3, #0]
    aea6:	4922      	ldr	r1, [pc, #136]	; (af30 <MiWiPROTasks+0x2b6c>)
    aea8:	0112      	lsls	r2, r2, #4
    aeaa:	188a      	adds	r2, r1, r2
    aeac:	18d3      	adds	r3, r2, r3
    aeae:	3304      	adds	r3, #4
    aeb0:	781a      	ldrb	r2, [r3, #0]
    aeb2:	4b2c      	ldr	r3, [pc, #176]	; (af64 <MiWiPROTasks+0x2ba0>)
    aeb4:	541a      	strb	r2, [r3, r0]
                                                        for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    aeb6:	233f      	movs	r3, #63	; 0x3f
    aeb8:	18fb      	adds	r3, r7, r3
    aeba:	781a      	ldrb	r2, [r3, #0]
    aebc:	233f      	movs	r3, #63	; 0x3f
    aebe:	18fb      	adds	r3, r7, r3
    aec0:	3201      	adds	r2, #1
    aec2:	701a      	strb	r2, [r3, #0]
    aec4:	233f      	movs	r3, #63	; 0x3f
    aec6:	18fb      	adds	r3, r7, r3
    aec8:	781b      	ldrb	r3, [r3, #0]
    aeca:	2b07      	cmp	r3, #7
    aecc:	d9de      	bls.n	ae8c <MiWiPROTasks+0x2ac8>
                                                        tempShortAddress.Val = 0;
    aece:	4b1c      	ldr	r3, [pc, #112]	; (af40 <MiWiPROTasks+0x2b7c>)
    aed0:	2200      	movs	r2, #0
    aed2:	801a      	strh	r2, [r3, #0]
                                                        UnicastShortAddress(tempShortAddress.v);
    aed4:	4b1a      	ldr	r3, [pc, #104]	; (af40 <MiWiPROTasks+0x2b7c>)
    aed6:	0018      	movs	r0, r3
    aed8:	4b23      	ldr	r3, [pc, #140]	; (af68 <MiWiPROTasks+0x2ba4>)
    aeda:	4798      	blx	r3
                                                ConnectionTable[cIndex].status.Val = 0;
    aedc:	232a      	movs	r3, #42	; 0x2a
    aede:	18fb      	adds	r3, r7, r3
    aee0:	781b      	ldrb	r3, [r3, #0]
    aee2:	4a13      	ldr	r2, [pc, #76]	; (af30 <MiWiPROTasks+0x2b6c>)
    aee4:	011b      	lsls	r3, r3, #4
    aee6:	18d3      	adds	r3, r2, r3
    aee8:	330c      	adds	r3, #12
    aeea:	2200      	movs	r2, #0
    aeec:	701a      	strb	r2, [r3, #0]
                                                    nvmPutConnectionTableIndex(&(ConnectionTable[cIndex]), cIndex);
    aeee:	232a      	movs	r3, #42	; 0x2a
    aef0:	18fb      	adds	r3, r7, r3
    aef2:	781b      	ldrb	r3, [r3, #0]
    aef4:	011a      	lsls	r2, r3, #4
    aef6:	4b0e      	ldr	r3, [pc, #56]	; (af30 <MiWiPROTasks+0x2b6c>)
    aef8:	18d0      	adds	r0, r2, r3
    aefa:	232a      	movs	r3, #42	; 0x2a
    aefc:	18fb      	adds	r3, r7, r3
    aefe:	781b      	ldrb	r3, [r3, #0]
    af00:	b29b      	uxth	r3, r3
    af02:	011b      	lsls	r3, r3, #4
    af04:	b29a      	uxth	r2, r3
    af06:	4b10      	ldr	r3, [pc, #64]	; (af48 <MiWiPROTasks+0x2b84>)
    af08:	881b      	ldrh	r3, [r3, #0]
    af0a:	18d3      	adds	r3, r2, r3
    af0c:	b29b      	uxth	r3, r3
    af0e:	2210      	movs	r2, #16
    af10:	0019      	movs	r1, r3
    af12:	4b0e      	ldr	r3, [pc, #56]	; (af4c <MiWiPROTasks+0x2b88>)
    af14:	4798      	blx	r3
                                break;
    af16:	e22f      	b.n	b378 <MiWiPROTasks+0x2fb4>
                                                for(i = 0; i < CONNECTION_SIZE; i++)
    af18:	233f      	movs	r3, #63	; 0x3f
    af1a:	18fb      	adds	r3, r7, r3
    af1c:	2200      	movs	r2, #0
    af1e:	701a      	strb	r2, [r3, #0]
    af20:	e08b      	b.n	b03a <MiWiPROTasks+0x2c76>
    af22:	46c0      	nop			; (mov r8, r8)
    af24:	2000126c 	.word	0x2000126c
    af28:	20001288 	.word	0x20001288
    af2c:	0000cd35 	.word	0x0000cd35
    af30:	20001150 	.word	0x20001150
    af34:	200014b4 	.word	0x200014b4
    af38:	200012de 	.word	0x200012de
    af3c:	20001518 	.word	0x20001518
    af40:	200012e0 	.word	0x200012e0
    af44:	0000cb71 	.word	0x0000cb71
    af48:	2000159a 	.word	0x2000159a
    af4c:	0000e9c1 	.word	0x0000e9c1
    af50:	200012c4 	.word	0x200012c4
    af54:	0000ebad 	.word	0x0000ebad
    af58:	2000113c 	.word	0x2000113c
    af5c:	fffff800 	.word	0xfffff800
    af60:	200012dc 	.word	0x200012dc
    af64:	200012e4 	.word	0x200012e4
    af68:	0000db3d 	.word	0x0000db3d
                                                    if( ConnectionTable[i].status.bits.isValid &&
    af6c:	233f      	movs	r3, #63	; 0x3f
    af6e:	18fb      	adds	r3, r7, r3
    af70:	781b      	ldrb	r3, [r3, #0]
    af72:	4adc      	ldr	r2, [pc, #880]	; (b2e4 <MiWiPROTasks+0x2f20>)
    af74:	2108      	movs	r1, #8
    af76:	011b      	lsls	r3, r3, #4
    af78:	18d3      	adds	r3, r2, r3
    af7a:	185b      	adds	r3, r3, r1
    af7c:	791b      	ldrb	r3, [r3, #4]
    af7e:	061b      	lsls	r3, r3, #24
    af80:	0fdb      	lsrs	r3, r3, #31
    af82:	b2db      	uxtb	r3, r3
    af84:	2b00      	cmp	r3, #0
    af86:	d048      	beq.n	b01a <MiWiPROTasks+0x2c56>
                                                        ConnectionTable[i].status.bits.isFamily && (i != myParent ))
    af88:	233f      	movs	r3, #63	; 0x3f
    af8a:	18fb      	adds	r3, r7, r3
    af8c:	781b      	ldrb	r3, [r3, #0]
    af8e:	4ad5      	ldr	r2, [pc, #852]	; (b2e4 <MiWiPROTasks+0x2f20>)
    af90:	2108      	movs	r1, #8
    af92:	011b      	lsls	r3, r3, #4
    af94:	18d3      	adds	r3, r2, r3
    af96:	185b      	adds	r3, r3, r1
    af98:	791b      	ldrb	r3, [r3, #4]
    af9a:	069b      	lsls	r3, r3, #26
    af9c:	0fdb      	lsrs	r3, r3, #31
    af9e:	b2db      	uxtb	r3, r3
                                                    if( ConnectionTable[i].status.bits.isValid &&
    afa0:	2b00      	cmp	r3, #0
    afa2:	d03a      	beq.n	b01a <MiWiPROTasks+0x2c56>
                                                        ConnectionTable[i].status.bits.isFamily && (i != myParent ))
    afa4:	4bd0      	ldr	r3, [pc, #832]	; (b2e8 <MiWiPROTasks+0x2f24>)
    afa6:	781b      	ldrb	r3, [r3, #0]
    afa8:	223f      	movs	r2, #63	; 0x3f
    afaa:	18ba      	adds	r2, r7, r2
    afac:	7812      	ldrb	r2, [r2, #0]
    afae:	429a      	cmp	r2, r3
    afb0:	d033      	beq.n	b01a <MiWiPROTasks+0x2c56>
                                                        MAC_FlushTx();
    afb2:	4bce      	ldr	r3, [pc, #824]	; (b2ec <MiWiPROTasks+0x2f28>)
    afb4:	2200      	movs	r2, #0
    afb6:	701a      	strb	r2, [r3, #0]
                                                        MiApp_WriteData(MAC_COMMAND_DISASSOCIATION_NOTIFICATION);
    afb8:	4bcc      	ldr	r3, [pc, #816]	; (b2ec <MiWiPROTasks+0x2f28>)
    afba:	781b      	ldrb	r3, [r3, #0]
    afbc:	1c5a      	adds	r2, r3, #1
    afbe:	b2d1      	uxtb	r1, r2
    afc0:	4aca      	ldr	r2, [pc, #808]	; (b2ec <MiWiPROTasks+0x2f28>)
    afc2:	7011      	strb	r1, [r2, #0]
    afc4:	001a      	movs	r2, r3
    afc6:	4bca      	ldr	r3, [pc, #808]	; (b2f0 <MiWiPROTasks+0x2f2c>)
    afc8:	2103      	movs	r1, #3
    afca:	5499      	strb	r1, [r3, r2]
                                                        MTP.flags.Val = 0;
    afcc:	4bc9      	ldr	r3, [pc, #804]	; (b2f4 <MiWiPROTasks+0x2f30>)
    afce:	2200      	movs	r2, #0
    afd0:	701a      	strb	r2, [r3, #0]
                                                        MTP.flags.bits.ackReq = 1;
    afd2:	4bc8      	ldr	r3, [pc, #800]	; (b2f4 <MiWiPROTasks+0x2f30>)
    afd4:	781a      	ldrb	r2, [r3, #0]
    afd6:	2120      	movs	r1, #32
    afd8:	430a      	orrs	r2, r1
    afda:	701a      	strb	r2, [r3, #0]
                                                        MTP.flags.bits.packetType = PACKET_TYPE_COMMAND;                                                
    afdc:	4bc5      	ldr	r3, [pc, #788]	; (b2f4 <MiWiPROTasks+0x2f30>)
    afde:	781a      	ldrb	r2, [r3, #0]
    afe0:	2103      	movs	r1, #3
    afe2:	438a      	bics	r2, r1
    afe4:	1c11      	adds	r1, r2, #0
    afe6:	2201      	movs	r2, #1
    afe8:	430a      	orrs	r2, r1
    afea:	701a      	strb	r2, [r3, #0]
                                                            MTP.flags.bits.sourcePrsnt = 1;
    afec:	4bc1      	ldr	r3, [pc, #772]	; (b2f4 <MiWiPROTasks+0x2f30>)
    afee:	781a      	ldrb	r2, [r3, #0]
    aff0:	2180      	movs	r1, #128	; 0x80
    aff2:	4249      	negs	r1, r1
    aff4:	430a      	orrs	r2, r1
    aff6:	701a      	strb	r2, [r3, #0]
                                                            MTP.DestAddress = ConnectionTable[i].Address;
    aff8:	233f      	movs	r3, #63	; 0x3f
    affa:	18fb      	adds	r3, r7, r3
    affc:	781b      	ldrb	r3, [r3, #0]
    affe:	011a      	lsls	r2, r3, #4
    b000:	4bb8      	ldr	r3, [pc, #736]	; (b2e4 <MiWiPROTasks+0x2f20>)
    b002:	18d3      	adds	r3, r2, r3
    b004:	1d1a      	adds	r2, r3, #4
    b006:	4bbb      	ldr	r3, [pc, #748]	; (b2f4 <MiWiPROTasks+0x2f30>)
    b008:	605a      	str	r2, [r3, #4]
                                                        MiMAC_SendPacket(MTP, TxBuffer, TxData);
    b00a:	4bb8      	ldr	r3, [pc, #736]	; (b2ec <MiWiPROTasks+0x2f28>)
    b00c:	781b      	ldrb	r3, [r3, #0]
    b00e:	4ab8      	ldr	r2, [pc, #736]	; (b2f0 <MiWiPROTasks+0x2f2c>)
    b010:	49b8      	ldr	r1, [pc, #736]	; (b2f4 <MiWiPROTasks+0x2f30>)
    b012:	6808      	ldr	r0, [r1, #0]
    b014:	6849      	ldr	r1, [r1, #4]
    b016:	4cb8      	ldr	r4, [pc, #736]	; (b2f8 <MiWiPROTasks+0x2f34>)
    b018:	47a0      	blx	r4
                                                    ConnectionTable[i].status.Val = 0;
    b01a:	233f      	movs	r3, #63	; 0x3f
    b01c:	18fb      	adds	r3, r7, r3
    b01e:	781b      	ldrb	r3, [r3, #0]
    b020:	4ab0      	ldr	r2, [pc, #704]	; (b2e4 <MiWiPROTasks+0x2f20>)
    b022:	011b      	lsls	r3, r3, #4
    b024:	18d3      	adds	r3, r2, r3
    b026:	330c      	adds	r3, #12
    b028:	2200      	movs	r2, #0
    b02a:	701a      	strb	r2, [r3, #0]
                                                for(i = 0; i < CONNECTION_SIZE; i++)
    b02c:	233f      	movs	r3, #63	; 0x3f
    b02e:	18fb      	adds	r3, r7, r3
    b030:	781a      	ldrb	r2, [r3, #0]
    b032:	233f      	movs	r3, #63	; 0x3f
    b034:	18fb      	adds	r3, r7, r3
    b036:	3201      	adds	r2, #1
    b038:	701a      	strb	r2, [r3, #0]
    b03a:	233f      	movs	r3, #63	; 0x3f
    b03c:	18fb      	adds	r3, r7, r3
    b03e:	781b      	ldrb	r3, [r3, #0]
    b040:	2b0f      	cmp	r3, #15
    b042:	d993      	bls.n	af6c <MiWiPROTasks+0x2ba8>
                                                MiApp_FlushTx();
    b044:	4ba9      	ldr	r3, [pc, #676]	; (b2ec <MiWiPROTasks+0x2f28>)
    b046:	220b      	movs	r2, #11
    b048:	701a      	strb	r2, [r3, #0]
                                                MiApp_WriteData(MIWI_PRO_STACK_REPORT_TYPE);    //Report Type
    b04a:	4ba8      	ldr	r3, [pc, #672]	; (b2ec <MiWiPROTasks+0x2f28>)
    b04c:	781b      	ldrb	r3, [r3, #0]
    b04e:	1c5a      	adds	r2, r3, #1
    b050:	b2d1      	uxtb	r1, r2
    b052:	4aa6      	ldr	r2, [pc, #664]	; (b2ec <MiWiPROTasks+0x2f28>)
    b054:	7011      	strb	r1, [r2, #0]
    b056:	001a      	movs	r2, r3
    b058:	4ba5      	ldr	r3, [pc, #660]	; (b2f0 <MiWiPROTasks+0x2f2c>)
    b05a:	2100      	movs	r1, #0
    b05c:	5499      	strb	r1, [r3, r2]
                                                MiApp_WriteData(COORDINATOR_REPORT);        //Report ID
    b05e:	4ba3      	ldr	r3, [pc, #652]	; (b2ec <MiWiPROTasks+0x2f28>)
    b060:	781b      	ldrb	r3, [r3, #0]
    b062:	1c5a      	adds	r2, r3, #1
    b064:	b2d1      	uxtb	r1, r2
    b066:	4aa1      	ldr	r2, [pc, #644]	; (b2ec <MiWiPROTasks+0x2f28>)
    b068:	7011      	strb	r1, [r2, #0]
    b06a:	001a      	movs	r2, r3
    b06c:	4ba0      	ldr	r3, [pc, #640]	; (b2f0 <MiWiPROTasks+0x2f2c>)
    b06e:	21a0      	movs	r1, #160	; 0xa0
    b070:	5499      	strb	r1, [r3, r2]
                                                MiApp_WriteData(COORDINATOR_REPORT_STATUS_LEAVE);
    b072:	4b9e      	ldr	r3, [pc, #632]	; (b2ec <MiWiPROTasks+0x2f28>)
    b074:	781b      	ldrb	r3, [r3, #0]
    b076:	1c5a      	adds	r2, r3, #1
    b078:	b2d1      	uxtb	r1, r2
    b07a:	4a9c      	ldr	r2, [pc, #624]	; (b2ec <MiWiPROTasks+0x2f28>)
    b07c:	7011      	strb	r1, [r2, #0]
    b07e:	001a      	movs	r2, r3
    b080:	4b9b      	ldr	r3, [pc, #620]	; (b2f0 <MiWiPROTasks+0x2f2c>)
    b082:	2101      	movs	r1, #1
    b084:	5499      	strb	r1, [r3, r2]
                                                for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    b086:	233f      	movs	r3, #63	; 0x3f
    b088:	18fb      	adds	r3, r7, r3
    b08a:	2200      	movs	r2, #0
    b08c:	701a      	strb	r2, [r3, #0]
    b08e:	e01b      	b.n	b0c8 <MiWiPROTasks+0x2d04>
                                                    MiApp_WriteData(ConnectionTable[cIndex].Address[i]);
    b090:	4b96      	ldr	r3, [pc, #600]	; (b2ec <MiWiPROTasks+0x2f28>)
    b092:	781b      	ldrb	r3, [r3, #0]
    b094:	1c5a      	adds	r2, r3, #1
    b096:	b2d1      	uxtb	r1, r2
    b098:	4a94      	ldr	r2, [pc, #592]	; (b2ec <MiWiPROTasks+0x2f28>)
    b09a:	7011      	strb	r1, [r2, #0]
    b09c:	0018      	movs	r0, r3
    b09e:	232a      	movs	r3, #42	; 0x2a
    b0a0:	18fb      	adds	r3, r7, r3
    b0a2:	781a      	ldrb	r2, [r3, #0]
    b0a4:	233f      	movs	r3, #63	; 0x3f
    b0a6:	18fb      	adds	r3, r7, r3
    b0a8:	781b      	ldrb	r3, [r3, #0]
    b0aa:	498e      	ldr	r1, [pc, #568]	; (b2e4 <MiWiPROTasks+0x2f20>)
    b0ac:	0112      	lsls	r2, r2, #4
    b0ae:	188a      	adds	r2, r1, r2
    b0b0:	18d3      	adds	r3, r2, r3
    b0b2:	3304      	adds	r3, #4
    b0b4:	781a      	ldrb	r2, [r3, #0]
    b0b6:	4b8e      	ldr	r3, [pc, #568]	; (b2f0 <MiWiPROTasks+0x2f2c>)
    b0b8:	541a      	strb	r2, [r3, r0]
                                                for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    b0ba:	233f      	movs	r3, #63	; 0x3f
    b0bc:	18fb      	adds	r3, r7, r3
    b0be:	781a      	ldrb	r2, [r3, #0]
    b0c0:	233f      	movs	r3, #63	; 0x3f
    b0c2:	18fb      	adds	r3, r7, r3
    b0c4:	3201      	adds	r2, #1
    b0c6:	701a      	strb	r2, [r3, #0]
    b0c8:	233f      	movs	r3, #63	; 0x3f
    b0ca:	18fb      	adds	r3, r7, r3
    b0cc:	781b      	ldrb	r3, [r3, #0]
    b0ce:	2b07      	cmp	r3, #7
    b0d0:	d9de      	bls.n	b090 <MiWiPROTasks+0x2ccc>
                                                tempShortAddress.Val = 0;
    b0d2:	4b8a      	ldr	r3, [pc, #552]	; (b2fc <MiWiPROTasks+0x2f38>)
    b0d4:	2200      	movs	r2, #0
    b0d6:	801a      	strh	r2, [r3, #0]
                                                UnicastShortAddress(tempShortAddress.v);
    b0d8:	4b88      	ldr	r3, [pc, #544]	; (b2fc <MiWiPROTasks+0x2f38>)
    b0da:	0018      	movs	r0, r3
    b0dc:	4b88      	ldr	r3, [pc, #544]	; (b300 <MiWiPROTasks+0x2f3c>)
    b0de:	4798      	blx	r3
                                                myParent = 0xFF;
    b0e0:	4b81      	ldr	r3, [pc, #516]	; (b2e8 <MiWiPROTasks+0x2f24>)
    b0e2:	22ff      	movs	r2, #255	; 0xff
    b0e4:	701a      	strb	r2, [r3, #0]
                                                myShortAddress.Val = 0xFFFF;
    b0e6:	4b87      	ldr	r3, [pc, #540]	; (b304 <MiWiPROTasks+0x2f40>)
    b0e8:	2201      	movs	r2, #1
    b0ea:	4252      	negs	r2, r2
    b0ec:	801a      	strh	r2, [r3, #0]
                                                myPANID.Val = 0xFFFF;
    b0ee:	4b86      	ldr	r3, [pc, #536]	; (b308 <MiWiPROTasks+0x2f44>)
    b0f0:	2201      	movs	r2, #1
    b0f2:	4252      	negs	r2, r2
    b0f4:	801a      	strh	r2, [r3, #0]
                                                MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
    b0f6:	4a84      	ldr	r2, [pc, #528]	; (b308 <MiWiPROTasks+0x2f44>)
    b0f8:	4b82      	ldr	r3, [pc, #520]	; (b304 <MiWiPROTasks+0x2f40>)
    b0fa:	0011      	movs	r1, r2
    b0fc:	0018      	movs	r0, r3
    b0fe:	4b83      	ldr	r3, [pc, #524]	; (b30c <MiWiPROTasks+0x2f48>)
    b100:	4798      	blx	r3
                                                MiWiPROStateMachine.bits.memberOfNetwork = 0;
    b102:	4b83      	ldr	r3, [pc, #524]	; (b310 <MiWiPROTasks+0x2f4c>)
    b104:	781a      	ldrb	r2, [r3, #0]
    b106:	2102      	movs	r1, #2
    b108:	438a      	bics	r2, r1
    b10a:	701a      	strb	r2, [r3, #0]
                                                for(i = 0; i < NUM_COORDINATOR; i++)
    b10c:	233f      	movs	r3, #63	; 0x3f
    b10e:	18fb      	adds	r3, r7, r3
    b110:	2200      	movs	r2, #0
    b112:	701a      	strb	r2, [r3, #0]
    b114:	e011      	b.n	b13a <MiWiPROTasks+0x2d76>
                                                    FamilyTree[i] = 0xFF;
    b116:	233f      	movs	r3, #63	; 0x3f
    b118:	18fb      	adds	r3, r7, r3
    b11a:	781b      	ldrb	r3, [r3, #0]
    b11c:	4a7d      	ldr	r2, [pc, #500]	; (b314 <MiWiPROTasks+0x2f50>)
    b11e:	21ff      	movs	r1, #255	; 0xff
    b120:	54d1      	strb	r1, [r2, r3]
                                                    for(cIndex = 0; cIndex < NUM_COORDINATOR/8; cIndex++)
    b122:	232a      	movs	r3, #42	; 0x2a
    b124:	18fb      	adds	r3, r7, r3
    b126:	2200      	movs	r2, #0
    b128:	701a      	strb	r2, [r3, #0]
    b12a:	46c0      	nop			; (mov r8, r8)
                                                for(i = 0; i < NUM_COORDINATOR; i++)
    b12c:	233f      	movs	r3, #63	; 0x3f
    b12e:	18fb      	adds	r3, r7, r3
    b130:	781a      	ldrb	r2, [r3, #0]
    b132:	233f      	movs	r3, #63	; 0x3f
    b134:	18fb      	adds	r3, r7, r3
    b136:	3201      	adds	r2, #1
    b138:	701a      	strb	r2, [r3, #0]
    b13a:	233f      	movs	r3, #63	; 0x3f
    b13c:	18fb      	adds	r3, r7, r3
    b13e:	781b      	ldrb	r3, [r3, #0]
    b140:	2b00      	cmp	r3, #0
    b142:	d0e8      	beq.n	b116 <MiWiPROTasks+0x2d52>
                                                for(i = 0; i < NUM_COORDINATOR/8; i++)
    b144:	233f      	movs	r3, #63	; 0x3f
    b146:	18fb      	adds	r3, r7, r3
    b148:	2200      	movs	r2, #0
    b14a:	701a      	strb	r2, [r3, #0]
    b14c:	46c0      	nop			; (mov r8, r8)
                                                    nvmPutMyParent(&myParent);
    b14e:	4b72      	ldr	r3, [pc, #456]	; (b318 <MiWiPROTasks+0x2f54>)
    b150:	8819      	ldrh	r1, [r3, #0]
    b152:	4b65      	ldr	r3, [pc, #404]	; (b2e8 <MiWiPROTasks+0x2f24>)
    b154:	2201      	movs	r2, #1
    b156:	0018      	movs	r0, r3
    b158:	4b70      	ldr	r3, [pc, #448]	; (b31c <MiWiPROTasks+0x2f58>)
    b15a:	4798      	blx	r3
                                                    nvmPutMyShortAddress(myShortAddress.v);
    b15c:	4b70      	ldr	r3, [pc, #448]	; (b320 <MiWiPROTasks+0x2f5c>)
    b15e:	8819      	ldrh	r1, [r3, #0]
    b160:	4b68      	ldr	r3, [pc, #416]	; (b304 <MiWiPROTasks+0x2f40>)
    b162:	2202      	movs	r2, #2
    b164:	0018      	movs	r0, r3
    b166:	4b6d      	ldr	r3, [pc, #436]	; (b31c <MiWiPROTasks+0x2f58>)
    b168:	4798      	blx	r3
                                                    nvmPutMyPANID(myPANID.v);
    b16a:	4b6e      	ldr	r3, [pc, #440]	; (b324 <MiWiPROTasks+0x2f60>)
    b16c:	8819      	ldrh	r1, [r3, #0]
    b16e:	4b66      	ldr	r3, [pc, #408]	; (b308 <MiWiPROTasks+0x2f44>)
    b170:	2202      	movs	r2, #2
    b172:	0018      	movs	r0, r3
    b174:	4b69      	ldr	r3, [pc, #420]	; (b31c <MiWiPROTasks+0x2f58>)
    b176:	4798      	blx	r3
                                                    nvmPutFamilyTree(FamilyTree);
    b178:	4b6b      	ldr	r3, [pc, #428]	; (b328 <MiWiPROTasks+0x2f64>)
    b17a:	8819      	ldrh	r1, [r3, #0]
    b17c:	4b65      	ldr	r3, [pc, #404]	; (b314 <MiWiPROTasks+0x2f50>)
    b17e:	2201      	movs	r2, #1
    b180:	0018      	movs	r0, r3
    b182:	4b66      	ldr	r3, [pc, #408]	; (b31c <MiWiPROTasks+0x2f58>)
    b184:	4798      	blx	r3
                                                    nvmPutRoutingTable(RoutingTable);
    b186:	4b69      	ldr	r3, [pc, #420]	; (b32c <MiWiPROTasks+0x2f68>)
    b188:	8819      	ldrh	r1, [r3, #0]
    b18a:	4b69      	ldr	r3, [pc, #420]	; (b330 <MiWiPROTasks+0x2f6c>)
    b18c:	2200      	movs	r2, #0
    b18e:	0018      	movs	r0, r3
    b190:	4b62      	ldr	r3, [pc, #392]	; (b31c <MiWiPROTasks+0x2f58>)
    b192:	4798      	blx	r3
                                                    nvmPutNeighborRoutingTable(NeighborRoutingTable);
    b194:	4b67      	ldr	r3, [pc, #412]	; (b334 <MiWiPROTasks+0x2f70>)
    b196:	8819      	ldrh	r1, [r3, #0]
    b198:	4b67      	ldr	r3, [pc, #412]	; (b338 <MiWiPROTasks+0x2f74>)
    b19a:	2200      	movs	r2, #0
    b19c:	0018      	movs	r0, r3
    b19e:	4b5f      	ldr	r3, [pc, #380]	; (b31c <MiWiPROTasks+0x2f58>)
    b1a0:	4798      	blx	r3
                                                    nvmPutConnectionTable(ConnectionTable);
    b1a2:	4b66      	ldr	r3, [pc, #408]	; (b33c <MiWiPROTasks+0x2f78>)
    b1a4:	8819      	ldrh	r1, [r3, #0]
    b1a6:	2380      	movs	r3, #128	; 0x80
    b1a8:	005a      	lsls	r2, r3, #1
    b1aa:	4b4e      	ldr	r3, [pc, #312]	; (b2e4 <MiWiPROTasks+0x2f20>)
    b1ac:	0018      	movs	r0, r3
    b1ae:	4b5b      	ldr	r3, [pc, #364]	; (b31c <MiWiPROTasks+0x2f58>)
    b1b0:	4798      	blx	r3
                                break;
    b1b2:	e0e1      	b.n	b378 <MiWiPROTasks+0x2fb4>
                                if( ConnMode > ENABLE_ACTIVE_SCAN_RSP )
    b1b4:	4b62      	ldr	r3, [pc, #392]	; (b340 <MiWiPROTasks+0x2f7c>)
    b1b6:	781b      	ldrb	r3, [r3, #0]
    b1b8:	2b02      	cmp	r3, #2
    b1ba:	d900      	bls.n	b1be <MiWiPROTasks+0x2dfa>
    b1bc:	e0de      	b.n	b37c <MiWiPROTasks+0x2fb8>
                                if(MiWiPROStateMachine.bits.memberOfNetwork)
    b1be:	4b54      	ldr	r3, [pc, #336]	; (b310 <MiWiPROTasks+0x2f4c>)
    b1c0:	781b      	ldrb	r3, [r3, #0]
    b1c2:	2202      	movs	r2, #2
    b1c4:	4013      	ands	r3, r2
    b1c6:	b2db      	uxtb	r3, r3
    b1c8:	2b00      	cmp	r3, #0
    b1ca:	d100      	bne.n	b1ce <MiWiPROTasks+0x2e0a>
    b1cc:	e0d8      	b.n	b380 <MiWiPROTasks+0x2fbc>
									if(currentChannel==1) {
    b1ce:	4b5d      	ldr	r3, [pc, #372]	; (b344 <MiWiPROTasks+0x2f80>)
    b1d0:	781b      	ldrb	r3, [r3, #0]
    b1d2:	2b01      	cmp	r3, #1
    b1d4:	d104      	bne.n	b1e0 <MiWiPROTasks+0x2e1c>
										Conv_channel=2;
    b1d6:	2328      	movs	r3, #40	; 0x28
    b1d8:	18fb      	adds	r3, r7, r3
    b1da:	2202      	movs	r2, #2
    b1dc:	701a      	strb	r2, [r3, #0]
    b1de:	e06a      	b.n	b2b6 <MiWiPROTasks+0x2ef2>
									}else if(currentChannel==2) {
    b1e0:	4b58      	ldr	r3, [pc, #352]	; (b344 <MiWiPROTasks+0x2f80>)
    b1e2:	781b      	ldrb	r3, [r3, #0]
    b1e4:	2b02      	cmp	r3, #2
    b1e6:	d104      	bne.n	b1f2 <MiWiPROTasks+0x2e2e>
										Conv_channel=5;
    b1e8:	2328      	movs	r3, #40	; 0x28
    b1ea:	18fb      	adds	r3, r7, r3
    b1ec:	2205      	movs	r2, #5
    b1ee:	701a      	strb	r2, [r3, #0]
    b1f0:	e061      	b.n	b2b6 <MiWiPROTasks+0x2ef2>
									}else if(currentChannel==3) {
    b1f2:	4b54      	ldr	r3, [pc, #336]	; (b344 <MiWiPROTasks+0x2f80>)
    b1f4:	781b      	ldrb	r3, [r3, #0]
    b1f6:	2b03      	cmp	r3, #3
    b1f8:	d104      	bne.n	b204 <MiWiPROTasks+0x2e40>
										Conv_channel=8;
    b1fa:	2328      	movs	r3, #40	; 0x28
    b1fc:	18fb      	adds	r3, r7, r3
    b1fe:	2208      	movs	r2, #8
    b200:	701a      	strb	r2, [r3, #0]
    b202:	e058      	b.n	b2b6 <MiWiPROTasks+0x2ef2>
									}else if(currentChannel==4) {
    b204:	4b4f      	ldr	r3, [pc, #316]	; (b344 <MiWiPROTasks+0x2f80>)
    b206:	781b      	ldrb	r3, [r3, #0]
    b208:	2b04      	cmp	r3, #4
    b20a:	d104      	bne.n	b216 <MiWiPROTasks+0x2e52>
										Conv_channel=11;
    b20c:	2328      	movs	r3, #40	; 0x28
    b20e:	18fb      	adds	r3, r7, r3
    b210:	220b      	movs	r2, #11
    b212:	701a      	strb	r2, [r3, #0]
    b214:	e04f      	b.n	b2b6 <MiWiPROTasks+0x2ef2>
									}else if(currentChannel==5) {
    b216:	4b4b      	ldr	r3, [pc, #300]	; (b344 <MiWiPROTasks+0x2f80>)
    b218:	781b      	ldrb	r3, [r3, #0]
    b21a:	2b05      	cmp	r3, #5
    b21c:	d104      	bne.n	b228 <MiWiPROTasks+0x2e64>
										Conv_channel=14;
    b21e:	2328      	movs	r3, #40	; 0x28
    b220:	18fb      	adds	r3, r7, r3
    b222:	220e      	movs	r2, #14
    b224:	701a      	strb	r2, [r3, #0]
    b226:	e046      	b.n	b2b6 <MiWiPROTasks+0x2ef2>
									}else if(currentChannel==6) {
    b228:	4b46      	ldr	r3, [pc, #280]	; (b344 <MiWiPROTasks+0x2f80>)
    b22a:	781b      	ldrb	r3, [r3, #0]
    b22c:	2b06      	cmp	r3, #6
    b22e:	d104      	bne.n	b23a <MiWiPROTasks+0x2e76>
										Conv_channel=17;
    b230:	2328      	movs	r3, #40	; 0x28
    b232:	18fb      	adds	r3, r7, r3
    b234:	2211      	movs	r2, #17
    b236:	701a      	strb	r2, [r3, #0]
    b238:	e03d      	b.n	b2b6 <MiWiPROTasks+0x2ef2>
									}else if(currentChannel==7) {
    b23a:	4b42      	ldr	r3, [pc, #264]	; (b344 <MiWiPROTasks+0x2f80>)
    b23c:	781b      	ldrb	r3, [r3, #0]
    b23e:	2b07      	cmp	r3, #7
    b240:	d104      	bne.n	b24c <MiWiPROTasks+0x2e88>
										Conv_channel=19;
    b242:	2328      	movs	r3, #40	; 0x28
    b244:	18fb      	adds	r3, r7, r3
    b246:	2213      	movs	r2, #19
    b248:	701a      	strb	r2, [r3, #0]
    b24a:	e034      	b.n	b2b6 <MiWiPROTasks+0x2ef2>
									}else if(currentChannel==8) {
    b24c:	4b3d      	ldr	r3, [pc, #244]	; (b344 <MiWiPROTasks+0x2f80>)
    b24e:	781b      	ldrb	r3, [r3, #0]
    b250:	2b08      	cmp	r3, #8
    b252:	d104      	bne.n	b25e <MiWiPROTasks+0x2e9a>
										Conv_channel=20;
    b254:	2328      	movs	r3, #40	; 0x28
    b256:	18fb      	adds	r3, r7, r3
    b258:	2214      	movs	r2, #20
    b25a:	701a      	strb	r2, [r3, #0]
    b25c:	e02b      	b.n	b2b6 <MiWiPROTasks+0x2ef2>
									}else if(currentChannel==9) {
    b25e:	4b39      	ldr	r3, [pc, #228]	; (b344 <MiWiPROTasks+0x2f80>)
    b260:	781b      	ldrb	r3, [r3, #0]
    b262:	2b09      	cmp	r3, #9
    b264:	d104      	bne.n	b270 <MiWiPROTasks+0x2eac>
										Conv_channel=21;
    b266:	2328      	movs	r3, #40	; 0x28
    b268:	18fb      	adds	r3, r7, r3
    b26a:	2215      	movs	r2, #21
    b26c:	701a      	strb	r2, [r3, #0]
    b26e:	e022      	b.n	b2b6 <MiWiPROTasks+0x2ef2>
									}else if(currentChannel==10) {
    b270:	4b34      	ldr	r3, [pc, #208]	; (b344 <MiWiPROTasks+0x2f80>)
    b272:	781b      	ldrb	r3, [r3, #0]
    b274:	2b0a      	cmp	r3, #10
    b276:	d104      	bne.n	b282 <MiWiPROTasks+0x2ebe>
										Conv_channel=22;
    b278:	2328      	movs	r3, #40	; 0x28
    b27a:	18fb      	adds	r3, r7, r3
    b27c:	2216      	movs	r2, #22
    b27e:	701a      	strb	r2, [r3, #0]
    b280:	e019      	b.n	b2b6 <MiWiPROTasks+0x2ef2>
									}else if(currentChannel==11) {
    b282:	4b30      	ldr	r3, [pc, #192]	; (b344 <MiWiPROTasks+0x2f80>)
    b284:	781b      	ldrb	r3, [r3, #0]
    b286:	2b0b      	cmp	r3, #11
    b288:	d104      	bne.n	b294 <MiWiPROTasks+0x2ed0>
										Conv_channel=23;
    b28a:	2328      	movs	r3, #40	; 0x28
    b28c:	18fb      	adds	r3, r7, r3
    b28e:	2217      	movs	r2, #23
    b290:	701a      	strb	r2, [r3, #0]
    b292:	e010      	b.n	b2b6 <MiWiPROTasks+0x2ef2>
									}else if(currentChannel==12) {
    b294:	4b2b      	ldr	r3, [pc, #172]	; (b344 <MiWiPROTasks+0x2f80>)
    b296:	781b      	ldrb	r3, [r3, #0]
    b298:	2b0c      	cmp	r3, #12
    b29a:	d104      	bne.n	b2a6 <MiWiPROTasks+0x2ee2>
										Conv_channel=24;
    b29c:	2328      	movs	r3, #40	; 0x28
    b29e:	18fb      	adds	r3, r7, r3
    b2a0:	2218      	movs	r2, #24
    b2a2:	701a      	strb	r2, [r3, #0]
    b2a4:	e007      	b.n	b2b6 <MiWiPROTasks+0x2ef2>
									}else if(currentChannel==13) {
    b2a6:	4b27      	ldr	r3, [pc, #156]	; (b344 <MiWiPROTasks+0x2f80>)
    b2a8:	781b      	ldrb	r3, [r3, #0]
    b2aa:	2b0d      	cmp	r3, #13
    b2ac:	d103      	bne.n	b2b6 <MiWiPROTasks+0x2ef2>
										Conv_channel=25;
    b2ae:	2328      	movs	r3, #40	; 0x28
    b2b0:	18fb      	adds	r3, r7, r3
    b2b2:	2219      	movs	r2, #25
    b2b4:	701a      	strb	r2, [r3, #0]
									if( MACRxPacket.Payload[1] != currentChannel )
    b2b6:	4b24      	ldr	r3, [pc, #144]	; (b348 <MiWiPROTasks+0x2f84>)
    b2b8:	689b      	ldr	r3, [r3, #8]
    b2ba:	3301      	adds	r3, #1
    b2bc:	781a      	ldrb	r2, [r3, #0]
    b2be:	4b21      	ldr	r3, [pc, #132]	; (b344 <MiWiPROTasks+0x2f80>)
    b2c0:	781b      	ldrb	r3, [r3, #0]
    b2c2:	429a      	cmp	r2, r3
    b2c4:	d15e      	bne.n	b384 <MiWiPROTasks+0x2fc0>
                                    if(role != ROLE_FFD_END_DEVICE)
    b2c6:	4b21      	ldr	r3, [pc, #132]	; (b34c <MiWiPROTasks+0x2f88>)
    b2c8:	781b      	ldrb	r3, [r3, #0]
    b2ca:	2b00      	cmp	r3, #0
    b2cc:	d058      	beq.n	b380 <MiWiPROTasks+0x2fbc>
                                            BroadcastJitter(RANDOM_DELAY_RANGE);
    b2ce:	20c8      	movs	r0, #200	; 0xc8
    b2d0:	4b1f      	ldr	r3, [pc, #124]	; (b350 <MiWiPROTasks+0x2f8c>)
    b2d2:	4798      	blx	r3
										printf("\r\nSend Beacon... \r\n");  
    b2d4:	4b1f      	ldr	r3, [pc, #124]	; (b354 <MiWiPROTasks+0x2f90>)
    b2d6:	0018      	movs	r0, r3
    b2d8:	4b1f      	ldr	r3, [pc, #124]	; (b358 <MiWiPROTasks+0x2f94>)
    b2da:	4798      	blx	r3
                                        SendBeacon();											
    b2dc:	4b1f      	ldr	r3, [pc, #124]	; (b35c <MiWiPROTasks+0x2f98>)
    b2de:	4798      	blx	r3
                                break;
    b2e0:	e04e      	b.n	b380 <MiWiPROTasks+0x2fbc>
    b2e2:	46c0      	nop			; (mov r8, r8)
    b2e4:	20001150 	.word	0x20001150
    b2e8:	200014b4 	.word	0x200014b4
    b2ec:	200012dc 	.word	0x200012dc
    b2f0:	200012e4 	.word	0x200012e4
    b2f4:	200012b8 	.word	0x200012b8
    b2f8:	0000fd09 	.word	0x0000fd09
    b2fc:	200012e0 	.word	0x200012e0
    b300:	0000db3d 	.word	0x0000db3d
    b304:	20001140 	.word	0x20001140
    b308:	20001290 	.word	0x20001290
    b30c:	00010211 	.word	0x00010211
    b310:	20001144 	.word	0x20001144
    b314:	20001518 	.word	0x20001518
    b318:	2000158a 	.word	0x2000158a
    b31c:	0000e9c1 	.word	0x0000e9c1
    b320:	20001590 	.word	0x20001590
    b324:	2000158c 	.word	0x2000158c
    b328:	20001598 	.word	0x20001598
    b32c:	20001594 	.word	0x20001594
    b330:	20001250 	.word	0x20001250
    b334:	20001584 	.word	0x20001584
    b338:	20001584 	.word	0x20001584
    b33c:	2000159a 	.word	0x2000159a
    b340:	20000018 	.word	0x20000018
    b344:	200014b5 	.word	0x200014b5
    b348:	2000126c 	.word	0x2000126c
    b34c:	200012de 	.word	0x200012de
    b350:	00008359 	.word	0x00008359
    b354:	0001cd08 	.word	0x0001cd08
    b358:	00017905 	.word	0x00017905
    b35c:	0000cbf5 	.word	0x0000cbf5
                                    break;
    b360:	46c0      	nop			; (mov r8, r8)
    b362:	e01e      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                                    break;
    b364:	46c0      	nop			; (mov r8, r8)
    b366:	e01c      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                                        break;
    b368:	46c0      	nop			; (mov r8, r8)
    b36a:	e01a      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                                    break;
    b36c:	46c0      	nop			; (mov r8, r8)
    b36e:	e018      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                                        break;
    b370:	46c0      	nop			; (mov r8, r8)
    b372:	e016      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                                            break;
    b374:	46c0      	nop			; (mov r8, r8)
    b376:	e014      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                                break;
    b378:	46c0      	nop			; (mov r8, r8)
    b37a:	e012      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                                    break;
    b37c:	46c0      	nop			; (mov r8, r8)
    b37e:	e010      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                                break;
    b380:	46c0      	nop			; (mov r8, r8)
    b382:	e00e      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                                        break;
    b384:	46c0      	nop			; (mov r8, r8)
                    break;
    b386:	e00c      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                            break;
    b388:	46c0      	nop			; (mov r8, r8)
    b38a:	e00a      	b.n	b3a2 <MiWiPROTasks+0x2fde>
							break;
    b38c:	46c0      	nop			; (mov r8, r8)
    b38e:	e008      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                                break;   
    b390:	46c0      	nop			; (mov r8, r8)
    b392:	e006      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                                break;
    b394:	46c0      	nop			; (mov r8, r8)
    b396:	e004      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                    break;
    b398:	46c0      	nop			; (mov r8, r8)
    b39a:	e002      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                                break;
    b39c:	46c0      	nop			; (mov r8, r8)
    b39e:	e000      	b.n	b3a2 <MiWiPROTasks+0x2fde>
                    break;
    b3a0:	46c0      	nop			; (mov r8, r8)

            }
            
            if ( MiWiPROStateMachine.bits.RxHasUserData == 0 )
    b3a2:	4be3      	ldr	r3, [pc, #908]	; (b730 <MiWiPROTasks+0x336c>)
    b3a4:	781b      	ldrb	r3, [r3, #0]
    b3a6:	2204      	movs	r2, #4
    b3a8:	4013      	ands	r3, r2
    b3aa:	b2db      	uxtb	r3, r3
    b3ac:	2b00      	cmp	r3, #0
    b3ae:	d101      	bne.n	b3b4 <MiWiPROTasks+0x2ff0>
            {
                MiMAC_DiscardPacket();
    b3b0:	4be0      	ldr	r3, [pc, #896]	; (b734 <MiWiPROTasks+0x3370>)
    b3b2:	4798      	blx	r3
            }   
        }   

        t1 = MiWi_TickGet();
    b3b4:	4be0      	ldr	r3, [pc, #896]	; (b738 <MiWiPROTasks+0x3374>)
    b3b6:	4798      	blx	r3
    b3b8:	0003      	movs	r3, r0
    b3ba:	623b      	str	r3, [r7, #32]
                }    
            }
        #endif //COORDINATOR_CAPABLE

        #if !defined(ENABLE_SLEEP)
            for(i = 0; i < PACKET_RECORD_SIZE; i++)
    b3bc:	233f      	movs	r3, #63	; 0x3f
    b3be:	18fb      	adds	r3, r7, r3
    b3c0:	2200      	movs	r2, #0
    b3c2:	701a      	strb	r2, [r3, #0]
    b3c4:	e027      	b.n	b416 <MiWiPROTasks+0x3052>
            {
                if( PacketRecords[i].RxCounter > 0 )
    b3c6:	233f      	movs	r3, #63	; 0x3f
    b3c8:	18fb      	adds	r3, r7, r3
    b3ca:	781b      	ldrb	r3, [r3, #0]
    b3cc:	4adb      	ldr	r2, [pc, #876]	; (b73c <MiWiPROTasks+0x3378>)
    b3ce:	00db      	lsls	r3, r3, #3
    b3d0:	18d3      	adds	r3, r2, r3
    b3d2:	3303      	adds	r3, #3
    b3d4:	781b      	ldrb	r3, [r3, #0]
    b3d6:	2b00      	cmp	r3, #0
    b3d8:	d016      	beq.n	b408 <MiWiPROTasks+0x3044>
                {
                    if( MiWi_TickGetDiff(t1, PacketRecords[i].StartTick) > PACKET_RECORD_TIMEOUT )
    b3da:	6a3a      	ldr	r2, [r7, #32]
    b3dc:	233f      	movs	r3, #63	; 0x3f
    b3de:	18fb      	adds	r3, r7, r3
    b3e0:	781b      	ldrb	r3, [r3, #0]
    b3e2:	49d6      	ldr	r1, [pc, #856]	; (b73c <MiWiPROTasks+0x3378>)
    b3e4:	00db      	lsls	r3, r3, #3
    b3e6:	18cb      	adds	r3, r1, r3
    b3e8:	3304      	adds	r3, #4
    b3ea:	681b      	ldr	r3, [r3, #0]
    b3ec:	1ad2      	subs	r2, r2, r3
    b3ee:	2380      	movs	r3, #128	; 0x80
    b3f0:	01db      	lsls	r3, r3, #7
    b3f2:	429a      	cmp	r2, r3
    b3f4:	d908      	bls.n	b408 <MiWiPROTasks+0x3044>
					//if( MiWi_TickGetDiff(t1, PacketRecords[i].StartTick) > set_PACKET_RECORD_TIMEOUT )	//ohm
                    {
                        PacketRecords[i].RxCounter = 0;
    b3f6:	233f      	movs	r3, #63	; 0x3f
    b3f8:	18fb      	adds	r3, r7, r3
    b3fa:	781b      	ldrb	r3, [r3, #0]
    b3fc:	4acf      	ldr	r2, [pc, #828]	; (b73c <MiWiPROTasks+0x3378>)
    b3fe:	00db      	lsls	r3, r3, #3
    b400:	18d3      	adds	r3, r2, r3
    b402:	3303      	adds	r3, #3
    b404:	2200      	movs	r2, #0
    b406:	701a      	strb	r2, [r3, #0]
            for(i = 0; i < PACKET_RECORD_SIZE; i++)
    b408:	233f      	movs	r3, #63	; 0x3f
    b40a:	18fb      	adds	r3, r7, r3
    b40c:	781a      	ldrb	r2, [r3, #0]
    b40e:	233f      	movs	r3, #63	; 0x3f
    b410:	18fb      	adds	r3, r7, r3
    b412:	3201      	adds	r2, #1
    b414:	701a      	strb	r2, [r3, #0]
    b416:	233f      	movs	r3, #63	; 0x3f
    b418:	18fb      	adds	r3, r7, r3
    b41a:	781b      	ldrb	r3, [r3, #0]
    b41c:	2b07      	cmp	r3, #7
    b41e:	d9d2      	bls.n	b3c6 <MiWiPROTasks+0x3002>
            }    
        #endif
        
        
        #if defined(NWK_ROLE_COORDINATOR)
            t2.Val = t1.Val - backgroundTaskTick.Val;
    b420:	6a3a      	ldr	r2, [r7, #32]
    b422:	4bc7      	ldr	r3, [pc, #796]	; (b740 <MiWiPROTasks+0x337c>)
    b424:	681b      	ldr	r3, [r3, #0]
    b426:	1ad3      	subs	r3, r2, r3
    b428:	61fb      	str	r3, [r7, #28]
 
            if( MiWiPROStatus.bits.COMM_FAMILY_TREE > 0 )
    b42a:	4bc6      	ldr	r3, [pc, #792]	; (b744 <MiWiPROTasks+0x3380>)
    b42c:	781b      	ldrb	r3, [r3, #0]
    b42e:	071b      	lsls	r3, r3, #28
    b430:	0f5b      	lsrs	r3, r3, #29
    b432:	b2db      	uxtb	r3, r3
    b434:	2b00      	cmp	r3, #0
    b436:	dd58      	ble.n	b4ea <MiWiPROTasks+0x3126>
            {

                if( t2.Val > COMM_INTERVAL )
    b438:	69fa      	ldr	r2, [r7, #28]
    b43a:	2380      	movs	r3, #128	; 0x80
    b43c:	015b      	lsls	r3, r3, #5
    b43e:	429a      	cmp	r2, r3
    b440:	d800      	bhi.n	b444 <MiWiPROTasks+0x3080>
    b442:	e1c8      	b.n	b7d6 <MiWiPROTasks+0x3412>
                {
                    MiWiPROStatus.bits.COMM_FAMILY_TREE--;
    b444:	4bbf      	ldr	r3, [pc, #764]	; (b744 <MiWiPROTasks+0x3380>)
    b446:	781b      	ldrb	r3, [r3, #0]
    b448:	071b      	lsls	r3, r3, #28
    b44a:	0f5b      	lsrs	r3, r3, #29
    b44c:	b2db      	uxtb	r3, r3
    b44e:	3307      	adds	r3, #7
    b450:	1c1a      	adds	r2, r3, #0
    b452:	2307      	movs	r3, #7
    b454:	4013      	ands	r3, r2
    b456:	b2da      	uxtb	r2, r3
    b458:	4bba      	ldr	r3, [pc, #744]	; (b744 <MiWiPROTasks+0x3380>)
    b45a:	2107      	movs	r1, #7
    b45c:	400a      	ands	r2, r1
    b45e:	1890      	adds	r0, r2, r2
    b460:	781a      	ldrb	r2, [r3, #0]
    b462:	210e      	movs	r1, #14
    b464:	438a      	bics	r2, r1
    b466:	1c11      	adds	r1, r2, #0
    b468:	1c02      	adds	r2, r0, #0
    b46a:	430a      	orrs	r2, r1
    b46c:	701a      	strb	r2, [r3, #0]
                    MiApp_FlushTx();
    b46e:	4bb6      	ldr	r3, [pc, #728]	; (b748 <MiWiPROTasks+0x3384>)
    b470:	220b      	movs	r2, #11
    b472:	701a      	strb	r2, [r3, #0]
                    MiApp_WriteData(MIWI_PRO_STACK_REPORT_TYPE);
    b474:	4bb4      	ldr	r3, [pc, #720]	; (b748 <MiWiPROTasks+0x3384>)
    b476:	781b      	ldrb	r3, [r3, #0]
    b478:	1c5a      	adds	r2, r3, #1
    b47a:	b2d1      	uxtb	r1, r2
    b47c:	4ab2      	ldr	r2, [pc, #712]	; (b748 <MiWiPROTasks+0x3384>)
    b47e:	7011      	strb	r1, [r2, #0]
    b480:	001a      	movs	r2, r3
    b482:	4bb2      	ldr	r3, [pc, #712]	; (b74c <MiWiPROTasks+0x3388>)
    b484:	2100      	movs	r1, #0
    b486:	5499      	strb	r1, [r3, r2]
                    MiApp_WriteData(FAMILY_TREE_REPORT);
    b488:	4baf      	ldr	r3, [pc, #700]	; (b748 <MiWiPROTasks+0x3384>)
    b48a:	781b      	ldrb	r3, [r3, #0]
    b48c:	1c5a      	adds	r2, r3, #1
    b48e:	b2d1      	uxtb	r1, r2
    b490:	4aad      	ldr	r2, [pc, #692]	; (b748 <MiWiPROTasks+0x3384>)
    b492:	7011      	strb	r1, [r2, #0]
    b494:	001a      	movs	r2, r3
    b496:	4bad      	ldr	r3, [pc, #692]	; (b74c <MiWiPROTasks+0x3388>)
    b498:	21a3      	movs	r1, #163	; 0xa3
    b49a:	5499      	strb	r1, [r3, r2]
                    for(i = 0; i < NUM_COORDINATOR; i++)
    b49c:	233f      	movs	r3, #63	; 0x3f
    b49e:	18fb      	adds	r3, r7, r3
    b4a0:	2200      	movs	r2, #0
    b4a2:	701a      	strb	r2, [r3, #0]
    b4a4:	e014      	b.n	b4d0 <MiWiPROTasks+0x310c>
                    {
                        MiApp_WriteData(FamilyTree[i]);
    b4a6:	4ba8      	ldr	r3, [pc, #672]	; (b748 <MiWiPROTasks+0x3384>)
    b4a8:	781b      	ldrb	r3, [r3, #0]
    b4aa:	1c5a      	adds	r2, r3, #1
    b4ac:	b2d1      	uxtb	r1, r2
    b4ae:	4aa6      	ldr	r2, [pc, #664]	; (b748 <MiWiPROTasks+0x3384>)
    b4b0:	7011      	strb	r1, [r2, #0]
    b4b2:	0019      	movs	r1, r3
    b4b4:	233f      	movs	r3, #63	; 0x3f
    b4b6:	18fb      	adds	r3, r7, r3
    b4b8:	781b      	ldrb	r3, [r3, #0]
    b4ba:	4aa5      	ldr	r2, [pc, #660]	; (b750 <MiWiPROTasks+0x338c>)
    b4bc:	5cd2      	ldrb	r2, [r2, r3]
    b4be:	4ba3      	ldr	r3, [pc, #652]	; (b74c <MiWiPROTasks+0x3388>)
    b4c0:	545a      	strb	r2, [r3, r1]
                    for(i = 0; i < NUM_COORDINATOR; i++)
    b4c2:	233f      	movs	r3, #63	; 0x3f
    b4c4:	18fb      	adds	r3, r7, r3
    b4c6:	781a      	ldrb	r2, [r3, #0]
    b4c8:	233f      	movs	r3, #63	; 0x3f
    b4ca:	18fb      	adds	r3, r7, r3
    b4cc:	3201      	adds	r2, #1
    b4ce:	701a      	strb	r2, [r3, #0]
    b4d0:	233f      	movs	r3, #63	; 0x3f
    b4d2:	18fb      	adds	r3, r7, r3
    b4d4:	781b      	ldrb	r3, [r3, #0]
    b4d6:	2b00      	cmp	r3, #0
    b4d8:	d0e5      	beq.n	b4a6 <MiWiPROTasks+0x30e2>
                    }
                    MultiCast(MULTICAST_TO_COORDINATORS, false);
    b4da:	2100      	movs	r1, #0
    b4dc:	2002      	movs	r0, #2
    b4de:	4b9d      	ldr	r3, [pc, #628]	; (b754 <MiWiPROTasks+0x3390>)
    b4e0:	4798      	blx	r3
                    backgroundTaskTick.Val = t1.Val;
    b4e2:	6a3a      	ldr	r2, [r7, #32]
    b4e4:	4b96      	ldr	r3, [pc, #600]	; (b740 <MiWiPROTasks+0x337c>)
    b4e6:	601a      	str	r2, [r3, #0]
    b4e8:	e175      	b.n	b7d6 <MiWiPROTasks+0x3412>
                }  
            }       
            else if( MiWiPROStatus.bits.COMM_ROUTING_TABLE > 0 )
    b4ea:	4b96      	ldr	r3, [pc, #600]	; (b744 <MiWiPROTasks+0x3380>)
    b4ec:	781b      	ldrb	r3, [r3, #0]
    b4ee:	065b      	lsls	r3, r3, #25
    b4f0:	0f5b      	lsrs	r3, r3, #29
    b4f2:	b2db      	uxtb	r3, r3
    b4f4:	2b00      	cmp	r3, #0
    b4f6:	dd5a      	ble.n	b5ae <MiWiPROTasks+0x31ea>
            {
                if( t2.Val > COMM_INTERVAL )
    b4f8:	69fa      	ldr	r2, [r7, #28]
    b4fa:	2380      	movs	r3, #128	; 0x80
    b4fc:	015b      	lsls	r3, r3, #5
    b4fe:	429a      	cmp	r2, r3
    b500:	d800      	bhi.n	b504 <MiWiPROTasks+0x3140>
    b502:	e168      	b.n	b7d6 <MiWiPROTasks+0x3412>
                {
                    MiWiPROStatus.bits.COMM_ROUTING_TABLE--;
    b504:	4b8f      	ldr	r3, [pc, #572]	; (b744 <MiWiPROTasks+0x3380>)
    b506:	781b      	ldrb	r3, [r3, #0]
    b508:	065b      	lsls	r3, r3, #25
    b50a:	0f5b      	lsrs	r3, r3, #29
    b50c:	b2db      	uxtb	r3, r3
    b50e:	3307      	adds	r3, #7
    b510:	1c1a      	adds	r2, r3, #0
    b512:	2307      	movs	r3, #7
    b514:	4013      	ands	r3, r2
    b516:	b2da      	uxtb	r2, r3
    b518:	4b8a      	ldr	r3, [pc, #552]	; (b744 <MiWiPROTasks+0x3380>)
    b51a:	2107      	movs	r1, #7
    b51c:	400a      	ands	r2, r1
    b51e:	0110      	lsls	r0, r2, #4
    b520:	781a      	ldrb	r2, [r3, #0]
    b522:	2170      	movs	r1, #112	; 0x70
    b524:	438a      	bics	r2, r1
    b526:	1c11      	adds	r1, r2, #0
    b528:	1c02      	adds	r2, r0, #0
    b52a:	430a      	orrs	r2, r1
    b52c:	701a      	strb	r2, [r3, #0]
                    
                    MiApp_FlushTx();
    b52e:	4b86      	ldr	r3, [pc, #536]	; (b748 <MiWiPROTasks+0x3384>)
    b530:	220b      	movs	r2, #11
    b532:	701a      	strb	r2, [r3, #0]
                    MiApp_WriteData(MIWI_PRO_STACK_REPORT_TYPE);
    b534:	4b84      	ldr	r3, [pc, #528]	; (b748 <MiWiPROTasks+0x3384>)
    b536:	781b      	ldrb	r3, [r3, #0]
    b538:	1c5a      	adds	r2, r3, #1
    b53a:	b2d1      	uxtb	r1, r2
    b53c:	4a82      	ldr	r2, [pc, #520]	; (b748 <MiWiPROTasks+0x3384>)
    b53e:	7011      	strb	r1, [r2, #0]
    b540:	001a      	movs	r2, r3
    b542:	4b82      	ldr	r3, [pc, #520]	; (b74c <MiWiPROTasks+0x3388>)
    b544:	2100      	movs	r1, #0
    b546:	5499      	strb	r1, [r3, r2]
                    MiApp_WriteData(ROUTING_TABLE_REPORT);
    b548:	4b7f      	ldr	r3, [pc, #508]	; (b748 <MiWiPROTasks+0x3384>)
    b54a:	781b      	ldrb	r3, [r3, #0]
    b54c:	1c5a      	adds	r2, r3, #1
    b54e:	b2d1      	uxtb	r1, r2
    b550:	4a7d      	ldr	r2, [pc, #500]	; (b748 <MiWiPROTasks+0x3384>)
    b552:	7011      	strb	r1, [r2, #0]
    b554:	001a      	movs	r2, r3
    b556:	4b7d      	ldr	r3, [pc, #500]	; (b74c <MiWiPROTasks+0x3388>)
    b558:	21a4      	movs	r1, #164	; 0xa4
    b55a:	5499      	strb	r1, [r3, r2]
                    #if !defined(IEEE_802_15_4)
                        MiApp_WriteData(myShortAddress.v[1]);
    b55c:	4b7a      	ldr	r3, [pc, #488]	; (b748 <MiWiPROTasks+0x3384>)
    b55e:	781b      	ldrb	r3, [r3, #0]
    b560:	1c5a      	adds	r2, r3, #1
    b562:	b2d1      	uxtb	r1, r2
    b564:	4a78      	ldr	r2, [pc, #480]	; (b748 <MiWiPROTasks+0x3384>)
    b566:	7011      	strb	r1, [r2, #0]
    b568:	001a      	movs	r2, r3
    b56a:	4b7b      	ldr	r3, [pc, #492]	; (b758 <MiWiPROTasks+0x3394>)
    b56c:	7859      	ldrb	r1, [r3, #1]
    b56e:	4b77      	ldr	r3, [pc, #476]	; (b74c <MiWiPROTasks+0x3388>)
    b570:	5499      	strb	r1, [r3, r2]
                    #endif
                    MiApp_WriteData(myShortAddress.v[1]);
    b572:	4b75      	ldr	r3, [pc, #468]	; (b748 <MiWiPROTasks+0x3384>)
    b574:	781b      	ldrb	r3, [r3, #0]
    b576:	1c5a      	adds	r2, r3, #1
    b578:	b2d1      	uxtb	r1, r2
    b57a:	4a73      	ldr	r2, [pc, #460]	; (b748 <MiWiPROTasks+0x3384>)
    b57c:	7011      	strb	r1, [r2, #0]
    b57e:	001a      	movs	r2, r3
    b580:	4b75      	ldr	r3, [pc, #468]	; (b758 <MiWiPROTasks+0x3394>)
    b582:	7859      	ldrb	r1, [r3, #1]
    b584:	4b71      	ldr	r3, [pc, #452]	; (b74c <MiWiPROTasks+0x3388>)
    b586:	5499      	strb	r1, [r3, r2]
                    for(i = 0; i < NUM_COORDINATOR/8; i++)
    b588:	233f      	movs	r3, #63	; 0x3f
    b58a:	18fb      	adds	r3, r7, r3
    b58c:	2200      	movs	r2, #0
    b58e:	701a      	strb	r2, [r3, #0]
    b590:	46c0      	nop			; (mov r8, r8)
                    {
                        MiApp_WriteData(RoutingTable[i]);
                    }
                    defaultHops = 1;
    b592:	4b72      	ldr	r3, [pc, #456]	; (b75c <MiWiPROTasks+0x3398>)
    b594:	2201      	movs	r2, #1
    b596:	701a      	strb	r2, [r3, #0]
                    MultiCast(MULTICAST_TO_COORDINATORS, false);
    b598:	2100      	movs	r1, #0
    b59a:	2002      	movs	r0, #2
    b59c:	4b6d      	ldr	r3, [pc, #436]	; (b754 <MiWiPROTasks+0x3390>)
    b59e:	4798      	blx	r3
                    defaultHops = MAX_HOPS;
    b5a0:	4b6e      	ldr	r3, [pc, #440]	; (b75c <MiWiPROTasks+0x3398>)
    b5a2:	2202      	movs	r2, #2
    b5a4:	701a      	strb	r2, [r3, #0]
                    backgroundTaskTick.Val = t1.Val;
    b5a6:	6a3a      	ldr	r2, [r7, #32]
    b5a8:	4b65      	ldr	r3, [pc, #404]	; (b740 <MiWiPROTasks+0x337c>)
    b5aa:	601a      	str	r2, [r3, #0]
    b5ac:	e113      	b.n	b7d6 <MiWiPROTasks+0x3412>
                }      
            }
            else if( (FamilyTree[0] == 0xFF) && (role == ROLE_COORDINATOR) && 
    b5ae:	4b68      	ldr	r3, [pc, #416]	; (b750 <MiWiPROTasks+0x338c>)
    b5b0:	781b      	ldrb	r3, [r3, #0]
    b5b2:	2bff      	cmp	r3, #255	; 0xff
    b5b4:	d134      	bne.n	b620 <MiWiPROTasks+0x325c>
    b5b6:	4b6a      	ldr	r3, [pc, #424]	; (b760 <MiWiPROTasks+0x339c>)
    b5b8:	781b      	ldrb	r3, [r3, #0]
    b5ba:	2b01      	cmp	r3, #1
    b5bc:	d130      	bne.n	b620 <MiWiPROTasks+0x325c>
    b5be:	4b5c      	ldr	r3, [pc, #368]	; (b730 <MiWiPROTasks+0x336c>)
    b5c0:	781b      	ldrb	r3, [r3, #0]
    b5c2:	2202      	movs	r2, #2
    b5c4:	4013      	ands	r3, r2
    b5c6:	b2db      	uxtb	r3, r3
    b5c8:	2b00      	cmp	r3, #0
    b5ca:	d029      	beq.n	b620 <MiWiPROTasks+0x325c>
                    MiWiPROStateMachine.bits.memberOfNetwork )
            {
                if( t2.Val > COMM_INTERVAL )
    b5cc:	69fa      	ldr	r2, [r7, #28]
    b5ce:	2380      	movs	r3, #128	; 0x80
    b5d0:	015b      	lsls	r3, r3, #5
    b5d2:	429a      	cmp	r2, r3
    b5d4:	d800      	bhi.n	b5d8 <MiWiPROTasks+0x3214>
    b5d6:	e0fe      	b.n	b7d6 <MiWiPROTasks+0x3412>
                {
                    MiApp_FlushTx();
    b5d8:	4b5b      	ldr	r3, [pc, #364]	; (b748 <MiWiPROTasks+0x3384>)
    b5da:	220b      	movs	r2, #11
    b5dc:	701a      	strb	r2, [r3, #0]
                    MiApp_WriteData(MIWI_PRO_STACK_REPORT_TYPE);
    b5de:	4b5a      	ldr	r3, [pc, #360]	; (b748 <MiWiPROTasks+0x3384>)
    b5e0:	781b      	ldrb	r3, [r3, #0]
    b5e2:	1c5a      	adds	r2, r3, #1
    b5e4:	b2d1      	uxtb	r1, r2
    b5e6:	4a58      	ldr	r2, [pc, #352]	; (b748 <MiWiPROTasks+0x3384>)
    b5e8:	7011      	strb	r1, [r2, #0]
    b5ea:	001a      	movs	r2, r3
    b5ec:	4b57      	ldr	r3, [pc, #348]	; (b74c <MiWiPROTasks+0x3388>)
    b5ee:	2100      	movs	r1, #0
    b5f0:	5499      	strb	r1, [r3, r2]
                    MiApp_WriteData(FAMILY_TREE_REQUEST);
    b5f2:	4b55      	ldr	r3, [pc, #340]	; (b748 <MiWiPROTasks+0x3384>)
    b5f4:	781b      	ldrb	r3, [r3, #0]
    b5f6:	1c5a      	adds	r2, r3, #1
    b5f8:	b2d1      	uxtb	r1, r2
    b5fa:	4a53      	ldr	r2, [pc, #332]	; (b748 <MiWiPROTasks+0x3384>)
    b5fc:	7011      	strb	r1, [r2, #0]
    b5fe:	001a      	movs	r2, r3
    b600:	4b52      	ldr	r3, [pc, #328]	; (b74c <MiWiPROTasks+0x3388>)
    b602:	21a2      	movs	r1, #162	; 0xa2
    b604:	5499      	strb	r1, [r3, r2]
                    //MiApp_UnicastConnection(myParent, false);
                    UnicastShortAddress(ConnectionTable[myParent].AltAddress.v);
    b606:	4b57      	ldr	r3, [pc, #348]	; (b764 <MiWiPROTasks+0x33a0>)
    b608:	781b      	ldrb	r3, [r3, #0]
    b60a:	011a      	lsls	r2, r3, #4
    b60c:	4b56      	ldr	r3, [pc, #344]	; (b768 <MiWiPROTasks+0x33a4>)
    b60e:	18d3      	adds	r3, r2, r3
    b610:	3302      	adds	r3, #2
    b612:	0018      	movs	r0, r3
    b614:	4b55      	ldr	r3, [pc, #340]	; (b76c <MiWiPROTasks+0x33a8>)
    b616:	4798      	blx	r3
                    backgroundTaskTick.Val = t1.Val;
    b618:	6a3a      	ldr	r2, [r7, #32]
    b61a:	4b49      	ldr	r3, [pc, #292]	; (b740 <MiWiPROTasks+0x337c>)
    b61c:	601a      	str	r2, [r3, #0]
                if( t2.Val > COMM_INTERVAL )
    b61e:	e0da      	b.n	b7d6 <MiWiPROTasks+0x3412>
            }      
   
             
            #if defined(ENABLE_NETWORK_FREEZER)

                else if( MiWiPRONVMStatus.bits.saveFamilyTree )
    b620:	4b53      	ldr	r3, [pc, #332]	; (b770 <MiWiPROTasks+0x33ac>)
    b622:	781b      	ldrb	r3, [r3, #0]
    b624:	2201      	movs	r2, #1
    b626:	4013      	ands	r3, r2
    b628:	b2db      	uxtb	r3, r3
    b62a:	2b00      	cmp	r3, #0
    b62c:	d04c      	beq.n	b6c8 <MiWiPROTasks+0x3304>
                {
                    if( t2.Val > COMM_INTERVAL * (FAMILY_TREE_BROADCAST+1))
    b62e:	69fa      	ldr	r2, [r7, #28]
    b630:	2380      	movs	r3, #128	; 0x80
    b632:	01db      	lsls	r3, r3, #7
    b634:	429a      	cmp	r2, r3
    b636:	d800      	bhi.n	b63a <MiWiPROTasks+0x3276>
    b638:	e0cd      	b.n	b7d6 <MiWiPROTasks+0x3412>
                    {
                        MiWiPRONVMStatus.bits.saveFamilyTree = 0;
    b63a:	4b4d      	ldr	r3, [pc, #308]	; (b770 <MiWiPROTasks+0x33ac>)
    b63c:	781a      	ldrb	r2, [r3, #0]
    b63e:	2101      	movs	r1, #1
    b640:	438a      	bics	r2, r1
    b642:	701a      	strb	r2, [r3, #0]
                        
                        // verify the family relationship
                        if( role != ROLE_PAN_COORDINATOR && FamilyTree[ myShortAddress.v[1] ] != ConnectionTable[myParent].AltAddress.v[1] )
    b644:	4b46      	ldr	r3, [pc, #280]	; (b760 <MiWiPROTasks+0x339c>)
    b646:	781b      	ldrb	r3, [r3, #0]
    b648:	2b02      	cmp	r3, #2
    b64a:	d035      	beq.n	b6b8 <MiWiPROTasks+0x32f4>
    b64c:	4b42      	ldr	r3, [pc, #264]	; (b758 <MiWiPROTasks+0x3394>)
    b64e:	785b      	ldrb	r3, [r3, #1]
    b650:	001a      	movs	r2, r3
    b652:	4b3f      	ldr	r3, [pc, #252]	; (b750 <MiWiPROTasks+0x338c>)
    b654:	5c9a      	ldrb	r2, [r3, r2]
    b656:	4b43      	ldr	r3, [pc, #268]	; (b764 <MiWiPROTasks+0x33a0>)
    b658:	781b      	ldrb	r3, [r3, #0]
    b65a:	4943      	ldr	r1, [pc, #268]	; (b768 <MiWiPROTasks+0x33a4>)
    b65c:	011b      	lsls	r3, r3, #4
    b65e:	18cb      	adds	r3, r1, r3
    b660:	3303      	adds	r3, #3
    b662:	781b      	ldrb	r3, [r3, #0]
    b664:	429a      	cmp	r2, r3
    b666:	d027      	beq.n	b6b8 <MiWiPROTasks+0x32f4>
                        {
                            tempShortAddress.v[0] = 0;
    b668:	4b42      	ldr	r3, [pc, #264]	; (b774 <MiWiPROTasks+0x33b0>)
    b66a:	2200      	movs	r2, #0
    b66c:	701a      	strb	r2, [r3, #0]
                            tempShortAddress.v[1] = FamilyTree[ myShortAddress.v[1] ];
    b66e:	4b3a      	ldr	r3, [pc, #232]	; (b758 <MiWiPROTasks+0x3394>)
    b670:	785b      	ldrb	r3, [r3, #1]
    b672:	001a      	movs	r2, r3
    b674:	4b36      	ldr	r3, [pc, #216]	; (b750 <MiWiPROTasks+0x338c>)
    b676:	5c9a      	ldrb	r2, [r3, r2]
    b678:	4b3e      	ldr	r3, [pc, #248]	; (b774 <MiWiPROTasks+0x33b0>)
    b67a:	705a      	strb	r2, [r3, #1]
                            if( (i = SearchForShortAddress()) < CONNECTION_SIZE )
    b67c:	233f      	movs	r3, #63	; 0x3f
    b67e:	18fc      	adds	r4, r7, r3
    b680:	4b3d      	ldr	r3, [pc, #244]	; (b778 <MiWiPROTasks+0x33b4>)
    b682:	4798      	blx	r3
    b684:	0003      	movs	r3, r0
    b686:	7023      	strb	r3, [r4, #0]
    b688:	233f      	movs	r3, #63	; 0x3f
    b68a:	18fb      	adds	r3, r7, r3
    b68c:	781b      	ldrb	r3, [r3, #0]
    b68e:	2b0f      	cmp	r3, #15
    b690:	d805      	bhi.n	b69e <MiWiPROTasks+0x32da>
                            {
                                myParent = i;
    b692:	4b34      	ldr	r3, [pc, #208]	; (b764 <MiWiPROTasks+0x33a0>)
    b694:	223f      	movs	r2, #63	; 0x3f
    b696:	18ba      	adds	r2, r7, r2
    b698:	7812      	ldrb	r2, [r2, #0]
    b69a:	701a      	strb	r2, [r3, #0]
    b69c:	e00c      	b.n	b6b8 <MiWiPROTasks+0x32f4>
                            }
                            else
                            {
                                tempNodeStatus.Val = 0xBB;
    b69e:	4b37      	ldr	r3, [pc, #220]	; (b77c <MiWiPROTasks+0x33b8>)
    b6a0:	22bb      	movs	r2, #187	; 0xbb
    b6a2:	701a      	strb	r2, [r3, #0]
                                tempPANID.Val = myPANID.Val;
    b6a4:	4b36      	ldr	r3, [pc, #216]	; (b780 <MiWiPROTasks+0x33bc>)
    b6a6:	881a      	ldrh	r2, [r3, #0]
    b6a8:	4b36      	ldr	r3, [pc, #216]	; (b784 <MiWiPROTasks+0x33c0>)
    b6aa:	801a      	strh	r2, [r3, #0]
                                myParent = AddNodeToNetworkTable();
    b6ac:	4b36      	ldr	r3, [pc, #216]	; (b788 <MiWiPROTasks+0x33c4>)
    b6ae:	4798      	blx	r3
    b6b0:	0003      	movs	r3, r0
    b6b2:	001a      	movs	r2, r3
    b6b4:	4b2b      	ldr	r3, [pc, #172]	; (b764 <MiWiPROTasks+0x33a0>)
    b6b6:	701a      	strb	r2, [r3, #0]
                            }   
                        }
                        
                        nvmPutFamilyTree(FamilyTree); 
    b6b8:	4b34      	ldr	r3, [pc, #208]	; (b78c <MiWiPROTasks+0x33c8>)
    b6ba:	8819      	ldrh	r1, [r3, #0]
    b6bc:	4b24      	ldr	r3, [pc, #144]	; (b750 <MiWiPROTasks+0x338c>)
    b6be:	2201      	movs	r2, #1
    b6c0:	0018      	movs	r0, r3
    b6c2:	4b33      	ldr	r3, [pc, #204]	; (b790 <MiWiPROTasks+0x33cc>)
    b6c4:	4798      	blx	r3
    b6c6:	e086      	b.n	b7d6 <MiWiPROTasks+0x3412>
                    }    
                }
                else if( MiWiPRONVMStatus.bits.saveRoutingTable )
    b6c8:	4b29      	ldr	r3, [pc, #164]	; (b770 <MiWiPROTasks+0x33ac>)
    b6ca:	781b      	ldrb	r3, [r3, #0]
    b6cc:	2202      	movs	r2, #2
    b6ce:	4013      	ands	r3, r2
    b6d0:	b2db      	uxtb	r3, r3
    b6d2:	2b00      	cmp	r3, #0
    b6d4:	d012      	beq.n	b6fc <MiWiPROTasks+0x3338>
                {
                    if( t2.Val > COMM_INTERVAL * (FAMILY_TREE_BROADCAST+1))
    b6d6:	69fa      	ldr	r2, [r7, #28]
    b6d8:	2380      	movs	r3, #128	; 0x80
    b6da:	01db      	lsls	r3, r3, #7
    b6dc:	429a      	cmp	r2, r3
    b6de:	d800      	bhi.n	b6e2 <MiWiPROTasks+0x331e>
    b6e0:	e079      	b.n	b7d6 <MiWiPROTasks+0x3412>
                    {
                        MiWiPRONVMStatus.bits.saveRoutingTable = 0;
    b6e2:	4b23      	ldr	r3, [pc, #140]	; (b770 <MiWiPROTasks+0x33ac>)
    b6e4:	781a      	ldrb	r2, [r3, #0]
    b6e6:	2102      	movs	r1, #2
    b6e8:	438a      	bics	r2, r1
    b6ea:	701a      	strb	r2, [r3, #0]
                        nvmPutRoutingTable(RoutingTable);
    b6ec:	4b29      	ldr	r3, [pc, #164]	; (b794 <MiWiPROTasks+0x33d0>)
    b6ee:	8819      	ldrh	r1, [r3, #0]
    b6f0:	4b29      	ldr	r3, [pc, #164]	; (b798 <MiWiPROTasks+0x33d4>)
    b6f2:	2200      	movs	r2, #0
    b6f4:	0018      	movs	r0, r3
    b6f6:	4b26      	ldr	r3, [pc, #152]	; (b790 <MiWiPROTasks+0x33cc>)
    b6f8:	4798      	blx	r3
    b6fa:	e06c      	b.n	b7d6 <MiWiPROTasks+0x3412>
                    }    
                }
                else if( MiWiPRONVMStatus.bits.saveNeighborTable )
    b6fc:	4b1c      	ldr	r3, [pc, #112]	; (b770 <MiWiPROTasks+0x33ac>)
    b6fe:	781b      	ldrb	r3, [r3, #0]
    b700:	2204      	movs	r2, #4
    b702:	4013      	ands	r3, r2
    b704:	b2db      	uxtb	r3, r3
    b706:	2b00      	cmp	r3, #0
    b708:	d04c      	beq.n	b7a4 <MiWiPROTasks+0x33e0>
                {
                    if( t2.Val > COMM_INTERVAL * (FAMILY_TREE_BROADCAST+1))
    b70a:	69fa      	ldr	r2, [r7, #28]
    b70c:	2380      	movs	r3, #128	; 0x80
    b70e:	01db      	lsls	r3, r3, #7
    b710:	429a      	cmp	r2, r3
    b712:	d960      	bls.n	b7d6 <MiWiPROTasks+0x3412>
                    {
                        MiWiPRONVMStatus.bits.saveNeighborTable = 0;
    b714:	4b16      	ldr	r3, [pc, #88]	; (b770 <MiWiPROTasks+0x33ac>)
    b716:	781a      	ldrb	r2, [r3, #0]
    b718:	2104      	movs	r1, #4
    b71a:	438a      	bics	r2, r1
    b71c:	701a      	strb	r2, [r3, #0]
                        nvmPutNeighborRoutingTable(NeighborRoutingTable);
    b71e:	4b1f      	ldr	r3, [pc, #124]	; (b79c <MiWiPROTasks+0x33d8>)
    b720:	8819      	ldrh	r1, [r3, #0]
    b722:	4b1f      	ldr	r3, [pc, #124]	; (b7a0 <MiWiPROTasks+0x33dc>)
    b724:	2200      	movs	r2, #0
    b726:	0018      	movs	r0, r3
    b728:	4b19      	ldr	r3, [pc, #100]	; (b790 <MiWiPROTasks+0x33cc>)
    b72a:	4798      	blx	r3
    b72c:	e053      	b.n	b7d6 <MiWiPROTasks+0x3412>
    b72e:	46c0      	nop			; (mov r8, r8)
    b730:	20001144 	.word	0x20001144
    b734:	0001011d 	.word	0x0001011d
    b738:	0000ebad 	.word	0x0000ebad
    b73c:	20001544 	.word	0x20001544
    b740:	2000113c 	.word	0x2000113c
    b744:	200012c4 	.word	0x200012c4
    b748:	200012dc 	.word	0x200012dc
    b74c:	200012e4 	.word	0x200012e4
    b750:	20001518 	.word	0x20001518
    b754:	0000d82d 	.word	0x0000d82d
    b758:	20001140 	.word	0x20001140
    b75c:	2000001b 	.word	0x2000001b
    b760:	200012de 	.word	0x200012de
    b764:	200014b4 	.word	0x200014b4
    b768:	20001150 	.word	0x20001150
    b76c:	0000db3d 	.word	0x0000db3d
    b770:	200013c4 	.word	0x200013c4
    b774:	200012e0 	.word	0x200012e0
    b778:	0000cb71 	.word	0x0000cb71
    b77c:	200012c8 	.word	0x200012c8
    b780:	20001290 	.word	0x20001290
    b784:	200012c0 	.word	0x200012c0
    b788:	0000cddd 	.word	0x0000cddd
    b78c:	20001598 	.word	0x20001598
    b790:	0000e9c1 	.word	0x0000e9c1
    b794:	20001594 	.word	0x20001594
    b798:	20001250 	.word	0x20001250
    b79c:	20001584 	.word	0x20001584
    b7a0:	20001584 	.word	0x20001584
                    }    
                } 
                else if( MiWiPRONVMStatus.bits.saveConnectionTable )
    b7a4:	4bc2      	ldr	r3, [pc, #776]	; (bab0 <MiWiPROTasks+0x36ec>)
    b7a6:	781b      	ldrb	r3, [r3, #0]
    b7a8:	2208      	movs	r2, #8
    b7aa:	4013      	ands	r3, r2
    b7ac:	b2db      	uxtb	r3, r3
    b7ae:	2b00      	cmp	r3, #0
    b7b0:	d011      	beq.n	b7d6 <MiWiPROTasks+0x3412>
                {
                    if( t2.Val > COMM_INTERVAL * (FAMILY_TREE_BROADCAST+1))
    b7b2:	69fa      	ldr	r2, [r7, #28]
    b7b4:	2380      	movs	r3, #128	; 0x80
    b7b6:	01db      	lsls	r3, r3, #7
    b7b8:	429a      	cmp	r2, r3
    b7ba:	d90c      	bls.n	b7d6 <MiWiPROTasks+0x3412>
                    {
                        MiWiPRONVMStatus.bits.saveConnectionTable = 0;
    b7bc:	4bbc      	ldr	r3, [pc, #752]	; (bab0 <MiWiPROTasks+0x36ec>)
    b7be:	781a      	ldrb	r2, [r3, #0]
    b7c0:	2108      	movs	r1, #8
    b7c2:	438a      	bics	r2, r1
    b7c4:	701a      	strb	r2, [r3, #0]
                        nvmPutConnectionTable(ConnectionTable);
    b7c6:	4bbb      	ldr	r3, [pc, #748]	; (bab4 <MiWiPROTasks+0x36f0>)
    b7c8:	8819      	ldrh	r1, [r3, #0]
    b7ca:	2380      	movs	r3, #128	; 0x80
    b7cc:	005a      	lsls	r2, r3, #1
    b7ce:	4bba      	ldr	r3, [pc, #744]	; (bab8 <MiWiPROTasks+0x36f4>)
    b7d0:	0018      	movs	r0, r3
    b7d2:	4bba      	ldr	r3, [pc, #744]	; (babc <MiWiPROTasks+0x36f8>)
    b7d4:	4798      	blx	r3
                    }    
                }           
            #endif
            
            
            if( MiWiPROStatus.bits.COMM_RANDOM_SEND )
    b7d6:	4bba      	ldr	r3, [pc, #744]	; (bac0 <MiWiPROTasks+0x36fc>)
    b7d8:	781b      	ldrb	r3, [r3, #0]
    b7da:	2201      	movs	r2, #1
    b7dc:	4013      	ands	r3, r2
    b7de:	b2db      	uxtb	r3, r3
    b7e0:	2b00      	cmp	r3, #0
    b7e2:	d015      	beq.n	b810 <MiWiPROTasks+0x344c>
            {
                if( MiWi_TickGetDiff(t1, RandomSendInfo.StartTick) > ((ONE_MILI_SECOND) * RandomSendInfo.RandomDelayInMilliSecond) )
    b7e4:	6a3a      	ldr	r2, [r7, #32]
    b7e6:	4bb7      	ldr	r3, [pc, #732]	; (bac4 <MiWiPROTasks+0x3700>)
    b7e8:	681b      	ldr	r3, [r3, #0]
    b7ea:	1ad3      	subs	r3, r2, r3
    b7ec:	4ab5      	ldr	r2, [pc, #724]	; (bac4 <MiWiPROTasks+0x3700>)
    b7ee:	7b12      	ldrb	r2, [r2, #12]
    b7f0:	0092      	lsls	r2, r2, #2
    b7f2:	4293      	cmp	r3, r2
    b7f4:	d90c      	bls.n	b810 <MiWiPROTasks+0x344c>
                {
                    MiWiPROStatus.bits.COMM_RANDOM_SEND = 0;
    b7f6:	4bb2      	ldr	r3, [pc, #712]	; (bac0 <MiWiPROTasks+0x36fc>)
    b7f8:	781a      	ldrb	r2, [r3, #0]
    b7fa:	2101      	movs	r1, #1
    b7fc:	438a      	bics	r2, r1
    b7fe:	701a      	strb	r2, [r3, #0]
                    MiMAC_SendPacket(RandomSendInfo.MTP, RandomSendInfo.RandomSendTxBuffer, RandomSendInfo.RandomSendTxData);
    b800:	4bb0      	ldr	r3, [pc, #704]	; (bac4 <MiWiPROTasks+0x3700>)
    b802:	7b5b      	ldrb	r3, [r3, #13]
    b804:	4ab0      	ldr	r2, [pc, #704]	; (bac8 <MiWiPROTasks+0x3704>)
    b806:	49af      	ldr	r1, [pc, #700]	; (bac4 <MiWiPROTasks+0x3700>)
    b808:	6848      	ldr	r0, [r1, #4]
    b80a:	6889      	ldr	r1, [r1, #8]
    b80c:	4caf      	ldr	r4, [pc, #700]	; (bacc <MiWiPROTasks+0x3708>)
    b80e:	47a0      	blx	r4
            }    
            

            #if defined(ENABLE_ROUTING_UPDATE)

                if( role != ROLE_FFD_END_DEVICE )
    b810:	4baf      	ldr	r3, [pc, #700]	; (bad0 <MiWiPROTasks+0x370c>)
    b812:	781b      	ldrb	r3, [r3, #0]
    b814:	2b00      	cmp	r3, #0
    b816:	d06f      	beq.n	b8f8 <MiWiPROTasks+0x3534>
                {
                    if( MiWi_TickGetDiff(t1, RoutingUpdateTick) > ROUTING_UPDATE_INTERVAL )
    b818:	6a3a      	ldr	r2, [r7, #32]
    b81a:	4bae      	ldr	r3, [pc, #696]	; (bad4 <MiWiPROTasks+0x3710>)
    b81c:	681b      	ldr	r3, [r3, #0]
    b81e:	1ad2      	subs	r2, r2, r3
    b820:	23e1      	movs	r3, #225	; 0xe1
    b822:	041b      	lsls	r3, r3, #16
    b824:	429a      	cmp	r2, r3
    b826:	d967      	bls.n	b8f8 <MiWiPROTasks+0x3534>
                    {
                        MiWiPROStatus.bits.COMM_ROUTING_TABLE = 1;
    b828:	4ba5      	ldr	r3, [pc, #660]	; (bac0 <MiWiPROTasks+0x36fc>)
    b82a:	781a      	ldrb	r2, [r3, #0]
    b82c:	2170      	movs	r1, #112	; 0x70
    b82e:	438a      	bics	r2, r1
    b830:	1c11      	adds	r1, r2, #0
    b832:	2210      	movs	r2, #16
    b834:	430a      	orrs	r2, r1
    b836:	701a      	strb	r2, [r3, #0]
                        backgroundTaskTick = MiWi_TickGet();
    b838:	4ba7      	ldr	r3, [pc, #668]	; (bad8 <MiWiPROTasks+0x3714>)
    b83a:	4798      	blx	r3
    b83c:	0003      	movs	r3, r0
    b83e:	001a      	movs	r2, r3
    b840:	4ba6      	ldr	r3, [pc, #664]	; (badc <MiWiPROTasks+0x3718>)
    b842:	601a      	str	r2, [r3, #0]
                        RoutingUpdateTick.Val = backgroundTaskTick.Val;
    b844:	4ba5      	ldr	r3, [pc, #660]	; (badc <MiWiPROTasks+0x3718>)
    b846:	681a      	ldr	r2, [r3, #0]
    b848:	4ba2      	ldr	r3, [pc, #648]	; (bad4 <MiWiPROTasks+0x3710>)
    b84a:	601a      	str	r2, [r3, #0]
                        for(i = 0; i < NUM_COORDINATOR; i++)
    b84c:	233f      	movs	r3, #63	; 0x3f
    b84e:	18fb      	adds	r3, r7, r3
    b850:	2200      	movs	r2, #0
    b852:	701a      	strb	r2, [r3, #0]
    b854:	e04b      	b.n	b8ee <MiWiPROTasks+0x352a>
                        {
                            if( RoutingUpdateCounter[i] > 0 )
    b856:	233f      	movs	r3, #63	; 0x3f
    b858:	18fb      	adds	r3, r7, r3
    b85a:	781b      	ldrb	r3, [r3, #0]
    b85c:	4aa0      	ldr	r2, [pc, #640]	; (bae0 <MiWiPROTasks+0x371c>)
    b85e:	5cd3      	ldrb	r3, [r2, r3]
    b860:	2b00      	cmp	r3, #0
    b862:	d03d      	beq.n	b8e0 <MiWiPROTasks+0x351c>
                            {
                                RoutingUpdateCounter[i]--;
    b864:	233f      	movs	r3, #63	; 0x3f
    b866:	18fb      	adds	r3, r7, r3
    b868:	781b      	ldrb	r3, [r3, #0]
    b86a:	4a9d      	ldr	r2, [pc, #628]	; (bae0 <MiWiPROTasks+0x371c>)
    b86c:	5cd2      	ldrb	r2, [r2, r3]
    b86e:	3a01      	subs	r2, #1
    b870:	b2d1      	uxtb	r1, r2
    b872:	4a9b      	ldr	r2, [pc, #620]	; (bae0 <MiWiPROTasks+0x371c>)
    b874:	54d1      	strb	r1, [r2, r3]
                                if( RoutingUpdateCounter[i] == 0 )
    b876:	233f      	movs	r3, #63	; 0x3f
    b878:	18fb      	adds	r3, r7, r3
    b87a:	781b      	ldrb	r3, [r3, #0]
    b87c:	4a98      	ldr	r2, [pc, #608]	; (bae0 <MiWiPROTasks+0x371c>)
    b87e:	5cd3      	ldrb	r3, [r2, r3]
    b880:	2b00      	cmp	r3, #0
    b882:	d12d      	bne.n	b8e0 <MiWiPROTasks+0x351c>
                                {
                                    uint8_t j;
                                    RoutingTable[i/8] = RoutingTable[i/8] & ((0x01 << (i%8))^0xFF);
    b884:	233f      	movs	r3, #63	; 0x3f
    b886:	18fb      	adds	r3, r7, r3
    b888:	781b      	ldrb	r3, [r3, #0]
    b88a:	08db      	lsrs	r3, r3, #3
    b88c:	b2db      	uxtb	r3, r3
    b88e:	0018      	movs	r0, r3
    b890:	233f      	movs	r3, #63	; 0x3f
    b892:	18fb      	adds	r3, r7, r3
    b894:	781b      	ldrb	r3, [r3, #0]
    b896:	08db      	lsrs	r3, r3, #3
    b898:	b2db      	uxtb	r3, r3
    b89a:	001a      	movs	r2, r3
    b89c:	4b91      	ldr	r3, [pc, #580]	; (bae4 <MiWiPROTasks+0x3720>)
    b89e:	5c9b      	ldrb	r3, [r3, r2]
    b8a0:	b25b      	sxtb	r3, r3
    b8a2:	223f      	movs	r2, #63	; 0x3f
    b8a4:	18ba      	adds	r2, r7, r2
    b8a6:	7812      	ldrb	r2, [r2, #0]
    b8a8:	2107      	movs	r1, #7
    b8aa:	400a      	ands	r2, r1
    b8ac:	2101      	movs	r1, #1
    b8ae:	4091      	lsls	r1, r2
    b8b0:	000a      	movs	r2, r1
    b8b2:	b252      	sxtb	r2, r2
    b8b4:	43d2      	mvns	r2, r2
    b8b6:	b252      	sxtb	r2, r2
    b8b8:	4013      	ands	r3, r2
    b8ba:	b25b      	sxtb	r3, r3
    b8bc:	b2da      	uxtb	r2, r3
    b8be:	4b89      	ldr	r3, [pc, #548]	; (bae4 <MiWiPROTasks+0x3720>)
    b8c0:	541a      	strb	r2, [r3, r0]
                                    for(j = 0; j < NUM_COORDINATOR/8; j++)
    b8c2:	2327      	movs	r3, #39	; 0x27
    b8c4:	18fb      	adds	r3, r7, r3
    b8c6:	2200      	movs	r2, #0
    b8c8:	701a      	strb	r2, [r3, #0]
    b8ca:	46c0      	nop			; (mov r8, r8)
                                    {
                                        NeighborRoutingTable[i][j] = 0;
                                    } 
                                    MiWiPRONVMStatus.bits.saveRoutingTable = 1;
    b8cc:	4b78      	ldr	r3, [pc, #480]	; (bab0 <MiWiPROTasks+0x36ec>)
    b8ce:	781a      	ldrb	r2, [r3, #0]
    b8d0:	2102      	movs	r1, #2
    b8d2:	430a      	orrs	r2, r1
    b8d4:	701a      	strb	r2, [r3, #0]
                                    MiWiPRONVMStatus.bits.saveNeighborTable = 1;   
    b8d6:	4b76      	ldr	r3, [pc, #472]	; (bab0 <MiWiPROTasks+0x36ec>)
    b8d8:	781a      	ldrb	r2, [r3, #0]
    b8da:	2104      	movs	r1, #4
    b8dc:	430a      	orrs	r2, r1
    b8de:	701a      	strb	r2, [r3, #0]
                        for(i = 0; i < NUM_COORDINATOR; i++)
    b8e0:	233f      	movs	r3, #63	; 0x3f
    b8e2:	18fb      	adds	r3, r7, r3
    b8e4:	781a      	ldrb	r2, [r3, #0]
    b8e6:	233f      	movs	r3, #63	; 0x3f
    b8e8:	18fb      	adds	r3, r7, r3
    b8ea:	3201      	adds	r2, #1
    b8ec:	701a      	strb	r2, [r3, #0]
    b8ee:	233f      	movs	r3, #63	; 0x3f
    b8f0:	18fb      	adds	r3, r7, r3
    b8f2:	781b      	ldrb	r3, [r3, #0]
    b8f4:	2b00      	cmp	r3, #0
    b8f6:	d0ae      	beq.n	b856 <MiWiPROTasks+0x3492>
        
 
        
        #if defined(ENABLE_FREQUENCY_AGILITY)      
			int16_t RSSIValue;
            if( FrequencyAgilityInfo.status.bits.ChangeChannel )
    b8f8:	4b7b      	ldr	r3, [pc, #492]	; (bae8 <MiWiPROTasks+0x3724>)
    b8fa:	781b      	ldrb	r3, [r3, #0]
    b8fc:	2202      	movs	r2, #2
    b8fe:	4013      	ands	r3, r2
    b900:	b2db      	uxtb	r3, r3
    b902:	2b00      	cmp	r3, #0
    b904:	d013      	beq.n	b92e <MiWiPROTasks+0x356a>
            {
                if( MiWi_TickGetDiff(t1, FrequencyAgilityInfo.FA_StatTick) > FA_WAIT_TIMEOUT )
    b906:	6a3a      	ldr	r2, [r7, #32]
    b908:	4b77      	ldr	r3, [pc, #476]	; (bae8 <MiWiPROTasks+0x3724>)
    b90a:	689b      	ldr	r3, [r3, #8]
    b90c:	1ad2      	subs	r2, r2, r3
    b90e:	2380      	movs	r3, #128	; 0x80
    b910:	019b      	lsls	r3, r3, #6
    b912:	429a      	cmp	r2, r3
    b914:	d932      	bls.n	b97c <MiWiPROTasks+0x35b8>
                {
                    MiApp_SetChannel( FrequencyAgilityInfo.status.bits.SuggestChannel );
    b916:	4b74      	ldr	r3, [pc, #464]	; (bae8 <MiWiPROTasks+0x3724>)
    b918:	781b      	ldrb	r3, [r3, #0]
    b91a:	061b      	lsls	r3, r3, #24
    b91c:	0edb      	lsrs	r3, r3, #27
    b91e:	b2db      	uxtb	r3, r3
    b920:	0018      	movs	r0, r3
    b922:	4b72      	ldr	r3, [pc, #456]	; (baec <MiWiPROTasks+0x3728>)
    b924:	4798      	blx	r3
                    FrequencyAgilityInfo.status.Val = 0;
    b926:	4b70      	ldr	r3, [pc, #448]	; (bae8 <MiWiPROTasks+0x3724>)
    b928:	2200      	movs	r2, #0
    b92a:	701a      	strb	r2, [r3, #0]
    b92c:	e026      	b.n	b97c <MiWiPROTasks+0x35b8>
                }    
            }
            #if defined(ENABLE_ED_SCAN) && defined(NWK_ROLE_COORDINATOR)   
                else if( FrequencyAgilityInfo.status.bits.EnergyScan )
    b92e:	4b6e      	ldr	r3, [pc, #440]	; (bae8 <MiWiPROTasks+0x3724>)
    b930:	781b      	ldrb	r3, [r3, #0]
    b932:	2201      	movs	r2, #1
    b934:	4013      	ands	r3, r2
    b936:	b2db      	uxtb	r3, r3
    b938:	2b00      	cmp	r3, #0
    b93a:	d01f      	beq.n	b97c <MiWiPROTasks+0x35b8>
                {
                    if( MiWi_TickGetDiff(t1, FrequencyAgilityInfo.FA_StatTick) > FA_WAIT_TIMEOUT )
    b93c:	6a3a      	ldr	r2, [r7, #32]
    b93e:	4b6a      	ldr	r3, [pc, #424]	; (bae8 <MiWiPROTasks+0x3724>)
    b940:	689b      	ldr	r3, [r3, #8]
    b942:	1ad2      	subs	r2, r2, r3
    b944:	2380      	movs	r3, #128	; 0x80
    b946:	019b      	lsls	r3, r3, #6
    b948:	429a      	cmp	r2, r3
    b94a:	d917      	bls.n	b97c <MiWiPROTasks+0x35b8>
                    {
                        uint8_t backupChannel = currentChannel;
    b94c:	2326      	movs	r3, #38	; 0x26
    b94e:	18fb      	adds	r3, r7, r3
    b950:	4a67      	ldr	r2, [pc, #412]	; (baf0 <MiWiPROTasks+0x372c>)
    b952:	7812      	ldrb	r2, [r2, #0]
    b954:	701a      	strb	r2, [r3, #0]
                        MiApp_NoiseDetection(FrequencyAgilityInfo.ChannelMap.Val, 10, NOISE_DETECT_ENERGY, &RSSIValue);
    b956:	4b64      	ldr	r3, [pc, #400]	; (bae8 <MiWiPROTasks+0x3724>)
    b958:	6858      	ldr	r0, [r3, #4]
    b95a:	231a      	movs	r3, #26
    b95c:	18fb      	adds	r3, r7, r3
    b95e:	2200      	movs	r2, #0
    b960:	210a      	movs	r1, #10
    b962:	4c64      	ldr	r4, [pc, #400]	; (baf4 <MiWiPROTasks+0x3730>)
    b964:	47a0      	blx	r4
                        MiApp_SetChannel(backupChannel);
    b966:	2326      	movs	r3, #38	; 0x26
    b968:	18fb      	adds	r3, r7, r3
    b96a:	781b      	ldrb	r3, [r3, #0]
    b96c:	0018      	movs	r0, r3
    b96e:	4b5f      	ldr	r3, [pc, #380]	; (baec <MiWiPROTasks+0x3728>)
    b970:	4798      	blx	r3
                        FrequencyAgilityInfo.status.bits.EnergyScan = 0;
    b972:	4b5d      	ldr	r3, [pc, #372]	; (bae8 <MiWiPROTasks+0x3724>)
    b974:	781a      	ldrb	r2, [r3, #0]
    b976:	2101      	movs	r1, #1
    b978:	438a      	bics	r2, r1
    b97a:	701a      	strb	r2, [r3, #0]
                } 
            #endif 
        #endif
        
        //clean up an old socket if one still exists
        if(openSocketInfo.status.bits.requestIsOpen)
    b97c:	4b5e      	ldr	r3, [pc, #376]	; (baf8 <MiWiPROTasks+0x3734>)
    b97e:	781b      	ldrb	r3, [r3, #0]
    b980:	2202      	movs	r2, #2
    b982:	4013      	ands	r3, r2
    b984:	b2db      	uxtb	r3, r3
    b986:	2b00      	cmp	r3, #0
    b988:	d100      	bne.n	b98c <MiWiPROTasks+0x35c8>
    b98a:	e08e      	b.n	baaa <MiWiPROTasks+0x36e6>
        {
            if(openSocketInfo.status.bits.matchFound)
    b98c:	4b5a      	ldr	r3, [pc, #360]	; (baf8 <MiWiPROTasks+0x3734>)
    b98e:	781b      	ldrb	r3, [r3, #0]
    b990:	2201      	movs	r2, #1
    b992:	4013      	ands	r3, r2
    b994:	b2db      	uxtb	r3, r3
    b996:	2b00      	cmp	r3, #0
    b998:	d076      	beq.n	ba88 <MiWiPROTasks+0x36c4>
                #ifdef NWK_ROLE_COORDINATOR
                    uint8_t j;
        
                    //ConsolePutROMString((ROM char*)"sending out second response\r\n");

                    MiApp_FlushTx();
    b99a:	4b58      	ldr	r3, [pc, #352]	; (bafc <MiWiPROTasks+0x3738>)
    b99c:	220b      	movs	r2, #11
    b99e:	701a      	strb	r2, [r3, #0]
                    TxBuffer[TxData++] = MIWI_PRO_STACK_REPORT_TYPE;      //Report Type
    b9a0:	4b56      	ldr	r3, [pc, #344]	; (bafc <MiWiPROTasks+0x3738>)
    b9a2:	781b      	ldrb	r3, [r3, #0]
    b9a4:	1c5a      	adds	r2, r3, #1
    b9a6:	b2d1      	uxtb	r1, r2
    b9a8:	4a54      	ldr	r2, [pc, #336]	; (bafc <MiWiPROTasks+0x3738>)
    b9aa:	7011      	strb	r1, [r2, #0]
    b9ac:	001a      	movs	r2, r3
    b9ae:	4b54      	ldr	r3, [pc, #336]	; (bb00 <MiWiPROTasks+0x373c>)
    b9b0:	2100      	movs	r1, #0
    b9b2:	5499      	strb	r1, [r3, r2]
                    TxBuffer[TxData++] = OPEN_SOCKET_RESPONSE;      //Report ID
    b9b4:	4b51      	ldr	r3, [pc, #324]	; (bafc <MiWiPROTasks+0x3738>)
    b9b6:	781b      	ldrb	r3, [r3, #0]
    b9b8:	1c5a      	adds	r2, r3, #1
    b9ba:	b2d1      	uxtb	r1, r2
    b9bc:	4a4f      	ldr	r2, [pc, #316]	; (bafc <MiWiPROTasks+0x3738>)
    b9be:	7011      	strb	r1, [r2, #0]
    b9c0:	001a      	movs	r2, r3
    b9c2:	4b4f      	ldr	r3, [pc, #316]	; (bb00 <MiWiPROTasks+0x373c>)
    b9c4:	2111      	movs	r1, #17
    b9c6:	5499      	strb	r1, [r3, r2]

                
                    //copy the long and short address from the Rx Buffer
                    for(j=0;j<MY_ADDRESS_LENGTH;j++)
    b9c8:	2332      	movs	r3, #50	; 0x32
    b9ca:	18fb      	adds	r3, r7, r3
    b9cc:	2200      	movs	r2, #0
    b9ce:	701a      	strb	r2, [r3, #0]
    b9d0:	e015      	b.n	b9fe <MiWiPROTasks+0x363a>
                    {
                        TxBuffer[TxData++] = openSocketInfo.LongAddress1[j]; 
    b9d2:	4b4a      	ldr	r3, [pc, #296]	; (bafc <MiWiPROTasks+0x3738>)
    b9d4:	781b      	ldrb	r3, [r3, #0]
    b9d6:	1c5a      	adds	r2, r3, #1
    b9d8:	b2d1      	uxtb	r1, r2
    b9da:	4a48      	ldr	r2, [pc, #288]	; (bafc <MiWiPROTasks+0x3738>)
    b9dc:	7011      	strb	r1, [r2, #0]
    b9de:	0019      	movs	r1, r3
    b9e0:	2332      	movs	r3, #50	; 0x32
    b9e2:	18fb      	adds	r3, r7, r3
    b9e4:	781b      	ldrb	r3, [r3, #0]
    b9e6:	4a44      	ldr	r2, [pc, #272]	; (baf8 <MiWiPROTasks+0x3734>)
    b9e8:	18d3      	adds	r3, r2, r3
    b9ea:	791a      	ldrb	r2, [r3, #4]
    b9ec:	4b44      	ldr	r3, [pc, #272]	; (bb00 <MiWiPROTasks+0x373c>)
    b9ee:	545a      	strb	r2, [r3, r1]
                    for(j=0;j<MY_ADDRESS_LENGTH;j++)
    b9f0:	2332      	movs	r3, #50	; 0x32
    b9f2:	18fb      	adds	r3, r7, r3
    b9f4:	781a      	ldrb	r2, [r3, #0]
    b9f6:	2332      	movs	r3, #50	; 0x32
    b9f8:	18fb      	adds	r3, r7, r3
    b9fa:	3201      	adds	r2, #1
    b9fc:	701a      	strb	r2, [r3, #0]
    b9fe:	2332      	movs	r3, #50	; 0x32
    ba00:	18fb      	adds	r3, r7, r3
    ba02:	781b      	ldrb	r3, [r3, #0]
    ba04:	2b07      	cmp	r3, #7
    ba06:	d9e4      	bls.n	b9d2 <MiWiPROTasks+0x360e>
                    }
                
                    TxBuffer[TxData++] = openSocketInfo.ShortAddress1.v[0];
    ba08:	4b3c      	ldr	r3, [pc, #240]	; (bafc <MiWiPROTasks+0x3738>)
    ba0a:	781b      	ldrb	r3, [r3, #0]
    ba0c:	1c5a      	adds	r2, r3, #1
    ba0e:	b2d1      	uxtb	r1, r2
    ba10:	4a3a      	ldr	r2, [pc, #232]	; (bafc <MiWiPROTasks+0x3738>)
    ba12:	7011      	strb	r1, [r2, #0]
    ba14:	001a      	movs	r2, r3
    ba16:	4b38      	ldr	r3, [pc, #224]	; (baf8 <MiWiPROTasks+0x3734>)
    ba18:	7899      	ldrb	r1, [r3, #2]
    ba1a:	4b39      	ldr	r3, [pc, #228]	; (bb00 <MiWiPROTasks+0x373c>)
    ba1c:	5499      	strb	r1, [r3, r2]
                    TxBuffer[TxData++] = openSocketInfo.ShortAddress1.v[1];
    ba1e:	4b37      	ldr	r3, [pc, #220]	; (bafc <MiWiPROTasks+0x3738>)
    ba20:	781b      	ldrb	r3, [r3, #0]
    ba22:	1c5a      	adds	r2, r3, #1
    ba24:	b2d1      	uxtb	r1, r2
    ba26:	4a35      	ldr	r2, [pc, #212]	; (bafc <MiWiPROTasks+0x3738>)
    ba28:	7011      	strb	r1, [r2, #0]
    ba2a:	001a      	movs	r2, r3
    ba2c:	4b32      	ldr	r3, [pc, #200]	; (baf8 <MiWiPROTasks+0x3734>)
    ba2e:	78d9      	ldrb	r1, [r3, #3]
    ba30:	4b33      	ldr	r3, [pc, #204]	; (bb00 <MiWiPROTasks+0x373c>)
    ba32:	5499      	strb	r1, [r3, r2]
                    
                    #if ADDITIONAL_NODE_ID_SIZE > 0
                        for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    ba34:	2332      	movs	r3, #50	; 0x32
    ba36:	18fb      	adds	r3, r7, r3
    ba38:	2200      	movs	r2, #0
    ba3a:	701a      	strb	r2, [r3, #0]
    ba3c:	e015      	b.n	ba6a <MiWiPROTasks+0x36a6>
                        {
                            TxBuffer[TxData++] = openSocketInfo.AdditionalNodeID1[j];    
    ba3e:	4b2f      	ldr	r3, [pc, #188]	; (bafc <MiWiPROTasks+0x3738>)
    ba40:	781b      	ldrb	r3, [r3, #0]
    ba42:	1c5a      	adds	r2, r3, #1
    ba44:	b2d1      	uxtb	r1, r2
    ba46:	4a2d      	ldr	r2, [pc, #180]	; (bafc <MiWiPROTasks+0x3738>)
    ba48:	7011      	strb	r1, [r2, #0]
    ba4a:	0019      	movs	r1, r3
    ba4c:	2332      	movs	r3, #50	; 0x32
    ba4e:	18fb      	adds	r3, r7, r3
    ba50:	781b      	ldrb	r3, [r3, #0]
    ba52:	4a29      	ldr	r2, [pc, #164]	; (baf8 <MiWiPROTasks+0x3734>)
    ba54:	18d3      	adds	r3, r2, r3
    ba56:	7b1a      	ldrb	r2, [r3, #12]
    ba58:	4b29      	ldr	r3, [pc, #164]	; (bb00 <MiWiPROTasks+0x373c>)
    ba5a:	545a      	strb	r2, [r3, r1]
                        for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    ba5c:	2332      	movs	r3, #50	; 0x32
    ba5e:	18fb      	adds	r3, r7, r3
    ba60:	781a      	ldrb	r2, [r3, #0]
    ba62:	2332      	movs	r3, #50	; 0x32
    ba64:	18fb      	adds	r3, r7, r3
    ba66:	3201      	adds	r2, #1
    ba68:	701a      	strb	r2, [r3, #0]
    ba6a:	2332      	movs	r3, #50	; 0x32
    ba6c:	18fb      	adds	r3, r7, r3
    ba6e:	781b      	ldrb	r3, [r3, #0]
    ba70:	2b01      	cmp	r3, #1
    ba72:	d9e4      	bls.n	ba3e <MiWiPROTasks+0x367a>
                        }
                    #endif
                    
                    //MiApp_UnicastAddress(openSocketInfo.ShortAddress2.v, false, false);
                    UnicastShortAddress(openSocketInfo.ShortAddress2.v);
    ba74:	4b23      	ldr	r3, [pc, #140]	; (bb04 <MiWiPROTasks+0x3740>)
    ba76:	0018      	movs	r0, r3
    ba78:	4b23      	ldr	r3, [pc, #140]	; (bb08 <MiWiPROTasks+0x3744>)
    ba7a:	4798      	blx	r3
                    openSocketInfo.status.bits.requestIsOpen = 0;
    ba7c:	4b1e      	ldr	r3, [pc, #120]	; (baf8 <MiWiPROTasks+0x3734>)
    ba7e:	781a      	ldrb	r2, [r3, #0]
    ba80:	2102      	movs	r1, #2
    ba82:	438a      	bics	r2, r1
    ba84:	701a      	strb	r2, [r3, #0]
    ba86:	e010      	b.n	baaa <MiWiPROTasks+0x36e6>

                //openSocketInfo.status.bits.requestIsOpen = 0;
            }
            else
            {
                t2.Val = MiWi_TickGetDiff(t1, openSocketInfo.socketStart);
    ba88:	6a3a      	ldr	r2, [r7, #32]
    ba8a:	4b1b      	ldr	r3, [pc, #108]	; (baf8 <MiWiPROTasks+0x3734>)
    ba8c:	699b      	ldr	r3, [r3, #24]
    ba8e:	1ad3      	subs	r3, r2, r3
    ba90:	61fb      	str	r3, [r7, #28]
                
                if(t2.Val > OPEN_SOCKET_TIMEOUT)
    ba92:	69fa      	ldr	r2, [r7, #28]
    ba94:	23c0      	movs	r3, #192	; 0xc0
    ba96:	019b      	lsls	r3, r3, #6
    ba98:	429a      	cmp	r2, r3
    ba9a:	d906      	bls.n	baaa <MiWiPROTasks+0x36e6>
                {
                    //invalidate the expired socket request
                    openSocketInfo.status.bits.requestIsOpen = 0;
    ba9c:	4b16      	ldr	r3, [pc, #88]	; (baf8 <MiWiPROTasks+0x3734>)
    ba9e:	781a      	ldrb	r2, [r3, #0]
    baa0:	2102      	movs	r1, #2
    baa2:	438a      	bics	r2, r1
    baa4:	701a      	strb	r2, [r3, #0]
    baa6:	e000      	b.n	baaa <MiWiPROTasks+0x36e6>
                return;
    baa8:	46c0      	nop			; (mov r8, r8)
                }
            }
        }
    }
    baaa:	46bd      	mov	sp, r7
    baac:	b011      	add	sp, #68	; 0x44
    baae:	bd90      	pop	{r4, r7, pc}
    bab0:	200013c4 	.word	0x200013c4
    bab4:	2000159a 	.word	0x2000159a
    bab8:	20001150 	.word	0x20001150
    babc:	0000e9c1 	.word	0x0000e9c1
    bac0:	200012c4 	.word	0x200012c4
    bac4:	200013c8 	.word	0x200013c8
    bac8:	200013d6 	.word	0x200013d6
    bacc:	0000fd09 	.word	0x0000fd09
    bad0:	200012de 	.word	0x200012de
    bad4:	20001148 	.word	0x20001148
    bad8:	0000ebad 	.word	0x0000ebad
    badc:	2000113c 	.word	0x2000113c
    bae0:	20001500 	.word	0x20001500
    bae4:	20001250 	.word	0x20001250
    bae8:	200012cc 	.word	0x200012cc
    baec:	0000d159 	.word	0x0000d159
    baf0:	200014b5 	.word	0x200014b5
    baf4:	0000dfdd 	.word	0x0000dfdd
    baf8:	20001250 	.word	0x20001250
    bafc:	200012dc 	.word	0x200012dc
    bb00:	200012e4 	.word	0x200012e4
    bb04:	2000125e 	.word	0x2000125e
    bb08:	0000db3d 	.word	0x0000db3d

0000bb0c <FindDepth>:


    #ifdef NWK_ROLE_COORDINATOR
        uint8_t FindDepth(uint8_t nodeMSB)
        {
    bb0c:	b580      	push	{r7, lr}
    bb0e:	b084      	sub	sp, #16
    bb10:	af00      	add	r7, sp, #0
    bb12:	0002      	movs	r2, r0
    bb14:	1dfb      	adds	r3, r7, #7
    bb16:	701a      	strb	r2, [r3, #0]
            uint8_t depth;
            uint8_t target;
            uint8_t loopCheck;
            
            if( nodeMSB == 0 )
    bb18:	1dfb      	adds	r3, r7, #7
    bb1a:	781b      	ldrb	r3, [r3, #0]
    bb1c:	2b00      	cmp	r3, #0
    bb1e:	d101      	bne.n	bb24 <FindDepth+0x18>
            {
                return 0;
    bb20:	2300      	movs	r3, #0
    bb22:	e039      	b.n	bb98 <FindDepth+0x8c>
            }
            if( FamilyTree[nodeMSB] >= NUM_COORDINATOR )
    bb24:	1dfb      	adds	r3, r7, #7
    bb26:	781b      	ldrb	r3, [r3, #0]
    bb28:	4a1d      	ldr	r2, [pc, #116]	; (bba0 <FindDepth+0x94>)
    bb2a:	5cd3      	ldrb	r3, [r2, r3]
    bb2c:	2b00      	cmp	r3, #0
    bb2e:	d001      	beq.n	bb34 <FindDepth+0x28>
            {
                return 0;
    bb30:	2300      	movs	r3, #0
    bb32:	e031      	b.n	bb98 <FindDepth+0x8c>
            }

            depth = 1;
    bb34:	230f      	movs	r3, #15
    bb36:	18fb      	adds	r3, r7, r3
    bb38:	2201      	movs	r2, #1
    bb3a:	701a      	strb	r2, [r3, #0]
            target = nodeMSB;
    bb3c:	230e      	movs	r3, #14
    bb3e:	18fb      	adds	r3, r7, r3
    bb40:	1dfa      	adds	r2, r7, #7
    bb42:	7812      	ldrb	r2, [r2, #0]
    bb44:	701a      	strb	r2, [r3, #0]
            loopCheck = 0;
    bb46:	230d      	movs	r3, #13
    bb48:	18fb      	adds	r3, r7, r3
    bb4a:	2200      	movs	r2, #0
    bb4c:	701a      	strb	r2, [r3, #0]
            while( FamilyTree[target] )
    bb4e:	e017      	b.n	bb80 <FindDepth+0x74>
            {
                target = FamilyTree[target];
    bb50:	230e      	movs	r3, #14
    bb52:	18fb      	adds	r3, r7, r3
    bb54:	781a      	ldrb	r2, [r3, #0]
    bb56:	230e      	movs	r3, #14
    bb58:	18fb      	adds	r3, r7, r3
    bb5a:	4911      	ldr	r1, [pc, #68]	; (bba0 <FindDepth+0x94>)
    bb5c:	5c8a      	ldrb	r2, [r1, r2]
    bb5e:	701a      	strb	r2, [r3, #0]
                depth++;
    bb60:	230f      	movs	r3, #15
    bb62:	18fb      	adds	r3, r7, r3
    bb64:	781a      	ldrb	r2, [r3, #0]
    bb66:	230f      	movs	r3, #15
    bb68:	18fb      	adds	r3, r7, r3
    bb6a:	3201      	adds	r2, #1
    bb6c:	701a      	strb	r2, [r3, #0]
                if( loopCheck++ > NUM_COORDINATOR )
    bb6e:	230d      	movs	r3, #13
    bb70:	18fb      	adds	r3, r7, r3
    bb72:	781b      	ldrb	r3, [r3, #0]
    bb74:	220d      	movs	r2, #13
    bb76:	18ba      	adds	r2, r7, r2
    bb78:	1c59      	adds	r1, r3, #1
    bb7a:	7011      	strb	r1, [r2, #0]
    bb7c:	2b01      	cmp	r3, #1
    bb7e:	d807      	bhi.n	bb90 <FindDepth+0x84>
            while( FamilyTree[target] )
    bb80:	230e      	movs	r3, #14
    bb82:	18fb      	adds	r3, r7, r3
    bb84:	781b      	ldrb	r3, [r3, #0]
    bb86:	4a06      	ldr	r2, [pc, #24]	; (bba0 <FindDepth+0x94>)
    bb88:	5cd3      	ldrb	r3, [r2, r3]
    bb8a:	2b00      	cmp	r3, #0
    bb8c:	d1e0      	bne.n	bb50 <FindDepth+0x44>
    bb8e:	e000      	b.n	bb92 <FindDepth+0x86>
                {
                    break;
    bb90:	46c0      	nop			; (mov r8, r8)
                }
            }
            return depth;   
    bb92:	230f      	movs	r3, #15
    bb94:	18fb      	adds	r3, r7, r3
    bb96:	781b      	ldrb	r3, [r3, #0]
        }
    bb98:	0018      	movs	r0, r3
    bb9a:	46bd      	mov	sp, r7
    bb9c:	b004      	add	sp, #16
    bb9e:	bd80      	pop	{r7, pc}
    bba0:	20001518 	.word	0x20001518

0000bba4 <FindRoutingPath>:
        #define DEST_PARENT 1
        #define DEST_CHILD  2
        #define DEST_PEER   3
        
        uint8_t FindRoutingPath(uint8_t destMSB)
        {
    bba4:	b590      	push	{r4, r7, lr}
    bba6:	b085      	sub	sp, #20
    bba8:	af00      	add	r7, sp, #0
    bbaa:	0002      	movs	r2, r0
    bbac:	1dfb      	adds	r3, r7, #7
    bbae:	701a      	strb	r2, [r3, #0]
            uint8_t i;
            uint8_t j;
            uint8_t target;
            uint8_t treeSteps;
            uint8_t loopCheck;
            uint8_t destRole = DEST_NULL;
    bbb0:	230a      	movs	r3, #10
    bbb2:	18fb      	adds	r3, r7, r3
    bbb4:	2200      	movs	r2, #0
    bbb6:	701a      	strb	r2, [r3, #0]
            
            // house keeping check
            if( (destMSB > NUM_COORDINATOR) || (FamilyTree[0] == 0 && FamilyTree[destMSB] > NUM_COORDINATOR) )
    bbb8:	1dfb      	adds	r3, r7, #7
    bbba:	781b      	ldrb	r3, [r3, #0]
    bbbc:	2b01      	cmp	r3, #1
    bbbe:	d809      	bhi.n	bbd4 <FindRoutingPath+0x30>
    bbc0:	4bd9      	ldr	r3, [pc, #868]	; (bf28 <FindRoutingPath+0x384>)
    bbc2:	781b      	ldrb	r3, [r3, #0]
    bbc4:	2b00      	cmp	r3, #0
    bbc6:	d107      	bne.n	bbd8 <FindRoutingPath+0x34>
    bbc8:	1dfb      	adds	r3, r7, #7
    bbca:	781b      	ldrb	r3, [r3, #0]
    bbcc:	4ad6      	ldr	r2, [pc, #856]	; (bf28 <FindRoutingPath+0x384>)
    bbce:	5cd3      	ldrb	r3, [r2, r3]
    bbd0:	2b01      	cmp	r3, #1
    bbd2:	d901      	bls.n	bbd8 <FindRoutingPath+0x34>
            {
                return 0xFF;
    bbd4:	23ff      	movs	r3, #255	; 0xff
    bbd6:	e2cb      	b.n	c170 <FindRoutingPath+0x5cc>
            }
            
            // first check if I know this guy directly
            if( RoutingTable[destMSB/8] & (0x01 << (destMSB % 8)) )
    bbd8:	1dfb      	adds	r3, r7, #7
    bbda:	781b      	ldrb	r3, [r3, #0]
    bbdc:	08db      	lsrs	r3, r3, #3
    bbde:	b2db      	uxtb	r3, r3
    bbe0:	001a      	movs	r2, r3
    bbe2:	4bd2      	ldr	r3, [pc, #840]	; (bf2c <FindRoutingPath+0x388>)
    bbe4:	5c9b      	ldrb	r3, [r3, r2]
    bbe6:	0019      	movs	r1, r3
    bbe8:	1dfb      	adds	r3, r7, #7
    bbea:	781b      	ldrb	r3, [r3, #0]
    bbec:	2207      	movs	r2, #7
    bbee:	4013      	ands	r3, r2
    bbf0:	4119      	asrs	r1, r3
    bbf2:	000b      	movs	r3, r1
    bbf4:	2201      	movs	r2, #1
    bbf6:	4013      	ands	r3, r2
    bbf8:	d002      	beq.n	bc00 <FindRoutingPath+0x5c>
            {
                // yes, I know this guy directly
                return destMSB;
    bbfa:	1dfb      	adds	r3, r7, #7
    bbfc:	781b      	ldrb	r3, [r3, #0]
    bbfe:	e2b7      	b.n	c170 <FindRoutingPath+0x5cc>
            }  
            
            // second, check if my neighbor know this guy
            for(i = 0; i < NUM_COORDINATOR; i++)
    bc00:	230f      	movs	r3, #15
    bc02:	18fb      	adds	r3, r7, r3
    bc04:	2200      	movs	r2, #0
    bc06:	701a      	strb	r2, [r3, #0]
    bc08:	e01b      	b.n	bc42 <FindRoutingPath+0x9e>
            {
                if( NeighborRoutingTable[i][destMSB/8] & (0x01 << (destMSB % 8)) )
    bc0a:	1dfb      	adds	r3, r7, #7
    bc0c:	781b      	ldrb	r3, [r3, #0]
    bc0e:	08db      	lsrs	r3, r3, #3
    bc10:	b2db      	uxtb	r3, r3
    bc12:	001a      	movs	r2, r3
    bc14:	4bc6      	ldr	r3, [pc, #792]	; (bf30 <FindRoutingPath+0x38c>)
    bc16:	5c9b      	ldrb	r3, [r3, r2]
    bc18:	0019      	movs	r1, r3
    bc1a:	1dfb      	adds	r3, r7, #7
    bc1c:	781b      	ldrb	r3, [r3, #0]
    bc1e:	2207      	movs	r2, #7
    bc20:	4013      	ands	r3, r2
    bc22:	4119      	asrs	r1, r3
    bc24:	000b      	movs	r3, r1
    bc26:	2201      	movs	r2, #1
    bc28:	4013      	ands	r3, r2
    bc2a:	d003      	beq.n	bc34 <FindRoutingPath+0x90>
                {
                    return i;
    bc2c:	230f      	movs	r3, #15
    bc2e:	18fb      	adds	r3, r7, r3
    bc30:	781b      	ldrb	r3, [r3, #0]
    bc32:	e29d      	b.n	c170 <FindRoutingPath+0x5cc>
            for(i = 0; i < NUM_COORDINATOR; i++)
    bc34:	230f      	movs	r3, #15
    bc36:	18fb      	adds	r3, r7, r3
    bc38:	781a      	ldrb	r2, [r3, #0]
    bc3a:	230f      	movs	r3, #15
    bc3c:	18fb      	adds	r3, r7, r3
    bc3e:	3201      	adds	r2, #1
    bc40:	701a      	strb	r2, [r3, #0]
    bc42:	230f      	movs	r3, #15
    bc44:	18fb      	adds	r3, r7, r3
    bc46:	781b      	ldrb	r3, [r3, #0]
    bc48:	2b00      	cmp	r3, #0
    bc4a:	d0de      	beq.n	bc0a <FindRoutingPath+0x66>
                }    
            }

            // check the maximum steps I need to rout insted of tree routing
            target = destMSB;
    bc4c:	230d      	movs	r3, #13
    bc4e:	18fb      	adds	r3, r7, r3
    bc50:	1dfa      	adds	r2, r7, #7
    bc52:	7812      	ldrb	r2, [r2, #0]
    bc54:	701a      	strb	r2, [r3, #0]
            loopCheck = 0;
    bc56:	230b      	movs	r3, #11
    bc58:	18fb      	adds	r3, r7, r3
    bc5a:	2200      	movs	r2, #0
    bc5c:	701a      	strb	r2, [r3, #0]
            while(target)
    bc5e:	e030      	b.n	bcc2 <FindRoutingPath+0x11e>
            {
                if( FamilyTree[target] == myShortAddress.v[1] )
    bc60:	230d      	movs	r3, #13
    bc62:	18fb      	adds	r3, r7, r3
    bc64:	781b      	ldrb	r3, [r3, #0]
    bc66:	4ab0      	ldr	r2, [pc, #704]	; (bf28 <FindRoutingPath+0x384>)
    bc68:	5cd2      	ldrb	r2, [r2, r3]
    bc6a:	4bb2      	ldr	r3, [pc, #712]	; (bf34 <FindRoutingPath+0x390>)
    bc6c:	785b      	ldrb	r3, [r3, #1]
    bc6e:	429a      	cmp	r2, r3
    bc70:	d116      	bne.n	bca0 <FindRoutingPath+0xfc>
                {
                    destRole = DEST_CHILD;
    bc72:	230a      	movs	r3, #10
    bc74:	18fb      	adds	r3, r7, r3
    bc76:	2202      	movs	r2, #2
    bc78:	701a      	strb	r2, [r3, #0]
                    treeSteps = FindDepth(destMSB) - FindDepth(myShortAddress.v[1]);
    bc7a:	1dfb      	adds	r3, r7, #7
    bc7c:	781b      	ldrb	r3, [r3, #0]
    bc7e:	0018      	movs	r0, r3
    bc80:	4bad      	ldr	r3, [pc, #692]	; (bf38 <FindRoutingPath+0x394>)
    bc82:	4798      	blx	r3
    bc84:	0003      	movs	r3, r0
    bc86:	001c      	movs	r4, r3
    bc88:	4baa      	ldr	r3, [pc, #680]	; (bf34 <FindRoutingPath+0x390>)
    bc8a:	785b      	ldrb	r3, [r3, #1]
    bc8c:	0018      	movs	r0, r3
    bc8e:	4baa      	ldr	r3, [pc, #680]	; (bf38 <FindRoutingPath+0x394>)
    bc90:	4798      	blx	r3
    bc92:	0003      	movs	r3, r0
    bc94:	001a      	movs	r2, r3
    bc96:	230c      	movs	r3, #12
    bc98:	18fb      	adds	r3, r7, r3
    bc9a:	1aa2      	subs	r2, r4, r2
    bc9c:	701a      	strb	r2, [r3, #0]
                    break;
    bc9e:	e017      	b.n	bcd0 <FindRoutingPath+0x12c>
                }
                target = FamilyTree[target];   
    bca0:	230d      	movs	r3, #13
    bca2:	18fb      	adds	r3, r7, r3
    bca4:	781a      	ldrb	r2, [r3, #0]
    bca6:	230d      	movs	r3, #13
    bca8:	18fb      	adds	r3, r7, r3
    bcaa:	499f      	ldr	r1, [pc, #636]	; (bf28 <FindRoutingPath+0x384>)
    bcac:	5c8a      	ldrb	r2, [r1, r2]
    bcae:	701a      	strb	r2, [r3, #0]
                if( loopCheck++ > NUM_COORDINATOR )
    bcb0:	230b      	movs	r3, #11
    bcb2:	18fb      	adds	r3, r7, r3
    bcb4:	781b      	ldrb	r3, [r3, #0]
    bcb6:	220b      	movs	r2, #11
    bcb8:	18ba      	adds	r2, r7, r2
    bcba:	1c59      	adds	r1, r3, #1
    bcbc:	7011      	strb	r1, [r2, #0]
    bcbe:	2b01      	cmp	r3, #1
    bcc0:	d805      	bhi.n	bcce <FindRoutingPath+0x12a>
            while(target)
    bcc2:	230d      	movs	r3, #13
    bcc4:	18fb      	adds	r3, r7, r3
    bcc6:	781b      	ldrb	r3, [r3, #0]
    bcc8:	2b00      	cmp	r3, #0
    bcca:	d1c9      	bne.n	bc60 <FindRoutingPath+0xbc>
    bccc:	e000      	b.n	bcd0 <FindRoutingPath+0x12c>
                {
                    break;
    bcce:	46c0      	nop			; (mov r8, r8)
                } 
            }
                      
            if ( destRole == DEST_NULL )
    bcd0:	230a      	movs	r3, #10
    bcd2:	18fb      	adds	r3, r7, r3
    bcd4:	781b      	ldrb	r3, [r3, #0]
    bcd6:	2b00      	cmp	r3, #0
    bcd8:	d141      	bne.n	bd5e <FindRoutingPath+0x1ba>
            {
                target = myShortAddress.v[1];
    bcda:	230d      	movs	r3, #13
    bcdc:	18fb      	adds	r3, r7, r3
    bcde:	4a95      	ldr	r2, [pc, #596]	; (bf34 <FindRoutingPath+0x390>)
    bce0:	7852      	ldrb	r2, [r2, #1]
    bce2:	701a      	strb	r2, [r3, #0]
                loopCheck = 0;
    bce4:	230b      	movs	r3, #11
    bce6:	18fb      	adds	r3, r7, r3
    bce8:	2200      	movs	r2, #0
    bcea:	701a      	strb	r2, [r3, #0]
                while(target)
    bcec:	e030      	b.n	bd50 <FindRoutingPath+0x1ac>
                {
                    if( FamilyTree[target] == destMSB )
    bcee:	230d      	movs	r3, #13
    bcf0:	18fb      	adds	r3, r7, r3
    bcf2:	781b      	ldrb	r3, [r3, #0]
    bcf4:	4a8c      	ldr	r2, [pc, #560]	; (bf28 <FindRoutingPath+0x384>)
    bcf6:	5cd3      	ldrb	r3, [r2, r3]
    bcf8:	1dfa      	adds	r2, r7, #7
    bcfa:	7812      	ldrb	r2, [r2, #0]
    bcfc:	429a      	cmp	r2, r3
    bcfe:	d116      	bne.n	bd2e <FindRoutingPath+0x18a>
                    {
                        destRole = DEST_PARENT;
    bd00:	230a      	movs	r3, #10
    bd02:	18fb      	adds	r3, r7, r3
    bd04:	2201      	movs	r2, #1
    bd06:	701a      	strb	r2, [r3, #0]
                        treeSteps = FindDepth(myShortAddress.v[1]) - FindDepth(destMSB);
    bd08:	4b8a      	ldr	r3, [pc, #552]	; (bf34 <FindRoutingPath+0x390>)
    bd0a:	785b      	ldrb	r3, [r3, #1]
    bd0c:	0018      	movs	r0, r3
    bd0e:	4b8a      	ldr	r3, [pc, #552]	; (bf38 <FindRoutingPath+0x394>)
    bd10:	4798      	blx	r3
    bd12:	0003      	movs	r3, r0
    bd14:	001c      	movs	r4, r3
    bd16:	1dfb      	adds	r3, r7, #7
    bd18:	781b      	ldrb	r3, [r3, #0]
    bd1a:	0018      	movs	r0, r3
    bd1c:	4b86      	ldr	r3, [pc, #536]	; (bf38 <FindRoutingPath+0x394>)
    bd1e:	4798      	blx	r3
    bd20:	0003      	movs	r3, r0
    bd22:	001a      	movs	r2, r3
    bd24:	230c      	movs	r3, #12
    bd26:	18fb      	adds	r3, r7, r3
    bd28:	1aa2      	subs	r2, r4, r2
    bd2a:	701a      	strb	r2, [r3, #0]
                        break;
    bd2c:	e017      	b.n	bd5e <FindRoutingPath+0x1ba>
                    }  
                    target = FamilyTree[target];  
    bd2e:	230d      	movs	r3, #13
    bd30:	18fb      	adds	r3, r7, r3
    bd32:	781a      	ldrb	r2, [r3, #0]
    bd34:	230d      	movs	r3, #13
    bd36:	18fb      	adds	r3, r7, r3
    bd38:	497b      	ldr	r1, [pc, #492]	; (bf28 <FindRoutingPath+0x384>)
    bd3a:	5c8a      	ldrb	r2, [r1, r2]
    bd3c:	701a      	strb	r2, [r3, #0]
                    if( loopCheck++ > NUM_COORDINATOR )
    bd3e:	230b      	movs	r3, #11
    bd40:	18fb      	adds	r3, r7, r3
    bd42:	781b      	ldrb	r3, [r3, #0]
    bd44:	220b      	movs	r2, #11
    bd46:	18ba      	adds	r2, r7, r2
    bd48:	1c59      	adds	r1, r3, #1
    bd4a:	7011      	strb	r1, [r2, #0]
    bd4c:	2b01      	cmp	r3, #1
    bd4e:	d805      	bhi.n	bd5c <FindRoutingPath+0x1b8>
                while(target)
    bd50:	230d      	movs	r3, #13
    bd52:	18fb      	adds	r3, r7, r3
    bd54:	781b      	ldrb	r3, [r3, #0]
    bd56:	2b00      	cmp	r3, #0
    bd58:	d1c9      	bne.n	bcee <FindRoutingPath+0x14a>
    bd5a:	e000      	b.n	bd5e <FindRoutingPath+0x1ba>
                    {
                        break;
    bd5c:	46c0      	nop			; (mov r8, r8)
                    }  
                } 
            } 
                
            if( destRole == DEST_NULL )
    bd5e:	230a      	movs	r3, #10
    bd60:	18fb      	adds	r3, r7, r3
    bd62:	781b      	ldrb	r3, [r3, #0]
    bd64:	2b00      	cmp	r3, #0
    bd66:	d10c      	bne.n	bd82 <FindRoutingPath+0x1de>
            {
                destRole = DEST_PEER;
    bd68:	230a      	movs	r3, #10
    bd6a:	18fb      	adds	r3, r7, r3
    bd6c:	2203      	movs	r2, #3
    bd6e:	701a      	strb	r2, [r3, #0]
                treeSteps = FindDepth(destMSB);
    bd70:	230c      	movs	r3, #12
    bd72:	18fc      	adds	r4, r7, r3
    bd74:	1dfb      	adds	r3, r7, #7
    bd76:	781b      	ldrb	r3, [r3, #0]
    bd78:	0018      	movs	r0, r3
    bd7a:	4b6f      	ldr	r3, [pc, #444]	; (bf38 <FindRoutingPath+0x394>)
    bd7c:	4798      	blx	r3
    bd7e:	0003      	movs	r3, r0
    bd80:	7023      	strb	r3, [r4, #0]
            }
                      
            for(i = 1; i < treeSteps; i++)
    bd82:	230f      	movs	r3, #15
    bd84:	18fb      	adds	r3, r7, r3
    bd86:	2201      	movs	r2, #1
    bd88:	701a      	strb	r2, [r3, #0]
    bd8a:	e153      	b.n	c034 <FindRoutingPath+0x490>
            {
                uint8_t k;
                
                // check if I know this guy along with the parent path
                target = destMSB;
    bd8c:	230d      	movs	r3, #13
    bd8e:	18fb      	adds	r3, r7, r3
    bd90:	1dfa      	adds	r2, r7, #7
    bd92:	7812      	ldrb	r2, [r2, #0]
    bd94:	701a      	strb	r2, [r3, #0]
                for(j = 0; j < i; j++)
    bd96:	230e      	movs	r3, #14
    bd98:	18fb      	adds	r3, r7, r3
    bd9a:	2200      	movs	r2, #0
    bd9c:	701a      	strb	r2, [r3, #0]
    bd9e:	e00e      	b.n	bdbe <FindRoutingPath+0x21a>
                {
                    target = FamilyTree[target];
    bda0:	230d      	movs	r3, #13
    bda2:	18fb      	adds	r3, r7, r3
    bda4:	781a      	ldrb	r2, [r3, #0]
    bda6:	230d      	movs	r3, #13
    bda8:	18fb      	adds	r3, r7, r3
    bdaa:	495f      	ldr	r1, [pc, #380]	; (bf28 <FindRoutingPath+0x384>)
    bdac:	5c8a      	ldrb	r2, [r1, r2]
    bdae:	701a      	strb	r2, [r3, #0]
                for(j = 0; j < i; j++)
    bdb0:	230e      	movs	r3, #14
    bdb2:	18fb      	adds	r3, r7, r3
    bdb4:	781a      	ldrb	r2, [r3, #0]
    bdb6:	230e      	movs	r3, #14
    bdb8:	18fb      	adds	r3, r7, r3
    bdba:	3201      	adds	r2, #1
    bdbc:	701a      	strb	r2, [r3, #0]
    bdbe:	230e      	movs	r3, #14
    bdc0:	18fa      	adds	r2, r7, r3
    bdc2:	230f      	movs	r3, #15
    bdc4:	18fb      	adds	r3, r7, r3
    bdc6:	7812      	ldrb	r2, [r2, #0]
    bdc8:	781b      	ldrb	r3, [r3, #0]
    bdca:	429a      	cmp	r2, r3
    bdcc:	d3e8      	bcc.n	bda0 <FindRoutingPath+0x1fc>
                }    
                if( RoutingTable[target/8] & (0x01 << (target % 8)) )
    bdce:	230d      	movs	r3, #13
    bdd0:	18fb      	adds	r3, r7, r3
    bdd2:	781b      	ldrb	r3, [r3, #0]
    bdd4:	08db      	lsrs	r3, r3, #3
    bdd6:	b2db      	uxtb	r3, r3
    bdd8:	001a      	movs	r2, r3
    bdda:	4b54      	ldr	r3, [pc, #336]	; (bf2c <FindRoutingPath+0x388>)
    bddc:	5c9b      	ldrb	r3, [r3, r2]
    bdde:	0019      	movs	r1, r3
    bde0:	230d      	movs	r3, #13
    bde2:	18fb      	adds	r3, r7, r3
    bde4:	781b      	ldrb	r3, [r3, #0]
    bde6:	2207      	movs	r2, #7
    bde8:	4013      	ands	r3, r2
    bdea:	4119      	asrs	r1, r3
    bdec:	000b      	movs	r3, r1
    bdee:	2201      	movs	r2, #1
    bdf0:	4013      	ands	r3, r2
    bdf2:	d003      	beq.n	bdfc <FindRoutingPath+0x258>
                {
                    return target;
    bdf4:	230d      	movs	r3, #13
    bdf6:	18fb      	adds	r3, r7, r3
    bdf8:	781b      	ldrb	r3, [r3, #0]
    bdfa:	e1b9      	b.n	c170 <FindRoutingPath+0x5cc>
                }    
                
                // check if I know this guy along with the child path
                for(k = 0; k < NUM_COORDINATOR; k++)
    bdfc:	2309      	movs	r3, #9
    bdfe:	18fb      	adds	r3, r7, r3
    be00:	2200      	movs	r2, #0
    be02:	701a      	strb	r2, [r3, #0]
    be04:	e04d      	b.n	bea2 <FindRoutingPath+0x2fe>
                {
                    if( FamilyTree[k] < NUM_COORDINATOR )
    be06:	2309      	movs	r3, #9
    be08:	18fb      	adds	r3, r7, r3
    be0a:	781b      	ldrb	r3, [r3, #0]
    be0c:	4a46      	ldr	r2, [pc, #280]	; (bf28 <FindRoutingPath+0x384>)
    be0e:	5cd3      	ldrb	r3, [r2, r3]
    be10:	2b00      	cmp	r3, #0
    be12:	d13f      	bne.n	be94 <FindRoutingPath+0x2f0>
                    {
                        target = k;
    be14:	230d      	movs	r3, #13
    be16:	18fb      	adds	r3, r7, r3
    be18:	2209      	movs	r2, #9
    be1a:	18ba      	adds	r2, r7, r2
    be1c:	7812      	ldrb	r2, [r2, #0]
    be1e:	701a      	strb	r2, [r3, #0]
                        for(j = 0; j < i; j++)
    be20:	230e      	movs	r3, #14
    be22:	18fb      	adds	r3, r7, r3
    be24:	2200      	movs	r2, #0
    be26:	701a      	strb	r2, [r3, #0]
    be28:	e00e      	b.n	be48 <FindRoutingPath+0x2a4>
                        {
                            target = FamilyTree[target];
    be2a:	230d      	movs	r3, #13
    be2c:	18fb      	adds	r3, r7, r3
    be2e:	781a      	ldrb	r2, [r3, #0]
    be30:	230d      	movs	r3, #13
    be32:	18fb      	adds	r3, r7, r3
    be34:	493c      	ldr	r1, [pc, #240]	; (bf28 <FindRoutingPath+0x384>)
    be36:	5c8a      	ldrb	r2, [r1, r2]
    be38:	701a      	strb	r2, [r3, #0]
                        for(j = 0; j < i; j++)
    be3a:	230e      	movs	r3, #14
    be3c:	18fb      	adds	r3, r7, r3
    be3e:	781a      	ldrb	r2, [r3, #0]
    be40:	230e      	movs	r3, #14
    be42:	18fb      	adds	r3, r7, r3
    be44:	3201      	adds	r2, #1
    be46:	701a      	strb	r2, [r3, #0]
    be48:	230e      	movs	r3, #14
    be4a:	18fa      	adds	r2, r7, r3
    be4c:	230f      	movs	r3, #15
    be4e:	18fb      	adds	r3, r7, r3
    be50:	7812      	ldrb	r2, [r2, #0]
    be52:	781b      	ldrb	r3, [r3, #0]
    be54:	429a      	cmp	r2, r3
    be56:	d3e8      	bcc.n	be2a <FindRoutingPath+0x286>
                        }    
                        if( (target == destMSB) && (RoutingTable[k/8] & (0x01 << (k%8))) )
    be58:	230d      	movs	r3, #13
    be5a:	18fa      	adds	r2, r7, r3
    be5c:	1dfb      	adds	r3, r7, #7
    be5e:	7812      	ldrb	r2, [r2, #0]
    be60:	781b      	ldrb	r3, [r3, #0]
    be62:	429a      	cmp	r2, r3
    be64:	d116      	bne.n	be94 <FindRoutingPath+0x2f0>
    be66:	2309      	movs	r3, #9
    be68:	18fb      	adds	r3, r7, r3
    be6a:	781b      	ldrb	r3, [r3, #0]
    be6c:	08db      	lsrs	r3, r3, #3
    be6e:	b2db      	uxtb	r3, r3
    be70:	001a      	movs	r2, r3
    be72:	4b2e      	ldr	r3, [pc, #184]	; (bf2c <FindRoutingPath+0x388>)
    be74:	5c9b      	ldrb	r3, [r3, r2]
    be76:	0019      	movs	r1, r3
    be78:	2309      	movs	r3, #9
    be7a:	18fb      	adds	r3, r7, r3
    be7c:	781b      	ldrb	r3, [r3, #0]
    be7e:	2207      	movs	r2, #7
    be80:	4013      	ands	r3, r2
    be82:	4119      	asrs	r1, r3
    be84:	000b      	movs	r3, r1
    be86:	2201      	movs	r2, #1
    be88:	4013      	ands	r3, r2
    be8a:	d003      	beq.n	be94 <FindRoutingPath+0x2f0>
                        {
                            return k;
    be8c:	2309      	movs	r3, #9
    be8e:	18fb      	adds	r3, r7, r3
    be90:	781b      	ldrb	r3, [r3, #0]
    be92:	e16d      	b.n	c170 <FindRoutingPath+0x5cc>
                for(k = 0; k < NUM_COORDINATOR; k++)
    be94:	2309      	movs	r3, #9
    be96:	18fb      	adds	r3, r7, r3
    be98:	781a      	ldrb	r2, [r3, #0]
    be9a:	2309      	movs	r3, #9
    be9c:	18fb      	adds	r3, r7, r3
    be9e:	3201      	adds	r2, #1
    bea0:	701a      	strb	r2, [r3, #0]
    bea2:	2309      	movs	r3, #9
    bea4:	18fb      	adds	r3, r7, r3
    bea6:	781b      	ldrb	r3, [r3, #0]
    bea8:	2b00      	cmp	r3, #0
    beaa:	d0ac      	beq.n	be06 <FindRoutingPath+0x262>
                        }    
                    }    
                }
                
                // check if my neighbor know this guy along the parent path
                target = destMSB;
    beac:	230d      	movs	r3, #13
    beae:	18fb      	adds	r3, r7, r3
    beb0:	1dfa      	adds	r2, r7, #7
    beb2:	7812      	ldrb	r2, [r2, #0]
    beb4:	701a      	strb	r2, [r3, #0]
                for(j = 0; j < i; j++)
    beb6:	230e      	movs	r3, #14
    beb8:	18fb      	adds	r3, r7, r3
    beba:	2200      	movs	r2, #0
    bebc:	701a      	strb	r2, [r3, #0]
    bebe:	e00e      	b.n	bede <FindRoutingPath+0x33a>
                {
                    target = FamilyTree[target];
    bec0:	230d      	movs	r3, #13
    bec2:	18fb      	adds	r3, r7, r3
    bec4:	781a      	ldrb	r2, [r3, #0]
    bec6:	230d      	movs	r3, #13
    bec8:	18fb      	adds	r3, r7, r3
    beca:	4917      	ldr	r1, [pc, #92]	; (bf28 <FindRoutingPath+0x384>)
    becc:	5c8a      	ldrb	r2, [r1, r2]
    bece:	701a      	strb	r2, [r3, #0]
                for(j = 0; j < i; j++)
    bed0:	230e      	movs	r3, #14
    bed2:	18fb      	adds	r3, r7, r3
    bed4:	781a      	ldrb	r2, [r3, #0]
    bed6:	230e      	movs	r3, #14
    bed8:	18fb      	adds	r3, r7, r3
    beda:	3201      	adds	r2, #1
    bedc:	701a      	strb	r2, [r3, #0]
    bede:	230e      	movs	r3, #14
    bee0:	18fa      	adds	r2, r7, r3
    bee2:	230f      	movs	r3, #15
    bee4:	18fb      	adds	r3, r7, r3
    bee6:	7812      	ldrb	r2, [r2, #0]
    bee8:	781b      	ldrb	r3, [r3, #0]
    beea:	429a      	cmp	r2, r3
    beec:	d3e8      	bcc.n	bec0 <FindRoutingPath+0x31c>
                }
                for(k = 0; k < NUM_COORDINATOR; k++)
    beee:	2309      	movs	r3, #9
    bef0:	18fb      	adds	r3, r7, r3
    bef2:	2200      	movs	r2, #0
    bef4:	701a      	strb	r2, [r3, #0]
    bef6:	e028      	b.n	bf4a <FindRoutingPath+0x3a6>
                {
                    if( NeighborRoutingTable[k][target/8] & (0x01 << (target%8)) )
    bef8:	230d      	movs	r3, #13
    befa:	18fb      	adds	r3, r7, r3
    befc:	781b      	ldrb	r3, [r3, #0]
    befe:	08db      	lsrs	r3, r3, #3
    bf00:	b2db      	uxtb	r3, r3
    bf02:	001a      	movs	r2, r3
    bf04:	4b0a      	ldr	r3, [pc, #40]	; (bf30 <FindRoutingPath+0x38c>)
    bf06:	5c9b      	ldrb	r3, [r3, r2]
    bf08:	0019      	movs	r1, r3
    bf0a:	230d      	movs	r3, #13
    bf0c:	18fb      	adds	r3, r7, r3
    bf0e:	781b      	ldrb	r3, [r3, #0]
    bf10:	2207      	movs	r2, #7
    bf12:	4013      	ands	r3, r2
    bf14:	4119      	asrs	r1, r3
    bf16:	000b      	movs	r3, r1
    bf18:	2201      	movs	r2, #1
    bf1a:	4013      	ands	r3, r2
    bf1c:	d00e      	beq.n	bf3c <FindRoutingPath+0x398>
                    {
                        return k;
    bf1e:	2309      	movs	r3, #9
    bf20:	18fb      	adds	r3, r7, r3
    bf22:	781b      	ldrb	r3, [r3, #0]
    bf24:	e124      	b.n	c170 <FindRoutingPath+0x5cc>
    bf26:	46c0      	nop			; (mov r8, r8)
    bf28:	20001518 	.word	0x20001518
    bf2c:	20001250 	.word	0x20001250
    bf30:	20001584 	.word	0x20001584
    bf34:	20001140 	.word	0x20001140
    bf38:	0000bb0d 	.word	0x0000bb0d
                for(k = 0; k < NUM_COORDINATOR; k++)
    bf3c:	2309      	movs	r3, #9
    bf3e:	18fb      	adds	r3, r7, r3
    bf40:	781a      	ldrb	r2, [r3, #0]
    bf42:	2309      	movs	r3, #9
    bf44:	18fb      	adds	r3, r7, r3
    bf46:	3201      	adds	r2, #1
    bf48:	701a      	strb	r2, [r3, #0]
    bf4a:	2309      	movs	r3, #9
    bf4c:	18fb      	adds	r3, r7, r3
    bf4e:	781b      	ldrb	r3, [r3, #0]
    bf50:	2b00      	cmp	r3, #0
    bf52:	d0d1      	beq.n	bef8 <FindRoutingPath+0x354>
                    }    
                }    
                
                // check if my neighbor know this guy along the child path
                for(k = 0; k < NUM_COORDINATOR; k++)
    bf54:	2309      	movs	r3, #9
    bf56:	18fb      	adds	r3, r7, r3
    bf58:	2200      	movs	r2, #0
    bf5a:	701a      	strb	r2, [r3, #0]
    bf5c:	e05e      	b.n	c01c <FindRoutingPath+0x478>
                {
                    if( FamilyTree[k] < NUM_COORDINATOR )
    bf5e:	2309      	movs	r3, #9
    bf60:	18fb      	adds	r3, r7, r3
    bf62:	781b      	ldrb	r3, [r3, #0]
    bf64:	4a84      	ldr	r2, [pc, #528]	; (c178 <FindRoutingPath+0x5d4>)
    bf66:	5cd3      	ldrb	r3, [r2, r3]
    bf68:	2b00      	cmp	r3, #0
    bf6a:	d150      	bne.n	c00e <FindRoutingPath+0x46a>
                    {
                        target = k;
    bf6c:	230d      	movs	r3, #13
    bf6e:	18fb      	adds	r3, r7, r3
    bf70:	2209      	movs	r2, #9
    bf72:	18ba      	adds	r2, r7, r2
    bf74:	7812      	ldrb	r2, [r2, #0]
    bf76:	701a      	strb	r2, [r3, #0]
                        for(j = 0; j < i; j++)
    bf78:	230e      	movs	r3, #14
    bf7a:	18fb      	adds	r3, r7, r3
    bf7c:	2200      	movs	r2, #0
    bf7e:	701a      	strb	r2, [r3, #0]
    bf80:	e00e      	b.n	bfa0 <FindRoutingPath+0x3fc>
                        {
                            target = FamilyTree[target];
    bf82:	230d      	movs	r3, #13
    bf84:	18fb      	adds	r3, r7, r3
    bf86:	781a      	ldrb	r2, [r3, #0]
    bf88:	230d      	movs	r3, #13
    bf8a:	18fb      	adds	r3, r7, r3
    bf8c:	497a      	ldr	r1, [pc, #488]	; (c178 <FindRoutingPath+0x5d4>)
    bf8e:	5c8a      	ldrb	r2, [r1, r2]
    bf90:	701a      	strb	r2, [r3, #0]
                        for(j = 0; j < i; j++)
    bf92:	230e      	movs	r3, #14
    bf94:	18fb      	adds	r3, r7, r3
    bf96:	781a      	ldrb	r2, [r3, #0]
    bf98:	230e      	movs	r3, #14
    bf9a:	18fb      	adds	r3, r7, r3
    bf9c:	3201      	adds	r2, #1
    bf9e:	701a      	strb	r2, [r3, #0]
    bfa0:	230e      	movs	r3, #14
    bfa2:	18fa      	adds	r2, r7, r3
    bfa4:	230f      	movs	r3, #15
    bfa6:	18fb      	adds	r3, r7, r3
    bfa8:	7812      	ldrb	r2, [r2, #0]
    bfaa:	781b      	ldrb	r3, [r3, #0]
    bfac:	429a      	cmp	r2, r3
    bfae:	d3e8      	bcc.n	bf82 <FindRoutingPath+0x3de>
                        }    
                        if( target == destMSB )
    bfb0:	230d      	movs	r3, #13
    bfb2:	18fa      	adds	r2, r7, r3
    bfb4:	1dfb      	adds	r3, r7, #7
    bfb6:	7812      	ldrb	r2, [r2, #0]
    bfb8:	781b      	ldrb	r3, [r3, #0]
    bfba:	429a      	cmp	r2, r3
    bfbc:	d127      	bne.n	c00e <FindRoutingPath+0x46a>
                        {
                            for(j = 0; j < NUM_COORDINATOR; j++)
    bfbe:	230e      	movs	r3, #14
    bfc0:	18fb      	adds	r3, r7, r3
    bfc2:	2200      	movs	r2, #0
    bfc4:	701a      	strb	r2, [r3, #0]
    bfc6:	e01d      	b.n	c004 <FindRoutingPath+0x460>
                            {
                                if( NeighborRoutingTable[j][k/8] & (0x01 << (k%8)) )
    bfc8:	2309      	movs	r3, #9
    bfca:	18fb      	adds	r3, r7, r3
    bfcc:	781b      	ldrb	r3, [r3, #0]
    bfce:	08db      	lsrs	r3, r3, #3
    bfd0:	b2db      	uxtb	r3, r3
    bfd2:	001a      	movs	r2, r3
    bfd4:	4b69      	ldr	r3, [pc, #420]	; (c17c <FindRoutingPath+0x5d8>)
    bfd6:	5c9b      	ldrb	r3, [r3, r2]
    bfd8:	0019      	movs	r1, r3
    bfda:	2309      	movs	r3, #9
    bfdc:	18fb      	adds	r3, r7, r3
    bfde:	781b      	ldrb	r3, [r3, #0]
    bfe0:	2207      	movs	r2, #7
    bfe2:	4013      	ands	r3, r2
    bfe4:	4119      	asrs	r1, r3
    bfe6:	000b      	movs	r3, r1
    bfe8:	2201      	movs	r2, #1
    bfea:	4013      	ands	r3, r2
    bfec:	d003      	beq.n	bff6 <FindRoutingPath+0x452>
                                {
                                    return j;
    bfee:	230e      	movs	r3, #14
    bff0:	18fb      	adds	r3, r7, r3
    bff2:	781b      	ldrb	r3, [r3, #0]
    bff4:	e0bc      	b.n	c170 <FindRoutingPath+0x5cc>
                            for(j = 0; j < NUM_COORDINATOR; j++)
    bff6:	230e      	movs	r3, #14
    bff8:	18fb      	adds	r3, r7, r3
    bffa:	781a      	ldrb	r2, [r3, #0]
    bffc:	230e      	movs	r3, #14
    bffe:	18fb      	adds	r3, r7, r3
    c000:	3201      	adds	r2, #1
    c002:	701a      	strb	r2, [r3, #0]
    c004:	230e      	movs	r3, #14
    c006:	18fb      	adds	r3, r7, r3
    c008:	781b      	ldrb	r3, [r3, #0]
    c00a:	2b00      	cmp	r3, #0
    c00c:	d0dc      	beq.n	bfc8 <FindRoutingPath+0x424>
                for(k = 0; k < NUM_COORDINATOR; k++)
    c00e:	2309      	movs	r3, #9
    c010:	18fb      	adds	r3, r7, r3
    c012:	781a      	ldrb	r2, [r3, #0]
    c014:	2309      	movs	r3, #9
    c016:	18fb      	adds	r3, r7, r3
    c018:	3201      	adds	r2, #1
    c01a:	701a      	strb	r2, [r3, #0]
    c01c:	2309      	movs	r3, #9
    c01e:	18fb      	adds	r3, r7, r3
    c020:	781b      	ldrb	r3, [r3, #0]
    c022:	2b00      	cmp	r3, #0
    c024:	d09b      	beq.n	bf5e <FindRoutingPath+0x3ba>
            for(i = 1; i < treeSteps; i++)
    c026:	230f      	movs	r3, #15
    c028:	18fb      	adds	r3, r7, r3
    c02a:	781a      	ldrb	r2, [r3, #0]
    c02c:	230f      	movs	r3, #15
    c02e:	18fb      	adds	r3, r7, r3
    c030:	3201      	adds	r2, #1
    c032:	701a      	strb	r2, [r3, #0]
    c034:	230f      	movs	r3, #15
    c036:	18fa      	adds	r2, r7, r3
    c038:	230c      	movs	r3, #12
    c03a:	18fb      	adds	r3, r7, r3
    c03c:	7812      	ldrb	r2, [r2, #0]
    c03e:	781b      	ldrb	r3, [r3, #0]
    c040:	429a      	cmp	r2, r3
    c042:	d200      	bcs.n	c046 <FindRoutingPath+0x4a2>
    c044:	e6a2      	b.n	bd8c <FindRoutingPath+0x1e8>
                
            } 
                      
            // I have looked forward for three steps, now I need to go tree routing
            // check if the destination is my child
            if( destRole == DEST_CHILD )
    c046:	230a      	movs	r3, #10
    c048:	18fb      	adds	r3, r7, r3
    c04a:	781b      	ldrb	r3, [r3, #0]
    c04c:	2b02      	cmp	r3, #2
    c04e:	d13c      	bne.n	c0ca <FindRoutingPath+0x526>
            {
                i = destMSB;
    c050:	230f      	movs	r3, #15
    c052:	18fb      	adds	r3, r7, r3
    c054:	1dfa      	adds	r2, r7, #7
    c056:	7812      	ldrb	r2, [r2, #0]
    c058:	701a      	strb	r2, [r3, #0]
                loopCheck = 0;
    c05a:	230b      	movs	r3, #11
    c05c:	18fb      	adds	r3, r7, r3
    c05e:	2200      	movs	r2, #0
    c060:	701a      	strb	r2, [r3, #0]
                while( (FamilyTree[i] != myShortAddress.v[1]) ||
    c062:	e010      	b.n	c086 <FindRoutingPath+0x4e2>
                    (RoutingTable[i/8] & (0x01 << (i % 8))) )
                {
                    i = FamilyTree[i];
    c064:	230f      	movs	r3, #15
    c066:	18fb      	adds	r3, r7, r3
    c068:	781a      	ldrb	r2, [r3, #0]
    c06a:	230f      	movs	r3, #15
    c06c:	18fb      	adds	r3, r7, r3
    c06e:	4942      	ldr	r1, [pc, #264]	; (c178 <FindRoutingPath+0x5d4>)
    c070:	5c8a      	ldrb	r2, [r1, r2]
    c072:	701a      	strb	r2, [r3, #0]
                    if( loopCheck++ > NUM_COORDINATOR )
    c074:	230b      	movs	r3, #11
    c076:	18fb      	adds	r3, r7, r3
    c078:	781b      	ldrb	r3, [r3, #0]
    c07a:	220b      	movs	r2, #11
    c07c:	18ba      	adds	r2, r7, r2
    c07e:	1c59      	adds	r1, r3, #1
    c080:	7011      	strb	r1, [r2, #0]
    c082:	2b01      	cmp	r3, #1
    c084:	d81c      	bhi.n	c0c0 <FindRoutingPath+0x51c>
                while( (FamilyTree[i] != myShortAddress.v[1]) ||
    c086:	230f      	movs	r3, #15
    c088:	18fb      	adds	r3, r7, r3
    c08a:	781b      	ldrb	r3, [r3, #0]
    c08c:	4a3a      	ldr	r2, [pc, #232]	; (c178 <FindRoutingPath+0x5d4>)
    c08e:	5cd2      	ldrb	r2, [r2, r3]
    c090:	4b3b      	ldr	r3, [pc, #236]	; (c180 <FindRoutingPath+0x5dc>)
    c092:	785b      	ldrb	r3, [r3, #1]
    c094:	429a      	cmp	r2, r3
    c096:	d1e5      	bne.n	c064 <FindRoutingPath+0x4c0>
                    (RoutingTable[i/8] & (0x01 << (i % 8))) )
    c098:	230f      	movs	r3, #15
    c09a:	18fb      	adds	r3, r7, r3
    c09c:	781b      	ldrb	r3, [r3, #0]
    c09e:	08db      	lsrs	r3, r3, #3
    c0a0:	b2db      	uxtb	r3, r3
    c0a2:	001a      	movs	r2, r3
    c0a4:	4b37      	ldr	r3, [pc, #220]	; (c184 <FindRoutingPath+0x5e0>)
    c0a6:	5c9b      	ldrb	r3, [r3, r2]
    c0a8:	0019      	movs	r1, r3
    c0aa:	230f      	movs	r3, #15
    c0ac:	18fb      	adds	r3, r7, r3
    c0ae:	781b      	ldrb	r3, [r3, #0]
    c0b0:	2207      	movs	r2, #7
    c0b2:	4013      	ands	r3, r2
                while( (FamilyTree[i] != myShortAddress.v[1]) ||
    c0b4:	4119      	asrs	r1, r3
    c0b6:	000b      	movs	r3, r1
    c0b8:	2201      	movs	r2, #1
    c0ba:	4013      	ands	r3, r2
    c0bc:	d1d2      	bne.n	c064 <FindRoutingPath+0x4c0>
    c0be:	e000      	b.n	c0c2 <FindRoutingPath+0x51e>
                    {
                        break;
    c0c0:	46c0      	nop			; (mov r8, r8)
                    }
                }
                return i;  
    c0c2:	230f      	movs	r3, #15
    c0c4:	18fb      	adds	r3, r7, r3
    c0c6:	781b      	ldrb	r3, [r3, #0]
    c0c8:	e052      	b.n	c170 <FindRoutingPath+0x5cc>
            }

            i = FamilyTree[myShortAddress.v[1]];
    c0ca:	4b2d      	ldr	r3, [pc, #180]	; (c180 <FindRoutingPath+0x5dc>)
    c0cc:	785b      	ldrb	r3, [r3, #1]
    c0ce:	0019      	movs	r1, r3
    c0d0:	230f      	movs	r3, #15
    c0d2:	18fb      	adds	r3, r7, r3
    c0d4:	4a28      	ldr	r2, [pc, #160]	; (c178 <FindRoutingPath+0x5d4>)
    c0d6:	5c52      	ldrb	r2, [r2, r1]
    c0d8:	701a      	strb	r2, [r3, #0]
            target = i;
    c0da:	230d      	movs	r3, #13
    c0dc:	18fb      	adds	r3, r7, r3
    c0de:	220f      	movs	r2, #15
    c0e0:	18ba      	adds	r2, r7, r2
    c0e2:	7812      	ldrb	r2, [r2, #0]
    c0e4:	701a      	strb	r2, [r3, #0]
            loopCheck = 0;
    c0e6:	230b      	movs	r3, #11
    c0e8:	18fb      	adds	r3, r7, r3
    c0ea:	2200      	movs	r2, #0
    c0ec:	701a      	strb	r2, [r3, #0]
            while( (FamilyTree[i] != i) && (i != destMSB) )
    c0ee:	e029      	b.n	c144 <FindRoutingPath+0x5a0>
            {
                if( RoutingTable[i/8] & (0x01 << (i%8)) )
    c0f0:	230f      	movs	r3, #15
    c0f2:	18fb      	adds	r3, r7, r3
    c0f4:	781b      	ldrb	r3, [r3, #0]
    c0f6:	08db      	lsrs	r3, r3, #3
    c0f8:	b2db      	uxtb	r3, r3
    c0fa:	001a      	movs	r2, r3
    c0fc:	4b21      	ldr	r3, [pc, #132]	; (c184 <FindRoutingPath+0x5e0>)
    c0fe:	5c9b      	ldrb	r3, [r3, r2]
    c100:	0019      	movs	r1, r3
    c102:	230f      	movs	r3, #15
    c104:	18fb      	adds	r3, r7, r3
    c106:	781b      	ldrb	r3, [r3, #0]
    c108:	2207      	movs	r2, #7
    c10a:	4013      	ands	r3, r2
    c10c:	4119      	asrs	r1, r3
    c10e:	000b      	movs	r3, r1
    c110:	2201      	movs	r2, #1
    c112:	4013      	ands	r3, r2
    c114:	d005      	beq.n	c122 <FindRoutingPath+0x57e>
                {
                    target = i;
    c116:	230d      	movs	r3, #13
    c118:	18fb      	adds	r3, r7, r3
    c11a:	220f      	movs	r2, #15
    c11c:	18ba      	adds	r2, r7, r2
    c11e:	7812      	ldrb	r2, [r2, #0]
    c120:	701a      	strb	r2, [r3, #0]
                }
                i = FamilyTree[i];
    c122:	230f      	movs	r3, #15
    c124:	18fb      	adds	r3, r7, r3
    c126:	781a      	ldrb	r2, [r3, #0]
    c128:	230f      	movs	r3, #15
    c12a:	18fb      	adds	r3, r7, r3
    c12c:	4912      	ldr	r1, [pc, #72]	; (c178 <FindRoutingPath+0x5d4>)
    c12e:	5c8a      	ldrb	r2, [r1, r2]
    c130:	701a      	strb	r2, [r3, #0]
                if( loopCheck++ > NUM_COORDINATOR )
    c132:	230b      	movs	r3, #11
    c134:	18fb      	adds	r3, r7, r3
    c136:	781b      	ldrb	r3, [r3, #0]
    c138:	220b      	movs	r2, #11
    c13a:	18ba      	adds	r2, r7, r2
    c13c:	1c59      	adds	r1, r3, #1
    c13e:	7011      	strb	r1, [r2, #0]
    c140:	2b01      	cmp	r3, #1
    c142:	d811      	bhi.n	c168 <FindRoutingPath+0x5c4>
            while( (FamilyTree[i] != i) && (i != destMSB) )
    c144:	230f      	movs	r3, #15
    c146:	18fb      	adds	r3, r7, r3
    c148:	781b      	ldrb	r3, [r3, #0]
    c14a:	4a0b      	ldr	r2, [pc, #44]	; (c178 <FindRoutingPath+0x5d4>)
    c14c:	5cd3      	ldrb	r3, [r2, r3]
    c14e:	220f      	movs	r2, #15
    c150:	18ba      	adds	r2, r7, r2
    c152:	7812      	ldrb	r2, [r2, #0]
    c154:	429a      	cmp	r2, r3
    c156:	d008      	beq.n	c16a <FindRoutingPath+0x5c6>
    c158:	230f      	movs	r3, #15
    c15a:	18fa      	adds	r2, r7, r3
    c15c:	1dfb      	adds	r3, r7, #7
    c15e:	7812      	ldrb	r2, [r2, #0]
    c160:	781b      	ldrb	r3, [r3, #0]
    c162:	429a      	cmp	r2, r3
    c164:	d1c4      	bne.n	c0f0 <FindRoutingPath+0x54c>
    c166:	e000      	b.n	c16a <FindRoutingPath+0x5c6>
                {
                    break;
    c168:	46c0      	nop			; (mov r8, r8)
                }
            }
            return target;
    c16a:	230d      	movs	r3, #13
    c16c:	18fb      	adds	r3, r7, r3
    c16e:	781b      	ldrb	r3, [r3, #0]

        }    
    c170:	0018      	movs	r0, r3
    c172:	46bd      	mov	sp, r7
    c174:	b005      	add	sp, #20
    c176:	bd90      	pop	{r4, r7, pc}
    c178:	20001518 	.word	0x20001518
    c17c:	20001584 	.word	0x20001584
    c180:	20001140 	.word	0x20001140
    c184:	20001250 	.word	0x20001250

0000c188 <RouteMessage>:
         *                  mechanism. MiWi PRO uses this function to route
         *                  the message across multiple hops to reach the
         *                  destination node.
         ********************************************************************/
        bool RouteMessage(WORD_VAL PANID, WORD_VAL ShortAddress, bool SecEn)
        {
    c188:	b590      	push	{r4, r7, lr}
    c18a:	b085      	sub	sp, #20
    c18c:	af00      	add	r7, sp, #0
    c18e:	1d3b      	adds	r3, r7, #4
    c190:	8018      	strh	r0, [r3, #0]
    c192:	003b      	movs	r3, r7
    c194:	8019      	strh	r1, [r3, #0]
    c196:	1cfb      	adds	r3, r7, #3
    c198:	701a      	strb	r2, [r3, #0]
            uint8_t i;
            uint8_t parentNode = ShortAddress.v[1];
    c19a:	230e      	movs	r3, #14
    c19c:	18fb      	adds	r3, r7, r3
    c19e:	003a      	movs	r2, r7
    c1a0:	7852      	ldrb	r2, [r2, #1]
    c1a2:	701a      	strb	r2, [r3, #0]
            
            if( parentNode > 0x7F )
    c1a4:	230e      	movs	r3, #14
    c1a6:	18fb      	adds	r3, r7, r3
    c1a8:	781b      	ldrb	r3, [r3, #0]
    c1aa:	b25b      	sxtb	r3, r3
    c1ac:	2b00      	cmp	r3, #0
    c1ae:	da01      	bge.n	c1b4 <RouteMessage+0x2c>
            {
                return false;
    c1b0:	2300      	movs	r3, #0
    c1b2:	e18e      	b.n	c4d2 <RouteMessage+0x34a>
            }
            
            if( FamilyTree[0] == 0 && FamilyTree[parentNode] > NUM_COORDINATOR )
    c1b4:	4bc9      	ldr	r3, [pc, #804]	; (c4dc <RouteMessage+0x354>)
    c1b6:	781b      	ldrb	r3, [r3, #0]
    c1b8:	2b00      	cmp	r3, #0
    c1ba:	d108      	bne.n	c1ce <RouteMessage+0x46>
    c1bc:	230e      	movs	r3, #14
    c1be:	18fb      	adds	r3, r7, r3
    c1c0:	781b      	ldrb	r3, [r3, #0]
    c1c2:	4ac6      	ldr	r2, [pc, #792]	; (c4dc <RouteMessage+0x354>)
    c1c4:	5cd3      	ldrb	r3, [r2, r3]
    c1c6:	2b01      	cmp	r3, #1
    c1c8:	d901      	bls.n	c1ce <RouteMessage+0x46>
            {
                // if the destination node has not join the network
                return false;
    c1ca:	2300      	movs	r3, #0
    c1cc:	e181      	b.n	c4d2 <RouteMessage+0x34a>
            } 

            for(i = 0; i < PACKET_RECORD_SIZE; i++)
    c1ce:	230f      	movs	r3, #15
    c1d0:	18fb      	adds	r3, r7, r3
    c1d2:	2200      	movs	r2, #0
    c1d4:	701a      	strb	r2, [r3, #0]
    c1d6:	e036      	b.n	c246 <RouteMessage+0xbe>
            {
                if( (PacketRecords[i].RxCounter > 0 ) &&
    c1d8:	230f      	movs	r3, #15
    c1da:	18fb      	adds	r3, r7, r3
    c1dc:	781b      	ldrb	r3, [r3, #0]
    c1de:	4ac0      	ldr	r2, [pc, #768]	; (c4e0 <RouteMessage+0x358>)
    c1e0:	00db      	lsls	r3, r3, #3
    c1e2:	18d3      	adds	r3, r2, r3
    c1e4:	3303      	adds	r3, #3
    c1e6:	781b      	ldrb	r3, [r3, #0]
    c1e8:	2b00      	cmp	r3, #0
    c1ea:	d025      	beq.n	c238 <RouteMessage+0xb0>
                    (PacketRecords[i].AltSourceAddr.Val == ShortAddress.Val) &&
    c1ec:	230f      	movs	r3, #15
    c1ee:	18fb      	adds	r3, r7, r3
    c1f0:	781a      	ldrb	r2, [r3, #0]
    c1f2:	4bbb      	ldr	r3, [pc, #748]	; (c4e0 <RouteMessage+0x358>)
    c1f4:	00d2      	lsls	r2, r2, #3
    c1f6:	5ad2      	ldrh	r2, [r2, r3]
    c1f8:	003b      	movs	r3, r7
    c1fa:	881b      	ldrh	r3, [r3, #0]
                if( (PacketRecords[i].RxCounter > 0 ) &&
    c1fc:	429a      	cmp	r2, r3
    c1fe:	d11b      	bne.n	c238 <RouteMessage+0xb0>
                    (PacketRecords[i].MiWiPROSeq == TxBuffer[10]) 
    c200:	230f      	movs	r3, #15
    c202:	18fb      	adds	r3, r7, r3
    c204:	781b      	ldrb	r3, [r3, #0]
    c206:	4ab6      	ldr	r2, [pc, #728]	; (c4e0 <RouteMessage+0x358>)
    c208:	00db      	lsls	r3, r3, #3
    c20a:	18d3      	adds	r3, r2, r3
    c20c:	3302      	adds	r3, #2
    c20e:	781a      	ldrb	r2, [r3, #0]
    c210:	4bb4      	ldr	r3, [pc, #720]	; (c4e4 <RouteMessage+0x35c>)
    c212:	7a9b      	ldrb	r3, [r3, #10]
                    (PacketRecords[i].AltSourceAddr.Val == ShortAddress.Val) &&
    c214:	429a      	cmp	r2, r3
    c216:	d10f      	bne.n	c238 <RouteMessage+0xb0>
                  )
                {
                    MiWiPROStatus.bits.COMM_ROUTING_TABLE = ROUTING_TABLE_BROADCAST;
    c218:	4bb3      	ldr	r3, [pc, #716]	; (c4e8 <RouteMessage+0x360>)
    c21a:	781a      	ldrb	r2, [r3, #0]
    c21c:	2170      	movs	r1, #112	; 0x70
    c21e:	438a      	bics	r2, r1
    c220:	1c11      	adds	r1, r2, #0
    c222:	2230      	movs	r2, #48	; 0x30
    c224:	430a      	orrs	r2, r1
    c226:	701a      	strb	r2, [r3, #0]
                    backgroundTaskTick = MiWi_TickGet();
    c228:	4bb0      	ldr	r3, [pc, #704]	; (c4ec <RouteMessage+0x364>)
    c22a:	4798      	blx	r3
    c22c:	0003      	movs	r3, r0
    c22e:	001a      	movs	r2, r3
    c230:	4baf      	ldr	r3, [pc, #700]	; (c4f0 <RouteMessage+0x368>)
    c232:	601a      	str	r2, [r3, #0]
                    return false;
    c234:	2300      	movs	r3, #0
    c236:	e14c      	b.n	c4d2 <RouteMessage+0x34a>
            for(i = 0; i < PACKET_RECORD_SIZE; i++)
    c238:	230f      	movs	r3, #15
    c23a:	18fb      	adds	r3, r7, r3
    c23c:	781a      	ldrb	r2, [r3, #0]
    c23e:	230f      	movs	r3, #15
    c240:	18fb      	adds	r3, r7, r3
    c242:	3201      	adds	r2, #1
    c244:	701a      	strb	r2, [r3, #0]
    c246:	230f      	movs	r3, #15
    c248:	18fb      	adds	r3, r7, r3
    c24a:	781b      	ldrb	r3, [r3, #0]
    c24c:	2b07      	cmp	r3, #7
    c24e:	d9c3      	bls.n	c1d8 <RouteMessage+0x50>
                }
            }
            
            for(i = 0; i < PACKET_RECORD_SIZE; i++)
    c250:	230f      	movs	r3, #15
    c252:	18fb      	adds	r3, r7, r3
    c254:	2200      	movs	r2, #0
    c256:	701a      	strb	r2, [r3, #0]
    c258:	e038      	b.n	c2cc <RouteMessage+0x144>
            {
                if( PacketRecords[i].RxCounter == 0 )
    c25a:	230f      	movs	r3, #15
    c25c:	18fb      	adds	r3, r7, r3
    c25e:	781b      	ldrb	r3, [r3, #0]
    c260:	4a9f      	ldr	r2, [pc, #636]	; (c4e0 <RouteMessage+0x358>)
    c262:	00db      	lsls	r3, r3, #3
    c264:	18d3      	adds	r3, r2, r3
    c266:	3303      	adds	r3, #3
    c268:	781b      	ldrb	r3, [r3, #0]
    c26a:	2b00      	cmp	r3, #0
    c26c:	d127      	bne.n	c2be <RouteMessage+0x136>
                {
                    PacketRecords[i].RxCounter = INDIRECT_MESSAGE_TIMEOUT_CYCLE + 1;
    c26e:	230f      	movs	r3, #15
    c270:	18fb      	adds	r3, r7, r3
    c272:	781b      	ldrb	r3, [r3, #0]
    c274:	4a9a      	ldr	r2, [pc, #616]	; (c4e0 <RouteMessage+0x358>)
    c276:	00db      	lsls	r3, r3, #3
    c278:	18d3      	adds	r3, r2, r3
    c27a:	3303      	adds	r3, #3
    c27c:	2203      	movs	r2, #3
    c27e:	701a      	strb	r2, [r3, #0]
                    PacketRecords[i].MiWiPROSeq = TxBuffer[10];
    c280:	230f      	movs	r3, #15
    c282:	18fb      	adds	r3, r7, r3
    c284:	781b      	ldrb	r3, [r3, #0]
    c286:	4a97      	ldr	r2, [pc, #604]	; (c4e4 <RouteMessage+0x35c>)
    c288:	7a91      	ldrb	r1, [r2, #10]
    c28a:	4a95      	ldr	r2, [pc, #596]	; (c4e0 <RouteMessage+0x358>)
    c28c:	00db      	lsls	r3, r3, #3
    c28e:	18d3      	adds	r3, r2, r3
    c290:	3302      	adds	r3, #2
    c292:	1c0a      	adds	r2, r1, #0
    c294:	701a      	strb	r2, [r3, #0]
                    PacketRecords[i].AltSourceAddr.Val = ShortAddress.Val;
    c296:	230f      	movs	r3, #15
    c298:	18fb      	adds	r3, r7, r3
    c29a:	781a      	ldrb	r2, [r3, #0]
    c29c:	003b      	movs	r3, r7
    c29e:	8819      	ldrh	r1, [r3, #0]
    c2a0:	4b8f      	ldr	r3, [pc, #572]	; (c4e0 <RouteMessage+0x358>)
    c2a2:	00d2      	lsls	r2, r2, #3
    c2a4:	52d1      	strh	r1, [r2, r3]
                    PacketRecords[i].StartTick = MiWi_TickGet();
    c2a6:	230f      	movs	r3, #15
    c2a8:	18fb      	adds	r3, r7, r3
    c2aa:	781b      	ldrb	r3, [r3, #0]
    c2ac:	4a8c      	ldr	r2, [pc, #560]	; (c4e0 <RouteMessage+0x358>)
    c2ae:	00db      	lsls	r3, r3, #3
    c2b0:	18d3      	adds	r3, r2, r3
    c2b2:	1d1c      	adds	r4, r3, #4
    c2b4:	4b8d      	ldr	r3, [pc, #564]	; (c4ec <RouteMessage+0x364>)
    c2b6:	4798      	blx	r3
    c2b8:	0003      	movs	r3, r0
    c2ba:	6023      	str	r3, [r4, #0]
                    break;
    c2bc:	e00b      	b.n	c2d6 <RouteMessage+0x14e>
            for(i = 0; i < PACKET_RECORD_SIZE; i++)
    c2be:	230f      	movs	r3, #15
    c2c0:	18fb      	adds	r3, r7, r3
    c2c2:	781a      	ldrb	r2, [r3, #0]
    c2c4:	230f      	movs	r3, #15
    c2c6:	18fb      	adds	r3, r7, r3
    c2c8:	3201      	adds	r2, #1
    c2ca:	701a      	strb	r2, [r3, #0]
    c2cc:	230f      	movs	r3, #15
    c2ce:	18fb      	adds	r3, r7, r3
    c2d0:	781b      	ldrb	r3, [r3, #0]
    c2d2:	2b07      	cmp	r3, #7
    c2d4:	d9c1      	bls.n	c25a <RouteMessage+0xd2>
                }    
            }        
            
            // first check if it is one of my end device children
            if( parentNode == myShortAddress.v[1] )
    c2d6:	4b87      	ldr	r3, [pc, #540]	; (c4f4 <RouteMessage+0x36c>)
    c2d8:	785b      	ldrb	r3, [r3, #1]
    c2da:	220e      	movs	r2, #14
    c2dc:	18ba      	adds	r2, r7, r2
    c2de:	7812      	ldrb	r2, [r2, #0]
    c2e0:	429a      	cmp	r2, r3
    c2e2:	d13e      	bne.n	c362 <RouteMessage+0x1da>
            {
                // destination is my child
                if( ShortAddress.v[0] > 0x80 )
    c2e4:	003b      	movs	r3, r7
    c2e6:	781b      	ldrb	r3, [r3, #0]
    c2e8:	2b80      	cmp	r3, #128	; 0x80
    c2ea:	d901      	bls.n	c2f0 <RouteMessage+0x168>
                            }

                            return SaveIndirectMessage(false, ConnectionTable[i].Address, false, SecEn);
                        #endif
                    #else
                        return false;
    c2ec:	2300      	movs	r3, #0
    c2ee:	e0f0      	b.n	c4d2 <RouteMessage+0x34a>
                    #endif
                }
                else
                {
                    MTP.flags.Val = 0;
    c2f0:	4b81      	ldr	r3, [pc, #516]	; (c4f8 <RouteMessage+0x370>)
    c2f2:	2200      	movs	r2, #0
    c2f4:	701a      	strb	r2, [r3, #0]
                    MTP.flags.bits.ackReq = 1;
    c2f6:	4b80      	ldr	r3, [pc, #512]	; (c4f8 <RouteMessage+0x370>)
    c2f8:	781a      	ldrb	r2, [r3, #0]
    c2fa:	2120      	movs	r1, #32
    c2fc:	430a      	orrs	r2, r1
    c2fe:	701a      	strb	r2, [r3, #0]
                    MTP.flags.bits.secEn = SecEn;
    c300:	4b7d      	ldr	r3, [pc, #500]	; (c4f8 <RouteMessage+0x370>)
    c302:	1cfa      	adds	r2, r7, #3
    c304:	7812      	ldrb	r2, [r2, #0]
    c306:	2101      	movs	r1, #1
    c308:	400a      	ands	r2, r1
    c30a:	00d0      	lsls	r0, r2, #3
    c30c:	781a      	ldrb	r2, [r3, #0]
    c30e:	2108      	movs	r1, #8
    c310:	438a      	bics	r2, r1
    c312:	1c11      	adds	r1, r2, #0
    c314:	1c02      	adds	r2, r0, #0
    c316:	430a      	orrs	r2, r1
    c318:	701a      	strb	r2, [r3, #0]
                    
                    tempShortAddress.Val = ShortAddress.Val;
    c31a:	003b      	movs	r3, r7
    c31c:	881a      	ldrh	r2, [r3, #0]
    c31e:	4b77      	ldr	r3, [pc, #476]	; (c4fc <RouteMessage+0x374>)
    c320:	801a      	strh	r2, [r3, #0]
                        MTP.altDestAddr = true;
                        MTP.altSrcAddr = true;
                        MTP.DestAddress = tempShortAddress.v;
                        MTP.DestPANID.Val = myPANID.Val;
                    #else
                        if( (i = SearchForShortAddress()) != 0xFF )
    c322:	230f      	movs	r3, #15
    c324:	18fc      	adds	r4, r7, r3
    c326:	4b76      	ldr	r3, [pc, #472]	; (c500 <RouteMessage+0x378>)
    c328:	4798      	blx	r3
    c32a:	0003      	movs	r3, r0
    c32c:	7023      	strb	r3, [r4, #0]
    c32e:	230f      	movs	r3, #15
    c330:	18fb      	adds	r3, r7, r3
    c332:	781b      	ldrb	r3, [r3, #0]
    c334:	2bff      	cmp	r3, #255	; 0xff
    c336:	d012      	beq.n	c35e <RouteMessage+0x1d6>
                        {
                            MTP.DestAddress = ConnectionTable[i].Address;
    c338:	230f      	movs	r3, #15
    c33a:	18fb      	adds	r3, r7, r3
    c33c:	781b      	ldrb	r3, [r3, #0]
    c33e:	011a      	lsls	r2, r3, #4
    c340:	4b70      	ldr	r3, [pc, #448]	; (c504 <RouteMessage+0x37c>)
    c342:	18d3      	adds	r3, r2, r3
    c344:	1d1a      	adds	r2, r3, #4
    c346:	4b6c      	ldr	r3, [pc, #432]	; (c4f8 <RouteMessage+0x370>)
    c348:	605a      	str	r2, [r3, #4]
                            return false;
                        }
                    #endif
					//printf("TX9....\n\r");
					
                    return MiMAC_SendPacket(MTP, TxBuffer, TxData);
    c34a:	4b6f      	ldr	r3, [pc, #444]	; (c508 <RouteMessage+0x380>)
    c34c:	781b      	ldrb	r3, [r3, #0]
    c34e:	4a65      	ldr	r2, [pc, #404]	; (c4e4 <RouteMessage+0x35c>)
    c350:	4969      	ldr	r1, [pc, #420]	; (c4f8 <RouteMessage+0x370>)
    c352:	6808      	ldr	r0, [r1, #0]
    c354:	6849      	ldr	r1, [r1, #4]
    c356:	4c6d      	ldr	r4, [pc, #436]	; (c50c <RouteMessage+0x384>)
    c358:	47a0      	blx	r4
    c35a:	0003      	movs	r3, r0
    c35c:	e0b9      	b.n	c4d2 <RouteMessage+0x34a>
                            return false;
    c35e:	2300      	movs	r3, #0
    c360:	e0b7      	b.n	c4d2 <RouteMessage+0x34a>
                }
            }
                    
            // now routing
            parentNode = FindRoutingPath(ShortAddress.v[1]);
    c362:	003b      	movs	r3, r7
    c364:	785b      	ldrb	r3, [r3, #1]
    c366:	220e      	movs	r2, #14
    c368:	18bc      	adds	r4, r7, r2
    c36a:	0018      	movs	r0, r3
    c36c:	4b68      	ldr	r3, [pc, #416]	; (c510 <RouteMessage+0x388>)
    c36e:	4798      	blx	r3
    c370:	0003      	movs	r3, r0
    c372:	7023      	strb	r3, [r4, #0]
            if( parentNode == 0xFF )
    c374:	230e      	movs	r3, #14
    c376:	18fb      	adds	r3, r7, r3
    c378:	781b      	ldrb	r3, [r3, #0]
    c37a:	2bff      	cmp	r3, #255	; 0xff
    c37c:	d101      	bne.n	c382 <RouteMessage+0x1fa>
            {
                return false;
    c37e:	2300      	movs	r3, #0
    c380:	e0a7      	b.n	c4d2 <RouteMessage+0x34a>
            }
            
            if( RouterFailures[parentNode] >= MAX_ROUTING_FAILURE )
    c382:	230e      	movs	r3, #14
    c384:	18fb      	adds	r3, r7, r3
    c386:	781b      	ldrb	r3, [r3, #0]
    c388:	4a62      	ldr	r2, [pc, #392]	; (c514 <RouteMessage+0x38c>)
    c38a:	5cd3      	ldrb	r3, [r2, r3]
    c38c:	2b02      	cmp	r3, #2
    c38e:	d942      	bls.n	c416 <RouteMessage+0x28e>
            {
                uint8_t i;

                RouterFailures[parentNode] = 0;
    c390:	230e      	movs	r3, #14
    c392:	18fb      	adds	r3, r7, r3
    c394:	781b      	ldrb	r3, [r3, #0]
    c396:	4a5f      	ldr	r2, [pc, #380]	; (c514 <RouteMessage+0x38c>)
    c398:	2100      	movs	r1, #0
    c39a:	54d1      	strb	r1, [r2, r3]
                RoutingTable[parentNode/8] &= (0x01 << (parentNode % 8) ) ^ 0xFF;
    c39c:	230e      	movs	r3, #14
    c39e:	18fb      	adds	r3, r7, r3
    c3a0:	781b      	ldrb	r3, [r3, #0]
    c3a2:	08db      	lsrs	r3, r3, #3
    c3a4:	b2db      	uxtb	r3, r3
    c3a6:	0018      	movs	r0, r3
    c3a8:	001a      	movs	r2, r3
    c3aa:	4b5b      	ldr	r3, [pc, #364]	; (c518 <RouteMessage+0x390>)
    c3ac:	5c9b      	ldrb	r3, [r3, r2]
    c3ae:	b25b      	sxtb	r3, r3
    c3b0:	220e      	movs	r2, #14
    c3b2:	18ba      	adds	r2, r7, r2
    c3b4:	7812      	ldrb	r2, [r2, #0]
    c3b6:	2107      	movs	r1, #7
    c3b8:	400a      	ands	r2, r1
    c3ba:	2101      	movs	r1, #1
    c3bc:	4091      	lsls	r1, r2
    c3be:	000a      	movs	r2, r1
    c3c0:	b252      	sxtb	r2, r2
    c3c2:	43d2      	mvns	r2, r2
    c3c4:	b252      	sxtb	r2, r2
    c3c6:	4013      	ands	r3, r2
    c3c8:	b25b      	sxtb	r3, r3
    c3ca:	b2da      	uxtb	r2, r3
    c3cc:	4b52      	ldr	r3, [pc, #328]	; (c518 <RouteMessage+0x390>)
    c3ce:	541a      	strb	r2, [r3, r0]
                for(i = 0; i < NUM_COORDINATOR/8; i++)
    c3d0:	230d      	movs	r3, #13
    c3d2:	18fb      	adds	r3, r7, r3
    c3d4:	2200      	movs	r2, #0
    c3d6:	701a      	strb	r2, [r3, #0]
    c3d8:	46c0      	nop			; (mov r8, r8)
                    MiWiPROStateMachine.bits.memberOfNetwork = 0;
                    myParent = 0xFF;
                }  
                */
                #if defined(ENABLE_NETWORK_FREEZER)
                    nvmPutRoutingTable(RoutingTable);
    c3da:	4b50      	ldr	r3, [pc, #320]	; (c51c <RouteMessage+0x394>)
    c3dc:	8819      	ldrh	r1, [r3, #0]
    c3de:	4b4e      	ldr	r3, [pc, #312]	; (c518 <RouteMessage+0x390>)
    c3e0:	2200      	movs	r2, #0
    c3e2:	0018      	movs	r0, r3
    c3e4:	4b4e      	ldr	r3, [pc, #312]	; (c520 <RouteMessage+0x398>)
    c3e6:	4798      	blx	r3
                    nvmPutNeighborRoutingTable(NeighborRoutingTable);
    c3e8:	4b4e      	ldr	r3, [pc, #312]	; (c524 <RouteMessage+0x39c>)
    c3ea:	8819      	ldrh	r1, [r3, #0]
    c3ec:	4b4e      	ldr	r3, [pc, #312]	; (c528 <RouteMessage+0x3a0>)
    c3ee:	2200      	movs	r2, #0
    c3f0:	0018      	movs	r0, r3
    c3f2:	4b4b      	ldr	r3, [pc, #300]	; (c520 <RouteMessage+0x398>)
    c3f4:	4798      	blx	r3
                #endif
                
                MiWiPROStatus.bits.COMM_ROUTING_TABLE = ROUTING_TABLE_BROADCAST;
    c3f6:	4b3c      	ldr	r3, [pc, #240]	; (c4e8 <RouteMessage+0x360>)
    c3f8:	781a      	ldrb	r2, [r3, #0]
    c3fa:	2170      	movs	r1, #112	; 0x70
    c3fc:	438a      	bics	r2, r1
    c3fe:	1c11      	adds	r1, r2, #0
    c400:	2230      	movs	r2, #48	; 0x30
    c402:	430a      	orrs	r2, r1
    c404:	701a      	strb	r2, [r3, #0]
                backgroundTaskTick = MiWi_TickGet();
    c406:	4b39      	ldr	r3, [pc, #228]	; (c4ec <RouteMessage+0x364>)
    c408:	4798      	blx	r3
    c40a:	0003      	movs	r3, r0
    c40c:	001a      	movs	r2, r3
    c40e:	4b38      	ldr	r3, [pc, #224]	; (c4f0 <RouteMessage+0x368>)
    c410:	601a      	str	r2, [r3, #0]
                return false;
    c412:	2300      	movs	r3, #0
    c414:	e05d      	b.n	c4d2 <RouteMessage+0x34a>
            }

            MTP.flags.Val = 0;
    c416:	4b38      	ldr	r3, [pc, #224]	; (c4f8 <RouteMessage+0x370>)
    c418:	2200      	movs	r2, #0
    c41a:	701a      	strb	r2, [r3, #0]
            MTP.flags.bits.ackReq = 1;
    c41c:	4b36      	ldr	r3, [pc, #216]	; (c4f8 <RouteMessage+0x370>)
    c41e:	781a      	ldrb	r2, [r3, #0]
    c420:	2120      	movs	r1, #32
    c422:	430a      	orrs	r2, r1
    c424:	701a      	strb	r2, [r3, #0]
            MTP.flags.bits.secEn = SecEn;
    c426:	4b34      	ldr	r3, [pc, #208]	; (c4f8 <RouteMessage+0x370>)
    c428:	1cfa      	adds	r2, r7, #3
    c42a:	7812      	ldrb	r2, [r2, #0]
    c42c:	2101      	movs	r1, #1
    c42e:	400a      	ands	r2, r1
    c430:	00d0      	lsls	r0, r2, #3
    c432:	781a      	ldrb	r2, [r3, #0]
    c434:	2108      	movs	r1, #8
    c436:	438a      	bics	r2, r1
    c438:	1c11      	adds	r1, r2, #0
    c43a:	1c02      	adds	r2, r0, #0
    c43c:	430a      	orrs	r2, r1
    c43e:	701a      	strb	r2, [r3, #0]

            tempShortAddress.v[0] = 0;
    c440:	4b2e      	ldr	r3, [pc, #184]	; (c4fc <RouteMessage+0x374>)
    c442:	2200      	movs	r2, #0
    c444:	701a      	strb	r2, [r3, #0]
            tempShortAddress.v[1] = parentNode;
    c446:	4b2d      	ldr	r3, [pc, #180]	; (c4fc <RouteMessage+0x374>)
    c448:	220e      	movs	r2, #14
    c44a:	18ba      	adds	r2, r7, r2
    c44c:	7812      	ldrb	r2, [r2, #0]
    c44e:	705a      	strb	r2, [r3, #1]
                MTP.altDestAddr = true;
                MTP.altSrcAddr = true;
                MTP.DestAddress = tempShortAddress.v;
                MTP.DestPANID.Val = myPANID.Val;
            #else
                if( (i = SearchForShortAddress()) != 0xFF )
    c450:	230f      	movs	r3, #15
    c452:	18fc      	adds	r4, r7, r3
    c454:	4b2a      	ldr	r3, [pc, #168]	; (c500 <RouteMessage+0x378>)
    c456:	4798      	blx	r3
    c458:	0003      	movs	r3, r0
    c45a:	7023      	strb	r3, [r4, #0]
    c45c:	230f      	movs	r3, #15
    c45e:	18fb      	adds	r3, r7, r3
    c460:	781b      	ldrb	r3, [r3, #0]
    c462:	2bff      	cmp	r3, #255	; 0xff
    c464:	d018      	beq.n	c498 <RouteMessage+0x310>
                {
                    MTP.DestAddress = ConnectionTable[i].Address;
    c466:	230f      	movs	r3, #15
    c468:	18fb      	adds	r3, r7, r3
    c46a:	781b      	ldrb	r3, [r3, #0]
    c46c:	011a      	lsls	r2, r3, #4
    c46e:	4b25      	ldr	r3, [pc, #148]	; (c504 <RouteMessage+0x37c>)
    c470:	18d3      	adds	r3, r2, r3
    c472:	1d1a      	adds	r2, r3, #4
    c474:	4b20      	ldr	r3, [pc, #128]	; (c4f8 <RouteMessage+0x370>)
    c476:	605a      	str	r2, [r3, #4]
                    RouterFailures[parentNode]++;
                    return false;
                }
            #endif
			
            if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == false )
    c478:	4b23      	ldr	r3, [pc, #140]	; (c508 <RouteMessage+0x380>)
    c47a:	781b      	ldrb	r3, [r3, #0]
    c47c:	4a19      	ldr	r2, [pc, #100]	; (c4e4 <RouteMessage+0x35c>)
    c47e:	491e      	ldr	r1, [pc, #120]	; (c4f8 <RouteMessage+0x370>)
    c480:	6808      	ldr	r0, [r1, #0]
    c482:	6849      	ldr	r1, [r1, #4]
    c484:	4c21      	ldr	r4, [pc, #132]	; (c50c <RouteMessage+0x384>)
    c486:	47a0      	blx	r4
    c488:	0003      	movs	r3, r0
    c48a:	001a      	movs	r2, r3
    c48c:	2301      	movs	r3, #1
    c48e:	4053      	eors	r3, r2
    c490:	b2db      	uxtb	r3, r3
    c492:	2b00      	cmp	r3, #0
    c494:	d016      	beq.n	c4c4 <RouteMessage+0x33c>
    c496:	e00a      	b.n	c4ae <RouteMessage+0x326>
                    RouterFailures[parentNode]++;
    c498:	230e      	movs	r3, #14
    c49a:	18fb      	adds	r3, r7, r3
    c49c:	781b      	ldrb	r3, [r3, #0]
    c49e:	4a1d      	ldr	r2, [pc, #116]	; (c514 <RouteMessage+0x38c>)
    c4a0:	5cd2      	ldrb	r2, [r2, r3]
    c4a2:	3201      	adds	r2, #1
    c4a4:	b2d1      	uxtb	r1, r2
    c4a6:	4a1b      	ldr	r2, [pc, #108]	; (c514 <RouteMessage+0x38c>)
    c4a8:	54d1      	strb	r1, [r2, r3]
                    return false;
    c4aa:	2300      	movs	r3, #0
    c4ac:	e011      	b.n	c4d2 <RouteMessage+0x34a>
            {
                RouterFailures[parentNode]++;
    c4ae:	230e      	movs	r3, #14
    c4b0:	18fb      	adds	r3, r7, r3
    c4b2:	781b      	ldrb	r3, [r3, #0]
    c4b4:	4a17      	ldr	r2, [pc, #92]	; (c514 <RouteMessage+0x38c>)
    c4b6:	5cd2      	ldrb	r2, [r2, r3]
    c4b8:	3201      	adds	r2, #1
    c4ba:	b2d1      	uxtb	r1, r2
    c4bc:	4a15      	ldr	r2, [pc, #84]	; (c514 <RouteMessage+0x38c>)
    c4be:	54d1      	strb	r1, [r2, r3]
                return false;
    c4c0:	2300      	movs	r3, #0
    c4c2:	e006      	b.n	c4d2 <RouteMessage+0x34a>
            }

            RouterFailures[parentNode] = 0;
    c4c4:	230e      	movs	r3, #14
    c4c6:	18fb      	adds	r3, r7, r3
    c4c8:	781b      	ldrb	r3, [r3, #0]
    c4ca:	4a12      	ldr	r2, [pc, #72]	; (c514 <RouteMessage+0x38c>)
    c4cc:	2100      	movs	r1, #0
    c4ce:	54d1      	strb	r1, [r2, r3]
            return true;
    c4d0:	2301      	movs	r3, #1

        }
    c4d2:	0018      	movs	r0, r3
    c4d4:	46bd      	mov	sp, r7
    c4d6:	b005      	add	sp, #20
    c4d8:	bd90      	pop	{r4, r7, pc}
    c4da:	46c0      	nop			; (mov r8, r8)
    c4dc:	20001518 	.word	0x20001518
    c4e0:	20001544 	.word	0x20001544
    c4e4:	200012e4 	.word	0x200012e4
    c4e8:	200012c4 	.word	0x200012c4
    c4ec:	0000ebad 	.word	0x0000ebad
    c4f0:	2000113c 	.word	0x2000113c
    c4f4:	20001140 	.word	0x20001140
    c4f8:	200012b8 	.word	0x200012b8
    c4fc:	200012e0 	.word	0x200012e0
    c500:	0000cb71 	.word	0x0000cb71
    c504:	20001150 	.word	0x20001150
    c508:	200012dc 	.word	0x200012dc
    c50c:	0000fd09 	.word	0x0000fd09
    c510:	0000bba5 	.word	0x0000bba5
    c514:	20001280 	.word	0x20001280
    c518:	20001250 	.word	0x20001250
    c51c:	20001594 	.word	0x20001594
    c520:	0000e9c1 	.word	0x0000e9c1
    c524:	20001584 	.word	0x20001584
    c528:	20001584 	.word	0x20001584

0000c52c <SendMACPacket>:
    #if defined(IEEE_802_15_4)
        bool SendMACPacket(uint8_t *PANID, uint8_t *Address, uint8_t PacketType, uint8_t ModeMask)
    #else
        bool SendMACPacket(uint8_t *Address, uint8_t PacketType)
    #endif
    {   
    c52c:	b590      	push	{r4, r7, lr}
    c52e:	b083      	sub	sp, #12
    c530:	af00      	add	r7, sp, #0
    c532:	6078      	str	r0, [r7, #4]
    c534:	000a      	movs	r2, r1
    c536:	1cfb      	adds	r3, r7, #3
    c538:	701a      	strb	r2, [r3, #0]
        MTP.flags.Val = 0;
    c53a:	4b22      	ldr	r3, [pc, #136]	; (c5c4 <SendMACPacket+0x98>)
    c53c:	2200      	movs	r2, #0
    c53e:	701a      	strb	r2, [r3, #0]
        
        MTP.flags.bits.packetType = PacketType;
    c540:	1cfb      	adds	r3, r7, #3
    c542:	781b      	ldrb	r3, [r3, #0]
    c544:	2203      	movs	r2, #3
    c546:	4013      	ands	r3, r2
    c548:	b2da      	uxtb	r2, r3
    c54a:	4b1e      	ldr	r3, [pc, #120]	; (c5c4 <SendMACPacket+0x98>)
    c54c:	2103      	movs	r1, #3
    c54e:	400a      	ands	r2, r1
    c550:	0010      	movs	r0, r2
    c552:	781a      	ldrb	r2, [r3, #0]
    c554:	2103      	movs	r1, #3
    c556:	438a      	bics	r2, r1
    c558:	1c11      	adds	r1, r2, #0
    c55a:	1c02      	adds	r2, r0, #0
    c55c:	430a      	orrs	r2, r1
    c55e:	701a      	strb	r2, [r3, #0]
        if( Address == NULL )
    c560:	687b      	ldr	r3, [r7, #4]
    c562:	2b00      	cmp	r3, #0
    c564:	d104      	bne.n	c570 <SendMACPacket+0x44>
        {
            MTP.flags.bits.broadcast = 1;
    c566:	4b17      	ldr	r3, [pc, #92]	; (c5c4 <SendMACPacket+0x98>)
    c568:	781a      	ldrb	r2, [r3, #0]
    c56a:	2104      	movs	r1, #4
    c56c:	430a      	orrs	r2, r1
    c56e:	701a      	strb	r2, [r3, #0]
        }
        MTP.flags.bits.ackReq = (MTP.flags.bits.broadcast) ? 0:1;
    c570:	4b14      	ldr	r3, [pc, #80]	; (c5c4 <SendMACPacket+0x98>)
    c572:	781b      	ldrb	r3, [r3, #0]
    c574:	2204      	movs	r2, #4
    c576:	4013      	ands	r3, r2
    c578:	b2db      	uxtb	r3, r3
    c57a:	425a      	negs	r2, r3
    c57c:	4153      	adcs	r3, r2
    c57e:	b2da      	uxtb	r2, r3
    c580:	4b10      	ldr	r3, [pc, #64]	; (c5c4 <SendMACPacket+0x98>)
    c582:	2101      	movs	r1, #1
    c584:	400a      	ands	r2, r1
    c586:	0150      	lsls	r0, r2, #5
    c588:	781a      	ldrb	r2, [r3, #0]
    c58a:	2120      	movs	r1, #32
    c58c:	438a      	bics	r2, r1
    c58e:	1c11      	adds	r1, r2, #0
    c590:	1c02      	adds	r2, r0, #0
    c592:	430a      	orrs	r2, r1
    c594:	701a      	strb	r2, [r3, #0]
        
		MTP.flags.bits.sourcePrsnt = 1;
    c596:	4b0b      	ldr	r3, [pc, #44]	; (c5c4 <SendMACPacket+0x98>)
    c598:	781a      	ldrb	r2, [r3, #0]
    c59a:	2180      	movs	r1, #128	; 0x80
    c59c:	4249      	negs	r1, r1
    c59e:	430a      	orrs	r2, r1
    c5a0:	701a      	strb	r2, [r3, #0]
        
        MTP.DestAddress = Address;
    c5a2:	4b08      	ldr	r3, [pc, #32]	; (c5c4 <SendMACPacket+0x98>)
    c5a4:	687a      	ldr	r2, [r7, #4]
    c5a6:	605a      	str	r2, [r3, #4]
            MTP.DestPANID.v[1] = PANID[1];
        #endif
		
		//printf("Dst PID: %.2x %.2x\n\r",PANID[0],PANID[1]);
        //printf("TX10....\n\r");
        return MiMAC_SendPacket(MTP, TxBuffer, TxData);
    c5a8:	4b07      	ldr	r3, [pc, #28]	; (c5c8 <SendMACPacket+0x9c>)
    c5aa:	781b      	ldrb	r3, [r3, #0]
    c5ac:	4a07      	ldr	r2, [pc, #28]	; (c5cc <SendMACPacket+0xa0>)
    c5ae:	4905      	ldr	r1, [pc, #20]	; (c5c4 <SendMACPacket+0x98>)
    c5b0:	6808      	ldr	r0, [r1, #0]
    c5b2:	6849      	ldr	r1, [r1, #4]
    c5b4:	4c06      	ldr	r4, [pc, #24]	; (c5d0 <SendMACPacket+0xa4>)
    c5b6:	47a0      	blx	r4
    c5b8:	0003      	movs	r3, r0
    }
    c5ba:	0018      	movs	r0, r3
    c5bc:	46bd      	mov	sp, r7
    c5be:	b003      	add	sp, #12
    c5c0:	bd90      	pop	{r4, r7, pc}
    c5c2:	46c0      	nop			; (mov r8, r8)
    c5c4:	200012b8 	.word	0x200012b8
    c5c8:	200012dc 	.word	0x200012dc
    c5cc:	200012e4 	.word	0x200012e4
    c5d0:	0000fd09 	.word	0x0000fd09

0000c5d4 <findNextNetworkEntry>:
     * Overview:        This function is used to determine the next available
     *                  slot in the network table.  This function can be used
     *                  to manually create entries in the networkTable
     ********************************************************************/
    uint8_t findNextNetworkEntry(void)
    {
    c5d4:	b580      	push	{r7, lr}
    c5d6:	b082      	sub	sp, #8
    c5d8:	af00      	add	r7, sp, #0
        uint8_t i;
        
        for(i=0;i<CONNECTION_SIZE;i++)
    c5da:	1dfb      	adds	r3, r7, #7
    c5dc:	2200      	movs	r2, #0
    c5de:	701a      	strb	r2, [r3, #0]
    c5e0:	e014      	b.n	c60c <findNextNetworkEntry+0x38>
        {
            if(ConnectionTable[i].status.bits.isValid == 0)
    c5e2:	1dfb      	adds	r3, r7, #7
    c5e4:	781b      	ldrb	r3, [r3, #0]
    c5e6:	4a0e      	ldr	r2, [pc, #56]	; (c620 <findNextNetworkEntry+0x4c>)
    c5e8:	2108      	movs	r1, #8
    c5ea:	011b      	lsls	r3, r3, #4
    c5ec:	18d3      	adds	r3, r2, r3
    c5ee:	185b      	adds	r3, r3, r1
    c5f0:	791b      	ldrb	r3, [r3, #4]
    c5f2:	061b      	lsls	r3, r3, #24
    c5f4:	0fdb      	lsrs	r3, r3, #31
    c5f6:	b2db      	uxtb	r3, r3
    c5f8:	2b00      	cmp	r3, #0
    c5fa:	d102      	bne.n	c602 <findNextNetworkEntry+0x2e>
            {
                return i;
    c5fc:	1dfb      	adds	r3, r7, #7
    c5fe:	781b      	ldrb	r3, [r3, #0]
    c600:	e009      	b.n	c616 <findNextNetworkEntry+0x42>
        for(i=0;i<CONNECTION_SIZE;i++)
    c602:	1dfb      	adds	r3, r7, #7
    c604:	781a      	ldrb	r2, [r3, #0]
    c606:	1dfb      	adds	r3, r7, #7
    c608:	3201      	adds	r2, #1
    c60a:	701a      	strb	r2, [r3, #0]
    c60c:	1dfb      	adds	r3, r7, #7
    c60e:	781b      	ldrb	r3, [r3, #0]
    c610:	2b0f      	cmp	r3, #15
    c612:	d9e6      	bls.n	c5e2 <findNextNetworkEntry+0xe>
            }
        }
        return 0xFF;
    c614:	23ff      	movs	r3, #255	; 0xff
    }
    c616:	0018      	movs	r0, r3
    c618:	46bd      	mov	sp, r7
    c61a:	b002      	add	sp, #8
    c61c:	bd80      	pop	{r7, pc}
    c61e:	46c0      	nop			; (mov r8, r8)
    c620:	20001150 	.word	0x20001150

0000c624 <DumpConnection>:
     *                  the console.  This is a debugging\helper function only
     *                  and is not used by the stack
     ********************************************************************/
#if defined(ENABLE_DUMP)
    void DumpConnection(uint8_t index)
    {
    c624:	b580      	push	{r7, lr}
    c626:	b084      	sub	sp, #16
    c628:	af00      	add	r7, sp, #0
    c62a:	0002      	movs	r2, r0
    c62c:	1dfb      	adds	r3, r7, #7
    c62e:	701a      	strb	r2, [r3, #0]
        uint8_t i, j;
        
        if( index == 0xFF )
    c630:	1dfb      	adds	r3, r7, #7
    c632:	781b      	ldrb	r3, [r3, #0]
    c634:	2bff      	cmp	r3, #255	; 0xff
    c636:	d155      	bne.n	c6e4 <DumpConnection+0xc0>
        {
            printf("\r\nAddress: 0x");
    c638:	4bd5      	ldr	r3, [pc, #852]	; (c990 <DumpConnection+0x36c>)
    c63a:	0018      	movs	r0, r3
    c63c:	4bd5      	ldr	r3, [pc, #852]	; (c994 <DumpConnection+0x370>)
    c63e:	4798      	blx	r3
            for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    c640:	230f      	movs	r3, #15
    c642:	18fb      	adds	r3, r7, r3
    c644:	2200      	movs	r2, #0
    c646:	701a      	strb	r2, [r3, #0]
    c648:	e013      	b.n	c672 <DumpConnection+0x4e>
            {
                printf("%.2x",myLongAddress[MY_ADDRESS_LENGTH-1-i]);
    c64a:	230f      	movs	r3, #15
    c64c:	18fb      	adds	r3, r7, r3
    c64e:	781b      	ldrb	r3, [r3, #0]
    c650:	2207      	movs	r2, #7
    c652:	1ad3      	subs	r3, r2, r3
    c654:	4ad0      	ldr	r2, [pc, #832]	; (c998 <DumpConnection+0x374>)
    c656:	5cd3      	ldrb	r3, [r2, r3]
    c658:	001a      	movs	r2, r3
    c65a:	4bd0      	ldr	r3, [pc, #832]	; (c99c <DumpConnection+0x378>)
    c65c:	0011      	movs	r1, r2
    c65e:	0018      	movs	r0, r3
    c660:	4bcc      	ldr	r3, [pc, #816]	; (c994 <DumpConnection+0x370>)
    c662:	4798      	blx	r3
            for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    c664:	230f      	movs	r3, #15
    c666:	18fb      	adds	r3, r7, r3
    c668:	781a      	ldrb	r2, [r3, #0]
    c66a:	230f      	movs	r3, #15
    c66c:	18fb      	adds	r3, r7, r3
    c66e:	3201      	adds	r2, #1
    c670:	701a      	strb	r2, [r3, #0]
    c672:	230f      	movs	r3, #15
    c674:	18fb      	adds	r3, r7, r3
    c676:	781b      	ldrb	r3, [r3, #0]
    c678:	2b07      	cmp	r3, #7
    c67a:	d9e6      	bls.n	c64a <DumpConnection+0x26>
            }
            printf("  Short Addr: ");
    c67c:	4bc8      	ldr	r3, [pc, #800]	; (c9a0 <DumpConnection+0x37c>)
    c67e:	0018      	movs	r0, r3
    c680:	4bc4      	ldr	r3, [pc, #784]	; (c994 <DumpConnection+0x370>)
    c682:	4798      	blx	r3
            printf("%.2x",myShortAddress.v[1]);
    c684:	4bc7      	ldr	r3, [pc, #796]	; (c9a4 <DumpConnection+0x380>)
    c686:	785b      	ldrb	r3, [r3, #1]
    c688:	001a      	movs	r2, r3
    c68a:	4bc4      	ldr	r3, [pc, #784]	; (c99c <DumpConnection+0x378>)
    c68c:	0011      	movs	r1, r2
    c68e:	0018      	movs	r0, r3
    c690:	4bc0      	ldr	r3, [pc, #768]	; (c994 <DumpConnection+0x370>)
    c692:	4798      	blx	r3
            printf("%.2x",myShortAddress.v[0]);
    c694:	4bc3      	ldr	r3, [pc, #780]	; (c9a4 <DumpConnection+0x380>)
    c696:	781b      	ldrb	r3, [r3, #0]
    c698:	001a      	movs	r2, r3
    c69a:	4bc0      	ldr	r3, [pc, #768]	; (c99c <DumpConnection+0x378>)
    c69c:	0011      	movs	r1, r2
    c69e:	0018      	movs	r0, r3
    c6a0:	4bbc      	ldr	r3, [pc, #752]	; (c994 <DumpConnection+0x370>)
    c6a2:	4798      	blx	r3
            printf("  PANID: ");
    c6a4:	4bc0      	ldr	r3, [pc, #768]	; (c9a8 <DumpConnection+0x384>)
    c6a6:	0018      	movs	r0, r3
    c6a8:	4bba      	ldr	r3, [pc, #744]	; (c994 <DumpConnection+0x370>)
    c6aa:	4798      	blx	r3
            printf("%.2x",myPANID.v[1]);
    c6ac:	4bbf      	ldr	r3, [pc, #764]	; (c9ac <DumpConnection+0x388>)
    c6ae:	785b      	ldrb	r3, [r3, #1]
    c6b0:	001a      	movs	r2, r3
    c6b2:	4bba      	ldr	r3, [pc, #744]	; (c99c <DumpConnection+0x378>)
    c6b4:	0011      	movs	r1, r2
    c6b6:	0018      	movs	r0, r3
    c6b8:	4bb6      	ldr	r3, [pc, #728]	; (c994 <DumpConnection+0x370>)
    c6ba:	4798      	blx	r3
            printf("%.2x",myPANID.v[0]);
    c6bc:	4bbb      	ldr	r3, [pc, #748]	; (c9ac <DumpConnection+0x388>)
    c6be:	781b      	ldrb	r3, [r3, #0]
    c6c0:	001a      	movs	r2, r3
    c6c2:	4bb6      	ldr	r3, [pc, #728]	; (c99c <DumpConnection+0x378>)
    c6c4:	0011      	movs	r1, r2
    c6c6:	0018      	movs	r0, r3
    c6c8:	4bb2      	ldr	r3, [pc, #712]	; (c994 <DumpConnection+0x370>)
    c6ca:	4798      	blx	r3
            printf("  Channel: ");
    c6cc:	4bb8      	ldr	r3, [pc, #736]	; (c9b0 <DumpConnection+0x38c>)
    c6ce:	0018      	movs	r0, r3
    c6d0:	4bb0      	ldr	r3, [pc, #704]	; (c994 <DumpConnection+0x370>)
    c6d2:	4798      	blx	r3
            printf("%d",currentChannel);
    c6d4:	4bb7      	ldr	r3, [pc, #732]	; (c9b4 <DumpConnection+0x390>)
    c6d6:	781b      	ldrb	r3, [r3, #0]
    c6d8:	001a      	movs	r2, r3
    c6da:	4bb7      	ldr	r3, [pc, #732]	; (c9b8 <DumpConnection+0x394>)
    c6dc:	0011      	movs	r1, r2
    c6de:	0018      	movs	r0, r3
    c6e0:	4bac      	ldr	r3, [pc, #688]	; (c994 <DumpConnection+0x370>)
    c6e2:	4798      	blx	r3
        }    
        
       //printf("\r\nAvailable nodes\r\nHandle RX DC PANID ADDR LONG_ADDR        PEER_INFO\r\n");
	   printf("\r\nAvailable nodes\r\nIndex   RX  DC   PANID   Short_ADDR   PEER_INFO\r\n");
    c6e4:	4bb5      	ldr	r3, [pc, #724]	; (c9bc <DumpConnection+0x398>)
    c6e6:	0018      	movs	r0, r3
    c6e8:	4bb5      	ldr	r3, [pc, #724]	; (c9c0 <DumpConnection+0x39c>)
    c6ea:	4798      	blx	r3
        if( index == 0xFF )
    c6ec:	1dfb      	adds	r3, r7, #7
    c6ee:	781b      	ldrb	r3, [r3, #0]
    c6f0:	2bff      	cmp	r3, #255	; 0xff
    c6f2:	d000      	beq.n	c6f6 <DumpConnection+0xd2>
    c6f4:	e10e      	b.n	c914 <DumpConnection+0x2f0>
        {	
            for(i=0;i<CONNECTION_SIZE;i++)
    c6f6:	230f      	movs	r3, #15
    c6f8:	18fb      	adds	r3, r7, r3
    c6fa:	2200      	movs	r2, #0
    c6fc:	701a      	strb	r2, [r3, #0]
    c6fe:	e102      	b.n	c906 <DumpConnection+0x2e2>
            {	
                if(ConnectionTable[i].status.bits.isValid)
    c700:	230f      	movs	r3, #15
    c702:	18fb      	adds	r3, r7, r3
    c704:	781b      	ldrb	r3, [r3, #0]
    c706:	4aaf      	ldr	r2, [pc, #700]	; (c9c4 <DumpConnection+0x3a0>)
    c708:	2108      	movs	r1, #8
    c70a:	011b      	lsls	r3, r3, #4
    c70c:	18d3      	adds	r3, r2, r3
    c70e:	185b      	adds	r3, r3, r1
    c710:	791b      	ldrb	r3, [r3, #4]
    c712:	061b      	lsls	r3, r3, #24
    c714:	0fdb      	lsrs	r3, r3, #31
    c716:	b2db      	uxtb	r3, r3
    c718:	2b00      	cmp	r3, #0
    c71a:	d100      	bne.n	c71e <DumpConnection+0xfa>
    c71c:	e0ec      	b.n	c8f8 <DumpConnection+0x2d4>
                {
					printf("  %d     ",i);
    c71e:	230f      	movs	r3, #15
    c720:	18fb      	adds	r3, r7, r3
    c722:	781a      	ldrb	r2, [r3, #0]
    c724:	4ba8      	ldr	r3, [pc, #672]	; (c9c8 <DumpConnection+0x3a4>)
    c726:	0011      	movs	r1, r2
    c728:	0018      	movs	r0, r3
    c72a:	4b9a      	ldr	r3, [pc, #616]	; (c994 <DumpConnection+0x370>)
    c72c:	4798      	blx	r3
                    
                    if(ConnectionTable[i].status.bits.RXOnWhenIdle == 1)
    c72e:	230f      	movs	r3, #15
    c730:	18fb      	adds	r3, r7, r3
    c732:	781b      	ldrb	r3, [r3, #0]
    c734:	4aa3      	ldr	r2, [pc, #652]	; (c9c4 <DumpConnection+0x3a0>)
    c736:	2108      	movs	r1, #8
    c738:	011b      	lsls	r3, r3, #4
    c73a:	18d3      	adds	r3, r2, r3
    c73c:	185b      	adds	r3, r3, r1
    c73e:	791b      	ldrb	r3, [r3, #4]
    c740:	07db      	lsls	r3, r3, #31
    c742:	0fdb      	lsrs	r3, r3, #31
    c744:	b2db      	uxtb	r3, r3
    c746:	2b01      	cmp	r3, #1
    c748:	d103      	bne.n	c752 <DumpConnection+0x12e>
                    {
                        printf("Y");
    c74a:	2059      	movs	r0, #89	; 0x59
    c74c:	4b9f      	ldr	r3, [pc, #636]	; (c9cc <DumpConnection+0x3a8>)
    c74e:	4798      	blx	r3
    c750:	e002      	b.n	c758 <DumpConnection+0x134>
                    }
                    else
                    {
                        printf("N");
    c752:	204e      	movs	r0, #78	; 0x4e
    c754:	4b9d      	ldr	r3, [pc, #628]	; (c9cc <DumpConnection+0x3a8>)
    c756:	4798      	blx	r3
                    }
                    printf("   ");
    c758:	4b9d      	ldr	r3, [pc, #628]	; (c9d0 <DumpConnection+0x3ac>)
    c75a:	0018      	movs	r0, r3
    c75c:	4b8d      	ldr	r3, [pc, #564]	; (c994 <DumpConnection+0x370>)
    c75e:	4798      	blx	r3
                    
                    if(ConnectionTable[i].status.bits.directConnection == 1)
    c760:	230f      	movs	r3, #15
    c762:	18fb      	adds	r3, r7, r3
    c764:	781b      	ldrb	r3, [r3, #0]
    c766:	4a97      	ldr	r2, [pc, #604]	; (c9c4 <DumpConnection+0x3a0>)
    c768:	2108      	movs	r1, #8
    c76a:	011b      	lsls	r3, r3, #4
    c76c:	18d3      	adds	r3, r2, r3
    c76e:	185b      	adds	r3, r3, r1
    c770:	791b      	ldrb	r3, [r3, #4]
    c772:	079b      	lsls	r3, r3, #30
    c774:	0fdb      	lsrs	r3, r3, #31
    c776:	b2db      	uxtb	r3, r3
    c778:	2b01      	cmp	r3, #1
    c77a:	d103      	bne.n	c784 <DumpConnection+0x160>
                    {
                        printf("Y");
    c77c:	2059      	movs	r0, #89	; 0x59
    c77e:	4b93      	ldr	r3, [pc, #588]	; (c9cc <DumpConnection+0x3a8>)
    c780:	4798      	blx	r3
    c782:	e002      	b.n	c78a <DumpConnection+0x166>
                    }
                    else
                    {
                        printf("N");
    c784:	204e      	movs	r0, #78	; 0x4e
    c786:	4b91      	ldr	r3, [pc, #580]	; (c9cc <DumpConnection+0x3a8>)
    c788:	4798      	blx	r3
                    }
                    printf("   ");
    c78a:	4b91      	ldr	r3, [pc, #580]	; (c9d0 <DumpConnection+0x3ac>)
    c78c:	0018      	movs	r0, r3
    c78e:	4b81      	ldr	r3, [pc, #516]	; (c994 <DumpConnection+0x370>)
    c790:	4798      	blx	r3
                                  
                    if(ConnectionTable[i].status.bits.shortAddressValid)
    c792:	230f      	movs	r3, #15
    c794:	18fb      	adds	r3, r7, r3
    c796:	781b      	ldrb	r3, [r3, #0]
    c798:	4a8a      	ldr	r2, [pc, #552]	; (c9c4 <DumpConnection+0x3a0>)
    c79a:	2108      	movs	r1, #8
    c79c:	011b      	lsls	r3, r3, #4
    c79e:	18d3      	adds	r3, r2, r3
    c7a0:	185b      	adds	r3, r3, r1
    c7a2:	791b      	ldrb	r3, [r3, #4]
    c7a4:	071b      	lsls	r3, r3, #28
    c7a6:	0fdb      	lsrs	r3, r3, #31
    c7a8:	b2db      	uxtb	r3, r3
    c7aa:	2b00      	cmp	r3, #0
    c7ac:	d03e      	beq.n	c82c <DumpConnection+0x208>
                    {
                        //this is a neighbor
                        printf(" %.2x",ConnectionTable[i].PANID.v[1]);
    c7ae:	230f      	movs	r3, #15
    c7b0:	18fb      	adds	r3, r7, r3
    c7b2:	781b      	ldrb	r3, [r3, #0]
    c7b4:	4a83      	ldr	r2, [pc, #524]	; (c9c4 <DumpConnection+0x3a0>)
    c7b6:	011b      	lsls	r3, r3, #4
    c7b8:	18d3      	adds	r3, r2, r3
    c7ba:	3301      	adds	r3, #1
    c7bc:	781b      	ldrb	r3, [r3, #0]
    c7be:	001a      	movs	r2, r3
    c7c0:	4b84      	ldr	r3, [pc, #528]	; (c9d4 <DumpConnection+0x3b0>)
    c7c2:	0011      	movs	r1, r2
    c7c4:	0018      	movs	r0, r3
    c7c6:	4b73      	ldr	r3, [pc, #460]	; (c994 <DumpConnection+0x370>)
    c7c8:	4798      	blx	r3
                        printf("%.2x",ConnectionTable[i].PANID.v[0]);
    c7ca:	230f      	movs	r3, #15
    c7cc:	18fb      	adds	r3, r7, r3
    c7ce:	781a      	ldrb	r2, [r3, #0]
    c7d0:	4b7c      	ldr	r3, [pc, #496]	; (c9c4 <DumpConnection+0x3a0>)
    c7d2:	0112      	lsls	r2, r2, #4
    c7d4:	5cd3      	ldrb	r3, [r2, r3]
    c7d6:	001a      	movs	r2, r3
    c7d8:	4b70      	ldr	r3, [pc, #448]	; (c99c <DumpConnection+0x378>)
    c7da:	0011      	movs	r1, r2
    c7dc:	0018      	movs	r0, r3
    c7de:	4b6d      	ldr	r3, [pc, #436]	; (c994 <DumpConnection+0x370>)
    c7e0:	4798      	blx	r3
                        printf("    ");
    c7e2:	4b7d      	ldr	r3, [pc, #500]	; (c9d8 <DumpConnection+0x3b4>)
    c7e4:	0018      	movs	r0, r3
    c7e6:	4b6b      	ldr	r3, [pc, #428]	; (c994 <DumpConnection+0x370>)
    c7e8:	4798      	blx	r3
                        printf("%.2x",ConnectionTable[i].AltAddress.v[1]);
    c7ea:	230f      	movs	r3, #15
    c7ec:	18fb      	adds	r3, r7, r3
    c7ee:	781b      	ldrb	r3, [r3, #0]
    c7f0:	4a74      	ldr	r2, [pc, #464]	; (c9c4 <DumpConnection+0x3a0>)
    c7f2:	011b      	lsls	r3, r3, #4
    c7f4:	18d3      	adds	r3, r2, r3
    c7f6:	3303      	adds	r3, #3
    c7f8:	781b      	ldrb	r3, [r3, #0]
    c7fa:	001a      	movs	r2, r3
    c7fc:	4b67      	ldr	r3, [pc, #412]	; (c99c <DumpConnection+0x378>)
    c7fe:	0011      	movs	r1, r2
    c800:	0018      	movs	r0, r3
    c802:	4b64      	ldr	r3, [pc, #400]	; (c994 <DumpConnection+0x370>)
    c804:	4798      	blx	r3
                        printf("%.2x",ConnectionTable[i].AltAddress.v[0]);
    c806:	230f      	movs	r3, #15
    c808:	18fb      	adds	r3, r7, r3
    c80a:	781b      	ldrb	r3, [r3, #0]
    c80c:	4a6d      	ldr	r2, [pc, #436]	; (c9c4 <DumpConnection+0x3a0>)
    c80e:	011b      	lsls	r3, r3, #4
    c810:	18d3      	adds	r3, r2, r3
    c812:	3302      	adds	r3, #2
    c814:	781b      	ldrb	r3, [r3, #0]
    c816:	001a      	movs	r2, r3
    c818:	4b60      	ldr	r3, [pc, #384]	; (c99c <DumpConnection+0x378>)
    c81a:	0011      	movs	r1, r2
    c81c:	0018      	movs	r0, r3
    c81e:	4b5d      	ldr	r3, [pc, #372]	; (c994 <DumpConnection+0x370>)
    c820:	4798      	blx	r3
                        printf("   ");
    c822:	4b6b      	ldr	r3, [pc, #428]	; (c9d0 <DumpConnection+0x3ac>)
    c824:	0018      	movs	r0, r3
    c826:	4b5b      	ldr	r3, [pc, #364]	; (c994 <DumpConnection+0x370>)
    c828:	4798      	blx	r3
    c82a:	e003      	b.n	c834 <DumpConnection+0x210>
                    }
                    else
                    {
                        printf("???? ???? ");                        
    c82c:	4b6b      	ldr	r3, [pc, #428]	; (c9dc <DumpConnection+0x3b8>)
    c82e:	0018      	movs	r0, r3
    c830:	4b58      	ldr	r3, [pc, #352]	; (c994 <DumpConnection+0x370>)
    c832:	4798      	blx	r3
                    }
                    
                    if(ConnectionTable[i].status.bits.longAddressValid)
    c834:	230f      	movs	r3, #15
    c836:	18fb      	adds	r3, r7, r3
    c838:	781b      	ldrb	r3, [r3, #0]
    c83a:	4a62      	ldr	r2, [pc, #392]	; (c9c4 <DumpConnection+0x3a0>)
    c83c:	2108      	movs	r1, #8
    c83e:	011b      	lsls	r3, r3, #4
    c840:	18d3      	adds	r3, r2, r3
    c842:	185b      	adds	r3, r3, r1
    c844:	791b      	ldrb	r3, [r3, #4]
    c846:	075b      	lsls	r3, r3, #29
    c848:	0fdb      	lsrs	r3, r3, #31
    c84a:	b2db      	uxtb	r3, r3
    c84c:	2b00      	cmp	r3, #0
    c84e:	d028      	beq.n	c8a2 <DumpConnection+0x27e>
                    {
                        printf("      ");
    c850:	4b63      	ldr	r3, [pc, #396]	; (c9e0 <DumpConnection+0x3bc>)
    c852:	0018      	movs	r0, r3
    c854:	4b4f      	ldr	r3, [pc, #316]	; (c994 <DumpConnection+0x370>)
    c856:	4798      	blx	r3
                        for(j = 0; j < MY_ADDRESS_LENGTH; j++)
    c858:	230e      	movs	r3, #14
    c85a:	18fb      	adds	r3, r7, r3
    c85c:	2200      	movs	r2, #0
    c85e:	701a      	strb	r2, [r3, #0]
    c860:	e01a      	b.n	c898 <DumpConnection+0x274>
                        {
                            printf("%.2x",ConnectionTable[i].Address[MY_ADDRESS_LENGTH-1-j]);
    c862:	230f      	movs	r3, #15
    c864:	18fb      	adds	r3, r7, r3
    c866:	781a      	ldrb	r2, [r3, #0]
    c868:	230e      	movs	r3, #14
    c86a:	18fb      	adds	r3, r7, r3
    c86c:	781b      	ldrb	r3, [r3, #0]
    c86e:	2107      	movs	r1, #7
    c870:	1acb      	subs	r3, r1, r3
    c872:	4954      	ldr	r1, [pc, #336]	; (c9c4 <DumpConnection+0x3a0>)
    c874:	0112      	lsls	r2, r2, #4
    c876:	188a      	adds	r2, r1, r2
    c878:	18d3      	adds	r3, r2, r3
    c87a:	3304      	adds	r3, #4
    c87c:	781b      	ldrb	r3, [r3, #0]
    c87e:	001a      	movs	r2, r3
    c880:	4b46      	ldr	r3, [pc, #280]	; (c99c <DumpConnection+0x378>)
    c882:	0011      	movs	r1, r2
    c884:	0018      	movs	r0, r3
    c886:	4b43      	ldr	r3, [pc, #268]	; (c994 <DumpConnection+0x370>)
    c888:	4798      	blx	r3
                        for(j = 0; j < MY_ADDRESS_LENGTH; j++)
    c88a:	230e      	movs	r3, #14
    c88c:	18fb      	adds	r3, r7, r3
    c88e:	781a      	ldrb	r2, [r3, #0]
    c890:	230e      	movs	r3, #14
    c892:	18fb      	adds	r3, r7, r3
    c894:	3201      	adds	r2, #1
    c896:	701a      	strb	r2, [r3, #0]
    c898:	230e      	movs	r3, #14
    c89a:	18fb      	adds	r3, r7, r3
    c89c:	781b      	ldrb	r3, [r3, #0]
    c89e:	2b07      	cmp	r3, #7
    c8a0:	d9df      	bls.n	c862 <DumpConnection+0x23e>
                        }
                    }
                    
                    #if ADDITIONAL_NODE_ID_SIZE > 0
                        printf("  ");
    c8a2:	4b50      	ldr	r3, [pc, #320]	; (c9e4 <DumpConnection+0x3c0>)
    c8a4:	0018      	movs	r0, r3
    c8a6:	4b3b      	ldr	r3, [pc, #236]	; (c994 <DumpConnection+0x370>)
    c8a8:	4798      	blx	r3
                            for(j = 0; j < (8-MY_ADDRESS_LENGTH); j++)
                            {
                                printf("  ");
                            }
                        #endif						
                        for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    c8aa:	230e      	movs	r3, #14
    c8ac:	18fb      	adds	r3, r7, r3
    c8ae:	2200      	movs	r2, #0
    c8b0:	701a      	strb	r2, [r3, #0]
    c8b2:	e018      	b.n	c8e6 <DumpConnection+0x2c2>
                        {
                            printf("%.2x",ConnectionTable[i].PeerInfo[j]);
    c8b4:	230f      	movs	r3, #15
    c8b6:	18fb      	adds	r3, r7, r3
    c8b8:	781a      	ldrb	r2, [r3, #0]
    c8ba:	230e      	movs	r3, #14
    c8bc:	18fb      	adds	r3, r7, r3
    c8be:	781b      	ldrb	r3, [r3, #0]
    c8c0:	4940      	ldr	r1, [pc, #256]	; (c9c4 <DumpConnection+0x3a0>)
    c8c2:	0112      	lsls	r2, r2, #4
    c8c4:	188a      	adds	r2, r1, r2
    c8c6:	18d3      	adds	r3, r2, r3
    c8c8:	330d      	adds	r3, #13
    c8ca:	781b      	ldrb	r3, [r3, #0]
    c8cc:	001a      	movs	r2, r3
    c8ce:	4b33      	ldr	r3, [pc, #204]	; (c99c <DumpConnection+0x378>)
    c8d0:	0011      	movs	r1, r2
    c8d2:	0018      	movs	r0, r3
    c8d4:	4b2f      	ldr	r3, [pc, #188]	; (c994 <DumpConnection+0x370>)
    c8d6:	4798      	blx	r3
                        for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    c8d8:	230e      	movs	r3, #14
    c8da:	18fb      	adds	r3, r7, r3
    c8dc:	781a      	ldrb	r2, [r3, #0]
    c8de:	230e      	movs	r3, #14
    c8e0:	18fb      	adds	r3, r7, r3
    c8e2:	3201      	adds	r2, #1
    c8e4:	701a      	strb	r2, [r3, #0]
    c8e6:	230e      	movs	r3, #14
    c8e8:	18fb      	adds	r3, r7, r3
    c8ea:	781b      	ldrb	r3, [r3, #0]
    c8ec:	2b01      	cmp	r3, #1
    c8ee:	d9e1      	bls.n	c8b4 <DumpConnection+0x290>
                        }
                    #endif
                    
                    printf("\r\n");
    c8f0:	4b3d      	ldr	r3, [pc, #244]	; (c9e8 <DumpConnection+0x3c4>)
    c8f2:	0018      	movs	r0, r3
    c8f4:	4b32      	ldr	r3, [pc, #200]	; (c9c0 <DumpConnection+0x39c>)
    c8f6:	4798      	blx	r3
            for(i=0;i<CONNECTION_SIZE;i++)
    c8f8:	230f      	movs	r3, #15
    c8fa:	18fb      	adds	r3, r7, r3
    c8fc:	781a      	ldrb	r2, [r3, #0]
    c8fe:	230f      	movs	r3, #15
    c900:	18fb      	adds	r3, r7, r3
    c902:	3201      	adds	r2, #1
    c904:	701a      	strb	r2, [r3, #0]
    c906:	230f      	movs	r3, #15
    c908:	18fb      	adds	r3, r7, r3
    c90a:	781b      	ldrb	r3, [r3, #0]
    c90c:	2b0f      	cmp	r3, #15
    c90e:	d800      	bhi.n	c912 <DumpConnection+0x2ee>
    c910:	e6f6      	b.n	c700 <DumpConnection+0xdc>
                #endif
                
                printf("\r\n");
            }
        }
    }
    c912:	e119      	b.n	cb48 <DumpConnection+0x524>
            if(ConnectionTable[index].status.bits.isValid)
    c914:	1dfb      	adds	r3, r7, #7
    c916:	781b      	ldrb	r3, [r3, #0]
    c918:	4a2a      	ldr	r2, [pc, #168]	; (c9c4 <DumpConnection+0x3a0>)
    c91a:	2108      	movs	r1, #8
    c91c:	011b      	lsls	r3, r3, #4
    c91e:	18d3      	adds	r3, r2, r3
    c920:	185b      	adds	r3, r3, r1
    c922:	791b      	ldrb	r3, [r3, #4]
    c924:	061b      	lsls	r3, r3, #24
    c926:	0fdb      	lsrs	r3, r3, #31
    c928:	b2db      	uxtb	r3, r3
    c92a:	2b00      	cmp	r3, #0
    c92c:	d100      	bne.n	c930 <DumpConnection+0x30c>
    c92e:	e10b      	b.n	cb48 <DumpConnection+0x524>
                printf("%d     ",index);
    c930:	1dfb      	adds	r3, r7, #7
    c932:	781a      	ldrb	r2, [r3, #0]
    c934:	4b2d      	ldr	r3, [pc, #180]	; (c9ec <DumpConnection+0x3c8>)
    c936:	0011      	movs	r1, r2
    c938:	0018      	movs	r0, r3
    c93a:	4b16      	ldr	r3, [pc, #88]	; (c994 <DumpConnection+0x370>)
    c93c:	4798      	blx	r3
                if(ConnectionTable[index].status.bits.RXOnWhenIdle == 1)
    c93e:	1dfb      	adds	r3, r7, #7
    c940:	781b      	ldrb	r3, [r3, #0]
    c942:	4a20      	ldr	r2, [pc, #128]	; (c9c4 <DumpConnection+0x3a0>)
    c944:	2108      	movs	r1, #8
    c946:	011b      	lsls	r3, r3, #4
    c948:	18d3      	adds	r3, r2, r3
    c94a:	185b      	adds	r3, r3, r1
    c94c:	791b      	ldrb	r3, [r3, #4]
    c94e:	07db      	lsls	r3, r3, #31
    c950:	0fdb      	lsrs	r3, r3, #31
    c952:	b2db      	uxtb	r3, r3
    c954:	2b01      	cmp	r3, #1
    c956:	d103      	bne.n	c960 <DumpConnection+0x33c>
                    printf("Y");
    c958:	2059      	movs	r0, #89	; 0x59
    c95a:	4b1c      	ldr	r3, [pc, #112]	; (c9cc <DumpConnection+0x3a8>)
    c95c:	4798      	blx	r3
    c95e:	e002      	b.n	c966 <DumpConnection+0x342>
                    printf("N");
    c960:	204e      	movs	r0, #78	; 0x4e
    c962:	4b1a      	ldr	r3, [pc, #104]	; (c9cc <DumpConnection+0x3a8>)
    c964:	4798      	blx	r3
                printf("  ");
    c966:	4b1f      	ldr	r3, [pc, #124]	; (c9e4 <DumpConnection+0x3c0>)
    c968:	0018      	movs	r0, r3
    c96a:	4b0a      	ldr	r3, [pc, #40]	; (c994 <DumpConnection+0x370>)
    c96c:	4798      	blx	r3
                if(ConnectionTable[index].status.bits.directConnection == 1)
    c96e:	1dfb      	adds	r3, r7, #7
    c970:	781b      	ldrb	r3, [r3, #0]
    c972:	4a14      	ldr	r2, [pc, #80]	; (c9c4 <DumpConnection+0x3a0>)
    c974:	2108      	movs	r1, #8
    c976:	011b      	lsls	r3, r3, #4
    c978:	18d3      	adds	r3, r2, r3
    c97a:	185b      	adds	r3, r3, r1
    c97c:	791b      	ldrb	r3, [r3, #4]
    c97e:	079b      	lsls	r3, r3, #30
    c980:	0fdb      	lsrs	r3, r3, #31
    c982:	b2db      	uxtb	r3, r3
    c984:	2b01      	cmp	r3, #1
    c986:	d133      	bne.n	c9f0 <DumpConnection+0x3cc>
                    printf("Y");
    c988:	2059      	movs	r0, #89	; 0x59
    c98a:	4b10      	ldr	r3, [pc, #64]	; (c9cc <DumpConnection+0x3a8>)
    c98c:	4798      	blx	r3
    c98e:	e032      	b.n	c9f6 <DumpConnection+0x3d2>
    c990:	0001cd1c 	.word	0x0001cd1c
    c994:	0001782d 	.word	0x0001782d
    c998:	20000010 	.word	0x20000010
    c99c:	0001cd2c 	.word	0x0001cd2c
    c9a0:	0001cd34 	.word	0x0001cd34
    c9a4:	20001140 	.word	0x20001140
    c9a8:	0001cd44 	.word	0x0001cd44
    c9ac:	20001290 	.word	0x20001290
    c9b0:	0001cd50 	.word	0x0001cd50
    c9b4:	200014b5 	.word	0x200014b5
    c9b8:	0001cd5c 	.word	0x0001cd5c
    c9bc:	0001cd60 	.word	0x0001cd60
    c9c0:	00017905 	.word	0x00017905
    c9c4:	20001150 	.word	0x20001150
    c9c8:	0001cda4 	.word	0x0001cda4
    c9cc:	00017851 	.word	0x00017851
    c9d0:	0001cdb0 	.word	0x0001cdb0
    c9d4:	0001cdb4 	.word	0x0001cdb4
    c9d8:	0001cdbc 	.word	0x0001cdbc
    c9dc:	0001cdc4 	.word	0x0001cdc4
    c9e0:	0001cdd0 	.word	0x0001cdd0
    c9e4:	0001cdd8 	.word	0x0001cdd8
    c9e8:	0001cddc 	.word	0x0001cddc
    c9ec:	0001cde0 	.word	0x0001cde0
                    printf("N");
    c9f0:	204e      	movs	r0, #78	; 0x4e
    c9f2:	4b57      	ldr	r3, [pc, #348]	; (cb50 <DumpConnection+0x52c>)
    c9f4:	4798      	blx	r3
                printf("  ");
    c9f6:	4b57      	ldr	r3, [pc, #348]	; (cb54 <DumpConnection+0x530>)
    c9f8:	0018      	movs	r0, r3
    c9fa:	4b57      	ldr	r3, [pc, #348]	; (cb58 <DumpConnection+0x534>)
    c9fc:	4798      	blx	r3
				if(ConnectionTable[index].status.bits.shortAddressValid)
    c9fe:	1dfb      	adds	r3, r7, #7
    ca00:	781b      	ldrb	r3, [r3, #0]
    ca02:	4a56      	ldr	r2, [pc, #344]	; (cb5c <DumpConnection+0x538>)
    ca04:	2108      	movs	r1, #8
    ca06:	011b      	lsls	r3, r3, #4
    ca08:	18d3      	adds	r3, r2, r3
    ca0a:	185b      	adds	r3, r3, r1
    ca0c:	791b      	ldrb	r3, [r3, #4]
    ca0e:	071b      	lsls	r3, r3, #28
    ca10:	0fdb      	lsrs	r3, r3, #31
    ca12:	b2db      	uxtb	r3, r3
    ca14:	2b00      	cmp	r3, #0
    ca16:	d039      	beq.n	ca8c <DumpConnection+0x468>
                    printf("%.2x",ConnectionTable[index].PANID.v[1]);
    ca18:	1dfb      	adds	r3, r7, #7
    ca1a:	781b      	ldrb	r3, [r3, #0]
    ca1c:	4a4f      	ldr	r2, [pc, #316]	; (cb5c <DumpConnection+0x538>)
    ca1e:	011b      	lsls	r3, r3, #4
    ca20:	18d3      	adds	r3, r2, r3
    ca22:	3301      	adds	r3, #1
    ca24:	781b      	ldrb	r3, [r3, #0]
    ca26:	001a      	movs	r2, r3
    ca28:	4b4d      	ldr	r3, [pc, #308]	; (cb60 <DumpConnection+0x53c>)
    ca2a:	0011      	movs	r1, r2
    ca2c:	0018      	movs	r0, r3
    ca2e:	4b4a      	ldr	r3, [pc, #296]	; (cb58 <DumpConnection+0x534>)
    ca30:	4798      	blx	r3
                    printf("%.2x",ConnectionTable[index].PANID.v[0]);
    ca32:	1dfb      	adds	r3, r7, #7
    ca34:	781a      	ldrb	r2, [r3, #0]
    ca36:	4b49      	ldr	r3, [pc, #292]	; (cb5c <DumpConnection+0x538>)
    ca38:	0112      	lsls	r2, r2, #4
    ca3a:	5cd3      	ldrb	r3, [r2, r3]
    ca3c:	001a      	movs	r2, r3
    ca3e:	4b48      	ldr	r3, [pc, #288]	; (cb60 <DumpConnection+0x53c>)
    ca40:	0011      	movs	r1, r2
    ca42:	0018      	movs	r0, r3
    ca44:	4b44      	ldr	r3, [pc, #272]	; (cb58 <DumpConnection+0x534>)
    ca46:	4798      	blx	r3
                    printf("  ");
    ca48:	4b42      	ldr	r3, [pc, #264]	; (cb54 <DumpConnection+0x530>)
    ca4a:	0018      	movs	r0, r3
    ca4c:	4b42      	ldr	r3, [pc, #264]	; (cb58 <DumpConnection+0x534>)
    ca4e:	4798      	blx	r3
                    printf("%.2x",ConnectionTable[index].AltAddress.v[1]);
    ca50:	1dfb      	adds	r3, r7, #7
    ca52:	781b      	ldrb	r3, [r3, #0]
    ca54:	4a41      	ldr	r2, [pc, #260]	; (cb5c <DumpConnection+0x538>)
    ca56:	011b      	lsls	r3, r3, #4
    ca58:	18d3      	adds	r3, r2, r3
    ca5a:	3303      	adds	r3, #3
    ca5c:	781b      	ldrb	r3, [r3, #0]
    ca5e:	001a      	movs	r2, r3
    ca60:	4b3f      	ldr	r3, [pc, #252]	; (cb60 <DumpConnection+0x53c>)
    ca62:	0011      	movs	r1, r2
    ca64:	0018      	movs	r0, r3
    ca66:	4b3c      	ldr	r3, [pc, #240]	; (cb58 <DumpConnection+0x534>)
    ca68:	4798      	blx	r3
                    printf("%.2x",ConnectionTable[index].AltAddress.v[0]);
    ca6a:	1dfb      	adds	r3, r7, #7
    ca6c:	781b      	ldrb	r3, [r3, #0]
    ca6e:	4a3b      	ldr	r2, [pc, #236]	; (cb5c <DumpConnection+0x538>)
    ca70:	011b      	lsls	r3, r3, #4
    ca72:	18d3      	adds	r3, r2, r3
    ca74:	3302      	adds	r3, #2
    ca76:	781b      	ldrb	r3, [r3, #0]
    ca78:	001a      	movs	r2, r3
    ca7a:	4b39      	ldr	r3, [pc, #228]	; (cb60 <DumpConnection+0x53c>)
    ca7c:	0011      	movs	r1, r2
    ca7e:	0018      	movs	r0, r3
    ca80:	4b35      	ldr	r3, [pc, #212]	; (cb58 <DumpConnection+0x534>)
    ca82:	4798      	blx	r3
                    printf(" ");
    ca84:	2020      	movs	r0, #32
    ca86:	4b32      	ldr	r3, [pc, #200]	; (cb50 <DumpConnection+0x52c>)
    ca88:	4798      	blx	r3
    ca8a:	e003      	b.n	ca94 <DumpConnection+0x470>
                    printf("????  ???? ");
    ca8c:	4b35      	ldr	r3, [pc, #212]	; (cb64 <DumpConnection+0x540>)
    ca8e:	0018      	movs	r0, r3
    ca90:	4b31      	ldr	r3, [pc, #196]	; (cb58 <DumpConnection+0x534>)
    ca92:	4798      	blx	r3
                if(ConnectionTable[index].status.bits.longAddressValid)
    ca94:	1dfb      	adds	r3, r7, #7
    ca96:	781b      	ldrb	r3, [r3, #0]
    ca98:	4a30      	ldr	r2, [pc, #192]	; (cb5c <DumpConnection+0x538>)
    ca9a:	2108      	movs	r1, #8
    ca9c:	011b      	lsls	r3, r3, #4
    ca9e:	18d3      	adds	r3, r2, r3
    caa0:	185b      	adds	r3, r3, r1
    caa2:	791b      	ldrb	r3, [r3, #4]
    caa4:	075b      	lsls	r3, r3, #29
    caa6:	0fdb      	lsrs	r3, r3, #31
    caa8:	b2db      	uxtb	r3, r3
    caaa:	2b00      	cmp	r3, #0
    caac:	d023      	beq.n	caf6 <DumpConnection+0x4d2>
                    for(j = 0; j < MY_ADDRESS_LENGTH; j++)
    caae:	230e      	movs	r3, #14
    cab0:	18fb      	adds	r3, r7, r3
    cab2:	2200      	movs	r2, #0
    cab4:	701a      	strb	r2, [r3, #0]
    cab6:	e019      	b.n	caec <DumpConnection+0x4c8>
                        printf("%.2x",ConnectionTable[index].Address[MY_ADDRESS_LENGTH-1-j]);
    cab8:	1dfb      	adds	r3, r7, #7
    caba:	781a      	ldrb	r2, [r3, #0]
    cabc:	230e      	movs	r3, #14
    cabe:	18fb      	adds	r3, r7, r3
    cac0:	781b      	ldrb	r3, [r3, #0]
    cac2:	2107      	movs	r1, #7
    cac4:	1acb      	subs	r3, r1, r3
    cac6:	4925      	ldr	r1, [pc, #148]	; (cb5c <DumpConnection+0x538>)
    cac8:	0112      	lsls	r2, r2, #4
    caca:	188a      	adds	r2, r1, r2
    cacc:	18d3      	adds	r3, r2, r3
    cace:	3304      	adds	r3, #4
    cad0:	781b      	ldrb	r3, [r3, #0]
    cad2:	001a      	movs	r2, r3
    cad4:	4b22      	ldr	r3, [pc, #136]	; (cb60 <DumpConnection+0x53c>)
    cad6:	0011      	movs	r1, r2
    cad8:	0018      	movs	r0, r3
    cada:	4b1f      	ldr	r3, [pc, #124]	; (cb58 <DumpConnection+0x534>)
    cadc:	4798      	blx	r3
                    for(j = 0; j < MY_ADDRESS_LENGTH; j++)
    cade:	230e      	movs	r3, #14
    cae0:	18fb      	adds	r3, r7, r3
    cae2:	781a      	ldrb	r2, [r3, #0]
    cae4:	230e      	movs	r3, #14
    cae6:	18fb      	adds	r3, r7, r3
    cae8:	3201      	adds	r2, #1
    caea:	701a      	strb	r2, [r3, #0]
    caec:	230e      	movs	r3, #14
    caee:	18fb      	adds	r3, r7, r3
    caf0:	781b      	ldrb	r3, [r3, #0]
    caf2:	2b07      	cmp	r3, #7
    caf4:	d9e0      	bls.n	cab8 <DumpConnection+0x494>
                    printf(" ");
    caf6:	2020      	movs	r0, #32
    caf8:	4b15      	ldr	r3, [pc, #84]	; (cb50 <DumpConnection+0x52c>)
    cafa:	4798      	blx	r3
                    for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    cafc:	230e      	movs	r3, #14
    cafe:	18fb      	adds	r3, r7, r3
    cb00:	2200      	movs	r2, #0
    cb02:	701a      	strb	r2, [r3, #0]
    cb04:	e017      	b.n	cb36 <DumpConnection+0x512>
                        printf("%.2x",ConnectionTable[index].PeerInfo[j]);
    cb06:	1dfb      	adds	r3, r7, #7
    cb08:	781a      	ldrb	r2, [r3, #0]
    cb0a:	230e      	movs	r3, #14
    cb0c:	18fb      	adds	r3, r7, r3
    cb0e:	781b      	ldrb	r3, [r3, #0]
    cb10:	4912      	ldr	r1, [pc, #72]	; (cb5c <DumpConnection+0x538>)
    cb12:	0112      	lsls	r2, r2, #4
    cb14:	188a      	adds	r2, r1, r2
    cb16:	18d3      	adds	r3, r2, r3
    cb18:	330d      	adds	r3, #13
    cb1a:	781b      	ldrb	r3, [r3, #0]
    cb1c:	001a      	movs	r2, r3
    cb1e:	4b10      	ldr	r3, [pc, #64]	; (cb60 <DumpConnection+0x53c>)
    cb20:	0011      	movs	r1, r2
    cb22:	0018      	movs	r0, r3
    cb24:	4b0c      	ldr	r3, [pc, #48]	; (cb58 <DumpConnection+0x534>)
    cb26:	4798      	blx	r3
                    for(j = 0; j < ADDITIONAL_NODE_ID_SIZE; j++)
    cb28:	230e      	movs	r3, #14
    cb2a:	18fb      	adds	r3, r7, r3
    cb2c:	781a      	ldrb	r2, [r3, #0]
    cb2e:	230e      	movs	r3, #14
    cb30:	18fb      	adds	r3, r7, r3
    cb32:	3201      	adds	r2, #1
    cb34:	701a      	strb	r2, [r3, #0]
    cb36:	230e      	movs	r3, #14
    cb38:	18fb      	adds	r3, r7, r3
    cb3a:	781b      	ldrb	r3, [r3, #0]
    cb3c:	2b01      	cmp	r3, #1
    cb3e:	d9e2      	bls.n	cb06 <DumpConnection+0x4e2>
                printf("\r\n");
    cb40:	4b09      	ldr	r3, [pc, #36]	; (cb68 <DumpConnection+0x544>)
    cb42:	0018      	movs	r0, r3
    cb44:	4b09      	ldr	r3, [pc, #36]	; (cb6c <DumpConnection+0x548>)
    cb46:	4798      	blx	r3
    }
    cb48:	46c0      	nop			; (mov r8, r8)
    cb4a:	46bd      	mov	sp, r7
    cb4c:	b004      	add	sp, #16
    cb4e:	bd80      	pop	{r7, pc}
    cb50:	00017851 	.word	0x00017851
    cb54:	0001cdd8 	.word	0x0001cdd8
    cb58:	0001782d 	.word	0x0001782d
    cb5c:	20001150 	.word	0x20001150
    cb60:	0001cd2c 	.word	0x0001cd2c
    cb64:	0001cde8 	.word	0x0001cde8
    cb68:	0001cddc 	.word	0x0001cddc
    cb6c:	00017905 	.word	0x00017905

0000cb70 <SearchForShortAddress>:
     *
     * Overview:        This function looks up the index of a node or network
     *                  in the network table by short address.
     ********************************************************************/
    uint8_t SearchForShortAddress(void)
    {
    cb70:	b580      	push	{r7, lr}
    cb72:	b082      	sub	sp, #8
    cb74:	af00      	add	r7, sp, #0
        uint8_t i;   
        
        for(i=0;i<CONNECTION_SIZE;i++)
    cb76:	1dfb      	adds	r3, r7, #7
    cb78:	2200      	movs	r2, #0
    cb7a:	701a      	strb	r2, [r3, #0]
    cb7c:	e02c      	b.n	cbd8 <SearchForShortAddress+0x68>
        {
            if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].status.bits.shortAddressValid)
    cb7e:	1dfb      	adds	r3, r7, #7
    cb80:	781b      	ldrb	r3, [r3, #0]
    cb82:	4a1a      	ldr	r2, [pc, #104]	; (cbec <SearchForShortAddress+0x7c>)
    cb84:	2108      	movs	r1, #8
    cb86:	011b      	lsls	r3, r3, #4
    cb88:	18d3      	adds	r3, r2, r3
    cb8a:	185b      	adds	r3, r3, r1
    cb8c:	791b      	ldrb	r3, [r3, #4]
    cb8e:	061b      	lsls	r3, r3, #24
    cb90:	0fdb      	lsrs	r3, r3, #31
    cb92:	b2db      	uxtb	r3, r3
    cb94:	2b00      	cmp	r3, #0
    cb96:	d01a      	beq.n	cbce <SearchForShortAddress+0x5e>
    cb98:	1dfb      	adds	r3, r7, #7
    cb9a:	781b      	ldrb	r3, [r3, #0]
    cb9c:	4a13      	ldr	r2, [pc, #76]	; (cbec <SearchForShortAddress+0x7c>)
    cb9e:	2108      	movs	r1, #8
    cba0:	011b      	lsls	r3, r3, #4
    cba2:	18d3      	adds	r3, r2, r3
    cba4:	185b      	adds	r3, r3, r1
    cba6:	791b      	ldrb	r3, [r3, #4]
    cba8:	071b      	lsls	r3, r3, #28
    cbaa:	0fdb      	lsrs	r3, r3, #31
    cbac:	b2db      	uxtb	r3, r3
    cbae:	2b00      	cmp	r3, #0
    cbb0:	d00d      	beq.n	cbce <SearchForShortAddress+0x5e>
            {
                if(ConnectionTable[i].AltAddress.Val == tempShortAddress.Val)
    cbb2:	1dfb      	adds	r3, r7, #7
    cbb4:	781b      	ldrb	r3, [r3, #0]
    cbb6:	4a0d      	ldr	r2, [pc, #52]	; (cbec <SearchForShortAddress+0x7c>)
    cbb8:	011b      	lsls	r3, r3, #4
    cbba:	18d3      	adds	r3, r2, r3
    cbbc:	3302      	adds	r3, #2
    cbbe:	881a      	ldrh	r2, [r3, #0]
    cbc0:	4b0b      	ldr	r3, [pc, #44]	; (cbf0 <SearchForShortAddress+0x80>)
    cbc2:	881b      	ldrh	r3, [r3, #0]
    cbc4:	429a      	cmp	r2, r3
    cbc6:	d102      	bne.n	cbce <SearchForShortAddress+0x5e>
                {
                    return i;
    cbc8:	1dfb      	adds	r3, r7, #7
    cbca:	781b      	ldrb	r3, [r3, #0]
    cbcc:	e009      	b.n	cbe2 <SearchForShortAddress+0x72>
        for(i=0;i<CONNECTION_SIZE;i++)
    cbce:	1dfb      	adds	r3, r7, #7
    cbd0:	781a      	ldrb	r2, [r3, #0]
    cbd2:	1dfb      	adds	r3, r7, #7
    cbd4:	3201      	adds	r2, #1
    cbd6:	701a      	strb	r2, [r3, #0]
    cbd8:	1dfb      	adds	r3, r7, #7
    cbda:	781b      	ldrb	r3, [r3, #0]
    cbdc:	2b0f      	cmp	r3, #15
    cbde:	d9ce      	bls.n	cb7e <SearchForShortAddress+0xe>
                }
            }
        }
        return 0xFF;
    cbe0:	23ff      	movs	r3, #255	; 0xff
    }
    cbe2:	0018      	movs	r0, r3
    cbe4:	46bd      	mov	sp, r7
    cbe6:	b002      	add	sp, #8
    cbe8:	bd80      	pop	{r7, pc}
    cbea:	46c0      	nop			; (mov r8, r8)
    cbec:	20001150 	.word	0x20001150
    cbf0:	200012e0 	.word	0x200012e0

0000cbf4 <SendBeacon>:
         * Side Effects:    None
         *
         * Overview:        This function sends a beacon frame.
         ********************************************************************/
        void SendBeacon(void)
        {
    cbf4:	b580      	push	{r7, lr}
    cbf6:	b082      	sub	sp, #8
    cbf8:	af00      	add	r7, sp, #0
            uint8_t i;

            MAC_FlushTx();
    cbfa:	4b47      	ldr	r3, [pc, #284]	; (cd18 <SendBeacon+0x124>)
    cbfc:	2200      	movs	r2, #0
    cbfe:	701a      	strb	r2, [r3, #0]
            
            #if !defined(IEEE_802_15_4)
                MiApp_WriteData(myPANID.v[0]);
    cc00:	4b45      	ldr	r3, [pc, #276]	; (cd18 <SendBeacon+0x124>)
    cc02:	781b      	ldrb	r3, [r3, #0]
    cc04:	1c5a      	adds	r2, r3, #1
    cc06:	b2d1      	uxtb	r1, r2
    cc08:	4a43      	ldr	r2, [pc, #268]	; (cd18 <SendBeacon+0x124>)
    cc0a:	7011      	strb	r1, [r2, #0]
    cc0c:	001a      	movs	r2, r3
    cc0e:	4b43      	ldr	r3, [pc, #268]	; (cd1c <SendBeacon+0x128>)
    cc10:	7819      	ldrb	r1, [r3, #0]
    cc12:	4b43      	ldr	r3, [pc, #268]	; (cd20 <SendBeacon+0x12c>)
    cc14:	5499      	strb	r1, [r3, r2]
                MiApp_WriteData(myPANID.v[1]);
    cc16:	4b40      	ldr	r3, [pc, #256]	; (cd18 <SendBeacon+0x124>)
    cc18:	781b      	ldrb	r3, [r3, #0]
    cc1a:	1c5a      	adds	r2, r3, #1
    cc1c:	b2d1      	uxtb	r1, r2
    cc1e:	4a3e      	ldr	r2, [pc, #248]	; (cd18 <SendBeacon+0x124>)
    cc20:	7011      	strb	r1, [r2, #0]
    cc22:	001a      	movs	r2, r3
    cc24:	4b3d      	ldr	r3, [pc, #244]	; (cd1c <SendBeacon+0x128>)
    cc26:	7859      	ldrb	r1, [r3, #1]
    cc28:	4b3d      	ldr	r3, [pc, #244]	; (cd20 <SendBeacon+0x12c>)
    cc2a:	5499      	strb	r1, [r3, r2]
                MiApp_WriteData(myShortAddress.v[0]);
    cc2c:	4b3a      	ldr	r3, [pc, #232]	; (cd18 <SendBeacon+0x124>)
    cc2e:	781b      	ldrb	r3, [r3, #0]
    cc30:	1c5a      	adds	r2, r3, #1
    cc32:	b2d1      	uxtb	r1, r2
    cc34:	4a38      	ldr	r2, [pc, #224]	; (cd18 <SendBeacon+0x124>)
    cc36:	7011      	strb	r1, [r2, #0]
    cc38:	001a      	movs	r2, r3
    cc3a:	4b3a      	ldr	r3, [pc, #232]	; (cd24 <SendBeacon+0x130>)
    cc3c:	7819      	ldrb	r1, [r3, #0]
    cc3e:	4b38      	ldr	r3, [pc, #224]	; (cd20 <SendBeacon+0x12c>)
    cc40:	5499      	strb	r1, [r3, r2]
                MiApp_WriteData(myShortAddress.v[1]);
    cc42:	4b35      	ldr	r3, [pc, #212]	; (cd18 <SendBeacon+0x124>)
    cc44:	781b      	ldrb	r3, [r3, #0]
    cc46:	1c5a      	adds	r2, r3, #1
    cc48:	b2d1      	uxtb	r1, r2
    cc4a:	4a33      	ldr	r2, [pc, #204]	; (cd18 <SendBeacon+0x124>)
    cc4c:	7011      	strb	r1, [r2, #0]
    cc4e:	001a      	movs	r2, r3
    cc50:	4b34      	ldr	r3, [pc, #208]	; (cd24 <SendBeacon+0x130>)
    cc52:	7859      	ldrb	r1, [r3, #1]
    cc54:	4b32      	ldr	r3, [pc, #200]	; (cd20 <SendBeacon+0x12c>)
    cc56:	5499      	strb	r1, [r3, r2]
            #endif
            MiApp_WriteData(0xFF);    //superframe specification (BO = 0xF, SO = 0xF)
    cc58:	4b2f      	ldr	r3, [pc, #188]	; (cd18 <SendBeacon+0x124>)
    cc5a:	781b      	ldrb	r3, [r3, #0]
    cc5c:	1c5a      	adds	r2, r3, #1
    cc5e:	b2d1      	uxtb	r1, r2
    cc60:	4a2d      	ldr	r2, [pc, #180]	; (cd18 <SendBeacon+0x124>)
    cc62:	7011      	strb	r1, [r2, #0]
    cc64:	001a      	movs	r2, r3
    cc66:	4b2e      	ldr	r3, [pc, #184]	; (cd20 <SendBeacon+0x12c>)
    cc68:	21ff      	movs	r1, #255	; 0xff
    cc6a:	5499      	strb	r1, [r3, r2]
    		MiApp_WriteData(MiWiPROCapacityInfo.Val);
    cc6c:	4b2a      	ldr	r3, [pc, #168]	; (cd18 <SendBeacon+0x124>)
    cc6e:	781b      	ldrb	r3, [r3, #0]
    cc70:	1c5a      	adds	r2, r3, #1
    cc72:	b2d1      	uxtb	r1, r2
    cc74:	4a28      	ldr	r2, [pc, #160]	; (cd18 <SendBeacon+0x124>)
    cc76:	7011      	strb	r1, [r2, #0]
    cc78:	001a      	movs	r2, r3
    cc7a:	4b2b      	ldr	r3, [pc, #172]	; (cd28 <SendBeacon+0x134>)
    cc7c:	7819      	ldrb	r1, [r3, #0]
    cc7e:	4b28      	ldr	r3, [pc, #160]	; (cd20 <SendBeacon+0x12c>)
    cc80:	5499      	strb	r1, [r3, r2]
            MiApp_WriteData(0x00);    // GTS
    cc82:	4b25      	ldr	r3, [pc, #148]	; (cd18 <SendBeacon+0x124>)
    cc84:	781b      	ldrb	r3, [r3, #0]
    cc86:	1c5a      	adds	r2, r3, #1
    cc88:	b2d1      	uxtb	r1, r2
    cc8a:	4a23      	ldr	r2, [pc, #140]	; (cd18 <SendBeacon+0x124>)
    cc8c:	7011      	strb	r1, [r2, #0]
    cc8e:	001a      	movs	r2, r3
    cc90:	4b23      	ldr	r3, [pc, #140]	; (cd20 <SendBeacon+0x12c>)
    cc92:	2100      	movs	r1, #0
    cc94:	5499      	strb	r1, [r3, r2]
            MiApp_WriteData(0x00);    // Pending addresses
    cc96:	4b20      	ldr	r3, [pc, #128]	; (cd18 <SendBeacon+0x124>)
    cc98:	781b      	ldrb	r3, [r3, #0]
    cc9a:	1c5a      	adds	r2, r3, #1
    cc9c:	b2d1      	uxtb	r1, r2
    cc9e:	4a1e      	ldr	r2, [pc, #120]	; (cd18 <SendBeacon+0x124>)
    cca0:	7011      	strb	r1, [r2, #0]
    cca2:	001a      	movs	r2, r3
    cca4:	4b1e      	ldr	r3, [pc, #120]	; (cd20 <SendBeacon+0x12c>)
    cca6:	2100      	movs	r1, #0
    cca8:	5499      	strb	r1, [r3, r2]
            MiApp_WriteData(MIWI_PRO_PROTOCOL_ID);    // Protocol ID
    ccaa:	4b1b      	ldr	r3, [pc, #108]	; (cd18 <SendBeacon+0x124>)
    ccac:	781b      	ldrb	r3, [r3, #0]
    ccae:	1c5a      	adds	r2, r3, #1
    ccb0:	b2d1      	uxtb	r1, r2
    ccb2:	4a19      	ldr	r2, [pc, #100]	; (cd18 <SendBeacon+0x124>)
    ccb4:	7011      	strb	r1, [r2, #0]
    ccb6:	001a      	movs	r2, r3
    ccb8:	4b19      	ldr	r3, [pc, #100]	; (cd20 <SendBeacon+0x12c>)
    ccba:	215d      	movs	r1, #93	; 0x5d
    ccbc:	5499      	strb	r1, [r3, r2]
            MiApp_WriteData(MIWI_PRO_VERSION_NUM);    // Version Number
    ccbe:	4b16      	ldr	r3, [pc, #88]	; (cd18 <SendBeacon+0x124>)
    ccc0:	781b      	ldrb	r3, [r3, #0]
    ccc2:	1c5a      	adds	r2, r3, #1
    ccc4:	b2d1      	uxtb	r1, r2
    ccc6:	4a14      	ldr	r2, [pc, #80]	; (cd18 <SendBeacon+0x124>)
    ccc8:	7011      	strb	r1, [r2, #0]
    ccca:	001a      	movs	r2, r3
    cccc:	4b14      	ldr	r3, [pc, #80]	; (cd20 <SendBeacon+0x12c>)
    ccce:	2141      	movs	r1, #65	; 0x41
    ccd0:	5499      	strb	r1, [r3, r2]
            #if ADDITIONAL_NODE_ID_SIZE > 0 
                for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    ccd2:	1dfb      	adds	r3, r7, #7
    ccd4:	2200      	movs	r2, #0
    ccd6:	701a      	strb	r2, [r3, #0]
    ccd8:	e011      	b.n	ccfe <SendBeacon+0x10a>
                {
                    MiApp_WriteData(AdditionalNodeID[i]);
    ccda:	4b0f      	ldr	r3, [pc, #60]	; (cd18 <SendBeacon+0x124>)
    ccdc:	781b      	ldrb	r3, [r3, #0]
    ccde:	1c5a      	adds	r2, r3, #1
    cce0:	b2d1      	uxtb	r1, r2
    cce2:	4a0d      	ldr	r2, [pc, #52]	; (cd18 <SendBeacon+0x124>)
    cce4:	7011      	strb	r1, [r2, #0]
    cce6:	0019      	movs	r1, r3
    cce8:	1dfb      	adds	r3, r7, #7
    ccea:	781b      	ldrb	r3, [r3, #0]
    ccec:	4a0f      	ldr	r2, [pc, #60]	; (cd2c <SendBeacon+0x138>)
    ccee:	5cd2      	ldrb	r2, [r2, r3]
    ccf0:	4b0b      	ldr	r3, [pc, #44]	; (cd20 <SendBeacon+0x12c>)
    ccf2:	545a      	strb	r2, [r3, r1]
                for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    ccf4:	1dfb      	adds	r3, r7, #7
    ccf6:	781a      	ldrb	r2, [r3, #0]
    ccf8:	1dfb      	adds	r3, r7, #7
    ccfa:	3201      	adds	r2, #1
    ccfc:	701a      	strb	r2, [r3, #0]
    ccfe:	1dfb      	adds	r3, r7, #7
    cd00:	781b      	ldrb	r3, [r3, #0]
    cd02:	2b01      	cmp	r3, #1
    cd04:	d9e9      	bls.n	ccda <SendBeacon+0xe6>
			
				printf("MyPID: %.4x\n\r",myPANID.Val);
			
                SendMACPacket(myPANID.v, NULL, PACKET_TYPE_RESERVE, MSK_ALT_SRC_ADDR);
            #else
                SendMACPacket(NULL, PACKET_TYPE_RESERVE);
    cd06:	2103      	movs	r1, #3
    cd08:	2000      	movs	r0, #0
    cd0a:	4b09      	ldr	r3, [pc, #36]	; (cd30 <SendBeacon+0x13c>)
    cd0c:	4798      	blx	r3
            #endif   
            
			//printf("Detecting...");
			//Printf("\r\nCommand Check z: Dump Connection\r\n");
			//DumpConnection(0xFF);
        }
    cd0e:	46c0      	nop			; (mov r8, r8)
    cd10:	46bd      	mov	sp, r7
    cd12:	b002      	add	sp, #8
    cd14:	bd80      	pop	{r7, pc}
    cd16:	46c0      	nop			; (mov r8, r8)
    cd18:	200012dc 	.word	0x200012dc
    cd1c:	20001290 	.word	0x20001290
    cd20:	200012e4 	.word	0x200012e4
    cd24:	20001140 	.word	0x20001140
    cd28:	20001284 	.word	0x20001284
    cd2c:	20000034 	.word	0x20000034
    cd30:	0000c52d 	.word	0x0000c52d

0000cd34 <SearchForLongAddress>:
     *
     * Overview:        This function looks up the index of a node or network
     *                  in the network table by long address.
     ********************************************************************/
    uint8_t SearchForLongAddress(void)
    {
    cd34:	b580      	push	{r7, lr}
    cd36:	b082      	sub	sp, #8
    cd38:	af00      	add	r7, sp, #0
        uint8_t i,j;   
        
        for(i=0;i<CONNECTION_SIZE;i++)
    cd3a:	1dfb      	adds	r3, r7, #7
    cd3c:	2200      	movs	r2, #0
    cd3e:	701a      	strb	r2, [r3, #0]
    cd40:	e03f      	b.n	cdc2 <SearchForLongAddress+0x8e>
        {
            if(ConnectionTable[i].status.bits.isValid && ConnectionTable[i].status.bits.longAddressValid)
    cd42:	1dfb      	adds	r3, r7, #7
    cd44:	781b      	ldrb	r3, [r3, #0]
    cd46:	4a23      	ldr	r2, [pc, #140]	; (cdd4 <SearchForLongAddress+0xa0>)
    cd48:	2108      	movs	r1, #8
    cd4a:	011b      	lsls	r3, r3, #4
    cd4c:	18d3      	adds	r3, r2, r3
    cd4e:	185b      	adds	r3, r3, r1
    cd50:	791b      	ldrb	r3, [r3, #4]
    cd52:	061b      	lsls	r3, r3, #24
    cd54:	0fdb      	lsrs	r3, r3, #31
    cd56:	b2db      	uxtb	r3, r3
    cd58:	2b00      	cmp	r3, #0
    cd5a:	d02d      	beq.n	cdb8 <SearchForLongAddress+0x84>
    cd5c:	1dfb      	adds	r3, r7, #7
    cd5e:	781b      	ldrb	r3, [r3, #0]
    cd60:	4a1c      	ldr	r2, [pc, #112]	; (cdd4 <SearchForLongAddress+0xa0>)
    cd62:	2108      	movs	r1, #8
    cd64:	011b      	lsls	r3, r3, #4
    cd66:	18d3      	adds	r3, r2, r3
    cd68:	185b      	adds	r3, r3, r1
    cd6a:	791b      	ldrb	r3, [r3, #4]
    cd6c:	075b      	lsls	r3, r3, #29
    cd6e:	0fdb      	lsrs	r3, r3, #31
    cd70:	b2db      	uxtb	r3, r3
    cd72:	2b00      	cmp	r3, #0
    cd74:	d020      	beq.n	cdb8 <SearchForLongAddress+0x84>
            {
                for(j=0;j<MY_ADDRESS_LENGTH;j++)
    cd76:	1dbb      	adds	r3, r7, #6
    cd78:	2200      	movs	r2, #0
    cd7a:	701a      	strb	r2, [r3, #0]
    cd7c:	e014      	b.n	cda8 <SearchForLongAddress+0x74>
                {
                    if(ConnectionTable[i].Address[j] != tempLongAddress[j])
    cd7e:	1dfb      	adds	r3, r7, #7
    cd80:	781a      	ldrb	r2, [r3, #0]
    cd82:	1dbb      	adds	r3, r7, #6
    cd84:	781b      	ldrb	r3, [r3, #0]
    cd86:	4913      	ldr	r1, [pc, #76]	; (cdd4 <SearchForLongAddress+0xa0>)
    cd88:	0112      	lsls	r2, r2, #4
    cd8a:	188a      	adds	r2, r1, r2
    cd8c:	18d3      	adds	r3, r2, r3
    cd8e:	3304      	adds	r3, #4
    cd90:	781a      	ldrb	r2, [r3, #0]
    cd92:	1dbb      	adds	r3, r7, #6
    cd94:	781b      	ldrb	r3, [r3, #0]
    cd96:	4910      	ldr	r1, [pc, #64]	; (cdd8 <SearchForLongAddress+0xa4>)
    cd98:	5ccb      	ldrb	r3, [r1, r3]
    cd9a:	429a      	cmp	r2, r3
    cd9c:	d10b      	bne.n	cdb6 <SearchForLongAddress+0x82>
                for(j=0;j<MY_ADDRESS_LENGTH;j++)
    cd9e:	1dbb      	adds	r3, r7, #6
    cda0:	781a      	ldrb	r2, [r3, #0]
    cda2:	1dbb      	adds	r3, r7, #6
    cda4:	3201      	adds	r2, #1
    cda6:	701a      	strb	r2, [r3, #0]
    cda8:	1dbb      	adds	r3, r7, #6
    cdaa:	781b      	ldrb	r3, [r3, #0]
    cdac:	2b07      	cmp	r3, #7
    cdae:	d9e6      	bls.n	cd7e <SearchForLongAddress+0x4a>
                    {
                        goto EndOfSearchLoop;
                    }
                }
                return i;
    cdb0:	1dfb      	adds	r3, r7, #7
    cdb2:	781b      	ldrb	r3, [r3, #0]
    cdb4:	e00a      	b.n	cdcc <SearchForLongAddress+0x98>
                        goto EndOfSearchLoop;
    cdb6:	46c0      	nop			; (mov r8, r8)
        for(i=0;i<CONNECTION_SIZE;i++)
    cdb8:	1dfb      	adds	r3, r7, #7
    cdba:	781a      	ldrb	r2, [r3, #0]
    cdbc:	1dfb      	adds	r3, r7, #7
    cdbe:	3201      	adds	r2, #1
    cdc0:	701a      	strb	r2, [r3, #0]
    cdc2:	1dfb      	adds	r3, r7, #7
    cdc4:	781b      	ldrb	r3, [r3, #0]
    cdc6:	2b0f      	cmp	r3, #15
    cdc8:	d9bb      	bls.n	cd42 <SearchForLongAddress+0xe>
            }
EndOfSearchLoop:
            ;
        }
        return 0xFF;
    cdca:	23ff      	movs	r3, #255	; 0xff
    }
    cdcc:	0018      	movs	r0, r3
    cdce:	46bd      	mov	sp, r7
    cdd0:	b002      	add	sp, #8
    cdd2:	bd80      	pop	{r7, pc}
    cdd4:	20001150 	.word	0x20001150
    cdd8:	20001288 	.word	0x20001288

0000cddc <AddNodeToNetworkTable>:
     *
     * Overview:        This function is used to insert new device into the 
     *                  network table (or update already existing entries)
     ********************************************************************/
    uint8_t AddNodeToNetworkTable(void)
    {
    cddc:	b590      	push	{r4, r7, lr}
    cdde:	b083      	sub	sp, #12
    cde0:	af00      	add	r7, sp, #0
        uint8_t handle = 0xFF;
    cde2:	1dfb      	adds	r3, r7, #7
    cde4:	22ff      	movs	r2, #255	; 0xff
    cde6:	701a      	strb	r2, [r3, #0]
        
        if(tempNodeStatus.bits.longAddressValid)
    cde8:	4b38      	ldr	r3, [pc, #224]	; (cecc <AddNodeToNetworkTable+0xf0>)
    cdea:	781b      	ldrb	r3, [r3, #0]
    cdec:	2204      	movs	r2, #4
    cdee:	4013      	ands	r3, r2
    cdf0:	b2db      	uxtb	r3, r3
    cdf2:	2b00      	cmp	r3, #0
    cdf4:	d005      	beq.n	ce02 <AddNodeToNetworkTable+0x26>
        {
            handle = SearchForLongAddress();
    cdf6:	1dfc      	adds	r4, r7, #7
    cdf8:	4b35      	ldr	r3, [pc, #212]	; (ced0 <AddNodeToNetworkTable+0xf4>)
    cdfa:	4798      	blx	r3
    cdfc:	0003      	movs	r3, r0
    cdfe:	7023      	strb	r3, [r4, #0]
    ce00:	e00b      	b.n	ce1a <AddNodeToNetworkTable+0x3e>
        }
        else
        {
            if(tempNodeStatus.bits.shortAddressValid)
    ce02:	4b32      	ldr	r3, [pc, #200]	; (cecc <AddNodeToNetworkTable+0xf0>)
    ce04:	781b      	ldrb	r3, [r3, #0]
    ce06:	2208      	movs	r2, #8
    ce08:	4013      	ands	r3, r2
    ce0a:	b2db      	uxtb	r3, r3
    ce0c:	2b00      	cmp	r3, #0
    ce0e:	d004      	beq.n	ce1a <AddNodeToNetworkTable+0x3e>
            {
                handle = SearchForShortAddress();
    ce10:	1dfc      	adds	r4, r7, #7
    ce12:	4b30      	ldr	r3, [pc, #192]	; (ced4 <AddNodeToNetworkTable+0xf8>)
    ce14:	4798      	blx	r3
    ce16:	0003      	movs	r3, r0
    ce18:	7023      	strb	r3, [r4, #0]
            }
        }
                                       
        if(handle==0xFF)
    ce1a:	1dfb      	adds	r3, r7, #7
    ce1c:	781b      	ldrb	r3, [r3, #0]
    ce1e:	2bff      	cmp	r3, #255	; 0xff
    ce20:	d104      	bne.n	ce2c <AddNodeToNetworkTable+0x50>
        {
            handle = findNextNetworkEntry();
    ce22:	1dfc      	adds	r4, r7, #7
    ce24:	4b2c      	ldr	r3, [pc, #176]	; (ced8 <AddNodeToNetworkTable+0xfc>)
    ce26:	4798      	blx	r3
    ce28:	0003      	movs	r3, r0
    ce2a:	7023      	strb	r3, [r4, #0]
        }
        
        if(handle != 0xFF)
    ce2c:	1dfb      	adds	r3, r7, #7
    ce2e:	781b      	ldrb	r3, [r3, #0]
    ce30:	2bff      	cmp	r3, #255	; 0xff
    ce32:	d044      	beq.n	cebe <AddNodeToNetworkTable+0xe2>
            //isFamily = 1, RxOnWhenIdle = 1, Is a neighbor and not a network,
            //not a P2P connection, short and long addresses valid as well 
            //as the entire entry
            
            //If it is not family then update the node information
            ConnectionTable[handle].status.Val = tempNodeStatus.Val;
    ce34:	1dfb      	adds	r3, r7, #7
    ce36:	781b      	ldrb	r3, [r3, #0]
    ce38:	4a24      	ldr	r2, [pc, #144]	; (cecc <AddNodeToNetworkTable+0xf0>)
    ce3a:	7811      	ldrb	r1, [r2, #0]
    ce3c:	4a27      	ldr	r2, [pc, #156]	; (cedc <AddNodeToNetworkTable+0x100>)
    ce3e:	011b      	lsls	r3, r3, #4
    ce40:	18d3      	adds	r3, r2, r3
    ce42:	330c      	adds	r3, #12
    ce44:	1c0a      	adds	r2, r1, #0
    ce46:	701a      	strb	r2, [r3, #0]
            if(tempNodeStatus.bits.longAddressValid)
    ce48:	4b20      	ldr	r3, [pc, #128]	; (cecc <AddNodeToNetworkTable+0xf0>)
    ce4a:	781b      	ldrb	r3, [r3, #0]
    ce4c:	2204      	movs	r2, #4
    ce4e:	4013      	ands	r3, r2
    ce50:	b2db      	uxtb	r3, r3
    ce52:	2b00      	cmp	r3, #0
    ce54:	d01b      	beq.n	ce8e <AddNodeToNetworkTable+0xb2>
            {
                uint8_t i;
                for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    ce56:	1dbb      	adds	r3, r7, #6
    ce58:	2200      	movs	r2, #0
    ce5a:	701a      	strb	r2, [r3, #0]
    ce5c:	e013      	b.n	ce86 <AddNodeToNetworkTable+0xaa>
                {
                    ConnectionTable[handle].Address[i] = tempLongAddress[i];
    ce5e:	1dfb      	adds	r3, r7, #7
    ce60:	781a      	ldrb	r2, [r3, #0]
    ce62:	1dbb      	adds	r3, r7, #6
    ce64:	781b      	ldrb	r3, [r3, #0]
    ce66:	1db9      	adds	r1, r7, #6
    ce68:	7809      	ldrb	r1, [r1, #0]
    ce6a:	481d      	ldr	r0, [pc, #116]	; (cee0 <AddNodeToNetworkTable+0x104>)
    ce6c:	5c40      	ldrb	r0, [r0, r1]
    ce6e:	491b      	ldr	r1, [pc, #108]	; (cedc <AddNodeToNetworkTable+0x100>)
    ce70:	0112      	lsls	r2, r2, #4
    ce72:	188a      	adds	r2, r1, r2
    ce74:	18d3      	adds	r3, r2, r3
    ce76:	3304      	adds	r3, #4
    ce78:	1c02      	adds	r2, r0, #0
    ce7a:	701a      	strb	r2, [r3, #0]
                for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    ce7c:	1dbb      	adds	r3, r7, #6
    ce7e:	781a      	ldrb	r2, [r3, #0]
    ce80:	1dbb      	adds	r3, r7, #6
    ce82:	3201      	adds	r2, #1
    ce84:	701a      	strb	r2, [r3, #0]
    ce86:	1dbb      	adds	r3, r7, #6
    ce88:	781b      	ldrb	r3, [r3, #0]
    ce8a:	2b07      	cmp	r3, #7
    ce8c:	d9e7      	bls.n	ce5e <AddNodeToNetworkTable+0x82>
                }
            }
                   
            if(tempNodeStatus.bits.shortAddressValid)
    ce8e:	4b0f      	ldr	r3, [pc, #60]	; (cecc <AddNodeToNetworkTable+0xf0>)
    ce90:	781b      	ldrb	r3, [r3, #0]
    ce92:	2208      	movs	r2, #8
    ce94:	4013      	ands	r3, r2
    ce96:	b2db      	uxtb	r3, r3
    ce98:	2b00      	cmp	r3, #0
    ce9a:	d009      	beq.n	ceb0 <AddNodeToNetworkTable+0xd4>
            {        
                ConnectionTable[handle].AltAddress.Val = tempShortAddress.Val;
    ce9c:	1dfb      	adds	r3, r7, #7
    ce9e:	781b      	ldrb	r3, [r3, #0]
    cea0:	4a10      	ldr	r2, [pc, #64]	; (cee4 <AddNodeToNetworkTable+0x108>)
    cea2:	8811      	ldrh	r1, [r2, #0]
    cea4:	4a0d      	ldr	r2, [pc, #52]	; (cedc <AddNodeToNetworkTable+0x100>)
    cea6:	011b      	lsls	r3, r3, #4
    cea8:	18d3      	adds	r3, r2, r3
    ceaa:	3302      	adds	r3, #2
    ceac:	1c0a      	adds	r2, r1, #0
    ceae:	801a      	strh	r2, [r3, #0]
            }
            
            ConnectionTable[handle].PANID.Val = tempPANID.Val;
    ceb0:	1dfb      	adds	r3, r7, #7
    ceb2:	781a      	ldrb	r2, [r3, #0]
    ceb4:	4b0c      	ldr	r3, [pc, #48]	; (cee8 <AddNodeToNetworkTable+0x10c>)
    ceb6:	8819      	ldrh	r1, [r3, #0]
    ceb8:	4b08      	ldr	r3, [pc, #32]	; (cedc <AddNodeToNetworkTable+0x100>)
    ceba:	0112      	lsls	r2, r2, #4
    cebc:	52d1      	strh	r1, [r2, r3]
            #if defined(ENABLE_SECURITY)
                IncomingFrameCounter[handle].Val = 0;
            #endif
        }

        return handle;
    cebe:	1dfb      	adds	r3, r7, #7
    cec0:	781b      	ldrb	r3, [r3, #0]
    }
    cec2:	0018      	movs	r0, r3
    cec4:	46bd      	mov	sp, r7
    cec6:	b003      	add	sp, #12
    cec8:	bd90      	pop	{r4, r7, pc}
    ceca:	46c0      	nop			; (mov r8, r8)
    cecc:	200012c8 	.word	0x200012c8
    ced0:	0000cd35 	.word	0x0000cd35
    ced4:	0000cb71 	.word	0x0000cb71
    ced8:	0000c5d5 	.word	0x0000c5d5
    cedc:	20001150 	.word	0x20001150
    cee0:	20001288 	.word	0x20001288
    cee4:	200012e0 	.word	0x200012e0
    cee8:	200012c0 	.word	0x200012c0

0000ceec <MiApp_ProtocolInit>:


    
    
    bool MiApp_ProtocolInit(bool bNetworkFreezer)
    {
    ceec:	b580      	push	{r7, lr}
    ceee:	b08a      	sub	sp, #40	; 0x28
    cef0:	af00      	add	r7, sp, #0
    cef2:	0002      	movs	r2, r0
    cef4:	1dfb      	adds	r3, r7, #7
    cef6:	701a      	strb	r2, [r3, #0]
			#endif
        
        #endif
        
        #if defined(ENABLE_NETWORK_FREEZER)
            NVMInit();
    cef8:	4b78      	ldr	r3, [pc, #480]	; (d0dc <MiApp_ProtocolInit+0x1f0>)
    cefa:	4798      	blx	r3
        #endif

        myShortAddress.Val = 0xFFFF;
    cefc:	4b78      	ldr	r3, [pc, #480]	; (d0e0 <MiApp_ProtocolInit+0x1f4>)
    cefe:	2201      	movs	r2, #1
    cf00:	4252      	negs	r2, r2
    cf02:	801a      	strh	r2, [r3, #0]
        myPANID.Val = MY_PAN_ID;
    cf04:	4b77      	ldr	r3, [pc, #476]	; (d0e4 <MiApp_ProtocolInit+0x1f8>)
    cf06:	681b      	ldr	r3, [r3, #0]
    cf08:	b29a      	uxth	r2, r3
    cf0a:	4b77      	ldr	r3, [pc, #476]	; (d0e8 <MiApp_ProtocolInit+0x1fc>)
    cf0c:	801a      	strh	r2, [r3, #0]
		ChannelMAP = CHANNEL_MAP;
    cf0e:	4b77      	ldr	r3, [pc, #476]	; (d0ec <MiApp_ProtocolInit+0x200>)
    cf10:	4a77      	ldr	r2, [pc, #476]	; (d0f0 <MiApp_ProtocolInit+0x204>)
    cf12:	601a      	str	r2, [r3, #0]
    
		//clear net info
		memset(&networkInfo,0x00,sizeof(networkInfo));
    cf14:	4b77      	ldr	r3, [pc, #476]	; (d0f4 <MiApp_ProtocolInit+0x208>)
    cf16:	2228      	movs	r2, #40	; 0x28
    cf18:	2100      	movs	r1, #0
    cf1a:	0018      	movs	r0, r3
    cf1c:	4b76      	ldr	r3, [pc, #472]	; (d0f8 <MiApp_ProtocolInit+0x20c>)
    cf1e:	4798      	blx	r3
	
        //clear the network table
        for(i = 0; i < CONNECTION_SIZE; i++)
    cf20:	2327      	movs	r3, #39	; 0x27
    cf22:	18fb      	adds	r3, r7, r3
    cf24:	2200      	movs	r2, #0
    cf26:	701a      	strb	r2, [r3, #0]
    cf28:	e00f      	b.n	cf4a <MiApp_ProtocolInit+0x5e>
        {
            ConnectionTable[i].status.Val = 0;
    cf2a:	2327      	movs	r3, #39	; 0x27
    cf2c:	18fb      	adds	r3, r7, r3
    cf2e:	781b      	ldrb	r3, [r3, #0]
    cf30:	4a72      	ldr	r2, [pc, #456]	; (d0fc <MiApp_ProtocolInit+0x210>)
    cf32:	011b      	lsls	r3, r3, #4
    cf34:	18d3      	adds	r3, r2, r3
    cf36:	330c      	adds	r3, #12
    cf38:	2200      	movs	r2, #0
    cf3a:	701a      	strb	r2, [r3, #0]
        for(i = 0; i < CONNECTION_SIZE; i++)
    cf3c:	2327      	movs	r3, #39	; 0x27
    cf3e:	18fb      	adds	r3, r7, r3
    cf40:	781a      	ldrb	r2, [r3, #0]
    cf42:	2327      	movs	r3, #39	; 0x27
    cf44:	18fb      	adds	r3, r7, r3
    cf46:	3201      	adds	r2, #1
    cf48:	701a      	strb	r2, [r3, #0]
    cf4a:	2327      	movs	r3, #39	; 0x27
    cf4c:	18fb      	adds	r3, r7, r3
    cf4e:	781b      	ldrb	r3, [r3, #0]
    cf50:	2b0f      	cmp	r3, #15
    cf52:	d9ea      	bls.n	cf2a <MiApp_ProtocolInit+0x3e>
        }
        
        #ifdef NWK_ROLE_COORDINATOR
            for(i=0;i< NUM_COORDINATOR/8;i++)
    cf54:	2327      	movs	r3, #39	; 0x27
    cf56:	18fb      	adds	r3, r7, r3
    cf58:	2200      	movs	r2, #0
    cf5a:	701a      	strb	r2, [r3, #0]
    cf5c:	46c0      	nop			; (mov r8, r8)
            {
                RoutingTable[i] = 0;
            }
            for(i=0; i < NUM_COORDINATOR; i++)
    cf5e:	2327      	movs	r3, #39	; 0x27
    cf60:	18fb      	adds	r3, r7, r3
    cf62:	2200      	movs	r2, #0
    cf64:	701a      	strb	r2, [r3, #0]
    cf66:	e00c      	b.n	cf82 <MiApp_ProtocolInit+0x96>
            {
                RouterFailures[i] = 0;
    cf68:	2327      	movs	r3, #39	; 0x27
    cf6a:	18fb      	adds	r3, r7, r3
    cf6c:	781b      	ldrb	r3, [r3, #0]
    cf6e:	4a64      	ldr	r2, [pc, #400]	; (d100 <MiApp_ProtocolInit+0x214>)
    cf70:	2100      	movs	r1, #0
    cf72:	54d1      	strb	r1, [r2, r3]
            for(i=0; i < NUM_COORDINATOR; i++)
    cf74:	2327      	movs	r3, #39	; 0x27
    cf76:	18fb      	adds	r3, r7, r3
    cf78:	781a      	ldrb	r2, [r3, #0]
    cf7a:	2327      	movs	r3, #39	; 0x27
    cf7c:	18fb      	adds	r3, r7, r3
    cf7e:	3201      	adds	r2, #1
    cf80:	701a      	strb	r2, [r3, #0]
    cf82:	2327      	movs	r3, #39	; 0x27
    cf84:	18fb      	adds	r3, r7, r3
    cf86:	781b      	ldrb	r3, [r3, #0]
    cf88:	2b00      	cmp	r3, #0
    cf8a:	d0ed      	beq.n	cf68 <MiApp_ProtocolInit+0x7c>
            }
            role = ROLE_FFD_END_DEVICE;
    cf8c:	4b5d      	ldr	r3, [pc, #372]	; (d104 <MiApp_ProtocolInit+0x218>)
    cf8e:	2200      	movs	r2, #0
    cf90:	701a      	strb	r2, [r3, #0]
            MiWiPROStatus.Val = 0;
    cf92:	4b5d      	ldr	r3, [pc, #372]	; (d108 <MiApp_ProtocolInit+0x21c>)
    cf94:	2200      	movs	r2, #0
    cf96:	701a      	strb	r2, [r3, #0]
        #endif
        MiWiPROStateMachine.Val = 0;
    cf98:	4b5c      	ldr	r3, [pc, #368]	; (d10c <MiApp_ProtocolInit+0x220>)
    cf9a:	2200      	movs	r2, #0
    cf9c:	701a      	strb	r2, [r3, #0]
        #if defined(MiWiPRONVMStatus)
            MiWiPRONVMStatus.Val = 0;
        #endif
        
        openSocketInfo.status.Val = 0;
    cf9e:	4b5c      	ldr	r3, [pc, #368]	; (d110 <MiApp_ProtocolInit+0x224>)
    cfa0:	2200      	movs	r2, #0
    cfa2:	701a      	strb	r2, [r3, #0]
        MiWiPROCapacityInfo.Val = 0;
    cfa4:	4b5b      	ldr	r3, [pc, #364]	; (d114 <MiApp_ProtocolInit+0x228>)
    cfa6:	2200      	movs	r2, #0
    cfa8:	701a      	strb	r2, [r3, #0]
        
        InitSymbolTimer();
    cfaa:	4b5b      	ldr	r3, [pc, #364]	; (d118 <MiApp_ProtocolInit+0x22c>)
    cfac:	4798      	blx	r3
        
        TxData = 0;
    cfae:	4b5b      	ldr	r3, [pc, #364]	; (d11c <MiApp_ProtocolInit+0x230>)
    cfb0:	2200      	movs	r2, #0
    cfb2:	701a      	strb	r2, [r3, #0]
for(i=MY_ADDRESS_LENGTH-1;i>-1;i--)
	printf("%.2x", myLongAddress[i]);
printf("\n\r");
#endif        

        MIP.actionFlags.Val = 0;
    cfb4:	231c      	movs	r3, #28
    cfb6:	18fb      	adds	r3, r7, r3
    cfb8:	2200      	movs	r2, #0
    cfba:	701a      	strb	r2, [r3, #0]
        MIP.actionFlags.bits.PAddrLength = MY_ADDRESS_LENGTH;
    cfbc:	231c      	movs	r3, #28
    cfbe:	18fb      	adds	r3, r7, r3
    cfc0:	781a      	ldrb	r2, [r3, #0]
    cfc2:	2178      	movs	r1, #120	; 0x78
    cfc4:	438a      	bics	r2, r1
    cfc6:	1c11      	adds	r1, r2, #0
    cfc8:	2240      	movs	r2, #64	; 0x40
    cfca:	430a      	orrs	r2, r1
    cfcc:	701a      	strb	r2, [r3, #0]
        MIP.actionFlags.bits.CCAEnable = 1;
    cfce:	231c      	movs	r3, #28
    cfd0:	18fb      	adds	r3, r7, r3
    cfd2:	781a      	ldrb	r2, [r3, #0]
    cfd4:	2102      	movs	r1, #2
    cfd6:	430a      	orrs	r2, r1
    cfd8:	701a      	strb	r2, [r3, #0]
        MIP.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
    cfda:	231c      	movs	r3, #28
    cfdc:	18fb      	adds	r3, r7, r3
    cfde:	1dfa      	adds	r2, r7, #7
    cfe0:	7812      	ldrb	r2, [r2, #0]
    cfe2:	2101      	movs	r1, #1
    cfe4:	400a      	ands	r2, r1
    cfe6:	0090      	lsls	r0, r2, #2
    cfe8:	781a      	ldrb	r2, [r3, #0]
    cfea:	2104      	movs	r1, #4
    cfec:	438a      	bics	r2, r1
    cfee:	1c11      	adds	r1, r2, #0
    cff0:	1c02      	adds	r2, r0, #0
    cff2:	430a      	orrs	r2, r1
    cff4:	701a      	strb	r2, [r3, #0]
        MIP.PAddress = myLongAddress;
    cff6:	231c      	movs	r3, #28
    cff8:	18fb      	adds	r3, r7, r3
    cffa:	4a49      	ldr	r2, [pc, #292]	; (d120 <MiApp_ProtocolInit+0x234>)
    cffc:	605a      	str	r2, [r3, #4]
        MiMAC_Init(MIP);
    cffe:	231c      	movs	r3, #28
    d000:	18fb      	adds	r3, r7, r3
    d002:	6818      	ldr	r0, [r3, #0]
    d004:	6859      	ldr	r1, [r3, #4]
    d006:	4b47      	ldr	r3, [pc, #284]	; (d124 <MiApp_ProtocolInit+0x238>)
    d008:	4798      	blx	r3

        MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
    d00a:	4a37      	ldr	r2, [pc, #220]	; (d0e8 <MiApp_ProtocolInit+0x1fc>)
    d00c:	4b34      	ldr	r3, [pc, #208]	; (d0e0 <MiApp_ProtocolInit+0x1f4>)
    d00e:	0011      	movs	r1, r2
    d010:	0018      	movs	r0, r3
    d012:	4b45      	ldr	r3, [pc, #276]	; (d128 <MiApp_ProtocolInit+0x23c>)
    d014:	4798      	blx	r3
        MiApp_SetChannel(currentChannel);
    d016:	4b45      	ldr	r3, [pc, #276]	; (d12c <MiApp_ProtocolInit+0x240>)
    d018:	781b      	ldrb	r3, [r3, #0]
    d01a:	0018      	movs	r0, r3
    d01c:	4b44      	ldr	r3, [pc, #272]	; (d130 <MiApp_ProtocolInit+0x244>)
    d01e:	4798      	blx	r3
        
		MiApp_ConnectionMode(DISABLE_ALL_CONN);
    d020:	2003      	movs	r0, #3
    d022:	4b44      	ldr	r3, [pc, #272]	; (d134 <MiApp_ProtocolInit+0x248>)
    d024:	4798      	blx	r3
		
        //#if !defined(ENABLE_SLEEP)
            MiWiPROCapacityInfo.bits.Sleep = 1;		//ENABLE_SLEEP 으로 실행되지 않을때 COORDINATOR 에서 보낸 "Unicast Packet" ENDDEVICE 가 받지 못함.
    d026:	4b3b      	ldr	r3, [pc, #236]	; (d114 <MiApp_ProtocolInit+0x228>)
    d028:	781a      	ldrb	r2, [r3, #0]
    d02a:	2101      	movs	r1, #1
    d02c:	430a      	orrs	r2, r1
    d02e:	701a      	strb	r2, [r3, #0]
        //#endif
        #if defined(ENABLE_SECURITY)
            MiWiPROCapacityInfo.bits.Security = 1;
        #endif
        MiWiPROCapacityInfo.bits.ConnMode = ConnMode;
    d030:	4b41      	ldr	r3, [pc, #260]	; (d138 <MiApp_ProtocolInit+0x24c>)
    d032:	781b      	ldrb	r3, [r3, #0]
    d034:	1c1a      	adds	r2, r3, #0
    d036:	2303      	movs	r3, #3
    d038:	4013      	ands	r3, r2
    d03a:	b2da      	uxtb	r2, r3
    d03c:	4b35      	ldr	r3, [pc, #212]	; (d114 <MiApp_ProtocolInit+0x228>)
    d03e:	2103      	movs	r1, #3
    d040:	400a      	ands	r2, r1
    d042:	0110      	lsls	r0, r2, #4
    d044:	781a      	ldrb	r2, [r3, #0]
    d046:	2130      	movs	r1, #48	; 0x30
    d048:	438a      	bics	r2, r1
    d04a:	1c11      	adds	r1, r2, #0
    d04c:	1c02      	adds	r2, r0, #0
    d04e:	430a      	orrs	r2, r1
    d050:	701a      	strb	r2, [r3, #0]
        #ifdef NWK_ROLE_COORDINATOR
            MiWiPROCapacityInfo.bits.CoordCap = 1;
    d052:	4b30      	ldr	r3, [pc, #192]	; (d114 <MiApp_ProtocolInit+0x228>)
    d054:	781a      	ldrb	r2, [r3, #0]
    d056:	2140      	movs	r1, #64	; 0x40
    d058:	430a      	orrs	r2, r1
    d05a:	701a      	strb	r2, [r3, #0]
            MiWiPROCapacityInfo.bits.Role = role;
    d05c:	4b29      	ldr	r3, [pc, #164]	; (d104 <MiApp_ProtocolInit+0x218>)
    d05e:	781b      	ldrb	r3, [r3, #0]
    d060:	1c1a      	adds	r2, r3, #0
    d062:	2303      	movs	r3, #3
    d064:	4013      	ands	r3, r2
    d066:	b2da      	uxtb	r2, r3
    d068:	4b2a      	ldr	r3, [pc, #168]	; (d114 <MiApp_ProtocolInit+0x228>)
    d06a:	2103      	movs	r1, #3
    d06c:	400a      	ands	r2, r1
    d06e:	1890      	adds	r0, r2, r2
    d070:	781a      	ldrb	r2, [r3, #0]
    d072:	2106      	movs	r1, #6
    d074:	438a      	bics	r2, r1
    d076:	1c11      	adds	r1, r2, #0
    d078:	1c02      	adds	r2, r0, #0
    d07a:	430a      	orrs	r2, r1
    d07c:	701a      	strb	r2, [r3, #0]
            MiWiPRONVMStatus.Val = 0;
    d07e:	4b2f      	ldr	r3, [pc, #188]	; (d13c <MiApp_ProtocolInit+0x250>)
    d080:	2200      	movs	r2, #0
    d082:	701a      	strb	r2, [r3, #0]
					
            backgroundTaskTick = MiWi_TickGet();
    d084:	4b2e      	ldr	r3, [pc, #184]	; (d140 <MiApp_ProtocolInit+0x254>)
    d086:	4798      	blx	r3
    d088:	0003      	movs	r3, r0
    d08a:	001a      	movs	r2, r3
    d08c:	4b2d      	ldr	r3, [pc, #180]	; (d144 <MiApp_ProtocolInit+0x258>)
    d08e:	601a      	str	r2, [r3, #0]
						
            #if defined(ENABLE_ROUTING_UPDATE)
                RoutingUpdateTick.Val = backgroundTaskTick.Val;
    d090:	4b2c      	ldr	r3, [pc, #176]	; (d144 <MiApp_ProtocolInit+0x258>)
    d092:	681a      	ldr	r2, [r3, #0]
    d094:	4b2c      	ldr	r3, [pc, #176]	; (d148 <MiApp_ProtocolInit+0x25c>)
    d096:	601a      	str	r2, [r3, #0]
                for(i = 0; i < NUM_COORDINATOR; i++)
    d098:	2327      	movs	r3, #39	; 0x27
    d09a:	18fb      	adds	r3, r7, r3
    d09c:	2200      	movs	r2, #0
    d09e:	701a      	strb	r2, [r3, #0]
    d0a0:	e00c      	b.n	d0bc <MiApp_ProtocolInit+0x1d0>
                {
                    RoutingUpdateCounter[i] = 0;
    d0a2:	2327      	movs	r3, #39	; 0x27
    d0a4:	18fb      	adds	r3, r7, r3
    d0a6:	781b      	ldrb	r3, [r3, #0]
    d0a8:	4a28      	ldr	r2, [pc, #160]	; (d14c <MiApp_ProtocolInit+0x260>)
    d0aa:	2100      	movs	r1, #0
    d0ac:	54d1      	strb	r1, [r2, r3]
                for(i = 0; i < NUM_COORDINATOR; i++)
    d0ae:	2327      	movs	r3, #39	; 0x27
    d0b0:	18fb      	adds	r3, r7, r3
    d0b2:	781a      	ldrb	r2, [r3, #0]
    d0b4:	2327      	movs	r3, #39	; 0x27
    d0b6:	18fb      	adds	r3, r7, r3
    d0b8:	3201      	adds	r2, #1
    d0ba:	701a      	strb	r2, [r3, #0]
    d0bc:	2327      	movs	r3, #39	; 0x27
    d0be:	18fb      	adds	r3, r7, r3
    d0c0:	781b      	ldrb	r3, [r3, #0]
    d0c2:	2b00      	cmp	r3, #0
    d0c4:	d0ed      	beq.n	d0a2 <MiApp_ProtocolInit+0x1b6>
                TimeSlotTick.Val = ((ONE_SECOND) * RFD_WAKEUP_INTERVAL) / TIME_SYNC_SLOTS;
            #endif
        #endif
        
        #if defined(ENABLE_FREQUENCY_AGILITY) && defined(NWK_ROLE_COORDINATOR)
            FrequencyAgilityInfo.status.Val = 0;
    d0c6:	4b22      	ldr	r3, [pc, #136]	; (d150 <MiApp_ProtocolInit+0x264>)
    d0c8:	2200      	movs	r2, #0
    d0ca:	701a      	strb	r2, [r3, #0]
        #endif
        
        MiWiPROSeqNum = 0x00;//TMRL;
    d0cc:	4b21      	ldr	r3, [pc, #132]	; (d154 <MiApp_ProtocolInit+0x268>)
    d0ce:	2200      	movs	r2, #0
    d0d0:	701a      	strb	r2, [r3, #0]

        //RFIF = 0;
        //RFIE = 1;
		
        return true;        
    d0d2:	2301      	movs	r3, #1
    
    }
    d0d4:	0018      	movs	r0, r3
    d0d6:	46bd      	mov	sp, r7
    d0d8:	b00a      	add	sp, #40	; 0x28
    d0da:	bd80      	pop	{r7, pc}
    d0dc:	0000e7f9 	.word	0x0000e7f9
    d0e0:	20001140 	.word	0x20001140
    d0e4:	20000d54 	.word	0x20000d54
    d0e8:	20001290 	.word	0x20001290
    d0ec:	2000114c 	.word	0x2000114c
    d0f0:	08880000 	.word	0x08880000
    d0f4:	2000151c 	.word	0x2000151c
    d0f8:	00017799 	.word	0x00017799
    d0fc:	20001150 	.word	0x20001150
    d100:	20001280 	.word	0x20001280
    d104:	200012de 	.word	0x200012de
    d108:	200012c4 	.word	0x200012c4
    d10c:	20001144 	.word	0x20001144
    d110:	20001250 	.word	0x20001250
    d114:	20001284 	.word	0x20001284
    d118:	0000eb11 	.word	0x0000eb11
    d11c:	200012dc 	.word	0x200012dc
    d120:	20000010 	.word	0x20000010
    d124:	0000fc99 	.word	0x0000fc99
    d128:	00010211 	.word	0x00010211
    d12c:	200014b5 	.word	0x200014b5
    d130:	0000d159 	.word	0x0000d159
    d134:	0000d199 	.word	0x0000d199
    d138:	20000018 	.word	0x20000018
    d13c:	200013c4 	.word	0x200013c4
    d140:	0000ebad 	.word	0x0000ebad
    d144:	2000113c 	.word	0x2000113c
    d148:	20001148 	.word	0x20001148
    d14c:	20001500 	.word	0x20001500
    d150:	200012cc 	.word	0x200012cc
    d154:	200012dd 	.word	0x200012dd

0000d158 <MiApp_SetChannel>:
    }    
    #endif
    
    
bool MiApp_SetChannel(uint8_t channel)
{
    d158:	b580      	push	{r7, lr}
    d15a:	b082      	sub	sp, #8
    d15c:	af00      	add	r7, sp, #0
    d15e:	0002      	movs	r2, r0
    d160:	1dfb      	adds	r3, r7, #7
    d162:	701a      	strb	r2, [r3, #0]
	//uint8_t Conv_channel;
 
	 
		MiMAC_SetChannel(channel);//kwlee
    d164:	1dfb      	adds	r3, r7, #7
    d166:	781b      	ldrb	r3, [r3, #0]
    d168:	0018      	movs	r0, r3
    d16a:	4b07      	ldr	r3, [pc, #28]	; (d188 <MiApp_SetChannel+0x30>)
    d16c:	4798      	blx	r3
        
        #if defined(ENABLE_NETWORK_FREEZER)
            nvmPutCurrentChannel(&currentChannel);
    d16e:	4b07      	ldr	r3, [pc, #28]	; (d18c <MiApp_SetChannel+0x34>)
    d170:	8819      	ldrh	r1, [r3, #0]
    d172:	4b07      	ldr	r3, [pc, #28]	; (d190 <MiApp_SetChannel+0x38>)
    d174:	2201      	movs	r2, #1
    d176:	0018      	movs	r0, r3
    d178:	4b06      	ldr	r3, [pc, #24]	; (d194 <MiApp_SetChannel+0x3c>)
    d17a:	4798      	blx	r3
        #endif
        return true;
    d17c:	2301      	movs	r3, #1
    
    
}    
    d17e:	0018      	movs	r0, r3
    d180:	46bd      	mov	sp, r7
    d182:	b002      	add	sp, #8
    d184:	bd80      	pop	{r7, pc}
    d186:	46c0      	nop			; (mov r8, r8)
    d188:	0000fc05 	.word	0x0000fc05
    d18c:	2000158e 	.word	0x2000158e
    d190:	200014b5 	.word	0x200014b5
    d194:	0000e9c1 	.word	0x0000e9c1

0000d198 <MiApp_ConnectionMode>:
 * Remarks:    
 *      None
 *
 *****************************************************************************************/ 
void MiApp_ConnectionMode(INPUT uint8_t Mode)
{
    d198:	b580      	push	{r7, lr}
    d19a:	b082      	sub	sp, #8
    d19c:	af00      	add	r7, sp, #0
    d19e:	0002      	movs	r2, r0
    d1a0:	1dfb      	adds	r3, r7, #7
    d1a2:	701a      	strb	r2, [r3, #0]
    if( Mode > 3 )
    d1a4:	1dfb      	adds	r3, r7, #7
    d1a6:	781b      	ldrb	r3, [r3, #0]
    d1a8:	2b03      	cmp	r3, #3
    d1aa:	d81c      	bhi.n	d1e6 <MiApp_ConnectionMode+0x4e>
    {
        return;
    }
    ConnMode = Mode;
    d1ac:	4b10      	ldr	r3, [pc, #64]	; (d1f0 <MiApp_ConnectionMode+0x58>)
    d1ae:	1dfa      	adds	r2, r7, #7
    d1b0:	7812      	ldrb	r2, [r2, #0]
    d1b2:	701a      	strb	r2, [r3, #0]
    MiWiPROCapacityInfo.bits.ConnMode = ConnMode;
    d1b4:	4b0e      	ldr	r3, [pc, #56]	; (d1f0 <MiApp_ConnectionMode+0x58>)
    d1b6:	781b      	ldrb	r3, [r3, #0]
    d1b8:	1c1a      	adds	r2, r3, #0
    d1ba:	2303      	movs	r3, #3
    d1bc:	4013      	ands	r3, r2
    d1be:	b2da      	uxtb	r2, r3
    d1c0:	4b0c      	ldr	r3, [pc, #48]	; (d1f4 <MiApp_ConnectionMode+0x5c>)
    d1c2:	2103      	movs	r1, #3
    d1c4:	400a      	ands	r2, r1
    d1c6:	0110      	lsls	r0, r2, #4
    d1c8:	781a      	ldrb	r2, [r3, #0]
    d1ca:	2130      	movs	r1, #48	; 0x30
    d1cc:	438a      	bics	r2, r1
    d1ce:	1c11      	adds	r1, r2, #0
    d1d0:	1c02      	adds	r2, r0, #0
    d1d2:	430a      	orrs	r2, r1
    d1d4:	701a      	strb	r2, [r3, #0]
    
    #if defined(ENABLE_NETWORK_FREEZER)
        nvmPutConnMode(&ConnMode);               //ihkim
    d1d6:	4b08      	ldr	r3, [pc, #32]	; (d1f8 <MiApp_ConnectionMode+0x60>)
    d1d8:	8819      	ldrh	r1, [r3, #0]
    d1da:	4b05      	ldr	r3, [pc, #20]	; (d1f0 <MiApp_ConnectionMode+0x58>)
    d1dc:	2201      	movs	r2, #1
    d1de:	0018      	movs	r0, r3
    d1e0:	4b06      	ldr	r3, [pc, #24]	; (d1fc <MiApp_ConnectionMode+0x64>)
    d1e2:	4798      	blx	r3
    d1e4:	e000      	b.n	d1e8 <MiApp_ConnectionMode+0x50>
        return;
    d1e6:	46c0      	nop			; (mov r8, r8)
    #endif
}    
    d1e8:	46bd      	mov	sp, r7
    d1ea:	b002      	add	sp, #8
    d1ec:	bd80      	pop	{r7, pc}
    d1ee:	46c0      	nop			; (mov r8, r8)
    d1f0:	20000018 	.word	0x20000018
    d1f4:	20001284 	.word	0x20001284
    d1f8:	20001586 	.word	0x20001586
    d1fc:	0000e9c1 	.word	0x0000e9c1

0000d200 <MiApp_SearchConnection>:
 *      None
 *
 *
 ****************************************************************************************/
uint8_t MiApp_SearchConnection(uint8_t ScanDuration, uint32_t ChannelMap)
{
    d200:	b580      	push	{r7, lr}
    d202:	b086      	sub	sp, #24
    d204:	af00      	add	r7, sp, #0
    d206:	0002      	movs	r2, r0
    d208:	6039      	str	r1, [r7, #0]
    d20a:	1dfb      	adds	r3, r7, #7
    d20c:	701a      	strb	r2, [r3, #0]
	
    uint8_t i;
    uint32_t channelMask = 0x00000001;  
    d20e:	2301      	movs	r3, #1
    d210:	617b      	str	r3, [r7, #20]
    uint8_t search_count = 0,backupChannel = currentChannel;
    d212:	2313      	movs	r3, #19
    d214:	18fb      	adds	r3, r7, r3
    d216:	2200      	movs	r2, #0
    d218:	701a      	strb	r2, [r3, #0]
    d21a:	2312      	movs	r3, #18
    d21c:	18fb      	adds	r3, r7, r3
    d21e:	4a35      	ldr	r2, [pc, #212]	; (d2f4 <MiApp_SearchConnection+0xf4>)
    d220:	7812      	ldrb	r2, [r2, #0]
    d222:	701a      	strb	r2, [r3, #0]
    MIWI_TICK t1, t2;
	        
    MiWiPROStateMachine.bits.searchingForNetwork = 1;
    d224:	4b34      	ldr	r3, [pc, #208]	; (d2f8 <MiApp_SearchConnection+0xf8>)
    d226:	781a      	ldrb	r2, [r3, #0]
    d228:	2101      	movs	r1, #1
    d22a:	430a      	orrs	r2, r1
    d22c:	701a      	strb	r2, [r3, #0]
    
			search_count++;
    d22e:	2313      	movs	r3, #19
    d230:	18fb      	adds	r3, r7, r3
    d232:	781a      	ldrb	r2, [r3, #0]
    d234:	2313      	movs	r3, #19
    d236:	18fb      	adds	r3, r7, r3
    d238:	3201      	adds	r2, #1
    d23a:	701a      	strb	r2, [r3, #0]
			//RF_CHANNEL
			currentChannel=RF_CHANNEL;
    d23c:	4b2f      	ldr	r3, [pc, #188]	; (d2fc <MiApp_SearchConnection+0xfc>)
    d23e:	781a      	ldrb	r2, [r3, #0]
    d240:	4b2c      	ldr	r3, [pc, #176]	; (d2f4 <MiApp_SearchConnection+0xf4>)
    d242:	701a      	strb	r2, [r3, #0]
            printf("Scan Channel %d \r\n",RF_CHANNEL);
    d244:	4b2d      	ldr	r3, [pc, #180]	; (d2fc <MiApp_SearchConnection+0xfc>)
    d246:	781b      	ldrb	r3, [r3, #0]
    d248:	001a      	movs	r2, r3
    d24a:	4b2d      	ldr	r3, [pc, #180]	; (d300 <MiApp_SearchConnection+0x100>)
    d24c:	0011      	movs	r1, r2
    d24e:	0018      	movs	r0, r3
    d250:	4b2c      	ldr	r3, [pc, #176]	; (d304 <MiApp_SearchConnection+0x104>)
    d252:	4798      	blx	r3
            			
            /* choose appropriate channel */
            MiApp_SetChannel( RF_CHANNEL );
    d254:	4b29      	ldr	r3, [pc, #164]	; (d2fc <MiApp_SearchConnection+0xfc>)
    d256:	781b      	ldrb	r3, [r3, #0]
    d258:	0018      	movs	r0, r3
    d25a:	4b2b      	ldr	r3, [pc, #172]	; (d308 <MiApp_SearchConnection+0x108>)
    d25c:	4798      	blx	r3
 
            MAC_FlushTx();
    d25e:	4b2b      	ldr	r3, [pc, #172]	; (d30c <MiApp_SearchConnection+0x10c>)
    d260:	2200      	movs	r2, #0
    d262:	701a      	strb	r2, [r3, #0]
            MiApp_WriteData(MAC_COMMAND_BEACON_REQUEST);
    d264:	4b29      	ldr	r3, [pc, #164]	; (d30c <MiApp_SearchConnection+0x10c>)
    d266:	781b      	ldrb	r3, [r3, #0]
    d268:	1c5a      	adds	r2, r3, #1
    d26a:	b2d1      	uxtb	r1, r2
    d26c:	4a27      	ldr	r2, [pc, #156]	; (d30c <MiApp_SearchConnection+0x10c>)
    d26e:	7011      	strb	r1, [r2, #0]
    d270:	001a      	movs	r2, r3
    d272:	4b27      	ldr	r3, [pc, #156]	; (d310 <MiApp_SearchConnection+0x110>)
    d274:	2107      	movs	r1, #7
    d276:	5499      	strb	r1, [r3, r2]
            MiApp_WriteData(RF_CHANNEL);	// == MiApp_WriteData(currentChannel);
    d278:	4b24      	ldr	r3, [pc, #144]	; (d30c <MiApp_SearchConnection+0x10c>)
    d27a:	781b      	ldrb	r3, [r3, #0]
    d27c:	1c5a      	adds	r2, r3, #1
    d27e:	b2d1      	uxtb	r1, r2
    d280:	4a22      	ldr	r2, [pc, #136]	; (d30c <MiApp_SearchConnection+0x10c>)
    d282:	7011      	strb	r1, [r2, #0]
    d284:	001a      	movs	r2, r3
    d286:	4b1d      	ldr	r3, [pc, #116]	; (d2fc <MiApp_SearchConnection+0xfc>)
    d288:	7819      	ldrb	r1, [r3, #0]
    d28a:	4b21      	ldr	r3, [pc, #132]	; (d310 <MiApp_SearchConnection+0x110>)
    d28c:	5499      	strb	r1, [r3, r2]
            #if defined(IEEE_802_15_4)
                tempPANID.Val = 0xFFFF;
                SendMACPacket(tempPANID.v, NULL, PACKET_TYPE_COMMAND, 0);
            #else
                SendMACPacket(NULL, PACKET_TYPE_COMMAND);
    d28e:	2101      	movs	r1, #1
    d290:	2000      	movs	r0, #0
    d292:	4b20      	ldr	r3, [pc, #128]	; (d314 <MiApp_SearchConnection+0x114>)
    d294:	4798      	blx	r3
            #endif
			
			
			t1 = MiWi_TickGet();
    d296:	4b20      	ldr	r3, [pc, #128]	; (d318 <MiApp_SearchConnection+0x118>)
    d298:	4798      	blx	r3
    d29a:	0003      	movs	r3, r0
    d29c:	60fb      	str	r3, [r7, #12]
            while(1)
            {					
                if( MiApp_MessageAvailable())
    d29e:	4b1f      	ldr	r3, [pc, #124]	; (d31c <MiApp_SearchConnection+0x11c>)
    d2a0:	4798      	blx	r3
    d2a2:	1e03      	subs	r3, r0, #0
    d2a4:	d001      	beq.n	d2aa <MiApp_SearchConnection+0xaa>
                {
                    //printf("\r\nRx ");
                    MiApp_DiscardMessage();
    d2a6:	4b1e      	ldr	r3, [pc, #120]	; (d320 <MiApp_SearchConnection+0x120>)
    d2a8:	4798      	blx	r3
                }
                //MiWiPROTasks();
				
				t2 = MiWi_TickGet();
    d2aa:	4b1b      	ldr	r3, [pc, #108]	; (d318 <MiApp_SearchConnection+0x118>)
    d2ac:	4798      	blx	r3
    d2ae:	0003      	movs	r3, r0
    d2b0:	60bb      	str	r3, [r7, #8]
				if( MiWi_TickGetDiff(t2, t1) > ((uint16_t)(ScanTime[ScanDuration])) )
    d2b2:	68ba      	ldr	r2, [r7, #8]
    d2b4:	68fb      	ldr	r3, [r7, #12]
    d2b6:	1ad3      	subs	r3, r2, r3
    d2b8:	1dfa      	adds	r2, r7, #7
    d2ba:	7811      	ldrb	r1, [r2, #0]
    d2bc:	4a19      	ldr	r2, [pc, #100]	; (d324 <MiApp_SearchConnection+0x124>)
    d2be:	0089      	lsls	r1, r1, #2
    d2c0:	588a      	ldr	r2, [r1, r2]
    d2c2:	b292      	uxth	r2, r2
    d2c4:	4293      	cmp	r3, r2
    d2c6:	d800      	bhi.n	d2ca <MiApp_SearchConnection+0xca>
                if( MiApp_MessageAvailable())
    d2c8:	e7e9      	b.n	d29e <MiApp_SearchConnection+0x9e>
                {
					//printf("t2: %d - %d - %d\r\n",t2,ScanTime[ScanDuration],MiWi_TickGetDiff(t2, t1));									
                    // if scan time exceed scan duration, prepare to scan the next channel
                    break;
    d2ca:	46c0      	nop			; (mov r8, r8)
                }
            } 

    MiWiPROStateMachine.bits.searchingForNetwork = 0;
    d2cc:	4b0a      	ldr	r3, [pc, #40]	; (d2f8 <MiApp_SearchConnection+0xf8>)
    d2ce:	781a      	ldrb	r2, [r3, #0]
    d2d0:	2101      	movs	r1, #1
    d2d2:	438a      	bics	r2, r1
    d2d4:	701a      	strb	r2, [r3, #0]
	
	printf("Scan PID: %.4x\n\r",ActiveScanResults[0].PANID.Val);
    d2d6:	4b14      	ldr	r3, [pc, #80]	; (d328 <MiApp_SearchConnection+0x128>)
    d2d8:	895b      	ldrh	r3, [r3, #10]
    d2da:	001a      	movs	r2, r3
    d2dc:	4b13      	ldr	r3, [pc, #76]	; (d32c <MiApp_SearchConnection+0x12c>)
    d2de:	0011      	movs	r1, r2
    d2e0:	0018      	movs	r0, r3
    d2e2:	4b08      	ldr	r3, [pc, #32]	; (d304 <MiApp_SearchConnection+0x104>)
    d2e4:	4798      	blx	r3
	
    return ActiveScanResultIndex;
    d2e6:	4b12      	ldr	r3, [pc, #72]	; (d330 <MiApp_SearchConnection+0x130>)
    d2e8:	781b      	ldrb	r3, [r3, #0]
}
    d2ea:	0018      	movs	r0, r3
    d2ec:	46bd      	mov	sp, r7
    d2ee:	b006      	add	sp, #24
    d2f0:	bd80      	pop	{r7, pc}
    d2f2:	46c0      	nop			; (mov r8, r8)
    d2f4:	200014b5 	.word	0x200014b5
    d2f8:	20001144 	.word	0x20001144
    d2fc:	2000002f 	.word	0x2000002f
    d300:	0001cdf4 	.word	0x0001cdf4
    d304:	0001782d 	.word	0x0001782d
    d308:	0000d159 	.word	0x0000d159
    d30c:	200012dc 	.word	0x200012dc
    d310:	200012e4 	.word	0x200012e4
    d314:	0000c52d 	.word	0x0000c52d
    d318:	0000ebad 	.word	0x0000ebad
    d31c:	0000d7bd 	.word	0x0000d7bd
    d320:	0000d7e5 	.word	0x0000d7e5
    d324:	0001cc48 	.word	0x0001cc48
    d328:	200014b8 	.word	0x200014b8
    d32c:	0001ce08 	.word	0x0001ce08
    d330:	20001519 	.word	0x20001519

0000d334 <MiApp_EstablishConnection>:
 *      If more than one connections have been established through this function call, the
 *      return value points to the index of one of the peer devices.
 *
 *****************************************************************************************/  
uint8_t    MiApp_EstablishConnection(INPUT uint8_t ActiveScanIndex, INPUT uint8_t Mode)
{
    d334:	b5b0      	push	{r4, r5, r7, lr}
    d336:	b086      	sub	sp, #24
    d338:	af00      	add	r7, sp, #0
    d33a:	0002      	movs	r2, r0
    d33c:	1dfb      	adds	r3, r7, #7
    d33e:	701a      	strb	r2, [r3, #0]
    d340:	1dbb      	adds	r3, r7, #6
    d342:	1c0a      	adds	r2, r1, #0
    d344:	701a      	strb	r2, [r3, #0]
    uint8_t retry = CONNECTION_RETRY_TIMES;
    d346:	2317      	movs	r3, #23
    d348:	18fb      	adds	r3, r7, r3
    d34a:	2203      	movs	r2, #3
    d34c:	701a      	strb	r2, [r3, #0]
    uint8_t i;
	int32_t tmr;
    MIWI_TICK t1, t2;
    
    if( Mode == CONN_MODE_DIRECT)
    d34e:	1dbb      	adds	r3, r7, #6
    d350:	781b      	ldrb	r3, [r3, #0]
    d352:	2b00      	cmp	r3, #0
    d354:	d000      	beq.n	d358 <MiApp_EstablishConnection+0x24>
    d356:	e192      	b.n	d67e <MiApp_EstablishConnection+0x34a>
    {
        if( ActiveScanIndex == 0xFF )
    d358:	1dfb      	adds	r3, r7, #7
    d35a:	781b      	ldrb	r3, [r3, #0]
    d35c:	2bff      	cmp	r3, #255	; 0xff
    d35e:	d11c      	bne.n	d39a <MiApp_EstablishConnection+0x66>
        {
            while( MiApp_SearchConnection(11, ((uint32_t)0x00000001)<<currentChannel) == 0 )
    d360:	e00d      	b.n	d37e <MiApp_EstablishConnection+0x4a>
            {
                if( --retry == 0 )
    d362:	2317      	movs	r3, #23
    d364:	18fb      	adds	r3, r7, r3
    d366:	2217      	movs	r2, #23
    d368:	18ba      	adds	r2, r7, r2
    d36a:	7812      	ldrb	r2, [r2, #0]
    d36c:	3a01      	subs	r2, #1
    d36e:	701a      	strb	r2, [r3, #0]
    d370:	2317      	movs	r3, #23
    d372:	18fb      	adds	r3, r7, r3
    d374:	781b      	ldrb	r3, [r3, #0]
    d376:	2b00      	cmp	r3, #0
    d378:	d101      	bne.n	d37e <MiApp_EstablishConnection+0x4a>
                {
                    return 0xFF;
    d37a:	23ff      	movs	r3, #255	; 0xff
    d37c:	e219      	b.n	d7b2 <MiApp_EstablishConnection+0x47e>
            while( MiApp_SearchConnection(11, ((uint32_t)0x00000001)<<currentChannel) == 0 )
    d37e:	4bea      	ldr	r3, [pc, #936]	; (d728 <MiApp_EstablishConnection+0x3f4>)
    d380:	781b      	ldrb	r3, [r3, #0]
    d382:	001a      	movs	r2, r3
    d384:	2301      	movs	r3, #1
    d386:	4093      	lsls	r3, r2
    d388:	0019      	movs	r1, r3
    d38a:	200b      	movs	r0, #11
    d38c:	4be7      	ldr	r3, [pc, #924]	; (d72c <MiApp_EstablishConnection+0x3f8>)
    d38e:	4798      	blx	r3
    d390:	1e03      	subs	r3, r0, #0
    d392:	d0e6      	beq.n	d362 <MiApp_EstablishConnection+0x2e>
                }
            }
            ActiveScanIndex = 0;
    d394:	1dfb      	adds	r3, r7, #7
    d396:	2200      	movs	r2, #0
    d398:	701a      	strb	r2, [r3, #0]
			
            tempShortAddress.v[0] = ActiveScanResults[ActiveScanIndex].Address[0];
            tempShortAddress.v[1] = ActiveScanResults[ActiveScanIndex].Address[1];
            myParent = SearchForShortAddress();
        #else
            tempPANID.Val = ActiveScanResults[ActiveScanIndex].PANID.Val;
    d39a:	1dfb      	adds	r3, r7, #7
    d39c:	781a      	ldrb	r2, [r3, #0]
    d39e:	49e4      	ldr	r1, [pc, #912]	; (d730 <MiApp_EstablishConnection+0x3fc>)
    d3a0:	0013      	movs	r3, r2
    d3a2:	00db      	lsls	r3, r3, #3
    d3a4:	189b      	adds	r3, r3, r2
    d3a6:	005b      	lsls	r3, r3, #1
    d3a8:	18cb      	adds	r3, r1, r3
    d3aa:	330a      	adds	r3, #10
    d3ac:	881a      	ldrh	r2, [r3, #0]
    d3ae:	4be1      	ldr	r3, [pc, #900]	; (d734 <MiApp_EstablishConnection+0x400>)
    d3b0:	801a      	strh	r2, [r3, #0]
            for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    d3b2:	2316      	movs	r3, #22
    d3b4:	18fb      	adds	r3, r7, r3
    d3b6:	2200      	movs	r2, #0
    d3b8:	701a      	strb	r2, [r3, #0]
    d3ba:	e019      	b.n	d3f0 <MiApp_EstablishConnection+0xbc>
            {
                tempLongAddress[i] = ActiveScanResults[ActiveScanIndex].Address[i];
    d3bc:	2316      	movs	r3, #22
    d3be:	18fb      	adds	r3, r7, r3
    d3c0:	7819      	ldrb	r1, [r3, #0]
    d3c2:	1dfb      	adds	r3, r7, #7
    d3c4:	781a      	ldrb	r2, [r3, #0]
    d3c6:	2316      	movs	r3, #22
    d3c8:	18fb      	adds	r3, r7, r3
    d3ca:	7818      	ldrb	r0, [r3, #0]
    d3cc:	4cd8      	ldr	r4, [pc, #864]	; (d730 <MiApp_EstablishConnection+0x3fc>)
    d3ce:	0013      	movs	r3, r2
    d3d0:	00db      	lsls	r3, r3, #3
    d3d2:	189b      	adds	r3, r3, r2
    d3d4:	005b      	lsls	r3, r3, #1
    d3d6:	18e3      	adds	r3, r4, r3
    d3d8:	181b      	adds	r3, r3, r0
    d3da:	3301      	adds	r3, #1
    d3dc:	781a      	ldrb	r2, [r3, #0]
    d3de:	4bd6      	ldr	r3, [pc, #856]	; (d738 <MiApp_EstablishConnection+0x404>)
    d3e0:	545a      	strb	r2, [r3, r1]
            for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    d3e2:	2316      	movs	r3, #22
    d3e4:	18fb      	adds	r3, r7, r3
    d3e6:	781a      	ldrb	r2, [r3, #0]
    d3e8:	2316      	movs	r3, #22
    d3ea:	18fb      	adds	r3, r7, r3
    d3ec:	3201      	adds	r2, #1
    d3ee:	701a      	strb	r2, [r3, #0]
    d3f0:	2316      	movs	r3, #22
    d3f2:	18fb      	adds	r3, r7, r3
    d3f4:	781b      	ldrb	r3, [r3, #0]
    d3f6:	2b07      	cmp	r3, #7
    d3f8:	d9e0      	bls.n	d3bc <MiApp_EstablishConnection+0x88>
            }    
            myParent = SearchForLongAddress();
    d3fa:	4bd0      	ldr	r3, [pc, #832]	; (d73c <MiApp_EstablishConnection+0x408>)
    d3fc:	4798      	blx	r3
    d3fe:	0003      	movs	r3, r0
    d400:	001a      	movs	r2, r3
    d402:	4bcf      	ldr	r3, [pc, #828]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d404:	701a      	strb	r2, [r3, #0]
        #endif
        
        if( myParent == 0xFF )
    d406:	4bce      	ldr	r3, [pc, #824]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d408:	781b      	ldrb	r3, [r3, #0]
    d40a:	2bff      	cmp	r3, #255	; 0xff
    d40c:	d10b      	bne.n	d426 <MiApp_EstablishConnection+0xf2>
        {
            if( (myParent = findNextNetworkEntry()) == 0xFF )
    d40e:	4bcd      	ldr	r3, [pc, #820]	; (d744 <MiApp_EstablishConnection+0x410>)
    d410:	4798      	blx	r3
    d412:	0003      	movs	r3, r0
    d414:	001a      	movs	r2, r3
    d416:	4bca      	ldr	r3, [pc, #808]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d418:	701a      	strb	r2, [r3, #0]
    d41a:	4bc9      	ldr	r3, [pc, #804]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d41c:	781b      	ldrb	r3, [r3, #0]
    d41e:	2bff      	cmp	r3, #255	; 0xff
    d420:	d101      	bne.n	d426 <MiApp_EstablishConnection+0xf2>
            {
                return 0xFF;
    d422:	23ff      	movs	r3, #255	; 0xff
    d424:	e1c5      	b.n	d7b2 <MiApp_EstablishConnection+0x47e>
            }
        }        
        
        ConnectionTable[myParent].status.Val = 0;
    d426:	4bc6      	ldr	r3, [pc, #792]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d428:	781b      	ldrb	r3, [r3, #0]
    d42a:	4ac7      	ldr	r2, [pc, #796]	; (d748 <MiApp_EstablishConnection+0x414>)
    d42c:	011b      	lsls	r3, r3, #4
    d42e:	18d3      	adds	r3, r2, r3
    d430:	330c      	adds	r3, #12
    d432:	2200      	movs	r2, #0
    d434:	701a      	strb	r2, [r3, #0]
        ConnectionTable[myParent].PANID.Val = ActiveScanResults[ActiveScanIndex].PANID.Val;
    d436:	4bc2      	ldr	r3, [pc, #776]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d438:	781b      	ldrb	r3, [r3, #0]
    d43a:	0018      	movs	r0, r3
    d43c:	1dfb      	adds	r3, r7, #7
    d43e:	781a      	ldrb	r2, [r3, #0]
    d440:	49bb      	ldr	r1, [pc, #748]	; (d730 <MiApp_EstablishConnection+0x3fc>)
    d442:	0013      	movs	r3, r2
    d444:	00db      	lsls	r3, r3, #3
    d446:	189b      	adds	r3, r3, r2
    d448:	005b      	lsls	r3, r3, #1
    d44a:	18cb      	adds	r3, r1, r3
    d44c:	330a      	adds	r3, #10
    d44e:	8819      	ldrh	r1, [r3, #0]
    d450:	4bbd      	ldr	r3, [pc, #756]	; (d748 <MiApp_EstablishConnection+0x414>)
    d452:	0102      	lsls	r2, r0, #4
    d454:	52d1      	strh	r1, [r2, r3]
        #if defined(IEEE_802_15_4)
            ConnectionTable[myParent].AltAddress.v[0] = ActiveScanResults[ActiveScanIndex].Address[0];
            ConnectionTable[myParent].AltAddress.v[1] = ActiveScanResults[ActiveScanIndex].Address[1];
            ConnectionTable[myParent].status.bits.shortAddressValid = 1;
        #else
            for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    d456:	2316      	movs	r3, #22
    d458:	18fb      	adds	r3, r7, r3
    d45a:	2200      	movs	r2, #0
    d45c:	701a      	strb	r2, [r3, #0]
    d45e:	e021      	b.n	d4a4 <MiApp_EstablishConnection+0x170>
            {
                ConnectionTable[myParent].Address[i] = ActiveScanResults[ActiveScanIndex].Address[i];
    d460:	4bb7      	ldr	r3, [pc, #732]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d462:	781b      	ldrb	r3, [r3, #0]
    d464:	001d      	movs	r5, r3
    d466:	2316      	movs	r3, #22
    d468:	18fb      	adds	r3, r7, r3
    d46a:	7819      	ldrb	r1, [r3, #0]
    d46c:	1dfb      	adds	r3, r7, #7
    d46e:	781a      	ldrb	r2, [r3, #0]
    d470:	2316      	movs	r3, #22
    d472:	18fb      	adds	r3, r7, r3
    d474:	7818      	ldrb	r0, [r3, #0]
    d476:	4cae      	ldr	r4, [pc, #696]	; (d730 <MiApp_EstablishConnection+0x3fc>)
    d478:	0013      	movs	r3, r2
    d47a:	00db      	lsls	r3, r3, #3
    d47c:	189b      	adds	r3, r3, r2
    d47e:	005b      	lsls	r3, r3, #1
    d480:	18e3      	adds	r3, r4, r3
    d482:	181b      	adds	r3, r3, r0
    d484:	3301      	adds	r3, #1
    d486:	7818      	ldrb	r0, [r3, #0]
    d488:	4aaf      	ldr	r2, [pc, #700]	; (d748 <MiApp_EstablishConnection+0x414>)
    d48a:	012b      	lsls	r3, r5, #4
    d48c:	18d3      	adds	r3, r2, r3
    d48e:	185b      	adds	r3, r3, r1
    d490:	3304      	adds	r3, #4
    d492:	1c02      	adds	r2, r0, #0
    d494:	701a      	strb	r2, [r3, #0]
            for(i = 0; i < MY_ADDRESS_LENGTH; i++)
    d496:	2316      	movs	r3, #22
    d498:	18fb      	adds	r3, r7, r3
    d49a:	781a      	ldrb	r2, [r3, #0]
    d49c:	2316      	movs	r3, #22
    d49e:	18fb      	adds	r3, r7, r3
    d4a0:	3201      	adds	r2, #1
    d4a2:	701a      	strb	r2, [r3, #0]
    d4a4:	2316      	movs	r3, #22
    d4a6:	18fb      	adds	r3, r7, r3
    d4a8:	781b      	ldrb	r3, [r3, #0]
    d4aa:	2b07      	cmp	r3, #7
    d4ac:	d9d8      	bls.n	d460 <MiApp_EstablishConnection+0x12c>
            }
            ConnectionTable[myParent].status.bits.longAddressValid = 1;
    d4ae:	4ba4      	ldr	r3, [pc, #656]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d4b0:	781b      	ldrb	r3, [r3, #0]
    d4b2:	4aa5      	ldr	r2, [pc, #660]	; (d748 <MiApp_EstablishConnection+0x414>)
    d4b4:	2108      	movs	r1, #8
    d4b6:	011b      	lsls	r3, r3, #4
    d4b8:	18d3      	adds	r3, r2, r3
    d4ba:	185b      	adds	r3, r3, r1
    d4bc:	791a      	ldrb	r2, [r3, #4]
    d4be:	2104      	movs	r1, #4
    d4c0:	430a      	orrs	r2, r1
    d4c2:	711a      	strb	r2, [r3, #4]
        #endif
        #if ADDITIONAL_NODE_ID_SIZE > 0
            for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    d4c4:	2316      	movs	r3, #22
    d4c6:	18fb      	adds	r3, r7, r3
    d4c8:	2200      	movs	r2, #0
    d4ca:	701a      	strb	r2, [r3, #0]
    d4cc:	e021      	b.n	d512 <MiApp_EstablishConnection+0x1de>
            {
                ConnectionTable[myParent].PeerInfo[i] = ActiveScanResults[ActiveScanIndex].PeerInfo[i];
    d4ce:	4b9c      	ldr	r3, [pc, #624]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d4d0:	781b      	ldrb	r3, [r3, #0]
    d4d2:	001d      	movs	r5, r3
    d4d4:	2316      	movs	r3, #22
    d4d6:	18fb      	adds	r3, r7, r3
    d4d8:	7819      	ldrb	r1, [r3, #0]
    d4da:	1dfb      	adds	r3, r7, #7
    d4dc:	781a      	ldrb	r2, [r3, #0]
    d4de:	2316      	movs	r3, #22
    d4e0:	18fb      	adds	r3, r7, r3
    d4e2:	7818      	ldrb	r0, [r3, #0]
    d4e4:	4c92      	ldr	r4, [pc, #584]	; (d730 <MiApp_EstablishConnection+0x3fc>)
    d4e6:	0013      	movs	r3, r2
    d4e8:	00db      	lsls	r3, r3, #3
    d4ea:	189b      	adds	r3, r3, r2
    d4ec:	005b      	lsls	r3, r3, #1
    d4ee:	18e3      	adds	r3, r4, r3
    d4f0:	181b      	adds	r3, r3, r0
    d4f2:	330f      	adds	r3, #15
    d4f4:	7818      	ldrb	r0, [r3, #0]
    d4f6:	4a94      	ldr	r2, [pc, #592]	; (d748 <MiApp_EstablishConnection+0x414>)
    d4f8:	012b      	lsls	r3, r5, #4
    d4fa:	18d3      	adds	r3, r2, r3
    d4fc:	185b      	adds	r3, r3, r1
    d4fe:	330d      	adds	r3, #13
    d500:	1c02      	adds	r2, r0, #0
    d502:	701a      	strb	r2, [r3, #0]
            for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    d504:	2316      	movs	r3, #22
    d506:	18fb      	adds	r3, r7, r3
    d508:	781a      	ldrb	r2, [r3, #0]
    d50a:	2316      	movs	r3, #22
    d50c:	18fb      	adds	r3, r7, r3
    d50e:	3201      	adds	r2, #1
    d510:	701a      	strb	r2, [r3, #0]
    d512:	2316      	movs	r3, #22
    d514:	18fb      	adds	r3, r7, r3
    d516:	781b      	ldrb	r3, [r3, #0]
    d518:	2b01      	cmp	r3, #1
    d51a:	d9d8      	bls.n	d4ce <MiApp_EstablishConnection+0x19a>
            }
        #endif
        
        ConnectionTable[myParent].status.bits.directConnection = 1;
    d51c:	4b88      	ldr	r3, [pc, #544]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d51e:	781b      	ldrb	r3, [r3, #0]
    d520:	4a89      	ldr	r2, [pc, #548]	; (d748 <MiApp_EstablishConnection+0x414>)
    d522:	2108      	movs	r1, #8
    d524:	011b      	lsls	r3, r3, #4
    d526:	18d3      	adds	r3, r2, r3
    d528:	185b      	adds	r3, r3, r1
    d52a:	791a      	ldrb	r2, [r3, #4]
    d52c:	2102      	movs	r1, #2
    d52e:	430a      	orrs	r2, r1
    d530:	711a      	strb	r2, [r3, #4]
        ConnectionTable[myParent].status.bits.isFamily = 1;
    d532:	4b83      	ldr	r3, [pc, #524]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d534:	781b      	ldrb	r3, [r3, #0]
    d536:	4a84      	ldr	r2, [pc, #528]	; (d748 <MiApp_EstablishConnection+0x414>)
    d538:	2108      	movs	r1, #8
    d53a:	011b      	lsls	r3, r3, #4
    d53c:	18d3      	adds	r3, r2, r3
    d53e:	185b      	adds	r3, r3, r1
    d540:	791a      	ldrb	r2, [r3, #4]
    d542:	2120      	movs	r1, #32
    d544:	430a      	orrs	r2, r1
    d546:	711a      	strb	r2, [r3, #4]
        ConnectionTable[myParent].status.bits.RXOnWhenIdle = 1;
    d548:	4b7d      	ldr	r3, [pc, #500]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d54a:	781b      	ldrb	r3, [r3, #0]
    d54c:	4a7e      	ldr	r2, [pc, #504]	; (d748 <MiApp_EstablishConnection+0x414>)
    d54e:	2108      	movs	r1, #8
    d550:	011b      	lsls	r3, r3, #4
    d552:	18d3      	adds	r3, r2, r3
    d554:	185b      	adds	r3, r3, r1
    d556:	791a      	ldrb	r2, [r3, #4]
    d558:	2101      	movs	r1, #1
    d55a:	430a      	orrs	r2, r1
    d55c:	711a      	strb	r2, [r3, #4]
        
        MiApp_SetChannel(ActiveScanResults[ActiveScanIndex].Channel);
    d55e:	1dfb      	adds	r3, r7, #7
    d560:	781a      	ldrb	r2, [r3, #0]
    d562:	4973      	ldr	r1, [pc, #460]	; (d730 <MiApp_EstablishConnection+0x3fc>)
    d564:	0013      	movs	r3, r2
    d566:	00db      	lsls	r3, r3, #3
    d568:	189b      	adds	r3, r3, r2
    d56a:	005b      	lsls	r3, r3, #1
    d56c:	5c5b      	ldrb	r3, [r3, r1]
    d56e:	0018      	movs	r0, r3
    d570:	4b76      	ldr	r3, [pc, #472]	; (d74c <MiApp_EstablishConnection+0x418>)
    d572:	4798      	blx	r3
        
        /* Program the PANID to the attempted network */
        myPANID.Val = ConnectionTable[myParent].PANID.Val;
    d574:	4b72      	ldr	r3, [pc, #456]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d576:	781b      	ldrb	r3, [r3, #0]
    d578:	001a      	movs	r2, r3
    d57a:	4b73      	ldr	r3, [pc, #460]	; (d748 <MiApp_EstablishConnection+0x414>)
    d57c:	0112      	lsls	r2, r2, #4
    d57e:	5ad2      	ldrh	r2, [r2, r3]
    d580:	4b73      	ldr	r3, [pc, #460]	; (d750 <MiApp_EstablishConnection+0x41c>)
    d582:	801a      	strh	r2, [r3, #0]
        tempShortAddress.Val = 0xFFFF;
    d584:	4b73      	ldr	r3, [pc, #460]	; (d754 <MiApp_EstablishConnection+0x420>)
    d586:	2201      	movs	r2, #1
    d588:	4252      	negs	r2, r2
    d58a:	801a      	strh	r2, [r3, #0]
        MiMAC_SetAltAddress(tempShortAddress.v, myPANID.v);
    d58c:	4a70      	ldr	r2, [pc, #448]	; (d750 <MiApp_EstablishConnection+0x41c>)
    d58e:	4b71      	ldr	r3, [pc, #452]	; (d754 <MiApp_EstablishConnection+0x420>)
    d590:	0011      	movs	r1, r2
    d592:	0018      	movs	r0, r3
    d594:	4b70      	ldr	r3, [pc, #448]	; (d758 <MiApp_EstablishConnection+0x424>)
    d596:	4798      	blx	r3
        
    
        MAC_FlushTx();
    d598:	4b70      	ldr	r3, [pc, #448]	; (d75c <MiApp_EstablishConnection+0x428>)
    d59a:	2200      	movs	r2, #0
    d59c:	701a      	strb	r2, [r3, #0]
        MiApp_WriteData(MAC_COMMAND_ASSOCIATION_REQUEST);   
    d59e:	4b6f      	ldr	r3, [pc, #444]	; (d75c <MiApp_EstablishConnection+0x428>)
    d5a0:	781b      	ldrb	r3, [r3, #0]
    d5a2:	1c5a      	adds	r2, r3, #1
    d5a4:	b2d1      	uxtb	r1, r2
    d5a6:	4a6d      	ldr	r2, [pc, #436]	; (d75c <MiApp_EstablishConnection+0x428>)
    d5a8:	7011      	strb	r1, [r2, #0]
    d5aa:	001a      	movs	r2, r3
    d5ac:	4b6c      	ldr	r3, [pc, #432]	; (d760 <MiApp_EstablishConnection+0x42c>)
    d5ae:	2101      	movs	r1, #1
    d5b0:	5499      	strb	r1, [r3, r2]
        MiApp_WriteData(MiWiPROCapacityInfo.Val);
    d5b2:	4b6a      	ldr	r3, [pc, #424]	; (d75c <MiApp_EstablishConnection+0x428>)
    d5b4:	781b      	ldrb	r3, [r3, #0]
    d5b6:	1c5a      	adds	r2, r3, #1
    d5b8:	b2d1      	uxtb	r1, r2
    d5ba:	4a68      	ldr	r2, [pc, #416]	; (d75c <MiApp_EstablishConnection+0x428>)
    d5bc:	7011      	strb	r1, [r2, #0]
    d5be:	001a      	movs	r2, r3
    d5c0:	4b68      	ldr	r3, [pc, #416]	; (d764 <MiApp_EstablishConnection+0x430>)
    d5c2:	7819      	ldrb	r1, [r3, #0]
    d5c4:	4b66      	ldr	r3, [pc, #408]	; (d760 <MiApp_EstablishConnection+0x42c>)
    d5c6:	5499      	strb	r1, [r3, r2]
        #if ADDITIONAL_NODE_ID_SIZE > 0
            for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    d5c8:	2316      	movs	r3, #22
    d5ca:	18fb      	adds	r3, r7, r3
    d5cc:	2200      	movs	r2, #0
    d5ce:	701a      	strb	r2, [r3, #0]
    d5d0:	e014      	b.n	d5fc <MiApp_EstablishConnection+0x2c8>
            {
                MiApp_WriteData(AdditionalNodeID[i]);
    d5d2:	4b62      	ldr	r3, [pc, #392]	; (d75c <MiApp_EstablishConnection+0x428>)
    d5d4:	781b      	ldrb	r3, [r3, #0]
    d5d6:	1c5a      	adds	r2, r3, #1
    d5d8:	b2d1      	uxtb	r1, r2
    d5da:	4a60      	ldr	r2, [pc, #384]	; (d75c <MiApp_EstablishConnection+0x428>)
    d5dc:	7011      	strb	r1, [r2, #0]
    d5de:	0019      	movs	r1, r3
    d5e0:	2316      	movs	r3, #22
    d5e2:	18fb      	adds	r3, r7, r3
    d5e4:	781b      	ldrb	r3, [r3, #0]
    d5e6:	4a60      	ldr	r2, [pc, #384]	; (d768 <MiApp_EstablishConnection+0x434>)
    d5e8:	5cd2      	ldrb	r2, [r2, r3]
    d5ea:	4b5d      	ldr	r3, [pc, #372]	; (d760 <MiApp_EstablishConnection+0x42c>)
    d5ec:	545a      	strb	r2, [r3, r1]
            for(i = 0; i < ADDITIONAL_NODE_ID_SIZE; i++)
    d5ee:	2316      	movs	r3, #22
    d5f0:	18fb      	adds	r3, r7, r3
    d5f2:	781a      	ldrb	r2, [r3, #0]
    d5f4:	2316      	movs	r3, #22
    d5f6:	18fb      	adds	r3, r7, r3
    d5f8:	3201      	adds	r2, #1
    d5fa:	701a      	strb	r2, [r3, #0]
    d5fc:	2316      	movs	r3, #22
    d5fe:	18fb      	adds	r3, r7, r3
    d600:	781b      	ldrb	r3, [r3, #0]
    d602:	2b01      	cmp	r3, #1
    d604:	d9e5      	bls.n	d5d2 <MiApp_EstablishConnection+0x29e>
        #endif
        
        #if defined(IEEE_802_15_4)
            SendMACPacket(ConnectionTable[myParent].PANID.v, ConnectionTable[myParent].AltAddress.v, PACKET_TYPE_COMMAND, MSK_ALT_DST_ADDR);
        #else
            SendMACPacket(ConnectionTable[myParent].Address, PACKET_TYPE_COMMAND);
    d606:	4b4e      	ldr	r3, [pc, #312]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d608:	781b      	ldrb	r3, [r3, #0]
    d60a:	011a      	lsls	r2, r3, #4
    d60c:	4b4e      	ldr	r3, [pc, #312]	; (d748 <MiApp_EstablishConnection+0x414>)
    d60e:	18d3      	adds	r3, r2, r3
    d610:	3304      	adds	r3, #4
    d612:	2101      	movs	r1, #1
    d614:	0018      	movs	r0, r3
    d616:	4b55      	ldr	r3, [pc, #340]	; (d76c <MiApp_EstablishConnection+0x438>)
    d618:	4798      	blx	r3
        #endif
        
		SX1276_RX_INIT();
    d61a:	4b55      	ldr	r3, [pc, #340]	; (d770 <MiApp_EstablishConnection+0x43c>)
    d61c:	4798      	blx	r3
		
		t1 = MiWi_TickGet();
    d61e:	4b55      	ldr	r3, [pc, #340]	; (d774 <MiApp_EstablishConnection+0x440>)
    d620:	4798      	blx	r3
    d622:	0003      	movs	r3, r0
    d624:	613b      	str	r3, [r7, #16]
		while(ConnectionTable[myParent].status.bits.FinishJoin == 0 )
    d626:	e01a      	b.n	d65e <MiApp_EstablishConnection+0x32a>
		{
			if( MiApp_MessageAvailable())
    d628:	4b53      	ldr	r3, [pc, #332]	; (d778 <MiApp_EstablishConnection+0x444>)
    d62a:	4798      	blx	r3
    d62c:	1e03      	subs	r3, r0, #0
    d62e:	d005      	beq.n	d63c <MiApp_EstablishConnection+0x308>
			{
				printf("\r\nRx ");
    d630:	4b52      	ldr	r3, [pc, #328]	; (d77c <MiApp_EstablishConnection+0x448>)
    d632:	0018      	movs	r0, r3
    d634:	4b52      	ldr	r3, [pc, #328]	; (d780 <MiApp_EstablishConnection+0x44c>)
    d636:	4798      	blx	r3
				MiApp_DiscardMessage();
    d638:	4b52      	ldr	r3, [pc, #328]	; (d784 <MiApp_EstablishConnection+0x450>)
    d63a:	4798      	blx	r3
			}
			//MiWiPROTasks();			
			
			t2 = MiWi_TickGet();
    d63c:	4b4d      	ldr	r3, [pc, #308]	; (d774 <MiApp_EstablishConnection+0x440>)
    d63e:	4798      	blx	r3
    d640:	0003      	movs	r3, r0
    d642:	60fb      	str	r3, [r7, #12]
			if( MiWi_TickGetDiff(t2, t1) > ONE_SECOND*5 )
    d644:	68fa      	ldr	r2, [r7, #12]
    d646:	693b      	ldr	r3, [r7, #16]
    d648:	1ad2      	subs	r2, r2, r3
    d64a:	23a0      	movs	r3, #160	; 0xa0
    d64c:	01db      	lsls	r3, r3, #7
    d64e:	429a      	cmp	r2, r3
    d650:	d905      	bls.n	d65e <MiApp_EstablishConnection+0x32a>
			{
				printf("\r\nJoin Timer Fired\r\n ");
    d652:	4b4d      	ldr	r3, [pc, #308]	; (d788 <MiApp_EstablishConnection+0x454>)
    d654:	0018      	movs	r0, r3
    d656:	4b4a      	ldr	r3, [pc, #296]	; (d780 <MiApp_EstablishConnection+0x44c>)
    d658:	4798      	blx	r3
				return 0xFF;				
    d65a:	23ff      	movs	r3, #255	; 0xff
    d65c:	e0a9      	b.n	d7b2 <MiApp_EstablishConnection+0x47e>
		while(ConnectionTable[myParent].status.bits.FinishJoin == 0 )
    d65e:	4b38      	ldr	r3, [pc, #224]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d660:	781b      	ldrb	r3, [r3, #0]
    d662:	4a39      	ldr	r2, [pc, #228]	; (d748 <MiApp_EstablishConnection+0x414>)
    d664:	2108      	movs	r1, #8
    d666:	011b      	lsls	r3, r3, #4
    d668:	18d3      	adds	r3, r2, r3
    d66a:	185b      	adds	r3, r3, r1
    d66c:	791b      	ldrb	r3, [r3, #4]
    d66e:	06db      	lsls	r3, r3, #27
    d670:	0fdb      	lsrs	r3, r3, #31
    d672:	b2db      	uxtb	r3, r3
    d674:	2b00      	cmp	r3, #0
    d676:	d0d7      	beq.n	d628 <MiApp_EstablishConnection+0x2f4>
		}
		
        #if defined(ENABLE_TIME_SYNC) && !defined(ENABLE_SLEEP) && defined(ENABLE_INDIRECT_MESSAGE)
            TimeSyncTick = MiWi_TickGet();
        #endif
        return myParent;
    d678:	4b31      	ldr	r3, [pc, #196]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d67a:	781b      	ldrb	r3, [r3, #0]
    d67c:	e099      	b.n	d7b2 <MiApp_EstablishConnection+0x47e>
    } else if (Mode == CONN_MODE_NVM){
    d67e:	1dbb      	adds	r3, r7, #6
    d680:	781b      	ldrb	r3, [r3, #0]
    d682:	2b02      	cmp	r3, #2
    d684:	d000      	beq.n	d688 <MiApp_EstablishConnection+0x354>
    d686:	e093      	b.n	d7b0 <MiApp_EstablishConnection+0x47c>
		
		NVM_Read_NetInfo(&networkInfo);
    d688:	4b40      	ldr	r3, [pc, #256]	; (d78c <MiApp_EstablishConnection+0x458>)
    d68a:	0018      	movs	r0, r3
    d68c:	4b40      	ldr	r3, [pc, #256]	; (d790 <MiApp_EstablishConnection+0x45c>)
    d68e:	4798      	blx	r3
		
		currentChannel = networkInfo.CH;
    d690:	4b3e      	ldr	r3, [pc, #248]	; (d78c <MiApp_EstablishConnection+0x458>)
    d692:	791a      	ldrb	r2, [r3, #4]
    d694:	4b24      	ldr	r3, [pc, #144]	; (d728 <MiApp_EstablishConnection+0x3f4>)
    d696:	701a      	strb	r2, [r3, #0]
		MiApp_SetChannel(currentChannel);
    d698:	4b23      	ldr	r3, [pc, #140]	; (d728 <MiApp_EstablishConnection+0x3f4>)
    d69a:	781b      	ldrb	r3, [r3, #0]
    d69c:	0018      	movs	r0, r3
    d69e:	4b2b      	ldr	r3, [pc, #172]	; (d74c <MiApp_EstablishConnection+0x418>)
    d6a0:	4798      	blx	r3
		
		printf("Start from NVM on Channel - %d \r\n",currentChannel);
    d6a2:	4b21      	ldr	r3, [pc, #132]	; (d728 <MiApp_EstablishConnection+0x3f4>)
    d6a4:	781b      	ldrb	r3, [r3, #0]
    d6a6:	001a      	movs	r2, r3
    d6a8:	4b3a      	ldr	r3, [pc, #232]	; (d794 <MiApp_EstablishConnection+0x460>)
    d6aa:	0011      	movs	r1, r2
    d6ac:	0018      	movs	r0, r3
    d6ae:	4b34      	ldr	r3, [pc, #208]	; (d780 <MiApp_EstablishConnection+0x44c>)
    d6b0:	4798      	blx	r3
		
		myPANID.Val = networkInfo.PANID.Val;
    d6b2:	4b36      	ldr	r3, [pc, #216]	; (d78c <MiApp_EstablishConnection+0x458>)
    d6b4:	885a      	ldrh	r2, [r3, #2]
    d6b6:	4b26      	ldr	r3, [pc, #152]	; (d750 <MiApp_EstablishConnection+0x41c>)
    d6b8:	801a      	strh	r2, [r3, #0]
		myParent = networkInfo.myParent;
    d6ba:	4b34      	ldr	r3, [pc, #208]	; (d78c <MiApp_EstablishConnection+0x458>)
    d6bc:	7d9a      	ldrb	r2, [r3, #22]
    d6be:	4b20      	ldr	r3, [pc, #128]	; (d740 <MiApp_EstablishConnection+0x40c>)
    d6c0:	701a      	strb	r2, [r3, #0]
		myShortAddress.Val = networkInfo.SADDR.Val;
    d6c2:	4b32      	ldr	r3, [pc, #200]	; (d78c <MiApp_EstablishConnection+0x458>)
    d6c4:	899a      	ldrh	r2, [r3, #12]
    d6c6:	4b34      	ldr	r3, [pc, #208]	; (d798 <MiApp_EstablishConnection+0x464>)
    d6c8:	801a      	strh	r2, [r3, #0]
		
		memcpy(myLongAddress,networkInfo.LADDR,sizeof(myLongAddress));
    d6ca:	4934      	ldr	r1, [pc, #208]	; (d79c <MiApp_EstablishConnection+0x468>)
    d6cc:	4b2f      	ldr	r3, [pc, #188]	; (d78c <MiApp_EstablishConnection+0x458>)
    d6ce:	220e      	movs	r2, #14
    d6d0:	0008      	movs	r0, r1
    d6d2:	189b      	adds	r3, r3, r2
    d6d4:	2208      	movs	r2, #8
    d6d6:	0019      	movs	r1, r3
    d6d8:	4b31      	ldr	r3, [pc, #196]	; (d7a0 <MiApp_EstablishConnection+0x46c>)
    d6da:	4798      	blx	r3
				
		role = ROLE_COORDINATOR;
    d6dc:	4b31      	ldr	r3, [pc, #196]	; (d7a4 <MiApp_EstablishConnection+0x470>)
    d6de:	2201      	movs	r2, #1
    d6e0:	701a      	strb	r2, [r3, #0]
		MiWiPROCapacityInfo.bits.Role = role;
    d6e2:	4b30      	ldr	r3, [pc, #192]	; (d7a4 <MiApp_EstablishConnection+0x470>)
    d6e4:	781b      	ldrb	r3, [r3, #0]
    d6e6:	1c1a      	adds	r2, r3, #0
    d6e8:	2303      	movs	r3, #3
    d6ea:	4013      	ands	r3, r2
    d6ec:	b2da      	uxtb	r2, r3
    d6ee:	4b1d      	ldr	r3, [pc, #116]	; (d764 <MiApp_EstablishConnection+0x430>)
    d6f0:	2103      	movs	r1, #3
    d6f2:	400a      	ands	r2, r1
    d6f4:	1890      	adds	r0, r2, r2
    d6f6:	781a      	ldrb	r2, [r3, #0]
    d6f8:	2106      	movs	r1, #6
    d6fa:	438a      	bics	r2, r1
    d6fc:	1c11      	adds	r1, r2, #0
    d6fe:	1c02      	adds	r2, r0, #0
    d700:	430a      	orrs	r2, r1
    d702:	701a      	strb	r2, [r3, #0]
		
		MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);		
    d704:	4a12      	ldr	r2, [pc, #72]	; (d750 <MiApp_EstablishConnection+0x41c>)
    d706:	4b24      	ldr	r3, [pc, #144]	; (d798 <MiApp_EstablishConnection+0x464>)
    d708:	0011      	movs	r1, r2
    d70a:	0018      	movs	r0, r3
    d70c:	4b12      	ldr	r3, [pc, #72]	; (d758 <MiApp_EstablishConnection+0x424>)
    d70e:	4798      	blx	r3
		MiWiPROStateMachine.bits.memberOfNetwork = 1;
    d710:	4b25      	ldr	r3, [pc, #148]	; (d7a8 <MiApp_EstablishConnection+0x474>)
    d712:	781a      	ldrb	r2, [r3, #0]
    d714:	2102      	movs	r1, #2
    d716:	430a      	orrs	r2, r1
    d718:	701a      	strb	r2, [r3, #0]
		
		NVM_Read_ConTable(ConnectionTable);
    d71a:	4b0b      	ldr	r3, [pc, #44]	; (d748 <MiApp_EstablishConnection+0x414>)
    d71c:	0018      	movs	r0, r3
    d71e:	4b23      	ldr	r3, [pc, #140]	; (d7ac <MiApp_EstablishConnection+0x478>)
    d720:	4798      	blx	r3
		
		return 0x00;
    d722:	2300      	movs	r3, #0
    d724:	e045      	b.n	d7b2 <MiApp_EstablishConnection+0x47e>
    d726:	46c0      	nop			; (mov r8, r8)
    d728:	200014b5 	.word	0x200014b5
    d72c:	0000d201 	.word	0x0000d201
    d730:	200014b8 	.word	0x200014b8
    d734:	200012c0 	.word	0x200012c0
    d738:	20001288 	.word	0x20001288
    d73c:	0000cd35 	.word	0x0000cd35
    d740:	200014b4 	.word	0x200014b4
    d744:	0000c5d5 	.word	0x0000c5d5
    d748:	20001150 	.word	0x20001150
    d74c:	0000d159 	.word	0x0000d159
    d750:	20001290 	.word	0x20001290
    d754:	200012e0 	.word	0x200012e0
    d758:	00010211 	.word	0x00010211
    d75c:	200012dc 	.word	0x200012dc
    d760:	200012e4 	.word	0x200012e4
    d764:	20001284 	.word	0x20001284
    d768:	20000034 	.word	0x20000034
    d76c:	0000c52d 	.word	0x0000c52d
    d770:	0000f90d 	.word	0x0000f90d
    d774:	0000ebad 	.word	0x0000ebad
    d778:	0000d7bd 	.word	0x0000d7bd
    d77c:	0001ce1c 	.word	0x0001ce1c
    d780:	0001782d 	.word	0x0001782d
    d784:	0000d7e5 	.word	0x0000d7e5
    d788:	0001ce24 	.word	0x0001ce24
    d78c:	2000151c 	.word	0x2000151c
    d790:	0000e979 	.word	0x0000e979
    d794:	0001ce3c 	.word	0x0001ce3c
    d798:	20001140 	.word	0x20001140
    d79c:	20000010 	.word	0x20000010
    d7a0:	00017715 	.word	0x00017715
    d7a4:	200012de 	.word	0x200012de
    d7a8:	20001144 	.word	0x20001144
    d7ac:	0000e8f9 	.word	0x0000e8f9
	}
    return 0xFF;
    d7b0:	23ff      	movs	r3, #255	; 0xff
}
    d7b2:	0018      	movs	r0, r3
    d7b4:	46bd      	mov	sp, r7
    d7b6:	b006      	add	sp, #24
    d7b8:	bdb0      	pop	{r4, r5, r7, pc}
    d7ba:	46c0      	nop			; (mov r8, r8)

0000d7bc <MiApp_MessageAvailable>:

bool MiApp_MessageAvailable(void)
{
    d7bc:	b580      	push	{r7, lr}
    d7be:	af00      	add	r7, sp, #0
    MiWiPROTasks();
    d7c0:	4b06      	ldr	r3, [pc, #24]	; (d7dc <MiApp_MessageAvailable+0x20>)
    d7c2:	4798      	blx	r3

    return MiWiPROStateMachine.bits.RxHasUserData;
    d7c4:	4b06      	ldr	r3, [pc, #24]	; (d7e0 <MiApp_MessageAvailable+0x24>)
    d7c6:	781b      	ldrb	r3, [r3, #0]
    d7c8:	075b      	lsls	r3, r3, #29
    d7ca:	0fdb      	lsrs	r3, r3, #31
    d7cc:	b2db      	uxtb	r3, r3
    d7ce:	1e5a      	subs	r2, r3, #1
    d7d0:	4193      	sbcs	r3, r2
    d7d2:	b2db      	uxtb	r3, r3
}
    d7d4:	0018      	movs	r0, r3
    d7d6:	46bd      	mov	sp, r7
    d7d8:	bd80      	pop	{r7, pc}
    d7da:	46c0      	nop			; (mov r8, r8)
    d7dc:	000083c5 	.word	0x000083c5
    d7e0:	20001144 	.word	0x20001144

0000d7e4 <MiApp_DiscardMessage>:
    
void MiApp_DiscardMessage(void)
{
    d7e4:	b580      	push	{r7, lr}
    d7e6:	af00      	add	r7, sp, #0
    MiWiPROStateMachine.bits.RxHasUserData = 0;
    d7e8:	4b04      	ldr	r3, [pc, #16]	; (d7fc <MiApp_DiscardMessage+0x18>)
    d7ea:	781a      	ldrb	r2, [r3, #0]
    d7ec:	2104      	movs	r1, #4
    d7ee:	438a      	bics	r2, r1
    d7f0:	701a      	strb	r2, [r3, #0]
    MiMAC_DiscardPacket();    
    d7f2:	4b03      	ldr	r3, [pc, #12]	; (d800 <MiApp_DiscardMessage+0x1c>)
    d7f4:	4798      	blx	r3
}    
    d7f6:	46c0      	nop			; (mov r8, r8)
    d7f8:	46bd      	mov	sp, r7
    d7fa:	bd80      	pop	{r7, pc}
    d7fc:	20001144 	.word	0x20001144
    d800:	0001011d 	.word	0x0001011d

0000d804 <MiApp_BroadcastPacket>:
 * Remarks:    
 *      None
 *
 *****************************************************************************************/ 
bool MiApp_BroadcastPacket( bool SecEn )   
{
    d804:	b580      	push	{r7, lr}
    d806:	b082      	sub	sp, #8
    d808:	af00      	add	r7, sp, #0
    d80a:	0002      	movs	r2, r0
    d80c:	1dfb      	adds	r3, r7, #7
    d80e:	701a      	strb	r2, [r3, #0]
    return MultiCast(BROADCAST_TO_ALL, SecEn);
    d810:	1dfb      	adds	r3, r7, #7
    d812:	781b      	ldrb	r3, [r3, #0]
    d814:	0019      	movs	r1, r3
    d816:	2001      	movs	r0, #1
    d818:	4b03      	ldr	r3, [pc, #12]	; (d828 <MiApp_BroadcastPacket+0x24>)
    d81a:	4798      	blx	r3
    d81c:	0003      	movs	r3, r0
}
    d81e:	0018      	movs	r0, r3
    d820:	46bd      	mov	sp, r7
    d822:	b002      	add	sp, #8
    d824:	bd80      	pop	{r7, pc}
    d826:	46c0      	nop			; (mov r8, r8)
    d828:	0000d82d 	.word	0x0000d82d

0000d82c <MultiCast>:


bool MultiCast( uint8_t MultiCastMode, bool SecEn )
{
    d82c:	b590      	push	{r4, r7, lr}
    d82e:	b083      	sub	sp, #12
    d830:	af00      	add	r7, sp, #0
    d832:	0002      	movs	r2, r0
    d834:	1dfb      	adds	r3, r7, #7
    d836:	701a      	strb	r2, [r3, #0]
    d838:	1dbb      	adds	r3, r7, #6
    d83a:	1c0a      	adds	r2, r1, #0
    d83c:	701a      	strb	r2, [r3, #0]
    TxBuffer[0] = defaultHops;
    d83e:	4b36      	ldr	r3, [pc, #216]	; (d918 <MultiCast+0xec>)
    d840:	781a      	ldrb	r2, [r3, #0]
    d842:	4b36      	ldr	r3, [pc, #216]	; (d91c <MultiCast+0xf0>)
    d844:	701a      	strb	r2, [r3, #0]
    TxBuffer[1] = 0x02;
    d846:	4b35      	ldr	r3, [pc, #212]	; (d91c <MultiCast+0xf0>)
    d848:	2202      	movs	r2, #2
    d84a:	705a      	strb	r2, [r3, #1]
    TxBuffer[2] = myPANID.v[0];
    d84c:	4b34      	ldr	r3, [pc, #208]	; (d920 <MultiCast+0xf4>)
    d84e:	781a      	ldrb	r2, [r3, #0]
    d850:	4b32      	ldr	r3, [pc, #200]	; (d91c <MultiCast+0xf0>)
    d852:	709a      	strb	r2, [r3, #2]
    TxBuffer[3] = myPANID.v[1];
    d854:	4b32      	ldr	r3, [pc, #200]	; (d920 <MultiCast+0xf4>)
    d856:	785a      	ldrb	r2, [r3, #1]
    d858:	4b30      	ldr	r3, [pc, #192]	; (d91c <MultiCast+0xf0>)
    d85a:	70da      	strb	r2, [r3, #3]
    switch( MultiCastMode )
    d85c:	1dfb      	adds	r3, r7, #7
    d85e:	781b      	ldrb	r3, [r3, #0]
    d860:	2b02      	cmp	r3, #2
    d862:	d00b      	beq.n	d87c <MultiCast+0x50>
    d864:	2b03      	cmp	r3, #3
    d866:	d005      	beq.n	d874 <MultiCast+0x48>
    d868:	2b01      	cmp	r3, #1
    d86a:	d10b      	bne.n	d884 <MultiCast+0x58>
    {
        case BROADCAST_TO_ALL:
            TxBuffer[4] = 0xFF;
    d86c:	4b2b      	ldr	r3, [pc, #172]	; (d91c <MultiCast+0xf0>)
    d86e:	22ff      	movs	r2, #255	; 0xff
    d870:	711a      	strb	r2, [r3, #4]
            break;
    d872:	e009      	b.n	d888 <MultiCast+0x5c>
        
        case MULTICAST_TO_FFDS:
            TxBuffer[4] = 0xFE;
    d874:	4b29      	ldr	r3, [pc, #164]	; (d91c <MultiCast+0xf0>)
    d876:	22fe      	movs	r2, #254	; 0xfe
    d878:	711a      	strb	r2, [r3, #4]
            break;
    d87a:	e005      	b.n	d888 <MultiCast+0x5c>
            
        case MULTICAST_TO_COORDINATORS:
            TxBuffer[4] = 0xFD;
    d87c:	4b27      	ldr	r3, [pc, #156]	; (d91c <MultiCast+0xf0>)
    d87e:	22fd      	movs	r2, #253	; 0xfd
    d880:	711a      	strb	r2, [r3, #4]
            break;
    d882:	e001      	b.n	d888 <MultiCast+0x5c>
            
        default:
            return false;
    d884:	2300      	movs	r3, #0
    d886:	e042      	b.n	d90e <MultiCast+0xe2>
    }    
    TxBuffer[5] = 0xFF;
    d888:	4b24      	ldr	r3, [pc, #144]	; (d91c <MultiCast+0xf0>)
    d88a:	22ff      	movs	r2, #255	; 0xff
    d88c:	715a      	strb	r2, [r3, #5]
    TxBuffer[6] = myPANID.v[0];
    d88e:	4b24      	ldr	r3, [pc, #144]	; (d920 <MultiCast+0xf4>)
    d890:	781a      	ldrb	r2, [r3, #0]
    d892:	4b22      	ldr	r3, [pc, #136]	; (d91c <MultiCast+0xf0>)
    d894:	719a      	strb	r2, [r3, #6]
    TxBuffer[7] = myPANID.v[1];
    d896:	4b22      	ldr	r3, [pc, #136]	; (d920 <MultiCast+0xf4>)
    d898:	785a      	ldrb	r2, [r3, #1]
    d89a:	4b20      	ldr	r3, [pc, #128]	; (d91c <MultiCast+0xf0>)
    d89c:	71da      	strb	r2, [r3, #7]
    TxBuffer[8] = myShortAddress.v[0];
    d89e:	4b21      	ldr	r3, [pc, #132]	; (d924 <MultiCast+0xf8>)
    d8a0:	781a      	ldrb	r2, [r3, #0]
    d8a2:	4b1e      	ldr	r3, [pc, #120]	; (d91c <MultiCast+0xf0>)
    d8a4:	721a      	strb	r2, [r3, #8]
    TxBuffer[9] = myShortAddress.v[1];
    d8a6:	4b1f      	ldr	r3, [pc, #124]	; (d924 <MultiCast+0xf8>)
    d8a8:	785a      	ldrb	r2, [r3, #1]
    d8aa:	4b1c      	ldr	r3, [pc, #112]	; (d91c <MultiCast+0xf0>)
    d8ac:	725a      	strb	r2, [r3, #9]
    TxBuffer[10] = MiWiPROSeqNum++;
    d8ae:	4b1e      	ldr	r3, [pc, #120]	; (d928 <MultiCast+0xfc>)
    d8b0:	781b      	ldrb	r3, [r3, #0]
    d8b2:	1c5a      	adds	r2, r3, #1
    d8b4:	b2d1      	uxtb	r1, r2
    d8b6:	4a1c      	ldr	r2, [pc, #112]	; (d928 <MultiCast+0xfc>)
    d8b8:	7011      	strb	r1, [r2, #0]
    d8ba:	4a18      	ldr	r2, [pc, #96]	; (d91c <MultiCast+0xf0>)
    d8bc:	7293      	strb	r3, [r2, #10]
            }    
            return true;
        }    
    #endif
    
    MTP.flags.Val = 0;
    d8be:	4b1b      	ldr	r3, [pc, #108]	; (d92c <MultiCast+0x100>)
    d8c0:	2200      	movs	r2, #0
    d8c2:	701a      	strb	r2, [r3, #0]
    MTP.flags.bits.broadcast = 1;
    d8c4:	4b19      	ldr	r3, [pc, #100]	; (d92c <MultiCast+0x100>)
    d8c6:	781a      	ldrb	r2, [r3, #0]
    d8c8:	2104      	movs	r1, #4
    d8ca:	430a      	orrs	r2, r1
    d8cc:	701a      	strb	r2, [r3, #0]
    MTP.flags.bits.secEn = SecEn;
    d8ce:	4b17      	ldr	r3, [pc, #92]	; (d92c <MultiCast+0x100>)
    d8d0:	1dba      	adds	r2, r7, #6
    d8d2:	7812      	ldrb	r2, [r2, #0]
    d8d4:	2101      	movs	r1, #1
    d8d6:	400a      	ands	r2, r1
    d8d8:	00d0      	lsls	r0, r2, #3
    d8da:	781a      	ldrb	r2, [r3, #0]
    d8dc:	2108      	movs	r1, #8
    d8de:	438a      	bics	r2, r1
    d8e0:	1c11      	adds	r1, r2, #0
    d8e2:	1c02      	adds	r2, r0, #0
    d8e4:	430a      	orrs	r2, r1
    d8e6:	701a      	strb	r2, [r3, #0]
        
    #if defined(IEEE_802_15_4)
        MTP.altSrcAddr = true;
        MTP.DestPANID.Val = myPANID.Val;
    #else
        if(MultiCastMode == MULTICAST_TO_COORDINATORS)
    d8e8:	1dfb      	adds	r3, r7, #7
    d8ea:	781b      	ldrb	r3, [r3, #0]
    d8ec:	2b02      	cmp	r3, #2
    d8ee:	d105      	bne.n	d8fc <MultiCast+0xd0>
        {
            MTP.flags.bits.sourcePrsnt = 1;
    d8f0:	4b0e      	ldr	r3, [pc, #56]	; (d92c <MultiCast+0x100>)
    d8f2:	781a      	ldrb	r2, [r3, #0]
    d8f4:	2180      	movs	r1, #128	; 0x80
    d8f6:	4249      	negs	r1, r1
    d8f8:	430a      	orrs	r2, r1
    d8fa:	701a      	strb	r2, [r3, #0]
        }    
    #endif    

    return MiMAC_SendPacket(MTP, TxBuffer, TxData);    
    d8fc:	4b0c      	ldr	r3, [pc, #48]	; (d930 <MultiCast+0x104>)
    d8fe:	781b      	ldrb	r3, [r3, #0]
    d900:	4a06      	ldr	r2, [pc, #24]	; (d91c <MultiCast+0xf0>)
    d902:	490a      	ldr	r1, [pc, #40]	; (d92c <MultiCast+0x100>)
    d904:	6808      	ldr	r0, [r1, #0]
    d906:	6849      	ldr	r1, [r1, #4]
    d908:	4c0a      	ldr	r4, [pc, #40]	; (d934 <MultiCast+0x108>)
    d90a:	47a0      	blx	r4
    d90c:	0003      	movs	r3, r0
}    
    d90e:	0018      	movs	r0, r3
    d910:	46bd      	mov	sp, r7
    d912:	b003      	add	sp, #12
    d914:	bd90      	pop	{r4, r7, pc}
    d916:	46c0      	nop			; (mov r8, r8)
    d918:	2000001b 	.word	0x2000001b
    d91c:	200012e4 	.word	0x200012e4
    d920:	20001290 	.word	0x20001290
    d924:	20001140 	.word	0x20001140
    d928:	200012dd 	.word	0x200012dd
    d92c:	200012b8 	.word	0x200012b8
    d930:	200012dc 	.word	0x200012dc
    d934:	0000fd09 	.word	0x0000fd09

0000d938 <MiApp_UnicastConnection>:
 *      None
 *
 *****************************************************************************************/  
uint8_t MiApp_UnicastConnection( INPUT uint8_t ConnectionIndex, 
                        INPUT bool SecEn)
{
    d938:	b580      	push	{r7, lr}
    d93a:	b086      	sub	sp, #24
    d93c:	af00      	add	r7, sp, #0
    d93e:	0002      	movs	r2, r0
    d940:	1dfb      	adds	r3, r7, #7
    d942:	701a      	strb	r2, [r3, #0]
    d944:	1dbb      	adds	r3, r7, #6
    d946:	1c0a      	adds	r2, r1, #0
    d948:	701a      	strb	r2, [r3, #0]
    uint8_t MiWiPROFrameControl;
    
    if( ConnectionTable[ConnectionIndex].status.bits.isValid == 0 )
    d94a:	1dfb      	adds	r3, r7, #7
    d94c:	781b      	ldrb	r3, [r3, #0]
    d94e:	4a6c      	ldr	r2, [pc, #432]	; (db00 <MiApp_UnicastConnection+0x1c8>)
    d950:	2108      	movs	r1, #8
    d952:	011b      	lsls	r3, r3, #4
    d954:	18d3      	adds	r3, r2, r3
    d956:	185b      	adds	r3, r3, r1
    d958:	791b      	ldrb	r3, [r3, #4]
    d95a:	061b      	lsls	r3, r3, #24
    d95c:	0fdb      	lsrs	r3, r3, #31
    d95e:	b2db      	uxtb	r3, r3
    d960:	2b00      	cmp	r3, #0
    d962:	d101      	bne.n	d968 <MiApp_UnicastConnection+0x30>
    {
        return false;
    d964:	2300      	movs	r3, #0
    d966:	e0c7      	b.n	daf8 <MiApp_UnicastConnection+0x1c0>
    }
    if( MiWiPROAckRequired && TxBuffer[MIWI_PRO_HEADER_LEN])
    d968:	4b66      	ldr	r3, [pc, #408]	; (db04 <MiApp_UnicastConnection+0x1cc>)
    d96a:	781b      	ldrb	r3, [r3, #0]
    d96c:	2b00      	cmp	r3, #0
    d96e:	d01d      	beq.n	d9ac <MiApp_UnicastConnection+0x74>
    d970:	4b65      	ldr	r3, [pc, #404]	; (db08 <MiApp_UnicastConnection+0x1d0>)
    d972:	7adb      	ldrb	r3, [r3, #11]
    d974:	2b00      	cmp	r3, #0
    d976:	d019      	beq.n	d9ac <MiApp_UnicastConnection+0x74>
    {
		//printf("hasAck: %x",hasAck);
		hasAck=false;
    d978:	4b64      	ldr	r3, [pc, #400]	; (db0c <MiApp_UnicastConnection+0x1d4>)
    d97a:	2200      	movs	r2, #0
    d97c:	701a      	strb	r2, [r3, #0]
		MiWiPROStateMachine.bits.MiWiPROAckInProgress = 1;
    d97e:	4b64      	ldr	r3, [pc, #400]	; (db10 <MiApp_UnicastConnection+0x1d8>)
    d980:	781a      	ldrb	r2, [r3, #0]
    d982:	2108      	movs	r1, #8
    d984:	430a      	orrs	r2, r1
    d986:	701a      	strb	r2, [r3, #0]
        AcknowledgementSeq = MiWiPROSeqNum;
    d988:	4b62      	ldr	r3, [pc, #392]	; (db14 <MiApp_UnicastConnection+0x1dc>)
    d98a:	781a      	ldrb	r2, [r3, #0]
    d98c:	4b62      	ldr	r3, [pc, #392]	; (db18 <MiApp_UnicastConnection+0x1e0>)
    d98e:	701a      	strb	r2, [r3, #0]
        AcknowledgementAddr.Val = ConnectionTable[ConnectionIndex].AltAddress.Val;
    d990:	1dfb      	adds	r3, r7, #7
    d992:	781b      	ldrb	r3, [r3, #0]
    d994:	4a5a      	ldr	r2, [pc, #360]	; (db00 <MiApp_UnicastConnection+0x1c8>)
    d996:	011b      	lsls	r3, r3, #4
    d998:	18d3      	adds	r3, r2, r3
    d99a:	3302      	adds	r3, #2
    d99c:	881a      	ldrh	r2, [r3, #0]
    d99e:	4b5f      	ldr	r3, [pc, #380]	; (db1c <MiApp_UnicastConnection+0x1e4>)
    d9a0:	801a      	strh	r2, [r3, #0]
        MiWiPROFrameControl = 0x06;
    d9a2:	2317      	movs	r3, #23
    d9a4:	18fb      	adds	r3, r7, r3
    d9a6:	2206      	movs	r2, #6
    d9a8:	701a      	strb	r2, [r3, #0]
    d9aa:	e008      	b.n	d9be <MiApp_UnicastConnection+0x86>
    }    
    else
    {
        MiWiPROStateMachine.bits.MiWiPROAckInProgress = 0;
    d9ac:	4b58      	ldr	r3, [pc, #352]	; (db10 <MiApp_UnicastConnection+0x1d8>)
    d9ae:	781a      	ldrb	r2, [r3, #0]
    d9b0:	2108      	movs	r1, #8
    d9b2:	438a      	bics	r2, r1
    d9b4:	701a      	strb	r2, [r3, #0]
        MiWiPROFrameControl = 0x02;
    d9b6:	2317      	movs	r3, #23
    d9b8:	18fb      	adds	r3, r7, r3
    d9ba:	2202      	movs	r2, #2
    d9bc:	701a      	strb	r2, [r3, #0]
    }
        
    TxBuffer[0] = defaultHops;				//number of hops
    d9be:	4b58      	ldr	r3, [pc, #352]	; (db20 <MiApp_UnicastConnection+0x1e8>)
    d9c0:	781a      	ldrb	r2, [r3, #0]
    d9c2:	4b51      	ldr	r3, [pc, #324]	; (db08 <MiApp_UnicastConnection+0x1d0>)
    d9c4:	701a      	strb	r2, [r3, #0]
    TxBuffer[1] = MiWiPROFrameControl;		//Frame Control
    d9c6:	4b50      	ldr	r3, [pc, #320]	; (db08 <MiApp_UnicastConnection+0x1d0>)
    d9c8:	2217      	movs	r2, #23
    d9ca:	18ba      	adds	r2, r7, r2
    d9cc:	7812      	ldrb	r2, [r2, #0]
    d9ce:	705a      	strb	r2, [r3, #1]
    TxBuffer[2] = ConnectionTable[ConnectionIndex].PANID.v[0];			
    d9d0:	1dfb      	adds	r3, r7, #7
    d9d2:	781a      	ldrb	r2, [r3, #0]
    d9d4:	4b4a      	ldr	r3, [pc, #296]	; (db00 <MiApp_UnicastConnection+0x1c8>)
    d9d6:	0112      	lsls	r2, r2, #4
    d9d8:	5cd2      	ldrb	r2, [r2, r3]
    d9da:	4b4b      	ldr	r3, [pc, #300]	; (db08 <MiApp_UnicastConnection+0x1d0>)
    d9dc:	709a      	strb	r2, [r3, #2]
    TxBuffer[3] = ConnectionTable[ConnectionIndex].PANID.v[1];
    d9de:	1dfb      	adds	r3, r7, #7
    d9e0:	781b      	ldrb	r3, [r3, #0]
    d9e2:	4a47      	ldr	r2, [pc, #284]	; (db00 <MiApp_UnicastConnection+0x1c8>)
    d9e4:	011b      	lsls	r3, r3, #4
    d9e6:	18d3      	adds	r3, r2, r3
    d9e8:	3301      	adds	r3, #1
    d9ea:	781a      	ldrb	r2, [r3, #0]
    d9ec:	4b46      	ldr	r3, [pc, #280]	; (db08 <MiApp_UnicastConnection+0x1d0>)
    d9ee:	70da      	strb	r2, [r3, #3]
    TxBuffer[4] = ConnectionTable[ConnectionIndex].AltAddress.v[0];
    d9f0:	1dfb      	adds	r3, r7, #7
    d9f2:	781b      	ldrb	r3, [r3, #0]
    d9f4:	4a42      	ldr	r2, [pc, #264]	; (db00 <MiApp_UnicastConnection+0x1c8>)
    d9f6:	011b      	lsls	r3, r3, #4
    d9f8:	18d3      	adds	r3, r2, r3
    d9fa:	3302      	adds	r3, #2
    d9fc:	781a      	ldrb	r2, [r3, #0]
    d9fe:	4b42      	ldr	r3, [pc, #264]	; (db08 <MiApp_UnicastConnection+0x1d0>)
    da00:	711a      	strb	r2, [r3, #4]
    TxBuffer[5] = ConnectionTable[ConnectionIndex].AltAddress.v[1];
    da02:	1dfb      	adds	r3, r7, #7
    da04:	781b      	ldrb	r3, [r3, #0]
    da06:	4a3e      	ldr	r2, [pc, #248]	; (db00 <MiApp_UnicastConnection+0x1c8>)
    da08:	011b      	lsls	r3, r3, #4
    da0a:	18d3      	adds	r3, r2, r3
    da0c:	3303      	adds	r3, #3
    da0e:	781a      	ldrb	r2, [r3, #0]
    da10:	4b3d      	ldr	r3, [pc, #244]	; (db08 <MiApp_UnicastConnection+0x1d0>)
    da12:	715a      	strb	r2, [r3, #5]
    TxBuffer[6] = myPANID.v[0];			//source PANID LSB
    da14:	4b43      	ldr	r3, [pc, #268]	; (db24 <MiApp_UnicastConnection+0x1ec>)
    da16:	781a      	ldrb	r2, [r3, #0]
    da18:	4b3b      	ldr	r3, [pc, #236]	; (db08 <MiApp_UnicastConnection+0x1d0>)
    da1a:	719a      	strb	r2, [r3, #6]
    TxBuffer[7] = myPANID.v[1];			//source PANID MSB
    da1c:	4b41      	ldr	r3, [pc, #260]	; (db24 <MiApp_UnicastConnection+0x1ec>)
    da1e:	785a      	ldrb	r2, [r3, #1]
    da20:	4b39      	ldr	r3, [pc, #228]	; (db08 <MiApp_UnicastConnection+0x1d0>)
    da22:	71da      	strb	r2, [r3, #7]
    TxBuffer[8] = myShortAddress.v[0];	//source address LSB
    da24:	4b40      	ldr	r3, [pc, #256]	; (db28 <MiApp_UnicastConnection+0x1f0>)
    da26:	781a      	ldrb	r2, [r3, #0]
    da28:	4b37      	ldr	r3, [pc, #220]	; (db08 <MiApp_UnicastConnection+0x1d0>)
    da2a:	721a      	strb	r2, [r3, #8]
    TxBuffer[9] = myShortAddress.v[1];	//source address MSB
    da2c:	4b3e      	ldr	r3, [pc, #248]	; (db28 <MiApp_UnicastConnection+0x1f0>)
    da2e:	785a      	ldrb	r2, [r3, #1]
    da30:	4b35      	ldr	r3, [pc, #212]	; (db08 <MiApp_UnicastConnection+0x1d0>)
    da32:	725a      	strb	r2, [r3, #9]
    TxBuffer[10] = MiWiPROSeqNum++;			    //sequence number
    da34:	4b37      	ldr	r3, [pc, #220]	; (db14 <MiApp_UnicastConnection+0x1dc>)
    da36:	781b      	ldrb	r3, [r3, #0]
    da38:	1c5a      	adds	r2, r3, #1
    da3a:	b2d1      	uxtb	r1, r2
    da3c:	4a35      	ldr	r2, [pc, #212]	; (db14 <MiApp_UnicastConnection+0x1dc>)
    da3e:	7011      	strb	r1, [r2, #0]
    da40:	4a31      	ldr	r2, [pc, #196]	; (db08 <MiApp_UnicastConnection+0x1d0>)
    da42:	7293      	strb	r3, [r2, #10]
    
    #if defined(NWK_ROLE_COORDINATOR)


		if( false == RouteMessage(ConnectionTable[ConnectionIndex].PANID, ConnectionTable[ConnectionIndex].AltAddress, SecEn) )
    da44:	1dfb      	adds	r3, r7, #7
    da46:	781a      	ldrb	r2, [r3, #0]
    da48:	1dfb      	adds	r3, r7, #7
    da4a:	781b      	ldrb	r3, [r3, #0]
    da4c:	1db9      	adds	r1, r7, #6
    da4e:	7808      	ldrb	r0, [r1, #0]
    da50:	492b      	ldr	r1, [pc, #172]	; (db00 <MiApp_UnicastConnection+0x1c8>)
    da52:	011b      	lsls	r3, r3, #4
    da54:	18cb      	adds	r3, r1, r3
    da56:	3302      	adds	r3, #2
    da58:	8819      	ldrh	r1, [r3, #0]
    da5a:	4b29      	ldr	r3, [pc, #164]	; (db00 <MiApp_UnicastConnection+0x1c8>)
    da5c:	0112      	lsls	r2, r2, #4
    da5e:	5ad3      	ldrh	r3, [r2, r3]
    da60:	0002      	movs	r2, r0
    da62:	1c18      	adds	r0, r3, #0
    da64:	4b31      	ldr	r3, [pc, #196]	; (db2c <MiApp_UnicastConnection+0x1f4>)
    da66:	4798      	blx	r3
    da68:	0003      	movs	r3, r0
    da6a:	001a      	movs	r2, r3
    da6c:	2301      	movs	r3, #1
    da6e:	4053      	eors	r3, r2
    da70:	b2db      	uxtb	r3, r3
    da72:	2b00      	cmp	r3, #0
    da74:	d006      	beq.n	da84 <MiApp_UnicastConnection+0x14c>
        {
            MiWiPROStateMachine.bits.MiWiPROAckInProgress = 0;
    da76:	4b26      	ldr	r3, [pc, #152]	; (db10 <MiApp_UnicastConnection+0x1d8>)
    da78:	781a      	ldrb	r2, [r3, #0]
    da7a:	2108      	movs	r1, #8
    da7c:	438a      	bics	r2, r1
    da7e:	701a      	strb	r2, [r3, #0]
            return false;
    da80:	2300      	movs	r3, #0
    da82:	e039      	b.n	daf8 <MiApp_UnicastConnection+0x1c0>
        }
        else if( MiWiPROStateMachine.bits.MiWiPROAckInProgress &&
    da84:	4b22      	ldr	r3, [pc, #136]	; (db10 <MiApp_UnicastConnection+0x1d8>)
    da86:	781b      	ldrb	r3, [r3, #0]
    da88:	2208      	movs	r2, #8
    da8a:	4013      	ands	r3, r2
    da8c:	b2db      	uxtb	r3, r3
    da8e:	2b00      	cmp	r3, #0
    da90:	d02d      	beq.n	daee <MiApp_UnicastConnection+0x1b6>
                 (ConnectionTable[ConnectionIndex].AltAddress.v[0] < 0x80))
    da92:	1dfb      	adds	r3, r7, #7
    da94:	781b      	ldrb	r3, [r3, #0]
    da96:	4a1a      	ldr	r2, [pc, #104]	; (db00 <MiApp_UnicastConnection+0x1c8>)
    da98:	011b      	lsls	r3, r3, #4
    da9a:	18d3      	adds	r3, r2, r3
    da9c:	3302      	adds	r3, #2
    da9e:	781b      	ldrb	r3, [r3, #0]
    daa0:	b25b      	sxtb	r3, r3
        else if( MiWiPROStateMachine.bits.MiWiPROAckInProgress &&
    daa2:	2b00      	cmp	r3, #0
    daa4:	db23      	blt.n	daee <MiApp_UnicastConnection+0x1b6>
        {
            MIWI_TICK t1, t2;
            t1 = MiWi_TickGet();
    daa6:	4b22      	ldr	r3, [pc, #136]	; (db30 <MiApp_UnicastConnection+0x1f8>)
    daa8:	4798      	blx	r3
    daaa:	0003      	movs	r3, r0
    daac:	613b      	str	r3, [r7, #16]
                    MiApp_DiscardMessage();
                }                
                //MiWiPROTasks();
				*/ 
						
                if(  hasAck == true )
    daae:	4b17      	ldr	r3, [pc, #92]	; (db0c <MiApp_UnicastConnection+0x1d4>)
    dab0:	781b      	ldrb	r3, [r3, #0]
    dab2:	2b00      	cmp	r3, #0
    dab4:	d009      	beq.n	daca <MiApp_UnicastConnection+0x192>
                {
					MiWiPROStateMachine.bits.MiWiPROAckInProgress = 0;
    dab6:	4b16      	ldr	r3, [pc, #88]	; (db10 <MiApp_UnicastConnection+0x1d8>)
    dab8:	781a      	ldrb	r2, [r3, #0]
    daba:	2108      	movs	r1, #8
    dabc:	438a      	bics	r2, r1
    dabe:	701a      	strb	r2, [r3, #0]
					//printf("ACK Confirmed2...\n\r");
					hasAck = false;
    dac0:	4b12      	ldr	r3, [pc, #72]	; (db0c <MiApp_UnicastConnection+0x1d4>)
    dac2:	2200      	movs	r2, #0
    dac4:	701a      	strb	r2, [r3, #0]
                    return true;
    dac6:	2301      	movs	r3, #1
    dac8:	e016      	b.n	daf8 <MiApp_UnicastConnection+0x1c0>
                } 
								  
                t2 = MiWi_TickGet();
    daca:	4b19      	ldr	r3, [pc, #100]	; (db30 <MiApp_UnicastConnection+0x1f8>)
    dacc:	4798      	blx	r3
    dace:	0003      	movs	r3, r0
    dad0:	60fb      	str	r3, [r7, #12]
                if( MiWi_TickGetDiff(t2, t1) > MIWI_PRO_ACK_TIMEOUT )	
    dad2:	68fa      	ldr	r2, [r7, #12]
    dad4:	693b      	ldr	r3, [r7, #16]
    dad6:	1ad2      	subs	r2, r2, r3
    dad8:	2380      	movs	r3, #128	; 0x80
    dada:	019b      	lsls	r3, r3, #6
    dadc:	429a      	cmp	r2, r3
    dade:	d9e6      	bls.n	daae <MiApp_UnicastConnection+0x176>
                //if( MiWi_TickGetDiff(t2, t1) > (set_PACKET_RECORD_TIMEOUT*2) )	//ohm ACK Timeout
                {
                    MiWiPROStateMachine.bits.MiWiPROAckInProgress = 0;
    dae0:	4b0b      	ldr	r3, [pc, #44]	; (db10 <MiApp_UnicastConnection+0x1d8>)
    dae2:	781a      	ldrb	r2, [r3, #0]
    dae4:	2108      	movs	r1, #8
    dae6:	438a      	bics	r2, r1
    dae8:	701a      	strb	r2, [r3, #0]
                    return false;
    daea:	2300      	movs	r3, #0
    daec:	e004      	b.n	daf8 <MiApp_UnicastConnection+0x1c0>
                }    
            }    
        }
		printf("CHK ??????????????????\n\r");
    daee:	4b11      	ldr	r3, [pc, #68]	; (db34 <MiApp_UnicastConnection+0x1fc>)
    daf0:	0018      	movs	r0, r3
    daf2:	4b11      	ldr	r3, [pc, #68]	; (db38 <MiApp_UnicastConnection+0x200>)
    daf4:	4798      	blx	r3
        return true;
    daf6:	2301      	movs	r3, #1
                }    
            }    
        }
        return true;
    #endif
}                        
    daf8:	0018      	movs	r0, r3
    dafa:	46bd      	mov	sp, r7
    dafc:	b006      	add	sp, #24
    dafe:	bd80      	pop	{r7, pc}
    db00:	20001150 	.word	0x20001150
    db04:	2000001a 	.word	0x2000001a
    db08:	200012e4 	.word	0x200012e4
    db0c:	20000c7c 	.word	0x20000c7c
    db10:	20001144 	.word	0x20001144
    db14:	200012dd 	.word	0x200012dd
    db18:	20000019 	.word	0x20000019
    db1c:	200013c0 	.word	0x200013c0
    db20:	2000001b 	.word	0x2000001b
    db24:	20001290 	.word	0x20001290
    db28:	20001140 	.word	0x20001140
    db2c:	0000c189 	.word	0x0000c189
    db30:	0000ebad 	.word	0x0000ebad
    db34:	0001ce60 	.word	0x0001ce60
    db38:	0001782d 	.word	0x0001782d

0000db3c <UnicastShortAddress>:




bool UnicastShortAddress(uint8_t *DestAddress)
{
    db3c:	b590      	push	{r4, r7, lr}
    db3e:	b085      	sub	sp, #20
    db40:	af00      	add	r7, sp, #0
    db42:	6078      	str	r0, [r7, #4]
    MiWiPROStateMachine.bits.MiWiPROAckInProgress = 0;
    db44:	4b48      	ldr	r3, [pc, #288]	; (dc68 <UnicastShortAddress+0x12c>)
    db46:	781a      	ldrb	r2, [r3, #0]
    db48:	2108      	movs	r1, #8
    db4a:	438a      	bics	r2, r1
    db4c:	701a      	strb	r2, [r3, #0]

    TxBuffer[0] = defaultHops;          //number of hops
    db4e:	4b47      	ldr	r3, [pc, #284]	; (dc6c <UnicastShortAddress+0x130>)
    db50:	781a      	ldrb	r2, [r3, #0]
    db52:	4b47      	ldr	r3, [pc, #284]	; (dc70 <UnicastShortAddress+0x134>)
    db54:	701a      	strb	r2, [r3, #0]
    TxBuffer[1] = 0X02;                 //Frame Control
    db56:	4b46      	ldr	r3, [pc, #280]	; (dc70 <UnicastShortAddress+0x134>)
    db58:	2202      	movs	r2, #2
    db5a:	705a      	strb	r2, [r3, #1]
    TxBuffer[2] = myPANID.v[0];
    db5c:	4b45      	ldr	r3, [pc, #276]	; (dc74 <UnicastShortAddress+0x138>)
    db5e:	781a      	ldrb	r2, [r3, #0]
    db60:	4b43      	ldr	r3, [pc, #268]	; (dc70 <UnicastShortAddress+0x134>)
    db62:	709a      	strb	r2, [r3, #2]
    TxBuffer[3] = myPANID.v[1];
    db64:	4b43      	ldr	r3, [pc, #268]	; (dc74 <UnicastShortAddress+0x138>)
    db66:	785a      	ldrb	r2, [r3, #1]
    db68:	4b41      	ldr	r3, [pc, #260]	; (dc70 <UnicastShortAddress+0x134>)
    db6a:	70da      	strb	r2, [r3, #3]
    TxBuffer[4] = DestAddress[0];
    db6c:	687b      	ldr	r3, [r7, #4]
    db6e:	781a      	ldrb	r2, [r3, #0]
    db70:	4b3f      	ldr	r3, [pc, #252]	; (dc70 <UnicastShortAddress+0x134>)
    db72:	711a      	strb	r2, [r3, #4]
    TxBuffer[5] = DestAddress[1];
    db74:	687b      	ldr	r3, [r7, #4]
    db76:	785a      	ldrb	r2, [r3, #1]
    db78:	4b3d      	ldr	r3, [pc, #244]	; (dc70 <UnicastShortAddress+0x134>)
    db7a:	715a      	strb	r2, [r3, #5]
    TxBuffer[6] = myPANID.v[0];			//source PANID LSB
    db7c:	4b3d      	ldr	r3, [pc, #244]	; (dc74 <UnicastShortAddress+0x138>)
    db7e:	781a      	ldrb	r2, [r3, #0]
    db80:	4b3b      	ldr	r3, [pc, #236]	; (dc70 <UnicastShortAddress+0x134>)
    db82:	719a      	strb	r2, [r3, #6]
    TxBuffer[7] = myPANID.v[1];			//source PANID MSB
    db84:	4b3b      	ldr	r3, [pc, #236]	; (dc74 <UnicastShortAddress+0x138>)
    db86:	785a      	ldrb	r2, [r3, #1]
    db88:	4b39      	ldr	r3, [pc, #228]	; (dc70 <UnicastShortAddress+0x134>)
    db8a:	71da      	strb	r2, [r3, #7]
    TxBuffer[8] = myShortAddress.v[0];	//source address LSB
    db8c:	4b3a      	ldr	r3, [pc, #232]	; (dc78 <UnicastShortAddress+0x13c>)
    db8e:	781a      	ldrb	r2, [r3, #0]
    db90:	4b37      	ldr	r3, [pc, #220]	; (dc70 <UnicastShortAddress+0x134>)
    db92:	721a      	strb	r2, [r3, #8]
    TxBuffer[9] = myShortAddress.v[1];	//source address MSB
    db94:	4b38      	ldr	r3, [pc, #224]	; (dc78 <UnicastShortAddress+0x13c>)
    db96:	785a      	ldrb	r2, [r3, #1]
    db98:	4b35      	ldr	r3, [pc, #212]	; (dc70 <UnicastShortAddress+0x134>)
    db9a:	725a      	strb	r2, [r3, #9]
    TxBuffer[10] = MiWiPROSeqNum++;	    //sequence number
    db9c:	4b37      	ldr	r3, [pc, #220]	; (dc7c <UnicastShortAddress+0x140>)
    db9e:	781b      	ldrb	r3, [r3, #0]
    dba0:	1c5a      	adds	r2, r3, #1
    dba2:	b2d1      	uxtb	r1, r2
    dba4:	4a35      	ldr	r2, [pc, #212]	; (dc7c <UnicastShortAddress+0x140>)
    dba6:	7011      	strb	r1, [r2, #0]
    dba8:	4a31      	ldr	r2, [pc, #196]	; (dc70 <UnicastShortAddress+0x134>)
    dbaa:	7293      	strb	r3, [r2, #10]
                return true;
            }
        #endif


        MTP.flags.Val = 0;
    dbac:	4b34      	ldr	r3, [pc, #208]	; (dc80 <UnicastShortAddress+0x144>)
    dbae:	2200      	movs	r2, #0
    dbb0:	701a      	strb	r2, [r3, #0]
		MTP.flags.bits.packetType = PACKET_TYPE_RESERVE;
    dbb2:	4b33      	ldr	r3, [pc, #204]	; (dc80 <UnicastShortAddress+0x144>)
    dbb4:	781a      	ldrb	r2, [r3, #0]
    dbb6:	2103      	movs	r1, #3
    dbb8:	430a      	orrs	r2, r1
    dbba:	701a      	strb	r2, [r3, #0]
        MTP.flags.bits.ackReq = 1;
    dbbc:	4b30      	ldr	r3, [pc, #192]	; (dc80 <UnicastShortAddress+0x144>)
    dbbe:	781a      	ldrb	r2, [r3, #0]
    dbc0:	2120      	movs	r1, #32
    dbc2:	430a      	orrs	r2, r1
    dbc4:	701a      	strb	r2, [r3, #0]
		//MTP.flags.bits.destPrsnt = 0;
		//MTP.flags.bits.sourcePrsnt = 0;
		//MTP.flags.bits.broadcast = 0;
		
		MTP.DestAddress = DestAddress;
    dbc6:	4b2e      	ldr	r3, [pc, #184]	; (dc80 <UnicastShortAddress+0x144>)
    dbc8:	687a      	ldr	r2, [r7, #4]
    dbca:	605a      	str	r2, [r3, #4]
            //MTP.DestAddress = ConnectionTable[myParent].AltAddress.v;
        #else
            //MTP.DestAddress = ConnectionTable[myParent].Address;
        #endif
		
		MiWiPROStateMachine.bits.MiWiPROAckInProgress = 1;
    dbcc:	4b26      	ldr	r3, [pc, #152]	; (dc68 <UnicastShortAddress+0x12c>)
    dbce:	781a      	ldrb	r2, [r3, #0]
    dbd0:	2108      	movs	r1, #8
    dbd2:	430a      	orrs	r2, r1
    dbd4:	701a      	strb	r2, [r3, #0]
		hasAck = false;
    dbd6:	4b2b      	ldr	r3, [pc, #172]	; (dc84 <UnicastShortAddress+0x148>)
    dbd8:	2200      	movs	r2, #0
    dbda:	701a      	strb	r2, [r3, #0]
		
        if( MiMAC_SendPacket(MTP, TxBuffer, TxData) == false )
    dbdc:	4b2a      	ldr	r3, [pc, #168]	; (dc88 <UnicastShortAddress+0x14c>)
    dbde:	781b      	ldrb	r3, [r3, #0]
    dbe0:	4a23      	ldr	r2, [pc, #140]	; (dc70 <UnicastShortAddress+0x134>)
    dbe2:	4927      	ldr	r1, [pc, #156]	; (dc80 <UnicastShortAddress+0x144>)
    dbe4:	6808      	ldr	r0, [r1, #0]
    dbe6:	6849      	ldr	r1, [r1, #4]
    dbe8:	4c28      	ldr	r4, [pc, #160]	; (dc8c <UnicastShortAddress+0x150>)
    dbea:	47a0      	blx	r4
    dbec:	0003      	movs	r3, r0
    dbee:	001a      	movs	r2, r3
    dbf0:	2301      	movs	r3, #1
    dbf2:	4053      	eors	r3, r2
    dbf4:	b2db      	uxtb	r3, r3
    dbf6:	2b00      	cmp	r3, #0
    dbf8:	d006      	beq.n	dc08 <UnicastShortAddress+0xcc>
        {
            MiWiPROStateMachine.bits.MiWiPROAckInProgress = 0;
    dbfa:	4b1b      	ldr	r3, [pc, #108]	; (dc68 <UnicastShortAddress+0x12c>)
    dbfc:	781a      	ldrb	r2, [r3, #0]
    dbfe:	2108      	movs	r1, #8
    dc00:	438a      	bics	r2, r1
    dc02:	701a      	strb	r2, [r3, #0]
            return false;
    dc04:	2300      	movs	r3, #0
    dc06:	e02b      	b.n	dc60 <UnicastShortAddress+0x124>
        } else if( MiWiPROStateMachine.bits.MiWiPROAckInProgress )
    dc08:	4b17      	ldr	r3, [pc, #92]	; (dc68 <UnicastShortAddress+0x12c>)
    dc0a:	781b      	ldrb	r3, [r3, #0]
    dc0c:	2208      	movs	r2, #8
    dc0e:	4013      	ands	r3, r2
    dc10:	b2db      	uxtb	r3, r3
    dc12:	2b00      	cmp	r3, #0
    dc14:	d023      	beq.n	dc5e <UnicastShortAddress+0x122>
		{
			MIWI_TICK t1, t2;
			t1 = MiWi_TickGet();
    dc16:	4b1e      	ldr	r3, [pc, #120]	; (dc90 <UnicastShortAddress+0x154>)
    dc18:	4798      	blx	r3
    dc1a:	0003      	movs	r3, r0
    dc1c:	60fb      	str	r3, [r7, #12]
			while(1)
			{
				if( hasAck == true )
    dc1e:	4b19      	ldr	r3, [pc, #100]	; (dc84 <UnicastShortAddress+0x148>)
    dc20:	781b      	ldrb	r3, [r3, #0]
    dc22:	2b00      	cmp	r3, #0
    dc24:	d009      	beq.n	dc3a <UnicastShortAddress+0xfe>
				{
					MiWiPROStateMachine.bits.MiWiPROAckInProgress = 0;
    dc26:	4b10      	ldr	r3, [pc, #64]	; (dc68 <UnicastShortAddress+0x12c>)
    dc28:	781a      	ldrb	r2, [r3, #0]
    dc2a:	2108      	movs	r1, #8
    dc2c:	438a      	bics	r2, r1
    dc2e:	701a      	strb	r2, [r3, #0]
					//printf("ACK Confirmed 3...\n\r");
					hasAck = false;
    dc30:	4b14      	ldr	r3, [pc, #80]	; (dc84 <UnicastShortAddress+0x148>)
    dc32:	2200      	movs	r2, #0
    dc34:	701a      	strb	r2, [r3, #0]
					return true;
    dc36:	2301      	movs	r3, #1
    dc38:	e012      	b.n	dc60 <UnicastShortAddress+0x124>
				}
				t2 = MiWi_TickGet();
    dc3a:	4b15      	ldr	r3, [pc, #84]	; (dc90 <UnicastShortAddress+0x154>)
    dc3c:	4798      	blx	r3
    dc3e:	0003      	movs	r3, r0
    dc40:	60bb      	str	r3, [r7, #8]
				if( MiWi_TickGetDiff(t2, t1) > MIWI_PRO_ACK_TIMEOUT )	//org
    dc42:	68ba      	ldr	r2, [r7, #8]
    dc44:	68fb      	ldr	r3, [r7, #12]
    dc46:	1ad2      	subs	r2, r2, r3
    dc48:	2380      	movs	r3, #128	; 0x80
    dc4a:	019b      	lsls	r3, r3, #6
    dc4c:	429a      	cmp	r2, r3
    dc4e:	d9e6      	bls.n	dc1e <UnicastShortAddress+0xe2>
				//if( MiWi_TickGetDiff(t2, t1) > (set_PACKET_RECORD_TIMEOUT*2) )	//ohm ACK Timeout
				{
					MiWiPROStateMachine.bits.MiWiPROAckInProgress = 0;
    dc50:	4b05      	ldr	r3, [pc, #20]	; (dc68 <UnicastShortAddress+0x12c>)
    dc52:	781a      	ldrb	r2, [r3, #0]
    dc54:	2108      	movs	r1, #8
    dc56:	438a      	bics	r2, r1
    dc58:	701a      	strb	r2, [r3, #0]
					return false;
    dc5a:	2300      	movs	r3, #0
    dc5c:	e000      	b.n	dc60 <UnicastShortAddress+0x124>
				}
			}
		}		
        return true;
    dc5e:	2301      	movs	r3, #1
    #endif
}
    dc60:	0018      	movs	r0, r3
    dc62:	46bd      	mov	sp, r7
    dc64:	b005      	add	sp, #20
    dc66:	bd90      	pop	{r4, r7, pc}
    dc68:	20001144 	.word	0x20001144
    dc6c:	2000001b 	.word	0x2000001b
    dc70:	200012e4 	.word	0x200012e4
    dc74:	20001290 	.word	0x20001290
    dc78:	20001140 	.word	0x20001140
    dc7c:	200012dd 	.word	0x200012dd
    dc80:	200012b8 	.word	0x200012b8
    dc84:	20000c7c 	.word	0x20000c7c
    dc88:	200012dc 	.word	0x200012dc
    dc8c:	0000fd09 	.word	0x0000fd09
    dc90:	0000ebad 	.word	0x0000ebad

0000dc94 <MiApp_StartConnection>:
}



bool MiApp_StartConnection(uint8_t Mode, uint8_t ScanDuration, uint32_t ChannelMap)
{
    dc94:	b580      	push	{r7, lr}
    dc96:	b084      	sub	sp, #16
    dc98:	af00      	add	r7, sp, #0
    dc9a:	603a      	str	r2, [r7, #0]
    dc9c:	1dfb      	adds	r3, r7, #7
    dc9e:	1c02      	adds	r2, r0, #0
    dca0:	701a      	strb	r2, [r3, #0]
    dca2:	1dbb      	adds	r3, r7, #6
    dca4:	1c0a      	adds	r2, r1, #0
    dca6:	701a      	strb	r2, [r3, #0]
    switch(Mode)
    dca8:	1dfb      	adds	r3, r7, #7
    dcaa:	781b      	ldrb	r3, [r3, #0]
    dcac:	2b01      	cmp	r3, #1
    dcae:	d069      	beq.n	dd84 <MiApp_StartConnection+0xf0>
    dcb0:	dc02      	bgt.n	dcb8 <MiApp_StartConnection+0x24>
    dcb2:	2b00      	cmp	r3, #0
    dcb4:	d007      	beq.n	dcc6 <MiApp_StartConnection+0x32>
        case START_CONN_CS_SCN:
            // Carrier sense scan is not supported for current available transceivers
            return false;         
        
        default:
            break;
    dcb6:	e144      	b.n	df42 <MiApp_StartConnection+0x2ae>
    switch(Mode)
    dcb8:	2b02      	cmp	r3, #2
    dcba:	d100      	bne.n	dcbe <MiApp_StartConnection+0x2a>
    dcbc:	e13f      	b.n	df3e <MiApp_StartConnection+0x2aa>
    dcbe:	2b03      	cmp	r3, #3
    dcc0:	d100      	bne.n	dcc4 <MiApp_StartConnection+0x30>
    dcc2:	e0d3      	b.n	de6c <MiApp_StartConnection+0x1d8>
            break;
    dcc4:	e13d      	b.n	df42 <MiApp_StartConnection+0x2ae>
                myShortAddress.Val = 0;
    dcc6:	4ba1      	ldr	r3, [pc, #644]	; (df4c <MiApp_StartConnection+0x2b8>)
    dcc8:	2200      	movs	r2, #0
    dcca:	801a      	strh	r2, [r3, #0]
                myParent = 0xFF;
    dccc:	4ba0      	ldr	r3, [pc, #640]	; (df50 <MiApp_StartConnection+0x2bc>)
    dcce:	22ff      	movs	r2, #255	; 0xff
    dcd0:	701a      	strb	r2, [r3, #0]
                myPANID.Val = MY_PAN_ID;
    dcd2:	4ba0      	ldr	r3, [pc, #640]	; (df54 <MiApp_StartConnection+0x2c0>)
    dcd4:	681b      	ldr	r3, [r3, #0]
    dcd6:	b29a      	uxth	r2, r3
    dcd8:	4b9f      	ldr	r3, [pc, #636]	; (df58 <MiApp_StartConnection+0x2c4>)
    dcda:	801a      	strh	r2, [r3, #0]
                MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
    dcdc:	4a9e      	ldr	r2, [pc, #632]	; (df58 <MiApp_StartConnection+0x2c4>)
    dcde:	4b9b      	ldr	r3, [pc, #620]	; (df4c <MiApp_StartConnection+0x2b8>)
    dce0:	0011      	movs	r1, r2
    dce2:	0018      	movs	r0, r3
    dce4:	4b9d      	ldr	r3, [pc, #628]	; (df5c <MiApp_StartConnection+0x2c8>)
    dce6:	4798      	blx	r3
                MiWiPROStateMachine.bits.memberOfNetwork = 1;
    dce8:	4b9d      	ldr	r3, [pc, #628]	; (df60 <MiApp_StartConnection+0x2cc>)
    dcea:	781a      	ldrb	r2, [r3, #0]
    dcec:	2102      	movs	r1, #2
    dcee:	430a      	orrs	r2, r1
    dcf0:	701a      	strb	r2, [r3, #0]
                role = ROLE_PAN_COORDINATOR;
    dcf2:	4b9c      	ldr	r3, [pc, #624]	; (df64 <MiApp_StartConnection+0x2d0>)
    dcf4:	2202      	movs	r2, #2
    dcf6:	701a      	strb	r2, [r3, #0]
                MiWiPROCapacityInfo.bits.Role = role;
    dcf8:	4b9a      	ldr	r3, [pc, #616]	; (df64 <MiApp_StartConnection+0x2d0>)
    dcfa:	781b      	ldrb	r3, [r3, #0]
    dcfc:	1c1a      	adds	r2, r3, #0
    dcfe:	2303      	movs	r3, #3
    dd00:	4013      	ands	r3, r2
    dd02:	b2da      	uxtb	r2, r3
    dd04:	4b98      	ldr	r3, [pc, #608]	; (df68 <MiApp_StartConnection+0x2d4>)
    dd06:	2103      	movs	r1, #3
    dd08:	400a      	ands	r2, r1
    dd0a:	1890      	adds	r0, r2, r2
    dd0c:	781a      	ldrb	r2, [r3, #0]
    dd0e:	2106      	movs	r1, #6
    dd10:	438a      	bics	r2, r1
    dd12:	1c11      	adds	r1, r2, #0
    dd14:	1c02      	adds	r2, r0, #0
    dd16:	430a      	orrs	r2, r1
    dd18:	701a      	strb	r2, [r3, #0]
                FamilyTree[0] = 0;
    dd1a:	4b94      	ldr	r3, [pc, #592]	; (df6c <MiApp_StartConnection+0x2d8>)
    dd1c:	2200      	movs	r2, #0
    dd1e:	701a      	strb	r2, [r3, #0]
                RoutingTable[0] = 0;
    dd20:	4b93      	ldr	r3, [pc, #588]	; (df70 <MiApp_StartConnection+0x2dc>)
    dd22:	2200      	movs	r2, #0
    dd24:	701a      	strb	r2, [r3, #0]
                NeighborRoutingTable[0][0] = 0;
    dd26:	4b93      	ldr	r3, [pc, #588]	; (df74 <MiApp_StartConnection+0x2e0>)
    dd28:	2200      	movs	r2, #0
    dd2a:	701a      	strb	r2, [r3, #0]
                    nvmPutMyShortAddress(myShortAddress.v);
    dd2c:	4b92      	ldr	r3, [pc, #584]	; (df78 <MiApp_StartConnection+0x2e4>)
    dd2e:	8819      	ldrh	r1, [r3, #0]
    dd30:	4b86      	ldr	r3, [pc, #536]	; (df4c <MiApp_StartConnection+0x2b8>)
    dd32:	2202      	movs	r2, #2
    dd34:	0018      	movs	r0, r3
    dd36:	4b91      	ldr	r3, [pc, #580]	; (df7c <MiApp_StartConnection+0x2e8>)
    dd38:	4798      	blx	r3
                    nvmPutMyPANID(myPANID.v);
    dd3a:	4b91      	ldr	r3, [pc, #580]	; (df80 <MiApp_StartConnection+0x2ec>)
    dd3c:	8819      	ldrh	r1, [r3, #0]
    dd3e:	4b86      	ldr	r3, [pc, #536]	; (df58 <MiApp_StartConnection+0x2c4>)
    dd40:	2202      	movs	r2, #2
    dd42:	0018      	movs	r0, r3
    dd44:	4b8d      	ldr	r3, [pc, #564]	; (df7c <MiApp_StartConnection+0x2e8>)
    dd46:	4798      	blx	r3
                    nvmPutRole(&role);
    dd48:	4b8e      	ldr	r3, [pc, #568]	; (df84 <MiApp_StartConnection+0x2f0>)
    dd4a:	8819      	ldrh	r1, [r3, #0]
    dd4c:	4b85      	ldr	r3, [pc, #532]	; (df64 <MiApp_StartConnection+0x2d0>)
    dd4e:	2201      	movs	r2, #1
    dd50:	0018      	movs	r0, r3
    dd52:	4b8a      	ldr	r3, [pc, #552]	; (df7c <MiApp_StartConnection+0x2e8>)
    dd54:	4798      	blx	r3
                    nvmPutFamilyTree(FamilyTree);
    dd56:	4b8c      	ldr	r3, [pc, #560]	; (df88 <MiApp_StartConnection+0x2f4>)
    dd58:	8819      	ldrh	r1, [r3, #0]
    dd5a:	4b84      	ldr	r3, [pc, #528]	; (df6c <MiApp_StartConnection+0x2d8>)
    dd5c:	2201      	movs	r2, #1
    dd5e:	0018      	movs	r0, r3
    dd60:	4b86      	ldr	r3, [pc, #536]	; (df7c <MiApp_StartConnection+0x2e8>)
    dd62:	4798      	blx	r3
                    nvmPutRoutingTable(RoutingTable);
    dd64:	4b89      	ldr	r3, [pc, #548]	; (df8c <MiApp_StartConnection+0x2f8>)
    dd66:	8819      	ldrh	r1, [r3, #0]
    dd68:	4b81      	ldr	r3, [pc, #516]	; (df70 <MiApp_StartConnection+0x2dc>)
    dd6a:	2200      	movs	r2, #0
    dd6c:	0018      	movs	r0, r3
    dd6e:	4b83      	ldr	r3, [pc, #524]	; (df7c <MiApp_StartConnection+0x2e8>)
    dd70:	4798      	blx	r3
                    nvmPutNeighborRoutingTable(NeighborRoutingTable);
    dd72:	4b87      	ldr	r3, [pc, #540]	; (df90 <MiApp_StartConnection+0x2fc>)
    dd74:	8819      	ldrh	r1, [r3, #0]
    dd76:	4b7f      	ldr	r3, [pc, #508]	; (df74 <MiApp_StartConnection+0x2e0>)
    dd78:	2200      	movs	r2, #0
    dd7a:	0018      	movs	r0, r3
    dd7c:	4b7f      	ldr	r3, [pc, #508]	; (df7c <MiApp_StartConnection+0x2e8>)
    dd7e:	4798      	blx	r3
                return true;
    dd80:	2301      	movs	r3, #1
    dd82:	e0df      	b.n	df44 <MiApp_StartConnection+0x2b0>
				channel=RF_CHANNEL;
    dd84:	230f      	movs	r3, #15
    dd86:	18fb      	adds	r3, r7, r3
    dd88:	4a82      	ldr	r2, [pc, #520]	; (df94 <MiApp_StartConnection+0x300>)
    dd8a:	7812      	ldrb	r2, [r2, #0]
    dd8c:	701a      	strb	r2, [r3, #0]
                MiApp_SetChannel(channel);
    dd8e:	230f      	movs	r3, #15
    dd90:	18fb      	adds	r3, r7, r3
    dd92:	781b      	ldrb	r3, [r3, #0]
    dd94:	0018      	movs	r0, r3
    dd96:	4b80      	ldr	r3, [pc, #512]	; (df98 <MiApp_StartConnection+0x304>)
    dd98:	4798      	blx	r3
		        printf("Start Wireless Communication on Real RF Channel - %d \r\n",channel);
    dd9a:	230f      	movs	r3, #15
    dd9c:	18fb      	adds	r3, r7, r3
    dd9e:	781a      	ldrb	r2, [r3, #0]
    dda0:	4b7e      	ldr	r3, [pc, #504]	; (df9c <MiApp_StartConnection+0x308>)
    dda2:	0011      	movs	r1, r2
    dda4:	0018      	movs	r0, r3
    dda6:	4b7e      	ldr	r3, [pc, #504]	; (dfa0 <MiApp_StartConnection+0x30c>)
    dda8:	4798      	blx	r3
                MiWiPROStateMachine.bits.memberOfNetwork = 1;
    ddaa:	4b6d      	ldr	r3, [pc, #436]	; (df60 <MiApp_StartConnection+0x2cc>)
    ddac:	781a      	ldrb	r2, [r3, #0]
    ddae:	2102      	movs	r1, #2
    ddb0:	430a      	orrs	r2, r1
    ddb2:	701a      	strb	r2, [r3, #0]
                myShortAddress.Val = 0;
    ddb4:	4b65      	ldr	r3, [pc, #404]	; (df4c <MiApp_StartConnection+0x2b8>)
    ddb6:	2200      	movs	r2, #0
    ddb8:	801a      	strh	r2, [r3, #0]
                myParent = 0xFF;
    ddba:	4b65      	ldr	r3, [pc, #404]	; (df50 <MiApp_StartConnection+0x2bc>)
    ddbc:	22ff      	movs	r2, #255	; 0xff
    ddbe:	701a      	strb	r2, [r3, #0]
                MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
    ddc0:	4a65      	ldr	r2, [pc, #404]	; (df58 <MiApp_StartConnection+0x2c4>)
    ddc2:	4b62      	ldr	r3, [pc, #392]	; (df4c <MiApp_StartConnection+0x2b8>)
    ddc4:	0011      	movs	r1, r2
    ddc6:	0018      	movs	r0, r3
    ddc8:	4b64      	ldr	r3, [pc, #400]	; (df5c <MiApp_StartConnection+0x2c8>)
    ddca:	4798      	blx	r3
                role = ROLE_PAN_COORDINATOR;
    ddcc:	4b65      	ldr	r3, [pc, #404]	; (df64 <MiApp_StartConnection+0x2d0>)
    ddce:	2202      	movs	r2, #2
    ddd0:	701a      	strb	r2, [r3, #0]
                MiWiPROCapacityInfo.bits.Role = role;
    ddd2:	4b64      	ldr	r3, [pc, #400]	; (df64 <MiApp_StartConnection+0x2d0>)
    ddd4:	781b      	ldrb	r3, [r3, #0]
    ddd6:	1c1a      	adds	r2, r3, #0
    ddd8:	2303      	movs	r3, #3
    ddda:	4013      	ands	r3, r2
    dddc:	b2da      	uxtb	r2, r3
    ddde:	4b62      	ldr	r3, [pc, #392]	; (df68 <MiApp_StartConnection+0x2d4>)
    dde0:	2103      	movs	r1, #3
    dde2:	400a      	ands	r2, r1
    dde4:	1890      	adds	r0, r2, r2
    dde6:	781a      	ldrb	r2, [r3, #0]
    dde8:	2106      	movs	r1, #6
    ddea:	438a      	bics	r2, r1
    ddec:	1c11      	adds	r1, r2, #0
    ddee:	1c02      	adds	r2, r0, #0
    ddf0:	430a      	orrs	r2, r1
    ddf2:	701a      	strb	r2, [r3, #0]
                FamilyTree[0] = 0;
    ddf4:	4b5d      	ldr	r3, [pc, #372]	; (df6c <MiApp_StartConnection+0x2d8>)
    ddf6:	2200      	movs	r2, #0
    ddf8:	701a      	strb	r2, [r3, #0]
                RoutingTable[0] = 0;
    ddfa:	4b5d      	ldr	r3, [pc, #372]	; (df70 <MiApp_StartConnection+0x2dc>)
    ddfc:	2200      	movs	r2, #0
    ddfe:	701a      	strb	r2, [r3, #0]
                NeighborRoutingTable[0][0] = 0;
    de00:	4b5c      	ldr	r3, [pc, #368]	; (df74 <MiApp_StartConnection+0x2e0>)
    de02:	2200      	movs	r2, #0
    de04:	701a      	strb	r2, [r3, #0]
					networkInfo.CH = channel;
    de06:	4b67      	ldr	r3, [pc, #412]	; (dfa4 <MiApp_StartConnection+0x310>)
    de08:	220f      	movs	r2, #15
    de0a:	18ba      	adds	r2, r7, r2
    de0c:	7812      	ldrb	r2, [r2, #0]
    de0e:	711a      	strb	r2, [r3, #4]
					networkInfo.PANID = myPANID;
    de10:	4b64      	ldr	r3, [pc, #400]	; (dfa4 <MiApp_StartConnection+0x310>)
    de12:	4a51      	ldr	r2, [pc, #324]	; (df58 <MiApp_StartConnection+0x2c4>)
    de14:	8812      	ldrh	r2, [r2, #0]
    de16:	805a      	strh	r2, [r3, #2]
					memcpy(networkInfo.LADDR,myLongAddress,sizeof(myLongAddress));
    de18:	4b62      	ldr	r3, [pc, #392]	; (dfa4 <MiApp_StartConnection+0x310>)
    de1a:	220e      	movs	r2, #14
    de1c:	4962      	ldr	r1, [pc, #392]	; (dfa8 <MiApp_StartConnection+0x314>)
    de1e:	189b      	adds	r3, r3, r2
    de20:	2208      	movs	r2, #8
    de22:	0018      	movs	r0, r3
    de24:	4b61      	ldr	r3, [pc, #388]	; (dfac <MiApp_StartConnection+0x318>)
    de26:	4798      	blx	r3
					networkInfo.OCH = ChannelMap;
    de28:	4b5e      	ldr	r3, [pc, #376]	; (dfa4 <MiApp_StartConnection+0x310>)
    de2a:	683a      	ldr	r2, [r7, #0]
    de2c:	609a      	str	r2, [r3, #8]
					networkInfo.SADDR.Val = 0x0000;
    de2e:	4b5d      	ldr	r3, [pc, #372]	; (dfa4 <MiApp_StartConnection+0x310>)
    de30:	2200      	movs	r2, #0
    de32:	819a      	strh	r2, [r3, #12]
					networkInfo.Status = 0x01; //network created
    de34:	4b5b      	ldr	r3, [pc, #364]	; (dfa4 <MiApp_StartConnection+0x310>)
    de36:	2201      	movs	r2, #1
    de38:	701a      	strb	r2, [r3, #0]
					networkInfo.myParent = 0xff;
    de3a:	4b5a      	ldr	r3, [pc, #360]	; (dfa4 <MiApp_StartConnection+0x310>)
    de3c:	22ff      	movs	r2, #255	; 0xff
    de3e:	759a      	strb	r2, [r3, #22]
					networkInfo.BW = RF_BW;
    de40:	4b5b      	ldr	r3, [pc, #364]	; (dfb0 <MiApp_StartConnection+0x31c>)
    de42:	781a      	ldrb	r2, [r3, #0]
    de44:	4b57      	ldr	r3, [pc, #348]	; (dfa4 <MiApp_StartConnection+0x310>)
    de46:	761a      	strb	r2, [r3, #24]
					networkInfo.POWER = RF_OUTPUT;
    de48:	4b5a      	ldr	r3, [pc, #360]	; (dfb4 <MiApp_StartConnection+0x320>)
    de4a:	781a      	ldrb	r2, [r3, #0]
    de4c:	4b55      	ldr	r3, [pc, #340]	; (dfa4 <MiApp_StartConnection+0x310>)
    de4e:	765a      	strb	r2, [r3, #25]
					networkInfo.SF = SF_DR;
    de50:	4b59      	ldr	r3, [pc, #356]	; (dfb8 <MiApp_StartConnection+0x324>)
    de52:	781a      	ldrb	r2, [r3, #0]
    de54:	4b53      	ldr	r3, [pc, #332]	; (dfa4 <MiApp_StartConnection+0x310>)
    de56:	75da      	strb	r2, [r3, #23]
					NVM_Write_NetInfo((uint8_t *)&networkInfo);
    de58:	4b52      	ldr	r3, [pc, #328]	; (dfa4 <MiApp_StartConnection+0x310>)
    de5a:	0018      	movs	r0, r3
    de5c:	4b57      	ldr	r3, [pc, #348]	; (dfbc <MiApp_StartConnection+0x328>)
    de5e:	4798      	blx	r3
					NVM_Write_ConTable(ConnectionTable);
    de60:	4b57      	ldr	r3, [pc, #348]	; (dfc0 <MiApp_StartConnection+0x32c>)
    de62:	0018      	movs	r0, r3
    de64:	4b57      	ldr	r3, [pc, #348]	; (dfc4 <MiApp_StartConnection+0x330>)
    de66:	4798      	blx	r3
                return true;
    de68:	2301      	movs	r3, #1
    de6a:	e06b      	b.n	df44 <MiApp_StartConnection+0x2b0>
				NVM_Read_NetInfo(&networkInfo);
    de6c:	4b4d      	ldr	r3, [pc, #308]	; (dfa4 <MiApp_StartConnection+0x310>)
    de6e:	0018      	movs	r0, r3
    de70:	4b55      	ldr	r3, [pc, #340]	; (dfc8 <MiApp_StartConnection+0x334>)
    de72:	4798      	blx	r3
				currentChannel = networkInfo.CH;
    de74:	4b4b      	ldr	r3, [pc, #300]	; (dfa4 <MiApp_StartConnection+0x310>)
    de76:	791a      	ldrb	r2, [r3, #4]
    de78:	4b54      	ldr	r3, [pc, #336]	; (dfcc <MiApp_StartConnection+0x338>)
    de7a:	701a      	strb	r2, [r3, #0]
				MiApp_SetChannel(currentChannel);
    de7c:	4b53      	ldr	r3, [pc, #332]	; (dfcc <MiApp_StartConnection+0x338>)
    de7e:	781b      	ldrb	r3, [r3, #0]
    de80:	0018      	movs	r0, r3
    de82:	4b45      	ldr	r3, [pc, #276]	; (df98 <MiApp_StartConnection+0x304>)
    de84:	4798      	blx	r3
				if(currentChannel==0){
    de86:	4b51      	ldr	r3, [pc, #324]	; (dfcc <MiApp_StartConnection+0x338>)
    de88:	781b      	ldrb	r3, [r3, #0]
    de8a:	2b00      	cmp	r3, #0
    de8c:	d108      	bne.n	dea0 <MiApp_StartConnection+0x20c>
					networkInfo.CH=1;
    de8e:	4b45      	ldr	r3, [pc, #276]	; (dfa4 <MiApp_StartConnection+0x310>)
    de90:	2201      	movs	r2, #1
    de92:	711a      	strb	r2, [r3, #4]
					currentChannel=1;
    de94:	4b4d      	ldr	r3, [pc, #308]	; (dfcc <MiApp_StartConnection+0x338>)
    de96:	2201      	movs	r2, #1
    de98:	701a      	strb	r2, [r3, #0]
					RF_CHANNEL=1;
    de9a:	4b3e      	ldr	r3, [pc, #248]	; (df94 <MiApp_StartConnection+0x300>)
    de9c:	2201      	movs	r2, #1
    de9e:	701a      	strb	r2, [r3, #0]
				printf("Start from NVM on Channel - %d \r\n",currentChannel);
    dea0:	4b4a      	ldr	r3, [pc, #296]	; (dfcc <MiApp_StartConnection+0x338>)
    dea2:	781b      	ldrb	r3, [r3, #0]
    dea4:	001a      	movs	r2, r3
    dea6:	4b4a      	ldr	r3, [pc, #296]	; (dfd0 <MiApp_StartConnection+0x33c>)
    dea8:	0011      	movs	r1, r2
    deaa:	0018      	movs	r0, r3
    deac:	4b3c      	ldr	r3, [pc, #240]	; (dfa0 <MiApp_StartConnection+0x30c>)
    deae:	4798      	blx	r3
				MiWiPROStateMachine.bits.memberOfNetwork = 1;
    deb0:	4b2b      	ldr	r3, [pc, #172]	; (df60 <MiApp_StartConnection+0x2cc>)
    deb2:	781a      	ldrb	r2, [r3, #0]
    deb4:	2102      	movs	r1, #2
    deb6:	430a      	orrs	r2, r1
    deb8:	701a      	strb	r2, [r3, #0]
				myShortAddress.Val = networkInfo.SADDR.Val;
    deba:	4b3a      	ldr	r3, [pc, #232]	; (dfa4 <MiApp_StartConnection+0x310>)
    debc:	899a      	ldrh	r2, [r3, #12]
    debe:	4b23      	ldr	r3, [pc, #140]	; (df4c <MiApp_StartConnection+0x2b8>)
    dec0:	801a      	strh	r2, [r3, #0]
				myParent = networkInfo.myParent;
    dec2:	4b38      	ldr	r3, [pc, #224]	; (dfa4 <MiApp_StartConnection+0x310>)
    dec4:	7d9a      	ldrb	r2, [r3, #22]
    dec6:	4b22      	ldr	r3, [pc, #136]	; (df50 <MiApp_StartConnection+0x2bc>)
    dec8:	701a      	strb	r2, [r3, #0]
				myPANID.Val = networkInfo.PANID.Val;
    deca:	4b36      	ldr	r3, [pc, #216]	; (dfa4 <MiApp_StartConnection+0x310>)
    decc:	885a      	ldrh	r2, [r3, #2]
    dece:	4b22      	ldr	r3, [pc, #136]	; (df58 <MiApp_StartConnection+0x2c4>)
    ded0:	801a      	strh	r2, [r3, #0]
				ChannelMAP = networkInfo.OCH;
    ded2:	4b34      	ldr	r3, [pc, #208]	; (dfa4 <MiApp_StartConnection+0x310>)
    ded4:	689a      	ldr	r2, [r3, #8]
    ded6:	4b3f      	ldr	r3, [pc, #252]	; (dfd4 <MiApp_StartConnection+0x340>)
    ded8:	601a      	str	r2, [r3, #0]
				memcpy(myLongAddress,networkInfo.LADDR,sizeof(myLongAddress));
    deda:	4933      	ldr	r1, [pc, #204]	; (dfa8 <MiApp_StartConnection+0x314>)
    dedc:	4b31      	ldr	r3, [pc, #196]	; (dfa4 <MiApp_StartConnection+0x310>)
    dede:	220e      	movs	r2, #14
    dee0:	0008      	movs	r0, r1
    dee2:	189b      	adds	r3, r3, r2
    dee4:	2208      	movs	r2, #8
    dee6:	0019      	movs	r1, r3
    dee8:	4b30      	ldr	r3, [pc, #192]	; (dfac <MiApp_StartConnection+0x318>)
    deea:	4798      	blx	r3
				MiMAC_SetAltAddress(myShortAddress.v, myPANID.v);
    deec:	4a1a      	ldr	r2, [pc, #104]	; (df58 <MiApp_StartConnection+0x2c4>)
    deee:	4b17      	ldr	r3, [pc, #92]	; (df4c <MiApp_StartConnection+0x2b8>)
    def0:	0011      	movs	r1, r2
    def2:	0018      	movs	r0, r3
    def4:	4b19      	ldr	r3, [pc, #100]	; (df5c <MiApp_StartConnection+0x2c8>)
    def6:	4798      	blx	r3
				role = ROLE_PAN_COORDINATOR;				
    def8:	4b1a      	ldr	r3, [pc, #104]	; (df64 <MiApp_StartConnection+0x2d0>)
    defa:	2202      	movs	r2, #2
    defc:	701a      	strb	r2, [r3, #0]
				MiWiPROCapacityInfo.bits.Role = role;
    defe:	4b19      	ldr	r3, [pc, #100]	; (df64 <MiApp_StartConnection+0x2d0>)
    df00:	781b      	ldrb	r3, [r3, #0]
    df02:	1c1a      	adds	r2, r3, #0
    df04:	2303      	movs	r3, #3
    df06:	4013      	ands	r3, r2
    df08:	b2da      	uxtb	r2, r3
    df0a:	4b17      	ldr	r3, [pc, #92]	; (df68 <MiApp_StartConnection+0x2d4>)
    df0c:	2103      	movs	r1, #3
    df0e:	400a      	ands	r2, r1
    df10:	1890      	adds	r0, r2, r2
    df12:	781a      	ldrb	r2, [r3, #0]
    df14:	2106      	movs	r1, #6
    df16:	438a      	bics	r2, r1
    df18:	1c11      	adds	r1, r2, #0
    df1a:	1c02      	adds	r2, r0, #0
    df1c:	430a      	orrs	r2, r1
    df1e:	701a      	strb	r2, [r3, #0]
				FamilyTree[0] = 0;
    df20:	4b12      	ldr	r3, [pc, #72]	; (df6c <MiApp_StartConnection+0x2d8>)
    df22:	2200      	movs	r2, #0
    df24:	701a      	strb	r2, [r3, #0]
				RoutingTable[0] = 0;
    df26:	4b12      	ldr	r3, [pc, #72]	; (df70 <MiApp_StartConnection+0x2dc>)
    df28:	2200      	movs	r2, #0
    df2a:	701a      	strb	r2, [r3, #0]
				NeighborRoutingTable[0][0] = 0;
    df2c:	4b11      	ldr	r3, [pc, #68]	; (df74 <MiApp_StartConnection+0x2e0>)
    df2e:	2200      	movs	r2, #0
    df30:	701a      	strb	r2, [r3, #0]
				NVM_Read_ConTable(ConnectionTable);
    df32:	4b23      	ldr	r3, [pc, #140]	; (dfc0 <MiApp_StartConnection+0x32c>)
    df34:	0018      	movs	r0, r3
    df36:	4b28      	ldr	r3, [pc, #160]	; (dfd8 <MiApp_StartConnection+0x344>)
    df38:	4798      	blx	r3
				return true;
    df3a:	2301      	movs	r3, #1
    df3c:	e002      	b.n	df44 <MiApp_StartConnection+0x2b0>
            return false;         
    df3e:	2300      	movs	r3, #0
    df40:	e000      	b.n	df44 <MiApp_StartConnection+0x2b0>
    }    
    return false;
    df42:	2300      	movs	r3, #0
}
    df44:	0018      	movs	r0, r3
    df46:	46bd      	mov	sp, r7
    df48:	b004      	add	sp, #16
    df4a:	bd80      	pop	{r7, pc}
    df4c:	20001140 	.word	0x20001140
    df50:	200014b4 	.word	0x200014b4
    df54:	20000d54 	.word	0x20000d54
    df58:	20001290 	.word	0x20001290
    df5c:	00010211 	.word	0x00010211
    df60:	20001144 	.word	0x20001144
    df64:	200012de 	.word	0x200012de
    df68:	20001284 	.word	0x20001284
    df6c:	20001518 	.word	0x20001518
    df70:	20001250 	.word	0x20001250
    df74:	20001584 	.word	0x20001584
    df78:	20001590 	.word	0x20001590
    df7c:	0000e9c1 	.word	0x0000e9c1
    df80:	2000158c 	.word	0x2000158c
    df84:	20001588 	.word	0x20001588
    df88:	20001598 	.word	0x20001598
    df8c:	20001594 	.word	0x20001594
    df90:	20001584 	.word	0x20001584
    df94:	2000002f 	.word	0x2000002f
    df98:	0000d159 	.word	0x0000d159
    df9c:	0001ce7c 	.word	0x0001ce7c
    dfa0:	0001782d 	.word	0x0001782d
    dfa4:	2000151c 	.word	0x2000151c
    dfa8:	20000010 	.word	0x20000010
    dfac:	00017715 	.word	0x00017715
    dfb0:	20000031 	.word	0x20000031
    dfb4:	2000002e 	.word	0x2000002e
    dfb8:	20000030 	.word	0x20000030
    dfbc:	0000e8a1 	.word	0x0000e8a1
    dfc0:	20001150 	.word	0x20001150
    dfc4:	0000e80d 	.word	0x0000e80d
    dfc8:	0000e979 	.word	0x0000e979
    dfcc:	200014b5 	.word	0x200014b5
    dfd0:	0001ce3c 	.word	0x0001ce3c
    dfd4:	2000114c 	.word	0x2000114c
    dfd8:	0000e8f9 	.word	0x0000e8f9

0000dfdc <MiApp_NoiseDetection>:
         * Remarks:    
         *      None
         *
         *****************************************************************************************/
        uint8_t MiApp_NoiseDetection(uint32_t ChannelMap, uint8_t ScanDuration, uint8_t DetectionMode, int16_t *RSSIValue)
        {
    dfdc:	b5f0      	push	{r4, r5, r6, r7, lr}
    dfde:	b091      	sub	sp, #68	; 0x44
    dfe0:	af00      	add	r7, sp, #0
    dfe2:	6178      	str	r0, [r7, #20]
    dfe4:	0008      	movs	r0, r1
    dfe6:	0011      	movs	r1, r2
    dfe8:	60fb      	str	r3, [r7, #12]
    dfea:	230b      	movs	r3, #11
    dfec:	2208      	movs	r2, #8
    dfee:	4694      	mov	ip, r2
    dff0:	44bc      	add	ip, r7
    dff2:	4463      	add	r3, ip
    dff4:	1c02      	adds	r2, r0, #0
    dff6:	701a      	strb	r2, [r3, #0]
    dff8:	230a      	movs	r3, #10
    dffa:	2208      	movs	r2, #8
    dffc:	4694      	mov	ip, r2
    dffe:	44bc      	add	ip, r7
    e000:	4463      	add	r3, ip
    e002:	1c0a      	adds	r2, r1, #0
    e004:	701a      	strb	r2, [r3, #0]
            uint8_t i;
            uint8_t OptimalChannel = 0xFF;
    e006:	2336      	movs	r3, #54	; 0x36
    e008:	2208      	movs	r2, #8
    e00a:	4694      	mov	ip, r2
    e00c:	44bc      	add	ip, r7
    e00e:	4463      	add	r3, ip
    e010:	22ff      	movs	r2, #255	; 0xff
    e012:	701a      	strb	r2, [r3, #0]
            uint32_t channelMask =	0x00000001;
    e014:	2301      	movs	r3, #1
    e016:	62bb      	str	r3, [r7, #40]	; 0x28
			int16_t RSSI_buf,RSSI_avg,RSSI_avg_min;
			uint16_t rssi_check_count;
			int64_t rssi_sum;
			uint8_t j, k;
            
            if( DetectionMode != NOISE_DETECT_ENERGY )
    e018:	230a      	movs	r3, #10
    e01a:	2208      	movs	r2, #8
    e01c:	4694      	mov	ip, r2
    e01e:	44bc      	add	ip, r7
    e020:	4463      	add	r3, ip
    e022:	781b      	ldrb	r3, [r3, #0]
    e024:	2b00      	cmp	r3, #0
    e026:	d001      	beq.n	e02c <MiApp_NoiseDetection+0x50>
            {
                return 0xFF;
    e028:	23ff      	movs	r3, #255	; 0xff
    e02a:	e14e      	b.n	e2ca <MiApp_NoiseDetection+0x2ee>
            }
            
            printf("\r\nEnergy Scan Results:");
    e02c:	4ba9      	ldr	r3, [pc, #676]	; (e2d4 <MiApp_NoiseDetection+0x2f8>)
    e02e:	0018      	movs	r0, r3
    e030:	4ba9      	ldr	r3, [pc, #676]	; (e2d8 <MiApp_NoiseDetection+0x2fc>)
    e032:	4798      	blx	r3
			
			RSSI_avg_min = 0;
    e034:	2334      	movs	r3, #52	; 0x34
    e036:	2208      	movs	r2, #8
    e038:	4694      	mov	ip, r2
    e03a:	44bc      	add	ip, r7
    e03c:	4463      	add	r3, ip
    e03e:	2200      	movs	r2, #0
    e040:	801a      	strh	r2, [r3, #0]
			
            i = USE_CHANNEL_NUM_START-1;
    e042:	2337      	movs	r3, #55	; 0x37
    e044:	2208      	movs	r2, #8
    e046:	4694      	mov	ip, r2
    e048:	44bc      	add	ip, r7
    e04a:	4463      	add	r3, ip
    e04c:	2200      	movs	r2, #0
    e04e:	701a      	strb	r2, [r3, #0]
			while(i <= USE_CHANNEL_NUM_END)
    e050:	e128      	b.n	e2a4 <MiApp_NoiseDetection+0x2c8>
            {
                #if defined(ENABLE_FREQUENCY_AGILITY) && defined(NWK_ROLE_COORDINATOR)
                    EnergyScanResults[i] = 0xFF;
    e052:	2337      	movs	r3, #55	; 0x37
    e054:	2208      	movs	r2, #8
    e056:	4694      	mov	ip, r2
    e058:	44bc      	add	ip, r7
    e05a:	4463      	add	r3, ip
    e05c:	781b      	ldrb	r3, [r3, #0]
    e05e:	4a9f      	ldr	r2, [pc, #636]	; (e2dc <MiApp_NoiseDetection+0x300>)
    e060:	21ff      	movs	r1, #255	; 0xff
    e062:	54d1      	strb	r1, [r2, r3]
                #endif
                if( ChannelMap & FULL_CHANNEL_MAP & (channelMask << (i-1)) )
    e064:	2337      	movs	r3, #55	; 0x37
    e066:	2208      	movs	r2, #8
    e068:	4694      	mov	ip, r2
    e06a:	44bc      	add	ip, r7
    e06c:	4463      	add	r3, ip
    e06e:	781b      	ldrb	r3, [r3, #0]
    e070:	3b01      	subs	r3, #1
    e072:	6aba      	ldr	r2, [r7, #40]	; 0x28
    e074:	409a      	lsls	r2, r3
    e076:	0013      	movs	r3, r2
    e078:	697a      	ldr	r2, [r7, #20]
    e07a:	4013      	ands	r3, r2
    e07c:	0cdb      	lsrs	r3, r3, #19
    e07e:	04db      	lsls	r3, r3, #19
    e080:	d100      	bne.n	e084 <MiApp_NoiseDetection+0xa8>
    e082:	e102      	b.n	e28a <MiApp_NoiseDetection+0x2ae>
                {
                    /* choose appropriate channel */
                    MiApp_SetChannel(i);
    e084:	2337      	movs	r3, #55	; 0x37
    e086:	2208      	movs	r2, #8
    e088:	4694      	mov	ip, r2
    e08a:	44bc      	add	ip, r7
    e08c:	4463      	add	r3, ip
    e08e:	781b      	ldrb	r3, [r3, #0]
    e090:	0018      	movs	r0, r3
    e092:	4b93      	ldr	r3, [pc, #588]	; (e2e0 <MiApp_NoiseDetection+0x304>)
    e094:	4798      	blx	r3
                    
					rssi_sum = 0;
    e096:	2300      	movs	r3, #0
    e098:	2400      	movs	r4, #0
    e09a:	633b      	str	r3, [r7, #48]	; 0x30
    e09c:	637c      	str	r4, [r7, #52]	; 0x34
					rssi_check_count = 0;
    e09e:	2332      	movs	r3, #50	; 0x32
    e0a0:	2208      	movs	r2, #8
    e0a2:	4694      	mov	ip, r2
    e0a4:	44bc      	add	ip, r7
    e0a6:	4463      	add	r3, ip
    e0a8:	2200      	movs	r2, #0
    e0aa:	801a      	strh	r2, [r3, #0]
					
                    t1 = MiWi_TickGet();
    e0ac:	4b8d      	ldr	r3, [pc, #564]	; (e2e4 <MiApp_NoiseDetection+0x308>)
    e0ae:	4798      	blx	r3
    e0b0:	0003      	movs	r3, r0
    e0b2:	61fb      	str	r3, [r7, #28]
					while(1)
					{
						//printf("CCA");
						RSSI_buf = MiMAC_ChannelAssessment(CHANNEL_ASSESSMENT_ENERGY_DETECT);
    e0b4:	231e      	movs	r3, #30
    e0b6:	2208      	movs	r2, #8
    e0b8:	18ba      	adds	r2, r7, r2
    e0ba:	18d4      	adds	r4, r2, r3
    e0bc:	2001      	movs	r0, #1
    e0be:	4b8a      	ldr	r3, [pc, #552]	; (e2e8 <MiApp_NoiseDetection+0x30c>)
    e0c0:	4798      	blx	r3
    e0c2:	0003      	movs	r3, r0
    e0c4:	8023      	strh	r3, [r4, #0]
						rssi_sum += RSSI_buf;
    e0c6:	231e      	movs	r3, #30
    e0c8:	2208      	movs	r2, #8
    e0ca:	4694      	mov	ip, r2
    e0cc:	44bc      	add	ip, r7
    e0ce:	4463      	add	r3, ip
    e0d0:	881b      	ldrh	r3, [r3, #0]
    e0d2:	b21b      	sxth	r3, r3
    e0d4:	001d      	movs	r5, r3
    e0d6:	17db      	asrs	r3, r3, #31
    e0d8:	001e      	movs	r6, r3
    e0da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    e0dc:	6b7c      	ldr	r4, [r7, #52]	; 0x34
    e0de:	195b      	adds	r3, r3, r5
    e0e0:	4174      	adcs	r4, r6
    e0e2:	633b      	str	r3, [r7, #48]	; 0x30
    e0e4:	637c      	str	r4, [r7, #52]	; 0x34
						rssi_check_count++;
    e0e6:	2332      	movs	r3, #50	; 0x32
    e0e8:	2208      	movs	r2, #8
    e0ea:	4694      	mov	ip, r2
    e0ec:	44bc      	add	ip, r7
    e0ee:	4463      	add	r3, ip
    e0f0:	881a      	ldrh	r2, [r3, #0]
    e0f2:	2332      	movs	r3, #50	; 0x32
    e0f4:	2108      	movs	r1, #8
    e0f6:	468c      	mov	ip, r1
    e0f8:	44bc      	add	ip, r7
    e0fa:	4463      	add	r3, ip
    e0fc:	3201      	adds	r2, #1
    e0fe:	801a      	strh	r2, [r3, #0]

						t2 = MiWi_TickGet();
    e100:	4b78      	ldr	r3, [pc, #480]	; (e2e4 <MiApp_NoiseDetection+0x308>)
    e102:	4798      	blx	r3
    e104:	0003      	movs	r3, r0
    e106:	61bb      	str	r3, [r7, #24]
                        if( MiWi_TickGetDiff(t2, t1) > ((uint32_t)(ScanTime[ScanDuration])) )
    e108:	69ba      	ldr	r2, [r7, #24]
    e10a:	69fb      	ldr	r3, [r7, #28]
    e10c:	1ad2      	subs	r2, r2, r3
    e10e:	230b      	movs	r3, #11
    e110:	2108      	movs	r1, #8
    e112:	468c      	mov	ip, r1
    e114:	44bc      	add	ip, r7
    e116:	4463      	add	r3, ip
    e118:	7819      	ldrb	r1, [r3, #0]
    e11a:	4b74      	ldr	r3, [pc, #464]	; (e2ec <MiApp_NoiseDetection+0x310>)
    e11c:	0089      	lsls	r1, r1, #2
    e11e:	58cb      	ldr	r3, [r1, r3]
    e120:	429a      	cmp	r2, r3
    e122:	d800      	bhi.n	e126 <MiApp_NoiseDetection+0x14a>
						RSSI_buf = MiMAC_ChannelAssessment(CHANNEL_ASSESSMENT_ENERGY_DETECT);
    e124:	e7c6      	b.n	e0b4 <MiApp_NoiseDetection+0xd8>
						//if(rssi_check_count>15)
                        {
                            // if scan time exceed scan duration, prepare to scan the next channel
                            break;
    e126:	46c0      	nop			; (mov r8, r8)
                        }
					}

					RSSI_avg = (int8_t)(rssi_sum/rssi_check_count);
    e128:	2332      	movs	r3, #50	; 0x32
    e12a:	2208      	movs	r2, #8
    e12c:	4694      	mov	ip, r2
    e12e:	44bc      	add	ip, r7
    e130:	4463      	add	r3, ip
    e132:	881b      	ldrh	r3, [r3, #0]
    e134:	b29b      	uxth	r3, r3
    e136:	603b      	str	r3, [r7, #0]
    e138:	2300      	movs	r3, #0
    e13a:	607b      	str	r3, [r7, #4]
    e13c:	4c6c      	ldr	r4, [pc, #432]	; (e2f0 <MiApp_NoiseDetection+0x314>)
    e13e:	683a      	ldr	r2, [r7, #0]
    e140:	687b      	ldr	r3, [r7, #4]
    e142:	6b38      	ldr	r0, [r7, #48]	; 0x30
    e144:	6b79      	ldr	r1, [r7, #52]	; 0x34
    e146:	47a0      	blx	r4
    e148:	0003      	movs	r3, r0
    e14a:	000c      	movs	r4, r1
    e14c:	b25a      	sxtb	r2, r3
    e14e:	231c      	movs	r3, #28
    e150:	2108      	movs	r1, #8
    e152:	468c      	mov	ip, r1
    e154:	44bc      	add	ip, r7
    e156:	4463      	add	r3, ip
    e158:	801a      	strh	r2, [r3, #0]
					
					printf("\r\nChannel %d", i);                    
    e15a:	2337      	movs	r3, #55	; 0x37
    e15c:	2208      	movs	r2, #8
    e15e:	4694      	mov	ip, r2
    e160:	44bc      	add	ip, r7
    e162:	4463      	add	r3, ip
    e164:	781a      	ldrb	r2, [r3, #0]
    e166:	4b63      	ldr	r3, [pc, #396]	; (e2f4 <MiApp_NoiseDetection+0x318>)
    e168:	0011      	movs	r1, r2
    e16a:	0018      	movs	r0, r3
    e16c:	4b5a      	ldr	r3, [pc, #360]	; (e2d8 <MiApp_NoiseDetection+0x2fc>)
    e16e:	4798      	blx	r3
                    printf(": -");
    e170:	4b61      	ldr	r3, [pc, #388]	; (e2f8 <MiApp_NoiseDetection+0x31c>)
    e172:	0018      	movs	r0, r3
    e174:	4b58      	ldr	r3, [pc, #352]	; (e2d8 <MiApp_NoiseDetection+0x2fc>)
    e176:	4798      	blx	r3
                    j = (RSSI_avg + 128)/2;
    e178:	231c      	movs	r3, #28
    e17a:	2208      	movs	r2, #8
    e17c:	4694      	mov	ip, r2
    e17e:	44bc      	add	ip, r7
    e180:	4463      	add	r3, ip
    e182:	2200      	movs	r2, #0
    e184:	5e9b      	ldrsh	r3, [r3, r2]
    e186:	3380      	adds	r3, #128	; 0x80
    e188:	2b00      	cmp	r3, #0
    e18a:	da00      	bge.n	e18e <MiApp_NoiseDetection+0x1b2>
    e18c:	3301      	adds	r3, #1
    e18e:	105b      	asrs	r3, r3, #1
    e190:	001a      	movs	r2, r3
    e192:	231b      	movs	r3, #27
    e194:	2108      	movs	r1, #8
    e196:	468c      	mov	ip, r1
    e198:	44bc      	add	ip, r7
    e19a:	4463      	add	r3, ip
    e19c:	701a      	strb	r2, [r3, #0]
                    for(k = 0; k < j; k++)
    e19e:	2327      	movs	r3, #39	; 0x27
    e1a0:	2208      	movs	r2, #8
    e1a2:	4694      	mov	ip, r2
    e1a4:	44bc      	add	ip, r7
    e1a6:	4463      	add	r3, ip
    e1a8:	2200      	movs	r2, #0
    e1aa:	701a      	strb	r2, [r3, #0]
    e1ac:	e00f      	b.n	e1ce <MiApp_NoiseDetection+0x1f2>
                    {
                        printf("-");
    e1ae:	202d      	movs	r0, #45	; 0x2d
    e1b0:	4b52      	ldr	r3, [pc, #328]	; (e2fc <MiApp_NoiseDetection+0x320>)
    e1b2:	4798      	blx	r3
                    for(k = 0; k < j; k++)
    e1b4:	2327      	movs	r3, #39	; 0x27
    e1b6:	2208      	movs	r2, #8
    e1b8:	4694      	mov	ip, r2
    e1ba:	44bc      	add	ip, r7
    e1bc:	4463      	add	r3, ip
    e1be:	781a      	ldrb	r2, [r3, #0]
    e1c0:	2327      	movs	r3, #39	; 0x27
    e1c2:	2108      	movs	r1, #8
    e1c4:	468c      	mov	ip, r1
    e1c6:	44bc      	add	ip, r7
    e1c8:	4463      	add	r3, ip
    e1ca:	3201      	adds	r2, #1
    e1cc:	701a      	strb	r2, [r3, #0]
    e1ce:	2327      	movs	r3, #39	; 0x27
    e1d0:	2208      	movs	r2, #8
    e1d2:	18ba      	adds	r2, r7, r2
    e1d4:	18d2      	adds	r2, r2, r3
    e1d6:	231b      	movs	r3, #27
    e1d8:	2108      	movs	r1, #8
    e1da:	468c      	mov	ip, r1
    e1dc:	44bc      	add	ip, r7
    e1de:	4463      	add	r3, ip
    e1e0:	7812      	ldrb	r2, [r2, #0]
    e1e2:	781b      	ldrb	r3, [r3, #0]
    e1e4:	429a      	cmp	r2, r3
    e1e6:	d3e2      	bcc.n	e1ae <MiApp_NoiseDetection+0x1d2>
                    }
					
					//RSSI
					printf(" - %d %d",0-RSSI_avg,RSSI_avg);
    e1e8:	231c      	movs	r3, #28
    e1ea:	2208      	movs	r2, #8
    e1ec:	4694      	mov	ip, r2
    e1ee:	44bc      	add	ip, r7
    e1f0:	4463      	add	r3, ip
    e1f2:	2200      	movs	r2, #0
    e1f4:	5e9b      	ldrsh	r3, [r3, r2]
    e1f6:	4259      	negs	r1, r3
    e1f8:	231c      	movs	r3, #28
    e1fa:	2208      	movs	r2, #8
    e1fc:	4694      	mov	ip, r2
    e1fe:	44bc      	add	ip, r7
    e200:	4463      	add	r3, ip
    e202:	2200      	movs	r2, #0
    e204:	5e9a      	ldrsh	r2, [r3, r2]
    e206:	4b3e      	ldr	r3, [pc, #248]	; (e300 <MiApp_NoiseDetection+0x324>)
    e208:	0018      	movs	r0, r3
    e20a:	4b33      	ldr	r3, [pc, #204]	; (e2d8 <MiApp_NoiseDetection+0x2fc>)
    e20c:	4798      	blx	r3
										
                    #if defined(NWK_ROLE_COORDINATOR) && defined(ENABLE_FREQUENCY_AGILITY)  // eugene 2017.07.05
                        EnergyScanResults[i] = RSSI_avg;
    e20e:	2337      	movs	r3, #55	; 0x37
    e210:	2208      	movs	r2, #8
    e212:	4694      	mov	ip, r2
    e214:	44bc      	add	ip, r7
    e216:	4463      	add	r3, ip
    e218:	781b      	ldrb	r3, [r3, #0]
    e21a:	221c      	movs	r2, #28
    e21c:	2108      	movs	r1, #8
    e21e:	468c      	mov	ip, r1
    e220:	44bc      	add	ip, r7
    e222:	4462      	add	r2, ip
    e224:	8812      	ldrh	r2, [r2, #0]
    e226:	b2d1      	uxtb	r1, r2
    e228:	4a2c      	ldr	r2, [pc, #176]	; (e2dc <MiApp_NoiseDetection+0x300>)
    e22a:	54d1      	strb	r1, [r2, r3]
                    #endif
                    
                    if( RSSI_avg < RSSI_avg_min )
    e22c:	231c      	movs	r3, #28
    e22e:	2208      	movs	r2, #8
    e230:	18ba      	adds	r2, r7, r2
    e232:	18d2      	adds	r2, r2, r3
    e234:	2334      	movs	r3, #52	; 0x34
    e236:	2108      	movs	r1, #8
    e238:	468c      	mov	ip, r1
    e23a:	44bc      	add	ip, r7
    e23c:	4463      	add	r3, ip
    e23e:	2100      	movs	r1, #0
    e240:	5e52      	ldrsh	r2, [r2, r1]
    e242:	2100      	movs	r1, #0
    e244:	5e5b      	ldrsh	r3, [r3, r1]
    e246:	429a      	cmp	r2, r3
    e248:	da1f      	bge.n	e28a <MiApp_NoiseDetection+0x2ae>
                    {
                        RSSI_avg_min = RSSI_avg;
    e24a:	2334      	movs	r3, #52	; 0x34
    e24c:	2208      	movs	r2, #8
    e24e:	4694      	mov	ip, r2
    e250:	44bc      	add	ip, r7
    e252:	4463      	add	r3, ip
    e254:	221c      	movs	r2, #28
    e256:	2108      	movs	r1, #8
    e258:	468c      	mov	ip, r1
    e25a:	44bc      	add	ip, r7
    e25c:	4462      	add	r2, ip
    e25e:	8812      	ldrh	r2, [r2, #0]
    e260:	801a      	strh	r2, [r3, #0]
                        OptimalChannel = i;
    e262:	2336      	movs	r3, #54	; 0x36
    e264:	2208      	movs	r2, #8
    e266:	4694      	mov	ip, r2
    e268:	44bc      	add	ip, r7
    e26a:	4463      	add	r3, ip
    e26c:	2237      	movs	r2, #55	; 0x37
    e26e:	2108      	movs	r1, #8
    e270:	468c      	mov	ip, r1
    e272:	44bc      	add	ip, r7
    e274:	4462      	add	r2, ip
    e276:	7812      	ldrb	r2, [r2, #0]
    e278:	701a      	strb	r2, [r3, #0]
                        *RSSIValue = RSSI_avg_min;   
    e27a:	68fb      	ldr	r3, [r7, #12]
    e27c:	2234      	movs	r2, #52	; 0x34
    e27e:	2108      	movs	r1, #8
    e280:	468c      	mov	ip, r1
    e282:	44bc      	add	ip, r7
    e284:	4462      	add	r2, ip
    e286:	8812      	ldrh	r2, [r2, #0]
    e288:	801a      	strh	r2, [r3, #0]
                    }              
                }  
                i++;
    e28a:	2337      	movs	r3, #55	; 0x37
    e28c:	2208      	movs	r2, #8
    e28e:	4694      	mov	ip, r2
    e290:	44bc      	add	ip, r7
    e292:	4463      	add	r3, ip
    e294:	781a      	ldrb	r2, [r3, #0]
    e296:	2337      	movs	r3, #55	; 0x37
    e298:	2108      	movs	r1, #8
    e29a:	468c      	mov	ip, r1
    e29c:	44bc      	add	ip, r7
    e29e:	4463      	add	r3, ip
    e2a0:	3201      	adds	r2, #1
    e2a2:	701a      	strb	r2, [r3, #0]
			while(i <= USE_CHANNEL_NUM_END)
    e2a4:	2337      	movs	r3, #55	; 0x37
    e2a6:	2208      	movs	r2, #8
    e2a8:	4694      	mov	ip, r2
    e2aa:	44bc      	add	ip, r7
    e2ac:	4463      	add	r3, ip
    e2ae:	781b      	ldrb	r3, [r3, #0]
    e2b0:	2b20      	cmp	r3, #32
    e2b2:	d800      	bhi.n	e2b6 <MiApp_NoiseDetection+0x2da>
    e2b4:	e6cd      	b.n	e052 <MiApp_NoiseDetection+0x76>
            }        
			printf("\r\n");
    e2b6:	4b13      	ldr	r3, [pc, #76]	; (e304 <MiApp_NoiseDetection+0x328>)
    e2b8:	0018      	movs	r0, r3
    e2ba:	4b13      	ldr	r3, [pc, #76]	; (e308 <MiApp_NoiseDetection+0x32c>)
    e2bc:	4798      	blx	r3
            return OptimalChannel;
    e2be:	2336      	movs	r3, #54	; 0x36
    e2c0:	2208      	movs	r2, #8
    e2c2:	4694      	mov	ip, r2
    e2c4:	44bc      	add	ip, r7
    e2c6:	4463      	add	r3, ip
    e2c8:	781b      	ldrb	r3, [r3, #0]
        }
    e2ca:	0018      	movs	r0, r3
    e2cc:	46bd      	mov	sp, r7
    e2ce:	b011      	add	sp, #68	; 0x44
    e2d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    e2d2:	46c0      	nop			; (mov r8, r8)
    e2d4:	0001ceb4 	.word	0x0001ceb4
    e2d8:	0001782d 	.word	0x0001782d
    e2dc:	20001294 	.word	0x20001294
    e2e0:	0000d159 	.word	0x0000d159
    e2e4:	0000ebad 	.word	0x0000ebad
    e2e8:	00010151 	.word	0x00010151
    e2ec:	0001cc48 	.word	0x0001cc48
    e2f0:	00014ced 	.word	0x00014ced
    e2f4:	0001cecc 	.word	0x0001cecc
    e2f8:	0001cedc 	.word	0x0001cedc
    e2fc:	00017851 	.word	0x00017851
    e300:	0001cee0 	.word	0x0001cee0
    e304:	0001cddc 	.word	0x0001cddc
    e308:	00017905 	.word	0x00017905

0000e30c <StartChannelHopping>:
             * Side Effects:    The operating channel for current device will change
             *                  to the specified channel
             *
             ********************************************************************/
            void StartChannelHopping(INPUT uint8_t OptimalChannel)
            {
    e30c:	b590      	push	{r4, r7, lr}
    e30e:	b087      	sub	sp, #28
    e310:	af00      	add	r7, sp, #0
    e312:	0002      	movs	r2, r0
    e314:	1dfb      	adds	r3, r7, #7
    e316:	701a      	strb	r2, [r3, #0]
                uint8_t i;
                MIWI_TICK t1, t2;
                
                for( i = 0; i < FA_BROADCAST_TIME; i++)
    e318:	2317      	movs	r3, #23
    e31a:	18fb      	adds	r3, r7, r3
    e31c:	2200      	movs	r2, #0
    e31e:	701a      	strb	r2, [r3, #0]
    e320:	e047      	b.n	e3b2 <StartChannelHopping+0xa6>
                {
                    t1 = MiWi_TickGet();
    e322:	4b2d      	ldr	r3, [pc, #180]	; (e3d8 <StartChannelHopping+0xcc>)
    e324:	4798      	blx	r3
    e326:	0003      	movs	r3, r0
    e328:	613b      	str	r3, [r7, #16]
                    while(1)
                    {
                        t2 = MiWi_TickGet();
    e32a:	4b2b      	ldr	r3, [pc, #172]	; (e3d8 <StartChannelHopping+0xcc>)
    e32c:	4798      	blx	r3
    e32e:	0003      	movs	r3, r0
    e330:	60fb      	str	r3, [r7, #12]
                        if( MiWi_TickGetDiff(t2, t1) > FA_COMM_INTERVAL )
    e332:	68fa      	ldr	r2, [r7, #12]
    e334:	693b      	ldr	r3, [r7, #16]
    e336:	1ad2      	subs	r2, r2, r3
    e338:	2380      	movs	r3, #128	; 0x80
    e33a:	015b      	lsls	r3, r3, #5
    e33c:	429a      	cmp	r2, r3
    e33e:	d9f4      	bls.n	e32a <StartChannelHopping+0x1e>
                        {
                            MiApp_FlushTx();
    e340:	4b26      	ldr	r3, [pc, #152]	; (e3dc <StartChannelHopping+0xd0>)
    e342:	220b      	movs	r2, #11
    e344:	701a      	strb	r2, [r3, #0]
                            MiApp_WriteData(MIWI_PRO_STACK_REPORT_TYPE);
    e346:	4b25      	ldr	r3, [pc, #148]	; (e3dc <StartChannelHopping+0xd0>)
    e348:	781b      	ldrb	r3, [r3, #0]
    e34a:	1c5a      	adds	r2, r3, #1
    e34c:	b2d1      	uxtb	r1, r2
    e34e:	4a23      	ldr	r2, [pc, #140]	; (e3dc <StartChannelHopping+0xd0>)
    e350:	7011      	strb	r1, [r2, #0]
    e352:	001a      	movs	r2, r3
    e354:	4b22      	ldr	r3, [pc, #136]	; (e3e0 <StartChannelHopping+0xd4>)
    e356:	2100      	movs	r1, #0
    e358:	5499      	strb	r1, [r3, r2]
                            MiApp_WriteData(CHANNEL_HOPPING_REQUEST);
    e35a:	4b20      	ldr	r3, [pc, #128]	; (e3dc <StartChannelHopping+0xd0>)
    e35c:	781b      	ldrb	r3, [r3, #0]
    e35e:	1c5a      	adds	r2, r3, #1
    e360:	b2d1      	uxtb	r1, r2
    e362:	4a1e      	ldr	r2, [pc, #120]	; (e3dc <StartChannelHopping+0xd0>)
    e364:	7011      	strb	r1, [r2, #0]
    e366:	001a      	movs	r2, r3
    e368:	4b1d      	ldr	r3, [pc, #116]	; (e3e0 <StartChannelHopping+0xd4>)
    e36a:	2140      	movs	r1, #64	; 0x40
    e36c:	5499      	strb	r1, [r3, r2]
                            MiApp_WriteData(currentChannel);
    e36e:	4b1b      	ldr	r3, [pc, #108]	; (e3dc <StartChannelHopping+0xd0>)
    e370:	781b      	ldrb	r3, [r3, #0]
    e372:	1c5a      	adds	r2, r3, #1
    e374:	b2d1      	uxtb	r1, r2
    e376:	4a19      	ldr	r2, [pc, #100]	; (e3dc <StartChannelHopping+0xd0>)
    e378:	7011      	strb	r1, [r2, #0]
    e37a:	001a      	movs	r2, r3
    e37c:	4b19      	ldr	r3, [pc, #100]	; (e3e4 <StartChannelHopping+0xd8>)
    e37e:	7819      	ldrb	r1, [r3, #0]
    e380:	4b17      	ldr	r3, [pc, #92]	; (e3e0 <StartChannelHopping+0xd4>)
    e382:	5499      	strb	r1, [r3, r2]
                            MiApp_WriteData(OptimalChannel);
    e384:	4b15      	ldr	r3, [pc, #84]	; (e3dc <StartChannelHopping+0xd0>)
    e386:	781b      	ldrb	r3, [r3, #0]
    e388:	1c5a      	adds	r2, r3, #1
    e38a:	b2d1      	uxtb	r1, r2
    e38c:	4a13      	ldr	r2, [pc, #76]	; (e3dc <StartChannelHopping+0xd0>)
    e38e:	7011      	strb	r1, [r2, #0]
    e390:	0019      	movs	r1, r3
    e392:	4b13      	ldr	r3, [pc, #76]	; (e3e0 <StartChannelHopping+0xd4>)
    e394:	1dfa      	adds	r2, r7, #7
    e396:	7812      	ldrb	r2, [r2, #0]
    e398:	545a      	strb	r2, [r3, r1]
                            MultiCast(MULTICAST_TO_FFDS, false);  
    e39a:	2100      	movs	r1, #0
    e39c:	2003      	movs	r0, #3
    e39e:	4b12      	ldr	r3, [pc, #72]	; (e3e8 <StartChannelHopping+0xdc>)
    e3a0:	4798      	blx	r3
                            break;
    e3a2:	46c0      	nop			; (mov r8, r8)
                for( i = 0; i < FA_BROADCAST_TIME; i++)
    e3a4:	2317      	movs	r3, #23
    e3a6:	18fb      	adds	r3, r7, r3
    e3a8:	781a      	ldrb	r2, [r3, #0]
    e3aa:	2317      	movs	r3, #23
    e3ac:	18fb      	adds	r3, r7, r3
    e3ae:	3201      	adds	r2, #1
    e3b0:	701a      	strb	r2, [r3, #0]
    e3b2:	2317      	movs	r3, #23
    e3b4:	18fb      	adds	r3, r7, r3
    e3b6:	781b      	ldrb	r3, [r3, #0]
    e3b8:	2b02      	cmp	r3, #2
    e3ba:	d9b2      	bls.n	e322 <StartChannelHopping+0x16>
                        }
                    }
                }
                FrequencyAgilityInfo.status.bits.ChangeChannel = 1;
    e3bc:	4b0b      	ldr	r3, [pc, #44]	; (e3ec <StartChannelHopping+0xe0>)
    e3be:	781a      	ldrb	r2, [r3, #0]
    e3c0:	2102      	movs	r1, #2
    e3c2:	430a      	orrs	r2, r1
    e3c4:	701a      	strb	r2, [r3, #0]
                FrequencyAgilityInfo.FA_StatTick = MiWi_TickGet();
    e3c6:	4c09      	ldr	r4, [pc, #36]	; (e3ec <StartChannelHopping+0xe0>)
    e3c8:	4b03      	ldr	r3, [pc, #12]	; (e3d8 <StartChannelHopping+0xcc>)
    e3ca:	4798      	blx	r3
    e3cc:	0003      	movs	r3, r0
    e3ce:	60a3      	str	r3, [r4, #8]
            }
    e3d0:	46c0      	nop			; (mov r8, r8)
    e3d2:	46bd      	mov	sp, r7
    e3d4:	b007      	add	sp, #28
    e3d6:	bd90      	pop	{r4, r7, pc}
    e3d8:	0000ebad 	.word	0x0000ebad
    e3dc:	200012dc 	.word	0x200012dc
    e3e0:	200012e4 	.word	0x200012e4
    e3e4:	200014b5 	.word	0x200014b5
    e3e8:	0000d82d 	.word	0x0000d82d
    e3ec:	200012cc 	.word	0x200012cc

0000e3f0 <MiApp_InitChannelHopping>:


            bool MiApp_InitChannelHopping( INPUT uint32_t ChannelMap)
            {
    e3f0:	b590      	push	{r4, r7, lr}
    e3f2:	b087      	sub	sp, #28
    e3f4:	af00      	add	r7, sp, #0
    e3f6:	6078      	str	r0, [r7, #4]
                int16_t RSSIValue;
                uint8_t backupChannel = currentChannel;
    e3f8:	2315      	movs	r3, #21
    e3fa:	18fb      	adds	r3, r7, r3
    e3fc:	4abc      	ldr	r2, [pc, #752]	; (e6f0 <MiApp_InitChannelHopping+0x300>)
    e3fe:	7812      	ldrb	r2, [r2, #0]
    e400:	701a      	strb	r2, [r3, #0]
                uint8_t backupConnMode = ConnMode;
    e402:	2314      	movs	r3, #20
    e404:	18fb      	adds	r3, r7, r3
    e406:	4abb      	ldr	r2, [pc, #748]	; (e6f4 <MiApp_InitChannelHopping+0x304>)
    e408:	7812      	ldrb	r2, [r2, #0]
    e40a:	701a      	strb	r2, [r3, #0]
                uint8_t i;
                uint8_t optimalChannel;
                MIWI_TICK t1, t2;
                
                if( role != ROLE_PAN_COORDINATOR )
    e40c:	4bba      	ldr	r3, [pc, #744]	; (e6f8 <MiApp_InitChannelHopping+0x308>)
    e40e:	781b      	ldrb	r3, [r3, #0]
    e410:	2b02      	cmp	r3, #2
    e412:	d001      	beq.n	e418 <MiApp_InitChannelHopping+0x28>
                {
                    return false;
    e414:	2300      	movs	r3, #0
    e416:	e167      	b.n	e6e8 <MiApp_InitChannelHopping+0x2f8>
                }
                
                for( i = 0; i < FA_BROADCAST_TIME; i++)
    e418:	2317      	movs	r3, #23
    e41a:	18fb      	adds	r3, r7, r3
    e41c:	2200      	movs	r2, #0
    e41e:	701a      	strb	r2, [r3, #0]
    e420:	e060      	b.n	e4e4 <MiApp_InitChannelHopping+0xf4>
                {
                    t1 = MiWi_TickGet();
    e422:	4bb6      	ldr	r3, [pc, #728]	; (e6fc <MiApp_InitChannelHopping+0x30c>)
    e424:	4798      	blx	r3
    e426:	0003      	movs	r3, r0
    e428:	60fb      	str	r3, [r7, #12]
                    while(1)
                    {
                        t2 = MiWi_TickGet();
    e42a:	4bb4      	ldr	r3, [pc, #720]	; (e6fc <MiApp_InitChannelHopping+0x30c>)
    e42c:	4798      	blx	r3
    e42e:	0003      	movs	r3, r0
    e430:	60bb      	str	r3, [r7, #8]
                        if( MiWi_TickGetDiff(t2, t1) > FA_COMM_INTERVAL )
    e432:	68ba      	ldr	r2, [r7, #8]
    e434:	68fb      	ldr	r3, [r7, #12]
    e436:	1ad2      	subs	r2, r2, r3
    e438:	2380      	movs	r3, #128	; 0x80
    e43a:	015b      	lsls	r3, r3, #5
    e43c:	429a      	cmp	r2, r3
    e43e:	d9f4      	bls.n	e42a <MiApp_InitChannelHopping+0x3a>
                        {
                            MiApp_FlushTx();
    e440:	4baf      	ldr	r3, [pc, #700]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e442:	220b      	movs	r2, #11
    e444:	701a      	strb	r2, [r3, #0]
                            MiApp_WriteData(MIWI_PRO_STACK_REPORT_TYPE);
    e446:	4bae      	ldr	r3, [pc, #696]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e448:	781b      	ldrb	r3, [r3, #0]
    e44a:	1c5a      	adds	r2, r3, #1
    e44c:	b2d1      	uxtb	r1, r2
    e44e:	4aac      	ldr	r2, [pc, #688]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e450:	7011      	strb	r1, [r2, #0]
    e452:	001a      	movs	r2, r3
    e454:	4bab      	ldr	r3, [pc, #684]	; (e704 <MiApp_InitChannelHopping+0x314>)
    e456:	2100      	movs	r1, #0
    e458:	5499      	strb	r1, [r3, r2]
                            MiApp_WriteData(FA_ENERGY_SCAN_REQUEST);
    e45a:	4ba9      	ldr	r3, [pc, #676]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e45c:	781b      	ldrb	r3, [r3, #0]
    e45e:	1c5a      	adds	r2, r3, #1
    e460:	b2d1      	uxtb	r1, r2
    e462:	4aa7      	ldr	r2, [pc, #668]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e464:	7011      	strb	r1, [r2, #0]
    e466:	001a      	movs	r2, r3
    e468:	4ba6      	ldr	r3, [pc, #664]	; (e704 <MiApp_InitChannelHopping+0x314>)
    e46a:	21b1      	movs	r1, #177	; 0xb1
    e46c:	5499      	strb	r1, [r3, r2]
                            MiApp_WriteData(ChannelMap);
    e46e:	4ba4      	ldr	r3, [pc, #656]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e470:	781b      	ldrb	r3, [r3, #0]
    e472:	1c5a      	adds	r2, r3, #1
    e474:	b2d1      	uxtb	r1, r2
    e476:	4aa2      	ldr	r2, [pc, #648]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e478:	7011      	strb	r1, [r2, #0]
    e47a:	001a      	movs	r2, r3
    e47c:	687b      	ldr	r3, [r7, #4]
    e47e:	b2d9      	uxtb	r1, r3
    e480:	4ba0      	ldr	r3, [pc, #640]	; (e704 <MiApp_InitChannelHopping+0x314>)
    e482:	5499      	strb	r1, [r3, r2]
                            MiApp_WriteData(ChannelMap>>8);
    e484:	4b9e      	ldr	r3, [pc, #632]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e486:	781b      	ldrb	r3, [r3, #0]
    e488:	1c5a      	adds	r2, r3, #1
    e48a:	b2d1      	uxtb	r1, r2
    e48c:	4a9c      	ldr	r2, [pc, #624]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e48e:	7011      	strb	r1, [r2, #0]
    e490:	001a      	movs	r2, r3
    e492:	687b      	ldr	r3, [r7, #4]
    e494:	0a1b      	lsrs	r3, r3, #8
    e496:	b2d9      	uxtb	r1, r3
    e498:	4b9a      	ldr	r3, [pc, #616]	; (e704 <MiApp_InitChannelHopping+0x314>)
    e49a:	5499      	strb	r1, [r3, r2]
                            MiApp_WriteData(ChannelMap>>16);
    e49c:	4b98      	ldr	r3, [pc, #608]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e49e:	781b      	ldrb	r3, [r3, #0]
    e4a0:	1c5a      	adds	r2, r3, #1
    e4a2:	b2d1      	uxtb	r1, r2
    e4a4:	4a96      	ldr	r2, [pc, #600]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e4a6:	7011      	strb	r1, [r2, #0]
    e4a8:	001a      	movs	r2, r3
    e4aa:	687b      	ldr	r3, [r7, #4]
    e4ac:	0c1b      	lsrs	r3, r3, #16
    e4ae:	b2d9      	uxtb	r1, r3
    e4b0:	4b94      	ldr	r3, [pc, #592]	; (e704 <MiApp_InitChannelHopping+0x314>)
    e4b2:	5499      	strb	r1, [r3, r2]
                            MiApp_WriteData(ChannelMap>>24);
    e4b4:	4b92      	ldr	r3, [pc, #584]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e4b6:	781b      	ldrb	r3, [r3, #0]
    e4b8:	1c5a      	adds	r2, r3, #1
    e4ba:	b2d1      	uxtb	r1, r2
    e4bc:	4a90      	ldr	r2, [pc, #576]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e4be:	7011      	strb	r1, [r2, #0]
    e4c0:	001a      	movs	r2, r3
    e4c2:	687b      	ldr	r3, [r7, #4]
    e4c4:	0e1b      	lsrs	r3, r3, #24
    e4c6:	b2d9      	uxtb	r1, r3
    e4c8:	4b8e      	ldr	r3, [pc, #568]	; (e704 <MiApp_InitChannelHopping+0x314>)
    e4ca:	5499      	strb	r1, [r3, r2]
                            MultiCast(MULTICAST_TO_COORDINATORS, false);
    e4cc:	2100      	movs	r1, #0
    e4ce:	2002      	movs	r0, #2
    e4d0:	4b8d      	ldr	r3, [pc, #564]	; (e708 <MiApp_InitChannelHopping+0x318>)
    e4d2:	4798      	blx	r3
                            break;
    e4d4:	46c0      	nop			; (mov r8, r8)
                for( i = 0; i < FA_BROADCAST_TIME; i++)
    e4d6:	2317      	movs	r3, #23
    e4d8:	18fb      	adds	r3, r7, r3
    e4da:	781a      	ldrb	r2, [r3, #0]
    e4dc:	2317      	movs	r3, #23
    e4de:	18fb      	adds	r3, r7, r3
    e4e0:	3201      	adds	r2, #1
    e4e2:	701a      	strb	r2, [r3, #0]
    e4e4:	2317      	movs	r3, #23
    e4e6:	18fb      	adds	r3, r7, r3
    e4e8:	781b      	ldrb	r3, [r3, #0]
    e4ea:	2b02      	cmp	r3, #2
    e4ec:	d999      	bls.n	e422 <MiApp_InitChannelHopping+0x32>
                        }
                    }
                }
                
                FrequencyAgilityInfo.status.Val = 0;
    e4ee:	4b87      	ldr	r3, [pc, #540]	; (e70c <MiApp_InitChannelHopping+0x31c>)
    e4f0:	2200      	movs	r2, #0
    e4f2:	701a      	strb	r2, [r3, #0]
                MiApp_ConnectionMode(DISABLE_ALL_CONN);
    e4f4:	2003      	movs	r0, #3
    e4f6:	4b86      	ldr	r3, [pc, #536]	; (e710 <MiApp_InitChannelHopping+0x320>)
    e4f8:	4798      	blx	r3
                MiApp_NoiseDetection(ChannelMap, 10, NOISE_DETECT_ENERGY, &RSSIValue);
    e4fa:	2312      	movs	r3, #18
    e4fc:	18fb      	adds	r3, r7, r3
    e4fe:	6878      	ldr	r0, [r7, #4]
    e500:	2200      	movs	r2, #0
    e502:	210a      	movs	r1, #10
    e504:	4c83      	ldr	r4, [pc, #524]	; (e714 <MiApp_InitChannelHopping+0x324>)
    e506:	47a0      	blx	r4
                MiApp_SetChannel(backupChannel);
    e508:	2315      	movs	r3, #21
    e50a:	18fb      	adds	r3, r7, r3
    e50c:	781b      	ldrb	r3, [r3, #0]
    e50e:	0018      	movs	r0, r3
    e510:	4b81      	ldr	r3, [pc, #516]	; (e718 <MiApp_InitChannelHopping+0x328>)
    e512:	4798      	blx	r3
                MiApp_ConnectionMode(backupConnMode);
    e514:	2314      	movs	r3, #20
    e516:	18fb      	adds	r3, r7, r3
    e518:	781b      	ldrb	r3, [r3, #0]
    e51a:	0018      	movs	r0, r3
    e51c:	4b7c      	ldr	r3, [pc, #496]	; (e710 <MiApp_InitChannelHopping+0x320>)
    e51e:	4798      	blx	r3
                
                FrequencyAgilityInfo.FA_StatTick = MiWi_TickGet();
    e520:	4c7a      	ldr	r4, [pc, #488]	; (e70c <MiApp_InitChannelHopping+0x31c>)
    e522:	4b76      	ldr	r3, [pc, #472]	; (e6fc <MiApp_InitChannelHopping+0x30c>)
    e524:	4798      	blx	r3
    e526:	0003      	movs	r3, r0
    e528:	60a3      	str	r3, [r4, #8]
                while(1)
                {
                    t1 = MiWi_TickGet();
    e52a:	4b74      	ldr	r3, [pc, #464]	; (e6fc <MiApp_InitChannelHopping+0x30c>)
    e52c:	4798      	blx	r3
    e52e:	0003      	movs	r3, r0
    e530:	60fb      	str	r3, [r7, #12]
                    if( MiWi_TickGetDiff(t1, FrequencyAgilityInfo.FA_StatTick) > (FA_WAIT_TIMEOUT * 3) )
    e532:	68fa      	ldr	r2, [r7, #12]
    e534:	4b75      	ldr	r3, [pc, #468]	; (e70c <MiApp_InitChannelHopping+0x31c>)
    e536:	689b      	ldr	r3, [r3, #8]
    e538:	1ad2      	subs	r2, r2, r3
    e53a:	23c0      	movs	r3, #192	; 0xc0
    e53c:	01db      	lsls	r3, r3, #7
    e53e:	429a      	cmp	r2, r3
    e540:	d900      	bls.n	e544 <MiApp_InitChannelHopping+0x154>
                    {
                        break;
    e542:	e006      	b.n	e552 <MiApp_InitChannelHopping+0x162>
                    }
                    if( MiApp_MessageAvailable())
    e544:	4b75      	ldr	r3, [pc, #468]	; (e71c <MiApp_InitChannelHopping+0x32c>)
    e546:	4798      	blx	r3
    e548:	1e03      	subs	r3, r0, #0
    e54a:	d0ee      	beq.n	e52a <MiApp_InitChannelHopping+0x13a>
                    {
                        MiApp_DiscardMessage();
    e54c:	4b74      	ldr	r3, [pc, #464]	; (e720 <MiApp_InitChannelHopping+0x330>)
    e54e:	4798      	blx	r3
                    t1 = MiWi_TickGet();
    e550:	e7eb      	b.n	e52a <MiApp_InitChannelHopping+0x13a>
                    //MiWiPROTasks();
                }
                
                while(1)
                {
                    RSSIValue = 0xFF;
    e552:	2312      	movs	r3, #18
    e554:	18fb      	adds	r3, r7, r3
    e556:	22ff      	movs	r2, #255	; 0xff
    e558:	801a      	strh	r2, [r3, #0]
                    optimalChannel = 0xFF;
    e55a:	2316      	movs	r3, #22
    e55c:	18fb      	adds	r3, r7, r3
    e55e:	22ff      	movs	r2, #255	; 0xff
    e560:	701a      	strb	r2, [r3, #0]
                    for(i = 1; i <= 32; i++)
    e562:	2317      	movs	r3, #23
    e564:	18fb      	adds	r3, r7, r3
    e566:	2201      	movs	r2, #1
    e568:	701a      	strb	r2, [r3, #0]
    e56a:	e021      	b.n	e5b0 <MiApp_InitChannelHopping+0x1c0>
                    {
                        if( EnergyScanResults[i] < RSSIValue )
    e56c:	2317      	movs	r3, #23
    e56e:	18fb      	adds	r3, r7, r3
    e570:	781b      	ldrb	r3, [r3, #0]
    e572:	4a6c      	ldr	r2, [pc, #432]	; (e724 <MiApp_InitChannelHopping+0x334>)
    e574:	5cd3      	ldrb	r3, [r2, r3]
    e576:	001a      	movs	r2, r3
    e578:	2312      	movs	r3, #18
    e57a:	18fb      	adds	r3, r7, r3
    e57c:	2100      	movs	r1, #0
    e57e:	5e5b      	ldrsh	r3, [r3, r1]
    e580:	429a      	cmp	r2, r3
    e582:	da0e      	bge.n	e5a2 <MiApp_InitChannelHopping+0x1b2>
                        {
                            RSSIValue = EnergyScanResults[i];
    e584:	2317      	movs	r3, #23
    e586:	18fb      	adds	r3, r7, r3
    e588:	781b      	ldrb	r3, [r3, #0]
    e58a:	4a66      	ldr	r2, [pc, #408]	; (e724 <MiApp_InitChannelHopping+0x334>)
    e58c:	5cd3      	ldrb	r3, [r2, r3]
    e58e:	b21a      	sxth	r2, r3
    e590:	2312      	movs	r3, #18
    e592:	18fb      	adds	r3, r7, r3
    e594:	801a      	strh	r2, [r3, #0]
                            optimalChannel = i;
    e596:	2316      	movs	r3, #22
    e598:	18fb      	adds	r3, r7, r3
    e59a:	2217      	movs	r2, #23
    e59c:	18ba      	adds	r2, r7, r2
    e59e:	7812      	ldrb	r2, [r2, #0]
    e5a0:	701a      	strb	r2, [r3, #0]
                    for(i = 1; i <= 32; i++)
    e5a2:	2317      	movs	r3, #23
    e5a4:	18fb      	adds	r3, r7, r3
    e5a6:	781a      	ldrb	r2, [r3, #0]
    e5a8:	2317      	movs	r3, #23
    e5aa:	18fb      	adds	r3, r7, r3
    e5ac:	3201      	adds	r2, #1
    e5ae:	701a      	strb	r2, [r3, #0]
    e5b0:	2317      	movs	r3, #23
    e5b2:	18fb      	adds	r3, r7, r3
    e5b4:	781b      	ldrb	r3, [r3, #0]
    e5b6:	2b20      	cmp	r3, #32
    e5b8:	d9d8      	bls.n	e56c <MiApp_InitChannelHopping+0x17c>
                        }    
                    }    
                                      
                    if( (optimalChannel < 0xFF) && (RSSIValue < FA_MAX_NOISE_THRESHOLD) )
    e5ba:	2316      	movs	r3, #22
    e5bc:	18fb      	adds	r3, r7, r3
    e5be:	781b      	ldrb	r3, [r3, #0]
    e5c0:	2bff      	cmp	r3, #255	; 0xff
    e5c2:	d04c      	beq.n	e65e <MiApp_InitChannelHopping+0x26e>
    e5c4:	2312      	movs	r3, #18
    e5c6:	18fb      	adds	r3, r7, r3
    e5c8:	2200      	movs	r2, #0
    e5ca:	5e9b      	ldrsh	r3, [r3, r2]
    e5cc:	2b7f      	cmp	r3, #127	; 0x7f
    e5ce:	dc46      	bgt.n	e65e <MiApp_InitChannelHopping+0x26e>
                    {
                        EnergyScanResults[optimalChannel] = 0xFF;
    e5d0:	2316      	movs	r3, #22
    e5d2:	18fb      	adds	r3, r7, r3
    e5d4:	781b      	ldrb	r3, [r3, #0]
    e5d6:	4a53      	ldr	r2, [pc, #332]	; (e724 <MiApp_InitChannelHopping+0x334>)
    e5d8:	21ff      	movs	r1, #255	; 0xff
    e5da:	54d1      	strb	r1, [r2, r3]
                        MiApp_SetChannel(backupChannel);
                        return false;
                    }    
                    
                    // send out FA_SUGGEST_CHANNEL command
                    MiApp_FlushTx();
    e5dc:	4b48      	ldr	r3, [pc, #288]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e5de:	220b      	movs	r2, #11
    e5e0:	701a      	strb	r2, [r3, #0]
                    MiApp_WriteData(MIWI_PRO_STACK_REPORT_TYPE);
    e5e2:	4b47      	ldr	r3, [pc, #284]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e5e4:	781b      	ldrb	r3, [r3, #0]
    e5e6:	1c5a      	adds	r2, r3, #1
    e5e8:	b2d1      	uxtb	r1, r2
    e5ea:	4a45      	ldr	r2, [pc, #276]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e5ec:	7011      	strb	r1, [r2, #0]
    e5ee:	001a      	movs	r2, r3
    e5f0:	4b44      	ldr	r3, [pc, #272]	; (e704 <MiApp_InitChannelHopping+0x314>)
    e5f2:	2100      	movs	r1, #0
    e5f4:	5499      	strb	r1, [r3, r2]
                    MiApp_WriteData(FA_SUGGEST_CHANNEL);
    e5f6:	4b42      	ldr	r3, [pc, #264]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e5f8:	781b      	ldrb	r3, [r3, #0]
    e5fa:	1c5a      	adds	r2, r3, #1
    e5fc:	b2d1      	uxtb	r1, r2
    e5fe:	4a40      	ldr	r2, [pc, #256]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e600:	7011      	strb	r1, [r2, #0]
    e602:	001a      	movs	r2, r3
    e604:	4b3f      	ldr	r3, [pc, #252]	; (e704 <MiApp_InitChannelHopping+0x314>)
    e606:	21b2      	movs	r1, #178	; 0xb2
    e608:	5499      	strb	r1, [r3, r2]
                    MiApp_WriteData(optimalChannel);
    e60a:	4b3d      	ldr	r3, [pc, #244]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e60c:	781b      	ldrb	r3, [r3, #0]
    e60e:	1c5a      	adds	r2, r3, #1
    e610:	b2d1      	uxtb	r1, r2
    e612:	4a3b      	ldr	r2, [pc, #236]	; (e700 <MiApp_InitChannelHopping+0x310>)
    e614:	7011      	strb	r1, [r2, #0]
    e616:	0019      	movs	r1, r3
    e618:	4b3a      	ldr	r3, [pc, #232]	; (e704 <MiApp_InitChannelHopping+0x314>)
    e61a:	2216      	movs	r2, #22
    e61c:	18ba      	adds	r2, r7, r2
    e61e:	7812      	ldrb	r2, [r2, #0]
    e620:	545a      	strb	r2, [r3, r1]
                    MultiCast(MULTICAST_TO_COORDINATORS, false);
    e622:	2100      	movs	r1, #0
    e624:	2002      	movs	r0, #2
    e626:	4b38      	ldr	r3, [pc, #224]	; (e708 <MiApp_InitChannelHopping+0x318>)
    e628:	4798      	blx	r3
                    FrequencyAgilityInfo.status.bits.DisputeChannel = 0;
    e62a:	4b38      	ldr	r3, [pc, #224]	; (e70c <MiApp_InitChannelHopping+0x31c>)
    e62c:	781a      	ldrb	r2, [r3, #0]
    e62e:	2104      	movs	r1, #4
    e630:	438a      	bics	r2, r1
    e632:	701a      	strb	r2, [r3, #0]
                    FrequencyAgilityInfo.status.bits.SuggestChannel = optimalChannel;
    e634:	2316      	movs	r3, #22
    e636:	18fb      	adds	r3, r7, r3
    e638:	781b      	ldrb	r3, [r3, #0]
    e63a:	221f      	movs	r2, #31
    e63c:	4013      	ands	r3, r2
    e63e:	b2da      	uxtb	r2, r3
    e640:	4b32      	ldr	r3, [pc, #200]	; (e70c <MiApp_InitChannelHopping+0x31c>)
    e642:	00d0      	lsls	r0, r2, #3
    e644:	781a      	ldrb	r2, [r3, #0]
    e646:	2107      	movs	r1, #7
    e648:	400a      	ands	r2, r1
    e64a:	1c11      	adds	r1, r2, #0
    e64c:	1c02      	adds	r2, r0, #0
    e64e:	430a      	orrs	r2, r1
    e650:	701a      	strb	r2, [r3, #0]
                    
                    FrequencyAgilityInfo.FA_StatTick = MiWi_TickGet();
    e652:	4c2e      	ldr	r4, [pc, #184]	; (e70c <MiApp_InitChannelHopping+0x31c>)
    e654:	4b29      	ldr	r3, [pc, #164]	; (e6fc <MiApp_InitChannelHopping+0x30c>)
    e656:	4798      	blx	r3
    e658:	0003      	movs	r3, r0
    e65a:	60a3      	str	r3, [r4, #8]
    e65c:	e007      	b.n	e66e <MiApp_InitChannelHopping+0x27e>
                        MiApp_SetChannel(backupChannel);
    e65e:	2315      	movs	r3, #21
    e660:	18fb      	adds	r3, r7, r3
    e662:	781b      	ldrb	r3, [r3, #0]
    e664:	0018      	movs	r0, r3
    e666:	4b2c      	ldr	r3, [pc, #176]	; (e718 <MiApp_InitChannelHopping+0x328>)
    e668:	4798      	blx	r3
                        return false;
    e66a:	2300      	movs	r3, #0
    e66c:	e03c      	b.n	e6e8 <MiApp_InitChannelHopping+0x2f8>
                    while(1)
                    {
                        t1 = MiWi_TickGet();
    e66e:	4b23      	ldr	r3, [pc, #140]	; (e6fc <MiApp_InitChannelHopping+0x30c>)
    e670:	4798      	blx	r3
    e672:	0003      	movs	r3, r0
    e674:	60fb      	str	r3, [r7, #12]
                        if( MiWi_TickGetDiff(t1, FrequencyAgilityInfo.FA_StatTick) > FA_WAIT_TIMEOUT )
    e676:	68fa      	ldr	r2, [r7, #12]
    e678:	4b24      	ldr	r3, [pc, #144]	; (e70c <MiApp_InitChannelHopping+0x31c>)
    e67a:	689b      	ldr	r3, [r3, #8]
    e67c:	1ad2      	subs	r2, r2, r3
    e67e:	2380      	movs	r3, #128	; 0x80
    e680:	019b      	lsls	r3, r3, #6
    e682:	429a      	cmp	r2, r3
    e684:	d80d      	bhi.n	e6a2 <MiApp_InitChannelHopping+0x2b2>
                        {
                            break;
                        } 
                        if( FrequencyAgilityInfo.status.bits.DisputeChannel )
    e686:	4b21      	ldr	r3, [pc, #132]	; (e70c <MiApp_InitChannelHopping+0x31c>)
    e688:	781b      	ldrb	r3, [r3, #0]
    e68a:	2204      	movs	r2, #4
    e68c:	4013      	ands	r3, r2
    e68e:	b2db      	uxtb	r3, r3
    e690:	2b00      	cmp	r3, #0
    e692:	d108      	bne.n	e6a6 <MiApp_InitChannelHopping+0x2b6>
                        {
                            break;
                        }
                        if( MiApp_MessageAvailable())
    e694:	4b21      	ldr	r3, [pc, #132]	; (e71c <MiApp_InitChannelHopping+0x32c>)
    e696:	4798      	blx	r3
    e698:	1e03      	subs	r3, r0, #0
    e69a:	d0e8      	beq.n	e66e <MiApp_InitChannelHopping+0x27e>
                        {
                            MiApp_DiscardMessage();
    e69c:	4b20      	ldr	r3, [pc, #128]	; (e720 <MiApp_InitChannelHopping+0x330>)
    e69e:	4798      	blx	r3
                        t1 = MiWi_TickGet();
    e6a0:	e7e5      	b.n	e66e <MiApp_InitChannelHopping+0x27e>
                            break;
    e6a2:	46c0      	nop			; (mov r8, r8)
    e6a4:	e000      	b.n	e6a8 <MiApp_InitChannelHopping+0x2b8>
                            break;
    e6a6:	46c0      	nop			; (mov r8, r8)
                        }       
                        //MiWiPROTasks();
                    }
                    
                    if( FrequencyAgilityInfo.status.bits.DisputeChannel == 0 )
    e6a8:	4b18      	ldr	r3, [pc, #96]	; (e70c <MiApp_InitChannelHopping+0x31c>)
    e6aa:	781b      	ldrb	r3, [r3, #0]
    e6ac:	2204      	movs	r2, #4
    e6ae:	4013      	ands	r3, r2
    e6b0:	b2db      	uxtb	r3, r3
    e6b2:	2b00      	cmp	r3, #0
    e6b4:	d000      	beq.n	e6b8 <MiApp_InitChannelHopping+0x2c8>
                    RSSIValue = 0xFF;
    e6b6:	e74c      	b.n	e552 <MiApp_InitChannelHopping+0x162>
                    {
                        break;
    e6b8:	46c0      	nop			; (mov r8, r8)
                    }     
                } 
                
                // send out FA_CHANGE_CHANNEL command
                StartChannelHopping(FrequencyAgilityInfo.status.bits.SuggestChannel);
    e6ba:	4b14      	ldr	r3, [pc, #80]	; (e70c <MiApp_InitChannelHopping+0x31c>)
    e6bc:	781b      	ldrb	r3, [r3, #0]
    e6be:	061b      	lsls	r3, r3, #24
    e6c0:	0edb      	lsrs	r3, r3, #27
    e6c2:	b2db      	uxtb	r3, r3
    e6c4:	0018      	movs	r0, r3
    e6c6:	4b18      	ldr	r3, [pc, #96]	; (e728 <MiApp_InitChannelHopping+0x338>)
    e6c8:	4798      	blx	r3
                
                while(FrequencyAgilityInfo.status.bits.ChangeChannel)
    e6ca:	e005      	b.n	e6d8 <MiApp_InitChannelHopping+0x2e8>
                {
                    if( MiApp_MessageAvailable())
    e6cc:	4b13      	ldr	r3, [pc, #76]	; (e71c <MiApp_InitChannelHopping+0x32c>)
    e6ce:	4798      	blx	r3
    e6d0:	1e03      	subs	r3, r0, #0
    e6d2:	d001      	beq.n	e6d8 <MiApp_InitChannelHopping+0x2e8>
                    {
                        MiApp_DiscardMessage();
    e6d4:	4b12      	ldr	r3, [pc, #72]	; (e720 <MiApp_InitChannelHopping+0x330>)
    e6d6:	4798      	blx	r3
                while(FrequencyAgilityInfo.status.bits.ChangeChannel)
    e6d8:	4b0c      	ldr	r3, [pc, #48]	; (e70c <MiApp_InitChannelHopping+0x31c>)
    e6da:	781b      	ldrb	r3, [r3, #0]
    e6dc:	2202      	movs	r2, #2
    e6de:	4013      	ands	r3, r2
    e6e0:	b2db      	uxtb	r3, r3
    e6e2:	2b00      	cmp	r3, #0
    e6e4:	d1f2      	bne.n	e6cc <MiApp_InitChannelHopping+0x2dc>
                    }
                    //MiWiPROTasks();
                }
                return true;
    e6e6:	2301      	movs	r3, #1
            }
    e6e8:	0018      	movs	r0, r3
    e6ea:	46bd      	mov	sp, r7
    e6ec:	b007      	add	sp, #28
    e6ee:	bd90      	pop	{r4, r7, pc}
    e6f0:	200014b5 	.word	0x200014b5
    e6f4:	20000018 	.word	0x20000018
    e6f8:	200012de 	.word	0x200012de
    e6fc:	0000ebad 	.word	0x0000ebad
    e700:	200012dc 	.word	0x200012dc
    e704:	200012e4 	.word	0x200012e4
    e708:	0000d82d 	.word	0x0000d82d
    e70c:	200012cc 	.word	0x200012cc
    e710:	0000d199 	.word	0x0000d199
    e714:	0000dfdd 	.word	0x0000dfdd
    e718:	0000d159 	.word	0x0000d159
    e71c:	0000d7bd 	.word	0x0000d7bd
    e720:	0000d7e5 	.word	0x0000d7e5
    e724:	20001294 	.word	0x20001294
    e728:	0000e30d 	.word	0x0000e30d

0000e72c <nvm_get_config_defaults>:
 * \param[out] config  Configuration structure to initialize to default values
 *
 */
static inline void nvm_get_config_defaults(
		struct nvm_config *const config)
{
    e72c:	b580      	push	{r7, lr}
    e72e:	b082      	sub	sp, #8
    e730:	af00      	add	r7, sp, #0
    e732:	6078      	str	r0, [r7, #4]
	/* Sanity check the parameters */
	Assert(config);

	/* Write the default configuration for the NVM configuration */
	config->sleep_power_mode  = NVM_SLEEP_POWER_MODE_WAKEONACCESS;
    e734:	687b      	ldr	r3, [r7, #4]
    e736:	2200      	movs	r2, #0
    e738:	701a      	strb	r2, [r3, #0]
	config->manual_page_write = true;
    e73a:	687b      	ldr	r3, [r7, #4]
    e73c:	2201      	movs	r2, #1
    e73e:	705a      	strb	r2, [r3, #1]
	config->wait_states       = NVMCTRL->CTRLB.bit.RWS;
    e740:	4b08      	ldr	r3, [pc, #32]	; (e764 <nvm_get_config_defaults+0x38>)
    e742:	685b      	ldr	r3, [r3, #4]
    e744:	06db      	lsls	r3, r3, #27
    e746:	0f1b      	lsrs	r3, r3, #28
    e748:	b2db      	uxtb	r3, r3
    e74a:	001a      	movs	r2, r3
    e74c:	687b      	ldr	r3, [r7, #4]
    e74e:	709a      	strb	r2, [r3, #2]
	config->disable_cache     = false;
    e750:	687b      	ldr	r3, [r7, #4]
    e752:	2200      	movs	r2, #0
    e754:	70da      	strb	r2, [r3, #3]
#if (SAMC20) || (SAMC21)
	config->disable_rww_cache = false;
#endif
	config->cache_readmode    = NVM_CACHE_READMODE_NO_MISS_PENALTY;
    e756:	687b      	ldr	r3, [r7, #4]
    e758:	2200      	movs	r2, #0
    e75a:	711a      	strb	r2, [r3, #4]
}
    e75c:	46c0      	nop			; (mov r8, r8)
    e75e:	46bd      	mov	sp, r7
    e760:	b002      	add	sp, #8
    e762:	bd80      	pop	{r7, pc}
    e764:	41004000 	.word	0x41004000

0000e768 <NVM_Init>:
 uint16_t   nvmNeighborRoutingTable;
 uint16_t   nvmFamilyTree;
 uint16_t   nvmRole;
 
void NVM_Init()
{
    e768:	b590      	push	{r4, r7, lr}
    e76a:	b083      	sub	sp, #12
    e76c:	af00      	add	r7, sp, #0
	struct nvm_config config;
	enum status_code status;

	/* Get the default configuration */
	nvm_get_config_defaults(&config);
    e76e:	003b      	movs	r3, r7
    e770:	0018      	movs	r0, r3
    e772:	4b09      	ldr	r3, [pc, #36]	; (e798 <NVM_Init+0x30>)
    e774:	4798      	blx	r3

	/* Set wait state to 1 */
	config.wait_states = 1;
    e776:	003b      	movs	r3, r7
    e778:	2201      	movs	r2, #1
    e77a:	709a      	strb	r2, [r3, #2]

	/* Enable automatic page write mode */
	config.manual_page_write = false;
    e77c:	003b      	movs	r3, r7
    e77e:	2200      	movs	r2, #0
    e780:	705a      	strb	r2, [r3, #1]

	/* Set the NVM configuration */
	status = nvm_set_config(&config);
    e782:	1dfc      	adds	r4, r7, #7
    e784:	003b      	movs	r3, r7
    e786:	0018      	movs	r0, r3
    e788:	4b04      	ldr	r3, [pc, #16]	; (e79c <NVM_Init+0x34>)
    e78a:	4798      	blx	r3
    e78c:	0003      	movs	r3, r0
    e78e:	7023      	strb	r3, [r4, #0]
}
    e790:	46c0      	nop			; (mov r8, r8)
    e792:	46bd      	mov	sp, r7
    e794:	b003      	add	sp, #12
    e796:	bd90      	pop	{r4, r7, pc}
    e798:	0000e72d 	.word	0x0000e72d
    e79c:	00000f1d 	.word	0x00000f1d

0000e7a0 <NVM_Write_CH>:
		if(i%16 == 15) printf("\n\r");
	}
}

void NVM_Write_CH(uint8_t channel)
{
    e7a0:	b590      	push	{r4, r7, lr}
    e7a2:	b085      	sub	sp, #20
    e7a4:	af00      	add	r7, sp, #0
    e7a6:	0002      	movs	r2, r0
    e7a8:	1dfb      	adds	r3, r7, #7
    e7aa:	701a      	strb	r2, [r3, #0]
	enum status_code status;
	uint8_t ch;
	
	ch = channel;
    e7ac:	230e      	movs	r3, #14
    e7ae:	18fb      	adds	r3, r7, r3
    e7b0:	1dfa      	adds	r2, r7, #7
    e7b2:	7812      	ldrb	r2, [r2, #0]
    e7b4:	701a      	strb	r2, [r3, #0]
	status = nvm_write_buffer(TEST_PAGE_ADDR, &ch, 1);
    e7b6:	230f      	movs	r3, #15
    e7b8:	18fc      	adds	r4, r7, r3
    e7ba:	230e      	movs	r3, #14
    e7bc:	18fb      	adds	r3, r7, r3
    e7be:	480a      	ldr	r0, [pc, #40]	; (e7e8 <NVM_Write_CH+0x48>)
    e7c0:	2201      	movs	r2, #1
    e7c2:	0019      	movs	r1, r3
    e7c4:	4b09      	ldr	r3, [pc, #36]	; (e7ec <NVM_Write_CH+0x4c>)
    e7c6:	4798      	blx	r3
    e7c8:	0003      	movs	r3, r0
    e7ca:	7023      	strb	r3, [r4, #0]
	if(status != STATUS_OK){
    e7cc:	230f      	movs	r3, #15
    e7ce:	18fb      	adds	r3, r7, r3
    e7d0:	781b      	ldrb	r3, [r3, #0]
    e7d2:	2b00      	cmp	r3, #0
    e7d4:	d003      	beq.n	e7de <NVM_Write_CH+0x3e>
		printf("NVM Write Fail");
    e7d6:	4b06      	ldr	r3, [pc, #24]	; (e7f0 <NVM_Write_CH+0x50>)
    e7d8:	0018      	movs	r0, r3
    e7da:	4b06      	ldr	r3, [pc, #24]	; (e7f4 <NVM_Write_CH+0x54>)
    e7dc:	4798      	blx	r3
	}
}
    e7de:	46c0      	nop			; (mov r8, r8)
    e7e0:	46bd      	mov	sp, r7
    e7e2:	b005      	add	sp, #20
    e7e4:	bd90      	pop	{r4, r7, pc}
    e7e6:	46c0      	nop			; (mov r8, r8)
    e7e8:	0003fe00 	.word	0x0003fe00
    e7ec:	00001425 	.word	0x00001425
    e7f0:	0001ceec 	.word	0x0001ceec
    e7f4:	0001782d 	.word	0x0001782d

0000e7f8 <NVMInit>:
	}
	return ch;
}

bool NVMInit(void)
{
    e7f8:	b580      	push	{r7, lr}
    e7fa:	af00      	add	r7, sp, #0
	NVM_Init();
    e7fc:	4b02      	ldr	r3, [pc, #8]	; (e808 <NVMInit+0x10>)
    e7fe:	4798      	blx	r3
	return true;
    e800:	2301      	movs	r3, #1
}
    e802:	0018      	movs	r0, r3
    e804:	46bd      	mov	sp, r7
    e806:	bd80      	pop	{r7, pc}
    e808:	0000e769 	.word	0x0000e769

0000e80c <NVM_Write_ConTable>:


void NVM_Write_ConTable(uint8_t *src)
{
    e80c:	b590      	push	{r4, r7, lr}
    e80e:	b085      	sub	sp, #20
    e810:	af00      	add	r7, sp, #0
    e812:	6078      	str	r0, [r7, #4]
	enum status_code status;
	
	nvm_update_buffer(CONTABLE_ADDR,src,0,64);
    e814:	6879      	ldr	r1, [r7, #4]
    e816:	481c      	ldr	r0, [pc, #112]	; (e888 <NVM_Write_ConTable+0x7c>)
    e818:	2340      	movs	r3, #64	; 0x40
    e81a:	2200      	movs	r2, #0
    e81c:	4c1b      	ldr	r4, [pc, #108]	; (e88c <NVM_Write_ConTable+0x80>)
    e81e:	47a0      	blx	r4
	
	status = nvm_write_buffer(CONTABLE_ADDR, src, 64);
    e820:	230f      	movs	r3, #15
    e822:	18fc      	adds	r4, r7, r3
    e824:	687b      	ldr	r3, [r7, #4]
    e826:	4818      	ldr	r0, [pc, #96]	; (e888 <NVM_Write_ConTable+0x7c>)
    e828:	2240      	movs	r2, #64	; 0x40
    e82a:	0019      	movs	r1, r3
    e82c:	4b18      	ldr	r3, [pc, #96]	; (e890 <NVM_Write_ConTable+0x84>)
    e82e:	4798      	blx	r3
    e830:	0003      	movs	r3, r0
    e832:	7023      	strb	r3, [r4, #0]
	if(status != STATUS_OK){
    e834:	230f      	movs	r3, #15
    e836:	18fb      	adds	r3, r7, r3
    e838:	781b      	ldrb	r3, [r3, #0]
    e83a:	2b00      	cmp	r3, #0
    e83c:	d003      	beq.n	e846 <NVM_Write_ConTable+0x3a>
		printf("NVM Write Fail");
    e83e:	4b15      	ldr	r3, [pc, #84]	; (e894 <NVM_Write_ConTable+0x88>)
    e840:	0018      	movs	r0, r3
    e842:	4b15      	ldr	r3, [pc, #84]	; (e898 <NVM_Write_ConTable+0x8c>)
    e844:	4798      	blx	r3
	}
	
	nvm_update_buffer(CONTABLE_ADDR+64,src+64,0,64);
    e846:	687b      	ldr	r3, [r7, #4]
    e848:	3340      	adds	r3, #64	; 0x40
    e84a:	0019      	movs	r1, r3
    e84c:	4813      	ldr	r0, [pc, #76]	; (e89c <NVM_Write_ConTable+0x90>)
    e84e:	2340      	movs	r3, #64	; 0x40
    e850:	2200      	movs	r2, #0
    e852:	4c0e      	ldr	r4, [pc, #56]	; (e88c <NVM_Write_ConTable+0x80>)
    e854:	47a0      	blx	r4
	
	status = nvm_write_buffer(CONTABLE_ADDR+64, src+64, 64);
    e856:	687b      	ldr	r3, [r7, #4]
    e858:	3340      	adds	r3, #64	; 0x40
    e85a:	220f      	movs	r2, #15
    e85c:	18bc      	adds	r4, r7, r2
    e85e:	480f      	ldr	r0, [pc, #60]	; (e89c <NVM_Write_ConTable+0x90>)
    e860:	2240      	movs	r2, #64	; 0x40
    e862:	0019      	movs	r1, r3
    e864:	4b0a      	ldr	r3, [pc, #40]	; (e890 <NVM_Write_ConTable+0x84>)
    e866:	4798      	blx	r3
    e868:	0003      	movs	r3, r0
    e86a:	7023      	strb	r3, [r4, #0]
	if(status != STATUS_OK){
    e86c:	230f      	movs	r3, #15
    e86e:	18fb      	adds	r3, r7, r3
    e870:	781b      	ldrb	r3, [r3, #0]
    e872:	2b00      	cmp	r3, #0
    e874:	d003      	beq.n	e87e <NVM_Write_ConTable+0x72>
		printf("NVM Write Fail");
    e876:	4b07      	ldr	r3, [pc, #28]	; (e894 <NVM_Write_ConTable+0x88>)
    e878:	0018      	movs	r0, r3
    e87a:	4b07      	ldr	r3, [pc, #28]	; (e898 <NVM_Write_ConTable+0x8c>)
    e87c:	4798      	blx	r3
	}
}
    e87e:	46c0      	nop			; (mov r8, r8)
    e880:	46bd      	mov	sp, r7
    e882:	b005      	add	sp, #20
    e884:	bd90      	pop	{r4, r7, pc}
    e886:	46c0      	nop			; (mov r8, r8)
    e888:	0003ff00 	.word	0x0003ff00
    e88c:	00001169 	.word	0x00001169
    e890:	00001425 	.word	0x00001425
    e894:	0001ceec 	.word	0x0001ceec
    e898:	0001782d 	.word	0x0001782d
    e89c:	0003ff40 	.word	0x0003ff40

0000e8a0 <NVM_Write_NetInfo>:

void NVM_Write_NetInfo(uint8_t *src)
{
    e8a0:	b590      	push	{r4, r7, lr}
    e8a2:	b085      	sub	sp, #20
    e8a4:	af00      	add	r7, sp, #0
    e8a6:	6078      	str	r0, [r7, #4]
	enum status_code status;
	
	nvm_update_buffer(NETINFO_ADDR,src,0,sizeof(NET_INFO));
    e8a8:	6879      	ldr	r1, [r7, #4]
    e8aa:	480e      	ldr	r0, [pc, #56]	; (e8e4 <NVM_Write_NetInfo+0x44>)
    e8ac:	2328      	movs	r3, #40	; 0x28
    e8ae:	2200      	movs	r2, #0
    e8b0:	4c0d      	ldr	r4, [pc, #52]	; (e8e8 <NVM_Write_NetInfo+0x48>)
    e8b2:	47a0      	blx	r4
	
	status = nvm_write_buffer(NETINFO_ADDR, src, sizeof(NET_INFO));
    e8b4:	230f      	movs	r3, #15
    e8b6:	18fc      	adds	r4, r7, r3
    e8b8:	687b      	ldr	r3, [r7, #4]
    e8ba:	480a      	ldr	r0, [pc, #40]	; (e8e4 <NVM_Write_NetInfo+0x44>)
    e8bc:	2228      	movs	r2, #40	; 0x28
    e8be:	0019      	movs	r1, r3
    e8c0:	4b0a      	ldr	r3, [pc, #40]	; (e8ec <NVM_Write_NetInfo+0x4c>)
    e8c2:	4798      	blx	r3
    e8c4:	0003      	movs	r3, r0
    e8c6:	7023      	strb	r3, [r4, #0]
	if(status != STATUS_OK){
    e8c8:	230f      	movs	r3, #15
    e8ca:	18fb      	adds	r3, r7, r3
    e8cc:	781b      	ldrb	r3, [r3, #0]
    e8ce:	2b00      	cmp	r3, #0
    e8d0:	d003      	beq.n	e8da <NVM_Write_NetInfo+0x3a>
		printf("NVM Write Fail");
    e8d2:	4b07      	ldr	r3, [pc, #28]	; (e8f0 <NVM_Write_NetInfo+0x50>)
    e8d4:	0018      	movs	r0, r3
    e8d6:	4b07      	ldr	r3, [pc, #28]	; (e8f4 <NVM_Write_NetInfo+0x54>)
    e8d8:	4798      	blx	r3
	}
}
    e8da:	46c0      	nop			; (mov r8, r8)
    e8dc:	46bd      	mov	sp, r7
    e8de:	b005      	add	sp, #20
    e8e0:	bd90      	pop	{r4, r7, pc}
    e8e2:	46c0      	nop			; (mov r8, r8)
    e8e4:	0003fec0 	.word	0x0003fec0
    e8e8:	00001169 	.word	0x00001169
    e8ec:	00001425 	.word	0x00001425
    e8f0:	0001ceec 	.word	0x0001ceec
    e8f4:	0001782d 	.word	0x0001782d

0000e8f8 <NVM_Read_ConTable>:

void NVM_Read_ConTable(uint8_t *dest)
{
    e8f8:	b590      	push	{r4, r7, lr}
    e8fa:	b085      	sub	sp, #20
    e8fc:	af00      	add	r7, sp, #0
    e8fe:	6078      	str	r0, [r7, #4]
	enum status_code status;

	printf("CONTABLE READ!!!!!!!!\n\r");
    e900:	4b17      	ldr	r3, [pc, #92]	; (e960 <NVM_Read_ConTable+0x68>)
    e902:	0018      	movs	r0, r3
    e904:	4b17      	ldr	r3, [pc, #92]	; (e964 <NVM_Read_ConTable+0x6c>)
    e906:	4798      	blx	r3

	status = nvm_read_buffer(CONTABLE_ADDR, dest, 64);
    e908:	230f      	movs	r3, #15
    e90a:	18fc      	adds	r4, r7, r3
    e90c:	687b      	ldr	r3, [r7, #4]
    e90e:	4816      	ldr	r0, [pc, #88]	; (e968 <NVM_Read_ConTable+0x70>)
    e910:	2240      	movs	r2, #64	; 0x40
    e912:	0019      	movs	r1, r3
    e914:	4b15      	ldr	r3, [pc, #84]	; (e96c <NVM_Read_ConTable+0x74>)
    e916:	4798      	blx	r3
    e918:	0003      	movs	r3, r0
    e91a:	7023      	strb	r3, [r4, #0]
	if(status != STATUS_OK){
    e91c:	230f      	movs	r3, #15
    e91e:	18fb      	adds	r3, r7, r3
    e920:	781b      	ldrb	r3, [r3, #0]
    e922:	2b00      	cmp	r3, #0
    e924:	d003      	beq.n	e92e <NVM_Read_ConTable+0x36>
		printf("NVM Read Fail");
    e926:	4b12      	ldr	r3, [pc, #72]	; (e970 <NVM_Read_ConTable+0x78>)
    e928:	0018      	movs	r0, r3
    e92a:	4b0e      	ldr	r3, [pc, #56]	; (e964 <NVM_Read_ConTable+0x6c>)
    e92c:	4798      	blx	r3
	}
	status = nvm_read_buffer(CONTABLE_ADDR+64, dest+64, 64);
    e92e:	687b      	ldr	r3, [r7, #4]
    e930:	3340      	adds	r3, #64	; 0x40
    e932:	220f      	movs	r2, #15
    e934:	18bc      	adds	r4, r7, r2
    e936:	480f      	ldr	r0, [pc, #60]	; (e974 <NVM_Read_ConTable+0x7c>)
    e938:	2240      	movs	r2, #64	; 0x40
    e93a:	0019      	movs	r1, r3
    e93c:	4b0b      	ldr	r3, [pc, #44]	; (e96c <NVM_Read_ConTable+0x74>)
    e93e:	4798      	blx	r3
    e940:	0003      	movs	r3, r0
    e942:	7023      	strb	r3, [r4, #0]
	if(status != STATUS_OK){
    e944:	230f      	movs	r3, #15
    e946:	18fb      	adds	r3, r7, r3
    e948:	781b      	ldrb	r3, [r3, #0]
    e94a:	2b00      	cmp	r3, #0
    e94c:	d003      	beq.n	e956 <NVM_Read_ConTable+0x5e>
		printf("NVM Read Fail");
    e94e:	4b08      	ldr	r3, [pc, #32]	; (e970 <NVM_Read_ConTable+0x78>)
    e950:	0018      	movs	r0, r3
    e952:	4b04      	ldr	r3, [pc, #16]	; (e964 <NVM_Read_ConTable+0x6c>)
    e954:	4798      	blx	r3
	}
}
    e956:	46c0      	nop			; (mov r8, r8)
    e958:	46bd      	mov	sp, r7
    e95a:	b005      	add	sp, #20
    e95c:	bd90      	pop	{r4, r7, pc}
    e95e:	46c0      	nop			; (mov r8, r8)
    e960:	0001cf28 	.word	0x0001cf28
    e964:	0001782d 	.word	0x0001782d
    e968:	0003ff00 	.word	0x0003ff00
    e96c:	000015b1 	.word	0x000015b1
    e970:	0001cefc 	.word	0x0001cefc
    e974:	0003ff40 	.word	0x0003ff40

0000e978 <NVM_Read_NetInfo>:

void NVM_Read_NetInfo(uint8_t *dest)
{
    e978:	b590      	push	{r4, r7, lr}
    e97a:	b085      	sub	sp, #20
    e97c:	af00      	add	r7, sp, #0
    e97e:	6078      	str	r0, [r7, #4]
	enum status_code status;

	status = nvm_read_buffer(NETINFO_ADDR, dest, sizeof(NET_INFO));
    e980:	230f      	movs	r3, #15
    e982:	18fc      	adds	r4, r7, r3
    e984:	687b      	ldr	r3, [r7, #4]
    e986:	480a      	ldr	r0, [pc, #40]	; (e9b0 <NVM_Read_NetInfo+0x38>)
    e988:	2228      	movs	r2, #40	; 0x28
    e98a:	0019      	movs	r1, r3
    e98c:	4b09      	ldr	r3, [pc, #36]	; (e9b4 <NVM_Read_NetInfo+0x3c>)
    e98e:	4798      	blx	r3
    e990:	0003      	movs	r3, r0
    e992:	7023      	strb	r3, [r4, #0]
	if(status != STATUS_OK){
    e994:	230f      	movs	r3, #15
    e996:	18fb      	adds	r3, r7, r3
    e998:	781b      	ldrb	r3, [r3, #0]
    e99a:	2b00      	cmp	r3, #0
    e99c:	d003      	beq.n	e9a6 <NVM_Read_NetInfo+0x2e>
		printf("NVM Read Fail");
    e99e:	4b06      	ldr	r3, [pc, #24]	; (e9b8 <NVM_Read_NetInfo+0x40>)
    e9a0:	0018      	movs	r0, r3
    e9a2:	4b06      	ldr	r3, [pc, #24]	; (e9bc <NVM_Read_NetInfo+0x44>)
    e9a4:	4798      	blx	r3
	}
}
    e9a6:	46c0      	nop			; (mov r8, r8)
    e9a8:	46bd      	mov	sp, r7
    e9aa:	b005      	add	sp, #20
    e9ac:	bd90      	pop	{r4, r7, pc}
    e9ae:	46c0      	nop			; (mov r8, r8)
    e9b0:	0003fec0 	.word	0x0003fec0
    e9b4:	000015b1 	.word	0x000015b1
    e9b8:	0001cefc 	.word	0x0001cefc
    e9bc:	0001782d 	.word	0x0001782d

0000e9c0 <NVMWrite>:
		printf("NVM Read Fail");
	}
}

void NVMWrite(uint8_t *source, uint16_t addr, uint16_t count)
{
    e9c0:	b590      	push	{r4, r7, lr}
    e9c2:	b085      	sub	sp, #20
    e9c4:	af00      	add	r7, sp, #0
    e9c6:	6078      	str	r0, [r7, #4]
    e9c8:	0008      	movs	r0, r1
    e9ca:	0011      	movs	r1, r2
    e9cc:	1cbb      	adds	r3, r7, #2
    e9ce:	1c02      	adds	r2, r0, #0
    e9d0:	801a      	strh	r2, [r3, #0]
    e9d2:	003b      	movs	r3, r7
    e9d4:	1c0a      	adds	r2, r1, #0
    e9d6:	801a      	strh	r2, [r3, #0]
	enum status_code status;
	
	status = nvm_write_buffer(TEST_PAGE_ADDR+128, source, count);
    e9d8:	230f      	movs	r3, #15
    e9da:	18fc      	adds	r4, r7, r3
    e9dc:	003b      	movs	r3, r7
    e9de:	881a      	ldrh	r2, [r3, #0]
    e9e0:	687b      	ldr	r3, [r7, #4]
    e9e2:	4809      	ldr	r0, [pc, #36]	; (ea08 <NVMWrite+0x48>)
    e9e4:	0019      	movs	r1, r3
    e9e6:	4b09      	ldr	r3, [pc, #36]	; (ea0c <NVMWrite+0x4c>)
    e9e8:	4798      	blx	r3
    e9ea:	0003      	movs	r3, r0
    e9ec:	7023      	strb	r3, [r4, #0]
	if(status != STATUS_OK){
    e9ee:	230f      	movs	r3, #15
    e9f0:	18fb      	adds	r3, r7, r3
    e9f2:	781b      	ldrb	r3, [r3, #0]
    e9f4:	2b00      	cmp	r3, #0
    e9f6:	d003      	beq.n	ea00 <NVMWrite+0x40>
		printf("NVM Write Fail");
    e9f8:	4b05      	ldr	r3, [pc, #20]	; (ea10 <NVMWrite+0x50>)
    e9fa:	0018      	movs	r0, r3
    e9fc:	4b05      	ldr	r3, [pc, #20]	; (ea14 <NVMWrite+0x54>)
    e9fe:	4798      	blx	r3
	}
}
    ea00:	46c0      	nop			; (mov r8, r8)
    ea02:	46bd      	mov	sp, r7
    ea04:	b005      	add	sp, #20
    ea06:	bd90      	pop	{r4, r7, pc}
    ea08:	0003fe80 	.word	0x0003fe80
    ea0c:	00001425 	.word	0x00001425
    ea10:	0001ceec 	.word	0x0001ceec
    ea14:	0001782d 	.word	0x0001782d

0000ea18 <tc_is_syncing>:
    ea18:	b580      	push	{r7, lr}
    ea1a:	b084      	sub	sp, #16
    ea1c:	af00      	add	r7, sp, #0
    ea1e:	6078      	str	r0, [r7, #4]
    ea20:	687b      	ldr	r3, [r7, #4]
    ea22:	681b      	ldr	r3, [r3, #0]
    ea24:	60fb      	str	r3, [r7, #12]
    ea26:	68fb      	ldr	r3, [r7, #12]
    ea28:	691b      	ldr	r3, [r3, #16]
    ea2a:	1e5a      	subs	r2, r3, #1
    ea2c:	4193      	sbcs	r3, r2
    ea2e:	b2db      	uxtb	r3, r3
    ea30:	0018      	movs	r0, r3
    ea32:	46bd      	mov	sp, r7
    ea34:	b004      	add	sp, #16
    ea36:	bd80      	pop	{r7, pc}

0000ea38 <tc_get_config_defaults>:
    ea38:	b580      	push	{r7, lr}
    ea3a:	b082      	sub	sp, #8
    ea3c:	af00      	add	r7, sp, #0
    ea3e:	6078      	str	r0, [r7, #4]
    ea40:	687b      	ldr	r3, [r7, #4]
    ea42:	2200      	movs	r2, #0
    ea44:	701a      	strb	r2, [r3, #0]
    ea46:	687b      	ldr	r3, [r7, #4]
    ea48:	2200      	movs	r2, #0
    ea4a:	70da      	strb	r2, [r3, #3]
    ea4c:	687b      	ldr	r3, [r7, #4]
    ea4e:	2200      	movs	r2, #0
    ea50:	809a      	strh	r2, [r3, #4]
    ea52:	687b      	ldr	r3, [r7, #4]
    ea54:	2200      	movs	r2, #0
    ea56:	719a      	strb	r2, [r3, #6]
    ea58:	687b      	ldr	r3, [r7, #4]
    ea5a:	2200      	movs	r2, #0
    ea5c:	71da      	strb	r2, [r3, #7]
    ea5e:	687b      	ldr	r3, [r7, #4]
    ea60:	2200      	movs	r2, #0
    ea62:	705a      	strb	r2, [r3, #1]
    ea64:	687b      	ldr	r3, [r7, #4]
    ea66:	2200      	movs	r2, #0
    ea68:	709a      	strb	r2, [r3, #2]
    ea6a:	687b      	ldr	r3, [r7, #4]
    ea6c:	2200      	movs	r2, #0
    ea6e:	721a      	strb	r2, [r3, #8]
    ea70:	687b      	ldr	r3, [r7, #4]
    ea72:	2200      	movs	r2, #0
    ea74:	725a      	strb	r2, [r3, #9]
    ea76:	687b      	ldr	r3, [r7, #4]
    ea78:	2200      	movs	r2, #0
    ea7a:	729a      	strb	r2, [r3, #10]
    ea7c:	687b      	ldr	r3, [r7, #4]
    ea7e:	2200      	movs	r2, #0
    ea80:	72da      	strb	r2, [r3, #11]
    ea82:	687b      	ldr	r3, [r7, #4]
    ea84:	2200      	movs	r2, #0
    ea86:	731a      	strb	r2, [r3, #12]
    ea88:	687b      	ldr	r3, [r7, #4]
    ea8a:	2200      	movs	r2, #0
    ea8c:	739a      	strb	r2, [r3, #14]
    ea8e:	687b      	ldr	r3, [r7, #4]
    ea90:	2200      	movs	r2, #0
    ea92:	735a      	strb	r2, [r3, #13]
    ea94:	687b      	ldr	r3, [r7, #4]
    ea96:	2200      	movs	r2, #0
    ea98:	741a      	strb	r2, [r3, #16]
    ea9a:	687b      	ldr	r3, [r7, #4]
    ea9c:	2200      	movs	r2, #0
    ea9e:	615a      	str	r2, [r3, #20]
    eaa0:	687b      	ldr	r3, [r7, #4]
    eaa2:	2200      	movs	r2, #0
    eaa4:	619a      	str	r2, [r3, #24]
    eaa6:	687b      	ldr	r3, [r7, #4]
    eaa8:	2200      	movs	r2, #0
    eaaa:	771a      	strb	r2, [r3, #28]
    eaac:	687b      	ldr	r3, [r7, #4]
    eaae:	2200      	movs	r2, #0
    eab0:	621a      	str	r2, [r3, #32]
    eab2:	687b      	ldr	r3, [r7, #4]
    eab4:	2200      	movs	r2, #0
    eab6:	625a      	str	r2, [r3, #36]	; 0x24
    eab8:	687b      	ldr	r3, [r7, #4]
    eaba:	2200      	movs	r2, #0
    eabc:	851a      	strh	r2, [r3, #40]	; 0x28
    eabe:	687b      	ldr	r3, [r7, #4]
    eac0:	2200      	movs	r2, #0
    eac2:	855a      	strh	r2, [r3, #42]	; 0x2a
    eac4:	687b      	ldr	r3, [r7, #4]
    eac6:	2200      	movs	r2, #0
    eac8:	859a      	strh	r2, [r3, #44]	; 0x2c
    eaca:	687b      	ldr	r3, [r7, #4]
    eacc:	2234      	movs	r2, #52	; 0x34
    eace:	2100      	movs	r1, #0
    ead0:	5499      	strb	r1, [r3, r2]
    ead2:	46c0      	nop			; (mov r8, r8)
    ead4:	46bd      	mov	sp, r7
    ead6:	b002      	add	sp, #8
    ead8:	bd80      	pop	{r7, pc}
	...

0000eadc <tc_enable>:
    eadc:	b580      	push	{r7, lr}
    eade:	b084      	sub	sp, #16
    eae0:	af00      	add	r7, sp, #0
    eae2:	6078      	str	r0, [r7, #4]
    eae4:	687b      	ldr	r3, [r7, #4]
    eae6:	681b      	ldr	r3, [r3, #0]
    eae8:	60fb      	str	r3, [r7, #12]
    eaea:	46c0      	nop			; (mov r8, r8)
    eaec:	687b      	ldr	r3, [r7, #4]
    eaee:	0018      	movs	r0, r3
    eaf0:	4b06      	ldr	r3, [pc, #24]	; (eb0c <tc_enable+0x30>)
    eaf2:	4798      	blx	r3
    eaf4:	1e03      	subs	r3, r0, #0
    eaf6:	d1f9      	bne.n	eaec <tc_enable+0x10>
    eaf8:	68fb      	ldr	r3, [r7, #12]
    eafa:	681b      	ldr	r3, [r3, #0]
    eafc:	2202      	movs	r2, #2
    eafe:	431a      	orrs	r2, r3
    eb00:	68fb      	ldr	r3, [r7, #12]
    eb02:	601a      	str	r2, [r3, #0]
    eb04:	46c0      	nop			; (mov r8, r8)
    eb06:	46bd      	mov	sp, r7
    eb08:	b004      	add	sp, #16
    eb0a:	bd80      	pop	{r7, pc}
    eb0c:	0000ea19 	.word	0x0000ea19

0000eb10 <InitSymbolTimer>:
    eb10:	b580      	push	{r7, lr}
    eb12:	b08e      	sub	sp, #56	; 0x38
    eb14:	af00      	add	r7, sp, #0
    eb16:	4b1a      	ldr	r3, [pc, #104]	; (eb80 <InitSymbolTimer+0x70>)
    eb18:	2200      	movs	r2, #0
    eb1a:	701a      	strb	r2, [r3, #0]
    eb1c:	4b19      	ldr	r3, [pc, #100]	; (eb84 <InitSymbolTimer+0x74>)
    eb1e:	2200      	movs	r2, #0
    eb20:	701a      	strb	r2, [r3, #0]
    eb22:	003b      	movs	r3, r7
    eb24:	0018      	movs	r0, r3
    eb26:	4b18      	ldr	r3, [pc, #96]	; (eb88 <InitSymbolTimer+0x78>)
    eb28:	4798      	blx	r3
    eb2a:	003b      	movs	r3, r7
    eb2c:	2200      	movs	r2, #0
    eb2e:	70da      	strb	r2, [r3, #3]
    eb30:	003b      	movs	r3, r7
    eb32:	2201      	movs	r2, #1
    eb34:	701a      	strb	r2, [r3, #0]
    eb36:	003b      	movs	r3, r7
    eb38:	22c0      	movs	r2, #192	; 0xc0
    eb3a:	0092      	lsls	r2, r2, #2
    eb3c:	809a      	strh	r2, [r3, #4]
    eb3e:	003b      	movs	r3, r7
    eb40:	2200      	movs	r2, #0
    eb42:	851a      	strh	r2, [r3, #40]	; 0x28
    eb44:	003b      	movs	r3, r7
    eb46:	2200      	movs	r2, #0
    eb48:	735a      	strb	r2, [r3, #13]
    eb4a:	003a      	movs	r2, r7
    eb4c:	490f      	ldr	r1, [pc, #60]	; (eb8c <InitSymbolTimer+0x7c>)
    eb4e:	4b10      	ldr	r3, [pc, #64]	; (eb90 <InitSymbolTimer+0x80>)
    eb50:	0018      	movs	r0, r3
    eb52:	4b10      	ldr	r3, [pc, #64]	; (eb94 <InitSymbolTimer+0x84>)
    eb54:	4798      	blx	r3
    eb56:	4b0e      	ldr	r3, [pc, #56]	; (eb90 <InitSymbolTimer+0x80>)
    eb58:	0018      	movs	r0, r3
    eb5a:	4b0f      	ldr	r3, [pc, #60]	; (eb98 <InitSymbolTimer+0x88>)
    eb5c:	4798      	blx	r3
    eb5e:	4b0f      	ldr	r3, [pc, #60]	; (eb9c <InitSymbolTimer+0x8c>)
    eb60:	781b      	ldrb	r3, [r3, #0]
    eb62:	2b00      	cmp	r3, #0
    eb64:	d008      	beq.n	eb78 <InitSymbolTimer+0x68>
    eb66:	2001      	movs	r0, #1
    eb68:	4b0d      	ldr	r3, [pc, #52]	; (eba0 <InitSymbolTimer+0x90>)
    eb6a:	4798      	blx	r3
    eb6c:	0002      	movs	r2, r0
    eb6e:	4b0d      	ldr	r3, [pc, #52]	; (eba4 <InitSymbolTimer+0x94>)
    eb70:	0011      	movs	r1, r2
    eb72:	0018      	movs	r0, r3
    eb74:	4b0c      	ldr	r3, [pc, #48]	; (eba8 <InitSymbolTimer+0x98>)
    eb76:	4798      	blx	r3
    eb78:	46c0      	nop			; (mov r8, r8)
    eb7a:	46bd      	mov	sp, r7
    eb7c:	b00e      	add	sp, #56	; 0x38
    eb7e:	bd80      	pop	{r7, pc}
    eb80:	2000159c 	.word	0x2000159c
    eb84:	2000159d 	.word	0x2000159d
    eb88:	0000ea39 	.word	0x0000ea39
    eb8c:	42002c00 	.word	0x42002c00
    eb90:	200015a0 	.word	0x200015a0
    eb94:	00005d01 	.word	0x00005d01
    eb98:	0000eadd 	.word	0x0000eadd
    eb9c:	2000002c 	.word	0x2000002c
    eba0:	00005609 	.word	0x00005609
    eba4:	0001cf48 	.word	0x0001cf48
    eba8:	0001782d 	.word	0x0001782d

0000ebac <MiWi_TickGet>:
    ebac:	b580      	push	{r7, lr}
    ebae:	b082      	sub	sp, #8
    ebb0:	af00      	add	r7, sp, #0
    ebb2:	1d3b      	adds	r3, r7, #4
    ebb4:	2200      	movs	r2, #0
    ebb6:	709a      	strb	r2, [r3, #2]
    ebb8:	1d3b      	adds	r3, r7, #4
    ebba:	2200      	movs	r2, #0
    ebbc:	70da      	strb	r2, [r3, #3]
    ebbe:	4b0d      	ldr	r3, [pc, #52]	; (ebf4 <MiWi_TickGet+0x48>)
    ebc0:	0018      	movs	r0, r3
    ebc2:	4b0d      	ldr	r3, [pc, #52]	; (ebf8 <MiWi_TickGet+0x4c>)
    ebc4:	4798      	blx	r3
    ebc6:	0003      	movs	r3, r0
    ebc8:	607b      	str	r3, [r7, #4]
    ebca:	1d3b      	adds	r3, r7, #4
    ebcc:	789a      	ldrb	r2, [r3, #2]
    ebce:	4b0b      	ldr	r3, [pc, #44]	; (ebfc <MiWi_TickGet+0x50>)
    ebd0:	781b      	ldrb	r3, [r3, #0]
    ebd2:	18d3      	adds	r3, r2, r3
    ebd4:	b2da      	uxtb	r2, r3
    ebd6:	1d3b      	adds	r3, r7, #4
    ebd8:	709a      	strb	r2, [r3, #2]
    ebda:	1d3b      	adds	r3, r7, #4
    ebdc:	78da      	ldrb	r2, [r3, #3]
    ebde:	4b08      	ldr	r3, [pc, #32]	; (ec00 <MiWi_TickGet+0x54>)
    ebe0:	781b      	ldrb	r3, [r3, #0]
    ebe2:	18d3      	adds	r3, r2, r3
    ebe4:	b2da      	uxtb	r2, r3
    ebe6:	1d3b      	adds	r3, r7, #4
    ebe8:	70da      	strb	r2, [r3, #3]
    ebea:	687b      	ldr	r3, [r7, #4]
    ebec:	0018      	movs	r0, r3
    ebee:	46bd      	mov	sp, r7
    ebf0:	b002      	add	sp, #8
    ebf2:	bd80      	pop	{r7, pc}
    ebf4:	200015a0 	.word	0x200015a0
    ebf8:	000061a9 	.word	0x000061a9
    ebfc:	2000159c 	.word	0x2000159c
    ec00:	2000159d 	.word	0x2000159d

0000ec04 <SYSTEM_PostTask>:
    ec04:	b580      	push	{r7, lr}
    ec06:	b082      	sub	sp, #8
    ec08:	af00      	add	r7, sp, #0
    ec0a:	0002      	movs	r2, r0
    ec0c:	1dfb      	adds	r3, r7, #7
    ec0e:	701a      	strb	r2, [r3, #0]
    ec10:	4b08      	ldr	r3, [pc, #32]	; (ec34 <SYSTEM_PostTask+0x30>)
    ec12:	4798      	blx	r3
    ec14:	1dfb      	adds	r3, r7, #7
    ec16:	781b      	ldrb	r3, [r3, #0]
    ec18:	b29a      	uxth	r2, r3
    ec1a:	4b07      	ldr	r3, [pc, #28]	; (ec38 <SYSTEM_PostTask+0x34>)
    ec1c:	881b      	ldrh	r3, [r3, #0]
    ec1e:	b29b      	uxth	r3, r3
    ec20:	4313      	orrs	r3, r2
    ec22:	b29a      	uxth	r2, r3
    ec24:	4b04      	ldr	r3, [pc, #16]	; (ec38 <SYSTEM_PostTask+0x34>)
    ec26:	801a      	strh	r2, [r3, #0]
    ec28:	4b04      	ldr	r3, [pc, #16]	; (ec3c <SYSTEM_PostTask+0x38>)
    ec2a:	4798      	blx	r3
    ec2c:	46c0      	nop			; (mov r8, r8)
    ec2e:	46bd      	mov	sp, r7
    ec30:	b002      	add	sp, #8
    ec32:	bd80      	pop	{r7, pc}
    ec34:	000074a5 	.word	0x000074a5
    ec38:	20000c7a 	.word	0x20000c7a
    ec3c:	000074b9 	.word	0x000074b9

0000ec40 <CRC16>:
    ec40:	b580      	push	{r7, lr}
    ec42:	b084      	sub	sp, #16
    ec44:	af00      	add	r7, sp, #0
    ec46:	6078      	str	r0, [r7, #4]
    ec48:	0008      	movs	r0, r1
    ec4a:	0011      	movs	r1, r2
    ec4c:	1cfb      	adds	r3, r7, #3
    ec4e:	1c02      	adds	r2, r0, #0
    ec50:	701a      	strb	r2, [r3, #0]
    ec52:	003b      	movs	r3, r7
    ec54:	1c0a      	adds	r2, r1, #0
    ec56:	801a      	strh	r2, [r3, #0]
    ec58:	230e      	movs	r3, #14
    ec5a:	18fb      	adds	r3, r7, r3
    ec5c:	003a      	movs	r2, r7
    ec5e:	8812      	ldrh	r2, [r2, #0]
    ec60:	801a      	strh	r2, [r3, #0]
    ec62:	e038      	b.n	ecd6 <CRC16+0x96>
    ec64:	687b      	ldr	r3, [r7, #4]
    ec66:	1c5a      	adds	r2, r3, #1
    ec68:	607a      	str	r2, [r7, #4]
    ec6a:	781b      	ldrb	r3, [r3, #0]
    ec6c:	021b      	lsls	r3, r3, #8
    ec6e:	b21a      	sxth	r2, r3
    ec70:	230e      	movs	r3, #14
    ec72:	18fb      	adds	r3, r7, r3
    ec74:	2100      	movs	r1, #0
    ec76:	5e5b      	ldrsh	r3, [r3, r1]
    ec78:	4053      	eors	r3, r2
    ec7a:	b21a      	sxth	r2, r3
    ec7c:	230e      	movs	r3, #14
    ec7e:	18fb      	adds	r3, r7, r3
    ec80:	801a      	strh	r2, [r3, #0]
    ec82:	230d      	movs	r3, #13
    ec84:	18fb      	adds	r3, r7, r3
    ec86:	2200      	movs	r2, #0
    ec88:	701a      	strb	r2, [r3, #0]
    ec8a:	e01f      	b.n	eccc <CRC16+0x8c>
    ec8c:	230e      	movs	r3, #14
    ec8e:	18fb      	adds	r3, r7, r3
    ec90:	2200      	movs	r2, #0
    ec92:	5e9b      	ldrsh	r3, [r3, r2]
    ec94:	2b00      	cmp	r3, #0
    ec96:	da0b      	bge.n	ecb0 <CRC16+0x70>
    ec98:	230e      	movs	r3, #14
    ec9a:	18fb      	adds	r3, r7, r3
    ec9c:	881b      	ldrh	r3, [r3, #0]
    ec9e:	005b      	lsls	r3, r3, #1
    eca0:	b21b      	sxth	r3, r3
    eca2:	4a15      	ldr	r2, [pc, #84]	; (ecf8 <CRC16+0xb8>)
    eca4:	4053      	eors	r3, r2
    eca6:	b21a      	sxth	r2, r3
    eca8:	230e      	movs	r3, #14
    ecaa:	18fb      	adds	r3, r7, r3
    ecac:	801a      	strh	r2, [r3, #0]
    ecae:	e006      	b.n	ecbe <CRC16+0x7e>
    ecb0:	230e      	movs	r3, #14
    ecb2:	18fa      	adds	r2, r7, r3
    ecb4:	230e      	movs	r3, #14
    ecb6:	18fb      	adds	r3, r7, r3
    ecb8:	881b      	ldrh	r3, [r3, #0]
    ecba:	18db      	adds	r3, r3, r3
    ecbc:	8013      	strh	r3, [r2, #0]
    ecbe:	230d      	movs	r3, #13
    ecc0:	18fb      	adds	r3, r7, r3
    ecc2:	781a      	ldrb	r2, [r3, #0]
    ecc4:	230d      	movs	r3, #13
    ecc6:	18fb      	adds	r3, r7, r3
    ecc8:	3201      	adds	r2, #1
    ecca:	701a      	strb	r2, [r3, #0]
    eccc:	230d      	movs	r3, #13
    ecce:	18fb      	adds	r3, r7, r3
    ecd0:	781b      	ldrb	r3, [r3, #0]
    ecd2:	2b07      	cmp	r3, #7
    ecd4:	d9da      	bls.n	ec8c <CRC16+0x4c>
    ecd6:	1cfb      	adds	r3, r7, #3
    ecd8:	781b      	ldrb	r3, [r3, #0]
    ecda:	3b01      	subs	r3, #1
    ecdc:	b2da      	uxtb	r2, r3
    ecde:	1cfb      	adds	r3, r7, #3
    ece0:	701a      	strb	r2, [r3, #0]
    ece2:	1cfb      	adds	r3, r7, #3
    ece4:	781b      	ldrb	r3, [r3, #0]
    ece6:	2b7f      	cmp	r3, #127	; 0x7f
    ece8:	d9bc      	bls.n	ec64 <CRC16+0x24>
    ecea:	230e      	movs	r3, #14
    ecec:	18fb      	adds	r3, r7, r3
    ecee:	881b      	ldrh	r3, [r3, #0]
    ecf0:	0018      	movs	r0, r3
    ecf2:	46bd      	mov	sp, r7
    ecf4:	b004      	add	sp, #16
    ecf6:	bd80      	pop	{r7, pc}
    ecf8:	00001021 	.word	0x00001021

0000ecfc <system_pinmux_get_group_from_gpio_pin>:
    ecfc:	b580      	push	{r7, lr}
    ecfe:	b084      	sub	sp, #16
    ed00:	af00      	add	r7, sp, #0
    ed02:	0002      	movs	r2, r0
    ed04:	1dfb      	adds	r3, r7, #7
    ed06:	701a      	strb	r2, [r3, #0]
    ed08:	230f      	movs	r3, #15
    ed0a:	18fb      	adds	r3, r7, r3
    ed0c:	1dfa      	adds	r2, r7, #7
    ed0e:	7812      	ldrb	r2, [r2, #0]
    ed10:	09d2      	lsrs	r2, r2, #7
    ed12:	701a      	strb	r2, [r3, #0]
    ed14:	230e      	movs	r3, #14
    ed16:	18fb      	adds	r3, r7, r3
    ed18:	1dfa      	adds	r2, r7, #7
    ed1a:	7812      	ldrb	r2, [r2, #0]
    ed1c:	0952      	lsrs	r2, r2, #5
    ed1e:	701a      	strb	r2, [r3, #0]
    ed20:	4b0d      	ldr	r3, [pc, #52]	; (ed58 <system_pinmux_get_group_from_gpio_pin+0x5c>)
    ed22:	60bb      	str	r3, [r7, #8]
    ed24:	230f      	movs	r3, #15
    ed26:	18fb      	adds	r3, r7, r3
    ed28:	781b      	ldrb	r3, [r3, #0]
    ed2a:	2b00      	cmp	r3, #0
    ed2c:	d10f      	bne.n	ed4e <system_pinmux_get_group_from_gpio_pin+0x52>
    ed2e:	230f      	movs	r3, #15
    ed30:	18fb      	adds	r3, r7, r3
    ed32:	781b      	ldrb	r3, [r3, #0]
    ed34:	009b      	lsls	r3, r3, #2
    ed36:	2210      	movs	r2, #16
    ed38:	4694      	mov	ip, r2
    ed3a:	44bc      	add	ip, r7
    ed3c:	4463      	add	r3, ip
    ed3e:	3b08      	subs	r3, #8
    ed40:	681a      	ldr	r2, [r3, #0]
    ed42:	230e      	movs	r3, #14
    ed44:	18fb      	adds	r3, r7, r3
    ed46:	781b      	ldrb	r3, [r3, #0]
    ed48:	01db      	lsls	r3, r3, #7
    ed4a:	18d3      	adds	r3, r2, r3
    ed4c:	e000      	b.n	ed50 <system_pinmux_get_group_from_gpio_pin+0x54>
    ed4e:	2300      	movs	r3, #0
    ed50:	0018      	movs	r0, r3
    ed52:	46bd      	mov	sp, r7
    ed54:	b004      	add	sp, #16
    ed56:	bd80      	pop	{r7, pc}
    ed58:	40002800 	.word	0x40002800

0000ed5c <port_get_group_from_gpio_pin>:
    ed5c:	b580      	push	{r7, lr}
    ed5e:	b082      	sub	sp, #8
    ed60:	af00      	add	r7, sp, #0
    ed62:	0002      	movs	r2, r0
    ed64:	1dfb      	adds	r3, r7, #7
    ed66:	701a      	strb	r2, [r3, #0]
    ed68:	1dfb      	adds	r3, r7, #7
    ed6a:	781b      	ldrb	r3, [r3, #0]
    ed6c:	0018      	movs	r0, r3
    ed6e:	4b03      	ldr	r3, [pc, #12]	; (ed7c <port_get_group_from_gpio_pin+0x20>)
    ed70:	4798      	blx	r3
    ed72:	0003      	movs	r3, r0
    ed74:	0018      	movs	r0, r3
    ed76:	46bd      	mov	sp, r7
    ed78:	b002      	add	sp, #8
    ed7a:	bd80      	pop	{r7, pc}
    ed7c:	0000ecfd 	.word	0x0000ecfd

0000ed80 <port_pin_set_output_level>:
    ed80:	b580      	push	{r7, lr}
    ed82:	b084      	sub	sp, #16
    ed84:	af00      	add	r7, sp, #0
    ed86:	0002      	movs	r2, r0
    ed88:	1dfb      	adds	r3, r7, #7
    ed8a:	701a      	strb	r2, [r3, #0]
    ed8c:	1dbb      	adds	r3, r7, #6
    ed8e:	1c0a      	adds	r2, r1, #0
    ed90:	701a      	strb	r2, [r3, #0]
    ed92:	1dfb      	adds	r3, r7, #7
    ed94:	781b      	ldrb	r3, [r3, #0]
    ed96:	0018      	movs	r0, r3
    ed98:	4b0d      	ldr	r3, [pc, #52]	; (edd0 <port_pin_set_output_level+0x50>)
    ed9a:	4798      	blx	r3
    ed9c:	0003      	movs	r3, r0
    ed9e:	60fb      	str	r3, [r7, #12]
    eda0:	1dfb      	adds	r3, r7, #7
    eda2:	781b      	ldrb	r3, [r3, #0]
    eda4:	221f      	movs	r2, #31
    eda6:	4013      	ands	r3, r2
    eda8:	2201      	movs	r2, #1
    edaa:	409a      	lsls	r2, r3
    edac:	0013      	movs	r3, r2
    edae:	60bb      	str	r3, [r7, #8]
    edb0:	1dbb      	adds	r3, r7, #6
    edb2:	781b      	ldrb	r3, [r3, #0]
    edb4:	2b00      	cmp	r3, #0
    edb6:	d003      	beq.n	edc0 <port_pin_set_output_level+0x40>
    edb8:	68fb      	ldr	r3, [r7, #12]
    edba:	68ba      	ldr	r2, [r7, #8]
    edbc:	619a      	str	r2, [r3, #24]
    edbe:	e002      	b.n	edc6 <port_pin_set_output_level+0x46>
    edc0:	68fb      	ldr	r3, [r7, #12]
    edc2:	68ba      	ldr	r2, [r7, #8]
    edc4:	615a      	str	r2, [r3, #20]
    edc6:	46c0      	nop			; (mov r8, r8)
    edc8:	46bd      	mov	sp, r7
    edca:	b004      	add	sp, #16
    edcc:	bd80      	pop	{r7, pc}
    edce:	46c0      	nop			; (mov r8, r8)
    edd0:	0000ed5d 	.word	0x0000ed5d

0000edd4 <SX1276_Reset>:
    edd4:	b580      	push	{r7, lr}
    edd6:	af00      	add	r7, sp, #0
    edd8:	4b05      	ldr	r3, [pc, #20]	; (edf0 <SX1276_Reset+0x1c>)
    edda:	781b      	ldrb	r3, [r3, #0]
    eddc:	2b00      	cmp	r3, #0
    edde:	d003      	beq.n	ede8 <SX1276_Reset+0x14>
    ede0:	4b04      	ldr	r3, [pc, #16]	; (edf4 <SX1276_Reset+0x20>)
    ede2:	0018      	movs	r0, r3
    ede4:	4b04      	ldr	r3, [pc, #16]	; (edf8 <SX1276_Reset+0x24>)
    ede6:	4798      	blx	r3
    ede8:	2300      	movs	r3, #0
    edea:	0018      	movs	r0, r3
    edec:	46bd      	mov	sp, r7
    edee:	bd80      	pop	{r7, pc}
    edf0:	2000002c 	.word	0x2000002c
    edf4:	0001cf7c 	.word	0x0001cf7c
    edf8:	00017905 	.word	0x00017905

0000edfc <SX1276LoRaSetNbTrigPeaks>:
    edfc:	b590      	push	{r4, r7, lr}
    edfe:	b085      	sub	sp, #20
    ee00:	af00      	add	r7, sp, #0
    ee02:	0002      	movs	r2, r0
    ee04:	1dfb      	adds	r3, r7, #7
    ee06:	701a      	strb	r2, [r3, #0]
    ee08:	230f      	movs	r3, #15
    ee0a:	18fc      	adds	r4, r7, r3
    ee0c:	2031      	movs	r0, #49	; 0x31
    ee0e:	4b0f      	ldr	r3, [pc, #60]	; (ee4c <SX1276LoRaSetNbTrigPeaks+0x50>)
    ee10:	4798      	blx	r3
    ee12:	0003      	movs	r3, r0
    ee14:	7023      	strb	r3, [r4, #0]
    ee16:	230f      	movs	r3, #15
    ee18:	18fb      	adds	r3, r7, r3
    ee1a:	781b      	ldrb	r3, [r3, #0]
    ee1c:	b25b      	sxtb	r3, r3
    ee1e:	2207      	movs	r2, #7
    ee20:	4393      	bics	r3, r2
    ee22:	b25a      	sxtb	r2, r3
    ee24:	1dfb      	adds	r3, r7, #7
    ee26:	781b      	ldrb	r3, [r3, #0]
    ee28:	b25b      	sxtb	r3, r3
    ee2a:	4313      	orrs	r3, r2
    ee2c:	b25a      	sxtb	r2, r3
    ee2e:	230f      	movs	r3, #15
    ee30:	18fb      	adds	r3, r7, r3
    ee32:	701a      	strb	r2, [r3, #0]
    ee34:	230f      	movs	r3, #15
    ee36:	18fb      	adds	r3, r7, r3
    ee38:	781b      	ldrb	r3, [r3, #0]
    ee3a:	0019      	movs	r1, r3
    ee3c:	2031      	movs	r0, #49	; 0x31
    ee3e:	4b04      	ldr	r3, [pc, #16]	; (ee50 <SX1276LoRaSetNbTrigPeaks+0x54>)
    ee40:	4798      	blx	r3
    ee42:	2300      	movs	r3, #0
    ee44:	0018      	movs	r0, r3
    ee46:	46bd      	mov	sp, r7
    ee48:	b005      	add	sp, #20
    ee4a:	bd90      	pop	{r4, r7, pc}
    ee4c:	00006fcd 	.word	0x00006fcd
    ee50:	00006f81 	.word	0x00006f81

0000ee54 <SX1276LoRaSetSpreadingFactor>:
    ee54:	b590      	push	{r4, r7, lr}
    ee56:	b085      	sub	sp, #20
    ee58:	af00      	add	r7, sp, #0
    ee5a:	0002      	movs	r2, r0
    ee5c:	1dfb      	adds	r3, r7, #7
    ee5e:	701a      	strb	r2, [r3, #0]
    ee60:	1dfb      	adds	r3, r7, #7
    ee62:	781b      	ldrb	r3, [r3, #0]
    ee64:	2b0c      	cmp	r3, #12
    ee66:	d903      	bls.n	ee70 <SX1276LoRaSetSpreadingFactor+0x1c>
    ee68:	1dfb      	adds	r3, r7, #7
    ee6a:	220c      	movs	r2, #12
    ee6c:	701a      	strb	r2, [r3, #0]
    ee6e:	e006      	b.n	ee7e <SX1276LoRaSetSpreadingFactor+0x2a>
    ee70:	1dfb      	adds	r3, r7, #7
    ee72:	781b      	ldrb	r3, [r3, #0]
    ee74:	2b05      	cmp	r3, #5
    ee76:	d802      	bhi.n	ee7e <SX1276LoRaSetSpreadingFactor+0x2a>
    ee78:	1dfb      	adds	r3, r7, #7
    ee7a:	2206      	movs	r2, #6
    ee7c:	701a      	strb	r2, [r3, #0]
    ee7e:	1dfb      	adds	r3, r7, #7
    ee80:	781b      	ldrb	r3, [r3, #0]
    ee82:	2b06      	cmp	r3, #6
    ee84:	d103      	bne.n	ee8e <SX1276LoRaSetSpreadingFactor+0x3a>
    ee86:	2005      	movs	r0, #5
    ee88:	4b14      	ldr	r3, [pc, #80]	; (eedc <SX1276LoRaSetSpreadingFactor+0x88>)
    ee8a:	4798      	blx	r3
    ee8c:	e002      	b.n	ee94 <SX1276LoRaSetSpreadingFactor+0x40>
    ee8e:	2003      	movs	r0, #3
    ee90:	4b12      	ldr	r3, [pc, #72]	; (eedc <SX1276LoRaSetSpreadingFactor+0x88>)
    ee92:	4798      	blx	r3
    ee94:	230f      	movs	r3, #15
    ee96:	18fc      	adds	r4, r7, r3
    ee98:	201e      	movs	r0, #30
    ee9a:	4b11      	ldr	r3, [pc, #68]	; (eee0 <SX1276LoRaSetSpreadingFactor+0x8c>)
    ee9c:	4798      	blx	r3
    ee9e:	0003      	movs	r3, r0
    eea0:	7023      	strb	r3, [r4, #0]
    eea2:	230f      	movs	r3, #15
    eea4:	18fb      	adds	r3, r7, r3
    eea6:	781b      	ldrb	r3, [r3, #0]
    eea8:	b25b      	sxtb	r3, r3
    eeaa:	220f      	movs	r2, #15
    eeac:	4013      	ands	r3, r2
    eeae:	b25a      	sxtb	r2, r3
    eeb0:	1dfb      	adds	r3, r7, #7
    eeb2:	781b      	ldrb	r3, [r3, #0]
    eeb4:	011b      	lsls	r3, r3, #4
    eeb6:	b25b      	sxtb	r3, r3
    eeb8:	4313      	orrs	r3, r2
    eeba:	b25a      	sxtb	r2, r3
    eebc:	230f      	movs	r3, #15
    eebe:	18fb      	adds	r3, r7, r3
    eec0:	701a      	strb	r2, [r3, #0]
    eec2:	230f      	movs	r3, #15
    eec4:	18fb      	adds	r3, r7, r3
    eec6:	781b      	ldrb	r3, [r3, #0]
    eec8:	0019      	movs	r1, r3
    eeca:	201e      	movs	r0, #30
    eecc:	4b05      	ldr	r3, [pc, #20]	; (eee4 <SX1276LoRaSetSpreadingFactor+0x90>)
    eece:	4798      	blx	r3
    eed0:	2300      	movs	r3, #0
    eed2:	0018      	movs	r0, r3
    eed4:	46bd      	mov	sp, r7
    eed6:	b005      	add	sp, #20
    eed8:	bd90      	pop	{r4, r7, pc}
    eeda:	46c0      	nop			; (mov r8, r8)
    eedc:	0000edfd 	.word	0x0000edfd
    eee0:	00006fcd 	.word	0x00006fcd
    eee4:	00006f81 	.word	0x00006f81

0000eee8 <SX1276LoRaSetSignalBandwidth>:
    eee8:	b590      	push	{r4, r7, lr}
    eeea:	b085      	sub	sp, #20
    eeec:	af00      	add	r7, sp, #0
    eeee:	0002      	movs	r2, r0
    eef0:	1dfb      	adds	r3, r7, #7
    eef2:	701a      	strb	r2, [r3, #0]
    eef4:	230f      	movs	r3, #15
    eef6:	18fc      	adds	r4, r7, r3
    eef8:	201d      	movs	r0, #29
    eefa:	4b10      	ldr	r3, [pc, #64]	; (ef3c <SX1276LoRaSetSignalBandwidth+0x54>)
    eefc:	4798      	blx	r3
    eefe:	0003      	movs	r3, r0
    ef00:	7023      	strb	r3, [r4, #0]
    ef02:	230f      	movs	r3, #15
    ef04:	18fb      	adds	r3, r7, r3
    ef06:	781b      	ldrb	r3, [r3, #0]
    ef08:	b25b      	sxtb	r3, r3
    ef0a:	220f      	movs	r2, #15
    ef0c:	4013      	ands	r3, r2
    ef0e:	b25a      	sxtb	r2, r3
    ef10:	1dfb      	adds	r3, r7, #7
    ef12:	781b      	ldrb	r3, [r3, #0]
    ef14:	011b      	lsls	r3, r3, #4
    ef16:	b25b      	sxtb	r3, r3
    ef18:	4313      	orrs	r3, r2
    ef1a:	b25a      	sxtb	r2, r3
    ef1c:	230f      	movs	r3, #15
    ef1e:	18fb      	adds	r3, r7, r3
    ef20:	701a      	strb	r2, [r3, #0]
    ef22:	230f      	movs	r3, #15
    ef24:	18fb      	adds	r3, r7, r3
    ef26:	781b      	ldrb	r3, [r3, #0]
    ef28:	0019      	movs	r1, r3
    ef2a:	201d      	movs	r0, #29
    ef2c:	4b04      	ldr	r3, [pc, #16]	; (ef40 <SX1276LoRaSetSignalBandwidth+0x58>)
    ef2e:	4798      	blx	r3
    ef30:	2300      	movs	r3, #0
    ef32:	0018      	movs	r0, r3
    ef34:	46bd      	mov	sp, r7
    ef36:	b005      	add	sp, #20
    ef38:	bd90      	pop	{r4, r7, pc}
    ef3a:	46c0      	nop			; (mov r8, r8)
    ef3c:	00006fcd 	.word	0x00006fcd
    ef40:	00006f81 	.word	0x00006f81

0000ef44 <SX1276LoRaSetRFPower>:
    ef44:	b590      	push	{r4, r7, lr}
    ef46:	b085      	sub	sp, #20
    ef48:	af00      	add	r7, sp, #0
    ef4a:	0002      	movs	r2, r0
    ef4c:	1dfb      	adds	r3, r7, #7
    ef4e:	701a      	strb	r2, [r3, #0]
    ef50:	1dfb      	adds	r3, r7, #7
    ef52:	781b      	ldrb	r3, [r3, #0]
    ef54:	2b01      	cmp	r3, #1
    ef56:	d802      	bhi.n	ef5e <SX1276LoRaSetRFPower+0x1a>
    ef58:	1dfb      	adds	r3, r7, #7
    ef5a:	2202      	movs	r2, #2
    ef5c:	701a      	strb	r2, [r3, #0]
    ef5e:	1dfb      	adds	r3, r7, #7
    ef60:	781b      	ldrb	r3, [r3, #0]
    ef62:	2b13      	cmp	r3, #19
    ef64:	d903      	bls.n	ef6e <SX1276LoRaSetRFPower+0x2a>
    ef66:	1dfb      	adds	r3, r7, #7
    ef68:	2214      	movs	r2, #20
    ef6a:	701a      	strb	r2, [r3, #0]
    ef6c:	e006      	b.n	ef7c <SX1276LoRaSetRFPower+0x38>
    ef6e:	1dfb      	adds	r3, r7, #7
    ef70:	781b      	ldrb	r3, [r3, #0]
    ef72:	2b11      	cmp	r3, #17
    ef74:	d902      	bls.n	ef7c <SX1276LoRaSetRFPower+0x38>
    ef76:	1dfb      	adds	r3, r7, #7
    ef78:	2211      	movs	r2, #17
    ef7a:	701a      	strb	r2, [r3, #0]
    ef7c:	230f      	movs	r3, #15
    ef7e:	18fb      	adds	r3, r7, r3
    ef80:	1dfa      	adds	r2, r7, #7
    ef82:	7812      	ldrb	r2, [r2, #0]
    ef84:	701a      	strb	r2, [r3, #0]
    ef86:	230e      	movs	r3, #14
    ef88:	18fc      	adds	r4, r7, r3
    ef8a:	200b      	movs	r0, #11
    ef8c:	4b39      	ldr	r3, [pc, #228]	; (f074 <SX1276LoRaSetRFPower+0x130>)
    ef8e:	4798      	blx	r3
    ef90:	0003      	movs	r3, r0
    ef92:	7023      	strb	r3, [r4, #0]
    ef94:	230d      	movs	r3, #13
    ef96:	18fc      	adds	r4, r7, r3
    ef98:	204d      	movs	r0, #77	; 0x4d
    ef9a:	4b36      	ldr	r3, [pc, #216]	; (f074 <SX1276LoRaSetRFPower+0x130>)
    ef9c:	4798      	blx	r3
    ef9e:	0003      	movs	r3, r0
    efa0:	7023      	strb	r3, [r4, #0]
    efa2:	230d      	movs	r3, #13
    efa4:	18fb      	adds	r3, r7, r3
    efa6:	220d      	movs	r2, #13
    efa8:	18ba      	adds	r2, r7, r2
    efaa:	7812      	ldrb	r2, [r2, #0]
    efac:	2107      	movs	r1, #7
    efae:	438a      	bics	r2, r1
    efb0:	701a      	strb	r2, [r3, #0]
    efb2:	1dfb      	adds	r3, r7, #7
    efb4:	781b      	ldrb	r3, [r3, #0]
    efb6:	2b14      	cmp	r3, #20
    efb8:	d12b      	bne.n	f012 <SX1276LoRaSetRFPower+0xce>
    efba:	230d      	movs	r3, #13
    efbc:	18fb      	adds	r3, r7, r3
    efbe:	2287      	movs	r2, #135	; 0x87
    efc0:	701a      	strb	r2, [r3, #0]
    efc2:	1dfb      	adds	r3, r7, #7
    efc4:	220f      	movs	r2, #15
    efc6:	701a      	strb	r2, [r3, #0]
    efc8:	230e      	movs	r3, #14
    efca:	18fb      	adds	r3, r7, r3
    efcc:	220e      	movs	r2, #14
    efce:	18ba      	adds	r2, r7, r2
    efd0:	7812      	ldrb	r2, [r2, #0]
    efd2:	2120      	movs	r1, #32
    efd4:	438a      	bics	r2, r1
    efd6:	701a      	strb	r2, [r3, #0]
    efd8:	2100      	movs	r1, #0
    efda:	200d      	movs	r0, #13
    efdc:	4b26      	ldr	r3, [pc, #152]	; (f078 <SX1276LoRaSetRFPower+0x134>)
    efde:	4798      	blx	r3
    efe0:	230d      	movs	r3, #13
    efe2:	18fb      	adds	r3, r7, r3
    efe4:	781b      	ldrb	r3, [r3, #0]
    efe6:	0019      	movs	r1, r3
    efe8:	204d      	movs	r0, #77	; 0x4d
    efea:	4b24      	ldr	r3, [pc, #144]	; (f07c <SX1276LoRaSetRFPower+0x138>)
    efec:	4798      	blx	r3
    efee:	1dfb      	adds	r3, r7, #7
    eff0:	781b      	ldrb	r3, [r3, #0]
    eff2:	2280      	movs	r2, #128	; 0x80
    eff4:	4252      	negs	r2, r2
    eff6:	4313      	orrs	r3, r2
    eff8:	b2db      	uxtb	r3, r3
    effa:	0019      	movs	r1, r3
    effc:	2009      	movs	r0, #9
    effe:	4b1f      	ldr	r3, [pc, #124]	; (f07c <SX1276LoRaSetRFPower+0x138>)
    f000:	4798      	blx	r3
    f002:	230e      	movs	r3, #14
    f004:	18fb      	adds	r3, r7, r3
    f006:	781b      	ldrb	r3, [r3, #0]
    f008:	0019      	movs	r1, r3
    f00a:	200b      	movs	r0, #11
    f00c:	4b1b      	ldr	r3, [pc, #108]	; (f07c <SX1276LoRaSetRFPower+0x138>)
    f00e:	4798      	blx	r3
    f010:	e028      	b.n	f064 <SX1276LoRaSetRFPower+0x120>
    f012:	230d      	movs	r3, #13
    f014:	18fb      	adds	r3, r7, r3
    f016:	2284      	movs	r2, #132	; 0x84
    f018:	701a      	strb	r2, [r3, #0]
    f01a:	1dfb      	adds	r3, r7, #7
    f01c:	1dfa      	adds	r2, r7, #7
    f01e:	7812      	ldrb	r2, [r2, #0]
    f020:	3a02      	subs	r2, #2
    f022:	701a      	strb	r2, [r3, #0]
    f024:	230e      	movs	r3, #14
    f026:	18fb      	adds	r3, r7, r3
    f028:	220e      	movs	r2, #14
    f02a:	18ba      	adds	r2, r7, r2
    f02c:	7812      	ldrb	r2, [r2, #0]
    f02e:	2120      	movs	r1, #32
    f030:	430a      	orrs	r2, r1
    f032:	701a      	strb	r2, [r3, #0]
    f034:	2101      	movs	r1, #1
    f036:	200d      	movs	r0, #13
    f038:	4b0f      	ldr	r3, [pc, #60]	; (f078 <SX1276LoRaSetRFPower+0x134>)
    f03a:	4798      	blx	r3
    f03c:	230d      	movs	r3, #13
    f03e:	18fb      	adds	r3, r7, r3
    f040:	781b      	ldrb	r3, [r3, #0]
    f042:	0019      	movs	r1, r3
    f044:	204d      	movs	r0, #77	; 0x4d
    f046:	4b0d      	ldr	r3, [pc, #52]	; (f07c <SX1276LoRaSetRFPower+0x138>)
    f048:	4798      	blx	r3
    f04a:	1dfb      	adds	r3, r7, #7
    f04c:	781b      	ldrb	r3, [r3, #0]
    f04e:	0019      	movs	r1, r3
    f050:	2009      	movs	r0, #9
    f052:	4b0a      	ldr	r3, [pc, #40]	; (f07c <SX1276LoRaSetRFPower+0x138>)
    f054:	4798      	blx	r3
    f056:	230e      	movs	r3, #14
    f058:	18fb      	adds	r3, r7, r3
    f05a:	781b      	ldrb	r3, [r3, #0]
    f05c:	0019      	movs	r1, r3
    f05e:	200b      	movs	r0, #11
    f060:	4b06      	ldr	r3, [pc, #24]	; (f07c <SX1276LoRaSetRFPower+0x138>)
    f062:	4798      	blx	r3
    f064:	230f      	movs	r3, #15
    f066:	18fb      	adds	r3, r7, r3
    f068:	781b      	ldrb	r3, [r3, #0]
    f06a:	0018      	movs	r0, r3
    f06c:	46bd      	mov	sp, r7
    f06e:	b005      	add	sp, #20
    f070:	bd90      	pop	{r4, r7, pc}
    f072:	46c0      	nop			; (mov r8, r8)
    f074:	00006fcd 	.word	0x00006fcd
    f078:	0000ed81 	.word	0x0000ed81
    f07c:	00006f81 	.word	0x00006f81

0000f080 <SX1276_Config>:
    f080:	b580      	push	{r7, lr}
    f082:	b082      	sub	sp, #8
    f084:	af00      	add	r7, sp, #0
    f086:	1dfb      	adds	r3, r7, #7
    f088:	2200      	movs	r2, #0
    f08a:	701a      	strb	r2, [r3, #0]
    f08c:	1dbb      	adds	r3, r7, #6
    f08e:	2200      	movs	r2, #0
    f090:	701a      	strb	r2, [r3, #0]
    f092:	1dbb      	adds	r3, r7, #6
    f094:	2207      	movs	r2, #7
    f096:	701a      	strb	r2, [r3, #0]
    f098:	1dfb      	adds	r3, r7, #7
    f09a:	220c      	movs	r2, #12
    f09c:	701a      	strb	r2, [r3, #0]
    f09e:	2180      	movs	r1, #128	; 0x80
    f0a0:	2001      	movs	r0, #1
    f0a2:	4b41      	ldr	r3, [pc, #260]	; (f1a8 <SX1276_Config+0x128>)
    f0a4:	4798      	blx	r3
    f0a6:	200a      	movs	r0, #10
    f0a8:	4b40      	ldr	r3, [pc, #256]	; (f1ac <SX1276_Config+0x12c>)
    f0aa:	4798      	blx	r3
    f0ac:	2119      	movs	r1, #25
    f0ae:	204b      	movs	r0, #75	; 0x4b
    f0b0:	4b3d      	ldr	r3, [pc, #244]	; (f1a8 <SX1276_Config+0x128>)
    f0b2:	4798      	blx	r3
    f0b4:	2181      	movs	r1, #129	; 0x81
    f0b6:	2001      	movs	r0, #1
    f0b8:	4b3b      	ldr	r3, [pc, #236]	; (f1a8 <SX1276_Config+0x128>)
    f0ba:	4798      	blx	r3
    f0bc:	2001      	movs	r0, #1
    f0be:	4b3c      	ldr	r3, [pc, #240]	; (f1b0 <SX1276_Config+0x130>)
    f0c0:	4798      	blx	r3
    f0c2:	2100      	movs	r1, #0
    f0c4:	200e      	movs	r0, #14
    f0c6:	4b38      	ldr	r3, [pc, #224]	; (f1a8 <SX1276_Config+0x128>)
    f0c8:	4798      	blx	r3
    f0ca:	2180      	movs	r1, #128	; 0x80
    f0cc:	200f      	movs	r0, #15
    f0ce:	4b36      	ldr	r3, [pc, #216]	; (f1a8 <SX1276_Config+0x128>)
    f0d0:	4798      	blx	r3
    f0d2:	2120      	movs	r1, #32
    f0d4:	200c      	movs	r0, #12
    f0d6:	4b34      	ldr	r3, [pc, #208]	; (f1a8 <SX1276_Config+0x128>)
    f0d8:	4798      	blx	r3
    f0da:	1dbb      	adds	r3, r7, #6
    f0dc:	781b      	ldrb	r3, [r3, #0]
    f0de:	011b      	lsls	r3, r3, #4
    f0e0:	b25b      	sxtb	r3, r3
    f0e2:	2202      	movs	r2, #2
    f0e4:	4313      	orrs	r3, r2
    f0e6:	b25b      	sxtb	r3, r3
    f0e8:	b2db      	uxtb	r3, r3
    f0ea:	0019      	movs	r1, r3
    f0ec:	201d      	movs	r0, #29
    f0ee:	4b2e      	ldr	r3, [pc, #184]	; (f1a8 <SX1276_Config+0x128>)
    f0f0:	4798      	blx	r3
    f0f2:	1dfb      	adds	r3, r7, #7
    f0f4:	781b      	ldrb	r3, [r3, #0]
    f0f6:	2b06      	cmp	r3, #6
    f0f8:	d103      	bne.n	f102 <SX1276_Config+0x82>
    f0fa:	2005      	movs	r0, #5
    f0fc:	4b2d      	ldr	r3, [pc, #180]	; (f1b4 <SX1276_Config+0x134>)
    f0fe:	4798      	blx	r3
    f100:	e002      	b.n	f108 <SX1276_Config+0x88>
    f102:	2003      	movs	r0, #3
    f104:	4b2b      	ldr	r3, [pc, #172]	; (f1b4 <SX1276_Config+0x134>)
    f106:	4798      	blx	r3
    f108:	1dfb      	adds	r3, r7, #7
    f10a:	781b      	ldrb	r3, [r3, #0]
    f10c:	011b      	lsls	r3, r3, #4
    f10e:	b25b      	sxtb	r3, r3
    f110:	2207      	movs	r2, #7
    f112:	4313      	orrs	r3, r2
    f114:	b25b      	sxtb	r3, r3
    f116:	b2db      	uxtb	r3, r3
    f118:	0019      	movs	r1, r3
    f11a:	201e      	movs	r0, #30
    f11c:	4b22      	ldr	r3, [pc, #136]	; (f1a8 <SX1276_Config+0x128>)
    f11e:	4798      	blx	r3
    f120:	21ff      	movs	r1, #255	; 0xff
    f122:	201f      	movs	r0, #31
    f124:	4b20      	ldr	r3, [pc, #128]	; (f1a8 <SX1276_Config+0x128>)
    f126:	4798      	blx	r3
    f128:	2100      	movs	r1, #0
    f12a:	2020      	movs	r0, #32
    f12c:	4b1e      	ldr	r3, [pc, #120]	; (f1a8 <SX1276_Config+0x128>)
    f12e:	4798      	blx	r3
    f130:	2108      	movs	r1, #8
    f132:	2021      	movs	r0, #33	; 0x21
    f134:	4b1c      	ldr	r3, [pc, #112]	; (f1a8 <SX1276_Config+0x128>)
    f136:	4798      	blx	r3
    f138:	2101      	movs	r1, #1
    f13a:	2040      	movs	r0, #64	; 0x40
    f13c:	4b1a      	ldr	r3, [pc, #104]	; (f1a8 <SX1276_Config+0x128>)
    f13e:	4798      	blx	r3
    f140:	2180      	movs	r1, #128	; 0x80
    f142:	2011      	movs	r0, #17
    f144:	4b18      	ldr	r3, [pc, #96]	; (f1a8 <SX1276_Config+0x128>)
    f146:	4798      	blx	r3
    f148:	2108      	movs	r1, #8
    f14a:	200a      	movs	r0, #10
    f14c:	4b16      	ldr	r3, [pc, #88]	; (f1a8 <SX1276_Config+0x128>)
    f14e:	4798      	blx	r3
    f150:	210c      	movs	r1, #12
    f152:	2026      	movs	r0, #38	; 0x26
    f154:	4b14      	ldr	r3, [pc, #80]	; (f1a8 <SX1276_Config+0x128>)
    f156:	4798      	blx	r3
    f158:	2014      	movs	r0, #20
    f15a:	4b17      	ldr	r3, [pc, #92]	; (f1b8 <SX1276_Config+0x138>)
    f15c:	4798      	blx	r3
    f15e:	2119      	movs	r1, #25
    f160:	2061      	movs	r0, #97	; 0x61
    f162:	4b11      	ldr	r3, [pc, #68]	; (f1a8 <SX1276_Config+0x128>)
    f164:	4798      	blx	r3
    f166:	210c      	movs	r1, #12
    f168:	2062      	movs	r0, #98	; 0x62
    f16a:	4b0f      	ldr	r3, [pc, #60]	; (f1a8 <SX1276_Config+0x128>)
    f16c:	4798      	blx	r3
    f16e:	214b      	movs	r1, #75	; 0x4b
    f170:	2063      	movs	r0, #99	; 0x63
    f172:	4b0d      	ldr	r3, [pc, #52]	; (f1a8 <SX1276_Config+0x128>)
    f174:	4798      	blx	r3
    f176:	2185      	movs	r1, #133	; 0x85
    f178:	2001      	movs	r0, #1
    f17a:	4b0b      	ldr	r3, [pc, #44]	; (f1a8 <SX1276_Config+0x128>)
    f17c:	4798      	blx	r3
    f17e:	4b0f      	ldr	r3, [pc, #60]	; (f1bc <SX1276_Config+0x13c>)
    f180:	4798      	blx	r3
    f182:	4b0f      	ldr	r3, [pc, #60]	; (f1c0 <SX1276_Config+0x140>)
    f184:	2201      	movs	r2, #1
    f186:	701a      	strb	r2, [r3, #0]
    f188:	f3bf 8f5f 	dmb	sy
    f18c:	b662      	cpsie	i
    f18e:	4b0d      	ldr	r3, [pc, #52]	; (f1c4 <SX1276_Config+0x144>)
    f190:	0019      	movs	r1, r3
    f192:	2001      	movs	r0, #1
    f194:	4b0c      	ldr	r3, [pc, #48]	; (f1c8 <SX1276_Config+0x148>)
    f196:	4798      	blx	r3
    f198:	4b0c      	ldr	r3, [pc, #48]	; (f1cc <SX1276_Config+0x14c>)
    f19a:	4798      	blx	r3
    f19c:	2300      	movs	r3, #0
    f19e:	0018      	movs	r0, r3
    f1a0:	46bd      	mov	sp, r7
    f1a2:	b002      	add	sp, #8
    f1a4:	bd80      	pop	{r7, pc}
    f1a6:	46c0      	nop			; (mov r8, r8)
    f1a8:	00006f81 	.word	0x00006f81
    f1ac:	000001a1 	.word	0x000001a1
    f1b0:	0000fc05 	.word	0x0000fc05
    f1b4:	0000edfd 	.word	0x0000edfd
    f1b8:	0000ef45 	.word	0x0000ef45
    f1bc:	00007445 	.word	0x00007445
    f1c0:	20000008 	.word	0x20000008
    f1c4:	0000f1d1 	.word	0x0000f1d1
    f1c8:	00007409 	.word	0x00007409
    f1cc:	00007115 	.word	0x00007115

0000f1d0 <SX1276_RX_Handler>:
    f1d0:	b5b0      	push	{r4, r5, r7, lr}
    f1d2:	b088      	sub	sp, #32
    f1d4:	af00      	add	r7, sp, #0
    f1d6:	231a      	movs	r3, #26
    f1d8:	18fc      	adds	r4, r7, r3
    f1da:	2012      	movs	r0, #18
    f1dc:	4bcb      	ldr	r3, [pc, #812]	; (f50c <SX1276_RX_Handler+0x33c>)
    f1de:	4798      	blx	r3
    f1e0:	0003      	movs	r3, r0
    f1e2:	7023      	strb	r3, [r4, #0]
    f1e4:	21ff      	movs	r1, #255	; 0xff
    f1e6:	2012      	movs	r0, #18
    f1e8:	4bc9      	ldr	r3, [pc, #804]	; (f510 <SX1276_RX_Handler+0x340>)
    f1ea:	4798      	blx	r3
    f1ec:	231a      	movs	r3, #26
    f1ee:	18fb      	adds	r3, r7, r3
    f1f0:	781b      	ldrb	r3, [r3, #0]
    f1f2:	2250      	movs	r2, #80	; 0x50
    f1f4:	4013      	ands	r3, r2
    f1f6:	d100      	bne.n	f1fa <SX1276_RX_Handler+0x2a>
    f1f8:	e385      	b.n	f906 <SX1276_RX_Handler+0x736>
    f1fa:	2319      	movs	r3, #25
    f1fc:	18fc      	adds	r4, r7, r3
    f1fe:	2013      	movs	r0, #19
    f200:	4bc2      	ldr	r3, [pc, #776]	; (f50c <SX1276_RX_Handler+0x33c>)
    f202:	4798      	blx	r3
    f204:	0003      	movs	r3, r0
    f206:	7023      	strb	r3, [r4, #0]
    f208:	2318      	movs	r3, #24
    f20a:	18fc      	adds	r4, r7, r3
    f20c:	2010      	movs	r0, #16
    f20e:	4bbf      	ldr	r3, [pc, #764]	; (f50c <SX1276_RX_Handler+0x33c>)
    f210:	4798      	blx	r3
    f212:	0003      	movs	r3, r0
    f214:	7023      	strb	r3, [r4, #0]
    f216:	2318      	movs	r3, #24
    f218:	18fb      	adds	r3, r7, r3
    f21a:	781b      	ldrb	r3, [r3, #0]
    f21c:	0019      	movs	r1, r3
    f21e:	200d      	movs	r0, #13
    f220:	4bbb      	ldr	r3, [pc, #748]	; (f510 <SX1276_RX_Handler+0x340>)
    f222:	4798      	blx	r3
    f224:	2317      	movs	r3, #23
    f226:	18fb      	adds	r3, r7, r3
    f228:	2200      	movs	r2, #0
    f22a:	701a      	strb	r2, [r3, #0]
    f22c:	2317      	movs	r3, #23
    f22e:	18fb      	adds	r3, r7, r3
    f230:	781a      	ldrb	r2, [r3, #0]
    f232:	0013      	movs	r3, r2
    f234:	01db      	lsls	r3, r3, #7
    f236:	1a9b      	subs	r3, r3, r2
    f238:	005b      	lsls	r3, r3, #1
    f23a:	4ab6      	ldr	r2, [pc, #728]	; (f514 <SX1276_RX_Handler+0x344>)
    f23c:	189b      	adds	r3, r3, r2
    f23e:	3301      	adds	r3, #1
    f240:	22fc      	movs	r2, #252	; 0xfc
    f242:	2100      	movs	r1, #0
    f244:	0018      	movs	r0, r3
    f246:	4bb4      	ldr	r3, [pc, #720]	; (f518 <SX1276_RX_Handler+0x348>)
    f248:	4798      	blx	r3
    f24a:	2317      	movs	r3, #23
    f24c:	18fb      	adds	r3, r7, r3
    f24e:	781a      	ldrb	r2, [r3, #0]
    f250:	0013      	movs	r3, r2
    f252:	01db      	lsls	r3, r3, #7
    f254:	1a9b      	subs	r3, r3, r2
    f256:	005b      	lsls	r3, r3, #1
    f258:	4aae      	ldr	r2, [pc, #696]	; (f514 <SX1276_RX_Handler+0x344>)
    f25a:	189b      	adds	r3, r3, r2
    f25c:	1c59      	adds	r1, r3, #1
    f25e:	2319      	movs	r3, #25
    f260:	18fb      	adds	r3, r7, r3
    f262:	781b      	ldrb	r3, [r3, #0]
    f264:	001a      	movs	r2, r3
    f266:	2000      	movs	r0, #0
    f268:	4bac      	ldr	r3, [pc, #688]	; (f51c <SX1276_RX_Handler+0x34c>)
    f26a:	4798      	blx	r3
    f26c:	2319      	movs	r3, #25
    f26e:	18fb      	adds	r3, r7, r3
    f270:	781b      	ldrb	r3, [r3, #0]
    f272:	2b04      	cmp	r3, #4
    f274:	d104      	bne.n	f280 <SX1276_RX_Handler+0xb0>
    f276:	231f      	movs	r3, #31
    f278:	18fb      	adds	r3, r7, r3
    f27a:	2201      	movs	r2, #1
    f27c:	701a      	strb	r2, [r3, #0]
    f27e:	e003      	b.n	f288 <SX1276_RX_Handler+0xb8>
    f280:	231f      	movs	r3, #31
    f282:	18fb      	adds	r3, r7, r3
    f284:	2200      	movs	r2, #0
    f286:	701a      	strb	r2, [r3, #0]
    f288:	2319      	movs	r3, #25
    f28a:	18fb      	adds	r3, r7, r3
    f28c:	781b      	ldrb	r3, [r3, #0]
    f28e:	2bfb      	cmp	r3, #251	; 0xfb
    f290:	d80e      	bhi.n	f2b0 <SX1276_RX_Handler+0xe0>
    f292:	2319      	movs	r3, #25
    f294:	18fb      	adds	r3, r7, r3
    f296:	781b      	ldrb	r3, [r3, #0]
    f298:	2b00      	cmp	r3, #0
    f29a:	d009      	beq.n	f2b0 <SX1276_RX_Handler+0xe0>
    f29c:	2317      	movs	r3, #23
    f29e:	18fb      	adds	r3, r7, r3
    f2a0:	781b      	ldrb	r3, [r3, #0]
    f2a2:	2b01      	cmp	r3, #1
    f2a4:	d907      	bls.n	f2b6 <SX1276_RX_Handler+0xe6>
    f2a6:	231f      	movs	r3, #31
    f2a8:	18fb      	adds	r3, r7, r3
    f2aa:	781b      	ldrb	r3, [r3, #0]
    f2ac:	2b00      	cmp	r3, #0
    f2ae:	d102      	bne.n	f2b6 <SX1276_RX_Handler+0xe6>
    f2b0:	4b9b      	ldr	r3, [pc, #620]	; (f520 <SX1276_RX_Handler+0x350>)
    f2b2:	4798      	blx	r3
    f2b4:	e327      	b.n	f906 <SX1276_RX_Handler+0x736>
    f2b6:	231f      	movs	r3, #31
    f2b8:	18fb      	adds	r3, r7, r3
    f2ba:	781b      	ldrb	r3, [r3, #0]
    f2bc:	2b00      	cmp	r3, #0
    f2be:	d000      	beq.n	f2c2 <SX1276_RX_Handler+0xf2>
    f2c0:	e157      	b.n	f572 <SX1276_RX_Handler+0x3a2>
    f2c2:	4b94      	ldr	r3, [pc, #592]	; (f514 <SX1276_RX_Handler+0x344>)
    f2c4:	2219      	movs	r2, #25
    f2c6:	18ba      	adds	r2, r7, r2
    f2c8:	21fd      	movs	r1, #253	; 0xfd
    f2ca:	7812      	ldrb	r2, [r2, #0]
    f2cc:	545a      	strb	r2, [r3, r1]
    f2ce:	2317      	movs	r3, #23
    f2d0:	18fb      	adds	r3, r7, r3
    f2d2:	781a      	ldrb	r2, [r3, #0]
    f2d4:	2317      	movs	r3, #23
    f2d6:	18fb      	adds	r3, r7, r3
    f2d8:	7819      	ldrb	r1, [r3, #0]
    f2da:	488e      	ldr	r0, [pc, #568]	; (f514 <SX1276_RX_Handler+0x344>)
    f2dc:	24fd      	movs	r4, #253	; 0xfd
    f2de:	000b      	movs	r3, r1
    f2e0:	01db      	lsls	r3, r3, #7
    f2e2:	1a5b      	subs	r3, r3, r1
    f2e4:	005b      	lsls	r3, r3, #1
    f2e6:	18c3      	adds	r3, r0, r3
    f2e8:	191b      	adds	r3, r3, r4
    f2ea:	781b      	ldrb	r3, [r3, #0]
    f2ec:	b2db      	uxtb	r3, r3
    f2ee:	1e59      	subs	r1, r3, #1
    f2f0:	4888      	ldr	r0, [pc, #544]	; (f514 <SX1276_RX_Handler+0x344>)
    f2f2:	0013      	movs	r3, r2
    f2f4:	01db      	lsls	r3, r3, #7
    f2f6:	1a9b      	subs	r3, r3, r2
    f2f8:	005b      	lsls	r3, r3, #1
    f2fa:	18c3      	adds	r3, r0, r3
    f2fc:	185b      	adds	r3, r3, r1
    f2fe:	3301      	adds	r3, #1
    f300:	781b      	ldrb	r3, [r3, #0]
    f302:	b2db      	uxtb	r3, r3
    f304:	b298      	uxth	r0, r3
    f306:	2317      	movs	r3, #23
    f308:	18fb      	adds	r3, r7, r3
    f30a:	781a      	ldrb	r2, [r3, #0]
    f30c:	2317      	movs	r3, #23
    f30e:	18fb      	adds	r3, r7, r3
    f310:	7819      	ldrb	r1, [r3, #0]
    f312:	4c80      	ldr	r4, [pc, #512]	; (f514 <SX1276_RX_Handler+0x344>)
    f314:	25fd      	movs	r5, #253	; 0xfd
    f316:	000b      	movs	r3, r1
    f318:	01db      	lsls	r3, r3, #7
    f31a:	1a5b      	subs	r3, r3, r1
    f31c:	005b      	lsls	r3, r3, #1
    f31e:	18e3      	adds	r3, r4, r3
    f320:	195b      	adds	r3, r3, r5
    f322:	781b      	ldrb	r3, [r3, #0]
    f324:	b2db      	uxtb	r3, r3
    f326:	1e99      	subs	r1, r3, #2
    f328:	4c7a      	ldr	r4, [pc, #488]	; (f514 <SX1276_RX_Handler+0x344>)
    f32a:	0013      	movs	r3, r2
    f32c:	01db      	lsls	r3, r3, #7
    f32e:	1a9b      	subs	r3, r3, r2
    f330:	005b      	lsls	r3, r3, #1
    f332:	18e3      	adds	r3, r4, r3
    f334:	185b      	adds	r3, r3, r1
    f336:	3301      	adds	r3, #1
    f338:	781b      	ldrb	r3, [r3, #0]
    f33a:	b2db      	uxtb	r3, r3
    f33c:	b29b      	uxth	r3, r3
    f33e:	021b      	lsls	r3, r3, #8
    f340:	b29a      	uxth	r2, r3
    f342:	2314      	movs	r3, #20
    f344:	18fb      	adds	r3, r7, r3
    f346:	1882      	adds	r2, r0, r2
    f348:	801a      	strh	r2, [r3, #0]
    f34a:	2317      	movs	r3, #23
    f34c:	18fb      	adds	r3, r7, r3
    f34e:	781a      	ldrb	r2, [r3, #0]
    f350:	4970      	ldr	r1, [pc, #448]	; (f514 <SX1276_RX_Handler+0x344>)
    f352:	0013      	movs	r3, r2
    f354:	01db      	lsls	r3, r3, #7
    f356:	1a9b      	subs	r3, r3, r2
    f358:	005b      	lsls	r3, r3, #1
    f35a:	18cb      	adds	r3, r1, r3
    f35c:	3301      	adds	r3, #1
    f35e:	781b      	ldrb	r3, [r3, #0]
    f360:	b2db      	uxtb	r3, r3
    f362:	001a      	movs	r2, r3
    f364:	2303      	movs	r3, #3
    f366:	4013      	ands	r3, r2
    f368:	2b03      	cmp	r3, #3
    f36a:	d124      	bne.n	f3b6 <SX1276_RX_Handler+0x1e6>
    f36c:	2317      	movs	r3, #23
    f36e:	18fb      	adds	r3, r7, r3
    f370:	781a      	ldrb	r2, [r3, #0]
    f372:	0013      	movs	r3, r2
    f374:	01db      	lsls	r3, r3, #7
    f376:	1a9b      	subs	r3, r3, r2
    f378:	005b      	lsls	r3, r3, #1
    f37a:	4a66      	ldr	r2, [pc, #408]	; (f514 <SX1276_RX_Handler+0x344>)
    f37c:	189b      	adds	r3, r3, r2
    f37e:	1c5c      	adds	r4, r3, #1
    f380:	2317      	movs	r3, #23
    f382:	18fb      	adds	r3, r7, r3
    f384:	781a      	ldrb	r2, [r3, #0]
    f386:	4963      	ldr	r1, [pc, #396]	; (f514 <SX1276_RX_Handler+0x344>)
    f388:	20fd      	movs	r0, #253	; 0xfd
    f38a:	0013      	movs	r3, r2
    f38c:	01db      	lsls	r3, r3, #7
    f38e:	1a9b      	subs	r3, r3, r2
    f390:	005b      	lsls	r3, r3, #1
    f392:	18cb      	adds	r3, r1, r3
    f394:	181b      	adds	r3, r3, r0
    f396:	781b      	ldrb	r3, [r3, #0]
    f398:	b2db      	uxtb	r3, r3
    f39a:	3b02      	subs	r3, #2
    f39c:	b2db      	uxtb	r3, r3
    f39e:	b25b      	sxtb	r3, r3
    f3a0:	2200      	movs	r2, #0
    f3a2:	0019      	movs	r1, r3
    f3a4:	0020      	movs	r0, r4
    f3a6:	4b5f      	ldr	r3, [pc, #380]	; (f524 <SX1276_RX_Handler+0x354>)
    f3a8:	4798      	blx	r3
    f3aa:	0003      	movs	r3, r0
    f3ac:	001a      	movs	r2, r3
    f3ae:	231c      	movs	r3, #28
    f3b0:	18fb      	adds	r3, r7, r3
    f3b2:	801a      	strh	r2, [r3, #0]
    f3b4:	e092      	b.n	f4dc <SX1276_RX_Handler+0x30c>
    f3b6:	2317      	movs	r3, #23
    f3b8:	18fb      	adds	r3, r7, r3
    f3ba:	781a      	ldrb	r2, [r3, #0]
    f3bc:	4955      	ldr	r1, [pc, #340]	; (f514 <SX1276_RX_Handler+0x344>)
    f3be:	0013      	movs	r3, r2
    f3c0:	01db      	lsls	r3, r3, #7
    f3c2:	1a9b      	subs	r3, r3, r2
    f3c4:	005b      	lsls	r3, r3, #1
    f3c6:	18cb      	adds	r3, r1, r3
    f3c8:	3301      	adds	r3, #1
    f3ca:	781b      	ldrb	r3, [r3, #0]
    f3cc:	b2db      	uxtb	r3, r3
    f3ce:	001a      	movs	r2, r3
    f3d0:	2304      	movs	r3, #4
    f3d2:	4013      	ands	r3, r2
    f3d4:	d10f      	bne.n	f3f6 <SX1276_RX_Handler+0x226>
    f3d6:	2317      	movs	r3, #23
    f3d8:	18fb      	adds	r3, r7, r3
    f3da:	781a      	ldrb	r2, [r3, #0]
    f3dc:	494d      	ldr	r1, [pc, #308]	; (f514 <SX1276_RX_Handler+0x344>)
    f3de:	0013      	movs	r3, r2
    f3e0:	01db      	lsls	r3, r3, #7
    f3e2:	1a9b      	subs	r3, r3, r2
    f3e4:	005b      	lsls	r3, r3, #1
    f3e6:	18cb      	adds	r3, r1, r3
    f3e8:	3301      	adds	r3, #1
    f3ea:	781b      	ldrb	r3, [r3, #0]
    f3ec:	b2db      	uxtb	r3, r3
    f3ee:	001a      	movs	r2, r3
    f3f0:	2340      	movs	r3, #64	; 0x40
    f3f2:	4013      	ands	r3, r2
    f3f4:	d024      	beq.n	f440 <SX1276_RX_Handler+0x270>
    f3f6:	2317      	movs	r3, #23
    f3f8:	18fb      	adds	r3, r7, r3
    f3fa:	781a      	ldrb	r2, [r3, #0]
    f3fc:	0013      	movs	r3, r2
    f3fe:	01db      	lsls	r3, r3, #7
    f400:	1a9b      	subs	r3, r3, r2
    f402:	005b      	lsls	r3, r3, #1
    f404:	4a43      	ldr	r2, [pc, #268]	; (f514 <SX1276_RX_Handler+0x344>)
    f406:	189b      	adds	r3, r3, r2
    f408:	1c5c      	adds	r4, r3, #1
    f40a:	2317      	movs	r3, #23
    f40c:	18fb      	adds	r3, r7, r3
    f40e:	781a      	ldrb	r2, [r3, #0]
    f410:	4940      	ldr	r1, [pc, #256]	; (f514 <SX1276_RX_Handler+0x344>)
    f412:	20fd      	movs	r0, #253	; 0xfd
    f414:	0013      	movs	r3, r2
    f416:	01db      	lsls	r3, r3, #7
    f418:	1a9b      	subs	r3, r3, r2
    f41a:	005b      	lsls	r3, r3, #1
    f41c:	18cb      	adds	r3, r1, r3
    f41e:	181b      	adds	r3, r3, r0
    f420:	781b      	ldrb	r3, [r3, #0]
    f422:	b2db      	uxtb	r3, r3
    f424:	3b02      	subs	r3, #2
    f426:	b2db      	uxtb	r3, r3
    f428:	b25b      	sxtb	r3, r3
    f42a:	2200      	movs	r2, #0
    f42c:	0019      	movs	r1, r3
    f42e:	0020      	movs	r0, r4
    f430:	4b3c      	ldr	r3, [pc, #240]	; (f524 <SX1276_RX_Handler+0x354>)
    f432:	4798      	blx	r3
    f434:	0003      	movs	r3, r0
    f436:	001a      	movs	r2, r3
    f438:	231c      	movs	r3, #28
    f43a:	18fb      	adds	r3, r7, r3
    f43c:	801a      	strh	r2, [r3, #0]
    f43e:	e04d      	b.n	f4dc <SX1276_RX_Handler+0x30c>
    f440:	2317      	movs	r3, #23
    f442:	18fb      	adds	r3, r7, r3
    f444:	781a      	ldrb	r2, [r3, #0]
    f446:	0013      	movs	r3, r2
    f448:	01db      	lsls	r3, r3, #7
    f44a:	1a9b      	subs	r3, r3, r2
    f44c:	005b      	lsls	r3, r3, #1
    f44e:	4a31      	ldr	r2, [pc, #196]	; (f514 <SX1276_RX_Handler+0x344>)
    f450:	189b      	adds	r3, r3, r2
    f452:	3301      	adds	r3, #1
    f454:	2200      	movs	r2, #0
    f456:	2102      	movs	r1, #2
    f458:	0018      	movs	r0, r3
    f45a:	4b32      	ldr	r3, [pc, #200]	; (f524 <SX1276_RX_Handler+0x354>)
    f45c:	4798      	blx	r3
    f45e:	0003      	movs	r3, r0
    f460:	001a      	movs	r2, r3
    f462:	231c      	movs	r3, #28
    f464:	18fb      	adds	r3, r7, r3
    f466:	801a      	strh	r2, [r3, #0]
    f468:	4b2f      	ldr	r3, [pc, #188]	; (f528 <SX1276_RX_Handler+0x358>)
    f46a:	6858      	ldr	r0, [r3, #4]
    f46c:	4b2e      	ldr	r3, [pc, #184]	; (f528 <SX1276_RX_Handler+0x358>)
    f46e:	781b      	ldrb	r3, [r3, #0]
    f470:	065b      	lsls	r3, r3, #25
    f472:	0f1b      	lsrs	r3, r3, #28
    f474:	b2db      	uxtb	r3, r3
    f476:	b259      	sxtb	r1, r3
    f478:	231c      	movs	r3, #28
    f47a:	18fb      	adds	r3, r7, r3
    f47c:	881b      	ldrh	r3, [r3, #0]
    f47e:	001a      	movs	r2, r3
    f480:	4b28      	ldr	r3, [pc, #160]	; (f524 <SX1276_RX_Handler+0x354>)
    f482:	4798      	blx	r3
    f484:	0003      	movs	r3, r0
    f486:	001a      	movs	r2, r3
    f488:	231c      	movs	r3, #28
    f48a:	18fb      	adds	r3, r7, r3
    f48c:	801a      	strh	r2, [r3, #0]
    f48e:	2317      	movs	r3, #23
    f490:	18fb      	adds	r3, r7, r3
    f492:	781a      	ldrb	r2, [r3, #0]
    f494:	0013      	movs	r3, r2
    f496:	01db      	lsls	r3, r3, #7
    f498:	1a9b      	subs	r3, r3, r2
    f49a:	005b      	lsls	r3, r3, #1
    f49c:	1c9a      	adds	r2, r3, #2
    f49e:	4b1d      	ldr	r3, [pc, #116]	; (f514 <SX1276_RX_Handler+0x344>)
    f4a0:	18d3      	adds	r3, r2, r3
    f4a2:	1c5c      	adds	r4, r3, #1
    f4a4:	2317      	movs	r3, #23
    f4a6:	18fb      	adds	r3, r7, r3
    f4a8:	781a      	ldrb	r2, [r3, #0]
    f4aa:	491a      	ldr	r1, [pc, #104]	; (f514 <SX1276_RX_Handler+0x344>)
    f4ac:	20fd      	movs	r0, #253	; 0xfd
    f4ae:	0013      	movs	r3, r2
    f4b0:	01db      	lsls	r3, r3, #7
    f4b2:	1a9b      	subs	r3, r3, r2
    f4b4:	005b      	lsls	r3, r3, #1
    f4b6:	18cb      	adds	r3, r1, r3
    f4b8:	181b      	adds	r3, r3, r0
    f4ba:	781b      	ldrb	r3, [r3, #0]
    f4bc:	b2db      	uxtb	r3, r3
    f4be:	3b04      	subs	r3, #4
    f4c0:	b2db      	uxtb	r3, r3
    f4c2:	b259      	sxtb	r1, r3
    f4c4:	231c      	movs	r3, #28
    f4c6:	18fb      	adds	r3, r7, r3
    f4c8:	881b      	ldrh	r3, [r3, #0]
    f4ca:	001a      	movs	r2, r3
    f4cc:	0020      	movs	r0, r4
    f4ce:	4b15      	ldr	r3, [pc, #84]	; (f524 <SX1276_RX_Handler+0x354>)
    f4d0:	4798      	blx	r3
    f4d2:	0003      	movs	r3, r0
    f4d4:	001a      	movs	r2, r3
    f4d6:	231c      	movs	r3, #28
    f4d8:	18fb      	adds	r3, r7, r3
    f4da:	801a      	strh	r2, [r3, #0]
    f4dc:	2314      	movs	r3, #20
    f4de:	18fa      	adds	r2, r7, r3
    f4e0:	231c      	movs	r3, #28
    f4e2:	18fb      	adds	r3, r7, r3
    f4e4:	8812      	ldrh	r2, [r2, #0]
    f4e6:	881b      	ldrh	r3, [r3, #0]
    f4e8:	429a      	cmp	r2, r3
    f4ea:	d01f      	beq.n	f52c <SX1276_RX_Handler+0x35c>
    f4ec:	2317      	movs	r3, #23
    f4ee:	18fb      	adds	r3, r7, r3
    f4f0:	781a      	ldrb	r2, [r3, #0]
    f4f2:	4908      	ldr	r1, [pc, #32]	; (f514 <SX1276_RX_Handler+0x344>)
    f4f4:	20fd      	movs	r0, #253	; 0xfd
    f4f6:	0013      	movs	r3, r2
    f4f8:	01db      	lsls	r3, r3, #7
    f4fa:	1a9b      	subs	r3, r3, r2
    f4fc:	005b      	lsls	r3, r3, #1
    f4fe:	18cb      	adds	r3, r1, r3
    f500:	181b      	adds	r3, r3, r0
    f502:	2200      	movs	r2, #0
    f504:	701a      	strb	r2, [r3, #0]
    f506:	4b06      	ldr	r3, [pc, #24]	; (f520 <SX1276_RX_Handler+0x350>)
    f508:	4798      	blx	r3
    f50a:	e6d1      	b.n	f2b0 <SX1276_RX_Handler+0xe0>
    f50c:	00006fcd 	.word	0x00006fcd
    f510:	00006f81 	.word	0x00006f81
    f514:	20001630 	.word	0x20001630
    f518:	00017799 	.word	0x00017799
    f51c:	0000709d 	.word	0x0000709d
    f520:	0000f90d 	.word	0x0000f90d
    f524:	0000ec41 	.word	0x0000ec41
    f528:	20001624 	.word	0x20001624
    f52c:	2317      	movs	r3, #23
    f52e:	18fb      	adds	r3, r7, r3
    f530:	781a      	ldrb	r2, [r3, #0]
    f532:	49e8      	ldr	r1, [pc, #928]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f534:	0013      	movs	r3, r2
    f536:	01db      	lsls	r3, r3, #7
    f538:	1a9b      	subs	r3, r3, r2
    f53a:	005b      	lsls	r3, r3, #1
    f53c:	5c5a      	ldrb	r2, [r3, r1]
    f53e:	2004      	movs	r0, #4
    f540:	4302      	orrs	r2, r0
    f542:	545a      	strb	r2, [r3, r1]
    f544:	2317      	movs	r3, #23
    f546:	18fb      	adds	r3, r7, r3
    f548:	781a      	ldrb	r2, [r3, #0]
    f54a:	4be3      	ldr	r3, [pc, #908]	; (f8d8 <SX1276_RX_Handler+0x708>)
    f54c:	781b      	ldrb	r3, [r3, #0]
    f54e:	07db      	lsls	r3, r3, #31
    f550:	0fdb      	lsrs	r3, r3, #31
    f552:	b2d8      	uxtb	r0, r3
    f554:	49df      	ldr	r1, [pc, #892]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f556:	0013      	movs	r3, r2
    f558:	01db      	lsls	r3, r3, #7
    f55a:	1a9b      	subs	r3, r3, r2
    f55c:	005b      	lsls	r3, r3, #1
    f55e:	5c5a      	ldrb	r2, [r3, r1]
    f560:	2401      	movs	r4, #1
    f562:	4020      	ands	r0, r4
    f564:	1804      	adds	r4, r0, r0
    f566:	2002      	movs	r0, #2
    f568:	4382      	bics	r2, r0
    f56a:	1c10      	adds	r0, r2, #0
    f56c:	1c22      	adds	r2, r4, #0
    f56e:	4302      	orrs	r2, r0
    f570:	545a      	strb	r2, [r3, r1]
    f572:	2317      	movs	r3, #23
    f574:	18fb      	adds	r3, r7, r3
    f576:	781a      	ldrb	r2, [r3, #0]
    f578:	49d6      	ldr	r1, [pc, #856]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f57a:	0013      	movs	r3, r2
    f57c:	01db      	lsls	r3, r3, #7
    f57e:	1a9b      	subs	r3, r3, r2
    f580:	005b      	lsls	r3, r3, #1
    f582:	18cb      	adds	r3, r1, r3
    f584:	3301      	adds	r3, #1
    f586:	781b      	ldrb	r3, [r3, #0]
    f588:	b2db      	uxtb	r3, r3
    f58a:	001a      	movs	r2, r3
    f58c:	2303      	movs	r3, #3
    f58e:	4013      	ands	r3, r2
    f590:	2b02      	cmp	r3, #2
    f592:	d122      	bne.n	f5da <SX1276_RX_Handler+0x40a>
    f594:	2317      	movs	r3, #23
    f596:	18fb      	adds	r3, r7, r3
    f598:	781a      	ldrb	r2, [r3, #0]
    f59a:	49ce      	ldr	r1, [pc, #824]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f59c:	0013      	movs	r3, r2
    f59e:	01db      	lsls	r3, r3, #7
    f5a0:	1a9b      	subs	r3, r3, r2
    f5a2:	005b      	lsls	r3, r3, #1
    f5a4:	18cb      	adds	r3, r1, r3
    f5a6:	3302      	adds	r3, #2
    f5a8:	781b      	ldrb	r3, [r3, #0]
    f5aa:	b2da      	uxtb	r2, r3
    f5ac:	4bcb      	ldr	r3, [pc, #812]	; (f8dc <SX1276_RX_Handler+0x70c>)
    f5ae:	781b      	ldrb	r3, [r3, #0]
    f5b0:	429a      	cmp	r2, r3
    f5b2:	d102      	bne.n	f5ba <SX1276_RX_Handler+0x3ea>
    f5b4:	4bca      	ldr	r3, [pc, #808]	; (f8e0 <SX1276_RX_Handler+0x710>)
    f5b6:	2201      	movs	r2, #1
    f5b8:	701a      	strb	r2, [r3, #0]
    f5ba:	2317      	movs	r3, #23
    f5bc:	18fb      	adds	r3, r7, r3
    f5be:	781a      	ldrb	r2, [r3, #0]
    f5c0:	49c4      	ldr	r1, [pc, #784]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f5c2:	20fd      	movs	r0, #253	; 0xfd
    f5c4:	0013      	movs	r3, r2
    f5c6:	01db      	lsls	r3, r3, #7
    f5c8:	1a9b      	subs	r3, r3, r2
    f5ca:	005b      	lsls	r3, r3, #1
    f5cc:	18cb      	adds	r3, r1, r3
    f5ce:	181b      	adds	r3, r3, r0
    f5d0:	2200      	movs	r2, #0
    f5d2:	701a      	strb	r2, [r3, #0]
    f5d4:	4bc3      	ldr	r3, [pc, #780]	; (f8e4 <SX1276_RX_Handler+0x714>)
    f5d6:	4798      	blx	r3
    f5d8:	e195      	b.n	f906 <SX1276_RX_Handler+0x736>
    f5da:	2313      	movs	r3, #19
    f5dc:	18fb      	adds	r3, r7, r3
    f5de:	22ff      	movs	r2, #255	; 0xff
    f5e0:	701a      	strb	r2, [r3, #0]
    f5e2:	2317      	movs	r3, #23
    f5e4:	18fb      	adds	r3, r7, r3
    f5e6:	781a      	ldrb	r2, [r3, #0]
    f5e8:	49ba      	ldr	r1, [pc, #744]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f5ea:	0013      	movs	r3, r2
    f5ec:	01db      	lsls	r3, r3, #7
    f5ee:	1a9b      	subs	r3, r3, r2
    f5f0:	005b      	lsls	r3, r3, #1
    f5f2:	18cb      	adds	r3, r1, r3
    f5f4:	3301      	adds	r3, #1
    f5f6:	781b      	ldrb	r3, [r3, #0]
    f5f8:	b2db      	uxtb	r3, r3
    f5fa:	001a      	movs	r2, r3
    f5fc:	2340      	movs	r3, #64	; 0x40
    f5fe:	4013      	ands	r3, r2
    f600:	d03f      	beq.n	f682 <SX1276_RX_Handler+0x4b2>
    f602:	231b      	movs	r3, #27
    f604:	18fb      	adds	r3, r7, r3
    f606:	2200      	movs	r2, #0
    f608:	701a      	strb	r2, [r3, #0]
    f60a:	e030      	b.n	f66e <SX1276_RX_Handler+0x49e>
    f60c:	2317      	movs	r3, #23
    f60e:	18fb      	adds	r3, r7, r3
    f610:	781a      	ldrb	r2, [r3, #0]
    f612:	231b      	movs	r3, #27
    f614:	18fb      	adds	r3, r7, r3
    f616:	781b      	ldrb	r3, [r3, #0]
    f618:	1c99      	adds	r1, r3, #2
    f61a:	48ae      	ldr	r0, [pc, #696]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f61c:	0013      	movs	r3, r2
    f61e:	01db      	lsls	r3, r3, #7
    f620:	1a9b      	subs	r3, r3, r2
    f622:	005b      	lsls	r3, r3, #1
    f624:	18c3      	adds	r3, r0, r3
    f626:	185b      	adds	r3, r3, r1
    f628:	3301      	adds	r3, #1
    f62a:	781b      	ldrb	r3, [r3, #0]
    f62c:	b2da      	uxtb	r2, r3
    f62e:	4bae      	ldr	r3, [pc, #696]	; (f8e8 <SX1276_RX_Handler+0x718>)
    f630:	6859      	ldr	r1, [r3, #4]
    f632:	231b      	movs	r3, #27
    f634:	18fb      	adds	r3, r7, r3
    f636:	781b      	ldrb	r3, [r3, #0]
    f638:	18cb      	adds	r3, r1, r3
    f63a:	781b      	ldrb	r3, [r3, #0]
    f63c:	429a      	cmp	r2, r3
    f63e:	d00f      	beq.n	f660 <SX1276_RX_Handler+0x490>
    f640:	2317      	movs	r3, #23
    f642:	18fb      	adds	r3, r7, r3
    f644:	781a      	ldrb	r2, [r3, #0]
    f646:	49a3      	ldr	r1, [pc, #652]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f648:	20fd      	movs	r0, #253	; 0xfd
    f64a:	0013      	movs	r3, r2
    f64c:	01db      	lsls	r3, r3, #7
    f64e:	1a9b      	subs	r3, r3, r2
    f650:	005b      	lsls	r3, r3, #1
    f652:	18cb      	adds	r3, r1, r3
    f654:	181b      	adds	r3, r3, r0
    f656:	2200      	movs	r2, #0
    f658:	701a      	strb	r2, [r3, #0]
    f65a:	4ba2      	ldr	r3, [pc, #648]	; (f8e4 <SX1276_RX_Handler+0x714>)
    f65c:	4798      	blx	r3
    f65e:	e627      	b.n	f2b0 <SX1276_RX_Handler+0xe0>
    f660:	231b      	movs	r3, #27
    f662:	18fb      	adds	r3, r7, r3
    f664:	781a      	ldrb	r2, [r3, #0]
    f666:	231b      	movs	r3, #27
    f668:	18fb      	adds	r3, r7, r3
    f66a:	3201      	adds	r2, #1
    f66c:	701a      	strb	r2, [r3, #0]
    f66e:	231b      	movs	r3, #27
    f670:	18fb      	adds	r3, r7, r3
    f672:	781b      	ldrb	r3, [r3, #0]
    f674:	4a9c      	ldr	r2, [pc, #624]	; (f8e8 <SX1276_RX_Handler+0x718>)
    f676:	7812      	ldrb	r2, [r2, #0]
    f678:	0652      	lsls	r2, r2, #25
    f67a:	0f12      	lsrs	r2, r2, #28
    f67c:	b2d2      	uxtb	r2, r2
    f67e:	4293      	cmp	r3, r2
    f680:	dbc4      	blt.n	f60c <SX1276_RX_Handler+0x43c>
    f682:	2317      	movs	r3, #23
    f684:	18fb      	adds	r3, r7, r3
    f686:	781a      	ldrb	r2, [r3, #0]
    f688:	4992      	ldr	r1, [pc, #584]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f68a:	0013      	movs	r3, r2
    f68c:	01db      	lsls	r3, r3, #7
    f68e:	1a9b      	subs	r3, r3, r2
    f690:	005b      	lsls	r3, r3, #1
    f692:	18cb      	adds	r3, r1, r3
    f694:	3301      	adds	r3, #1
    f696:	781b      	ldrb	r3, [r3, #0]
    f698:	b2db      	uxtb	r3, r3
    f69a:	001a      	movs	r2, r3
    f69c:	2320      	movs	r3, #32
    f69e:	4013      	ands	r3, r2
    f6a0:	d100      	bne.n	f6a4 <SX1276_RX_Handler+0x4d4>
    f6a2:	e0bd      	b.n	f820 <SX1276_RX_Handler+0x650>
    f6a4:	2317      	movs	r3, #23
    f6a6:	18fb      	adds	r3, r7, r3
    f6a8:	781a      	ldrb	r2, [r3, #0]
    f6aa:	498a      	ldr	r1, [pc, #552]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f6ac:	0013      	movs	r3, r2
    f6ae:	01db      	lsls	r3, r3, #7
    f6b0:	1a9b      	subs	r3, r3, r2
    f6b2:	005b      	lsls	r3, r3, #1
    f6b4:	18cb      	adds	r3, r1, r3
    f6b6:	3301      	adds	r3, #1
    f6b8:	781b      	ldrb	r3, [r3, #0]
    f6ba:	b2db      	uxtb	r3, r3
    f6bc:	001a      	movs	r2, r3
    f6be:	2303      	movs	r3, #3
    f6c0:	4013      	ands	r3, r2
    f6c2:	2b03      	cmp	r3, #3
    f6c4:	d143      	bne.n	f74e <SX1276_RX_Handler+0x57e>
    f6c6:	2317      	movs	r3, #23
    f6c8:	18fb      	adds	r3, r7, r3
    f6ca:	781a      	ldrb	r2, [r3, #0]
    f6cc:	4981      	ldr	r1, [pc, #516]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f6ce:	0013      	movs	r3, r2
    f6d0:	01db      	lsls	r3, r3, #7
    f6d2:	1a9b      	subs	r3, r3, r2
    f6d4:	005b      	lsls	r3, r3, #1
    f6d6:	18cb      	adds	r3, r1, r3
    f6d8:	3305      	adds	r3, #5
    f6da:	781b      	ldrb	r3, [r3, #0]
    f6dc:	b2da      	uxtb	r2, r3
    f6de:	4b83      	ldr	r3, [pc, #524]	; (f8ec <SX1276_RX_Handler+0x71c>)
    f6e0:	781b      	ldrb	r3, [r3, #0]
    f6e2:	429a      	cmp	r2, r3
    f6e4:	d000      	beq.n	f6e8 <SX1276_RX_Handler+0x518>
    f6e6:	e10d      	b.n	f904 <SX1276_RX_Handler+0x734>
    f6e8:	2317      	movs	r3, #23
    f6ea:	18fb      	adds	r3, r7, r3
    f6ec:	781a      	ldrb	r2, [r3, #0]
    f6ee:	4979      	ldr	r1, [pc, #484]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f6f0:	0013      	movs	r3, r2
    f6f2:	01db      	lsls	r3, r3, #7
    f6f4:	1a9b      	subs	r3, r3, r2
    f6f6:	005b      	lsls	r3, r3, #1
    f6f8:	18cb      	adds	r3, r1, r3
    f6fa:	3306      	adds	r3, #6
    f6fc:	781b      	ldrb	r3, [r3, #0]
    f6fe:	b2da      	uxtb	r2, r3
    f700:	4b7a      	ldr	r3, [pc, #488]	; (f8ec <SX1276_RX_Handler+0x71c>)
    f702:	785b      	ldrb	r3, [r3, #1]
    f704:	429a      	cmp	r2, r3
    f706:	d000      	beq.n	f70a <SX1276_RX_Handler+0x53a>
    f708:	e0fc      	b.n	f904 <SX1276_RX_Handler+0x734>
    f70a:	2317      	movs	r3, #23
    f70c:	18fb      	adds	r3, r7, r3
    f70e:	781a      	ldrb	r2, [r3, #0]
    f710:	4970      	ldr	r1, [pc, #448]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f712:	0013      	movs	r3, r2
    f714:	01db      	lsls	r3, r3, #7
    f716:	1a9b      	subs	r3, r3, r2
    f718:	005b      	lsls	r3, r3, #1
    f71a:	18cb      	adds	r3, r1, r3
    f71c:	3307      	adds	r3, #7
    f71e:	781b      	ldrb	r3, [r3, #0]
    f720:	b2da      	uxtb	r2, r3
    f722:	4b73      	ldr	r3, [pc, #460]	; (f8f0 <SX1276_RX_Handler+0x720>)
    f724:	781b      	ldrb	r3, [r3, #0]
    f726:	429a      	cmp	r2, r3
    f728:	d000      	beq.n	f72c <SX1276_RX_Handler+0x55c>
    f72a:	e0eb      	b.n	f904 <SX1276_RX_Handler+0x734>
    f72c:	2317      	movs	r3, #23
    f72e:	18fb      	adds	r3, r7, r3
    f730:	781a      	ldrb	r2, [r3, #0]
    f732:	4968      	ldr	r1, [pc, #416]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f734:	0013      	movs	r3, r2
    f736:	01db      	lsls	r3, r3, #7
    f738:	1a9b      	subs	r3, r3, r2
    f73a:	005b      	lsls	r3, r3, #1
    f73c:	18cb      	adds	r3, r1, r3
    f73e:	3308      	adds	r3, #8
    f740:	781b      	ldrb	r3, [r3, #0]
    f742:	b2da      	uxtb	r2, r3
    f744:	4b6a      	ldr	r3, [pc, #424]	; (f8f0 <SX1276_RX_Handler+0x720>)
    f746:	785b      	ldrb	r3, [r3, #1]
    f748:	429a      	cmp	r2, r3
    f74a:	d000      	beq.n	f74e <SX1276_RX_Handler+0x57e>
    f74c:	e0da      	b.n	f904 <SX1276_RX_Handler+0x734>
    f74e:	231b      	movs	r3, #27
    f750:	18fb      	adds	r3, r7, r3
    f752:	2200      	movs	r2, #0
    f754:	701a      	strb	r2, [r3, #0]
    f756:	e011      	b.n	f77c <SX1276_RX_Handler+0x5ac>
    f758:	231b      	movs	r3, #27
    f75a:	18fb      	adds	r3, r7, r3
    f75c:	781b      	ldrb	r3, [r3, #0]
    f75e:	221b      	movs	r2, #27
    f760:	18ba      	adds	r2, r7, r2
    f762:	7812      	ldrb	r2, [r2, #0]
    f764:	4963      	ldr	r1, [pc, #396]	; (f8f4 <SX1276_RX_Handler+0x724>)
    f766:	5c8a      	ldrb	r2, [r1, r2]
    f768:	b2d1      	uxtb	r1, r2
    f76a:	003a      	movs	r2, r7
    f76c:	54d1      	strb	r1, [r2, r3]
    f76e:	231b      	movs	r3, #27
    f770:	18fb      	adds	r3, r7, r3
    f772:	781a      	ldrb	r2, [r3, #0]
    f774:	231b      	movs	r3, #27
    f776:	18fb      	adds	r3, r7, r3
    f778:	3201      	adds	r2, #1
    f77a:	701a      	strb	r2, [r3, #0]
    f77c:	231b      	movs	r3, #27
    f77e:	18fb      	adds	r3, r7, r3
    f780:	781b      	ldrb	r3, [r3, #0]
    f782:	2b03      	cmp	r3, #3
    f784:	d9e8      	bls.n	f758 <SX1276_RX_Handler+0x588>
    f786:	4b5b      	ldr	r3, [pc, #364]	; (f8f4 <SX1276_RX_Handler+0x724>)
    f788:	2206      	movs	r2, #6
    f78a:	701a      	strb	r2, [r3, #0]
    f78c:	2317      	movs	r3, #23
    f78e:	18fb      	adds	r3, r7, r3
    f790:	781a      	ldrb	r2, [r3, #0]
    f792:	4950      	ldr	r1, [pc, #320]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f794:	0013      	movs	r3, r2
    f796:	01db      	lsls	r3, r3, #7
    f798:	1a9b      	subs	r3, r3, r2
    f79a:	005b      	lsls	r3, r3, #1
    f79c:	18cb      	adds	r3, r1, r3
    f79e:	3302      	adds	r3, #2
    f7a0:	781b      	ldrb	r3, [r3, #0]
    f7a2:	b2da      	uxtb	r2, r3
    f7a4:	4b53      	ldr	r3, [pc, #332]	; (f8f4 <SX1276_RX_Handler+0x724>)
    f7a6:	705a      	strb	r2, [r3, #1]
    f7a8:	4b52      	ldr	r3, [pc, #328]	; (f8f4 <SX1276_RX_Handler+0x724>)
    f7aa:	2200      	movs	r2, #0
    f7ac:	2102      	movs	r1, #2
    f7ae:	0018      	movs	r0, r3
    f7b0:	4b51      	ldr	r3, [pc, #324]	; (f8f8 <SX1276_RX_Handler+0x728>)
    f7b2:	4798      	blx	r3
    f7b4:	0003      	movs	r3, r0
    f7b6:	001a      	movs	r2, r3
    f7b8:	231c      	movs	r3, #28
    f7ba:	18fb      	adds	r3, r7, r3
    f7bc:	801a      	strh	r2, [r3, #0]
    f7be:	231c      	movs	r3, #28
    f7c0:	18fb      	adds	r3, r7, r3
    f7c2:	881b      	ldrh	r3, [r3, #0]
    f7c4:	0a1b      	lsrs	r3, r3, #8
    f7c6:	b29b      	uxth	r3, r3
    f7c8:	b2da      	uxtb	r2, r3
    f7ca:	4b4a      	ldr	r3, [pc, #296]	; (f8f4 <SX1276_RX_Handler+0x724>)
    f7cc:	709a      	strb	r2, [r3, #2]
    f7ce:	231c      	movs	r3, #28
    f7d0:	18fb      	adds	r3, r7, r3
    f7d2:	881b      	ldrh	r3, [r3, #0]
    f7d4:	b2da      	uxtb	r2, r3
    f7d6:	4b47      	ldr	r3, [pc, #284]	; (f8f4 <SX1276_RX_Handler+0x724>)
    f7d8:	70da      	strb	r2, [r3, #3]
    f7da:	2002      	movs	r0, #2
    f7dc:	4b47      	ldr	r3, [pc, #284]	; (f8fc <SX1276_RX_Handler+0x72c>)
    f7de:	4798      	blx	r3
    f7e0:	4b44      	ldr	r3, [pc, #272]	; (f8f4 <SX1276_RX_Handler+0x724>)
    f7e2:	2104      	movs	r1, #4
    f7e4:	0018      	movs	r0, r3
    f7e6:	4b46      	ldr	r3, [pc, #280]	; (f900 <SX1276_RX_Handler+0x730>)
    f7e8:	4798      	blx	r3
    f7ea:	231b      	movs	r3, #27
    f7ec:	18fb      	adds	r3, r7, r3
    f7ee:	2200      	movs	r2, #0
    f7f0:	701a      	strb	r2, [r3, #0]
    f7f2:	e010      	b.n	f816 <SX1276_RX_Handler+0x646>
    f7f4:	231b      	movs	r3, #27
    f7f6:	18fb      	adds	r3, r7, r3
    f7f8:	781b      	ldrb	r3, [r3, #0]
    f7fa:	221b      	movs	r2, #27
    f7fc:	18ba      	adds	r2, r7, r2
    f7fe:	7812      	ldrb	r2, [r2, #0]
    f800:	0039      	movs	r1, r7
    f802:	5c89      	ldrb	r1, [r1, r2]
    f804:	4a3b      	ldr	r2, [pc, #236]	; (f8f4 <SX1276_RX_Handler+0x724>)
    f806:	54d1      	strb	r1, [r2, r3]
    f808:	231b      	movs	r3, #27
    f80a:	18fb      	adds	r3, r7, r3
    f80c:	781a      	ldrb	r2, [r3, #0]
    f80e:	231b      	movs	r3, #27
    f810:	18fb      	adds	r3, r7, r3
    f812:	3201      	adds	r2, #1
    f814:	701a      	strb	r2, [r3, #0]
    f816:	231b      	movs	r3, #27
    f818:	18fb      	adds	r3, r7, r3
    f81a:	781b      	ldrb	r3, [r3, #0]
    f81c:	2b03      	cmp	r3, #3
    f81e:	d9e9      	bls.n	f7f4 <SX1276_RX_Handler+0x624>
    f820:	2317      	movs	r3, #23
    f822:	18fb      	adds	r3, r7, r3
    f824:	781a      	ldrb	r2, [r3, #0]
    f826:	2317      	movs	r3, #23
    f828:	18fb      	adds	r3, r7, r3
    f82a:	7819      	ldrb	r1, [r3, #0]
    f82c:	4829      	ldr	r0, [pc, #164]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f82e:	24fd      	movs	r4, #253	; 0xfd
    f830:	000b      	movs	r3, r1
    f832:	01db      	lsls	r3, r3, #7
    f834:	1a5b      	subs	r3, r3, r1
    f836:	005b      	lsls	r3, r3, #1
    f838:	18c3      	adds	r3, r0, r3
    f83a:	191b      	adds	r3, r3, r4
    f83c:	781b      	ldrb	r3, [r3, #0]
    f83e:	b2db      	uxtb	r3, r3
    f840:	3b02      	subs	r3, #2
    f842:	b2dc      	uxtb	r4, r3
    f844:	4923      	ldr	r1, [pc, #140]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f846:	20fd      	movs	r0, #253	; 0xfd
    f848:	0013      	movs	r3, r2
    f84a:	01db      	lsls	r3, r3, #7
    f84c:	1a9b      	subs	r3, r3, r2
    f84e:	005b      	lsls	r3, r3, #1
    f850:	18cb      	adds	r3, r1, r3
    f852:	181b      	adds	r3, r3, r0
    f854:	1c22      	adds	r2, r4, #0
    f856:	701a      	strb	r2, [r3, #0]
    f858:	2317      	movs	r3, #23
    f85a:	18fb      	adds	r3, r7, r3
    f85c:	781a      	ldrb	r2, [r3, #0]
    f85e:	491d      	ldr	r1, [pc, #116]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f860:	0013      	movs	r3, r2
    f862:	01db      	lsls	r3, r3, #7
    f864:	1a9b      	subs	r3, r3, r2
    f866:	005b      	lsls	r3, r3, #1
    f868:	5c5a      	ldrb	r2, [r3, r1]
    f86a:	2001      	movs	r0, #1
    f86c:	4302      	orrs	r2, r0
    f86e:	545a      	strb	r2, [r3, r1]
    f870:	2317      	movs	r3, #23
    f872:	18fb      	adds	r3, r7, r3
    f874:	781a      	ldrb	r2, [r3, #0]
    f876:	4b18      	ldr	r3, [pc, #96]	; (f8d8 <SX1276_RX_Handler+0x708>)
    f878:	781b      	ldrb	r3, [r3, #0]
    f87a:	07db      	lsls	r3, r3, #31
    f87c:	0fdb      	lsrs	r3, r3, #31
    f87e:	b2d8      	uxtb	r0, r3
    f880:	4914      	ldr	r1, [pc, #80]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f882:	0013      	movs	r3, r2
    f884:	01db      	lsls	r3, r3, #7
    f886:	1a9b      	subs	r3, r3, r2
    f888:	005b      	lsls	r3, r3, #1
    f88a:	5c5a      	ldrb	r2, [r3, r1]
    f88c:	2401      	movs	r4, #1
    f88e:	4020      	ands	r0, r4
    f890:	1804      	adds	r4, r0, r0
    f892:	2002      	movs	r0, #2
    f894:	4382      	bics	r2, r0
    f896:	1c10      	adds	r0, r2, #0
    f898:	1c22      	adds	r2, r4, #0
    f89a:	4302      	orrs	r2, r0
    f89c:	545a      	strb	r2, [r3, r1]
    f89e:	2317      	movs	r3, #23
    f8a0:	18fb      	adds	r3, r7, r3
    f8a2:	781a      	ldrb	r2, [r3, #0]
    f8a4:	4b0c      	ldr	r3, [pc, #48]	; (f8d8 <SX1276_RX_Handler+0x708>)
    f8a6:	785b      	ldrb	r3, [r3, #1]
    f8a8:	061b      	lsls	r3, r3, #24
    f8aa:	0fdb      	lsrs	r3, r3, #31
    f8ac:	b2d8      	uxtb	r0, r3
    f8ae:	4909      	ldr	r1, [pc, #36]	; (f8d4 <SX1276_RX_Handler+0x704>)
    f8b0:	0013      	movs	r3, r2
    f8b2:	01db      	lsls	r3, r3, #7
    f8b4:	1a9b      	subs	r3, r3, r2
    f8b6:	005b      	lsls	r3, r3, #1
    f8b8:	5c5a      	ldrb	r2, [r3, r1]
    f8ba:	2401      	movs	r4, #1
    f8bc:	4020      	ands	r0, r4
    f8be:	0084      	lsls	r4, r0, #2
    f8c0:	2004      	movs	r0, #4
    f8c2:	4382      	bics	r2, r0
    f8c4:	1c10      	adds	r0, r2, #0
    f8c6:	1c22      	adds	r2, r4, #0
    f8c8:	4302      	orrs	r2, r0
    f8ca:	545a      	strb	r2, [r3, r1]
    f8cc:	4b05      	ldr	r3, [pc, #20]	; (f8e4 <SX1276_RX_Handler+0x714>)
    f8ce:	4798      	blx	r3
    f8d0:	46c0      	nop			; (mov r8, r8)
    f8d2:	e018      	b.n	f906 <SX1276_RX_Handler+0x736>
    f8d4:	20001630 	.word	0x20001630
    f8d8:	200015f4 	.word	0x200015f4
    f8dc:	20001980 	.word	0x20001980
    f8e0:	20000c7c 	.word	0x20000c7c
    f8e4:	0000f90d 	.word	0x0000f90d
    f8e8:	20001624 	.word	0x20001624
    f8ec:	20001290 	.word	0x20001290
    f8f0:	20001140 	.word	0x20001140
    f8f4:	2000182c 	.word	0x2000182c
    f8f8:	0000ec41 	.word	0x0000ec41
    f8fc:	000001a1 	.word	0x000001a1
    f900:	0000f981 	.word	0x0000f981
    f904:	46c0      	nop			; (mov r8, r8)
    f906:	46bd      	mov	sp, r7
    f908:	b008      	add	sp, #32
    f90a:	bdb0      	pop	{r4, r5, r7, pc}

0000f90c <SX1276_RX_INIT>:
    f90c:	b590      	push	{r4, r7, lr}
    f90e:	b083      	sub	sp, #12
    f910:	af00      	add	r7, sp, #0
    f912:	2101      	movs	r1, #1
    f914:	200d      	movs	r0, #13
    f916:	4b16      	ldr	r3, [pc, #88]	; (f970 <SX1276_RX_INIT+0x64>)
    f918:	4798      	blx	r3
    f91a:	2181      	movs	r1, #129	; 0x81
    f91c:	2001      	movs	r0, #1
    f91e:	4b15      	ldr	r3, [pc, #84]	; (f974 <SX1276_RX_INIT+0x68>)
    f920:	4798      	blx	r3
    f922:	2001      	movs	r0, #1
    f924:	4b14      	ldr	r3, [pc, #80]	; (f978 <SX1276_RX_INIT+0x6c>)
    f926:	4798      	blx	r3
    f928:	21ff      	movs	r1, #255	; 0xff
    f92a:	2012      	movs	r0, #18
    f92c:	4b11      	ldr	r3, [pc, #68]	; (f974 <SX1276_RX_INIT+0x68>)
    f92e:	4798      	blx	r3
    f930:	210f      	movs	r1, #15
    f932:	2011      	movs	r0, #17
    f934:	4b0f      	ldr	r3, [pc, #60]	; (f974 <SX1276_RX_INIT+0x68>)
    f936:	4798      	blx	r3
    f938:	2101      	movs	r1, #1
    f93a:	2040      	movs	r0, #64	; 0x40
    f93c:	4b0d      	ldr	r3, [pc, #52]	; (f974 <SX1276_RX_INIT+0x68>)
    f93e:	4798      	blx	r3
    f940:	2121      	movs	r1, #33	; 0x21
    f942:	2040      	movs	r0, #64	; 0x40
    f944:	4b0b      	ldr	r3, [pc, #44]	; (f974 <SX1276_RX_INIT+0x68>)
    f946:	4798      	blx	r3
    f948:	1dfc      	adds	r4, r7, #7
    f94a:	200f      	movs	r0, #15
    f94c:	4b0b      	ldr	r3, [pc, #44]	; (f97c <SX1276_RX_INIT+0x70>)
    f94e:	4798      	blx	r3
    f950:	0003      	movs	r3, r0
    f952:	7023      	strb	r3, [r4, #0]
    f954:	2100      	movs	r1, #0
    f956:	200d      	movs	r0, #13
    f958:	4b06      	ldr	r3, [pc, #24]	; (f974 <SX1276_RX_INIT+0x68>)
    f95a:	4798      	blx	r3
    f95c:	2185      	movs	r1, #133	; 0x85
    f95e:	2001      	movs	r0, #1
    f960:	4b04      	ldr	r3, [pc, #16]	; (f974 <SX1276_RX_INIT+0x68>)
    f962:	4798      	blx	r3
    f964:	2300      	movs	r3, #0
    f966:	0018      	movs	r0, r3
    f968:	46bd      	mov	sp, r7
    f96a:	b003      	add	sp, #12
    f96c:	bd90      	pop	{r4, r7, pc}
    f96e:	46c0      	nop			; (mov r8, r8)
    f970:	0000ed81 	.word	0x0000ed81
    f974:	00006f81 	.word	0x00006f81
    f978:	000001a1 	.word	0x000001a1
    f97c:	00006fcd 	.word	0x00006fcd

0000f980 <SX1276_TX>:
    f980:	b590      	push	{r4, r7, lr}
    f982:	b085      	sub	sp, #20
    f984:	af00      	add	r7, sp, #0
    f986:	6078      	str	r0, [r7, #4]
    f988:	000a      	movs	r2, r1
    f98a:	1cfb      	adds	r3, r7, #3
    f98c:	701a      	strb	r2, [r3, #0]
    f98e:	230e      	movs	r3, #14
    f990:	18fb      	adds	r3, r7, r3
    f992:	2200      	movs	r2, #0
    f994:	701a      	strb	r2, [r3, #0]
    f996:	4b32      	ldr	r3, [pc, #200]	; (fa60 <SX1276_TX+0xe0>)
    f998:	781b      	ldrb	r3, [r3, #0]
    f99a:	2b14      	cmp	r3, #20
    f99c:	d104      	bne.n	f9a8 <SX1276_TX+0x28>
    f99e:	2100      	movs	r1, #0
    f9a0:	200d      	movs	r0, #13
    f9a2:	4b30      	ldr	r3, [pc, #192]	; (fa64 <SX1276_TX+0xe4>)
    f9a4:	4798      	blx	r3
    f9a6:	e003      	b.n	f9b0 <SX1276_TX+0x30>
    f9a8:	2101      	movs	r1, #1
    f9aa:	200d      	movs	r0, #13
    f9ac:	4b2d      	ldr	r3, [pc, #180]	; (fa64 <SX1276_TX+0xe4>)
    f9ae:	4798      	blx	r3
    f9b0:	21ff      	movs	r1, #255	; 0xff
    f9b2:	2012      	movs	r0, #18
    f9b4:	4b2c      	ldr	r3, [pc, #176]	; (fa68 <SX1276_TX+0xe8>)
    f9b6:	4798      	blx	r3
    f9b8:	21f7      	movs	r1, #247	; 0xf7
    f9ba:	2011      	movs	r0, #17
    f9bc:	4b2a      	ldr	r3, [pc, #168]	; (fa68 <SX1276_TX+0xe8>)
    f9be:	4798      	blx	r3
    f9c0:	2101      	movs	r1, #1
    f9c2:	2040      	movs	r0, #64	; 0x40
    f9c4:	4b28      	ldr	r3, [pc, #160]	; (fa68 <SX1276_TX+0xe8>)
    f9c6:	4798      	blx	r3
    f9c8:	1cfb      	adds	r3, r7, #3
    f9ca:	781b      	ldrb	r3, [r3, #0]
    f9cc:	0019      	movs	r1, r3
    f9ce:	2022      	movs	r0, #34	; 0x22
    f9d0:	4b25      	ldr	r3, [pc, #148]	; (fa68 <SX1276_TX+0xe8>)
    f9d2:	4798      	blx	r3
    f9d4:	230d      	movs	r3, #13
    f9d6:	18fc      	adds	r4, r7, r3
    f9d8:	200e      	movs	r0, #14
    f9da:	4b24      	ldr	r3, [pc, #144]	; (fa6c <SX1276_TX+0xec>)
    f9dc:	4798      	blx	r3
    f9de:	0003      	movs	r3, r0
    f9e0:	7023      	strb	r3, [r4, #0]
    f9e2:	230d      	movs	r3, #13
    f9e4:	18fb      	adds	r3, r7, r3
    f9e6:	781b      	ldrb	r3, [r3, #0]
    f9e8:	0019      	movs	r1, r3
    f9ea:	200d      	movs	r0, #13
    f9ec:	4b1e      	ldr	r3, [pc, #120]	; (fa68 <SX1276_TX+0xe8>)
    f9ee:	4798      	blx	r3
    f9f0:	2001      	movs	r0, #1
    f9f2:	4b1f      	ldr	r3, [pc, #124]	; (fa70 <SX1276_TX+0xf0>)
    f9f4:	4798      	blx	r3
    f9f6:	2181      	movs	r1, #129	; 0x81
    f9f8:	2001      	movs	r0, #1
    f9fa:	4b1b      	ldr	r3, [pc, #108]	; (fa68 <SX1276_TX+0xe8>)
    f9fc:	4798      	blx	r3
    f9fe:	2001      	movs	r0, #1
    fa00:	4b1a      	ldr	r3, [pc, #104]	; (fa6c <SX1276_TX+0xec>)
    fa02:	4798      	blx	r3
    fa04:	0003      	movs	r3, r0
    fa06:	001a      	movs	r2, r3
    fa08:	4b1a      	ldr	r3, [pc, #104]	; (fa74 <SX1276_TX+0xf4>)
    fa0a:	701a      	strb	r2, [r3, #0]
    fa0c:	1cfb      	adds	r3, r7, #3
    fa0e:	781a      	ldrb	r2, [r3, #0]
    fa10:	687b      	ldr	r3, [r7, #4]
    fa12:	0019      	movs	r1, r3
    fa14:	2000      	movs	r0, #0
    fa16:	4b18      	ldr	r3, [pc, #96]	; (fa78 <SX1276_TX+0xf8>)
    fa18:	4798      	blx	r3
    fa1a:	2183      	movs	r1, #131	; 0x83
    fa1c:	2001      	movs	r0, #1
    fa1e:	4b12      	ldr	r3, [pc, #72]	; (fa68 <SX1276_TX+0xe8>)
    fa20:	4798      	blx	r3
    fa22:	230f      	movs	r3, #15
    fa24:	18fc      	adds	r4, r7, r3
    fa26:	2012      	movs	r0, #18
    fa28:	4b10      	ldr	r3, [pc, #64]	; (fa6c <SX1276_TX+0xec>)
    fa2a:	4798      	blx	r3
    fa2c:	0003      	movs	r3, r0
    fa2e:	7023      	strb	r3, [r4, #0]
    fa30:	e006      	b.n	fa40 <SX1276_TX+0xc0>
    fa32:	230f      	movs	r3, #15
    fa34:	18fc      	adds	r4, r7, r3
    fa36:	2012      	movs	r0, #18
    fa38:	4b0c      	ldr	r3, [pc, #48]	; (fa6c <SX1276_TX+0xec>)
    fa3a:	4798      	blx	r3
    fa3c:	0003      	movs	r3, r0
    fa3e:	7023      	strb	r3, [r4, #0]
    fa40:	230f      	movs	r3, #15
    fa42:	18fb      	adds	r3, r7, r3
    fa44:	781b      	ldrb	r3, [r3, #0]
    fa46:	2208      	movs	r2, #8
    fa48:	4013      	ands	r3, r2
    fa4a:	d0f2      	beq.n	fa32 <SX1276_TX+0xb2>
    fa4c:	21ff      	movs	r1, #255	; 0xff
    fa4e:	2012      	movs	r0, #18
    fa50:	4b05      	ldr	r3, [pc, #20]	; (fa68 <SX1276_TX+0xe8>)
    fa52:	4798      	blx	r3
    fa54:	2300      	movs	r3, #0
    fa56:	0018      	movs	r0, r3
    fa58:	46bd      	mov	sp, r7
    fa5a:	b005      	add	sp, #20
    fa5c:	bd90      	pop	{r4, r7, pc}
    fa5e:	46c0      	nop			; (mov r8, r8)
    fa60:	2000002e 	.word	0x2000002e
    fa64:	0000ed81 	.word	0x0000ed81
    fa68:	00006f81 	.word	0x00006f81
    fa6c:	00006fcd 	.word	0x00006fcd
    fa70:	000001a1 	.word	0x000001a1
    fa74:	20001984 	.word	0x20001984
    fa78:	00007021 	.word	0x00007021

0000fa7c <TxPacket>:
    fa7c:	b580      	push	{r7, lr}
    fa7e:	b086      	sub	sp, #24
    fa80:	af00      	add	r7, sp, #0
    fa82:	0002      	movs	r2, r0
    fa84:	1dfb      	adds	r3, r7, #7
    fa86:	701a      	strb	r2, [r3, #0]
    fa88:	1dbb      	adds	r3, r7, #6
    fa8a:	1c0a      	adds	r2, r1, #0
    fa8c:	701a      	strb	r2, [r3, #0]
    fa8e:	2316      	movs	r3, #22
    fa90:	18fb      	adds	r3, r7, r3
    fa92:	2200      	movs	r2, #0
    fa94:	701a      	strb	r2, [r3, #0]
    fa96:	e025      	b.n	fae4 <TxPacket+0x68>
    fa98:	2316      	movs	r3, #22
    fa9a:	18fb      	adds	r3, r7, r3
    fa9c:	781a      	ldrb	r2, [r3, #0]
    fa9e:	2316      	movs	r3, #22
    faa0:	18fb      	adds	r3, r7, r3
    faa2:	3201      	adds	r2, #1
    faa4:	701a      	strb	r2, [r3, #0]
    faa6:	2316      	movs	r3, #22
    faa8:	18fb      	adds	r3, r7, r3
    faaa:	781b      	ldrb	r3, [r3, #0]
    faac:	2b09      	cmp	r3, #9
    faae:	d904      	bls.n	faba <TxPacket+0x3e>
    fab0:	2317      	movs	r3, #23
    fab2:	18fb      	adds	r3, r7, r3
    fab4:	2200      	movs	r2, #0
    fab6:	701a      	strb	r2, [r3, #0]
    fab8:	e01d      	b.n	faf6 <TxPacket+0x7a>
    faba:	2315      	movs	r3, #21
    fabc:	18fb      	adds	r3, r7, r3
    fabe:	2200      	movs	r2, #0
    fac0:	701a      	strb	r2, [r3, #0]
    fac2:	4b20      	ldr	r3, [pc, #128]	; (fb44 <TxPacket+0xc8>)
    fac4:	4798      	blx	r3
    fac6:	0003      	movs	r3, r0
    fac8:	60fb      	str	r3, [r7, #12]
    faca:	4b1e      	ldr	r3, [pc, #120]	; (fb44 <TxPacket+0xc8>)
    facc:	4798      	blx	r3
    face:	0003      	movs	r3, r0
    fad0:	613b      	str	r3, [r7, #16]
    fad2:	693a      	ldr	r2, [r7, #16]
    fad4:	68fb      	ldr	r3, [r7, #12]
    fad6:	1ad3      	subs	r3, r2, r3
    fad8:	4a1b      	ldr	r2, [pc, #108]	; (fb48 <TxPacket+0xcc>)
    fada:	4293      	cmp	r3, r2
    fadc:	d9f5      	bls.n	faca <TxPacket+0x4e>
    fade:	2032      	movs	r0, #50	; 0x32
    fae0:	4b1a      	ldr	r3, [pc, #104]	; (fb4c <TxPacket+0xd0>)
    fae2:	4798      	blx	r3
    fae4:	4b1a      	ldr	r3, [pc, #104]	; (fb50 <TxPacket+0xd4>)
    fae6:	4798      	blx	r3
    fae8:	0003      	movs	r3, r0
    faea:	001a      	movs	r2, r3
    faec:	2301      	movs	r3, #1
    faee:	4053      	eors	r3, r2
    faf0:	b2db      	uxtb	r3, r3
    faf2:	2b00      	cmp	r3, #0
    faf4:	d1d0      	bne.n	fa98 <TxPacket+0x1c>
    faf6:	2316      	movs	r3, #22
    faf8:	18fb      	adds	r3, r7, r3
    fafa:	781b      	ldrb	r3, [r3, #0]
    fafc:	2b09      	cmp	r3, #9
    fafe:	d819      	bhi.n	fb34 <TxPacket+0xb8>
    fb00:	1dfb      	adds	r3, r7, #7
    fb02:	781a      	ldrb	r2, [r3, #0]
    fb04:	4b13      	ldr	r3, [pc, #76]	; (fb54 <TxPacket+0xd8>)
    fb06:	0011      	movs	r1, r2
    fb08:	0018      	movs	r0, r3
    fb0a:	4b13      	ldr	r3, [pc, #76]	; (fb58 <TxPacket+0xdc>)
    fb0c:	4798      	blx	r3
    fb0e:	4b13      	ldr	r3, [pc, #76]	; (fb5c <TxPacket+0xe0>)
    fb10:	4798      	blx	r3
    fb12:	4b0c      	ldr	r3, [pc, #48]	; (fb44 <TxPacket+0xc8>)
    fb14:	4798      	blx	r3
    fb16:	0003      	movs	r3, r0
    fb18:	60fb      	str	r3, [r7, #12]
    fb1a:	4b0a      	ldr	r3, [pc, #40]	; (fb44 <TxPacket+0xc8>)
    fb1c:	4798      	blx	r3
    fb1e:	0003      	movs	r3, r0
    fb20:	613b      	str	r3, [r7, #16]
    fb22:	693a      	ldr	r2, [r7, #16]
    fb24:	68fb      	ldr	r3, [r7, #12]
    fb26:	1ad3      	subs	r3, r2, r3
    fb28:	2bcb      	cmp	r3, #203	; 0xcb
    fb2a:	d9f6      	bls.n	fb1a <TxPacket+0x9e>
    fb2c:	2317      	movs	r3, #23
    fb2e:	18fb      	adds	r3, r7, r3
    fb30:	2201      	movs	r2, #1
    fb32:	701a      	strb	r2, [r3, #0]
    fb34:	2317      	movs	r3, #23
    fb36:	18fb      	adds	r3, r7, r3
    fb38:	781b      	ldrb	r3, [r3, #0]
    fb3a:	0018      	movs	r0, r3
    fb3c:	46bd      	mov	sp, r7
    fb3e:	b006      	add	sp, #24
    fb40:	bd80      	pop	{r7, pc}
    fb42:	46c0      	nop			; (mov r8, r8)
    fb44:	0000ebad 	.word	0x0000ebad
    fb48:	000007fc 	.word	0x000007fc
    fb4c:	000001a1 	.word	0x000001a1
    fb50:	0000fb61 	.word	0x0000fb61
    fb54:	2000182c 	.word	0x2000182c
    fb58:	0000f981 	.word	0x0000f981
    fb5c:	0000f90d 	.word	0x0000f90d

0000fb60 <SX1276_TX_LBT>:
    fb60:	b590      	push	{r4, r7, lr}
    fb62:	b087      	sub	sp, #28
    fb64:	af00      	add	r7, sp, #0
    fb66:	2300      	movs	r3, #0
    fb68:	613b      	str	r3, [r7, #16]
    fb6a:	2316      	movs	r3, #22
    fb6c:	18fb      	adds	r3, r7, r3
    fb6e:	2200      	movs	r2, #0
    fb70:	801a      	strh	r2, [r3, #0]
    fb72:	4b20      	ldr	r3, [pc, #128]	; (fbf4 <SX1276_TX_LBT+0x94>)
    fb74:	4798      	blx	r3
    fb76:	0003      	movs	r3, r0
    fb78:	603b      	str	r3, [r7, #0]
    fb7a:	230e      	movs	r3, #14
    fb7c:	18fc      	adds	r4, r7, r3
    fb7e:	2001      	movs	r0, #1
    fb80:	4b1d      	ldr	r3, [pc, #116]	; (fbf8 <SX1276_TX_LBT+0x98>)
    fb82:	4798      	blx	r3
    fb84:	0003      	movs	r3, r0
    fb86:	8023      	strh	r3, [r4, #0]
    fb88:	230e      	movs	r3, #14
    fb8a:	18fb      	adds	r3, r7, r3
    fb8c:	2200      	movs	r2, #0
    fb8e:	5e9b      	ldrsh	r3, [r3, r2]
    fb90:	693a      	ldr	r2, [r7, #16]
    fb92:	18d3      	adds	r3, r2, r3
    fb94:	613b      	str	r3, [r7, #16]
    fb96:	2316      	movs	r3, #22
    fb98:	18fb      	adds	r3, r7, r3
    fb9a:	881a      	ldrh	r2, [r3, #0]
    fb9c:	2316      	movs	r3, #22
    fb9e:	18fb      	adds	r3, r7, r3
    fba0:	3201      	adds	r2, #1
    fba2:	801a      	strh	r2, [r3, #0]
    fba4:	4b13      	ldr	r3, [pc, #76]	; (fbf4 <SX1276_TX_LBT+0x94>)
    fba6:	4798      	blx	r3
    fba8:	0003      	movs	r3, r0
    fbaa:	607b      	str	r3, [r7, #4]
    fbac:	687a      	ldr	r2, [r7, #4]
    fbae:	683b      	ldr	r3, [r7, #0]
    fbb0:	1ad3      	subs	r3, r2, r3
    fbb2:	2b64      	cmp	r3, #100	; 0x64
    fbb4:	d800      	bhi.n	fbb8 <SX1276_TX_LBT+0x58>
    fbb6:	e7e0      	b.n	fb7a <SX1276_TX_LBT+0x1a>
    fbb8:	46c0      	nop			; (mov r8, r8)
    fbba:	2316      	movs	r3, #22
    fbbc:	18fb      	adds	r3, r7, r3
    fbbe:	881a      	ldrh	r2, [r3, #0]
    fbc0:	4b0e      	ldr	r3, [pc, #56]	; (fbfc <SX1276_TX_LBT+0x9c>)
    fbc2:	0011      	movs	r1, r2
    fbc4:	6938      	ldr	r0, [r7, #16]
    fbc6:	4798      	blx	r3
    fbc8:	0003      	movs	r3, r0
    fbca:	001a      	movs	r2, r3
    fbcc:	230c      	movs	r3, #12
    fbce:	18fb      	adds	r3, r7, r3
    fbd0:	801a      	strh	r2, [r3, #0]
    fbd2:	4b0b      	ldr	r3, [pc, #44]	; (fc00 <SX1276_TX_LBT+0xa0>)
    fbd4:	681b      	ldr	r3, [r3, #0]
    fbd6:	60bb      	str	r3, [r7, #8]
    fbd8:	230c      	movs	r3, #12
    fbda:	18fb      	adds	r3, r7, r3
    fbdc:	2200      	movs	r2, #0
    fbde:	5e9a      	ldrsh	r2, [r3, r2]
    fbe0:	68bb      	ldr	r3, [r7, #8]
    fbe2:	429a      	cmp	r2, r3
    fbe4:	da01      	bge.n	fbea <SX1276_TX_LBT+0x8a>
    fbe6:	2301      	movs	r3, #1
    fbe8:	e000      	b.n	fbec <SX1276_TX_LBT+0x8c>
    fbea:	2300      	movs	r3, #0
    fbec:	0018      	movs	r0, r3
    fbee:	46bd      	mov	sp, r7
    fbf0:	b007      	add	sp, #28
    fbf2:	bd90      	pop	{r4, r7, pc}
    fbf4:	0000ebad 	.word	0x0000ebad
    fbf8:	00010151 	.word	0x00010151
    fbfc:	00014aa1 	.word	0x00014aa1
    fc00:	2000001c 	.word	0x2000001c

0000fc04 <MiMAC_SetChannel>:
    fc04:	b590      	push	{r4, r7, lr}
    fc06:	b085      	sub	sp, #20
    fc08:	af00      	add	r7, sp, #0
    fc0a:	0002      	movs	r2, r0
    fc0c:	1dfb      	adds	r3, r7, #7
    fc0e:	701a      	strb	r2, [r3, #0]
    fc10:	1dfb      	adds	r3, r7, #7
    fc12:	781b      	ldrb	r3, [r3, #0]
    fc14:	3b01      	subs	r3, #1
    fc16:	4a18      	ldr	r2, [pc, #96]	; (fc78 <MiMAC_SetChannel+0x74>)
    fc18:	4353      	muls	r3, r2
    fc1a:	4a18      	ldr	r2, [pc, #96]	; (fc7c <MiMAC_SetChannel+0x78>)
    fc1c:	189a      	adds	r2, r3, r2
    fc1e:	4b18      	ldr	r3, [pc, #96]	; (fc80 <MiMAC_SetChannel+0x7c>)
    fc20:	0010      	movs	r0, r2
    fc22:	4798      	blx	r3
    fc24:	4c17      	ldr	r4, [pc, #92]	; (fc84 <MiMAC_SetChannel+0x80>)
    fc26:	2200      	movs	r2, #0
    fc28:	4b17      	ldr	r3, [pc, #92]	; (fc88 <MiMAC_SetChannel+0x84>)
    fc2a:	47a0      	blx	r4
    fc2c:	0003      	movs	r3, r0
    fc2e:	000c      	movs	r4, r1
    fc30:	0019      	movs	r1, r3
    fc32:	0022      	movs	r2, r4
    fc34:	4b15      	ldr	r3, [pc, #84]	; (fc8c <MiMAC_SetChannel+0x88>)
    fc36:	0008      	movs	r0, r1
    fc38:	0011      	movs	r1, r2
    fc3a:	4798      	blx	r3
    fc3c:	0003      	movs	r3, r0
    fc3e:	60fb      	str	r3, [r7, #12]
    fc40:	68fb      	ldr	r3, [r7, #12]
    fc42:	0c1b      	lsrs	r3, r3, #16
    fc44:	b2db      	uxtb	r3, r3
    fc46:	0019      	movs	r1, r3
    fc48:	2006      	movs	r0, #6
    fc4a:	4b11      	ldr	r3, [pc, #68]	; (fc90 <MiMAC_SetChannel+0x8c>)
    fc4c:	4798      	blx	r3
    fc4e:	68fb      	ldr	r3, [r7, #12]
    fc50:	0a1b      	lsrs	r3, r3, #8
    fc52:	b2db      	uxtb	r3, r3
    fc54:	0019      	movs	r1, r3
    fc56:	2007      	movs	r0, #7
    fc58:	4b0d      	ldr	r3, [pc, #52]	; (fc90 <MiMAC_SetChannel+0x8c>)
    fc5a:	4798      	blx	r3
    fc5c:	68fb      	ldr	r3, [r7, #12]
    fc5e:	b2db      	uxtb	r3, r3
    fc60:	0019      	movs	r1, r3
    fc62:	2008      	movs	r0, #8
    fc64:	4b0a      	ldr	r3, [pc, #40]	; (fc90 <MiMAC_SetChannel+0x8c>)
    fc66:	4798      	blx	r3
    fc68:	2014      	movs	r0, #20
    fc6a:	4b0a      	ldr	r3, [pc, #40]	; (fc94 <MiMAC_SetChannel+0x90>)
    fc6c:	4798      	blx	r3
    fc6e:	2301      	movs	r3, #1
    fc70:	0018      	movs	r0, r3
    fc72:	46bd      	mov	sp, r7
    fc74:	b005      	add	sp, #20
    fc76:	bd90      	pop	{r4, r7, pc}
    fc78:	00030d40 	.word	0x00030d40
    fc7c:	36a9d5e0 	.word	0x36a9d5e0
    fc80:	00017151 	.word	0x00017151
    fc84:	00015f55 	.word	0x00015f55
    fc88:	404e8480 	.word	0x404e8480
    fc8c:	00014db9 	.word	0x00014db9
    fc90:	00006f81 	.word	0x00006f81
    fc94:	000001a1 	.word	0x000001a1

0000fc98 <MiMAC_Init>:
    fc98:	b580      	push	{r7, lr}
    fc9a:	b084      	sub	sp, #16
    fc9c:	af00      	add	r7, sp, #0
    fc9e:	003b      	movs	r3, r7
    fca0:	6018      	str	r0, [r3, #0]
    fca2:	6059      	str	r1, [r3, #4]
    fca4:	4b14      	ldr	r3, [pc, #80]	; (fcf8 <MiMAC_Init+0x60>)
    fca6:	003a      	movs	r2, r7
    fca8:	ca03      	ldmia	r2!, {r0, r1}
    fcaa:	c303      	stmia	r3!, {r0, r1}
    fcac:	4b13      	ldr	r3, [pc, #76]	; (fcfc <MiMAC_Init+0x64>)
    fcae:	2200      	movs	r2, #0
    fcb0:	701a      	strb	r2, [r3, #0]
    fcb2:	4b13      	ldr	r3, [pc, #76]	; (fd00 <MiMAC_Init+0x68>)
    fcb4:	22ff      	movs	r2, #255	; 0xff
    fcb6:	701a      	strb	r2, [r3, #0]
    fcb8:	230f      	movs	r3, #15
    fcba:	18fb      	adds	r3, r7, r3
    fcbc:	2200      	movs	r2, #0
    fcbe:	701a      	strb	r2, [r3, #0]
    fcc0:	e010      	b.n	fce4 <MiMAC_Init+0x4c>
    fcc2:	230f      	movs	r3, #15
    fcc4:	18fb      	adds	r3, r7, r3
    fcc6:	781a      	ldrb	r2, [r3, #0]
    fcc8:	490e      	ldr	r1, [pc, #56]	; (fd04 <MiMAC_Init+0x6c>)
    fcca:	0013      	movs	r3, r2
    fccc:	01db      	lsls	r3, r3, #7
    fcce:	1a9b      	subs	r3, r3, r2
    fcd0:	005b      	lsls	r3, r3, #1
    fcd2:	2200      	movs	r2, #0
    fcd4:	545a      	strb	r2, [r3, r1]
    fcd6:	230f      	movs	r3, #15
    fcd8:	18fb      	adds	r3, r7, r3
    fcda:	781a      	ldrb	r2, [r3, #0]
    fcdc:	230f      	movs	r3, #15
    fcde:	18fb      	adds	r3, r7, r3
    fce0:	3201      	adds	r2, #1
    fce2:	701a      	strb	r2, [r3, #0]
    fce4:	230f      	movs	r3, #15
    fce6:	18fb      	adds	r3, r7, r3
    fce8:	781b      	ldrb	r3, [r3, #0]
    fcea:	2b01      	cmp	r3, #1
    fcec:	d9e9      	bls.n	fcc2 <MiMAC_Init+0x2a>
    fcee:	2301      	movs	r3, #1
    fcf0:	0018      	movs	r0, r3
    fcf2:	46bd      	mov	sp, r7
    fcf4:	b004      	add	sp, #16
    fcf6:	bd80      	pop	{r7, pc}
    fcf8:	20001624 	.word	0x20001624
    fcfc:	20001620 	.word	0x20001620
    fd00:	2000162c 	.word	0x2000162c
    fd04:	20001630 	.word	0x20001630

0000fd08 <MiMAC_SendPacket>:
    fd08:	b590      	push	{r4, r7, lr}
    fd0a:	b087      	sub	sp, #28
    fd0c:	af00      	add	r7, sp, #0
    fd0e:	2408      	movs	r4, #8
    fd10:	193c      	adds	r4, r7, r4
    fd12:	6020      	str	r0, [r4, #0]
    fd14:	6061      	str	r1, [r4, #4]
    fd16:	607a      	str	r2, [r7, #4]
    fd18:	001a      	movs	r2, r3
    fd1a:	1cfb      	adds	r3, r7, #3
    fd1c:	701a      	strb	r2, [r3, #0]
    fd1e:	1cfb      	adds	r3, r7, #3
    fd20:	781b      	ldrb	r3, [r3, #0]
    fd22:	2bdc      	cmp	r3, #220	; 0xdc
    fd24:	d901      	bls.n	fd2a <MiMAC_SendPacket+0x22>
    fd26:	2300      	movs	r3, #0
    fd28:	e12b      	b.n	ff82 <MiMAC_SendPacket+0x27a>
    fd2a:	2308      	movs	r3, #8
    fd2c:	18fb      	adds	r3, r7, r3
    fd2e:	781b      	ldrb	r3, [r3, #0]
    fd30:	2203      	movs	r2, #3
    fd32:	4013      	ands	r3, r2
    fd34:	b2db      	uxtb	r3, r3
    fd36:	2b01      	cmp	r3, #1
    fd38:	d106      	bne.n	fd48 <MiMAC_SendPacket+0x40>
    fd3a:	2308      	movs	r3, #8
    fd3c:	18fb      	adds	r3, r7, r3
    fd3e:	781a      	ldrb	r2, [r3, #0]
    fd40:	2180      	movs	r1, #128	; 0x80
    fd42:	4249      	negs	r1, r1
    fd44:	430a      	orrs	r2, r1
    fd46:	701a      	strb	r2, [r3, #0]
    fd48:	2308      	movs	r3, #8
    fd4a:	18fb      	adds	r3, r7, r3
    fd4c:	781a      	ldrb	r2, [r3, #0]
    fd4e:	4b8f      	ldr	r3, [pc, #572]	; (ff8c <MiMAC_SendPacket+0x284>)
    fd50:	701a      	strb	r2, [r3, #0]
    fd52:	4b8f      	ldr	r3, [pc, #572]	; (ff90 <MiMAC_SendPacket+0x288>)
    fd54:	781b      	ldrb	r3, [r3, #0]
    fd56:	1c5a      	adds	r2, r3, #1
    fd58:	b2d1      	uxtb	r1, r2
    fd5a:	4a8d      	ldr	r2, [pc, #564]	; (ff90 <MiMAC_SendPacket+0x288>)
    fd5c:	7011      	strb	r1, [r2, #0]
    fd5e:	4a8b      	ldr	r2, [pc, #556]	; (ff8c <MiMAC_SendPacket+0x284>)
    fd60:	7053      	strb	r3, [r2, #1]
    fd62:	4b8a      	ldr	r3, [pc, #552]	; (ff8c <MiMAC_SendPacket+0x284>)
    fd64:	785b      	ldrb	r3, [r3, #1]
    fd66:	b2da      	uxtb	r2, r3
    fd68:	4b8a      	ldr	r3, [pc, #552]	; (ff94 <MiMAC_SendPacket+0x28c>)
    fd6a:	701a      	strb	r2, [r3, #0]
    fd6c:	4b87      	ldr	r3, [pc, #540]	; (ff8c <MiMAC_SendPacket+0x284>)
    fd6e:	2200      	movs	r2, #0
    fd70:	2102      	movs	r1, #2
    fd72:	0018      	movs	r0, r3
    fd74:	4b88      	ldr	r3, [pc, #544]	; (ff98 <MiMAC_SendPacket+0x290>)
    fd76:	4798      	blx	r3
    fd78:	0003      	movs	r3, r0
    fd7a:	b29a      	uxth	r2, r3
    fd7c:	2314      	movs	r3, #20
    fd7e:	18fb      	adds	r3, r7, r3
    fd80:	801a      	strh	r2, [r3, #0]
    fd82:	2316      	movs	r3, #22
    fd84:	18fb      	adds	r3, r7, r3
    fd86:	2202      	movs	r2, #2
    fd88:	701a      	strb	r2, [r3, #0]
    fd8a:	2308      	movs	r3, #8
    fd8c:	18fb      	adds	r3, r7, r3
    fd8e:	781b      	ldrb	r3, [r3, #0]
    fd90:	2240      	movs	r2, #64	; 0x40
    fd92:	4013      	ands	r3, r2
    fd94:	b2db      	uxtb	r3, r3
    fd96:	2b00      	cmp	r3, #0
    fd98:	d027      	beq.n	fdea <MiMAC_SendPacket+0xe2>
    fd9a:	2317      	movs	r3, #23
    fd9c:	18fb      	adds	r3, r7, r3
    fd9e:	2200      	movs	r2, #0
    fda0:	701a      	strb	r2, [r3, #0]
    fda2:	e018      	b.n	fdd6 <MiMAC_SendPacket+0xce>
    fda4:	2316      	movs	r3, #22
    fda6:	18fb      	adds	r3, r7, r3
    fda8:	781b      	ldrb	r3, [r3, #0]
    fdaa:	2216      	movs	r2, #22
    fdac:	18ba      	adds	r2, r7, r2
    fdae:	1c59      	adds	r1, r3, #1
    fdb0:	7011      	strb	r1, [r2, #0]
    fdb2:	0019      	movs	r1, r3
    fdb4:	2308      	movs	r3, #8
    fdb6:	18fb      	adds	r3, r7, r3
    fdb8:	685a      	ldr	r2, [r3, #4]
    fdba:	2317      	movs	r3, #23
    fdbc:	18fb      	adds	r3, r7, r3
    fdbe:	781b      	ldrb	r3, [r3, #0]
    fdc0:	18d3      	adds	r3, r2, r3
    fdc2:	781a      	ldrb	r2, [r3, #0]
    fdc4:	4b71      	ldr	r3, [pc, #452]	; (ff8c <MiMAC_SendPacket+0x284>)
    fdc6:	545a      	strb	r2, [r3, r1]
    fdc8:	2317      	movs	r3, #23
    fdca:	18fb      	adds	r3, r7, r3
    fdcc:	781a      	ldrb	r2, [r3, #0]
    fdce:	2317      	movs	r3, #23
    fdd0:	18fb      	adds	r3, r7, r3
    fdd2:	3201      	adds	r2, #1
    fdd4:	701a      	strb	r2, [r3, #0]
    fdd6:	2317      	movs	r3, #23
    fdd8:	18fb      	adds	r3, r7, r3
    fdda:	781b      	ldrb	r3, [r3, #0]
    fddc:	4a6f      	ldr	r2, [pc, #444]	; (ff9c <MiMAC_SendPacket+0x294>)
    fdde:	7812      	ldrb	r2, [r2, #0]
    fde0:	0652      	lsls	r2, r2, #25
    fde2:	0f12      	lsrs	r2, r2, #28
    fde4:	b2d2      	uxtb	r2, r2
    fde6:	4293      	cmp	r3, r2
    fde8:	dbdc      	blt.n	fda4 <MiMAC_SendPacket+0x9c>
    fdea:	2308      	movs	r3, #8
    fdec:	18fb      	adds	r3, r7, r3
    fdee:	781b      	ldrb	r3, [r3, #0]
    fdf0:	2204      	movs	r2, #4
    fdf2:	4013      	ands	r3, r2
    fdf4:	b2db      	uxtb	r3, r3
    fdf6:	2b00      	cmp	r3, #0
    fdf8:	d11b      	bne.n	fe32 <MiMAC_SendPacket+0x12a>
    fdfa:	2308      	movs	r3, #8
    fdfc:	18fb      	adds	r3, r7, r3
    fdfe:	781b      	ldrb	r3, [r3, #0]
    fe00:	2203      	movs	r2, #3
    fe02:	4013      	ands	r3, r2
    fe04:	b2db      	uxtb	r3, r3
    fe06:	2b03      	cmp	r3, #3
    fe08:	d013      	beq.n	fe32 <MiMAC_SendPacket+0x12a>
    fe0a:	2308      	movs	r3, #8
    fe0c:	18fb      	adds	r3, r7, r3
    fe0e:	6858      	ldr	r0, [r3, #4]
    fe10:	4b62      	ldr	r3, [pc, #392]	; (ff9c <MiMAC_SendPacket+0x294>)
    fe12:	781b      	ldrb	r3, [r3, #0]
    fe14:	065b      	lsls	r3, r3, #25
    fe16:	0f1b      	lsrs	r3, r3, #28
    fe18:	b2db      	uxtb	r3, r3
    fe1a:	b259      	sxtb	r1, r3
    fe1c:	2314      	movs	r3, #20
    fe1e:	18fb      	adds	r3, r7, r3
    fe20:	881b      	ldrh	r3, [r3, #0]
    fe22:	001a      	movs	r2, r3
    fe24:	4b5c      	ldr	r3, [pc, #368]	; (ff98 <MiMAC_SendPacket+0x290>)
    fe26:	4798      	blx	r3
    fe28:	0003      	movs	r3, r0
    fe2a:	b29a      	uxth	r2, r3
    fe2c:	2314      	movs	r3, #20
    fe2e:	18fb      	adds	r3, r7, r3
    fe30:	801a      	strh	r2, [r3, #0]
    fe32:	2308      	movs	r3, #8
    fe34:	18fb      	adds	r3, r7, r3
    fe36:	781b      	ldrb	r3, [r3, #0]
    fe38:	227f      	movs	r2, #127	; 0x7f
    fe3a:	4393      	bics	r3, r2
    fe3c:	b2db      	uxtb	r3, r3
    fe3e:	2b00      	cmp	r3, #0
    fe40:	d042      	beq.n	fec8 <MiMAC_SendPacket+0x1c0>
    fe42:	2317      	movs	r3, #23
    fe44:	18fb      	adds	r3, r7, r3
    fe46:	2200      	movs	r2, #0
    fe48:	701a      	strb	r2, [r3, #0]
    fe4a:	e017      	b.n	fe7c <MiMAC_SendPacket+0x174>
    fe4c:	2316      	movs	r3, #22
    fe4e:	18fb      	adds	r3, r7, r3
    fe50:	781b      	ldrb	r3, [r3, #0]
    fe52:	2216      	movs	r2, #22
    fe54:	18ba      	adds	r2, r7, r2
    fe56:	1c59      	adds	r1, r3, #1
    fe58:	7011      	strb	r1, [r2, #0]
    fe5a:	0019      	movs	r1, r3
    fe5c:	4b4f      	ldr	r3, [pc, #316]	; (ff9c <MiMAC_SendPacket+0x294>)
    fe5e:	685a      	ldr	r2, [r3, #4]
    fe60:	2317      	movs	r3, #23
    fe62:	18fb      	adds	r3, r7, r3
    fe64:	781b      	ldrb	r3, [r3, #0]
    fe66:	18d3      	adds	r3, r2, r3
    fe68:	781a      	ldrb	r2, [r3, #0]
    fe6a:	4b48      	ldr	r3, [pc, #288]	; (ff8c <MiMAC_SendPacket+0x284>)
    fe6c:	545a      	strb	r2, [r3, r1]
    fe6e:	2317      	movs	r3, #23
    fe70:	18fb      	adds	r3, r7, r3
    fe72:	781a      	ldrb	r2, [r3, #0]
    fe74:	2317      	movs	r3, #23
    fe76:	18fb      	adds	r3, r7, r3
    fe78:	3201      	adds	r2, #1
    fe7a:	701a      	strb	r2, [r3, #0]
    fe7c:	2317      	movs	r3, #23
    fe7e:	18fb      	adds	r3, r7, r3
    fe80:	781b      	ldrb	r3, [r3, #0]
    fe82:	4a46      	ldr	r2, [pc, #280]	; (ff9c <MiMAC_SendPacket+0x294>)
    fe84:	7812      	ldrb	r2, [r2, #0]
    fe86:	0652      	lsls	r2, r2, #25
    fe88:	0f12      	lsrs	r2, r2, #28
    fe8a:	b2d2      	uxtb	r2, r2
    fe8c:	4293      	cmp	r3, r2
    fe8e:	dbdd      	blt.n	fe4c <MiMAC_SendPacket+0x144>
    fe90:	2316      	movs	r3, #22
    fe92:	18fb      	adds	r3, r7, r3
    fe94:	781b      	ldrb	r3, [r3, #0]
    fe96:	4a41      	ldr	r2, [pc, #260]	; (ff9c <MiMAC_SendPacket+0x294>)
    fe98:	7812      	ldrb	r2, [r2, #0]
    fe9a:	0652      	lsls	r2, r2, #25
    fe9c:	0f12      	lsrs	r2, r2, #28
    fe9e:	b2d2      	uxtb	r2, r2
    fea0:	1a9a      	subs	r2, r3, r2
    fea2:	4b3a      	ldr	r3, [pc, #232]	; (ff8c <MiMAC_SendPacket+0x284>)
    fea4:	18d0      	adds	r0, r2, r3
    fea6:	4b3d      	ldr	r3, [pc, #244]	; (ff9c <MiMAC_SendPacket+0x294>)
    fea8:	781b      	ldrb	r3, [r3, #0]
    feaa:	065b      	lsls	r3, r3, #25
    feac:	0f1b      	lsrs	r3, r3, #28
    feae:	b2db      	uxtb	r3, r3
    feb0:	b259      	sxtb	r1, r3
    feb2:	2314      	movs	r3, #20
    feb4:	18fb      	adds	r3, r7, r3
    feb6:	881b      	ldrh	r3, [r3, #0]
    feb8:	001a      	movs	r2, r3
    feba:	4b37      	ldr	r3, [pc, #220]	; (ff98 <MiMAC_SendPacket+0x290>)
    febc:	4798      	blx	r3
    febe:	0003      	movs	r3, r0
    fec0:	b29a      	uxth	r2, r3
    fec2:	2314      	movs	r3, #20
    fec4:	18fb      	adds	r3, r7, r3
    fec6:	801a      	strh	r2, [r3, #0]
    fec8:	2317      	movs	r3, #23
    feca:	18fb      	adds	r3, r7, r3
    fecc:	2200      	movs	r2, #0
    fece:	701a      	strb	r2, [r3, #0]
    fed0:	e016      	b.n	ff00 <MiMAC_SendPacket+0x1f8>
    fed2:	2316      	movs	r3, #22
    fed4:	18fb      	adds	r3, r7, r3
    fed6:	781b      	ldrb	r3, [r3, #0]
    fed8:	2216      	movs	r2, #22
    feda:	18ba      	adds	r2, r7, r2
    fedc:	1c59      	adds	r1, r3, #1
    fede:	7011      	strb	r1, [r2, #0]
    fee0:	0019      	movs	r1, r3
    fee2:	2317      	movs	r3, #23
    fee4:	18fb      	adds	r3, r7, r3
    fee6:	781b      	ldrb	r3, [r3, #0]
    fee8:	687a      	ldr	r2, [r7, #4]
    feea:	18d3      	adds	r3, r2, r3
    feec:	781a      	ldrb	r2, [r3, #0]
    feee:	4b27      	ldr	r3, [pc, #156]	; (ff8c <MiMAC_SendPacket+0x284>)
    fef0:	545a      	strb	r2, [r3, r1]
    fef2:	2317      	movs	r3, #23
    fef4:	18fb      	adds	r3, r7, r3
    fef6:	781a      	ldrb	r2, [r3, #0]
    fef8:	2317      	movs	r3, #23
    fefa:	18fb      	adds	r3, r7, r3
    fefc:	3201      	adds	r2, #1
    fefe:	701a      	strb	r2, [r3, #0]
    ff00:	2317      	movs	r3, #23
    ff02:	18fa      	adds	r2, r7, r3
    ff04:	1cfb      	adds	r3, r7, #3
    ff06:	7812      	ldrb	r2, [r2, #0]
    ff08:	781b      	ldrb	r3, [r3, #0]
    ff0a:	429a      	cmp	r2, r3
    ff0c:	d3e1      	bcc.n	fed2 <MiMAC_SendPacket+0x1ca>
    ff0e:	1cfb      	adds	r3, r7, #3
    ff10:	2100      	movs	r1, #0
    ff12:	5659      	ldrsb	r1, [r3, r1]
    ff14:	2314      	movs	r3, #20
    ff16:	18fb      	adds	r3, r7, r3
    ff18:	881a      	ldrh	r2, [r3, #0]
    ff1a:	687b      	ldr	r3, [r7, #4]
    ff1c:	0018      	movs	r0, r3
    ff1e:	4b1e      	ldr	r3, [pc, #120]	; (ff98 <MiMAC_SendPacket+0x290>)
    ff20:	4798      	blx	r3
    ff22:	0003      	movs	r3, r0
    ff24:	b29a      	uxth	r2, r3
    ff26:	2314      	movs	r3, #20
    ff28:	18fb      	adds	r3, r7, r3
    ff2a:	801a      	strh	r2, [r3, #0]
    ff2c:	2316      	movs	r3, #22
    ff2e:	18fb      	adds	r3, r7, r3
    ff30:	781b      	ldrb	r3, [r3, #0]
    ff32:	2216      	movs	r2, #22
    ff34:	18ba      	adds	r2, r7, r2
    ff36:	1c59      	adds	r1, r3, #1
    ff38:	7011      	strb	r1, [r2, #0]
    ff3a:	001a      	movs	r2, r3
    ff3c:	2314      	movs	r3, #20
    ff3e:	18fb      	adds	r3, r7, r3
    ff40:	7859      	ldrb	r1, [r3, #1]
    ff42:	4b12      	ldr	r3, [pc, #72]	; (ff8c <MiMAC_SendPacket+0x284>)
    ff44:	5499      	strb	r1, [r3, r2]
    ff46:	2316      	movs	r3, #22
    ff48:	18fb      	adds	r3, r7, r3
    ff4a:	781b      	ldrb	r3, [r3, #0]
    ff4c:	2216      	movs	r2, #22
    ff4e:	18ba      	adds	r2, r7, r2
    ff50:	1c59      	adds	r1, r3, #1
    ff52:	7011      	strb	r1, [r2, #0]
    ff54:	001a      	movs	r2, r3
    ff56:	2314      	movs	r3, #20
    ff58:	18fb      	adds	r3, r7, r3
    ff5a:	881b      	ldrh	r3, [r3, #0]
    ff5c:	b2d9      	uxtb	r1, r3
    ff5e:	4b0b      	ldr	r3, [pc, #44]	; (ff8c <MiMAC_SendPacket+0x284>)
    ff60:	5499      	strb	r1, [r3, r2]
    ff62:	4b0e      	ldr	r3, [pc, #56]	; (ff9c <MiMAC_SendPacket+0x294>)
    ff64:	781b      	ldrb	r3, [r3, #0]
    ff66:	079b      	lsls	r3, r3, #30
    ff68:	0fdb      	lsrs	r3, r3, #31
    ff6a:	b2db      	uxtb	r3, r3
    ff6c:	1e5a      	subs	r2, r3, #1
    ff6e:	4193      	sbcs	r3, r2
    ff70:	b2da      	uxtb	r2, r3
    ff72:	2316      	movs	r3, #22
    ff74:	18fb      	adds	r3, r7, r3
    ff76:	781b      	ldrb	r3, [r3, #0]
    ff78:	0011      	movs	r1, r2
    ff7a:	0018      	movs	r0, r3
    ff7c:	4b08      	ldr	r3, [pc, #32]	; (ffa0 <MiMAC_SendPacket+0x298>)
    ff7e:	4798      	blx	r3
    ff80:	0003      	movs	r3, r0
    ff82:	0018      	movs	r0, r3
    ff84:	46bd      	mov	sp, r7
    ff86:	b007      	add	sp, #28
    ff88:	bd90      	pop	{r4, r7, pc}
    ff8a:	46c0      	nop			; (mov r8, r8)
    ff8c:	2000182c 	.word	0x2000182c
    ff90:	20001620 	.word	0x20001620
    ff94:	20001980 	.word	0x20001980
    ff98:	0000ec41 	.word	0x0000ec41
    ff9c:	20001624 	.word	0x20001624
    ffa0:	0000fa7d 	.word	0x0000fa7d

0000ffa4 <MiMAC_ReceivedPacket>:
    ffa4:	b580      	push	{r7, lr}
    ffa6:	b082      	sub	sp, #8
    ffa8:	af00      	add	r7, sp, #0
    ffaa:	4b58      	ldr	r3, [pc, #352]	; (1010c <MiMAC_ReceivedPacket+0x168>)
    ffac:	781b      	ldrb	r3, [r3, #0]
    ffae:	2bff      	cmp	r3, #255	; 0xff
    ffb0:	d001      	beq.n	ffb6 <MiMAC_ReceivedPacket+0x12>
    ffb2:	2300      	movs	r3, #0
    ffb4:	e0a6      	b.n	10104 <MiMAC_ReceivedPacket+0x160>
    ffb6:	1dfb      	adds	r3, r7, #7
    ffb8:	2200      	movs	r2, #0
    ffba:	701a      	strb	r2, [r3, #0]
    ffbc:	e09c      	b.n	100f8 <MiMAC_ReceivedPacket+0x154>
    ffbe:	1dfb      	adds	r3, r7, #7
    ffc0:	781a      	ldrb	r2, [r3, #0]
    ffc2:	4953      	ldr	r1, [pc, #332]	; (10110 <MiMAC_ReceivedPacket+0x16c>)
    ffc4:	0013      	movs	r3, r2
    ffc6:	01db      	lsls	r3, r3, #7
    ffc8:	1a9b      	subs	r3, r3, r2
    ffca:	005b      	lsls	r3, r3, #1
    ffcc:	5c5b      	ldrb	r3, [r3, r1]
    ffce:	07db      	lsls	r3, r3, #31
    ffd0:	0fdb      	lsrs	r3, r3, #31
    ffd2:	b2db      	uxtb	r3, r3
    ffd4:	2b00      	cmp	r3, #0
    ffd6:	d100      	bne.n	ffda <MiMAC_ReceivedPacket+0x36>
    ffd8:	e089      	b.n	100ee <MiMAC_ReceivedPacket+0x14a>
    ffda:	1dfb      	adds	r3, r7, #7
    ffdc:	781a      	ldrb	r2, [r3, #0]
    ffde:	494c      	ldr	r1, [pc, #304]	; (10110 <MiMAC_ReceivedPacket+0x16c>)
    ffe0:	0013      	movs	r3, r2
    ffe2:	01db      	lsls	r3, r3, #7
    ffe4:	1a9b      	subs	r3, r3, r2
    ffe6:	005b      	lsls	r3, r3, #1
    ffe8:	18cb      	adds	r3, r1, r3
    ffea:	3301      	adds	r3, #1
    ffec:	781b      	ldrb	r3, [r3, #0]
    ffee:	b2da      	uxtb	r2, r3
    fff0:	4b48      	ldr	r3, [pc, #288]	; (10114 <MiMAC_ReceivedPacket+0x170>)
    fff2:	701a      	strb	r2, [r3, #0]
    fff4:	1dfb      	adds	r3, r7, #7
    fff6:	781a      	ldrb	r2, [r3, #0]
    fff8:	4945      	ldr	r1, [pc, #276]	; (10110 <MiMAC_ReceivedPacket+0x16c>)
    fffa:	20fd      	movs	r0, #253	; 0xfd
    fffc:	0013      	movs	r3, r2
    fffe:	01db      	lsls	r3, r3, #7
   10000:	1a9b      	subs	r3, r3, r2
   10002:	005b      	lsls	r3, r3, #1
   10004:	18cb      	adds	r3, r1, r3
   10006:	181b      	adds	r3, r3, r0
   10008:	781b      	ldrb	r3, [r3, #0]
   1000a:	b2da      	uxtb	r2, r3
   1000c:	4b41      	ldr	r3, [pc, #260]	; (10114 <MiMAC_ReceivedPacket+0x170>)
   1000e:	731a      	strb	r2, [r3, #12]
   10010:	1dbb      	adds	r3, r7, #6
   10012:	2202      	movs	r2, #2
   10014:	701a      	strb	r2, [r3, #0]
   10016:	4b3f      	ldr	r3, [pc, #252]	; (10114 <MiMAC_ReceivedPacket+0x170>)
   10018:	781b      	ldrb	r3, [r3, #0]
   1001a:	2240      	movs	r2, #64	; 0x40
   1001c:	4013      	ands	r3, r2
   1001e:	b2db      	uxtb	r3, r3
   10020:	2b00      	cmp	r3, #0
   10022:	d00a      	beq.n	1003a <MiMAC_ReceivedPacket+0x96>
   10024:	4b3c      	ldr	r3, [pc, #240]	; (10118 <MiMAC_ReceivedPacket+0x174>)
   10026:	781b      	ldrb	r3, [r3, #0]
   10028:	065b      	lsls	r3, r3, #25
   1002a:	0f1b      	lsrs	r3, r3, #28
   1002c:	b2db      	uxtb	r3, r3
   1002e:	0019      	movs	r1, r3
   10030:	1dbb      	adds	r3, r7, #6
   10032:	1dba      	adds	r2, r7, #6
   10034:	7812      	ldrb	r2, [r2, #0]
   10036:	188a      	adds	r2, r1, r2
   10038:	701a      	strb	r2, [r3, #0]
   1003a:	4b36      	ldr	r3, [pc, #216]	; (10114 <MiMAC_ReceivedPacket+0x170>)
   1003c:	781b      	ldrb	r3, [r3, #0]
   1003e:	227f      	movs	r2, #127	; 0x7f
   10040:	4393      	bics	r3, r2
   10042:	b2db      	uxtb	r3, r3
   10044:	2b00      	cmp	r3, #0
   10046:	d019      	beq.n	1007c <MiMAC_ReceivedPacket+0xd8>
   10048:	1dfb      	adds	r3, r7, #7
   1004a:	781a      	ldrb	r2, [r3, #0]
   1004c:	1dbb      	adds	r3, r7, #6
   1004e:	7819      	ldrb	r1, [r3, #0]
   10050:	0013      	movs	r3, r2
   10052:	01db      	lsls	r3, r3, #7
   10054:	1a9b      	subs	r3, r3, r2
   10056:	005b      	lsls	r3, r3, #1
   10058:	185a      	adds	r2, r3, r1
   1005a:	4b2d      	ldr	r3, [pc, #180]	; (10110 <MiMAC_ReceivedPacket+0x16c>)
   1005c:	18d3      	adds	r3, r2, r3
   1005e:	1c5a      	adds	r2, r3, #1
   10060:	4b2c      	ldr	r3, [pc, #176]	; (10114 <MiMAC_ReceivedPacket+0x170>)
   10062:	605a      	str	r2, [r3, #4]
   10064:	4b2c      	ldr	r3, [pc, #176]	; (10118 <MiMAC_ReceivedPacket+0x174>)
   10066:	781b      	ldrb	r3, [r3, #0]
   10068:	065b      	lsls	r3, r3, #25
   1006a:	0f1b      	lsrs	r3, r3, #28
   1006c:	b2db      	uxtb	r3, r3
   1006e:	0019      	movs	r1, r3
   10070:	1dbb      	adds	r3, r7, #6
   10072:	1dba      	adds	r2, r7, #6
   10074:	7812      	ldrb	r2, [r2, #0]
   10076:	188a      	adds	r2, r1, r2
   10078:	701a      	strb	r2, [r3, #0]
   1007a:	e002      	b.n	10082 <MiMAC_ReceivedPacket+0xde>
   1007c:	4b25      	ldr	r3, [pc, #148]	; (10114 <MiMAC_ReceivedPacket+0x170>)
   1007e:	2200      	movs	r2, #0
   10080:	605a      	str	r2, [r3, #4]
   10082:	1dfb      	adds	r3, r7, #7
   10084:	781a      	ldrb	r2, [r3, #0]
   10086:	1dbb      	adds	r3, r7, #6
   10088:	7819      	ldrb	r1, [r3, #0]
   1008a:	0013      	movs	r3, r2
   1008c:	01db      	lsls	r3, r3, #7
   1008e:	1a9b      	subs	r3, r3, r2
   10090:	005b      	lsls	r3, r3, #1
   10092:	185a      	adds	r2, r3, r1
   10094:	4b1e      	ldr	r3, [pc, #120]	; (10110 <MiMAC_ReceivedPacket+0x16c>)
   10096:	18d3      	adds	r3, r2, r3
   10098:	1c5a      	adds	r2, r3, #1
   1009a:	4b1e      	ldr	r3, [pc, #120]	; (10114 <MiMAC_ReceivedPacket+0x170>)
   1009c:	609a      	str	r2, [r3, #8]
   1009e:	1dfb      	adds	r3, r7, #7
   100a0:	781a      	ldrb	r2, [r3, #0]
   100a2:	491b      	ldr	r1, [pc, #108]	; (10110 <MiMAC_ReceivedPacket+0x16c>)
   100a4:	0013      	movs	r3, r2
   100a6:	01db      	lsls	r3, r3, #7
   100a8:	1a9b      	subs	r3, r3, r2
   100aa:	005b      	lsls	r3, r3, #1
   100ac:	5c5b      	ldrb	r3, [r3, r1]
   100ae:	079b      	lsls	r3, r3, #30
   100b0:	0fdb      	lsrs	r3, r3, #31
   100b2:	b2db      	uxtb	r3, r3
   100b4:	2b00      	cmp	r3, #0
   100b6:	d003      	beq.n	100c0 <MiMAC_ReceivedPacket+0x11c>
   100b8:	4b16      	ldr	r3, [pc, #88]	; (10114 <MiMAC_ReceivedPacket+0x170>)
   100ba:	2201      	movs	r2, #1
   100bc:	81da      	strh	r2, [r3, #14]
   100be:	e002      	b.n	100c6 <MiMAC_ReceivedPacket+0x122>
   100c0:	4b14      	ldr	r3, [pc, #80]	; (10114 <MiMAC_ReceivedPacket+0x170>)
   100c2:	2200      	movs	r2, #0
   100c4:	81da      	strh	r2, [r3, #14]
   100c6:	1dfb      	adds	r3, r7, #7
   100c8:	781a      	ldrb	r2, [r3, #0]
   100ca:	4911      	ldr	r1, [pc, #68]	; (10110 <MiMAC_ReceivedPacket+0x16c>)
   100cc:	0013      	movs	r3, r2
   100ce:	01db      	lsls	r3, r3, #7
   100d0:	1a9b      	subs	r3, r3, r2
   100d2:	005b      	lsls	r3, r3, #1
   100d4:	5c5b      	ldrb	r3, [r3, r1]
   100d6:	075b      	lsls	r3, r3, #29
   100d8:	0fdb      	lsrs	r3, r3, #31
   100da:	b2db      	uxtb	r3, r3
   100dc:	001a      	movs	r2, r3
   100de:	4b0d      	ldr	r3, [pc, #52]	; (10114 <MiMAC_ReceivedPacket+0x170>)
   100e0:	741a      	strb	r2, [r3, #16]
   100e2:	4b0a      	ldr	r3, [pc, #40]	; (1010c <MiMAC_ReceivedPacket+0x168>)
   100e4:	1dfa      	adds	r2, r7, #7
   100e6:	7812      	ldrb	r2, [r2, #0]
   100e8:	701a      	strb	r2, [r3, #0]
   100ea:	2301      	movs	r3, #1
   100ec:	e00a      	b.n	10104 <MiMAC_ReceivedPacket+0x160>
   100ee:	1dfb      	adds	r3, r7, #7
   100f0:	781a      	ldrb	r2, [r3, #0]
   100f2:	1dfb      	adds	r3, r7, #7
   100f4:	3201      	adds	r2, #1
   100f6:	701a      	strb	r2, [r3, #0]
   100f8:	1dfb      	adds	r3, r7, #7
   100fa:	781b      	ldrb	r3, [r3, #0]
   100fc:	2b01      	cmp	r3, #1
   100fe:	d800      	bhi.n	10102 <MiMAC_ReceivedPacket+0x15e>
   10100:	e75d      	b.n	ffbe <MiMAC_ReceivedPacket+0x1a>
   10102:	2300      	movs	r3, #0
   10104:	0018      	movs	r0, r3
   10106:	46bd      	mov	sp, r7
   10108:	b002      	add	sp, #8
   1010a:	bd80      	pop	{r7, pc}
   1010c:	2000162c 	.word	0x2000162c
   10110:	20001630 	.word	0x20001630
   10114:	2000126c 	.word	0x2000126c
   10118:	20001624 	.word	0x20001624

0001011c <MiMAC_DiscardPacket>:
   1011c:	b580      	push	{r7, lr}
   1011e:	af00      	add	r7, sp, #0
   10120:	4b09      	ldr	r3, [pc, #36]	; (10148 <MiMAC_DiscardPacket+0x2c>)
   10122:	781b      	ldrb	r3, [r3, #0]
   10124:	2b01      	cmp	r3, #1
   10126:	d80c      	bhi.n	10142 <MiMAC_DiscardPacket+0x26>
   10128:	4b07      	ldr	r3, [pc, #28]	; (10148 <MiMAC_DiscardPacket+0x2c>)
   1012a:	781b      	ldrb	r3, [r3, #0]
   1012c:	0019      	movs	r1, r3
   1012e:	4a07      	ldr	r2, [pc, #28]	; (1014c <MiMAC_DiscardPacket+0x30>)
   10130:	000b      	movs	r3, r1
   10132:	01db      	lsls	r3, r3, #7
   10134:	1a5b      	subs	r3, r3, r1
   10136:	005b      	lsls	r3, r3, #1
   10138:	2100      	movs	r1, #0
   1013a:	5499      	strb	r1, [r3, r2]
   1013c:	4b02      	ldr	r3, [pc, #8]	; (10148 <MiMAC_DiscardPacket+0x2c>)
   1013e:	22ff      	movs	r2, #255	; 0xff
   10140:	701a      	strb	r2, [r3, #0]
   10142:	46c0      	nop			; (mov r8, r8)
   10144:	46bd      	mov	sp, r7
   10146:	bd80      	pop	{r7, pc}
   10148:	2000162c 	.word	0x2000162c
   1014c:	20001630 	.word	0x20001630

00010150 <MiMAC_ChannelAssessment>:
   10150:	b590      	push	{r4, r7, lr}
   10152:	b085      	sub	sp, #20
   10154:	af00      	add	r7, sp, #0
   10156:	0002      	movs	r2, r0
   10158:	1dfb      	adds	r3, r7, #7
   1015a:	701a      	strb	r2, [r3, #0]
   1015c:	1dfb      	adds	r3, r7, #7
   1015e:	781b      	ldrb	r3, [r3, #0]
   10160:	2b00      	cmp	r3, #0
   10162:	d123      	bne.n	101ac <MiMAC_ChannelAssessment+0x5c>
   10164:	201a      	movs	r0, #26
   10166:	4b25      	ldr	r3, [pc, #148]	; (101fc <MiMAC_ChannelAssessment+0xac>)
   10168:	4798      	blx	r3
   1016a:	0003      	movs	r3, r0
   1016c:	001a      	movs	r2, r3
   1016e:	230e      	movs	r3, #14
   10170:	18fb      	adds	r3, r7, r3
   10172:	801a      	strh	r2, [r3, #0]
   10174:	230e      	movs	r3, #14
   10176:	18fb      	adds	r3, r7, r3
   10178:	2200      	movs	r2, #0
   1017a:	5e9a      	ldrsh	r2, [r3, r2]
   1017c:	4b20      	ldr	r3, [pc, #128]	; (10200 <MiMAC_ChannelAssessment+0xb0>)
   1017e:	0010      	movs	r0, r2
   10180:	4798      	blx	r3
   10182:	4c20      	ldr	r4, [pc, #128]	; (10204 <MiMAC_ChannelAssessment+0xb4>)
   10184:	2200      	movs	r2, #0
   10186:	4b20      	ldr	r3, [pc, #128]	; (10208 <MiMAC_ChannelAssessment+0xb8>)
   10188:	47a0      	blx	r4
   1018a:	0003      	movs	r3, r0
   1018c:	000c      	movs	r4, r1
   1018e:	0019      	movs	r1, r3
   10190:	0022      	movs	r2, r4
   10192:	230e      	movs	r3, #14
   10194:	18fc      	adds	r4, r7, r3
   10196:	4b1d      	ldr	r3, [pc, #116]	; (1020c <MiMAC_ChannelAssessment+0xbc>)
   10198:	0008      	movs	r0, r1
   1019a:	0011      	movs	r1, r2
   1019c:	4798      	blx	r3
   1019e:	0003      	movs	r3, r0
   101a0:	8023      	strh	r3, [r4, #0]
   101a2:	230e      	movs	r3, #14
   101a4:	18fb      	adds	r3, r7, r3
   101a6:	2200      	movs	r2, #0
   101a8:	5e9b      	ldrsh	r3, [r3, r2]
   101aa:	e022      	b.n	101f2 <MiMAC_ChannelAssessment+0xa2>
   101ac:	201b      	movs	r0, #27
   101ae:	4b13      	ldr	r3, [pc, #76]	; (101fc <MiMAC_ChannelAssessment+0xac>)
   101b0:	4798      	blx	r3
   101b2:	0003      	movs	r3, r0
   101b4:	001a      	movs	r2, r3
   101b6:	230e      	movs	r3, #14
   101b8:	18fb      	adds	r3, r7, r3
   101ba:	801a      	strh	r2, [r3, #0]
   101bc:	230e      	movs	r3, #14
   101be:	18fb      	adds	r3, r7, r3
   101c0:	2200      	movs	r2, #0
   101c2:	5e9a      	ldrsh	r2, [r3, r2]
   101c4:	4b0e      	ldr	r3, [pc, #56]	; (10200 <MiMAC_ChannelAssessment+0xb0>)
   101c6:	0010      	movs	r0, r2
   101c8:	4798      	blx	r3
   101ca:	4c0e      	ldr	r4, [pc, #56]	; (10204 <MiMAC_ChannelAssessment+0xb4>)
   101cc:	2200      	movs	r2, #0
   101ce:	4b0e      	ldr	r3, [pc, #56]	; (10208 <MiMAC_ChannelAssessment+0xb8>)
   101d0:	47a0      	blx	r4
   101d2:	0003      	movs	r3, r0
   101d4:	000c      	movs	r4, r1
   101d6:	0019      	movs	r1, r3
   101d8:	0022      	movs	r2, r4
   101da:	230e      	movs	r3, #14
   101dc:	18fc      	adds	r4, r7, r3
   101de:	4b0b      	ldr	r3, [pc, #44]	; (1020c <MiMAC_ChannelAssessment+0xbc>)
   101e0:	0008      	movs	r0, r1
   101e2:	0011      	movs	r1, r2
   101e4:	4798      	blx	r3
   101e6:	0003      	movs	r3, r0
   101e8:	8023      	strh	r3, [r4, #0]
   101ea:	230e      	movs	r3, #14
   101ec:	18fb      	adds	r3, r7, r3
   101ee:	2200      	movs	r2, #0
   101f0:	5e9b      	ldrsh	r3, [r3, r2]
   101f2:	0018      	movs	r0, r3
   101f4:	46bd      	mov	sp, r7
   101f6:	b005      	add	sp, #20
   101f8:	bd90      	pop	{r4, r7, pc}
   101fa:	46c0      	nop			; (mov r8, r8)
   101fc:	00006fcd 	.word	0x00006fcd
   10200:	00017151 	.word	0x00017151
   10204:	00016abd 	.word	0x00016abd
   10208:	4063a000 	.word	0x4063a000
   1020c:	000170e9 	.word	0x000170e9

00010210 <MiMAC_SetAltAddress>:
   10210:	b580      	push	{r7, lr}
   10212:	b082      	sub	sp, #8
   10214:	af00      	add	r7, sp, #0
   10216:	6078      	str	r0, [r7, #4]
   10218:	6039      	str	r1, [r7, #0]
   1021a:	2300      	movs	r3, #0
   1021c:	0018      	movs	r0, r3
   1021e:	46bd      	mov	sp, r7
   10220:	b002      	add	sp, #8
   10222:	bd80      	pop	{r7, pc}

00010224 <system_interrupt_enable>:
   10224:	b580      	push	{r7, lr}
   10226:	b082      	sub	sp, #8
   10228:	af00      	add	r7, sp, #0
   1022a:	0002      	movs	r2, r0
   1022c:	1dfb      	adds	r3, r7, #7
   1022e:	701a      	strb	r2, [r3, #0]
   10230:	4b06      	ldr	r3, [pc, #24]	; (1024c <system_interrupt_enable+0x28>)
   10232:	1dfa      	adds	r2, r7, #7
   10234:	7812      	ldrb	r2, [r2, #0]
   10236:	0011      	movs	r1, r2
   10238:	221f      	movs	r2, #31
   1023a:	400a      	ands	r2, r1
   1023c:	2101      	movs	r1, #1
   1023e:	4091      	lsls	r1, r2
   10240:	000a      	movs	r2, r1
   10242:	601a      	str	r2, [r3, #0]
   10244:	46c0      	nop			; (mov r8, r8)
   10246:	46bd      	mov	sp, r7
   10248:	b002      	add	sp, #8
   1024a:	bd80      	pop	{r7, pc}
   1024c:	e000e100 	.word	0xe000e100

00010250 <tc_is_syncing>:
   10250:	b580      	push	{r7, lr}
   10252:	b084      	sub	sp, #16
   10254:	af00      	add	r7, sp, #0
   10256:	6078      	str	r0, [r7, #4]
   10258:	687b      	ldr	r3, [r7, #4]
   1025a:	681b      	ldr	r3, [r3, #0]
   1025c:	60fb      	str	r3, [r7, #12]
   1025e:	68fb      	ldr	r3, [r7, #12]
   10260:	691b      	ldr	r3, [r3, #16]
   10262:	1e5a      	subs	r2, r3, #1
   10264:	4193      	sbcs	r3, r2
   10266:	b2db      	uxtb	r3, r3
   10268:	0018      	movs	r0, r3
   1026a:	46bd      	mov	sp, r7
   1026c:	b004      	add	sp, #16
   1026e:	bd80      	pop	{r7, pc}

00010270 <tc_get_config_defaults>:
   10270:	b580      	push	{r7, lr}
   10272:	b082      	sub	sp, #8
   10274:	af00      	add	r7, sp, #0
   10276:	6078      	str	r0, [r7, #4]
   10278:	687b      	ldr	r3, [r7, #4]
   1027a:	2200      	movs	r2, #0
   1027c:	701a      	strb	r2, [r3, #0]
   1027e:	687b      	ldr	r3, [r7, #4]
   10280:	2200      	movs	r2, #0
   10282:	70da      	strb	r2, [r3, #3]
   10284:	687b      	ldr	r3, [r7, #4]
   10286:	2200      	movs	r2, #0
   10288:	809a      	strh	r2, [r3, #4]
   1028a:	687b      	ldr	r3, [r7, #4]
   1028c:	2200      	movs	r2, #0
   1028e:	719a      	strb	r2, [r3, #6]
   10290:	687b      	ldr	r3, [r7, #4]
   10292:	2200      	movs	r2, #0
   10294:	71da      	strb	r2, [r3, #7]
   10296:	687b      	ldr	r3, [r7, #4]
   10298:	2200      	movs	r2, #0
   1029a:	705a      	strb	r2, [r3, #1]
   1029c:	687b      	ldr	r3, [r7, #4]
   1029e:	2200      	movs	r2, #0
   102a0:	709a      	strb	r2, [r3, #2]
   102a2:	687b      	ldr	r3, [r7, #4]
   102a4:	2200      	movs	r2, #0
   102a6:	721a      	strb	r2, [r3, #8]
   102a8:	687b      	ldr	r3, [r7, #4]
   102aa:	2200      	movs	r2, #0
   102ac:	725a      	strb	r2, [r3, #9]
   102ae:	687b      	ldr	r3, [r7, #4]
   102b0:	2200      	movs	r2, #0
   102b2:	729a      	strb	r2, [r3, #10]
   102b4:	687b      	ldr	r3, [r7, #4]
   102b6:	2200      	movs	r2, #0
   102b8:	72da      	strb	r2, [r3, #11]
   102ba:	687b      	ldr	r3, [r7, #4]
   102bc:	2200      	movs	r2, #0
   102be:	731a      	strb	r2, [r3, #12]
   102c0:	687b      	ldr	r3, [r7, #4]
   102c2:	2200      	movs	r2, #0
   102c4:	739a      	strb	r2, [r3, #14]
   102c6:	687b      	ldr	r3, [r7, #4]
   102c8:	2200      	movs	r2, #0
   102ca:	735a      	strb	r2, [r3, #13]
   102cc:	687b      	ldr	r3, [r7, #4]
   102ce:	2200      	movs	r2, #0
   102d0:	741a      	strb	r2, [r3, #16]
   102d2:	687b      	ldr	r3, [r7, #4]
   102d4:	2200      	movs	r2, #0
   102d6:	615a      	str	r2, [r3, #20]
   102d8:	687b      	ldr	r3, [r7, #4]
   102da:	2200      	movs	r2, #0
   102dc:	619a      	str	r2, [r3, #24]
   102de:	687b      	ldr	r3, [r7, #4]
   102e0:	2200      	movs	r2, #0
   102e2:	771a      	strb	r2, [r3, #28]
   102e4:	687b      	ldr	r3, [r7, #4]
   102e6:	2200      	movs	r2, #0
   102e8:	621a      	str	r2, [r3, #32]
   102ea:	687b      	ldr	r3, [r7, #4]
   102ec:	2200      	movs	r2, #0
   102ee:	625a      	str	r2, [r3, #36]	; 0x24
   102f0:	687b      	ldr	r3, [r7, #4]
   102f2:	2200      	movs	r2, #0
   102f4:	851a      	strh	r2, [r3, #40]	; 0x28
   102f6:	687b      	ldr	r3, [r7, #4]
   102f8:	2200      	movs	r2, #0
   102fa:	855a      	strh	r2, [r3, #42]	; 0x2a
   102fc:	687b      	ldr	r3, [r7, #4]
   102fe:	2200      	movs	r2, #0
   10300:	859a      	strh	r2, [r3, #44]	; 0x2c
   10302:	687b      	ldr	r3, [r7, #4]
   10304:	2234      	movs	r2, #52	; 0x34
   10306:	2100      	movs	r1, #0
   10308:	5499      	strb	r1, [r3, r2]
   1030a:	46c0      	nop			; (mov r8, r8)
   1030c:	46bd      	mov	sp, r7
   1030e:	b002      	add	sp, #8
   10310:	bd80      	pop	{r7, pc}
	...

00010314 <tc_enable>:
   10314:	b580      	push	{r7, lr}
   10316:	b084      	sub	sp, #16
   10318:	af00      	add	r7, sp, #0
   1031a:	6078      	str	r0, [r7, #4]
   1031c:	687b      	ldr	r3, [r7, #4]
   1031e:	681b      	ldr	r3, [r3, #0]
   10320:	60fb      	str	r3, [r7, #12]
   10322:	46c0      	nop			; (mov r8, r8)
   10324:	687b      	ldr	r3, [r7, #4]
   10326:	0018      	movs	r0, r3
   10328:	4b06      	ldr	r3, [pc, #24]	; (10344 <tc_enable+0x30>)
   1032a:	4798      	blx	r3
   1032c:	1e03      	subs	r3, r0, #0
   1032e:	d1f9      	bne.n	10324 <tc_enable+0x10>
   10330:	68fb      	ldr	r3, [r7, #12]
   10332:	681b      	ldr	r3, [r3, #0]
   10334:	2202      	movs	r2, #2
   10336:	431a      	orrs	r2, r3
   10338:	68fb      	ldr	r3, [r7, #12]
   1033a:	601a      	str	r2, [r3, #0]
   1033c:	46c0      	nop			; (mov r8, r8)
   1033e:	46bd      	mov	sp, r7
   10340:	b004      	add	sp, #16
   10342:	bd80      	pop	{r7, pc}
   10344:	00010251 	.word	0x00010251

00010348 <tc_clear_status>:
   10348:	b580      	push	{r7, lr}
   1034a:	b084      	sub	sp, #16
   1034c:	af00      	add	r7, sp, #0
   1034e:	6078      	str	r0, [r7, #4]
   10350:	6039      	str	r1, [r7, #0]
   10352:	687b      	ldr	r3, [r7, #4]
   10354:	681b      	ldr	r3, [r3, #0]
   10356:	60bb      	str	r3, [r7, #8]
   10358:	2300      	movs	r3, #0
   1035a:	60fb      	str	r3, [r7, #12]
   1035c:	683b      	ldr	r3, [r7, #0]
   1035e:	2201      	movs	r2, #1
   10360:	4013      	ands	r3, r2
   10362:	d003      	beq.n	1036c <tc_clear_status+0x24>
   10364:	68fb      	ldr	r3, [r7, #12]
   10366:	2210      	movs	r2, #16
   10368:	4313      	orrs	r3, r2
   1036a:	60fb      	str	r3, [r7, #12]
   1036c:	683b      	ldr	r3, [r7, #0]
   1036e:	2202      	movs	r2, #2
   10370:	4013      	ands	r3, r2
   10372:	d003      	beq.n	1037c <tc_clear_status+0x34>
   10374:	68fb      	ldr	r3, [r7, #12]
   10376:	2220      	movs	r2, #32
   10378:	4313      	orrs	r3, r2
   1037a:	60fb      	str	r3, [r7, #12]
   1037c:	683b      	ldr	r3, [r7, #0]
   1037e:	2208      	movs	r2, #8
   10380:	4013      	ands	r3, r2
   10382:	d003      	beq.n	1038c <tc_clear_status+0x44>
   10384:	68fb      	ldr	r3, [r7, #12]
   10386:	2202      	movs	r2, #2
   10388:	4313      	orrs	r3, r2
   1038a:	60fb      	str	r3, [r7, #12]
   1038c:	683b      	ldr	r3, [r7, #0]
   1038e:	2210      	movs	r2, #16
   10390:	4013      	ands	r3, r2
   10392:	d003      	beq.n	1039c <tc_clear_status+0x54>
   10394:	68fb      	ldr	r3, [r7, #12]
   10396:	2201      	movs	r2, #1
   10398:	4313      	orrs	r3, r2
   1039a:	60fb      	str	r3, [r7, #12]
   1039c:	68fb      	ldr	r3, [r7, #12]
   1039e:	b2da      	uxtb	r2, r3
   103a0:	68bb      	ldr	r3, [r7, #8]
   103a2:	729a      	strb	r2, [r3, #10]
   103a4:	46c0      	nop			; (mov r8, r8)
   103a6:	46bd      	mov	sp, r7
   103a8:	b004      	add	sp, #16
   103aa:	bd80      	pop	{r7, pc}

000103ac <_tc_interrupt_get_interrupt_vector>:
   103ac:	b580      	push	{r7, lr}
   103ae:	b082      	sub	sp, #8
   103b0:	af00      	add	r7, sp, #0
   103b2:	6078      	str	r0, [r7, #4]
   103b4:	4a04      	ldr	r2, [pc, #16]	; (103c8 <_tc_interrupt_get_interrupt_vector+0x1c>)
   103b6:	687b      	ldr	r3, [r7, #4]
   103b8:	18d3      	adds	r3, r2, r3
   103ba:	781b      	ldrb	r3, [r3, #0]
   103bc:	b25b      	sxtb	r3, r3
   103be:	0018      	movs	r0, r3
   103c0:	46bd      	mov	sp, r7
   103c2:	b002      	add	sp, #8
   103c4:	bd80      	pop	{r7, pc}
   103c6:	46c0      	nop			; (mov r8, r8)
   103c8:	20000020 	.word	0x20000020

000103cc <tc_enable_callback>:
   103cc:	b580      	push	{r7, lr}
   103ce:	b082      	sub	sp, #8
   103d0:	af00      	add	r7, sp, #0
   103d2:	6078      	str	r0, [r7, #4]
   103d4:	000a      	movs	r2, r1
   103d6:	1cfb      	adds	r3, r7, #3
   103d8:	701a      	strb	r2, [r3, #0]
   103da:	687b      	ldr	r3, [r7, #4]
   103dc:	681b      	ldr	r3, [r3, #0]
   103de:	0018      	movs	r0, r3
   103e0:	4b22      	ldr	r3, [pc, #136]	; (1046c <tc_enable_callback+0xa0>)
   103e2:	4798      	blx	r3
   103e4:	0003      	movs	r3, r0
   103e6:	0018      	movs	r0, r3
   103e8:	4b21      	ldr	r3, [pc, #132]	; (10470 <tc_enable_callback+0xa4>)
   103ea:	4798      	blx	r3
   103ec:	0003      	movs	r3, r0
   103ee:	0018      	movs	r0, r3
   103f0:	4b20      	ldr	r3, [pc, #128]	; (10474 <tc_enable_callback+0xa8>)
   103f2:	4798      	blx	r3
   103f4:	1cfb      	adds	r3, r7, #3
   103f6:	781b      	ldrb	r3, [r3, #0]
   103f8:	2b02      	cmp	r3, #2
   103fa:	d10b      	bne.n	10414 <tc_enable_callback+0x48>
   103fc:	687b      	ldr	r3, [r7, #4]
   103fe:	7e5b      	ldrb	r3, [r3, #25]
   10400:	2210      	movs	r2, #16
   10402:	4313      	orrs	r3, r2
   10404:	b2da      	uxtb	r2, r3
   10406:	687b      	ldr	r3, [r7, #4]
   10408:	765a      	strb	r2, [r3, #25]
   1040a:	687b      	ldr	r3, [r7, #4]
   1040c:	681b      	ldr	r3, [r3, #0]
   1040e:	2210      	movs	r2, #16
   10410:	725a      	strb	r2, [r3, #9]
   10412:	e026      	b.n	10462 <tc_enable_callback+0x96>
   10414:	1cfb      	adds	r3, r7, #3
   10416:	781b      	ldrb	r3, [r3, #0]
   10418:	2b03      	cmp	r3, #3
   1041a:	d10b      	bne.n	10434 <tc_enable_callback+0x68>
   1041c:	687b      	ldr	r3, [r7, #4]
   1041e:	7e5b      	ldrb	r3, [r3, #25]
   10420:	2220      	movs	r2, #32
   10422:	4313      	orrs	r3, r2
   10424:	b2da      	uxtb	r2, r3
   10426:	687b      	ldr	r3, [r7, #4]
   10428:	765a      	strb	r2, [r3, #25]
   1042a:	687b      	ldr	r3, [r7, #4]
   1042c:	681b      	ldr	r3, [r3, #0]
   1042e:	2220      	movs	r2, #32
   10430:	725a      	strb	r2, [r3, #9]
   10432:	e016      	b.n	10462 <tc_enable_callback+0x96>
   10434:	687b      	ldr	r3, [r7, #4]
   10436:	7e5b      	ldrb	r3, [r3, #25]
   10438:	b25a      	sxtb	r2, r3
   1043a:	1cfb      	adds	r3, r7, #3
   1043c:	781b      	ldrb	r3, [r3, #0]
   1043e:	2101      	movs	r1, #1
   10440:	4099      	lsls	r1, r3
   10442:	000b      	movs	r3, r1
   10444:	b25b      	sxtb	r3, r3
   10446:	4313      	orrs	r3, r2
   10448:	b25b      	sxtb	r3, r3
   1044a:	b2da      	uxtb	r2, r3
   1044c:	687b      	ldr	r3, [r7, #4]
   1044e:	765a      	strb	r2, [r3, #25]
   10450:	687b      	ldr	r3, [r7, #4]
   10452:	681b      	ldr	r3, [r3, #0]
   10454:	1cfa      	adds	r2, r7, #3
   10456:	7812      	ldrb	r2, [r2, #0]
   10458:	2101      	movs	r1, #1
   1045a:	4091      	lsls	r1, r2
   1045c:	000a      	movs	r2, r1
   1045e:	b2d2      	uxtb	r2, r2
   10460:	725a      	strb	r2, [r3, #9]
   10462:	46c0      	nop			; (mov r8, r8)
   10464:	46bd      	mov	sp, r7
   10466:	b002      	add	sp, #8
   10468:	bd80      	pop	{r7, pc}
   1046a:	46c0      	nop			; (mov r8, r8)
   1046c:	00005cb5 	.word	0x00005cb5
   10470:	000103ad 	.word	0x000103ad
   10474:	00010225 	.word	0x00010225

00010478 <tc_disable_callback>:
   10478:	b580      	push	{r7, lr}
   1047a:	b082      	sub	sp, #8
   1047c:	af00      	add	r7, sp, #0
   1047e:	6078      	str	r0, [r7, #4]
   10480:	000a      	movs	r2, r1
   10482:	1cfb      	adds	r3, r7, #3
   10484:	701a      	strb	r2, [r3, #0]
   10486:	1cfb      	adds	r3, r7, #3
   10488:	781b      	ldrb	r3, [r3, #0]
   1048a:	2b02      	cmp	r3, #2
   1048c:	d10b      	bne.n	104a6 <tc_disable_callback+0x2e>
   1048e:	687b      	ldr	r3, [r7, #4]
   10490:	681b      	ldr	r3, [r3, #0]
   10492:	2210      	movs	r2, #16
   10494:	721a      	strb	r2, [r3, #8]
   10496:	687b      	ldr	r3, [r7, #4]
   10498:	7e5b      	ldrb	r3, [r3, #25]
   1049a:	2210      	movs	r2, #16
   1049c:	4393      	bics	r3, r2
   1049e:	b2da      	uxtb	r2, r3
   104a0:	687b      	ldr	r3, [r7, #4]
   104a2:	765a      	strb	r2, [r3, #25]
   104a4:	e028      	b.n	104f8 <tc_disable_callback+0x80>
   104a6:	1cfb      	adds	r3, r7, #3
   104a8:	781b      	ldrb	r3, [r3, #0]
   104aa:	2b03      	cmp	r3, #3
   104ac:	d10b      	bne.n	104c6 <tc_disable_callback+0x4e>
   104ae:	687b      	ldr	r3, [r7, #4]
   104b0:	681b      	ldr	r3, [r3, #0]
   104b2:	2220      	movs	r2, #32
   104b4:	721a      	strb	r2, [r3, #8]
   104b6:	687b      	ldr	r3, [r7, #4]
   104b8:	7e5b      	ldrb	r3, [r3, #25]
   104ba:	2220      	movs	r2, #32
   104bc:	4393      	bics	r3, r2
   104be:	b2da      	uxtb	r2, r3
   104c0:	687b      	ldr	r3, [r7, #4]
   104c2:	765a      	strb	r2, [r3, #25]
   104c4:	e018      	b.n	104f8 <tc_disable_callback+0x80>
   104c6:	687b      	ldr	r3, [r7, #4]
   104c8:	681b      	ldr	r3, [r3, #0]
   104ca:	1cfa      	adds	r2, r7, #3
   104cc:	7812      	ldrb	r2, [r2, #0]
   104ce:	2101      	movs	r1, #1
   104d0:	4091      	lsls	r1, r2
   104d2:	000a      	movs	r2, r1
   104d4:	b2d2      	uxtb	r2, r2
   104d6:	721a      	strb	r2, [r3, #8]
   104d8:	687b      	ldr	r3, [r7, #4]
   104da:	7e5b      	ldrb	r3, [r3, #25]
   104dc:	b25b      	sxtb	r3, r3
   104de:	1cfa      	adds	r2, r7, #3
   104e0:	7812      	ldrb	r2, [r2, #0]
   104e2:	2101      	movs	r1, #1
   104e4:	4091      	lsls	r1, r2
   104e6:	000a      	movs	r2, r1
   104e8:	b252      	sxtb	r2, r2
   104ea:	43d2      	mvns	r2, r2
   104ec:	b252      	sxtb	r2, r2
   104ee:	4013      	ands	r3, r2
   104f0:	b25b      	sxtb	r3, r3
   104f2:	b2da      	uxtb	r2, r3
   104f4:	687b      	ldr	r3, [r7, #4]
   104f6:	765a      	strb	r2, [r3, #25]
   104f8:	46c0      	nop			; (mov r8, r8)
   104fa:	46bd      	mov	sp, r7
   104fc:	b002      	add	sp, #8
   104fe:	bd80      	pop	{r7, pc}

00010500 <tmr_read_count>:
   10500:	b580      	push	{r7, lr}
   10502:	af00      	add	r7, sp, #0
   10504:	4b04      	ldr	r3, [pc, #16]	; (10518 <tmr_read_count+0x18>)
   10506:	0018      	movs	r0, r3
   10508:	4b04      	ldr	r3, [pc, #16]	; (1051c <tmr_read_count+0x1c>)
   1050a:	4798      	blx	r3
   1050c:	0003      	movs	r3, r0
   1050e:	b29b      	uxth	r3, r3
   10510:	0018      	movs	r0, r3
   10512:	46bd      	mov	sp, r7
   10514:	bd80      	pop	{r7, pc}
   10516:	46c0      	nop			; (mov r8, r8)
   10518:	20001abc 	.word	0x20001abc
   1051c:	000061a9 	.word	0x000061a9

00010520 <tmr_disable_cc_interrupt>:
   10520:	b580      	push	{r7, lr}
   10522:	af00      	add	r7, sp, #0
   10524:	4b03      	ldr	r3, [pc, #12]	; (10534 <tmr_disable_cc_interrupt+0x14>)
   10526:	2102      	movs	r1, #2
   10528:	0018      	movs	r0, r3
   1052a:	4b03      	ldr	r3, [pc, #12]	; (10538 <tmr_disable_cc_interrupt+0x18>)
   1052c:	4798      	blx	r3
   1052e:	46c0      	nop			; (mov r8, r8)
   10530:	46bd      	mov	sp, r7
   10532:	bd80      	pop	{r7, pc}
   10534:	20001abc 	.word	0x20001abc
   10538:	00010479 	.word	0x00010479

0001053c <tmr_enable_cc_interrupt>:
   1053c:	b580      	push	{r7, lr}
   1053e:	af00      	add	r7, sp, #0
   10540:	4b06      	ldr	r3, [pc, #24]	; (1055c <tmr_enable_cc_interrupt+0x20>)
   10542:	2101      	movs	r1, #1
   10544:	0018      	movs	r0, r3
   10546:	4b06      	ldr	r3, [pc, #24]	; (10560 <tmr_enable_cc_interrupt+0x24>)
   10548:	4798      	blx	r3
   1054a:	4b04      	ldr	r3, [pc, #16]	; (1055c <tmr_enable_cc_interrupt+0x20>)
   1054c:	2102      	movs	r1, #2
   1054e:	0018      	movs	r0, r3
   10550:	4b04      	ldr	r3, [pc, #16]	; (10564 <tmr_enable_cc_interrupt+0x28>)
   10552:	4798      	blx	r3
   10554:	46c0      	nop			; (mov r8, r8)
   10556:	46bd      	mov	sp, r7
   10558:	bd80      	pop	{r7, pc}
   1055a:	46c0      	nop			; (mov r8, r8)
   1055c:	20001abc 	.word	0x20001abc
   10560:	00010349 	.word	0x00010349
   10564:	000103cd 	.word	0x000103cd

00010568 <tmr_write_cmpreg>:
   10568:	b580      	push	{r7, lr}
   1056a:	b082      	sub	sp, #8
   1056c:	af00      	add	r7, sp, #0
   1056e:	0002      	movs	r2, r0
   10570:	1dbb      	adds	r3, r7, #6
   10572:	801a      	strh	r2, [r3, #0]
   10574:	1dbb      	adds	r3, r7, #6
   10576:	881a      	ldrh	r2, [r3, #0]
   10578:	4b04      	ldr	r3, [pc, #16]	; (1058c <tmr_write_cmpreg+0x24>)
   1057a:	2100      	movs	r1, #0
   1057c:	0018      	movs	r0, r3
   1057e:	4b04      	ldr	r3, [pc, #16]	; (10590 <tmr_write_cmpreg+0x28>)
   10580:	4798      	blx	r3
   10582:	46c0      	nop			; (mov r8, r8)
   10584:	46bd      	mov	sp, r7
   10586:	b002      	add	sp, #8
   10588:	bd80      	pop	{r7, pc}
   1058a:	46c0      	nop			; (mov r8, r8)
   1058c:	20001abc 	.word	0x20001abc
   10590:	00006209 	.word	0x00006209

00010594 <tc_ovf_callback>:
   10594:	b580      	push	{r7, lr}
   10596:	b082      	sub	sp, #8
   10598:	af00      	add	r7, sp, #0
   1059a:	6078      	str	r0, [r7, #4]
   1059c:	4b02      	ldr	r3, [pc, #8]	; (105a8 <tc_ovf_callback+0x14>)
   1059e:	4798      	blx	r3
   105a0:	46c0      	nop			; (mov r8, r8)
   105a2:	46bd      	mov	sp, r7
   105a4:	b002      	add	sp, #8
   105a6:	bd80      	pop	{r7, pc}
   105a8:	00014911 	.word	0x00014911

000105ac <tc_cca_callback>:
   105ac:	b580      	push	{r7, lr}
   105ae:	b082      	sub	sp, #8
   105b0:	af00      	add	r7, sp, #0
   105b2:	6078      	str	r0, [r7, #4]
   105b4:	4b02      	ldr	r3, [pc, #8]	; (105c0 <tc_cca_callback+0x14>)
   105b6:	4798      	blx	r3
   105b8:	46c0      	nop			; (mov r8, r8)
   105ba:	46bd      	mov	sp, r7
   105bc:	b002      	add	sp, #8
   105be:	bd80      	pop	{r7, pc}
   105c0:	00014959 	.word	0x00014959

000105c4 <tmr_init>:
   105c4:	b580      	push	{r7, lr}
   105c6:	b082      	sub	sp, #8
   105c8:	af00      	add	r7, sp, #0
   105ca:	4b2b      	ldr	r3, [pc, #172]	; (10678 <tmr_init+0xb4>)
   105cc:	0018      	movs	r0, r3
   105ce:	4b2b      	ldr	r3, [pc, #172]	; (1067c <tmr_init+0xb8>)
   105d0:	4798      	blx	r3
   105d2:	4b29      	ldr	r3, [pc, #164]	; (10678 <tmr_init+0xb4>)
   105d4:	2201      	movs	r2, #1
   105d6:	4252      	negs	r2, r2
   105d8:	855a      	strh	r2, [r3, #42]	; 0x2a
   105da:	4a27      	ldr	r2, [pc, #156]	; (10678 <tmr_init+0xb4>)
   105dc:	4928      	ldr	r1, [pc, #160]	; (10680 <tmr_init+0xbc>)
   105de:	4b29      	ldr	r3, [pc, #164]	; (10684 <tmr_init+0xc0>)
   105e0:	0018      	movs	r0, r3
   105e2:	4b29      	ldr	r3, [pc, #164]	; (10688 <tmr_init+0xc4>)
   105e4:	4798      	blx	r3
   105e6:	4929      	ldr	r1, [pc, #164]	; (1068c <tmr_init+0xc8>)
   105e8:	4b26      	ldr	r3, [pc, #152]	; (10684 <tmr_init+0xc0>)
   105ea:	2200      	movs	r2, #0
   105ec:	0018      	movs	r0, r3
   105ee:	4b28      	ldr	r3, [pc, #160]	; (10690 <tmr_init+0xcc>)
   105f0:	4798      	blx	r3
   105f2:	4928      	ldr	r1, [pc, #160]	; (10694 <tmr_init+0xd0>)
   105f4:	4b23      	ldr	r3, [pc, #140]	; (10684 <tmr_init+0xc0>)
   105f6:	2202      	movs	r2, #2
   105f8:	0018      	movs	r0, r3
   105fa:	4b25      	ldr	r3, [pc, #148]	; (10690 <tmr_init+0xcc>)
   105fc:	4798      	blx	r3
   105fe:	4b21      	ldr	r3, [pc, #132]	; (10684 <tmr_init+0xc0>)
   10600:	2100      	movs	r1, #0
   10602:	0018      	movs	r0, r3
   10604:	4b24      	ldr	r3, [pc, #144]	; (10698 <tmr_init+0xd4>)
   10606:	4798      	blx	r3
   10608:	4b1e      	ldr	r3, [pc, #120]	; (10684 <tmr_init+0xc0>)
   1060a:	0018      	movs	r0, r3
   1060c:	4b23      	ldr	r3, [pc, #140]	; (1069c <tmr_init+0xd8>)
   1060e:	4798      	blx	r3
   10610:	2000      	movs	r0, #0
   10612:	4b23      	ldr	r3, [pc, #140]	; (106a0 <tmr_init+0xdc>)
   10614:	4798      	blx	r3
   10616:	0002      	movs	r2, r0
   10618:	4b22      	ldr	r3, [pc, #136]	; (106a4 <tmr_init+0xe0>)
   1061a:	0010      	movs	r0, r2
   1061c:	4798      	blx	r3
   1061e:	1c02      	adds	r2, r0, #0
   10620:	4b21      	ldr	r3, [pc, #132]	; (106a8 <tmr_init+0xe4>)
   10622:	4922      	ldr	r1, [pc, #136]	; (106ac <tmr_init+0xe8>)
   10624:	1c10      	adds	r0, r2, #0
   10626:	4798      	blx	r3
   10628:	1c03      	adds	r3, r0, #0
   1062a:	607b      	str	r3, [r7, #4]
   1062c:	4b20      	ldr	r3, [pc, #128]	; (106b0 <tmr_init+0xec>)
   1062e:	6878      	ldr	r0, [r7, #4]
   10630:	4798      	blx	r3
   10632:	0002      	movs	r2, r0
   10634:	4b1b      	ldr	r3, [pc, #108]	; (106a4 <tmr_init+0xe0>)
   10636:	0010      	movs	r0, r2
   10638:	4798      	blx	r3
   1063a:	1c02      	adds	r2, r0, #0
   1063c:	4b1d      	ldr	r3, [pc, #116]	; (106b4 <tmr_init+0xf0>)
   1063e:	1c11      	adds	r1, r2, #0
   10640:	6878      	ldr	r0, [r7, #4]
   10642:	4798      	blx	r3
   10644:	1c03      	adds	r3, r0, #0
   10646:	1c1a      	adds	r2, r3, #0
   10648:	4b1b      	ldr	r3, [pc, #108]	; (106b8 <tmr_init+0xf4>)
   1064a:	21fc      	movs	r1, #252	; 0xfc
   1064c:	0589      	lsls	r1, r1, #22
   1064e:	1c10      	adds	r0, r2, #0
   10650:	4798      	blx	r3
   10652:	1e03      	subs	r3, r0, #0
   10654:	d006      	beq.n	10664 <tmr_init+0xa0>
   10656:	4b19      	ldr	r3, [pc, #100]	; (106bc <tmr_init+0xf8>)
   10658:	21fe      	movs	r1, #254	; 0xfe
   1065a:	0589      	lsls	r1, r1, #22
   1065c:	6878      	ldr	r0, [r7, #4]
   1065e:	4798      	blx	r3
   10660:	1c03      	adds	r3, r0, #0
   10662:	607b      	str	r3, [r7, #4]
   10664:	4b12      	ldr	r3, [pc, #72]	; (106b0 <tmr_init+0xec>)
   10666:	6878      	ldr	r0, [r7, #4]
   10668:	4798      	blx	r3
   1066a:	0003      	movs	r3, r0
   1066c:	b2db      	uxtb	r3, r3
   1066e:	0018      	movs	r0, r3
   10670:	46bd      	mov	sp, r7
   10672:	b002      	add	sp, #8
   10674:	bd80      	pop	{r7, pc}
   10676:	46c0      	nop			; (mov r8, r8)
   10678:	20001a84 	.word	0x20001a84
   1067c:	00010271 	.word	0x00010271
   10680:	42002000 	.word	0x42002000
   10684:	20001abc 	.word	0x20001abc
   10688:	00005d01 	.word	0x00005d01
   1068c:	00010595 	.word	0x00010595
   10690:	00005a05 	.word	0x00005a05
   10694:	000105ad 	.word	0x000105ad
   10698:	000103cd 	.word	0x000103cd
   1069c:	00010315 	.word	0x00010315
   106a0:	00005609 	.word	0x00005609
   106a4:	000158a9 	.word	0x000158a9
   106a8:	00015151 	.word	0x00015151
   106ac:	49742400 	.word	0x49742400
   106b0:	00014d89 	.word	0x00014d89
   106b4:	00015531 	.word	0x00015531
   106b8:	00014cd9 	.word	0x00014cd9
   106bc:	00014e2d 	.word	0x00014e2d

000106c0 <nvm_get_config_defaults>:
   106c0:	b580      	push	{r7, lr}
   106c2:	b082      	sub	sp, #8
   106c4:	af00      	add	r7, sp, #0
   106c6:	6078      	str	r0, [r7, #4]
   106c8:	687b      	ldr	r3, [r7, #4]
   106ca:	2200      	movs	r2, #0
   106cc:	701a      	strb	r2, [r3, #0]
   106ce:	687b      	ldr	r3, [r7, #4]
   106d0:	2201      	movs	r2, #1
   106d2:	705a      	strb	r2, [r3, #1]
   106d4:	4b08      	ldr	r3, [pc, #32]	; (106f8 <nvm_get_config_defaults+0x38>)
   106d6:	685b      	ldr	r3, [r3, #4]
   106d8:	06db      	lsls	r3, r3, #27
   106da:	0f1b      	lsrs	r3, r3, #28
   106dc:	b2db      	uxtb	r3, r3
   106de:	001a      	movs	r2, r3
   106e0:	687b      	ldr	r3, [r7, #4]
   106e2:	709a      	strb	r2, [r3, #2]
   106e4:	687b      	ldr	r3, [r7, #4]
   106e6:	2200      	movs	r2, #0
   106e8:	70da      	strb	r2, [r3, #3]
   106ea:	687b      	ldr	r3, [r7, #4]
   106ec:	2200      	movs	r2, #0
   106ee:	711a      	strb	r2, [r3, #4]
   106f0:	46c0      	nop			; (mov r8, r8)
   106f2:	46bd      	mov	sp, r7
   106f4:	b002      	add	sp, #8
   106f6:	bd80      	pop	{r7, pc}
   106f8:	41004000 	.word	0x41004000

000106fc <nvm_is_ready>:
   106fc:	b580      	push	{r7, lr}
   106fe:	b082      	sub	sp, #8
   10700:	af00      	add	r7, sp, #0
   10702:	4b07      	ldr	r3, [pc, #28]	; (10720 <nvm_is_ready+0x24>)
   10704:	607b      	str	r3, [r7, #4]
   10706:	687b      	ldr	r3, [r7, #4]
   10708:	7d1b      	ldrb	r3, [r3, #20]
   1070a:	b2db      	uxtb	r3, r3
   1070c:	001a      	movs	r2, r3
   1070e:	2301      	movs	r3, #1
   10710:	4013      	ands	r3, r2
   10712:	1e5a      	subs	r2, r3, #1
   10714:	4193      	sbcs	r3, r2
   10716:	b2db      	uxtb	r3, r3
   10718:	0018      	movs	r0, r3
   1071a:	46bd      	mov	sp, r7
   1071c:	b002      	add	sp, #8
   1071e:	bd80      	pop	{r7, pc}
   10720:	41004000 	.word	0x41004000

00010724 <nvm_read>:
   10724:	b5b0      	push	{r4, r5, r7, lr}
   10726:	b086      	sub	sp, #24
   10728:	af00      	add	r7, sp, #0
   1072a:	60b9      	str	r1, [r7, #8]
   1072c:	607a      	str	r2, [r7, #4]
   1072e:	603b      	str	r3, [r7, #0]
   10730:	230f      	movs	r3, #15
   10732:	18fb      	adds	r3, r7, r3
   10734:	1c02      	adds	r2, r0, #0
   10736:	701a      	strb	r2, [r3, #0]
   10738:	2317      	movs	r3, #23
   1073a:	18fc      	adds	r4, r7, r3
   1073c:	683d      	ldr	r5, [r7, #0]
   1073e:	687a      	ldr	r2, [r7, #4]
   10740:	68b9      	ldr	r1, [r7, #8]
   10742:	230f      	movs	r3, #15
   10744:	18fb      	adds	r3, r7, r3
   10746:	7818      	ldrb	r0, [r3, #0]
   10748:	002b      	movs	r3, r5
   1074a:	4d06      	ldr	r5, [pc, #24]	; (10764 <nvm_read+0x40>)
   1074c:	47a8      	blx	r5
   1074e:	0003      	movs	r3, r0
   10750:	7023      	strb	r3, [r4, #0]
   10752:	2317      	movs	r3, #23
   10754:	18fb      	adds	r3, r7, r3
   10756:	781b      	ldrb	r3, [r3, #0]
   10758:	b25b      	sxtb	r3, r3
   1075a:	0018      	movs	r0, r3
   1075c:	46bd      	mov	sp, r7
   1075e:	b006      	add	sp, #24
   10760:	bdb0      	pop	{r4, r5, r7, pc}
   10762:	46c0      	nop			; (mov r8, r8)
   10764:	00010769 	.word	0x00010769

00010768 <nvm_sam0_read>:
   10768:	b580      	push	{r7, lr}
   1076a:	b088      	sub	sp, #32
   1076c:	af00      	add	r7, sp, #0
   1076e:	60b9      	str	r1, [r7, #8]
   10770:	607a      	str	r2, [r7, #4]
   10772:	603b      	str	r3, [r7, #0]
   10774:	230f      	movs	r3, #15
   10776:	18fb      	adds	r3, r7, r3
   10778:	1c02      	adds	r2, r0, #0
   1077a:	701a      	strb	r2, [r3, #0]
   1077c:	230f      	movs	r3, #15
   1077e:	18fb      	adds	r3, r7, r3
   10780:	781b      	ldrb	r3, [r3, #0]
   10782:	2b00      	cmp	r3, #0
   10784:	d14d      	bne.n	10822 <nvm_sam0_read+0xba>
   10786:	4b2b      	ldr	r3, [pc, #172]	; (10834 <nvm_sam0_read+0xcc>)
   10788:	617b      	str	r3, [r7, #20]
   1078a:	4b2b      	ldr	r3, [pc, #172]	; (10838 <nvm_sam0_read+0xd0>)
   1078c:	4798      	blx	r3
   1078e:	0003      	movs	r3, r0
   10790:	001a      	movs	r2, r3
   10792:	2301      	movs	r3, #1
   10794:	4053      	eors	r3, r2
   10796:	b2db      	uxtb	r3, r3
   10798:	2b00      	cmp	r3, #0
   1079a:	d001      	beq.n	107a0 <nvm_sam0_read+0x38>
   1079c:	2305      	movs	r3, #5
   1079e:	e044      	b.n	1082a <nvm_sam0_read+0xc2>
   107a0:	697b      	ldr	r3, [r7, #20]
   107a2:	2220      	movs	r2, #32
   107a4:	32ff      	adds	r2, #255	; 0xff
   107a6:	831a      	strh	r2, [r3, #24]
   107a8:	68bb      	ldr	r3, [r7, #8]
   107aa:	085b      	lsrs	r3, r3, #1
   107ac:	61fb      	str	r3, [r7, #28]
   107ae:	231a      	movs	r3, #26
   107b0:	18fb      	adds	r3, r7, r3
   107b2:	2200      	movs	r2, #0
   107b4:	801a      	strh	r2, [r3, #0]
   107b6:	e02d      	b.n	10814 <nvm_sam0_read+0xac>
   107b8:	69fb      	ldr	r3, [r7, #28]
   107ba:	1c5a      	adds	r2, r3, #1
   107bc:	61fa      	str	r2, [r7, #28]
   107be:	005b      	lsls	r3, r3, #1
   107c0:	001a      	movs	r2, r3
   107c2:	2312      	movs	r3, #18
   107c4:	18fb      	adds	r3, r7, r3
   107c6:	8812      	ldrh	r2, [r2, #0]
   107c8:	801a      	strh	r2, [r3, #0]
   107ca:	231a      	movs	r3, #26
   107cc:	18fb      	adds	r3, r7, r3
   107ce:	881b      	ldrh	r3, [r3, #0]
   107d0:	687a      	ldr	r2, [r7, #4]
   107d2:	18d3      	adds	r3, r2, r3
   107d4:	2212      	movs	r2, #18
   107d6:	18ba      	adds	r2, r7, r2
   107d8:	8812      	ldrh	r2, [r2, #0]
   107da:	b2d2      	uxtb	r2, r2
   107dc:	701a      	strb	r2, [r3, #0]
   107de:	231a      	movs	r3, #26
   107e0:	18fb      	adds	r3, r7, r3
   107e2:	881a      	ldrh	r2, [r3, #0]
   107e4:	683b      	ldr	r3, [r7, #0]
   107e6:	3b01      	subs	r3, #1
   107e8:	429a      	cmp	r2, r3
   107ea:	d20c      	bcs.n	10806 <nvm_sam0_read+0x9e>
   107ec:	231a      	movs	r3, #26
   107ee:	18fb      	adds	r3, r7, r3
   107f0:	881b      	ldrh	r3, [r3, #0]
   107f2:	3301      	adds	r3, #1
   107f4:	687a      	ldr	r2, [r7, #4]
   107f6:	18d3      	adds	r3, r2, r3
   107f8:	2212      	movs	r2, #18
   107fa:	18ba      	adds	r2, r7, r2
   107fc:	8812      	ldrh	r2, [r2, #0]
   107fe:	0a12      	lsrs	r2, r2, #8
   10800:	b292      	uxth	r2, r2
   10802:	b2d2      	uxtb	r2, r2
   10804:	701a      	strb	r2, [r3, #0]
   10806:	231a      	movs	r3, #26
   10808:	18fb      	adds	r3, r7, r3
   1080a:	221a      	movs	r2, #26
   1080c:	18ba      	adds	r2, r7, r2
   1080e:	8812      	ldrh	r2, [r2, #0]
   10810:	3202      	adds	r2, #2
   10812:	801a      	strh	r2, [r3, #0]
   10814:	231a      	movs	r3, #26
   10816:	18fb      	adds	r3, r7, r3
   10818:	881a      	ldrh	r2, [r3, #0]
   1081a:	683b      	ldr	r3, [r7, #0]
   1081c:	429a      	cmp	r2, r3
   1081e:	d3cb      	bcc.n	107b8 <nvm_sam0_read+0x50>
   10820:	e002      	b.n	10828 <nvm_sam0_read+0xc0>
   10822:	2308      	movs	r3, #8
   10824:	425b      	negs	r3, r3
   10826:	e000      	b.n	1082a <nvm_sam0_read+0xc2>
   10828:	2300      	movs	r3, #0
   1082a:	0018      	movs	r0, r3
   1082c:	46bd      	mov	sp, r7
   1082e:	b008      	add	sp, #32
   10830:	bd80      	pop	{r7, pc}
   10832:	46c0      	nop			; (mov r8, r8)
   10834:	41004000 	.word	0x41004000
   10838:	000106fd 	.word	0x000106fd

0001083c <nvm_init>:
   1083c:	b580      	push	{r7, lr}
   1083e:	b084      	sub	sp, #16
   10840:	af00      	add	r7, sp, #0
   10842:	0002      	movs	r2, r0
   10844:	1dfb      	adds	r3, r7, #7
   10846:	701a      	strb	r2, [r3, #0]
   10848:	1dfb      	adds	r3, r7, #7
   1084a:	781b      	ldrb	r3, [r3, #0]
   1084c:	2b00      	cmp	r3, #0
   1084e:	d113      	bne.n	10878 <nvm_init+0x3c>
   10850:	2308      	movs	r3, #8
   10852:	18fb      	adds	r3, r7, r3
   10854:	0018      	movs	r0, r3
   10856:	4b0b      	ldr	r3, [pc, #44]	; (10884 <nvm_init+0x48>)
   10858:	4798      	blx	r3
   1085a:	2308      	movs	r3, #8
   1085c:	18fb      	adds	r3, r7, r3
   1085e:	2200      	movs	r2, #0
   10860:	705a      	strb	r2, [r3, #1]
   10862:	2308      	movs	r3, #8
   10864:	18fb      	adds	r3, r7, r3
   10866:	2202      	movs	r2, #2
   10868:	709a      	strb	r2, [r3, #2]
   1086a:	2308      	movs	r3, #8
   1086c:	18fb      	adds	r3, r7, r3
   1086e:	0018      	movs	r0, r3
   10870:	4b05      	ldr	r3, [pc, #20]	; (10888 <nvm_init+0x4c>)
   10872:	4798      	blx	r3
   10874:	2300      	movs	r3, #0
   10876:	e001      	b.n	1087c <nvm_init+0x40>
   10878:	2308      	movs	r3, #8
   1087a:	425b      	negs	r3, r3
   1087c:	0018      	movs	r0, r3
   1087e:	46bd      	mov	sp, r7
   10880:	b004      	add	sp, #16
   10882:	bd80      	pop	{r7, pc}
   10884:	000106c1 	.word	0x000106c1
   10888:	00000f1d 	.word	0x00000f1d

0001088c <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
   1088c:	b580      	push	{r7, lr}
   1088e:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
   10890:	f3bf 8f4f 	dsb	sy
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
   10894:	4b03      	ldr	r3, [pc, #12]	; (108a4 <__NVIC_SystemReset+0x18>)
   10896:	4a04      	ldr	r2, [pc, #16]	; (108a8 <__NVIC_SystemReset+0x1c>)
   10898:	60da      	str	r2, [r3, #12]
   1089a:	f3bf 8f4f 	dsb	sy
                 SCB_AIRCR_SYSRESETREQ_Msk);
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
   1089e:	46c0      	nop			; (mov r8, r8)
   108a0:	e7fd      	b.n	1089e <__NVIC_SystemReset+0x12>
   108a2:	46c0      	nop			; (mov r8, r8)
   108a4:	e000ed00 	.word	0xe000ed00
   108a8:	05fa0004 	.word	0x05fa0004

000108ac <system_pinmux_get_group_from_gpio_pin>:
{
   108ac:	b580      	push	{r7, lr}
   108ae:	b084      	sub	sp, #16
   108b0:	af00      	add	r7, sp, #0
   108b2:	0002      	movs	r2, r0
   108b4:	1dfb      	adds	r3, r7, #7
   108b6:	701a      	strb	r2, [r3, #0]
	uint8_t port_index  = (gpio_pin / 128);
   108b8:	230f      	movs	r3, #15
   108ba:	18fb      	adds	r3, r7, r3
   108bc:	1dfa      	adds	r2, r7, #7
   108be:	7812      	ldrb	r2, [r2, #0]
   108c0:	09d2      	lsrs	r2, r2, #7
   108c2:	701a      	strb	r2, [r3, #0]
	uint8_t group_index = (gpio_pin / 32);
   108c4:	230e      	movs	r3, #14
   108c6:	18fb      	adds	r3, r7, r3
   108c8:	1dfa      	adds	r2, r7, #7
   108ca:	7812      	ldrb	r2, [r2, #0]
   108cc:	0952      	lsrs	r2, r2, #5
   108ce:	701a      	strb	r2, [r3, #0]
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;
   108d0:	4b0d      	ldr	r3, [pc, #52]	; (10908 <system_pinmux_get_group_from_gpio_pin+0x5c>)
   108d2:	60bb      	str	r3, [r7, #8]
	if (port_index < PORT_INST_NUM) {
   108d4:	230f      	movs	r3, #15
   108d6:	18fb      	adds	r3, r7, r3
   108d8:	781b      	ldrb	r3, [r3, #0]
   108da:	2b00      	cmp	r3, #0
   108dc:	d10f      	bne.n	108fe <system_pinmux_get_group_from_gpio_pin+0x52>
		return &(ports[port_index]->Group[group_index]);
   108de:	230f      	movs	r3, #15
   108e0:	18fb      	adds	r3, r7, r3
   108e2:	781b      	ldrb	r3, [r3, #0]
   108e4:	009b      	lsls	r3, r3, #2
   108e6:	2210      	movs	r2, #16
   108e8:	4694      	mov	ip, r2
   108ea:	44bc      	add	ip, r7
   108ec:	4463      	add	r3, ip
   108ee:	3b08      	subs	r3, #8
   108f0:	681a      	ldr	r2, [r3, #0]
   108f2:	230e      	movs	r3, #14
   108f4:	18fb      	adds	r3, r7, r3
   108f6:	781b      	ldrb	r3, [r3, #0]
   108f8:	01db      	lsls	r3, r3, #7
   108fa:	18d3      	adds	r3, r2, r3
   108fc:	e000      	b.n	10900 <system_pinmux_get_group_from_gpio_pin+0x54>
		return NULL;
   108fe:	2300      	movs	r3, #0
}
   10900:	0018      	movs	r0, r3
   10902:	46bd      	mov	sp, r7
   10904:	b004      	add	sp, #16
   10906:	bd80      	pop	{r7, pc}
   10908:	40002800 	.word	0x40002800

0001090c <system_reset>:
 * Resets the MCU and all associated peripherals and registers, except RTC,
 * OSC32KCTRL, RSTC, GCLK (if WRTLOCK is set), and I/O retention state of PM.
 *
 */
static inline void system_reset(void)
{
   1090c:	b580      	push	{r7, lr}
   1090e:	af00      	add	r7, sp, #0
	NVIC_SystemReset();
   10910:	4b00      	ldr	r3, [pc, #0]	; (10914 <system_reset+0x8>)
   10912:	4798      	blx	r3
   10914:	0001088d 	.word	0x0001088d

00010918 <port_get_group_from_gpio_pin>:
{
   10918:	b580      	push	{r7, lr}
   1091a:	b082      	sub	sp, #8
   1091c:	af00      	add	r7, sp, #0
   1091e:	0002      	movs	r2, r0
   10920:	1dfb      	adds	r3, r7, #7
   10922:	701a      	strb	r2, [r3, #0]
	return system_pinmux_get_group_from_gpio_pin(gpio_pin);
   10924:	1dfb      	adds	r3, r7, #7
   10926:	781b      	ldrb	r3, [r3, #0]
   10928:	0018      	movs	r0, r3
   1092a:	4b03      	ldr	r3, [pc, #12]	; (10938 <port_get_group_from_gpio_pin+0x20>)
   1092c:	4798      	blx	r3
   1092e:	0003      	movs	r3, r0
}
   10930:	0018      	movs	r0, r3
   10932:	46bd      	mov	sp, r7
   10934:	b002      	add	sp, #8
   10936:	bd80      	pop	{r7, pc}
   10938:	000108ad 	.word	0x000108ad

0001093c <port_pin_set_output_level>:
{
   1093c:	b580      	push	{r7, lr}
   1093e:	b084      	sub	sp, #16
   10940:	af00      	add	r7, sp, #0
   10942:	0002      	movs	r2, r0
   10944:	1dfb      	adds	r3, r7, #7
   10946:	701a      	strb	r2, [r3, #0]
   10948:	1dbb      	adds	r3, r7, #6
   1094a:	1c0a      	adds	r2, r1, #0
   1094c:	701a      	strb	r2, [r3, #0]
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
   1094e:	1dfb      	adds	r3, r7, #7
   10950:	781b      	ldrb	r3, [r3, #0]
   10952:	0018      	movs	r0, r3
   10954:	4b0d      	ldr	r3, [pc, #52]	; (1098c <port_pin_set_output_level+0x50>)
   10956:	4798      	blx	r3
   10958:	0003      	movs	r3, r0
   1095a:	60fb      	str	r3, [r7, #12]
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));
   1095c:	1dfb      	adds	r3, r7, #7
   1095e:	781b      	ldrb	r3, [r3, #0]
   10960:	221f      	movs	r2, #31
   10962:	4013      	ands	r3, r2
   10964:	2201      	movs	r2, #1
   10966:	409a      	lsls	r2, r3
   10968:	0013      	movs	r3, r2
   1096a:	60bb      	str	r3, [r7, #8]
	if (level) {
   1096c:	1dbb      	adds	r3, r7, #6
   1096e:	781b      	ldrb	r3, [r3, #0]
   10970:	2b00      	cmp	r3, #0
   10972:	d003      	beq.n	1097c <port_pin_set_output_level+0x40>
		port_base->OUTSET.reg = pin_mask;
   10974:	68fb      	ldr	r3, [r7, #12]
   10976:	68ba      	ldr	r2, [r7, #8]
   10978:	619a      	str	r2, [r3, #24]
}
   1097a:	e002      	b.n	10982 <port_pin_set_output_level+0x46>
		port_base->OUTCLR.reg = pin_mask;
   1097c:	68fb      	ldr	r3, [r7, #12]
   1097e:	68ba      	ldr	r2, [r7, #8]
   10980:	615a      	str	r2, [r3, #20]
}
   10982:	46c0      	nop			; (mov r8, r8)
   10984:	46bd      	mov	sp, r7
   10986:	b004      	add	sp, #16
   10988:	bd80      	pop	{r7, pc}
   1098a:	46c0      	nop			; (mov r8, r8)
   1098c:	00010919 	.word	0x00010919

00010990 <getloraFactor>:

extern unsigned int Toggle_Count, Toggle_Continue, Toggle_End, Toggle_Old;

uttec_t loraFactor = {0, };

uttec_t* getloraFactor(void){
   10990:	b580      	push	{r7, lr}
   10992:	af00      	add	r7, sp, #0
	return &loraFactor;
   10994:	4b01      	ldr	r3, [pc, #4]	; (1099c <getloraFactor+0xc>)
}
   10996:	0018      	movs	r0, r3
   10998:	46bd      	mov	sp, r7
   1099a:	bd80      	pop	{r7, pc}
   1099c:	20000c84 	.word	0x20000c84

000109a0 <HandleRxData>:

void HandleRxData(void)
{
   109a0:	b590      	push	{r4, r7, lr}
   109a2:	b083      	sub	sp, #12
   109a4:	af00      	add	r7, sp, #0
	uint8_t i=0;
   109a6:	1dfb      	adds	r3, r7, #7
   109a8:	2200      	movs	r2, #0
   109aa:	701a      	strb	r2, [r3, #0]
	// chkecho = false;
	if( MiApp_MessageAvailable() )
   109ac:	4b66      	ldr	r3, [pc, #408]	; (10b48 <HandleRxData+0x1a8>)
   109ae:	4798      	blx	r3
   109b0:	1e03      	subs	r3, r0, #0
   109b2:	d100      	bne.n	109b6 <HandleRxData+0x16>
   109b4:	e0c3      	b.n	10b3e <HandleRxData+0x19e>
	{
		// printf("test by hong\r\n");
		// test
		if(chkecho)printf("\n\r[Data Received]\n\r");
   109b6:	4b65      	ldr	r3, [pc, #404]	; (10b4c <HandleRxData+0x1ac>)
   109b8:	781b      	ldrb	r3, [r3, #0]
   109ba:	2b00      	cmp	r3, #0
   109bc:	d003      	beq.n	109c6 <HandleRxData+0x26>
   109be:	4b64      	ldr	r3, [pc, #400]	; (10b50 <HandleRxData+0x1b0>)
   109c0:	0018      	movs	r0, r3
   109c2:	4b64      	ldr	r3, [pc, #400]	; (10b54 <HandleRxData+0x1b4>)
   109c4:	4798      	blx	r3
		if(chkecho)printf("SRC PID: %x\r\n",rxMessage.SourcePANID);
   109c6:	4b61      	ldr	r3, [pc, #388]	; (10b4c <HandleRxData+0x1ac>)
   109c8:	781b      	ldrb	r3, [r3, #0]
   109ca:	2b00      	cmp	r3, #0
   109cc:	d006      	beq.n	109dc <HandleRxData+0x3c>
   109ce:	4b62      	ldr	r3, [pc, #392]	; (10b58 <HandleRxData+0x1b8>)
   109d0:	885a      	ldrh	r2, [r3, #2]
   109d2:	4b62      	ldr	r3, [pc, #392]	; (10b5c <HandleRxData+0x1bc>)
   109d4:	1c11      	adds	r1, r2, #0
   109d6:	0018      	movs	r0, r3
   109d8:	4b5e      	ldr	r3, [pc, #376]	; (10b54 <HandleRxData+0x1b4>)
   109da:	4798      	blx	r3
		if(chkecho)printf("SRC ADR: %.2x%.2x\r\n",rxMessage.SourceAddress[1],rxMessage.SourceAddress[0]);
   109dc:	4b5b      	ldr	r3, [pc, #364]	; (10b4c <HandleRxData+0x1ac>)
   109de:	781b      	ldrb	r3, [r3, #0]
   109e0:	2b00      	cmp	r3, #0
   109e2:	d00c      	beq.n	109fe <HandleRxData+0x5e>
   109e4:	4b5c      	ldr	r3, [pc, #368]	; (10b58 <HandleRxData+0x1b8>)
   109e6:	685b      	ldr	r3, [r3, #4]
   109e8:	3301      	adds	r3, #1
   109ea:	781b      	ldrb	r3, [r3, #0]
   109ec:	0019      	movs	r1, r3
   109ee:	4b5a      	ldr	r3, [pc, #360]	; (10b58 <HandleRxData+0x1b8>)
   109f0:	685b      	ldr	r3, [r3, #4]
   109f2:	781b      	ldrb	r3, [r3, #0]
   109f4:	001a      	movs	r2, r3
   109f6:	4b5a      	ldr	r3, [pc, #360]	; (10b60 <HandleRxData+0x1c0>)
   109f8:	0018      	movs	r0, r3
   109fa:	4b56      	ldr	r3, [pc, #344]	; (10b54 <HandleRxData+0x1b4>)
   109fc:	4798      	blx	r3
		if(chkecho)printf("Length: %d\r\n",rxMessage.PayloadSize);
   109fe:	4b53      	ldr	r3, [pc, #332]	; (10b4c <HandleRxData+0x1ac>)
   10a00:	781b      	ldrb	r3, [r3, #0]
   10a02:	2b00      	cmp	r3, #0
   10a04:	d007      	beq.n	10a16 <HandleRxData+0x76>
   10a06:	4b54      	ldr	r3, [pc, #336]	; (10b58 <HandleRxData+0x1b8>)
   10a08:	7b1b      	ldrb	r3, [r3, #12]
   10a0a:	001a      	movs	r2, r3
   10a0c:	4b55      	ldr	r3, [pc, #340]	; (10b64 <HandleRxData+0x1c4>)
   10a0e:	0011      	movs	r1, r2
   10a10:	0018      	movs	r0, r3
   10a12:	4b50      	ldr	r3, [pc, #320]	; (10b54 <HandleRxData+0x1b4>)
   10a14:	4798      	blx	r3
		if(chkecho)printf("RSSI: %ddBm\r\n",rxMessage.PacketRSSI);
   10a16:	4b4d      	ldr	r3, [pc, #308]	; (10b4c <HandleRxData+0x1ac>)
   10a18:	781b      	ldrb	r3, [r3, #0]
   10a1a:	2b00      	cmp	r3, #0
   10a1c:	d008      	beq.n	10a30 <HandleRxData+0x90>
   10a1e:	4b4e      	ldr	r3, [pc, #312]	; (10b58 <HandleRxData+0x1b8>)
   10a20:	220e      	movs	r2, #14
   10a22:	5e9b      	ldrsh	r3, [r3, r2]
   10a24:	001a      	movs	r2, r3
   10a26:	4b50      	ldr	r3, [pc, #320]	; (10b68 <HandleRxData+0x1c8>)
   10a28:	0011      	movs	r1, r2
   10a2a:	0018      	movs	r0, r3
   10a2c:	4b49      	ldr	r3, [pc, #292]	; (10b54 <HandleRxData+0x1b4>)
   10a2e:	4798      	blx	r3
		if(chkecho)printf("\n\r");
   10a30:	4b46      	ldr	r3, [pc, #280]	; (10b4c <HandleRxData+0x1ac>)
   10a32:	781b      	ldrb	r3, [r3, #0]
   10a34:	2b00      	cmp	r3, #0
   10a36:	d003      	beq.n	10a40 <HandleRxData+0xa0>
   10a38:	4b4c      	ldr	r3, [pc, #304]	; (10b6c <HandleRxData+0x1cc>)
   10a3a:	0018      	movs	r0, r3
   10a3c:	4b45      	ldr	r3, [pc, #276]	; (10b54 <HandleRxData+0x1b4>)
   10a3e:	4798      	blx	r3
		if(chkecho)printf("Character: \r\n");		
   10a40:	4b42      	ldr	r3, [pc, #264]	; (10b4c <HandleRxData+0x1ac>)
   10a42:	781b      	ldrb	r3, [r3, #0]
   10a44:	2b00      	cmp	r3, #0
   10a46:	d003      	beq.n	10a50 <HandleRxData+0xb0>
   10a48:	4b49      	ldr	r3, [pc, #292]	; (10b70 <HandleRxData+0x1d0>)
   10a4a:	0018      	movs	r0, r3
   10a4c:	4b49      	ldr	r3, [pc, #292]	; (10b74 <HandleRxData+0x1d4>)
   10a4e:	4798      	blx	r3
		for(i=0;i<rxMessage.PayloadSize-2;i++){
   10a50:	1dfb      	adds	r3, r7, #7
   10a52:	2200      	movs	r2, #0
   10a54:	701a      	strb	r2, [r3, #0]
   10a56:	e017      	b.n	10a88 <HandleRxData+0xe8>
			printf("%c",*(uint8_t*)(rxMessage.Payload+i));			
   10a58:	4b3f      	ldr	r3, [pc, #252]	; (10b58 <HandleRxData+0x1b8>)
   10a5a:	689a      	ldr	r2, [r3, #8]
   10a5c:	1dfb      	adds	r3, r7, #7
   10a5e:	781b      	ldrb	r3, [r3, #0]
   10a60:	18d3      	adds	r3, r2, r3
   10a62:	781b      	ldrb	r3, [r3, #0]
   10a64:	0018      	movs	r0, r3
   10a66:	4b44      	ldr	r3, [pc, #272]	; (10b78 <HandleRxData+0x1d8>)
   10a68:	4798      	blx	r3
			error_buff_new[i] = *(uint8_t*)(rxMessage.Payload+i);
   10a6a:	1dfb      	adds	r3, r7, #7
   10a6c:	781a      	ldrb	r2, [r3, #0]
   10a6e:	4b3a      	ldr	r3, [pc, #232]	; (10b58 <HandleRxData+0x1b8>)
   10a70:	6899      	ldr	r1, [r3, #8]
   10a72:	1dfb      	adds	r3, r7, #7
   10a74:	781b      	ldrb	r3, [r3, #0]
   10a76:	18cb      	adds	r3, r1, r3
   10a78:	7819      	ldrb	r1, [r3, #0]
   10a7a:	4b40      	ldr	r3, [pc, #256]	; (10b7c <HandleRxData+0x1dc>)
   10a7c:	5499      	strb	r1, [r3, r2]
		for(i=0;i<rxMessage.PayloadSize-2;i++){
   10a7e:	1dfb      	adds	r3, r7, #7
   10a80:	781a      	ldrb	r2, [r3, #0]
   10a82:	1dfb      	adds	r3, r7, #7
   10a84:	3201      	adds	r2, #1
   10a86:	701a      	strb	r2, [r3, #0]
   10a88:	1dfb      	adds	r3, r7, #7
   10a8a:	781a      	ldrb	r2, [r3, #0]
   10a8c:	4b32      	ldr	r3, [pc, #200]	; (10b58 <HandleRxData+0x1b8>)
   10a8e:	7b1b      	ldrb	r3, [r3, #12]
   10a90:	3b02      	subs	r3, #2
   10a92:	429a      	cmp	r2, r3
   10a94:	dbe0      	blt.n	10a58 <HandleRxData+0xb8>
		}
		loraFactor.rssi = rxMessage.PacketRSSI;
   10a96:	4b30      	ldr	r3, [pc, #192]	; (10b58 <HandleRxData+0x1b8>)
   10a98:	220e      	movs	r2, #14
   10a9a:	5e9b      	ldrsh	r3, [r3, r2]
   10a9c:	b2da      	uxtb	r2, r3
   10a9e:	4b38      	ldr	r3, [pc, #224]	; (10b80 <HandleRxData+0x1e0>)
   10aa0:	709a      	strb	r2, [r3, #2]
		/*		
		*/	
		// if(chkecho) printf("rx received by hong. 2023.12.20. 20:00\r\n");
						
		error_buff_new[7] = error_buff_new[6] + (error_buff_new[5]*10) + (error_buff_new[4]*100) + (error_buff_new[3]*1000) + (error_buff_new[2]*10000) + (error_buff_new[1]*100000) + (error_buff_new[0]*1000000);
   10aa2:	4b36      	ldr	r3, [pc, #216]	; (10b7c <HandleRxData+0x1dc>)
   10aa4:	799a      	ldrb	r2, [r3, #6]
   10aa6:	4b35      	ldr	r3, [pc, #212]	; (10b7c <HandleRxData+0x1dc>)
   10aa8:	791b      	ldrb	r3, [r3, #4]
   10aaa:	2164      	movs	r1, #100	; 0x64
   10aac:	434b      	muls	r3, r1
   10aae:	b2d9      	uxtb	r1, r3
   10ab0:	4b32      	ldr	r3, [pc, #200]	; (10b7c <HandleRxData+0x1dc>)
   10ab2:	795b      	ldrb	r3, [r3, #5]
   10ab4:	1c18      	adds	r0, r3, #0
   10ab6:	0080      	lsls	r0, r0, #2
   10ab8:	18c3      	adds	r3, r0, r3
   10aba:	18db      	adds	r3, r3, r3
   10abc:	b2db      	uxtb	r3, r3
   10abe:	18cb      	adds	r3, r1, r3
   10ac0:	b2db      	uxtb	r3, r3
   10ac2:	18d3      	adds	r3, r2, r3
   10ac4:	b2da      	uxtb	r2, r3
   10ac6:	4b2d      	ldr	r3, [pc, #180]	; (10b7c <HandleRxData+0x1dc>)
   10ac8:	789b      	ldrb	r3, [r3, #2]
   10aca:	011b      	lsls	r3, r3, #4
   10acc:	b2d9      	uxtb	r1, r3
   10ace:	4b2b      	ldr	r3, [pc, #172]	; (10b7c <HandleRxData+0x1dc>)
   10ad0:	78db      	ldrb	r3, [r3, #3]
   10ad2:	2018      	movs	r0, #24
   10ad4:	4240      	negs	r0, r0
   10ad6:	4343      	muls	r3, r0
   10ad8:	b2db      	uxtb	r3, r3
   10ada:	18cb      	adds	r3, r1, r3
   10adc:	b2db      	uxtb	r3, r3
   10ade:	18d3      	adds	r3, r2, r3
   10ae0:	b2da      	uxtb	r2, r3
   10ae2:	4b26      	ldr	r3, [pc, #152]	; (10b7c <HandleRxData+0x1dc>)
   10ae4:	781b      	ldrb	r3, [r3, #0]
   10ae6:	019b      	lsls	r3, r3, #6
   10ae8:	b2d9      	uxtb	r1, r3
   10aea:	4b24      	ldr	r3, [pc, #144]	; (10b7c <HandleRxData+0x1dc>)
   10aec:	785b      	ldrb	r3, [r3, #1]
   10aee:	2060      	movs	r0, #96	; 0x60
   10af0:	4240      	negs	r0, r0
   10af2:	4343      	muls	r3, r0
   10af4:	b2db      	uxtb	r3, r3
   10af6:	18cb      	adds	r3, r1, r3
   10af8:	b2db      	uxtb	r3, r3
   10afa:	18d3      	adds	r3, r2, r3
   10afc:	b2da      	uxtb	r2, r3
   10afe:	4b1f      	ldr	r3, [pc, #124]	; (10b7c <HandleRxData+0x1dc>)
   10b00:	71da      	strb	r2, [r3, #7]
		
		if((error_buff_old[7]+1) != error_buff_new[7])	error_counter++;
   10b02:	4b20      	ldr	r3, [pc, #128]	; (10b84 <HandleRxData+0x1e4>)
   10b04:	79db      	ldrb	r3, [r3, #7]
   10b06:	3301      	adds	r3, #1
   10b08:	4a1c      	ldr	r2, [pc, #112]	; (10b7c <HandleRxData+0x1dc>)
   10b0a:	79d2      	ldrb	r2, [r2, #7]
   10b0c:	4293      	cmp	r3, r2
   10b0e:	d004      	beq.n	10b1a <HandleRxData+0x17a>
   10b10:	4b1d      	ldr	r3, [pc, #116]	; (10b88 <HandleRxData+0x1e8>)
   10b12:	681b      	ldr	r3, [r3, #0]
   10b14:	1c5a      	adds	r2, r3, #1
   10b16:	4b1c      	ldr	r3, [pc, #112]	; (10b88 <HandleRxData+0x1e8>)
   10b18:	601a      	str	r2, [r3, #0]
		error_buff_old[7] = error_buff_new[7];
   10b1a:	4b18      	ldr	r3, [pc, #96]	; (10b7c <HandleRxData+0x1dc>)
   10b1c:	79da      	ldrb	r2, [r3, #7]
   10b1e:	4b19      	ldr	r3, [pc, #100]	; (10b84 <HandleRxData+0x1e4>)
   10b20:	71da      	strb	r2, [r3, #7]
		printf("\n\r");		
   10b22:	4b12      	ldr	r3, [pc, #72]	; (10b6c <HandleRxData+0x1cc>)
   10b24:	0018      	movs	r0, r3
   10b26:	4b0b      	ldr	r3, [pc, #44]	; (10b54 <HandleRxData+0x1b4>)
   10b28:	4798      	blx	r3
		MiApp_DiscardMessage();		
   10b2a:	4b18      	ldr	r3, [pc, #96]	; (10b8c <HandleRxData+0x1ec>)
   10b2c:	4798      	blx	r3
		broadcast_timeout_f = 1;
   10b2e:	4b18      	ldr	r3, [pc, #96]	; (10b90 <HandleRxData+0x1f0>)
   10b30:	2201      	movs	r2, #1
   10b32:	701a      	strb	r2, [r3, #0]
		Time_Buffer = 0;
   10b34:	4a17      	ldr	r2, [pc, #92]	; (10b94 <HandleRxData+0x1f4>)
   10b36:	2300      	movs	r3, #0
   10b38:	2400      	movs	r4, #0
   10b3a:	6013      	str	r3, [r2, #0]
   10b3c:	6054      	str	r4, [r2, #4]
	}
}
   10b3e:	46c0      	nop			; (mov r8, r8)
   10b40:	46bd      	mov	sp, r7
   10b42:	b003      	add	sp, #12
   10b44:	bd90      	pop	{r4, r7, pc}
   10b46:	46c0      	nop			; (mov r8, r8)
   10b48:	0000d7bd 	.word	0x0000d7bd
   10b4c:	2000002c 	.word	0x2000002c
   10b50:	0001cfa4 	.word	0x0001cfa4
   10b54:	0001782d 	.word	0x0001782d
   10b58:	20001504 	.word	0x20001504
   10b5c:	0001cfb8 	.word	0x0001cfb8
   10b60:	0001cfc8 	.word	0x0001cfc8
   10b64:	0001cfdc 	.word	0x0001cfdc
   10b68:	0001cfec 	.word	0x0001cfec
   10b6c:	0001cffc 	.word	0x0001cffc
   10b70:	0001d000 	.word	0x0001d000
   10b74:	00017905 	.word	0x00017905
   10b78:	00017851 	.word	0x00017851
   10b7c:	20001c08 	.word	0x20001c08
   10b80:	20000c84 	.word	0x20000c84
   10b84:	20001bf8 	.word	0x20001bf8
   10b88:	20000028 	.word	0x20000028
   10b8c:	0000d7e5 	.word	0x0000d7e5
   10b90:	20000c80 	.word	0x20000c80
   10b94:	20001b00 	.word	0x20001b00

00010b98 <PrintMenu>:
	}
}

// test__menu
void PrintMenu(void)
{
   10b98:	b580      	push	{r7, lr}
   10b9a:	b082      	sub	sp, #8
   10b9c:	af00      	add	r7, sp, #0
	uttec_t* pFactor = getloraFactor();
   10b9e:	4b4b      	ldr	r3, [pc, #300]	; (10ccc <PrintMenu+0x134>)
   10ba0:	4798      	blx	r3
   10ba2:	0003      	movs	r3, r0
   10ba4:	607b      	str	r3, [r7, #4]
	pFactor->channel = networkInfo.CH;
   10ba6:	4b4a      	ldr	r3, [pc, #296]	; (10cd0 <PrintMenu+0x138>)
   10ba8:	791a      	ldrb	r2, [r3, #4]
   10baa:	687b      	ldr	r3, [r7, #4]
   10bac:	701a      	strb	r2, [r3, #0]
	pFactor->power = networkInfo.POWER;
   10bae:	4b48      	ldr	r3, [pc, #288]	; (10cd0 <PrintMenu+0x138>)
   10bb0:	7e5a      	ldrb	r2, [r3, #25]
   10bb2:	687b      	ldr	r3, [r7, #4]
   10bb4:	705a      	strb	r2, [r3, #1]
	pFactor->rssi = rxMessage.PacketRSSI;
   10bb6:	4b47      	ldr	r3, [pc, #284]	; (10cd4 <PrintMenu+0x13c>)
   10bb8:	220e      	movs	r2, #14
   10bba:	5e9b      	ldrsh	r3, [r3, r2]
   10bbc:	b2da      	uxtb	r2, r3
   10bbe:	687b      	ldr	r3, [r7, #4]
   10bc0:	709a      	strb	r2, [r3, #2]

	printf("\r\nNAMOO SAMR35 MOL LPS Ver4.02\r\n");
   10bc2:	4b45      	ldr	r3, [pc, #276]	; (10cd8 <PrintMenu+0x140>)
   10bc4:	0018      	movs	r0, r3
   10bc6:	4b45      	ldr	r3, [pc, #276]	; (10cdc <PrintMenu+0x144>)
   10bc8:	4798      	blx	r3
	printf("**************************************\r\n");
   10bca:	4b45      	ldr	r3, [pc, #276]	; (10ce0 <PrintMenu+0x148>)
   10bcc:	0018      	movs	r0, r3
   10bce:	4b43      	ldr	r3, [pc, #268]	; (10cdc <PrintMenu+0x144>)
   10bd0:	4798      	blx	r3
	printf("AT=A: Echo ON/OFF\r\n");
   10bd2:	4b44      	ldr	r3, [pc, #272]	; (10ce4 <PrintMenu+0x14c>)
   10bd4:	0018      	movs	r0, r3
   10bd6:	4b41      	ldr	r3, [pc, #260]	; (10cdc <PrintMenu+0x144>)
   10bd8:	4798      	blx	r3
	printf("AT=B: STX, ETX Input\r\n");	
   10bda:	4b43      	ldr	r3, [pc, #268]	; (10ce8 <PrintMenu+0x150>)
   10bdc:	0018      	movs	r0, r3
   10bde:	4b3f      	ldr	r3, [pc, #252]	; (10cdc <PrintMenu+0x144>)
   10be0:	4798      	blx	r3
	printf("AT=C: Clear NVM\r\n");
   10be2:	4b42      	ldr	r3, [pc, #264]	; (10cec <PrintMenu+0x154>)
   10be4:	0018      	movs	r0, r3
   10be6:	4b3d      	ldr	r3, [pc, #244]	; (10cdc <PrintMenu+0x144>)
   10be8:	4798      	blx	r3
	printf("AT=D: Protocol Data Transceiver Start!\r\n");
   10bea:	4b41      	ldr	r3, [pc, #260]	; (10cf0 <PrintMenu+0x158>)
   10bec:	0018      	movs	r0, r3
   10bee:	4b3b      	ldr	r3, [pc, #236]	; (10cdc <PrintMenu+0x144>)
   10bf0:	4798      	blx	r3
	printf("      @@@: Exit This Mode!\r\n");
   10bf2:	4b40      	ldr	r3, [pc, #256]	; (10cf4 <PrintMenu+0x15c>)
   10bf4:	0018      	movs	r0, r3
   10bf6:	4b39      	ldr	r3, [pc, #228]	; (10cdc <PrintMenu+0x144>)
   10bf8:	4798      	blx	r3
	printf("AT=E: System Reset\r\n");
   10bfa:	4b3f      	ldr	r3, [pc, #252]	; (10cf8 <PrintMenu+0x160>)
   10bfc:	0018      	movs	r0, r3
   10bfe:	4b37      	ldr	r3, [pc, #220]	; (10cdc <PrintMenu+0x144>)
   10c00:	4798      	blx	r3
	printf("AT=F: Change SF,DR\r\n");
   10c02:	4b3e      	ldr	r3, [pc, #248]	; (10cfc <PrintMenu+0x164>)
   10c04:	0018      	movs	r0, r3
   10c06:	4b35      	ldr	r3, [pc, #212]	; (10cdc <PrintMenu+0x144>)
   10c08:	4798      	blx	r3
//	printf("AT=G: Change Repeater Mode\r\n");	
	printf("AT=H: Print Menu\r\n");	
   10c0a:	4b3d      	ldr	r3, [pc, #244]	; (10d00 <PrintMenu+0x168>)
   10c0c:	0018      	movs	r0, r3
   10c0e:	4b33      	ldr	r3, [pc, #204]	; (10cdc <PrintMenu+0x144>)
   10c10:	4798      	blx	r3
	printf("AT=J: Join Network\r\n");
   10c12:	4b3c      	ldr	r3, [pc, #240]	; (10d04 <PrintMenu+0x16c>)
   10c14:	0018      	movs	r0, r3
   10c16:	4b31      	ldr	r3, [pc, #196]	; (10cdc <PrintMenu+0x144>)
   10c18:	4798      	blx	r3
	printf("AT=K: Join Network from NVM\r\n");	
   10c1a:	4b3b      	ldr	r3, [pc, #236]	; (10d08 <PrintMenu+0x170>)
   10c1c:	0018      	movs	r0, r3
   10c1e:	4b2f      	ldr	r3, [pc, #188]	; (10cdc <PrintMenu+0x144>)
   10c20:	4798      	blx	r3
	printf("AT=N: Start Network from NVM\r\n");	
   10c22:	4b3a      	ldr	r3, [pc, #232]	; (10d0c <PrintMenu+0x174>)
   10c24:	0018      	movs	r0, r3
   10c26:	4b2d      	ldr	r3, [pc, #180]	; (10cdc <PrintMenu+0x144>)
   10c28:	4798      	blx	r3
	printf("AT=P: Output Power \r\n");	
   10c2a:	4b39      	ldr	r3, [pc, #228]	; (10d10 <PrintMenu+0x178>)
   10c2c:	0018      	movs	r0, r3
   10c2e:	4b2b      	ldr	r3, [pc, #172]	; (10cdc <PrintMenu+0x144>)
   10c30:	4798      	blx	r3
	printf("AT=Q: LPS Start\r\n");
   10c32:	4b38      	ldr	r3, [pc, #224]	; (10d14 <PrintMenu+0x17c>)
   10c34:	0018      	movs	r0, r3
   10c36:	4b29      	ldr	r3, [pc, #164]	; (10cdc <PrintMenu+0x144>)
   10c38:	4798      	blx	r3
	printf("AT=R: Read NVM\r\n");
   10c3a:	4b37      	ldr	r3, [pc, #220]	; (10d18 <PrintMenu+0x180>)
   10c3c:	0018      	movs	r0, r3
   10c3e:	4b27      	ldr	r3, [pc, #156]	; (10cdc <PrintMenu+0x144>)
   10c40:	4798      	blx	r3
	printf("AT=S: Start Network \r\n");	
   10c42:	4b36      	ldr	r3, [pc, #216]	; (10d1c <PrintMenu+0x184>)
   10c44:	0018      	movs	r0, r3
   10c46:	4b25      	ldr	r3, [pc, #148]	; (10cdc <PrintMenu+0x144>)
   10c48:	4798      	blx	r3
	printf("AT=U: (+)Data(+)Enter: Transfer Broadcast Data(Max 115Byte)\r\n");	
   10c4a:	4b35      	ldr	r3, [pc, #212]	; (10d20 <PrintMenu+0x188>)
   10c4c:	0018      	movs	r0, r3
   10c4e:	4b23      	ldr	r3, [pc, #140]	; (10cdc <PrintMenu+0x144>)
   10c50:	4798      	blx	r3
	printf("AT=W: LPS End\r\n");	
   10c52:	4b34      	ldr	r3, [pc, #208]	; (10d24 <PrintMenu+0x18c>)
   10c54:	0018      	movs	r0, r3
   10c56:	4b21      	ldr	r3, [pc, #132]	; (10cdc <PrintMenu+0x144>)
   10c58:	4798      	blx	r3
	printf("AT=Z: Sleep Mode\r\n");
   10c5a:	4b33      	ldr	r3, [pc, #204]	; (10d28 <PrintMenu+0x190>)
   10c5c:	0018      	movs	r0, r3
   10c5e:	4b1f      	ldr	r3, [pc, #124]	; (10cdc <PrintMenu+0x144>)
   10c60:	4798      	blx	r3
		
	printf("\n\r");	
   10c62:	4b32      	ldr	r3, [pc, #200]	; (10d2c <PrintMenu+0x194>)
   10c64:	0018      	movs	r0, r3
   10c66:	4b32      	ldr	r3, [pc, #200]	; (10d30 <PrintMenu+0x198>)
   10c68:	4798      	blx	r3
	printf("AT=1: Broadcast Message\r\n");
   10c6a:	4b32      	ldr	r3, [pc, #200]	; (10d34 <PrintMenu+0x19c>)
   10c6c:	0018      	movs	r0, r3
   10c6e:	4b1b      	ldr	r3, [pc, #108]	; (10cdc <PrintMenu+0x144>)
   10c70:	4798      	blx	r3
	printf("AT=2: Unicast Message by Index\r\n");
   10c72:	4b31      	ldr	r3, [pc, #196]	; (10d38 <PrintMenu+0x1a0>)
   10c74:	0018      	movs	r0, r3
   10c76:	4b19      	ldr	r3, [pc, #100]	; (10cdc <PrintMenu+0x144>)
   10c78:	4798      	blx	r3
	printf("AT=3: Unicast Message by ADDR\r\n");
   10c7a:	4b30      	ldr	r3, [pc, #192]	; (10d3c <PrintMenu+0x1a4>)
   10c7c:	0018      	movs	r0, r3
   10c7e:	4b17      	ldr	r3, [pc, #92]	; (10cdc <PrintMenu+0x144>)
   10c80:	4798      	blx	r3
	printf("AT=4: Broadcast Test Message per 5sec\r\n");
   10c82:	4b2f      	ldr	r3, [pc, #188]	; (10d40 <PrintMenu+0x1a8>)
   10c84:	0018      	movs	r0, r3
   10c86:	4b15      	ldr	r3, [pc, #84]	; (10cdc <PrintMenu+0x144>)
   10c88:	4798      	blx	r3
	printf("AT=5: Unicast Test Message per 5sec\r\n");
   10c8a:	4b2e      	ldr	r3, [pc, #184]	; (10d44 <PrintMenu+0x1ac>)
   10c8c:	0018      	movs	r0, r3
   10c8e:	4b13      	ldr	r3, [pc, #76]	; (10cdc <PrintMenu+0x144>)
   10c90:	4798      	blx	r3
	printf("AT=6: USART Borate Change\r\n");
   10c92:	4b2d      	ldr	r3, [pc, #180]	; (10d48 <PrintMenu+0x1b0>)
   10c94:	0018      	movs	r0, r3
   10c96:	4b11      	ldr	r3, [pc, #68]	; (10cdc <PrintMenu+0x144>)
   10c98:	4798      	blx	r3
	printf("AT=7: Set Operation Channel\r\n");
   10c9a:	4b2c      	ldr	r3, [pc, #176]	; (10d4c <PrintMenu+0x1b4>)
   10c9c:	0018      	movs	r0, r3
   10c9e:	4b0f      	ldr	r3, [pc, #60]	; (10cdc <PrintMenu+0x144>)
   10ca0:	4798      	blx	r3
	printf("AT=8: Set PAN ID\r\n");
   10ca2:	4b2b      	ldr	r3, [pc, #172]	; (10d50 <PrintMenu+0x1b8>)
   10ca4:	0018      	movs	r0, r3
   10ca6:	4b0d      	ldr	r3, [pc, #52]	; (10cdc <PrintMenu+0x144>)
   10ca8:	4798      	blx	r3
	printf("AT=9: Device Info\r\n");
   10caa:	4b2a      	ldr	r3, [pc, #168]	; (10d54 <PrintMenu+0x1bc>)
   10cac:	0018      	movs	r0, r3
   10cae:	4b0b      	ldr	r3, [pc, #44]	; (10cdc <PrintMenu+0x144>)
   10cb0:	4798      	blx	r3
	printf("AT=0: Dump Connection\r\n");
   10cb2:	4b29      	ldr	r3, [pc, #164]	; (10d58 <PrintMenu+0x1c0>)
   10cb4:	0018      	movs	r0, r3
   10cb6:	4b09      	ldr	r3, [pc, #36]	; (10cdc <PrintMenu+0x144>)
   10cb8:	4798      	blx	r3
	printf("**************************************\r\n");	
   10cba:	4b09      	ldr	r3, [pc, #36]	; (10ce0 <PrintMenu+0x148>)
   10cbc:	0018      	movs	r0, r3
   10cbe:	4b07      	ldr	r3, [pc, #28]	; (10cdc <PrintMenu+0x144>)
   10cc0:	4798      	blx	r3
}
   10cc2:	46c0      	nop			; (mov r8, r8)
   10cc4:	46bd      	mov	sp, r7
   10cc6:	b002      	add	sp, #8
   10cc8:	bd80      	pop	{r7, pc}
   10cca:	46c0      	nop			; (mov r8, r8)
   10ccc:	00010991 	.word	0x00010991
   10cd0:	2000151c 	.word	0x2000151c
   10cd4:	20001504 	.word	0x20001504
   10cd8:	0001d010 	.word	0x0001d010
   10cdc:	00017905 	.word	0x00017905
   10ce0:	0001d030 	.word	0x0001d030
   10ce4:	0001d058 	.word	0x0001d058
   10ce8:	0001d06c 	.word	0x0001d06c
   10cec:	0001d084 	.word	0x0001d084
   10cf0:	0001d098 	.word	0x0001d098
   10cf4:	0001d0c0 	.word	0x0001d0c0
   10cf8:	0001d0dc 	.word	0x0001d0dc
   10cfc:	0001d0f0 	.word	0x0001d0f0
   10d00:	0001d104 	.word	0x0001d104
   10d04:	0001d118 	.word	0x0001d118
   10d08:	0001d12c 	.word	0x0001d12c
   10d0c:	0001d14c 	.word	0x0001d14c
   10d10:	0001d16c 	.word	0x0001d16c
   10d14:	0001d184 	.word	0x0001d184
   10d18:	0001d198 	.word	0x0001d198
   10d1c:	0001d1a8 	.word	0x0001d1a8
   10d20:	0001d1c0 	.word	0x0001d1c0
   10d24:	0001d200 	.word	0x0001d200
   10d28:	0001d210 	.word	0x0001d210
   10d2c:	0001cffc 	.word	0x0001cffc
   10d30:	0001782d 	.word	0x0001782d
   10d34:	0001d224 	.word	0x0001d224
   10d38:	0001d240 	.word	0x0001d240
   10d3c:	0001d260 	.word	0x0001d260
   10d40:	0001d280 	.word	0x0001d280
   10d44:	0001d2a8 	.word	0x0001d2a8
   10d48:	0001d2d0 	.word	0x0001d2d0
   10d4c:	0001d2ec 	.word	0x0001d2ec
   10d50:	0001d30c 	.word	0x0001d30c
   10d54:	0001d320 	.word	0x0001d320
   10d58:	0001d334 	.word	0x0001d334

00010d5c <end_function>:

uint8_t TransStep0,TransStep1,TransStep2, EndStep0, EndStep1, EndStep2;

void end_function(uint8_t rxChar)			//ihkim
{
   10d5c:	b580      	push	{r7, lr}
   10d5e:	b084      	sub	sp, #16
   10d60:	af00      	add	r7, sp, #0
   10d62:	0002      	movs	r2, r0
   10d64:	1dfb      	adds	r3, r7, #7
   10d66:	701a      	strb	r2, [r3, #0]
	uint8_t rlt, End_Step, i;
	
	End_Step = networkInfo.ETXL;
   10d68:	230e      	movs	r3, #14
   10d6a:	18fb      	adds	r3, r7, r3
   10d6c:	4aca      	ldr	r2, [pc, #808]	; (11098 <end_function+0x33c>)
   10d6e:	7fd2      	ldrb	r2, [r2, #31]
   10d70:	701a      	strb	r2, [r3, #0]
	
	if(End_Step == '1'){
   10d72:	230e      	movs	r3, #14
   10d74:	18fb      	adds	r3, r7, r3
   10d76:	781b      	ldrb	r3, [r3, #0]
   10d78:	2b31      	cmp	r3, #49	; 0x31
   10d7a:	d158      	bne.n	10e2e <end_function+0xd2>
		if(rxChar == networkInfo.ETX1){
   10d7c:	4bc6      	ldr	r3, [pc, #792]	; (11098 <end_function+0x33c>)
   10d7e:	2220      	movs	r2, #32
   10d80:	5c9b      	ldrb	r3, [r3, r2]
   10d82:	1dfa      	adds	r2, r7, #7
   10d84:	7812      	ldrb	r2, [r2, #0]
   10d86:	429a      	cmp	r2, r3
   10d88:	d145      	bne.n	10e16 <end_function+0xba>
			MiApp_WriteData(rxChar);
   10d8a:	4bc4      	ldr	r3, [pc, #784]	; (1109c <end_function+0x340>)
   10d8c:	781b      	ldrb	r3, [r3, #0]
   10d8e:	1c5a      	adds	r2, r3, #1
   10d90:	b2d1      	uxtb	r1, r2
   10d92:	4ac2      	ldr	r2, [pc, #776]	; (1109c <end_function+0x340>)
   10d94:	7011      	strb	r1, [r2, #0]
   10d96:	0019      	movs	r1, r3
   10d98:	4bc1      	ldr	r3, [pc, #772]	; (110a0 <end_function+0x344>)
   10d9a:	1dfa      	adds	r2, r7, #7
   10d9c:	7812      	ldrb	r2, [r2, #0]
   10d9e:	545a      	strb	r2, [r3, r1]
				} else {
				printf("\r\nRS485 Unicast fail...\r\n");
			}
#else
			//Broadcast
			MiApp_BroadcastPacket(false);
   10da0:	2000      	movs	r0, #0
   10da2:	4bc0      	ldr	r3, [pc, #768]	; (110a4 <end_function+0x348>)
   10da4:	4798      	blx	r3
			if(chkecho)	printf(" Broadcast...2\r\n");
   10da6:	4bc0      	ldr	r3, [pc, #768]	; (110a8 <end_function+0x34c>)
   10da8:	781b      	ldrb	r3, [r3, #0]
   10daa:	2b00      	cmp	r3, #0
   10dac:	d003      	beq.n	10db6 <end_function+0x5a>
   10dae:	4bbf      	ldr	r3, [pc, #764]	; (110ac <end_function+0x350>)
   10db0:	0018      	movs	r0, r3
   10db2:	4bbf      	ldr	r3, [pc, #764]	; (110b0 <end_function+0x354>)
   10db4:	4798      	blx	r3
#endif			
			SX1276_RX_INIT();
   10db6:	4bbf      	ldr	r3, [pc, #764]	; (110b4 <end_function+0x358>)
   10db8:	4798      	blx	r3
			for(i=0;i<TX_BUFFER_SIZE;i++)	TxBuffer[i] = 0;
   10dba:	230f      	movs	r3, #15
   10dbc:	18fb      	adds	r3, r7, r3
   10dbe:	2200      	movs	r2, #0
   10dc0:	701a      	strb	r2, [r3, #0]
   10dc2:	e00c      	b.n	10dde <end_function+0x82>
   10dc4:	230f      	movs	r3, #15
   10dc6:	18fb      	adds	r3, r7, r3
   10dc8:	781b      	ldrb	r3, [r3, #0]
   10dca:	4ab5      	ldr	r2, [pc, #724]	; (110a0 <end_function+0x344>)
   10dcc:	2100      	movs	r1, #0
   10dce:	54d1      	strb	r1, [r2, r3]
   10dd0:	230f      	movs	r3, #15
   10dd2:	18fb      	adds	r3, r7, r3
   10dd4:	781a      	ldrb	r2, [r3, #0]
   10dd6:	230f      	movs	r3, #15
   10dd8:	18fb      	adds	r3, r7, r3
   10dda:	3201      	adds	r2, #1
   10ddc:	701a      	strb	r2, [r3, #0]
   10dde:	230f      	movs	r3, #15
   10de0:	18fb      	adds	r3, r7, r3
   10de2:	781b      	ldrb	r3, [r3, #0]
   10de4:	2bdb      	cmp	r3, #219	; 0xdb
   10de6:	d9ed      	bls.n	10dc4 <end_function+0x68>
			EndStep0 = EndStep1 = EndStep2 = 0;
   10de8:	4bb3      	ldr	r3, [pc, #716]	; (110b8 <end_function+0x35c>)
   10dea:	2200      	movs	r2, #0
   10dec:	701a      	strb	r2, [r3, #0]
   10dee:	4bb2      	ldr	r3, [pc, #712]	; (110b8 <end_function+0x35c>)
   10df0:	781a      	ldrb	r2, [r3, #0]
   10df2:	4bb2      	ldr	r3, [pc, #712]	; (110bc <end_function+0x360>)
   10df4:	701a      	strb	r2, [r3, #0]
   10df6:	4bb1      	ldr	r3, [pc, #708]	; (110bc <end_function+0x360>)
   10df8:	781a      	ldrb	r2, [r3, #0]
   10dfa:	4bb1      	ldr	r3, [pc, #708]	; (110c0 <end_function+0x364>)
   10dfc:	701a      	strb	r2, [r3, #0]
			TransStep0 = TransStep1 = TransStep2 = 0;
   10dfe:	4bb1      	ldr	r3, [pc, #708]	; (110c4 <end_function+0x368>)
   10e00:	2200      	movs	r2, #0
   10e02:	701a      	strb	r2, [r3, #0]
   10e04:	4baf      	ldr	r3, [pc, #700]	; (110c4 <end_function+0x368>)
   10e06:	781a      	ldrb	r2, [r3, #0]
   10e08:	4baf      	ldr	r3, [pc, #700]	; (110c8 <end_function+0x36c>)
   10e0a:	701a      	strb	r2, [r3, #0]
   10e0c:	4bae      	ldr	r3, [pc, #696]	; (110c8 <end_function+0x36c>)
   10e0e:	781a      	ldrb	r2, [r3, #0]
   10e10:	4bae      	ldr	r3, [pc, #696]	; (110cc <end_function+0x370>)
   10e12:	701a      	strb	r2, [r3, #0]
				EndStep0 = EndStep1 = EndStep2 = 0;
				TransStep0 = TransStep1 = TransStep2 = 0;
				break;
		}		
	}else;
}
   10e14:	e17e      	b.n	11114 <end_function+0x3b8>
			MiApp_WriteData(rxChar);
   10e16:	4ba1      	ldr	r3, [pc, #644]	; (1109c <end_function+0x340>)
   10e18:	781b      	ldrb	r3, [r3, #0]
   10e1a:	1c5a      	adds	r2, r3, #1
   10e1c:	b2d1      	uxtb	r1, r2
   10e1e:	4a9f      	ldr	r2, [pc, #636]	; (1109c <end_function+0x340>)
   10e20:	7011      	strb	r1, [r2, #0]
   10e22:	0019      	movs	r1, r3
   10e24:	4b9e      	ldr	r3, [pc, #632]	; (110a0 <end_function+0x344>)
   10e26:	1dfa      	adds	r2, r7, #7
   10e28:	7812      	ldrb	r2, [r2, #0]
   10e2a:	545a      	strb	r2, [r3, r1]
}
   10e2c:	e172      	b.n	11114 <end_function+0x3b8>
	}else if(End_Step == '2'){
   10e2e:	230e      	movs	r3, #14
   10e30:	18fb      	adds	r3, r7, r3
   10e32:	781b      	ldrb	r3, [r3, #0]
   10e34:	2b32      	cmp	r3, #50	; 0x32
   10e36:	d000      	beq.n	10e3a <end_function+0xde>
   10e38:	e08d      	b.n	10f56 <end_function+0x1fa>
		switch(EndStep0){
   10e3a:	4ba1      	ldr	r3, [pc, #644]	; (110c0 <end_function+0x364>)
   10e3c:	781b      	ldrb	r3, [r3, #0]
   10e3e:	2b00      	cmp	r3, #0
   10e40:	d002      	beq.n	10e48 <end_function+0xec>
   10e42:	2b01      	cmp	r3, #1
   10e44:	d02d      	beq.n	10ea2 <end_function+0x146>
}
   10e46:	e165      	b.n	11114 <end_function+0x3b8>
				if(rxChar == networkInfo.ETX1){
   10e48:	4b93      	ldr	r3, [pc, #588]	; (11098 <end_function+0x33c>)
   10e4a:	2220      	movs	r2, #32
   10e4c:	5c9b      	ldrb	r3, [r3, r2]
   10e4e:	1dfa      	adds	r2, r7, #7
   10e50:	7812      	ldrb	r2, [r2, #0]
   10e52:	429a      	cmp	r2, r3
   10e54:	d10e      	bne.n	10e74 <end_function+0x118>
					MiApp_WriteData(rxChar);
   10e56:	4b91      	ldr	r3, [pc, #580]	; (1109c <end_function+0x340>)
   10e58:	781b      	ldrb	r3, [r3, #0]
   10e5a:	1c5a      	adds	r2, r3, #1
   10e5c:	b2d1      	uxtb	r1, r2
   10e5e:	4a8f      	ldr	r2, [pc, #572]	; (1109c <end_function+0x340>)
   10e60:	7011      	strb	r1, [r2, #0]
   10e62:	0019      	movs	r1, r3
   10e64:	4b8e      	ldr	r3, [pc, #568]	; (110a0 <end_function+0x344>)
   10e66:	1dfa      	adds	r2, r7, #7
   10e68:	7812      	ldrb	r2, [r2, #0]
   10e6a:	545a      	strb	r2, [r3, r1]
					EndStep0 = 1;
   10e6c:	4b94      	ldr	r3, [pc, #592]	; (110c0 <end_function+0x364>)
   10e6e:	2201      	movs	r2, #1
   10e70:	701a      	strb	r2, [r3, #0]
				break;
   10e72:	e14f      	b.n	11114 <end_function+0x3b8>
					MiApp_WriteData(rxChar);
   10e74:	4b89      	ldr	r3, [pc, #548]	; (1109c <end_function+0x340>)
   10e76:	781b      	ldrb	r3, [r3, #0]
   10e78:	1c5a      	adds	r2, r3, #1
   10e7a:	b2d1      	uxtb	r1, r2
   10e7c:	4a87      	ldr	r2, [pc, #540]	; (1109c <end_function+0x340>)
   10e7e:	7011      	strb	r1, [r2, #0]
   10e80:	0019      	movs	r1, r3
   10e82:	4b87      	ldr	r3, [pc, #540]	; (110a0 <end_function+0x344>)
   10e84:	1dfa      	adds	r2, r7, #7
   10e86:	7812      	ldrb	r2, [r2, #0]
   10e88:	545a      	strb	r2, [r3, r1]
					EndStep0 = EndStep1 = EndStep2 = 0;
   10e8a:	4b8b      	ldr	r3, [pc, #556]	; (110b8 <end_function+0x35c>)
   10e8c:	2200      	movs	r2, #0
   10e8e:	701a      	strb	r2, [r3, #0]
   10e90:	4b89      	ldr	r3, [pc, #548]	; (110b8 <end_function+0x35c>)
   10e92:	781a      	ldrb	r2, [r3, #0]
   10e94:	4b89      	ldr	r3, [pc, #548]	; (110bc <end_function+0x360>)
   10e96:	701a      	strb	r2, [r3, #0]
   10e98:	4b88      	ldr	r3, [pc, #544]	; (110bc <end_function+0x360>)
   10e9a:	781a      	ldrb	r2, [r3, #0]
   10e9c:	4b88      	ldr	r3, [pc, #544]	; (110c0 <end_function+0x364>)
   10e9e:	701a      	strb	r2, [r3, #0]
				break;
   10ea0:	e138      	b.n	11114 <end_function+0x3b8>
				if(rxChar == networkInfo.ETX2){
   10ea2:	4b7d      	ldr	r3, [pc, #500]	; (11098 <end_function+0x33c>)
   10ea4:	2221      	movs	r2, #33	; 0x21
   10ea6:	5c9b      	ldrb	r3, [r3, r2]
   10ea8:	1dfa      	adds	r2, r7, #7
   10eaa:	7812      	ldrb	r2, [r2, #0]
   10eac:	429a      	cmp	r2, r3
   10eae:	d12f      	bne.n	10f10 <end_function+0x1b4>
					MiApp_WriteData(rxChar);
   10eb0:	4b7a      	ldr	r3, [pc, #488]	; (1109c <end_function+0x340>)
   10eb2:	781b      	ldrb	r3, [r3, #0]
   10eb4:	1c5a      	adds	r2, r3, #1
   10eb6:	b2d1      	uxtb	r1, r2
   10eb8:	4a78      	ldr	r2, [pc, #480]	; (1109c <end_function+0x340>)
   10eba:	7011      	strb	r1, [r2, #0]
   10ebc:	0019      	movs	r1, r3
   10ebe:	4b78      	ldr	r3, [pc, #480]	; (110a0 <end_function+0x344>)
   10ec0:	1dfa      	adds	r2, r7, #7
   10ec2:	7812      	ldrb	r2, [r2, #0]
   10ec4:	545a      	strb	r2, [r3, r1]
					MiApp_BroadcastPacket(false);
   10ec6:	2000      	movs	r0, #0
   10ec8:	4b76      	ldr	r3, [pc, #472]	; (110a4 <end_function+0x348>)
   10eca:	4798      	blx	r3
					if(chkecho)	printf(" Broadcast...2\r\n");
   10ecc:	4b76      	ldr	r3, [pc, #472]	; (110a8 <end_function+0x34c>)
   10ece:	781b      	ldrb	r3, [r3, #0]
   10ed0:	2b00      	cmp	r3, #0
   10ed2:	d003      	beq.n	10edc <end_function+0x180>
   10ed4:	4b75      	ldr	r3, [pc, #468]	; (110ac <end_function+0x350>)
   10ed6:	0018      	movs	r0, r3
   10ed8:	4b75      	ldr	r3, [pc, #468]	; (110b0 <end_function+0x354>)
   10eda:	4798      	blx	r3
					SX1276_RX_INIT();
   10edc:	4b75      	ldr	r3, [pc, #468]	; (110b4 <end_function+0x358>)
   10ede:	4798      	blx	r3
					for(i=0;i<TX_BUFFER_SIZE;i++)	TxBuffer[i] = 0;		
   10ee0:	230f      	movs	r3, #15
   10ee2:	18fb      	adds	r3, r7, r3
   10ee4:	2200      	movs	r2, #0
   10ee6:	701a      	strb	r2, [r3, #0]
   10ee8:	e00c      	b.n	10f04 <end_function+0x1a8>
   10eea:	230f      	movs	r3, #15
   10eec:	18fb      	adds	r3, r7, r3
   10eee:	781b      	ldrb	r3, [r3, #0]
   10ef0:	4a6b      	ldr	r2, [pc, #428]	; (110a0 <end_function+0x344>)
   10ef2:	2100      	movs	r1, #0
   10ef4:	54d1      	strb	r1, [r2, r3]
   10ef6:	230f      	movs	r3, #15
   10ef8:	18fb      	adds	r3, r7, r3
   10efa:	781a      	ldrb	r2, [r3, #0]
   10efc:	230f      	movs	r3, #15
   10efe:	18fb      	adds	r3, r7, r3
   10f00:	3201      	adds	r2, #1
   10f02:	701a      	strb	r2, [r3, #0]
   10f04:	230f      	movs	r3, #15
   10f06:	18fb      	adds	r3, r7, r3
   10f08:	781b      	ldrb	r3, [r3, #0]
   10f0a:	2bdb      	cmp	r3, #219	; 0xdb
   10f0c:	d9ed      	bls.n	10eea <end_function+0x18e>
   10f0e:	e00a      	b.n	10f26 <end_function+0x1ca>
					MiApp_WriteData(rxChar);				
   10f10:	4b62      	ldr	r3, [pc, #392]	; (1109c <end_function+0x340>)
   10f12:	781b      	ldrb	r3, [r3, #0]
   10f14:	1c5a      	adds	r2, r3, #1
   10f16:	b2d1      	uxtb	r1, r2
   10f18:	4a60      	ldr	r2, [pc, #384]	; (1109c <end_function+0x340>)
   10f1a:	7011      	strb	r1, [r2, #0]
   10f1c:	0019      	movs	r1, r3
   10f1e:	4b60      	ldr	r3, [pc, #384]	; (110a0 <end_function+0x344>)
   10f20:	1dfa      	adds	r2, r7, #7
   10f22:	7812      	ldrb	r2, [r2, #0]
   10f24:	545a      	strb	r2, [r3, r1]
				EndStep0 = EndStep1 = EndStep2 = 0;
   10f26:	4b64      	ldr	r3, [pc, #400]	; (110b8 <end_function+0x35c>)
   10f28:	2200      	movs	r2, #0
   10f2a:	701a      	strb	r2, [r3, #0]
   10f2c:	4b62      	ldr	r3, [pc, #392]	; (110b8 <end_function+0x35c>)
   10f2e:	781a      	ldrb	r2, [r3, #0]
   10f30:	4b62      	ldr	r3, [pc, #392]	; (110bc <end_function+0x360>)
   10f32:	701a      	strb	r2, [r3, #0]
   10f34:	4b61      	ldr	r3, [pc, #388]	; (110bc <end_function+0x360>)
   10f36:	781a      	ldrb	r2, [r3, #0]
   10f38:	4b61      	ldr	r3, [pc, #388]	; (110c0 <end_function+0x364>)
   10f3a:	701a      	strb	r2, [r3, #0]
				TransStep0 = TransStep1 = TransStep2 = 0;			
   10f3c:	4b61      	ldr	r3, [pc, #388]	; (110c4 <end_function+0x368>)
   10f3e:	2200      	movs	r2, #0
   10f40:	701a      	strb	r2, [r3, #0]
   10f42:	4b60      	ldr	r3, [pc, #384]	; (110c4 <end_function+0x368>)
   10f44:	781a      	ldrb	r2, [r3, #0]
   10f46:	4b60      	ldr	r3, [pc, #384]	; (110c8 <end_function+0x36c>)
   10f48:	701a      	strb	r2, [r3, #0]
   10f4a:	4b5f      	ldr	r3, [pc, #380]	; (110c8 <end_function+0x36c>)
   10f4c:	781a      	ldrb	r2, [r3, #0]
   10f4e:	4b5f      	ldr	r3, [pc, #380]	; (110cc <end_function+0x370>)
   10f50:	701a      	strb	r2, [r3, #0]
				break;
   10f52:	46c0      	nop			; (mov r8, r8)
   10f54:	e0de      	b.n	11114 <end_function+0x3b8>
	}else if(End_Step == '3'){
   10f56:	230e      	movs	r3, #14
   10f58:	18fb      	adds	r3, r7, r3
   10f5a:	781b      	ldrb	r3, [r3, #0]
   10f5c:	2b33      	cmp	r3, #51	; 0x33
   10f5e:	d000      	beq.n	10f62 <end_function+0x206>
   10f60:	e0d8      	b.n	11114 <end_function+0x3b8>
		switch(EndStep1){
   10f62:	4b56      	ldr	r3, [pc, #344]	; (110bc <end_function+0x360>)
   10f64:	781b      	ldrb	r3, [r3, #0]
   10f66:	2b01      	cmp	r3, #1
   10f68:	d031      	beq.n	10fce <end_function+0x272>
   10f6a:	2b02      	cmp	r3, #2
   10f6c:	d05c      	beq.n	11028 <end_function+0x2cc>
   10f6e:	2b00      	cmp	r3, #0
   10f70:	d000      	beq.n	10f74 <end_function+0x218>
}
   10f72:	e0cf      	b.n	11114 <end_function+0x3b8>
				if(rxChar == networkInfo.ETX1){
   10f74:	4b48      	ldr	r3, [pc, #288]	; (11098 <end_function+0x33c>)
   10f76:	2220      	movs	r2, #32
   10f78:	5c9b      	ldrb	r3, [r3, r2]
   10f7a:	1dfa      	adds	r2, r7, #7
   10f7c:	7812      	ldrb	r2, [r2, #0]
   10f7e:	429a      	cmp	r2, r3
   10f80:	d10e      	bne.n	10fa0 <end_function+0x244>
					MiApp_WriteData(rxChar);
   10f82:	4b46      	ldr	r3, [pc, #280]	; (1109c <end_function+0x340>)
   10f84:	781b      	ldrb	r3, [r3, #0]
   10f86:	1c5a      	adds	r2, r3, #1
   10f88:	b2d1      	uxtb	r1, r2
   10f8a:	4a44      	ldr	r2, [pc, #272]	; (1109c <end_function+0x340>)
   10f8c:	7011      	strb	r1, [r2, #0]
   10f8e:	0019      	movs	r1, r3
   10f90:	4b43      	ldr	r3, [pc, #268]	; (110a0 <end_function+0x344>)
   10f92:	1dfa      	adds	r2, r7, #7
   10f94:	7812      	ldrb	r2, [r2, #0]
   10f96:	545a      	strb	r2, [r3, r1]
					EndStep1 = 1;
   10f98:	4b48      	ldr	r3, [pc, #288]	; (110bc <end_function+0x360>)
   10f9a:	2201      	movs	r2, #1
   10f9c:	701a      	strb	r2, [r3, #0]
				break;
   10f9e:	e0b9      	b.n	11114 <end_function+0x3b8>
					MiApp_WriteData(rxChar);
   10fa0:	4b3e      	ldr	r3, [pc, #248]	; (1109c <end_function+0x340>)
   10fa2:	781b      	ldrb	r3, [r3, #0]
   10fa4:	1c5a      	adds	r2, r3, #1
   10fa6:	b2d1      	uxtb	r1, r2
   10fa8:	4a3c      	ldr	r2, [pc, #240]	; (1109c <end_function+0x340>)
   10faa:	7011      	strb	r1, [r2, #0]
   10fac:	0019      	movs	r1, r3
   10fae:	4b3c      	ldr	r3, [pc, #240]	; (110a0 <end_function+0x344>)
   10fb0:	1dfa      	adds	r2, r7, #7
   10fb2:	7812      	ldrb	r2, [r2, #0]
   10fb4:	545a      	strb	r2, [r3, r1]
					EndStep0 = EndStep1 = EndStep2 = 0;
   10fb6:	4b40      	ldr	r3, [pc, #256]	; (110b8 <end_function+0x35c>)
   10fb8:	2200      	movs	r2, #0
   10fba:	701a      	strb	r2, [r3, #0]
   10fbc:	4b3e      	ldr	r3, [pc, #248]	; (110b8 <end_function+0x35c>)
   10fbe:	781a      	ldrb	r2, [r3, #0]
   10fc0:	4b3e      	ldr	r3, [pc, #248]	; (110bc <end_function+0x360>)
   10fc2:	701a      	strb	r2, [r3, #0]
   10fc4:	4b3d      	ldr	r3, [pc, #244]	; (110bc <end_function+0x360>)
   10fc6:	781a      	ldrb	r2, [r3, #0]
   10fc8:	4b3d      	ldr	r3, [pc, #244]	; (110c0 <end_function+0x364>)
   10fca:	701a      	strb	r2, [r3, #0]
				break;
   10fcc:	e0a2      	b.n	11114 <end_function+0x3b8>
				if(rxChar == networkInfo.ETX2){
   10fce:	4b32      	ldr	r3, [pc, #200]	; (11098 <end_function+0x33c>)
   10fd0:	2221      	movs	r2, #33	; 0x21
   10fd2:	5c9b      	ldrb	r3, [r3, r2]
   10fd4:	1dfa      	adds	r2, r7, #7
   10fd6:	7812      	ldrb	r2, [r2, #0]
   10fd8:	429a      	cmp	r2, r3
   10fda:	d10e      	bne.n	10ffa <end_function+0x29e>
					MiApp_WriteData(rxChar);
   10fdc:	4b2f      	ldr	r3, [pc, #188]	; (1109c <end_function+0x340>)
   10fde:	781b      	ldrb	r3, [r3, #0]
   10fe0:	1c5a      	adds	r2, r3, #1
   10fe2:	b2d1      	uxtb	r1, r2
   10fe4:	4a2d      	ldr	r2, [pc, #180]	; (1109c <end_function+0x340>)
   10fe6:	7011      	strb	r1, [r2, #0]
   10fe8:	0019      	movs	r1, r3
   10fea:	4b2d      	ldr	r3, [pc, #180]	; (110a0 <end_function+0x344>)
   10fec:	1dfa      	adds	r2, r7, #7
   10fee:	7812      	ldrb	r2, [r2, #0]
   10ff0:	545a      	strb	r2, [r3, r1]
					EndStep1 = 2;
   10ff2:	4b32      	ldr	r3, [pc, #200]	; (110bc <end_function+0x360>)
   10ff4:	2202      	movs	r2, #2
   10ff6:	701a      	strb	r2, [r3, #0]
				break;
   10ff8:	e08c      	b.n	11114 <end_function+0x3b8>
					MiApp_WriteData(rxChar);
   10ffa:	4b28      	ldr	r3, [pc, #160]	; (1109c <end_function+0x340>)
   10ffc:	781b      	ldrb	r3, [r3, #0]
   10ffe:	1c5a      	adds	r2, r3, #1
   11000:	b2d1      	uxtb	r1, r2
   11002:	4a26      	ldr	r2, [pc, #152]	; (1109c <end_function+0x340>)
   11004:	7011      	strb	r1, [r2, #0]
   11006:	0019      	movs	r1, r3
   11008:	4b25      	ldr	r3, [pc, #148]	; (110a0 <end_function+0x344>)
   1100a:	1dfa      	adds	r2, r7, #7
   1100c:	7812      	ldrb	r2, [r2, #0]
   1100e:	545a      	strb	r2, [r3, r1]
					EndStep0 = EndStep1 = EndStep2 = 0;
   11010:	4b29      	ldr	r3, [pc, #164]	; (110b8 <end_function+0x35c>)
   11012:	2200      	movs	r2, #0
   11014:	701a      	strb	r2, [r3, #0]
   11016:	4b28      	ldr	r3, [pc, #160]	; (110b8 <end_function+0x35c>)
   11018:	781a      	ldrb	r2, [r3, #0]
   1101a:	4b28      	ldr	r3, [pc, #160]	; (110bc <end_function+0x360>)
   1101c:	701a      	strb	r2, [r3, #0]
   1101e:	4b27      	ldr	r3, [pc, #156]	; (110bc <end_function+0x360>)
   11020:	781a      	ldrb	r2, [r3, #0]
   11022:	4b27      	ldr	r3, [pc, #156]	; (110c0 <end_function+0x364>)
   11024:	701a      	strb	r2, [r3, #0]
				break;
   11026:	e075      	b.n	11114 <end_function+0x3b8>
				if(rxChar == networkInfo.ETX3){
   11028:	4b1b      	ldr	r3, [pc, #108]	; (11098 <end_function+0x33c>)
   1102a:	2222      	movs	r2, #34	; 0x22
   1102c:	5c9b      	ldrb	r3, [r3, r2]
   1102e:	1dfa      	adds	r2, r7, #7
   11030:	7812      	ldrb	r2, [r2, #0]
   11032:	429a      	cmp	r2, r3
   11034:	d14c      	bne.n	110d0 <end_function+0x374>
					MiApp_WriteData(rxChar);
   11036:	4b19      	ldr	r3, [pc, #100]	; (1109c <end_function+0x340>)
   11038:	781b      	ldrb	r3, [r3, #0]
   1103a:	1c5a      	adds	r2, r3, #1
   1103c:	b2d1      	uxtb	r1, r2
   1103e:	4a17      	ldr	r2, [pc, #92]	; (1109c <end_function+0x340>)
   11040:	7011      	strb	r1, [r2, #0]
   11042:	0019      	movs	r1, r3
   11044:	4b16      	ldr	r3, [pc, #88]	; (110a0 <end_function+0x344>)
   11046:	1dfa      	adds	r2, r7, #7
   11048:	7812      	ldrb	r2, [r2, #0]
   1104a:	545a      	strb	r2, [r3, r1]
					MiApp_BroadcastPacket(false);
   1104c:	2000      	movs	r0, #0
   1104e:	4b15      	ldr	r3, [pc, #84]	; (110a4 <end_function+0x348>)
   11050:	4798      	blx	r3
					if(chkecho)	printf(" Broadcast...2\r\n");
   11052:	4b15      	ldr	r3, [pc, #84]	; (110a8 <end_function+0x34c>)
   11054:	781b      	ldrb	r3, [r3, #0]
   11056:	2b00      	cmp	r3, #0
   11058:	d003      	beq.n	11062 <end_function+0x306>
   1105a:	4b14      	ldr	r3, [pc, #80]	; (110ac <end_function+0x350>)
   1105c:	0018      	movs	r0, r3
   1105e:	4b14      	ldr	r3, [pc, #80]	; (110b0 <end_function+0x354>)
   11060:	4798      	blx	r3
					SX1276_RX_INIT();
   11062:	4b14      	ldr	r3, [pc, #80]	; (110b4 <end_function+0x358>)
   11064:	4798      	blx	r3
					for(i=0;i<TX_BUFFER_SIZE;i++)	TxBuffer[i] = 0;
   11066:	230f      	movs	r3, #15
   11068:	18fb      	adds	r3, r7, r3
   1106a:	2200      	movs	r2, #0
   1106c:	701a      	strb	r2, [r3, #0]
   1106e:	e00c      	b.n	1108a <end_function+0x32e>
   11070:	230f      	movs	r3, #15
   11072:	18fb      	adds	r3, r7, r3
   11074:	781b      	ldrb	r3, [r3, #0]
   11076:	4a0a      	ldr	r2, [pc, #40]	; (110a0 <end_function+0x344>)
   11078:	2100      	movs	r1, #0
   1107a:	54d1      	strb	r1, [r2, r3]
   1107c:	230f      	movs	r3, #15
   1107e:	18fb      	adds	r3, r7, r3
   11080:	781a      	ldrb	r2, [r3, #0]
   11082:	230f      	movs	r3, #15
   11084:	18fb      	adds	r3, r7, r3
   11086:	3201      	adds	r2, #1
   11088:	701a      	strb	r2, [r3, #0]
   1108a:	230f      	movs	r3, #15
   1108c:	18fb      	adds	r3, r7, r3
   1108e:	781b      	ldrb	r3, [r3, #0]
   11090:	2bdb      	cmp	r3, #219	; 0xdb
   11092:	d9ed      	bls.n	11070 <end_function+0x314>
   11094:	e027      	b.n	110e6 <end_function+0x38a>
   11096:	46c0      	nop			; (mov r8, r8)
   11098:	2000151c 	.word	0x2000151c
   1109c:	200012dc 	.word	0x200012dc
   110a0:	200012e4 	.word	0x200012e4
   110a4:	0000d805 	.word	0x0000d805
   110a8:	2000002c 	.word	0x2000002c
   110ac:	0001d34c 	.word	0x0001d34c
   110b0:	00017905 	.word	0x00017905
   110b4:	0000f90d 	.word	0x0000f90d
   110b8:	20001b08 	.word	0x20001b08
   110bc:	20001c04 	.word	0x20001c04
   110c0:	20001b12 	.word	0x20001b12
   110c4:	20001c05 	.word	0x20001c05
   110c8:	20001adc 	.word	0x20001adc
   110cc:	20001b09 	.word	0x20001b09
					MiApp_WriteData(rxChar);				
   110d0:	4b12      	ldr	r3, [pc, #72]	; (1111c <end_function+0x3c0>)
   110d2:	781b      	ldrb	r3, [r3, #0]
   110d4:	1c5a      	adds	r2, r3, #1
   110d6:	b2d1      	uxtb	r1, r2
   110d8:	4a10      	ldr	r2, [pc, #64]	; (1111c <end_function+0x3c0>)
   110da:	7011      	strb	r1, [r2, #0]
   110dc:	0019      	movs	r1, r3
   110de:	4b10      	ldr	r3, [pc, #64]	; (11120 <end_function+0x3c4>)
   110e0:	1dfa      	adds	r2, r7, #7
   110e2:	7812      	ldrb	r2, [r2, #0]
   110e4:	545a      	strb	r2, [r3, r1]
				EndStep0 = EndStep1 = EndStep2 = 0;
   110e6:	4b0f      	ldr	r3, [pc, #60]	; (11124 <end_function+0x3c8>)
   110e8:	2200      	movs	r2, #0
   110ea:	701a      	strb	r2, [r3, #0]
   110ec:	4b0d      	ldr	r3, [pc, #52]	; (11124 <end_function+0x3c8>)
   110ee:	781a      	ldrb	r2, [r3, #0]
   110f0:	4b0d      	ldr	r3, [pc, #52]	; (11128 <end_function+0x3cc>)
   110f2:	701a      	strb	r2, [r3, #0]
   110f4:	4b0c      	ldr	r3, [pc, #48]	; (11128 <end_function+0x3cc>)
   110f6:	781a      	ldrb	r2, [r3, #0]
   110f8:	4b0c      	ldr	r3, [pc, #48]	; (1112c <end_function+0x3d0>)
   110fa:	701a      	strb	r2, [r3, #0]
				TransStep0 = TransStep1 = TransStep2 = 0;
   110fc:	4b0c      	ldr	r3, [pc, #48]	; (11130 <end_function+0x3d4>)
   110fe:	2200      	movs	r2, #0
   11100:	701a      	strb	r2, [r3, #0]
   11102:	4b0b      	ldr	r3, [pc, #44]	; (11130 <end_function+0x3d4>)
   11104:	781a      	ldrb	r2, [r3, #0]
   11106:	4b0b      	ldr	r3, [pc, #44]	; (11134 <end_function+0x3d8>)
   11108:	701a      	strb	r2, [r3, #0]
   1110a:	4b0a      	ldr	r3, [pc, #40]	; (11134 <end_function+0x3d8>)
   1110c:	781a      	ldrb	r2, [r3, #0]
   1110e:	4b0a      	ldr	r3, [pc, #40]	; (11138 <end_function+0x3dc>)
   11110:	701a      	strb	r2, [r3, #0]
				break;
   11112:	46c0      	nop			; (mov r8, r8)
}
   11114:	46c0      	nop			; (mov r8, r8)
   11116:	46bd      	mov	sp, r7
   11118:	b004      	add	sp, #16
   1111a:	bd80      	pop	{r7, pc}
   1111c:	200012dc 	.word	0x200012dc
   11120:	200012e4 	.word	0x200012e4
   11124:	20001b08 	.word	0x20001b08
   11128:	20001c04 	.word	0x20001c04
   1112c:	20001b12 	.word	0x20001b12
   11130:	20001c05 	.word	0x20001c05
   11134:	20001adc 	.word	0x20001adc
   11138:	20001b09 	.word	0x20001b09

0001113c <ConsoleProc2>:

uint8_t Exit_Protocol_Count=0;
void ConsoleProc2(void)
{
   1113c:	b580      	push	{r7, lr}
   1113e:	b082      	sub	sp, #8
   11140:	af00      	add	r7, sp, #0
	
	char rxChar,Start_Step, i;
	uint8_t rlt;
//	static bool chk0x0D = false;

	Start_Step = networkInfo.STXL;
   11142:	1dfb      	adds	r3, r7, #7
   11144:	4aad      	ldr	r2, [pc, #692]	; (113fc <ConsoleProc2+0x2c0>)
   11146:	7e92      	ldrb	r2, [r2, #26]
   11148:	701a      	strb	r2, [r3, #0]

	if((-1) != (rxChar = sio2host_getchar_nowait())){
   1114a:	4bad      	ldr	r3, [pc, #692]	; (11400 <ConsoleProc2+0x2c4>)
   1114c:	4798      	blx	r3
   1114e:	0002      	movs	r2, r0
   11150:	1dbb      	adds	r3, r7, #6
   11152:	701a      	strb	r2, [r3, #0]
		if(rxChar != 0xff){
   11154:	1dbb      	adds	r3, r7, #6
   11156:	781b      	ldrb	r3, [r3, #0]
   11158:	2bff      	cmp	r3, #255	; 0xff
   1115a:	d100      	bne.n	1115e <ConsoleProc2+0x22>
   1115c:	e149      	b.n	113f2 <ConsoleProc2+0x2b6>
			if(chkecho) printf("%c",rxChar);
   1115e:	4ba9      	ldr	r3, [pc, #676]	; (11404 <ConsoleProc2+0x2c8>)
   11160:	781b      	ldrb	r3, [r3, #0]
   11162:	2b00      	cmp	r3, #0
   11164:	d004      	beq.n	11170 <ConsoleProc2+0x34>
   11166:	1dbb      	adds	r3, r7, #6
   11168:	781b      	ldrb	r3, [r3, #0]
   1116a:	0018      	movs	r0, r3
   1116c:	4ba6      	ldr	r3, [pc, #664]	; (11408 <ConsoleProc2+0x2cc>)
   1116e:	4798      	blx	r3
			if(rxChar == '@'){
   11170:	1dbb      	adds	r3, r7, #6
   11172:	781b      	ldrb	r3, [r3, #0]
   11174:	2b40      	cmp	r3, #64	; 0x40
   11176:	d106      	bne.n	11186 <ConsoleProc2+0x4a>
				Exit_Protocol_Count++;				
   11178:	4ba4      	ldr	r3, [pc, #656]	; (1140c <ConsoleProc2+0x2d0>)
   1117a:	781b      	ldrb	r3, [r3, #0]
   1117c:	3301      	adds	r3, #1
   1117e:	b2da      	uxtb	r2, r3
   11180:	4ba2      	ldr	r3, [pc, #648]	; (1140c <ConsoleProc2+0x2d0>)
   11182:	701a      	strb	r2, [r3, #0]
   11184:	e002      	b.n	1118c <ConsoleProc2+0x50>
			}else{
				Exit_Protocol_Count = 0;
   11186:	4ba1      	ldr	r3, [pc, #644]	; (1140c <ConsoleProc2+0x2d0>)
   11188:	2200      	movs	r2, #0
   1118a:	701a      	strb	r2, [r3, #0]
			}
			if(Exit_Protocol_Count >= 3){
   1118c:	4b9f      	ldr	r3, [pc, #636]	; (1140c <ConsoleProc2+0x2d0>)
   1118e:	781b      	ldrb	r3, [r3, #0]
   11190:	2b02      	cmp	r3, #2
   11192:	d90d      	bls.n	111b0 <ConsoleProc2+0x74>
				Exit_Protocol_Count = 0;
   11194:	4b9d      	ldr	r3, [pc, #628]	; (1140c <ConsoleProc2+0x2d0>)
   11196:	2200      	movs	r2, #0
   11198:	701a      	strb	r2, [r3, #0]
				chkprotocol = false;
   1119a:	4b9d      	ldr	r3, [pc, #628]	; (11410 <ConsoleProc2+0x2d4>)
   1119c:	2200      	movs	r2, #0
   1119e:	701a      	strb	r2, [r3, #0]
				if(chkecho)	printf("\n\rExit Protocol Mode..!\n\r");
   111a0:	4b98      	ldr	r3, [pc, #608]	; (11404 <ConsoleProc2+0x2c8>)
   111a2:	781b      	ldrb	r3, [r3, #0]
   111a4:	2b00      	cmp	r3, #0
   111a6:	d003      	beq.n	111b0 <ConsoleProc2+0x74>
   111a8:	4b9a      	ldr	r3, [pc, #616]	; (11414 <ConsoleProc2+0x2d8>)
   111aa:	0018      	movs	r0, r3
   111ac:	4b9a      	ldr	r3, [pc, #616]	; (11418 <ConsoleProc2+0x2dc>)
   111ae:	4798      	blx	r3
			}
			if(Start_Step == '1'){
   111b0:	1dfb      	adds	r3, r7, #7
   111b2:	781b      	ldrb	r3, [r3, #0]
   111b4:	2b31      	cmp	r3, #49	; 0x31
   111b6:	d135      	bne.n	11224 <ConsoleProc2+0xe8>
				switch(TransStep0){
   111b8:	4b98      	ldr	r3, [pc, #608]	; (1141c <ConsoleProc2+0x2e0>)
   111ba:	781b      	ldrb	r3, [r3, #0]
   111bc:	2b00      	cmp	r3, #0
   111be:	d002      	beq.n	111c6 <ConsoleProc2+0x8a>
   111c0:	2b01      	cmp	r3, #1
   111c2:	d01c      	beq.n	111fe <ConsoleProc2+0xc2>
   111c4:	e021      	b.n	1120a <ConsoleProc2+0xce>
					case 0:
						if(rxChar == networkInfo.STX1){
   111c6:	4b8d      	ldr	r3, [pc, #564]	; (113fc <ConsoleProc2+0x2c0>)
   111c8:	7edb      	ldrb	r3, [r3, #27]
   111ca:	1dba      	adds	r2, r7, #6
   111cc:	7812      	ldrb	r2, [r2, #0]
   111ce:	429a      	cmp	r2, r3
   111d0:	d111      	bne.n	111f6 <ConsoleProc2+0xba>
							MiApp_FlushTx();
   111d2:	4b93      	ldr	r3, [pc, #588]	; (11420 <ConsoleProc2+0x2e4>)
   111d4:	220b      	movs	r2, #11
   111d6:	701a      	strb	r2, [r3, #0]
							MiApp_WriteData(rxChar);
   111d8:	4b91      	ldr	r3, [pc, #580]	; (11420 <ConsoleProc2+0x2e4>)
   111da:	781b      	ldrb	r3, [r3, #0]
   111dc:	1c5a      	adds	r2, r3, #1
   111de:	b2d1      	uxtb	r1, r2
   111e0:	4a8f      	ldr	r2, [pc, #572]	; (11420 <ConsoleProc2+0x2e4>)
   111e2:	7011      	strb	r1, [r2, #0]
   111e4:	0019      	movs	r1, r3
   111e6:	4b8f      	ldr	r3, [pc, #572]	; (11424 <ConsoleProc2+0x2e8>)
   111e8:	1dba      	adds	r2, r7, #6
   111ea:	7812      	ldrb	r2, [r2, #0]
   111ec:	545a      	strb	r2, [r3, r1]
							TransStep0 = 1;
   111ee:	4b8b      	ldr	r3, [pc, #556]	; (1141c <ConsoleProc2+0x2e0>)
   111f0:	2201      	movs	r2, #1
   111f2:	701a      	strb	r2, [r3, #0]
						}else{
							TransStep1 = 0;
						}
						break;
   111f4:	e0fd      	b.n	113f2 <ConsoleProc2+0x2b6>
							TransStep1 = 0;
   111f6:	4b8c      	ldr	r3, [pc, #560]	; (11428 <ConsoleProc2+0x2ec>)
   111f8:	2200      	movs	r2, #0
   111fa:	701a      	strb	r2, [r3, #0]
						break;
   111fc:	e0f9      	b.n	113f2 <ConsoleProc2+0x2b6>
					case 1:
						end_function(rxChar);
   111fe:	1dbb      	adds	r3, r7, #6
   11200:	781b      	ldrb	r3, [r3, #0]
   11202:	0018      	movs	r0, r3
   11204:	4b89      	ldr	r3, [pc, #548]	; (1142c <ConsoleProc2+0x2f0>)
   11206:	4798      	blx	r3
						break;
   11208:	e0f3      	b.n	113f2 <ConsoleProc2+0x2b6>
					default:
						MiApp_WriteData(rxChar);
   1120a:	4b85      	ldr	r3, [pc, #532]	; (11420 <ConsoleProc2+0x2e4>)
   1120c:	781b      	ldrb	r3, [r3, #0]
   1120e:	1c5a      	adds	r2, r3, #1
   11210:	b2d1      	uxtb	r1, r2
   11212:	4a83      	ldr	r2, [pc, #524]	; (11420 <ConsoleProc2+0x2e4>)
   11214:	7011      	strb	r1, [r2, #0]
   11216:	0019      	movs	r1, r3
   11218:	4b82      	ldr	r3, [pc, #520]	; (11424 <ConsoleProc2+0x2e8>)
   1121a:	1dba      	adds	r2, r7, #6
   1121c:	7812      	ldrb	r2, [r2, #0]
   1121e:	545a      	strb	r2, [r3, r1]
						break;
   11220:	46c0      	nop			; (mov r8, r8)
   11222:	e0e6      	b.n	113f2 <ConsoleProc2+0x2b6>
				}					
			}else if(Start_Step == '2'){
   11224:	1dfb      	adds	r3, r7, #7
   11226:	781b      	ldrb	r3, [r3, #0]
   11228:	2b32      	cmp	r3, #50	; 0x32
   1122a:	d15a      	bne.n	112e2 <ConsoleProc2+0x1a6>
				switch(TransStep1){
   1122c:	4b7e      	ldr	r3, [pc, #504]	; (11428 <ConsoleProc2+0x2ec>)
   1122e:	781b      	ldrb	r3, [r3, #0]
   11230:	2b01      	cmp	r3, #1
   11232:	d01f      	beq.n	11274 <ConsoleProc2+0x138>
   11234:	2b02      	cmp	r3, #2
   11236:	d041      	beq.n	112bc <ConsoleProc2+0x180>
   11238:	2b00      	cmp	r3, #0
   1123a:	d145      	bne.n	112c8 <ConsoleProc2+0x18c>
					case 0:
						if(rxChar == networkInfo.STX1){
   1123c:	4b6f      	ldr	r3, [pc, #444]	; (113fc <ConsoleProc2+0x2c0>)
   1123e:	7edb      	ldrb	r3, [r3, #27]
   11240:	1dba      	adds	r2, r7, #6
   11242:	7812      	ldrb	r2, [r2, #0]
   11244:	429a      	cmp	r2, r3
   11246:	d111      	bne.n	1126c <ConsoleProc2+0x130>
							MiApp_FlushTx();
   11248:	4b75      	ldr	r3, [pc, #468]	; (11420 <ConsoleProc2+0x2e4>)
   1124a:	220b      	movs	r2, #11
   1124c:	701a      	strb	r2, [r3, #0]
							MiApp_WriteData(rxChar);
   1124e:	4b74      	ldr	r3, [pc, #464]	; (11420 <ConsoleProc2+0x2e4>)
   11250:	781b      	ldrb	r3, [r3, #0]
   11252:	1c5a      	adds	r2, r3, #1
   11254:	b2d1      	uxtb	r1, r2
   11256:	4a72      	ldr	r2, [pc, #456]	; (11420 <ConsoleProc2+0x2e4>)
   11258:	7011      	strb	r1, [r2, #0]
   1125a:	0019      	movs	r1, r3
   1125c:	4b71      	ldr	r3, [pc, #452]	; (11424 <ConsoleProc2+0x2e8>)
   1125e:	1dba      	adds	r2, r7, #6
   11260:	7812      	ldrb	r2, [r2, #0]
   11262:	545a      	strb	r2, [r3, r1]
							TransStep1 = 1;
   11264:	4b70      	ldr	r3, [pc, #448]	; (11428 <ConsoleProc2+0x2ec>)
   11266:	2201      	movs	r2, #1
   11268:	701a      	strb	r2, [r3, #0]
						}else{
							TransStep1 = 0;
						}
						break;
   1126a:	e0c2      	b.n	113f2 <ConsoleProc2+0x2b6>
							TransStep1 = 0;
   1126c:	4b6e      	ldr	r3, [pc, #440]	; (11428 <ConsoleProc2+0x2ec>)
   1126e:	2200      	movs	r2, #0
   11270:	701a      	strb	r2, [r3, #0]
						break;
   11272:	e0be      	b.n	113f2 <ConsoleProc2+0x2b6>
					case 1:				
						if(rxChar == networkInfo.STX2){
   11274:	4b61      	ldr	r3, [pc, #388]	; (113fc <ConsoleProc2+0x2c0>)
   11276:	7f1b      	ldrb	r3, [r3, #28]
   11278:	1dba      	adds	r2, r7, #6
   1127a:	7812      	ldrb	r2, [r2, #0]
   1127c:	429a      	cmp	r2, r3
   1127e:	d10e      	bne.n	1129e <ConsoleProc2+0x162>
							MiApp_WriteData(rxChar);
   11280:	4b67      	ldr	r3, [pc, #412]	; (11420 <ConsoleProc2+0x2e4>)
   11282:	781b      	ldrb	r3, [r3, #0]
   11284:	1c5a      	adds	r2, r3, #1
   11286:	b2d1      	uxtb	r1, r2
   11288:	4a65      	ldr	r2, [pc, #404]	; (11420 <ConsoleProc2+0x2e4>)
   1128a:	7011      	strb	r1, [r2, #0]
   1128c:	0019      	movs	r1, r3
   1128e:	4b65      	ldr	r3, [pc, #404]	; (11424 <ConsoleProc2+0x2e8>)
   11290:	1dba      	adds	r2, r7, #6
   11292:	7812      	ldrb	r2, [r2, #0]
   11294:	545a      	strb	r2, [r3, r1]
							TransStep1 = 2;
   11296:	4b64      	ldr	r3, [pc, #400]	; (11428 <ConsoleProc2+0x2ec>)
   11298:	2202      	movs	r2, #2
   1129a:	701a      	strb	r2, [r3, #0]
						}else{
							MiApp_WriteData(rxChar);
							TransStep1 = 0;
						}
						break;
   1129c:	e0a9      	b.n	113f2 <ConsoleProc2+0x2b6>
							MiApp_WriteData(rxChar);
   1129e:	4b60      	ldr	r3, [pc, #384]	; (11420 <ConsoleProc2+0x2e4>)
   112a0:	781b      	ldrb	r3, [r3, #0]
   112a2:	1c5a      	adds	r2, r3, #1
   112a4:	b2d1      	uxtb	r1, r2
   112a6:	4a5e      	ldr	r2, [pc, #376]	; (11420 <ConsoleProc2+0x2e4>)
   112a8:	7011      	strb	r1, [r2, #0]
   112aa:	0019      	movs	r1, r3
   112ac:	4b5d      	ldr	r3, [pc, #372]	; (11424 <ConsoleProc2+0x2e8>)
   112ae:	1dba      	adds	r2, r7, #6
   112b0:	7812      	ldrb	r2, [r2, #0]
   112b2:	545a      	strb	r2, [r3, r1]
							TransStep1 = 0;
   112b4:	4b5c      	ldr	r3, [pc, #368]	; (11428 <ConsoleProc2+0x2ec>)
   112b6:	2200      	movs	r2, #0
   112b8:	701a      	strb	r2, [r3, #0]
						break;
   112ba:	e09a      	b.n	113f2 <ConsoleProc2+0x2b6>
					case 2:
						end_function(rxChar);
   112bc:	1dbb      	adds	r3, r7, #6
   112be:	781b      	ldrb	r3, [r3, #0]
   112c0:	0018      	movs	r0, r3
   112c2:	4b5a      	ldr	r3, [pc, #360]	; (1142c <ConsoleProc2+0x2f0>)
   112c4:	4798      	blx	r3
						break;
   112c6:	e094      	b.n	113f2 <ConsoleProc2+0x2b6>
					default:
						MiApp_WriteData(rxChar);
   112c8:	4b55      	ldr	r3, [pc, #340]	; (11420 <ConsoleProc2+0x2e4>)
   112ca:	781b      	ldrb	r3, [r3, #0]
   112cc:	1c5a      	adds	r2, r3, #1
   112ce:	b2d1      	uxtb	r1, r2
   112d0:	4a53      	ldr	r2, [pc, #332]	; (11420 <ConsoleProc2+0x2e4>)
   112d2:	7011      	strb	r1, [r2, #0]
   112d4:	0019      	movs	r1, r3
   112d6:	4b53      	ldr	r3, [pc, #332]	; (11424 <ConsoleProc2+0x2e8>)
   112d8:	1dba      	adds	r2, r7, #6
   112da:	7812      	ldrb	r2, [r2, #0]
   112dc:	545a      	strb	r2, [r3, r1]
						break;
   112de:	46c0      	nop			; (mov r8, r8)
   112e0:	e087      	b.n	113f2 <ConsoleProc2+0x2b6>
				}
			}else if(Start_Step == '3'){
   112e2:	1dfb      	adds	r3, r7, #7
   112e4:	781b      	ldrb	r3, [r3, #0]
   112e6:	2b33      	cmp	r3, #51	; 0x33
   112e8:	d000      	beq.n	112ec <ConsoleProc2+0x1b0>
   112ea:	e082      	b.n	113f2 <ConsoleProc2+0x2b6>
				switch(TransStep2){
   112ec:	4b50      	ldr	r3, [pc, #320]	; (11430 <ConsoleProc2+0x2f4>)
   112ee:	781b      	ldrb	r3, [r3, #0]
   112f0:	2b01      	cmp	r3, #1
   112f2:	d024      	beq.n	1133e <ConsoleProc2+0x202>
   112f4:	dc02      	bgt.n	112fc <ConsoleProc2+0x1c0>
   112f6:	2b00      	cmp	r3, #0
   112f8:	d005      	beq.n	11306 <ConsoleProc2+0x1ca>
   112fa:	e06e      	b.n	113da <ConsoleProc2+0x29e>
   112fc:	2b02      	cmp	r3, #2
   112fe:	d042      	beq.n	11386 <ConsoleProc2+0x24a>
   11300:	2b03      	cmp	r3, #3
   11302:	d064      	beq.n	113ce <ConsoleProc2+0x292>
   11304:	e069      	b.n	113da <ConsoleProc2+0x29e>
					case 0:
						if(rxChar == networkInfo.STX1){
   11306:	4b3d      	ldr	r3, [pc, #244]	; (113fc <ConsoleProc2+0x2c0>)
   11308:	7edb      	ldrb	r3, [r3, #27]
   1130a:	1dba      	adds	r2, r7, #6
   1130c:	7812      	ldrb	r2, [r2, #0]
   1130e:	429a      	cmp	r2, r3
   11310:	d111      	bne.n	11336 <ConsoleProc2+0x1fa>
							MiApp_FlushTx();
   11312:	4b43      	ldr	r3, [pc, #268]	; (11420 <ConsoleProc2+0x2e4>)
   11314:	220b      	movs	r2, #11
   11316:	701a      	strb	r2, [r3, #0]
							MiApp_WriteData(rxChar);
   11318:	4b41      	ldr	r3, [pc, #260]	; (11420 <ConsoleProc2+0x2e4>)
   1131a:	781b      	ldrb	r3, [r3, #0]
   1131c:	1c5a      	adds	r2, r3, #1
   1131e:	b2d1      	uxtb	r1, r2
   11320:	4a3f      	ldr	r2, [pc, #252]	; (11420 <ConsoleProc2+0x2e4>)
   11322:	7011      	strb	r1, [r2, #0]
   11324:	0019      	movs	r1, r3
   11326:	4b3f      	ldr	r3, [pc, #252]	; (11424 <ConsoleProc2+0x2e8>)
   11328:	1dba      	adds	r2, r7, #6
   1132a:	7812      	ldrb	r2, [r2, #0]
   1132c:	545a      	strb	r2, [r3, r1]
							TransStep2 = 1;
   1132e:	4b40      	ldr	r3, [pc, #256]	; (11430 <ConsoleProc2+0x2f4>)
   11330:	2201      	movs	r2, #1
   11332:	701a      	strb	r2, [r3, #0]
						}else{
							TransStep2 = 0;
						}
						break;
   11334:	e05d      	b.n	113f2 <ConsoleProc2+0x2b6>
							TransStep2 = 0;
   11336:	4b3e      	ldr	r3, [pc, #248]	; (11430 <ConsoleProc2+0x2f4>)
   11338:	2200      	movs	r2, #0
   1133a:	701a      	strb	r2, [r3, #0]
						break;
   1133c:	e059      	b.n	113f2 <ConsoleProc2+0x2b6>
					case 1:
						if(rxChar == networkInfo.STX2){
   1133e:	4b2f      	ldr	r3, [pc, #188]	; (113fc <ConsoleProc2+0x2c0>)
   11340:	7f1b      	ldrb	r3, [r3, #28]
   11342:	1dba      	adds	r2, r7, #6
   11344:	7812      	ldrb	r2, [r2, #0]
   11346:	429a      	cmp	r2, r3
   11348:	d10e      	bne.n	11368 <ConsoleProc2+0x22c>
							MiApp_WriteData(rxChar);
   1134a:	4b35      	ldr	r3, [pc, #212]	; (11420 <ConsoleProc2+0x2e4>)
   1134c:	781b      	ldrb	r3, [r3, #0]
   1134e:	1c5a      	adds	r2, r3, #1
   11350:	b2d1      	uxtb	r1, r2
   11352:	4a33      	ldr	r2, [pc, #204]	; (11420 <ConsoleProc2+0x2e4>)
   11354:	7011      	strb	r1, [r2, #0]
   11356:	0019      	movs	r1, r3
   11358:	4b32      	ldr	r3, [pc, #200]	; (11424 <ConsoleProc2+0x2e8>)
   1135a:	1dba      	adds	r2, r7, #6
   1135c:	7812      	ldrb	r2, [r2, #0]
   1135e:	545a      	strb	r2, [r3, r1]
							TransStep2 = 2;
   11360:	4b33      	ldr	r3, [pc, #204]	; (11430 <ConsoleProc2+0x2f4>)
   11362:	2202      	movs	r2, #2
   11364:	701a      	strb	r2, [r3, #0]
						}else{
							MiApp_WriteData(rxChar);
							TransStep2 = 0;
						}
						break;
   11366:	e044      	b.n	113f2 <ConsoleProc2+0x2b6>
							MiApp_WriteData(rxChar);
   11368:	4b2d      	ldr	r3, [pc, #180]	; (11420 <ConsoleProc2+0x2e4>)
   1136a:	781b      	ldrb	r3, [r3, #0]
   1136c:	1c5a      	adds	r2, r3, #1
   1136e:	b2d1      	uxtb	r1, r2
   11370:	4a2b      	ldr	r2, [pc, #172]	; (11420 <ConsoleProc2+0x2e4>)
   11372:	7011      	strb	r1, [r2, #0]
   11374:	0019      	movs	r1, r3
   11376:	4b2b      	ldr	r3, [pc, #172]	; (11424 <ConsoleProc2+0x2e8>)
   11378:	1dba      	adds	r2, r7, #6
   1137a:	7812      	ldrb	r2, [r2, #0]
   1137c:	545a      	strb	r2, [r3, r1]
							TransStep2 = 0;
   1137e:	4b2c      	ldr	r3, [pc, #176]	; (11430 <ConsoleProc2+0x2f4>)
   11380:	2200      	movs	r2, #0
   11382:	701a      	strb	r2, [r3, #0]
						break;
   11384:	e035      	b.n	113f2 <ConsoleProc2+0x2b6>
					case 2:
						if(rxChar == networkInfo.STX3){
   11386:	4b1d      	ldr	r3, [pc, #116]	; (113fc <ConsoleProc2+0x2c0>)
   11388:	7f5b      	ldrb	r3, [r3, #29]
   1138a:	1dba      	adds	r2, r7, #6
   1138c:	7812      	ldrb	r2, [r2, #0]
   1138e:	429a      	cmp	r2, r3
   11390:	d10e      	bne.n	113b0 <ConsoleProc2+0x274>
							MiApp_WriteData(rxChar);
   11392:	4b23      	ldr	r3, [pc, #140]	; (11420 <ConsoleProc2+0x2e4>)
   11394:	781b      	ldrb	r3, [r3, #0]
   11396:	1c5a      	adds	r2, r3, #1
   11398:	b2d1      	uxtb	r1, r2
   1139a:	4a21      	ldr	r2, [pc, #132]	; (11420 <ConsoleProc2+0x2e4>)
   1139c:	7011      	strb	r1, [r2, #0]
   1139e:	0019      	movs	r1, r3
   113a0:	4b20      	ldr	r3, [pc, #128]	; (11424 <ConsoleProc2+0x2e8>)
   113a2:	1dba      	adds	r2, r7, #6
   113a4:	7812      	ldrb	r2, [r2, #0]
   113a6:	545a      	strb	r2, [r3, r1]
							TransStep2 = 3;
   113a8:	4b21      	ldr	r3, [pc, #132]	; (11430 <ConsoleProc2+0x2f4>)
   113aa:	2203      	movs	r2, #3
   113ac:	701a      	strb	r2, [r3, #0]
						}else{
							MiApp_WriteData(rxChar);
							TransStep2 = 0;
						}
						break;					
   113ae:	e020      	b.n	113f2 <ConsoleProc2+0x2b6>
							MiApp_WriteData(rxChar);
   113b0:	4b1b      	ldr	r3, [pc, #108]	; (11420 <ConsoleProc2+0x2e4>)
   113b2:	781b      	ldrb	r3, [r3, #0]
   113b4:	1c5a      	adds	r2, r3, #1
   113b6:	b2d1      	uxtb	r1, r2
   113b8:	4a19      	ldr	r2, [pc, #100]	; (11420 <ConsoleProc2+0x2e4>)
   113ba:	7011      	strb	r1, [r2, #0]
   113bc:	0019      	movs	r1, r3
   113be:	4b19      	ldr	r3, [pc, #100]	; (11424 <ConsoleProc2+0x2e8>)
   113c0:	1dba      	adds	r2, r7, #6
   113c2:	7812      	ldrb	r2, [r2, #0]
   113c4:	545a      	strb	r2, [r3, r1]
							TransStep2 = 0;
   113c6:	4b1a      	ldr	r3, [pc, #104]	; (11430 <ConsoleProc2+0x2f4>)
   113c8:	2200      	movs	r2, #0
   113ca:	701a      	strb	r2, [r3, #0]
						break;					
   113cc:	e011      	b.n	113f2 <ConsoleProc2+0x2b6>
					case 3:
						end_function(rxChar);
   113ce:	1dbb      	adds	r3, r7, #6
   113d0:	781b      	ldrb	r3, [r3, #0]
   113d2:	0018      	movs	r0, r3
   113d4:	4b15      	ldr	r3, [pc, #84]	; (1142c <ConsoleProc2+0x2f0>)
   113d6:	4798      	blx	r3
						break;
   113d8:	e00b      	b.n	113f2 <ConsoleProc2+0x2b6>
					default:
						MiApp_WriteData(rxChar);
   113da:	4b11      	ldr	r3, [pc, #68]	; (11420 <ConsoleProc2+0x2e4>)
   113dc:	781b      	ldrb	r3, [r3, #0]
   113de:	1c5a      	adds	r2, r3, #1
   113e0:	b2d1      	uxtb	r1, r2
   113e2:	4a0f      	ldr	r2, [pc, #60]	; (11420 <ConsoleProc2+0x2e4>)
   113e4:	7011      	strb	r1, [r2, #0]
   113e6:	0019      	movs	r1, r3
   113e8:	4b0e      	ldr	r3, [pc, #56]	; (11424 <ConsoleProc2+0x2e8>)
   113ea:	1dba      	adds	r2, r7, #6
   113ec:	7812      	ldrb	r2, [r2, #0]
   113ee:	545a      	strb	r2, [r3, r1]
						break;
   113f0:	46c0      	nop			; (mov r8, r8)
				}
			}else;				
		}		
	}			
}
   113f2:	46c0      	nop			; (mov r8, r8)
   113f4:	46bd      	mov	sp, r7
   113f6:	b002      	add	sp, #8
   113f8:	bd80      	pop	{r7, pc}
   113fa:	46c0      	nop			; (mov r8, r8)
   113fc:	2000151c 	.word	0x2000151c
   11400:	00006a79 	.word	0x00006a79
   11404:	2000002c 	.word	0x2000002c
   11408:	00017851 	.word	0x00017851
   1140c:	20000c87 	.word	0x20000c87
   11410:	2000002d 	.word	0x2000002d
   11414:	0001d35c 	.word	0x0001d35c
   11418:	0001782d 	.word	0x0001782d
   1141c:	20001b09 	.word	0x20001b09
   11420:	200012dc 	.word	0x200012dc
   11424:	200012e4 	.word	0x200012e4
   11428:	20001adc 	.word	0x20001adc
   1142c:	00010d5d 	.word	0x00010d5d
   11430:	20001c05 	.word	0x20001c05

00011434 <ConsoleProc>:

// test__ConsoleProc
void ConsoleProc(void)
{
   11434:	b590      	push	{r4, r7, lr}
   11436:	b08d      	sub	sp, #52	; 0x34
   11438:	af00      	add	r7, sp, #0
	uttec_t* pFactor = getloraFactor();
   1143a:	4b9d      	ldr	r3, [pc, #628]	; (116b0 <ConsoleProc+0x27c>)
   1143c:	4798      	blx	r3
   1143e:	0003      	movs	r3, r0
   11440:	62bb      	str	r3, [r7, #40]	; 0x28
	
	char rxChar,tmp;
	char rxStr[17];
	uint8_t i,rlt,Init_Temp=1; //kwlee
   11442:	2327      	movs	r3, #39	; 0x27
   11444:	18fb      	adds	r3, r7, r3
   11446:	2201      	movs	r2, #1
   11448:	701a      	strb	r2, [r3, #0]
	uint32_t OperatingChannel = ChannelMAP;
   1144a:	4b9a      	ldr	r3, [pc, #616]	; (116b4 <ConsoleProc+0x280>)
   1144c:	681b      	ldr	r3, [r3, #0]
   1144e:	623b      	str	r3, [r7, #32]
	uint8_t Con_Buff;
	
//	static bool chk0x0D = false;
//	static bool chk0xff = false;
	
	if((-1) != (rxChar = sio2host_getchar_nowait())){		
   11450:	4b99      	ldr	r3, [pc, #612]	; (116b8 <ConsoleProc+0x284>)
   11452:	4798      	blx	r3
   11454:	0002      	movs	r2, r0
   11456:	231f      	movs	r3, #31
   11458:	18fb      	adds	r3, r7, r3
   1145a:	701a      	strb	r2, [r3, #0]
		if(rxChar != 0xff){
   1145c:	231f      	movs	r3, #31
   1145e:	18fb      	adds	r3, r7, r3
   11460:	781b      	ldrb	r3, [r3, #0]
   11462:	2bff      	cmp	r3, #255	; 0xff
   11464:	d101      	bne.n	1146a <ConsoleProc+0x36>
   11466:	f001 fdd3 	bl	13010 <ConsoleProc+0x1bdc>
			rxLenCnt++;
   1146a:	4b94      	ldr	r3, [pc, #592]	; (116bc <ConsoleProc+0x288>)
   1146c:	781b      	ldrb	r3, [r3, #0]
   1146e:	3301      	adds	r3, #1
   11470:	b2da      	uxtb	r2, r3
   11472:	4b92      	ldr	r3, [pc, #584]	; (116bc <ConsoleProc+0x288>)
   11474:	701a      	strb	r2, [r3, #0]
			if(rxLenCnt == 1){
   11476:	4b91      	ldr	r3, [pc, #580]	; (116bc <ConsoleProc+0x288>)
   11478:	781b      	ldrb	r3, [r3, #0]
   1147a:	2b01      	cmp	r3, #1
   1147c:	d13b      	bne.n	114f6 <ConsoleProc+0xc2>
				if((rxChar == 'A')||(rxChar == 'a')){
   1147e:	231f      	movs	r3, #31
   11480:	18fb      	adds	r3, r7, r3
   11482:	781b      	ldrb	r3, [r3, #0]
   11484:	2b41      	cmp	r3, #65	; 0x41
   11486:	d004      	beq.n	11492 <ConsoleProc+0x5e>
   11488:	231f      	movs	r3, #31
   1148a:	18fb      	adds	r3, r7, r3
   1148c:	781b      	ldrb	r3, [r3, #0]
   1148e:	2b61      	cmp	r3, #97	; 0x61
   11490:	d10d      	bne.n	114ae <ConsoleProc+0x7a>
					if(chkecho)	printf("%c",rxChar);
   11492:	4b8b      	ldr	r3, [pc, #556]	; (116c0 <ConsoleProc+0x28c>)
   11494:	781b      	ldrb	r3, [r3, #0]
   11496:	2b00      	cmp	r3, #0
   11498:	d101      	bne.n	1149e <ConsoleProc+0x6a>
   1149a:	f001 fdb9 	bl	13010 <ConsoleProc+0x1bdc>
   1149e:	231f      	movs	r3, #31
   114a0:	18fb      	adds	r3, r7, r3
   114a2:	781b      	ldrb	r3, [r3, #0]
   114a4:	0018      	movs	r0, r3
   114a6:	4b87      	ldr	r3, [pc, #540]	; (116c4 <ConsoleProc+0x290>)
   114a8:	4798      	blx	r3
   114aa:	f001 fdb1 	bl	13010 <ConsoleProc+0x1bdc>
				}else{
					if(chkecho)	printf("FAIL\n\r");
   114ae:	4b84      	ldr	r3, [pc, #528]	; (116c0 <ConsoleProc+0x28c>)
   114b0:	781b      	ldrb	r3, [r3, #0]
   114b2:	2b00      	cmp	r3, #0
   114b4:	d003      	beq.n	114be <ConsoleProc+0x8a>
   114b6:	4b84      	ldr	r3, [pc, #528]	; (116c8 <ConsoleProc+0x294>)
   114b8:	0018      	movs	r0, r3
   114ba:	4b84      	ldr	r3, [pc, #528]	; (116cc <ConsoleProc+0x298>)
   114bc:	4798      	blx	r3
					rxLenCnt = 0;
   114be:	4b7f      	ldr	r3, [pc, #508]	; (116bc <ConsoleProc+0x288>)
   114c0:	2200      	movs	r2, #0
   114c2:	701a      	strb	r2, [r3, #0]
					for(i=0;i<TX_BUFFER_SIZE;i++)	TxBuffer[i] = 0;
   114c4:	232f      	movs	r3, #47	; 0x2f
   114c6:	18fb      	adds	r3, r7, r3
   114c8:	2200      	movs	r2, #0
   114ca:	701a      	strb	r2, [r3, #0]
   114cc:	e00c      	b.n	114e8 <ConsoleProc+0xb4>
   114ce:	232f      	movs	r3, #47	; 0x2f
   114d0:	18fb      	adds	r3, r7, r3
   114d2:	781b      	ldrb	r3, [r3, #0]
   114d4:	4a7e      	ldr	r2, [pc, #504]	; (116d0 <ConsoleProc+0x29c>)
   114d6:	2100      	movs	r1, #0
   114d8:	54d1      	strb	r1, [r2, r3]
   114da:	232f      	movs	r3, #47	; 0x2f
   114dc:	18fb      	adds	r3, r7, r3
   114de:	781a      	ldrb	r2, [r3, #0]
   114e0:	232f      	movs	r3, #47	; 0x2f
   114e2:	18fb      	adds	r3, r7, r3
   114e4:	3201      	adds	r2, #1
   114e6:	701a      	strb	r2, [r3, #0]
   114e8:	232f      	movs	r3, #47	; 0x2f
   114ea:	18fb      	adds	r3, r7, r3
   114ec:	781b      	ldrb	r3, [r3, #0]
   114ee:	2bdb      	cmp	r3, #219	; 0xdb
   114f0:	d9ed      	bls.n	114ce <ConsoleProc+0x9a>
				MiApp_WriteData(rxChar);
				if(chkecho)	printf("%c",rxChar);
			}
		}
	}
}
   114f2:	f001 fd8d 	bl	13010 <ConsoleProc+0x1bdc>
			}else if(rxLenCnt == 2){
   114f6:	4b71      	ldr	r3, [pc, #452]	; (116bc <ConsoleProc+0x288>)
   114f8:	781b      	ldrb	r3, [r3, #0]
   114fa:	2b02      	cmp	r3, #2
   114fc:	d13b      	bne.n	11576 <ConsoleProc+0x142>
				if((rxChar == 'T')||(rxChar == 't')){
   114fe:	231f      	movs	r3, #31
   11500:	18fb      	adds	r3, r7, r3
   11502:	781b      	ldrb	r3, [r3, #0]
   11504:	2b54      	cmp	r3, #84	; 0x54
   11506:	d004      	beq.n	11512 <ConsoleProc+0xde>
   11508:	231f      	movs	r3, #31
   1150a:	18fb      	adds	r3, r7, r3
   1150c:	781b      	ldrb	r3, [r3, #0]
   1150e:	2b74      	cmp	r3, #116	; 0x74
   11510:	d10d      	bne.n	1152e <ConsoleProc+0xfa>
					if(chkecho)	printf("%c",rxChar);
   11512:	4b6b      	ldr	r3, [pc, #428]	; (116c0 <ConsoleProc+0x28c>)
   11514:	781b      	ldrb	r3, [r3, #0]
   11516:	2b00      	cmp	r3, #0
   11518:	d101      	bne.n	1151e <ConsoleProc+0xea>
   1151a:	f001 fd79 	bl	13010 <ConsoleProc+0x1bdc>
   1151e:	231f      	movs	r3, #31
   11520:	18fb      	adds	r3, r7, r3
   11522:	781b      	ldrb	r3, [r3, #0]
   11524:	0018      	movs	r0, r3
   11526:	4b67      	ldr	r3, [pc, #412]	; (116c4 <ConsoleProc+0x290>)
   11528:	4798      	blx	r3
   1152a:	f001 fd71 	bl	13010 <ConsoleProc+0x1bdc>
					if(chkecho)	printf("\n\rFAIL\n\r");
   1152e:	4b64      	ldr	r3, [pc, #400]	; (116c0 <ConsoleProc+0x28c>)
   11530:	781b      	ldrb	r3, [r3, #0]
   11532:	2b00      	cmp	r3, #0
   11534:	d003      	beq.n	1153e <ConsoleProc+0x10a>
   11536:	4b67      	ldr	r3, [pc, #412]	; (116d4 <ConsoleProc+0x2a0>)
   11538:	0018      	movs	r0, r3
   1153a:	4b64      	ldr	r3, [pc, #400]	; (116cc <ConsoleProc+0x298>)
   1153c:	4798      	blx	r3
					rxLenCnt = 0;
   1153e:	4b5f      	ldr	r3, [pc, #380]	; (116bc <ConsoleProc+0x288>)
   11540:	2200      	movs	r2, #0
   11542:	701a      	strb	r2, [r3, #0]
					for(i=0;i<TX_BUFFER_SIZE;i++)	TxBuffer[i] = 0;
   11544:	232f      	movs	r3, #47	; 0x2f
   11546:	18fb      	adds	r3, r7, r3
   11548:	2200      	movs	r2, #0
   1154a:	701a      	strb	r2, [r3, #0]
   1154c:	e00c      	b.n	11568 <ConsoleProc+0x134>
   1154e:	232f      	movs	r3, #47	; 0x2f
   11550:	18fb      	adds	r3, r7, r3
   11552:	781b      	ldrb	r3, [r3, #0]
   11554:	4a5e      	ldr	r2, [pc, #376]	; (116d0 <ConsoleProc+0x29c>)
   11556:	2100      	movs	r1, #0
   11558:	54d1      	strb	r1, [r2, r3]
   1155a:	232f      	movs	r3, #47	; 0x2f
   1155c:	18fb      	adds	r3, r7, r3
   1155e:	781a      	ldrb	r2, [r3, #0]
   11560:	232f      	movs	r3, #47	; 0x2f
   11562:	18fb      	adds	r3, r7, r3
   11564:	3201      	adds	r2, #1
   11566:	701a      	strb	r2, [r3, #0]
   11568:	232f      	movs	r3, #47	; 0x2f
   1156a:	18fb      	adds	r3, r7, r3
   1156c:	781b      	ldrb	r3, [r3, #0]
   1156e:	2bdb      	cmp	r3, #219	; 0xdb
   11570:	d9ed      	bls.n	1154e <ConsoleProc+0x11a>
}
   11572:	f001 fd4d 	bl	13010 <ConsoleProc+0x1bdc>
			}else if(rxLenCnt == 3){
   11576:	4b51      	ldr	r3, [pc, #324]	; (116bc <ConsoleProc+0x288>)
   11578:	781b      	ldrb	r3, [r3, #0]
   1157a:	2b03      	cmp	r3, #3
   1157c:	d14a      	bne.n	11614 <ConsoleProc+0x1e0>
				if(rxChar == '='){
   1157e:	231f      	movs	r3, #31
   11580:	18fb      	adds	r3, r7, r3
   11582:	781b      	ldrb	r3, [r3, #0]
   11584:	2b3d      	cmp	r3, #61	; 0x3d
   11586:	d10d      	bne.n	115a4 <ConsoleProc+0x170>
					if(chkecho)	printf("%c",rxChar);
   11588:	4b4d      	ldr	r3, [pc, #308]	; (116c0 <ConsoleProc+0x28c>)
   1158a:	781b      	ldrb	r3, [r3, #0]
   1158c:	2b00      	cmp	r3, #0
   1158e:	d101      	bne.n	11594 <ConsoleProc+0x160>
   11590:	f001 fd3e 	bl	13010 <ConsoleProc+0x1bdc>
   11594:	231f      	movs	r3, #31
   11596:	18fb      	adds	r3, r7, r3
   11598:	781b      	ldrb	r3, [r3, #0]
   1159a:	0018      	movs	r0, r3
   1159c:	4b49      	ldr	r3, [pc, #292]	; (116c4 <ConsoleProc+0x290>)
   1159e:	4798      	blx	r3
}
   115a0:	f001 fd36 	bl	13010 <ConsoleProc+0x1bdc>
				}else if(rxChar == 0x0d){
   115a4:	231f      	movs	r3, #31
   115a6:	18fb      	adds	r3, r7, r3
   115a8:	781b      	ldrb	r3, [r3, #0]
   115aa:	2b0d      	cmp	r3, #13
   115ac:	d10e      	bne.n	115cc <ConsoleProc+0x198>
					rxLenCnt = 0;
   115ae:	4b43      	ldr	r3, [pc, #268]	; (116bc <ConsoleProc+0x288>)
   115b0:	2200      	movs	r2, #0
   115b2:	701a      	strb	r2, [r3, #0]
					if(chkecho)	printf("\n\rOK\n\r");
   115b4:	4b42      	ldr	r3, [pc, #264]	; (116c0 <ConsoleProc+0x28c>)
   115b6:	781b      	ldrb	r3, [r3, #0]
   115b8:	2b00      	cmp	r3, #0
   115ba:	d101      	bne.n	115c0 <ConsoleProc+0x18c>
   115bc:	f001 fd28 	bl	13010 <ConsoleProc+0x1bdc>
   115c0:	4b45      	ldr	r3, [pc, #276]	; (116d8 <ConsoleProc+0x2a4>)
   115c2:	0018      	movs	r0, r3
   115c4:	4b41      	ldr	r3, [pc, #260]	; (116cc <ConsoleProc+0x298>)
   115c6:	4798      	blx	r3
}
   115c8:	f001 fd22 	bl	13010 <ConsoleProc+0x1bdc>
					if(chkecho)	printf("\n\rFAIL\n\r");
   115cc:	4b3c      	ldr	r3, [pc, #240]	; (116c0 <ConsoleProc+0x28c>)
   115ce:	781b      	ldrb	r3, [r3, #0]
   115d0:	2b00      	cmp	r3, #0
   115d2:	d003      	beq.n	115dc <ConsoleProc+0x1a8>
   115d4:	4b3f      	ldr	r3, [pc, #252]	; (116d4 <ConsoleProc+0x2a0>)
   115d6:	0018      	movs	r0, r3
   115d8:	4b3c      	ldr	r3, [pc, #240]	; (116cc <ConsoleProc+0x298>)
   115da:	4798      	blx	r3
					rxLenCnt = 0;
   115dc:	4b37      	ldr	r3, [pc, #220]	; (116bc <ConsoleProc+0x288>)
   115de:	2200      	movs	r2, #0
   115e0:	701a      	strb	r2, [r3, #0]
					for(i=0;i<TX_BUFFER_SIZE;i++)	TxBuffer[i] = 0;
   115e2:	232f      	movs	r3, #47	; 0x2f
   115e4:	18fb      	adds	r3, r7, r3
   115e6:	2200      	movs	r2, #0
   115e8:	701a      	strb	r2, [r3, #0]
   115ea:	e00c      	b.n	11606 <ConsoleProc+0x1d2>
   115ec:	232f      	movs	r3, #47	; 0x2f
   115ee:	18fb      	adds	r3, r7, r3
   115f0:	781b      	ldrb	r3, [r3, #0]
   115f2:	4a37      	ldr	r2, [pc, #220]	; (116d0 <ConsoleProc+0x29c>)
   115f4:	2100      	movs	r1, #0
   115f6:	54d1      	strb	r1, [r2, r3]
   115f8:	232f      	movs	r3, #47	; 0x2f
   115fa:	18fb      	adds	r3, r7, r3
   115fc:	781a      	ldrb	r2, [r3, #0]
   115fe:	232f      	movs	r3, #47	; 0x2f
   11600:	18fb      	adds	r3, r7, r3
   11602:	3201      	adds	r2, #1
   11604:	701a      	strb	r2, [r3, #0]
   11606:	232f      	movs	r3, #47	; 0x2f
   11608:	18fb      	adds	r3, r7, r3
   1160a:	781b      	ldrb	r3, [r3, #0]
   1160c:	2bdb      	cmp	r3, #219	; 0xdb
   1160e:	d9ed      	bls.n	115ec <ConsoleProc+0x1b8>
}
   11610:	f001 fcfe 	bl	13010 <ConsoleProc+0x1bdc>
			}else if(rxLenCnt == 4){	
   11614:	4b29      	ldr	r3, [pc, #164]	; (116bc <ConsoleProc+0x288>)
   11616:	781b      	ldrb	r3, [r3, #0]
   11618:	2b04      	cmp	r3, #4
   1161a:	d001      	beq.n	11620 <ConsoleProc+0x1ec>
   1161c:	f001 fc93 	bl	12f46 <ConsoleProc+0x1b12>
				rxLenCnt = 0;
   11620:	4b26      	ldr	r3, [pc, #152]	; (116bc <ConsoleProc+0x288>)
   11622:	2200      	movs	r2, #0
   11624:	701a      	strb	r2, [r3, #0]
				if(chkecho)	printf("%c\n\r",rxChar);	
   11626:	4b26      	ldr	r3, [pc, #152]	; (116c0 <ConsoleProc+0x28c>)
   11628:	781b      	ldrb	r3, [r3, #0]
   1162a:	2b00      	cmp	r3, #0
   1162c:	d007      	beq.n	1163e <ConsoleProc+0x20a>
   1162e:	231f      	movs	r3, #31
   11630:	18fb      	adds	r3, r7, r3
   11632:	781a      	ldrb	r2, [r3, #0]
   11634:	4b29      	ldr	r3, [pc, #164]	; (116dc <ConsoleProc+0x2a8>)
   11636:	0011      	movs	r1, r2
   11638:	0018      	movs	r0, r3
   1163a:	4b24      	ldr	r3, [pc, #144]	; (116cc <ConsoleProc+0x298>)
   1163c:	4798      	blx	r3
				switch(rxChar){
   1163e:	231f      	movs	r3, #31
   11640:	18fb      	adds	r3, r7, r3
   11642:	781b      	ldrb	r3, [r3, #0]
   11644:	3b30      	subs	r3, #48	; 0x30
   11646:	2b4a      	cmp	r3, #74	; 0x4a
   11648:	d901      	bls.n	1164e <ConsoleProc+0x21a>
   1164a:	f001 fc58 	bl	12efe <ConsoleProc+0x1aca>
   1164e:	009a      	lsls	r2, r3, #2
   11650:	4b23      	ldr	r3, [pc, #140]	; (116e0 <ConsoleProc+0x2ac>)
   11652:	18d3      	adds	r3, r2, r3
   11654:	681b      	ldr	r3, [r3, #0]
   11656:	469f      	mov	pc, r3
						error_counter = -1;
   11658:	4b22      	ldr	r3, [pc, #136]	; (116e4 <ConsoleProc+0x2b0>)
   1165a:	2201      	movs	r2, #1
   1165c:	4252      	negs	r2, r2
   1165e:	601a      	str	r2, [r3, #0]
						if(chkecho){
   11660:	4b17      	ldr	r3, [pc, #92]	; (116c0 <ConsoleProc+0x28c>)
   11662:	781b      	ldrb	r3, [r3, #0]
   11664:	2b00      	cmp	r3, #0
   11666:	d00b      	beq.n	11680 <ConsoleProc+0x24c>
							chkecho = false;
   11668:	4b15      	ldr	r3, [pc, #84]	; (116c0 <ConsoleProc+0x28c>)
   1166a:	2200      	movs	r2, #0
   1166c:	701a      	strb	r2, [r3, #0]
							printf("\n\rEcho OFF\n\r",rxChar);
   1166e:	231f      	movs	r3, #31
   11670:	18fb      	adds	r3, r7, r3
   11672:	781a      	ldrb	r2, [r3, #0]
   11674:	4b1c      	ldr	r3, [pc, #112]	; (116e8 <ConsoleProc+0x2b4>)
   11676:	0011      	movs	r1, r2
   11678:	0018      	movs	r0, r3
   1167a:	4b14      	ldr	r3, [pc, #80]	; (116cc <ConsoleProc+0x298>)
   1167c:	4798      	blx	r3
   1167e:	e00a      	b.n	11696 <ConsoleProc+0x262>
							chkecho = true;
   11680:	4b0f      	ldr	r3, [pc, #60]	; (116c0 <ConsoleProc+0x28c>)
   11682:	2201      	movs	r2, #1
   11684:	701a      	strb	r2, [r3, #0]
							printf("\n\rEcho ON\n\r",rxChar);
   11686:	231f      	movs	r3, #31
   11688:	18fb      	adds	r3, r7, r3
   1168a:	781a      	ldrb	r2, [r3, #0]
   1168c:	4b17      	ldr	r3, [pc, #92]	; (116ec <ConsoleProc+0x2b8>)
   1168e:	0011      	movs	r1, r2
   11690:	0018      	movs	r0, r3
   11692:	4b0e      	ldr	r3, [pc, #56]	; (116cc <ConsoleProc+0x298>)
   11694:	4798      	blx	r3
						networkInfo.echo_chk = chkecho;
   11696:	4b0a      	ldr	r3, [pc, #40]	; (116c0 <ConsoleProc+0x28c>)
   11698:	781b      	ldrb	r3, [r3, #0]
   1169a:	0019      	movs	r1, r3
   1169c:	4b14      	ldr	r3, [pc, #80]	; (116f0 <ConsoleProc+0x2bc>)
   1169e:	2226      	movs	r2, #38	; 0x26
   116a0:	5499      	strb	r1, [r3, r2]
						NVM_Write_NetInfo(&networkInfo);
   116a2:	4b13      	ldr	r3, [pc, #76]	; (116f0 <ConsoleProc+0x2bc>)
   116a4:	0018      	movs	r0, r3
   116a6:	4b13      	ldr	r3, [pc, #76]	; (116f4 <ConsoleProc+0x2c0>)
   116a8:	4798      	blx	r3
						break;
   116aa:	f001 fcb1 	bl	13010 <ConsoleProc+0x1bdc>
   116ae:	46c0      	nop			; (mov r8, r8)
   116b0:	00010991 	.word	0x00010991
   116b4:	2000114c 	.word	0x2000114c
   116b8:	00006a79 	.word	0x00006a79
   116bc:	20001af8 	.word	0x20001af8
   116c0:	2000002c 	.word	0x2000002c
   116c4:	00017851 	.word	0x00017851
   116c8:	0001d378 	.word	0x0001d378
   116cc:	0001782d 	.word	0x0001782d
   116d0:	200012e4 	.word	0x200012e4
   116d4:	0001d380 	.word	0x0001d380
   116d8:	0001d38c 	.word	0x0001d38c
   116dc:	0001d394 	.word	0x0001d394
   116e0:	0001dd44 	.word	0x0001dd44
   116e4:	20000028 	.word	0x20000028
   116e8:	0001d39c 	.word	0x0001d39c
   116ec:	0001d3ac 	.word	0x0001d3ac
   116f0:	2000151c 	.word	0x2000151c
   116f4:	0000e8a1 	.word	0x0000e8a1
						NVM_Read_NetInfo(&networkInfo);
   116f8:	4ba5      	ldr	r3, [pc, #660]	; (11990 <ConsoleProc+0x55c>)
   116fa:	0018      	movs	r0, r3
   116fc:	4ba5      	ldr	r3, [pc, #660]	; (11994 <ConsoleProc+0x560>)
   116fe:	4798      	blx	r3
						if(chkecho) printf("\n\r read_STXL = %c",networkInfo.STXL);
   11700:	4ba5      	ldr	r3, [pc, #660]	; (11998 <ConsoleProc+0x564>)
   11702:	781b      	ldrb	r3, [r3, #0]
   11704:	2b00      	cmp	r3, #0
   11706:	d007      	beq.n	11718 <ConsoleProc+0x2e4>
   11708:	4ba1      	ldr	r3, [pc, #644]	; (11990 <ConsoleProc+0x55c>)
   1170a:	7e9b      	ldrb	r3, [r3, #26]
   1170c:	001a      	movs	r2, r3
   1170e:	4ba3      	ldr	r3, [pc, #652]	; (1199c <ConsoleProc+0x568>)
   11710:	0011      	movs	r1, r2
   11712:	0018      	movs	r0, r3
   11714:	4ba2      	ldr	r3, [pc, #648]	; (119a0 <ConsoleProc+0x56c>)
   11716:	4798      	blx	r3
						if(chkecho) printf("\n\r read_STX1 = %c",networkInfo.STX1);
   11718:	4b9f      	ldr	r3, [pc, #636]	; (11998 <ConsoleProc+0x564>)
   1171a:	781b      	ldrb	r3, [r3, #0]
   1171c:	2b00      	cmp	r3, #0
   1171e:	d007      	beq.n	11730 <ConsoleProc+0x2fc>
   11720:	4b9b      	ldr	r3, [pc, #620]	; (11990 <ConsoleProc+0x55c>)
   11722:	7edb      	ldrb	r3, [r3, #27]
   11724:	001a      	movs	r2, r3
   11726:	4b9f      	ldr	r3, [pc, #636]	; (119a4 <ConsoleProc+0x570>)
   11728:	0011      	movs	r1, r2
   1172a:	0018      	movs	r0, r3
   1172c:	4b9c      	ldr	r3, [pc, #624]	; (119a0 <ConsoleProc+0x56c>)
   1172e:	4798      	blx	r3
						if(chkecho) printf("\n\r read_STX2 = %c",networkInfo.STX2);
   11730:	4b99      	ldr	r3, [pc, #612]	; (11998 <ConsoleProc+0x564>)
   11732:	781b      	ldrb	r3, [r3, #0]
   11734:	2b00      	cmp	r3, #0
   11736:	d007      	beq.n	11748 <ConsoleProc+0x314>
   11738:	4b95      	ldr	r3, [pc, #596]	; (11990 <ConsoleProc+0x55c>)
   1173a:	7f1b      	ldrb	r3, [r3, #28]
   1173c:	001a      	movs	r2, r3
   1173e:	4b9a      	ldr	r3, [pc, #616]	; (119a8 <ConsoleProc+0x574>)
   11740:	0011      	movs	r1, r2
   11742:	0018      	movs	r0, r3
   11744:	4b96      	ldr	r3, [pc, #600]	; (119a0 <ConsoleProc+0x56c>)
   11746:	4798      	blx	r3
						if(chkecho) printf("\n\r read_STX3 = %c",networkInfo.STX3);
   11748:	4b93      	ldr	r3, [pc, #588]	; (11998 <ConsoleProc+0x564>)
   1174a:	781b      	ldrb	r3, [r3, #0]
   1174c:	2b00      	cmp	r3, #0
   1174e:	d007      	beq.n	11760 <ConsoleProc+0x32c>
   11750:	4b8f      	ldr	r3, [pc, #572]	; (11990 <ConsoleProc+0x55c>)
   11752:	7f5b      	ldrb	r3, [r3, #29]
   11754:	001a      	movs	r2, r3
   11756:	4b95      	ldr	r3, [pc, #596]	; (119ac <ConsoleProc+0x578>)
   11758:	0011      	movs	r1, r2
   1175a:	0018      	movs	r0, r3
   1175c:	4b90      	ldr	r3, [pc, #576]	; (119a0 <ConsoleProc+0x56c>)
   1175e:	4798      	blx	r3
						if(chkecho) printf("\n\r read_ETXL = %c",networkInfo.ETXL);
   11760:	4b8d      	ldr	r3, [pc, #564]	; (11998 <ConsoleProc+0x564>)
   11762:	781b      	ldrb	r3, [r3, #0]
   11764:	2b00      	cmp	r3, #0
   11766:	d007      	beq.n	11778 <ConsoleProc+0x344>
   11768:	4b89      	ldr	r3, [pc, #548]	; (11990 <ConsoleProc+0x55c>)
   1176a:	7fdb      	ldrb	r3, [r3, #31]
   1176c:	001a      	movs	r2, r3
   1176e:	4b90      	ldr	r3, [pc, #576]	; (119b0 <ConsoleProc+0x57c>)
   11770:	0011      	movs	r1, r2
   11772:	0018      	movs	r0, r3
   11774:	4b8a      	ldr	r3, [pc, #552]	; (119a0 <ConsoleProc+0x56c>)
   11776:	4798      	blx	r3
						if(chkecho) printf("\n\r read_ETX1 = %c",networkInfo.ETX1);
   11778:	4b87      	ldr	r3, [pc, #540]	; (11998 <ConsoleProc+0x564>)
   1177a:	781b      	ldrb	r3, [r3, #0]
   1177c:	2b00      	cmp	r3, #0
   1177e:	d008      	beq.n	11792 <ConsoleProc+0x35e>
   11780:	4b83      	ldr	r3, [pc, #524]	; (11990 <ConsoleProc+0x55c>)
   11782:	2220      	movs	r2, #32
   11784:	5c9b      	ldrb	r3, [r3, r2]
   11786:	001a      	movs	r2, r3
   11788:	4b8a      	ldr	r3, [pc, #552]	; (119b4 <ConsoleProc+0x580>)
   1178a:	0011      	movs	r1, r2
   1178c:	0018      	movs	r0, r3
   1178e:	4b84      	ldr	r3, [pc, #528]	; (119a0 <ConsoleProc+0x56c>)
   11790:	4798      	blx	r3
						if(chkecho) printf("\n\r read_ETX2 = %c",networkInfo.ETX2);
   11792:	4b81      	ldr	r3, [pc, #516]	; (11998 <ConsoleProc+0x564>)
   11794:	781b      	ldrb	r3, [r3, #0]
   11796:	2b00      	cmp	r3, #0
   11798:	d008      	beq.n	117ac <ConsoleProc+0x378>
   1179a:	4b7d      	ldr	r3, [pc, #500]	; (11990 <ConsoleProc+0x55c>)
   1179c:	2221      	movs	r2, #33	; 0x21
   1179e:	5c9b      	ldrb	r3, [r3, r2]
   117a0:	001a      	movs	r2, r3
   117a2:	4b85      	ldr	r3, [pc, #532]	; (119b8 <ConsoleProc+0x584>)
   117a4:	0011      	movs	r1, r2
   117a6:	0018      	movs	r0, r3
   117a8:	4b7d      	ldr	r3, [pc, #500]	; (119a0 <ConsoleProc+0x56c>)
   117aa:	4798      	blx	r3
						if(chkecho) printf("\n\r read_ETX3 = %c\n\r",networkInfo.ETX3);
   117ac:	4b7a      	ldr	r3, [pc, #488]	; (11998 <ConsoleProc+0x564>)
   117ae:	781b      	ldrb	r3, [r3, #0]
   117b0:	2b00      	cmp	r3, #0
   117b2:	d008      	beq.n	117c6 <ConsoleProc+0x392>
   117b4:	4b76      	ldr	r3, [pc, #472]	; (11990 <ConsoleProc+0x55c>)
   117b6:	2222      	movs	r2, #34	; 0x22
   117b8:	5c9b      	ldrb	r3, [r3, r2]
   117ba:	001a      	movs	r2, r3
   117bc:	4b7f      	ldr	r3, [pc, #508]	; (119bc <ConsoleProc+0x588>)
   117be:	0011      	movs	r1, r2
   117c0:	0018      	movs	r0, r3
   117c2:	4b77      	ldr	r3, [pc, #476]	; (119a0 <ConsoleProc+0x56c>)
   117c4:	4798      	blx	r3
						if(chkecho) printf("\r\nInput Start Length of Text(0 ~ 3) : ");
   117c6:	4b74      	ldr	r3, [pc, #464]	; (11998 <ConsoleProc+0x564>)
   117c8:	781b      	ldrb	r3, [r3, #0]
   117ca:	2b00      	cmp	r3, #0
   117cc:	d003      	beq.n	117d6 <ConsoleProc+0x3a2>
   117ce:	4b7c      	ldr	r3, [pc, #496]	; (119c0 <ConsoleProc+0x58c>)
   117d0:	0018      	movs	r0, r3
   117d2:	4b73      	ldr	r3, [pc, #460]	; (119a0 <ConsoleProc+0x56c>)
   117d4:	4798      	blx	r3
						rxChar = sio2host_getchar();
   117d6:	231f      	movs	r3, #31
   117d8:	18fc      	adds	r4, r7, r3
   117da:	4b7a      	ldr	r3, [pc, #488]	; (119c4 <ConsoleProc+0x590>)
   117dc:	4798      	blx	r3
   117de:	0003      	movs	r3, r0
   117e0:	7023      	strb	r3, [r4, #0]
						if(chkecho) printf("%c", rxChar);
   117e2:	4b6d      	ldr	r3, [pc, #436]	; (11998 <ConsoleProc+0x564>)
   117e4:	781b      	ldrb	r3, [r3, #0]
   117e6:	2b00      	cmp	r3, #0
   117e8:	d005      	beq.n	117f6 <ConsoleProc+0x3c2>
   117ea:	231f      	movs	r3, #31
   117ec:	18fb      	adds	r3, r7, r3
   117ee:	781b      	ldrb	r3, [r3, #0]
   117f0:	0018      	movs	r0, r3
   117f2:	4b75      	ldr	r3, [pc, #468]	; (119c8 <ConsoleProc+0x594>)
   117f4:	4798      	blx	r3
						if((rxChar >= 0x30) && (rxChar <= 0x33)){
   117f6:	231f      	movs	r3, #31
   117f8:	18fb      	adds	r3, r7, r3
   117fa:	781b      	ldrb	r3, [r3, #0]
   117fc:	2b2f      	cmp	r3, #47	; 0x2f
   117fe:	d927      	bls.n	11850 <ConsoleProc+0x41c>
   11800:	231f      	movs	r3, #31
   11802:	18fb      	adds	r3, r7, r3
   11804:	781b      	ldrb	r3, [r3, #0]
   11806:	2b33      	cmp	r3, #51	; 0x33
   11808:	d822      	bhi.n	11850 <ConsoleProc+0x41c>
							if(chkecho) printf("\n\rSuccess!, Start Length = %c\n\r",rxChar);
   1180a:	4b63      	ldr	r3, [pc, #396]	; (11998 <ConsoleProc+0x564>)
   1180c:	781b      	ldrb	r3, [r3, #0]
   1180e:	2b00      	cmp	r3, #0
   11810:	d007      	beq.n	11822 <ConsoleProc+0x3ee>
   11812:	231f      	movs	r3, #31
   11814:	18fb      	adds	r3, r7, r3
   11816:	781a      	ldrb	r2, [r3, #0]
   11818:	4b6c      	ldr	r3, [pc, #432]	; (119cc <ConsoleProc+0x598>)
   1181a:	0011      	movs	r1, r2
   1181c:	0018      	movs	r0, r3
   1181e:	4b60      	ldr	r3, [pc, #384]	; (119a0 <ConsoleProc+0x56c>)
   11820:	4798      	blx	r3
							networkInfo.STXL = rxChar;
   11822:	4b5b      	ldr	r3, [pc, #364]	; (11990 <ConsoleProc+0x55c>)
   11824:	221f      	movs	r2, #31
   11826:	18ba      	adds	r2, r7, r2
   11828:	7812      	ldrb	r2, [r2, #0]
   1182a:	769a      	strb	r2, [r3, #26]
							networkInfo.Text_Status = 1;
   1182c:	4b58      	ldr	r3, [pc, #352]	; (11990 <ConsoleProc+0x55c>)
   1182e:	2223      	movs	r2, #35	; 0x23
   11830:	2101      	movs	r1, #1
   11832:	5499      	strb	r1, [r3, r2]
						switch(networkInfo.STXL){
   11834:	4b56      	ldr	r3, [pc, #344]	; (11990 <ConsoleProc+0x55c>)
   11836:	7e9b      	ldrb	r3, [r3, #26]
   11838:	2b31      	cmp	r3, #49	; 0x31
   1183a:	d041      	beq.n	118c0 <ConsoleProc+0x48c>
   1183c:	dc02      	bgt.n	11844 <ConsoleProc+0x410>
   1183e:	2b30      	cmp	r3, #48	; 0x30
   11840:	d01c      	beq.n	1187c <ConsoleProc+0x448>
							default:	break;
   11842:	e12d      	b.n	11aa0 <ConsoleProc+0x66c>
						switch(networkInfo.STXL){
   11844:	2b32      	cmp	r3, #50	; 0x32
   11846:	d061      	beq.n	1190c <ConsoleProc+0x4d8>
   11848:	2b33      	cmp	r3, #51	; 0x33
   1184a:	d100      	bne.n	1184e <ConsoleProc+0x41a>
   1184c:	e0ca      	b.n	119e4 <ConsoleProc+0x5b0>
							default:	break;
   1184e:	e127      	b.n	11aa0 <ConsoleProc+0x66c>
							if(chkecho) printf("\n\rFail\n\r");
   11850:	4b51      	ldr	r3, [pc, #324]	; (11998 <ConsoleProc+0x564>)
   11852:	781b      	ldrb	r3, [r3, #0]
   11854:	2b00      	cmp	r3, #0
   11856:	d003      	beq.n	11860 <ConsoleProc+0x42c>
   11858:	4b5d      	ldr	r3, [pc, #372]	; (119d0 <ConsoleProc+0x59c>)
   1185a:	0018      	movs	r0, r3
   1185c:	4b50      	ldr	r3, [pc, #320]	; (119a0 <ConsoleProc+0x56c>)
   1185e:	4798      	blx	r3
							if(chkecho) printf("\n\rDo Not Setting Text!\n\r");
   11860:	4b4d      	ldr	r3, [pc, #308]	; (11998 <ConsoleProc+0x564>)
   11862:	781b      	ldrb	r3, [r3, #0]
   11864:	2b00      	cmp	r3, #0
   11866:	d003      	beq.n	11870 <ConsoleProc+0x43c>
   11868:	4b5a      	ldr	r3, [pc, #360]	; (119d4 <ConsoleProc+0x5a0>)
   1186a:	0018      	movs	r0, r3
   1186c:	4b4c      	ldr	r3, [pc, #304]	; (119a0 <ConsoleProc+0x56c>)
   1186e:	4798      	blx	r3
							networkInfo.Text_Status = 0;
   11870:	4b47      	ldr	r3, [pc, #284]	; (11990 <ConsoleProc+0x55c>)
   11872:	2223      	movs	r2, #35	; 0x23
   11874:	2100      	movs	r1, #0
   11876:	5499      	strb	r1, [r3, r2]
							break;
   11878:	f001 fbca 	bl	13010 <ConsoleProc+0x1bdc>
								networkInfo.STX1 = 0xff;
   1187c:	4b44      	ldr	r3, [pc, #272]	; (11990 <ConsoleProc+0x55c>)
   1187e:	22ff      	movs	r2, #255	; 0xff
   11880:	76da      	strb	r2, [r3, #27]
								networkInfo.STX2 = 0xff;
   11882:	4b43      	ldr	r3, [pc, #268]	; (11990 <ConsoleProc+0x55c>)
   11884:	22ff      	movs	r2, #255	; 0xff
   11886:	771a      	strb	r2, [r3, #28]
								networkInfo.STX3 = 0xff;
   11888:	4b41      	ldr	r3, [pc, #260]	; (11990 <ConsoleProc+0x55c>)
   1188a:	22ff      	movs	r2, #255	; 0xff
   1188c:	775a      	strb	r2, [r3, #29]
								networkInfo.ETX1 = 0xff;
   1188e:	4b40      	ldr	r3, [pc, #256]	; (11990 <ConsoleProc+0x55c>)
   11890:	2220      	movs	r2, #32
   11892:	21ff      	movs	r1, #255	; 0xff
   11894:	5499      	strb	r1, [r3, r2]
								networkInfo.ETX2 = 0xff;
   11896:	4b3e      	ldr	r3, [pc, #248]	; (11990 <ConsoleProc+0x55c>)
   11898:	2221      	movs	r2, #33	; 0x21
   1189a:	21ff      	movs	r1, #255	; 0xff
   1189c:	5499      	strb	r1, [r3, r2]
								networkInfo.ETX3 = 0xff;
   1189e:	4b3c      	ldr	r3, [pc, #240]	; (11990 <ConsoleProc+0x55c>)
   118a0:	2222      	movs	r2, #34	; 0x22
   118a2:	21ff      	movs	r1, #255	; 0xff
   118a4:	5499      	strb	r1, [r3, r2]
								if(chkecho) printf("\n\rDo Not Setting Text!\n\r");
   118a6:	4b3c      	ldr	r3, [pc, #240]	; (11998 <ConsoleProc+0x564>)
   118a8:	781b      	ldrb	r3, [r3, #0]
   118aa:	2b00      	cmp	r3, #0
   118ac:	d003      	beq.n	118b6 <ConsoleProc+0x482>
   118ae:	4b49      	ldr	r3, [pc, #292]	; (119d4 <ConsoleProc+0x5a0>)
   118b0:	0018      	movs	r0, r3
   118b2:	4b3b      	ldr	r3, [pc, #236]	; (119a0 <ConsoleProc+0x56c>)
   118b4:	4798      	blx	r3
								networkInfo.Text_Status = 0;
   118b6:	4b36      	ldr	r3, [pc, #216]	; (11990 <ConsoleProc+0x55c>)
   118b8:	2223      	movs	r2, #35	; 0x23
   118ba:	2100      	movs	r1, #0
   118bc:	5499      	strb	r1, [r3, r2]
								break;
   118be:	e0ef      	b.n	11aa0 <ConsoleProc+0x66c>
								if(chkecho) printf("\r\nInput First Start of Text : ");
   118c0:	4b35      	ldr	r3, [pc, #212]	; (11998 <ConsoleProc+0x564>)
   118c2:	781b      	ldrb	r3, [r3, #0]
   118c4:	2b00      	cmp	r3, #0
   118c6:	d003      	beq.n	118d0 <ConsoleProc+0x49c>
   118c8:	4b43      	ldr	r3, [pc, #268]	; (119d8 <ConsoleProc+0x5a4>)
   118ca:	0018      	movs	r0, r3
   118cc:	4b34      	ldr	r3, [pc, #208]	; (119a0 <ConsoleProc+0x56c>)
   118ce:	4798      	blx	r3
								rxChar = sio2host_getchar();
   118d0:	231f      	movs	r3, #31
   118d2:	18fc      	adds	r4, r7, r3
   118d4:	4b3b      	ldr	r3, [pc, #236]	; (119c4 <ConsoleProc+0x590>)
   118d6:	4798      	blx	r3
   118d8:	0003      	movs	r3, r0
   118da:	7023      	strb	r3, [r4, #0]
								if(chkecho) printf(" %c\n\rSuccess!\n\r",rxChar);
   118dc:	4b2e      	ldr	r3, [pc, #184]	; (11998 <ConsoleProc+0x564>)
   118de:	781b      	ldrb	r3, [r3, #0]
   118e0:	2b00      	cmp	r3, #0
   118e2:	d007      	beq.n	118f4 <ConsoleProc+0x4c0>
   118e4:	231f      	movs	r3, #31
   118e6:	18fb      	adds	r3, r7, r3
   118e8:	781a      	ldrb	r2, [r3, #0]
   118ea:	4b3c      	ldr	r3, [pc, #240]	; (119dc <ConsoleProc+0x5a8>)
   118ec:	0011      	movs	r1, r2
   118ee:	0018      	movs	r0, r3
   118f0:	4b2b      	ldr	r3, [pc, #172]	; (119a0 <ConsoleProc+0x56c>)
   118f2:	4798      	blx	r3
								networkInfo.STX1 = rxChar;
   118f4:	4b26      	ldr	r3, [pc, #152]	; (11990 <ConsoleProc+0x55c>)
   118f6:	221f      	movs	r2, #31
   118f8:	18ba      	adds	r2, r7, r2
   118fa:	7812      	ldrb	r2, [r2, #0]
   118fc:	76da      	strb	r2, [r3, #27]
								networkInfo.STX2 = 0xff;
   118fe:	4b24      	ldr	r3, [pc, #144]	; (11990 <ConsoleProc+0x55c>)
   11900:	22ff      	movs	r2, #255	; 0xff
   11902:	771a      	strb	r2, [r3, #28]
								networkInfo.STX3 = 0xff;
   11904:	4b22      	ldr	r3, [pc, #136]	; (11990 <ConsoleProc+0x55c>)
   11906:	22ff      	movs	r2, #255	; 0xff
   11908:	775a      	strb	r2, [r3, #29]
								break;
   1190a:	e0c9      	b.n	11aa0 <ConsoleProc+0x66c>
								if(chkecho) printf("\r\nInput First Start of Text : ");
   1190c:	4b22      	ldr	r3, [pc, #136]	; (11998 <ConsoleProc+0x564>)
   1190e:	781b      	ldrb	r3, [r3, #0]
   11910:	2b00      	cmp	r3, #0
   11912:	d003      	beq.n	1191c <ConsoleProc+0x4e8>
   11914:	4b30      	ldr	r3, [pc, #192]	; (119d8 <ConsoleProc+0x5a4>)
   11916:	0018      	movs	r0, r3
   11918:	4b21      	ldr	r3, [pc, #132]	; (119a0 <ConsoleProc+0x56c>)
   1191a:	4798      	blx	r3
								rxChar = sio2host_getchar();
   1191c:	231f      	movs	r3, #31
   1191e:	18fc      	adds	r4, r7, r3
   11920:	4b28      	ldr	r3, [pc, #160]	; (119c4 <ConsoleProc+0x590>)
   11922:	4798      	blx	r3
   11924:	0003      	movs	r3, r0
   11926:	7023      	strb	r3, [r4, #0]
								if(chkecho) printf(" %c\n\rSuccess!\n\r",rxChar);
   11928:	4b1b      	ldr	r3, [pc, #108]	; (11998 <ConsoleProc+0x564>)
   1192a:	781b      	ldrb	r3, [r3, #0]
   1192c:	2b00      	cmp	r3, #0
   1192e:	d007      	beq.n	11940 <ConsoleProc+0x50c>
   11930:	231f      	movs	r3, #31
   11932:	18fb      	adds	r3, r7, r3
   11934:	781a      	ldrb	r2, [r3, #0]
   11936:	4b29      	ldr	r3, [pc, #164]	; (119dc <ConsoleProc+0x5a8>)
   11938:	0011      	movs	r1, r2
   1193a:	0018      	movs	r0, r3
   1193c:	4b18      	ldr	r3, [pc, #96]	; (119a0 <ConsoleProc+0x56c>)
   1193e:	4798      	blx	r3
								networkInfo.STX1 = rxChar;
   11940:	4b13      	ldr	r3, [pc, #76]	; (11990 <ConsoleProc+0x55c>)
   11942:	221f      	movs	r2, #31
   11944:	18ba      	adds	r2, r7, r2
   11946:	7812      	ldrb	r2, [r2, #0]
   11948:	76da      	strb	r2, [r3, #27]
								if(chkecho) printf("\r\nInput Second Start of Text : ");
   1194a:	4b13      	ldr	r3, [pc, #76]	; (11998 <ConsoleProc+0x564>)
   1194c:	781b      	ldrb	r3, [r3, #0]
   1194e:	2b00      	cmp	r3, #0
   11950:	d003      	beq.n	1195a <ConsoleProc+0x526>
   11952:	4b23      	ldr	r3, [pc, #140]	; (119e0 <ConsoleProc+0x5ac>)
   11954:	0018      	movs	r0, r3
   11956:	4b12      	ldr	r3, [pc, #72]	; (119a0 <ConsoleProc+0x56c>)
   11958:	4798      	blx	r3
								rxChar = sio2host_getchar();
   1195a:	231f      	movs	r3, #31
   1195c:	18fc      	adds	r4, r7, r3
   1195e:	4b19      	ldr	r3, [pc, #100]	; (119c4 <ConsoleProc+0x590>)
   11960:	4798      	blx	r3
   11962:	0003      	movs	r3, r0
   11964:	7023      	strb	r3, [r4, #0]
								if(chkecho) printf(" %c\n\rSuccess!\n\r",rxChar);
   11966:	4b0c      	ldr	r3, [pc, #48]	; (11998 <ConsoleProc+0x564>)
   11968:	781b      	ldrb	r3, [r3, #0]
   1196a:	2b00      	cmp	r3, #0
   1196c:	d007      	beq.n	1197e <ConsoleProc+0x54a>
   1196e:	231f      	movs	r3, #31
   11970:	18fb      	adds	r3, r7, r3
   11972:	781a      	ldrb	r2, [r3, #0]
   11974:	4b19      	ldr	r3, [pc, #100]	; (119dc <ConsoleProc+0x5a8>)
   11976:	0011      	movs	r1, r2
   11978:	0018      	movs	r0, r3
   1197a:	4b09      	ldr	r3, [pc, #36]	; (119a0 <ConsoleProc+0x56c>)
   1197c:	4798      	blx	r3
								networkInfo.STX2 = rxChar;
   1197e:	4b04      	ldr	r3, [pc, #16]	; (11990 <ConsoleProc+0x55c>)
   11980:	221f      	movs	r2, #31
   11982:	18ba      	adds	r2, r7, r2
   11984:	7812      	ldrb	r2, [r2, #0]
   11986:	771a      	strb	r2, [r3, #28]
								networkInfo.STX3 = 0xff;
   11988:	4b01      	ldr	r3, [pc, #4]	; (11990 <ConsoleProc+0x55c>)
   1198a:	22ff      	movs	r2, #255	; 0xff
   1198c:	775a      	strb	r2, [r3, #29]
								break;
   1198e:	e087      	b.n	11aa0 <ConsoleProc+0x66c>
   11990:	2000151c 	.word	0x2000151c
   11994:	0000e979 	.word	0x0000e979
   11998:	2000002c 	.word	0x2000002c
   1199c:	0001d3b8 	.word	0x0001d3b8
   119a0:	0001782d 	.word	0x0001782d
   119a4:	0001d3cc 	.word	0x0001d3cc
   119a8:	0001d3e0 	.word	0x0001d3e0
   119ac:	0001d3f4 	.word	0x0001d3f4
   119b0:	0001d408 	.word	0x0001d408
   119b4:	0001d41c 	.word	0x0001d41c
   119b8:	0001d430 	.word	0x0001d430
   119bc:	0001d444 	.word	0x0001d444
   119c0:	0001d458 	.word	0x0001d458
   119c4:	00006a51 	.word	0x00006a51
   119c8:	00017851 	.word	0x00017851
   119cc:	0001d480 	.word	0x0001d480
   119d0:	0001d4a0 	.word	0x0001d4a0
   119d4:	0001d4ac 	.word	0x0001d4ac
   119d8:	0001d4c8 	.word	0x0001d4c8
   119dc:	0001d4e8 	.word	0x0001d4e8
   119e0:	0001d4f8 	.word	0x0001d4f8
								if(chkecho) printf("\r\nInput First Start of Text : ");
   119e4:	4bd3      	ldr	r3, [pc, #844]	; (11d34 <ConsoleProc+0x900>)
   119e6:	781b      	ldrb	r3, [r3, #0]
   119e8:	2b00      	cmp	r3, #0
   119ea:	d003      	beq.n	119f4 <ConsoleProc+0x5c0>
   119ec:	4bd2      	ldr	r3, [pc, #840]	; (11d38 <ConsoleProc+0x904>)
   119ee:	0018      	movs	r0, r3
   119f0:	4bd2      	ldr	r3, [pc, #840]	; (11d3c <ConsoleProc+0x908>)
   119f2:	4798      	blx	r3
								rxChar = sio2host_getchar();
   119f4:	231f      	movs	r3, #31
   119f6:	18fc      	adds	r4, r7, r3
   119f8:	4bd1      	ldr	r3, [pc, #836]	; (11d40 <ConsoleProc+0x90c>)
   119fa:	4798      	blx	r3
   119fc:	0003      	movs	r3, r0
   119fe:	7023      	strb	r3, [r4, #0]
								if(chkecho) printf(" %c\n\rSuccess!\n\r",rxChar);
   11a00:	4bcc      	ldr	r3, [pc, #816]	; (11d34 <ConsoleProc+0x900>)
   11a02:	781b      	ldrb	r3, [r3, #0]
   11a04:	2b00      	cmp	r3, #0
   11a06:	d007      	beq.n	11a18 <ConsoleProc+0x5e4>
   11a08:	231f      	movs	r3, #31
   11a0a:	18fb      	adds	r3, r7, r3
   11a0c:	781a      	ldrb	r2, [r3, #0]
   11a0e:	4bcd      	ldr	r3, [pc, #820]	; (11d44 <ConsoleProc+0x910>)
   11a10:	0011      	movs	r1, r2
   11a12:	0018      	movs	r0, r3
   11a14:	4bc9      	ldr	r3, [pc, #804]	; (11d3c <ConsoleProc+0x908>)
   11a16:	4798      	blx	r3
								networkInfo.STX1 = rxChar;
   11a18:	4bcb      	ldr	r3, [pc, #812]	; (11d48 <ConsoleProc+0x914>)
   11a1a:	221f      	movs	r2, #31
   11a1c:	18ba      	adds	r2, r7, r2
   11a1e:	7812      	ldrb	r2, [r2, #0]
   11a20:	76da      	strb	r2, [r3, #27]
								if(chkecho) printf("\r\nInput Second Start of Text : ");
   11a22:	4bc4      	ldr	r3, [pc, #784]	; (11d34 <ConsoleProc+0x900>)
   11a24:	781b      	ldrb	r3, [r3, #0]
   11a26:	2b00      	cmp	r3, #0
   11a28:	d003      	beq.n	11a32 <ConsoleProc+0x5fe>
   11a2a:	4bc8      	ldr	r3, [pc, #800]	; (11d4c <ConsoleProc+0x918>)
   11a2c:	0018      	movs	r0, r3
   11a2e:	4bc3      	ldr	r3, [pc, #780]	; (11d3c <ConsoleProc+0x908>)
   11a30:	4798      	blx	r3
								rxChar = sio2host_getchar();
   11a32:	231f      	movs	r3, #31
   11a34:	18fc      	adds	r4, r7, r3
   11a36:	4bc2      	ldr	r3, [pc, #776]	; (11d40 <ConsoleProc+0x90c>)
   11a38:	4798      	blx	r3
   11a3a:	0003      	movs	r3, r0
   11a3c:	7023      	strb	r3, [r4, #0]
								if(chkecho) printf(" %c\n\rSuccess!\n\r",rxChar);
   11a3e:	4bbd      	ldr	r3, [pc, #756]	; (11d34 <ConsoleProc+0x900>)
   11a40:	781b      	ldrb	r3, [r3, #0]
   11a42:	2b00      	cmp	r3, #0
   11a44:	d007      	beq.n	11a56 <ConsoleProc+0x622>
   11a46:	231f      	movs	r3, #31
   11a48:	18fb      	adds	r3, r7, r3
   11a4a:	781a      	ldrb	r2, [r3, #0]
   11a4c:	4bbd      	ldr	r3, [pc, #756]	; (11d44 <ConsoleProc+0x910>)
   11a4e:	0011      	movs	r1, r2
   11a50:	0018      	movs	r0, r3
   11a52:	4bba      	ldr	r3, [pc, #744]	; (11d3c <ConsoleProc+0x908>)
   11a54:	4798      	blx	r3
								networkInfo.STX2 = rxChar;
   11a56:	4bbc      	ldr	r3, [pc, #752]	; (11d48 <ConsoleProc+0x914>)
   11a58:	221f      	movs	r2, #31
   11a5a:	18ba      	adds	r2, r7, r2
   11a5c:	7812      	ldrb	r2, [r2, #0]
   11a5e:	771a      	strb	r2, [r3, #28]
								if(chkecho) printf("\r\nInput Third Start of Text : ");
   11a60:	4bb4      	ldr	r3, [pc, #720]	; (11d34 <ConsoleProc+0x900>)
   11a62:	781b      	ldrb	r3, [r3, #0]
   11a64:	2b00      	cmp	r3, #0
   11a66:	d003      	beq.n	11a70 <ConsoleProc+0x63c>
   11a68:	4bb9      	ldr	r3, [pc, #740]	; (11d50 <ConsoleProc+0x91c>)
   11a6a:	0018      	movs	r0, r3
   11a6c:	4bb3      	ldr	r3, [pc, #716]	; (11d3c <ConsoleProc+0x908>)
   11a6e:	4798      	blx	r3
								rxChar = sio2host_getchar();
   11a70:	231f      	movs	r3, #31
   11a72:	18fc      	adds	r4, r7, r3
   11a74:	4bb2      	ldr	r3, [pc, #712]	; (11d40 <ConsoleProc+0x90c>)
   11a76:	4798      	blx	r3
   11a78:	0003      	movs	r3, r0
   11a7a:	7023      	strb	r3, [r4, #0]
								if(chkecho) printf(" %c\n\rSuccess!\n\r",rxChar);
   11a7c:	4bad      	ldr	r3, [pc, #692]	; (11d34 <ConsoleProc+0x900>)
   11a7e:	781b      	ldrb	r3, [r3, #0]
   11a80:	2b00      	cmp	r3, #0
   11a82:	d007      	beq.n	11a94 <ConsoleProc+0x660>
   11a84:	231f      	movs	r3, #31
   11a86:	18fb      	adds	r3, r7, r3
   11a88:	781a      	ldrb	r2, [r3, #0]
   11a8a:	4bae      	ldr	r3, [pc, #696]	; (11d44 <ConsoleProc+0x910>)
   11a8c:	0011      	movs	r1, r2
   11a8e:	0018      	movs	r0, r3
   11a90:	4baa      	ldr	r3, [pc, #680]	; (11d3c <ConsoleProc+0x908>)
   11a92:	4798      	blx	r3
								networkInfo.STX3 = rxChar;
   11a94:	4bac      	ldr	r3, [pc, #688]	; (11d48 <ConsoleProc+0x914>)
   11a96:	221f      	movs	r2, #31
   11a98:	18ba      	adds	r2, r7, r2
   11a9a:	7812      	ldrb	r2, [r2, #0]
   11a9c:	775a      	strb	r2, [r3, #29]
								break;
   11a9e:	46c0      	nop			; (mov r8, r8)
						if(networkInfo.Text_Status){
   11aa0:	4ba9      	ldr	r3, [pc, #676]	; (11d48 <ConsoleProc+0x914>)
   11aa2:	2223      	movs	r2, #35	; 0x23
   11aa4:	5c9b      	ldrb	r3, [r3, r2]
   11aa6:	2b00      	cmp	r3, #0
   11aa8:	d100      	bne.n	11aac <ConsoleProc+0x678>
   11aaa:	e165      	b.n	11d78 <ConsoleProc+0x944>
							if(chkecho) printf("\r\nInput End Length of Text(1 ~ 3) : ");
   11aac:	4ba1      	ldr	r3, [pc, #644]	; (11d34 <ConsoleProc+0x900>)
   11aae:	781b      	ldrb	r3, [r3, #0]
   11ab0:	2b00      	cmp	r3, #0
   11ab2:	d003      	beq.n	11abc <ConsoleProc+0x688>
   11ab4:	4ba7      	ldr	r3, [pc, #668]	; (11d54 <ConsoleProc+0x920>)
   11ab6:	0018      	movs	r0, r3
   11ab8:	4ba0      	ldr	r3, [pc, #640]	; (11d3c <ConsoleProc+0x908>)
   11aba:	4798      	blx	r3
							rxChar = sio2host_getchar();
   11abc:	231f      	movs	r3, #31
   11abe:	18fc      	adds	r4, r7, r3
   11ac0:	4b9f      	ldr	r3, [pc, #636]	; (11d40 <ConsoleProc+0x90c>)
   11ac2:	4798      	blx	r3
   11ac4:	0003      	movs	r3, r0
   11ac6:	7023      	strb	r3, [r4, #0]
							if(chkecho) printf("%c", rxChar);
   11ac8:	4b9a      	ldr	r3, [pc, #616]	; (11d34 <ConsoleProc+0x900>)
   11aca:	781b      	ldrb	r3, [r3, #0]
   11acc:	2b00      	cmp	r3, #0
   11ace:	d005      	beq.n	11adc <ConsoleProc+0x6a8>
   11ad0:	231f      	movs	r3, #31
   11ad2:	18fb      	adds	r3, r7, r3
   11ad4:	781b      	ldrb	r3, [r3, #0]
   11ad6:	0018      	movs	r0, r3
   11ad8:	4b9f      	ldr	r3, [pc, #636]	; (11d58 <ConsoleProc+0x924>)
   11ada:	4798      	blx	r3
							if((rxChar >= 0x31) && (rxChar <= 0x33)){
   11adc:	231f      	movs	r3, #31
   11ade:	18fb      	adds	r3, r7, r3
   11ae0:	781b      	ldrb	r3, [r3, #0]
   11ae2:	2b30      	cmp	r3, #48	; 0x30
   11ae4:	d91f      	bls.n	11b26 <ConsoleProc+0x6f2>
   11ae6:	231f      	movs	r3, #31
   11ae8:	18fb      	adds	r3, r7, r3
   11aea:	781b      	ldrb	r3, [r3, #0]
   11aec:	2b33      	cmp	r3, #51	; 0x33
   11aee:	d81a      	bhi.n	11b26 <ConsoleProc+0x6f2>
								printf("\n\rSuccess!, End Length = %c\n\r",rxChar);
   11af0:	231f      	movs	r3, #31
   11af2:	18fb      	adds	r3, r7, r3
   11af4:	781a      	ldrb	r2, [r3, #0]
   11af6:	4b99      	ldr	r3, [pc, #612]	; (11d5c <ConsoleProc+0x928>)
   11af8:	0011      	movs	r1, r2
   11afa:	0018      	movs	r0, r3
   11afc:	4b8f      	ldr	r3, [pc, #572]	; (11d3c <ConsoleProc+0x908>)
   11afe:	4798      	blx	r3
								networkInfo.ETXL = rxChar;
   11b00:	4b91      	ldr	r3, [pc, #580]	; (11d48 <ConsoleProc+0x914>)
   11b02:	221f      	movs	r2, #31
   11b04:	18ba      	adds	r2, r7, r2
   11b06:	7812      	ldrb	r2, [r2, #0]
   11b08:	77da      	strb	r2, [r3, #31]
							switch(networkInfo.ETXL){
   11b0a:	4b8f      	ldr	r3, [pc, #572]	; (11d48 <ConsoleProc+0x914>)
   11b0c:	7fdb      	ldrb	r3, [r3, #31]
   11b0e:	2b31      	cmp	r3, #49	; 0x31
   11b10:	d032      	beq.n	11b78 <ConsoleProc+0x744>
   11b12:	dc02      	bgt.n	11b1a <ConsoleProc+0x6e6>
   11b14:	2b30      	cmp	r3, #48	; 0x30
   11b16:	d010      	beq.n	11b3a <ConsoleProc+0x706>
   11b18:	e0fe      	b.n	11d18 <ConsoleProc+0x8e4>
   11b1a:	2b32      	cmp	r3, #50	; 0x32
   11b1c:	d055      	beq.n	11bca <ConsoleProc+0x796>
   11b1e:	2b33      	cmp	r3, #51	; 0x33
   11b20:	d100      	bne.n	11b24 <ConsoleProc+0x6f0>
   11b22:	e097      	b.n	11c54 <ConsoleProc+0x820>
   11b24:	e0f8      	b.n	11d18 <ConsoleProc+0x8e4>
								printf("\n\rFail\n\r");
   11b26:	4b8e      	ldr	r3, [pc, #568]	; (11d60 <ConsoleProc+0x92c>)
   11b28:	0018      	movs	r0, r3
   11b2a:	4b84      	ldr	r3, [pc, #528]	; (11d3c <ConsoleProc+0x908>)
   11b2c:	4798      	blx	r3
								printf("\n\rDo Not Setting Text!\n\r");
   11b2e:	4b8d      	ldr	r3, [pc, #564]	; (11d64 <ConsoleProc+0x930>)
   11b30:	0018      	movs	r0, r3
   11b32:	4b82      	ldr	r3, [pc, #520]	; (11d3c <ConsoleProc+0x908>)
   11b34:	4798      	blx	r3
								break;
   11b36:	f001 fa6b 	bl	13010 <ConsoleProc+0x1bdc>
									networkInfo.STX1 = 0xff;
   11b3a:	4b83      	ldr	r3, [pc, #524]	; (11d48 <ConsoleProc+0x914>)
   11b3c:	22ff      	movs	r2, #255	; 0xff
   11b3e:	76da      	strb	r2, [r3, #27]
									networkInfo.STX2 = 0xff;
   11b40:	4b81      	ldr	r3, [pc, #516]	; (11d48 <ConsoleProc+0x914>)
   11b42:	22ff      	movs	r2, #255	; 0xff
   11b44:	771a      	strb	r2, [r3, #28]
									networkInfo.STX3 = 0xff;
   11b46:	4b80      	ldr	r3, [pc, #512]	; (11d48 <ConsoleProc+0x914>)
   11b48:	22ff      	movs	r2, #255	; 0xff
   11b4a:	775a      	strb	r2, [r3, #29]
									networkInfo.ETX1 = 0xff;
   11b4c:	4b7e      	ldr	r3, [pc, #504]	; (11d48 <ConsoleProc+0x914>)
   11b4e:	2220      	movs	r2, #32
   11b50:	21ff      	movs	r1, #255	; 0xff
   11b52:	5499      	strb	r1, [r3, r2]
									networkInfo.ETX2 = 0xff;
   11b54:	4b7c      	ldr	r3, [pc, #496]	; (11d48 <ConsoleProc+0x914>)
   11b56:	2221      	movs	r2, #33	; 0x21
   11b58:	21ff      	movs	r1, #255	; 0xff
   11b5a:	5499      	strb	r1, [r3, r2]
									networkInfo.ETX3 = 0xff;
   11b5c:	4b7a      	ldr	r3, [pc, #488]	; (11d48 <ConsoleProc+0x914>)
   11b5e:	2222      	movs	r2, #34	; 0x22
   11b60:	21ff      	movs	r1, #255	; 0xff
   11b62:	5499      	strb	r1, [r3, r2]
									if(chkecho) printf("\n\rDo Not Setting Text!\n\r");
   11b64:	4b73      	ldr	r3, [pc, #460]	; (11d34 <ConsoleProc+0x900>)
   11b66:	781b      	ldrb	r3, [r3, #0]
   11b68:	2b00      	cmp	r3, #0
   11b6a:	d100      	bne.n	11b6e <ConsoleProc+0x73a>
   11b6c:	e0d3      	b.n	11d16 <ConsoleProc+0x8e2>
   11b6e:	4b7d      	ldr	r3, [pc, #500]	; (11d64 <ConsoleProc+0x930>)
   11b70:	0018      	movs	r0, r3
   11b72:	4b72      	ldr	r3, [pc, #456]	; (11d3c <ConsoleProc+0x908>)
   11b74:	4798      	blx	r3
									break;
   11b76:	e0ce      	b.n	11d16 <ConsoleProc+0x8e2>
									if(chkecho) printf("\r\nInput First End of Text : ");
   11b78:	4b6e      	ldr	r3, [pc, #440]	; (11d34 <ConsoleProc+0x900>)
   11b7a:	781b      	ldrb	r3, [r3, #0]
   11b7c:	2b00      	cmp	r3, #0
   11b7e:	d003      	beq.n	11b88 <ConsoleProc+0x754>
   11b80:	4b79      	ldr	r3, [pc, #484]	; (11d68 <ConsoleProc+0x934>)
   11b82:	0018      	movs	r0, r3
   11b84:	4b6d      	ldr	r3, [pc, #436]	; (11d3c <ConsoleProc+0x908>)
   11b86:	4798      	blx	r3
									rxChar = sio2host_getchar();
   11b88:	231f      	movs	r3, #31
   11b8a:	18fc      	adds	r4, r7, r3
   11b8c:	4b6c      	ldr	r3, [pc, #432]	; (11d40 <ConsoleProc+0x90c>)
   11b8e:	4798      	blx	r3
   11b90:	0003      	movs	r3, r0
   11b92:	7023      	strb	r3, [r4, #0]
									if(chkecho) printf(" %c\n\rSuccess!\n\r",rxChar);
   11b94:	4b67      	ldr	r3, [pc, #412]	; (11d34 <ConsoleProc+0x900>)
   11b96:	781b      	ldrb	r3, [r3, #0]
   11b98:	2b00      	cmp	r3, #0
   11b9a:	d007      	beq.n	11bac <ConsoleProc+0x778>
   11b9c:	231f      	movs	r3, #31
   11b9e:	18fb      	adds	r3, r7, r3
   11ba0:	781a      	ldrb	r2, [r3, #0]
   11ba2:	4b68      	ldr	r3, [pc, #416]	; (11d44 <ConsoleProc+0x910>)
   11ba4:	0011      	movs	r1, r2
   11ba6:	0018      	movs	r0, r3
   11ba8:	4b64      	ldr	r3, [pc, #400]	; (11d3c <ConsoleProc+0x908>)
   11baa:	4798      	blx	r3
									networkInfo.ETX1 = rxChar;
   11bac:	4b66      	ldr	r3, [pc, #408]	; (11d48 <ConsoleProc+0x914>)
   11bae:	221f      	movs	r2, #31
   11bb0:	18ba      	adds	r2, r7, r2
   11bb2:	2120      	movs	r1, #32
   11bb4:	7812      	ldrb	r2, [r2, #0]
   11bb6:	545a      	strb	r2, [r3, r1]
									networkInfo.ETX2 = 0xff;
   11bb8:	4b63      	ldr	r3, [pc, #396]	; (11d48 <ConsoleProc+0x914>)
   11bba:	2221      	movs	r2, #33	; 0x21
   11bbc:	21ff      	movs	r1, #255	; 0xff
   11bbe:	5499      	strb	r1, [r3, r2]
									networkInfo.ETX3 = 0xff;
   11bc0:	4b61      	ldr	r3, [pc, #388]	; (11d48 <ConsoleProc+0x914>)
   11bc2:	2222      	movs	r2, #34	; 0x22
   11bc4:	21ff      	movs	r1, #255	; 0xff
   11bc6:	5499      	strb	r1, [r3, r2]
									break;
   11bc8:	e0a6      	b.n	11d18 <ConsoleProc+0x8e4>
									if(chkecho) printf("\r\nInput First End of Text : ");
   11bca:	4b5a      	ldr	r3, [pc, #360]	; (11d34 <ConsoleProc+0x900>)
   11bcc:	781b      	ldrb	r3, [r3, #0]
   11bce:	2b00      	cmp	r3, #0
   11bd0:	d003      	beq.n	11bda <ConsoleProc+0x7a6>
   11bd2:	4b65      	ldr	r3, [pc, #404]	; (11d68 <ConsoleProc+0x934>)
   11bd4:	0018      	movs	r0, r3
   11bd6:	4b59      	ldr	r3, [pc, #356]	; (11d3c <ConsoleProc+0x908>)
   11bd8:	4798      	blx	r3
									rxChar = sio2host_getchar();
   11bda:	231f      	movs	r3, #31
   11bdc:	18fc      	adds	r4, r7, r3
   11bde:	4b58      	ldr	r3, [pc, #352]	; (11d40 <ConsoleProc+0x90c>)
   11be0:	4798      	blx	r3
   11be2:	0003      	movs	r3, r0
   11be4:	7023      	strb	r3, [r4, #0]
									if(chkecho) printf(" %c\n\rSuccess!\n\r",rxChar);
   11be6:	4b53      	ldr	r3, [pc, #332]	; (11d34 <ConsoleProc+0x900>)
   11be8:	781b      	ldrb	r3, [r3, #0]
   11bea:	2b00      	cmp	r3, #0
   11bec:	d007      	beq.n	11bfe <ConsoleProc+0x7ca>
   11bee:	231f      	movs	r3, #31
   11bf0:	18fb      	adds	r3, r7, r3
   11bf2:	781a      	ldrb	r2, [r3, #0]
   11bf4:	4b53      	ldr	r3, [pc, #332]	; (11d44 <ConsoleProc+0x910>)
   11bf6:	0011      	movs	r1, r2
   11bf8:	0018      	movs	r0, r3
   11bfa:	4b50      	ldr	r3, [pc, #320]	; (11d3c <ConsoleProc+0x908>)
   11bfc:	4798      	blx	r3
									networkInfo.ETX1 = rxChar;
   11bfe:	4b52      	ldr	r3, [pc, #328]	; (11d48 <ConsoleProc+0x914>)
   11c00:	221f      	movs	r2, #31
   11c02:	18ba      	adds	r2, r7, r2
   11c04:	2120      	movs	r1, #32
   11c06:	7812      	ldrb	r2, [r2, #0]
   11c08:	545a      	strb	r2, [r3, r1]
									if(chkecho) printf("\r\nInput Second End of Text : ");
   11c0a:	4b4a      	ldr	r3, [pc, #296]	; (11d34 <ConsoleProc+0x900>)
   11c0c:	781b      	ldrb	r3, [r3, #0]
   11c0e:	2b00      	cmp	r3, #0
   11c10:	d003      	beq.n	11c1a <ConsoleProc+0x7e6>
   11c12:	4b56      	ldr	r3, [pc, #344]	; (11d6c <ConsoleProc+0x938>)
   11c14:	0018      	movs	r0, r3
   11c16:	4b49      	ldr	r3, [pc, #292]	; (11d3c <ConsoleProc+0x908>)
   11c18:	4798      	blx	r3
									rxChar = sio2host_getchar();
   11c1a:	231f      	movs	r3, #31
   11c1c:	18fc      	adds	r4, r7, r3
   11c1e:	4b48      	ldr	r3, [pc, #288]	; (11d40 <ConsoleProc+0x90c>)
   11c20:	4798      	blx	r3
   11c22:	0003      	movs	r3, r0
   11c24:	7023      	strb	r3, [r4, #0]
									if(chkecho) printf(" %c\n\rSuccess!\n\r",rxChar);
   11c26:	4b43      	ldr	r3, [pc, #268]	; (11d34 <ConsoleProc+0x900>)
   11c28:	781b      	ldrb	r3, [r3, #0]
   11c2a:	2b00      	cmp	r3, #0
   11c2c:	d007      	beq.n	11c3e <ConsoleProc+0x80a>
   11c2e:	231f      	movs	r3, #31
   11c30:	18fb      	adds	r3, r7, r3
   11c32:	781a      	ldrb	r2, [r3, #0]
   11c34:	4b43      	ldr	r3, [pc, #268]	; (11d44 <ConsoleProc+0x910>)
   11c36:	0011      	movs	r1, r2
   11c38:	0018      	movs	r0, r3
   11c3a:	4b40      	ldr	r3, [pc, #256]	; (11d3c <ConsoleProc+0x908>)
   11c3c:	4798      	blx	r3
									networkInfo.ETX2 = rxChar;
   11c3e:	4b42      	ldr	r3, [pc, #264]	; (11d48 <ConsoleProc+0x914>)
   11c40:	221f      	movs	r2, #31
   11c42:	18ba      	adds	r2, r7, r2
   11c44:	2121      	movs	r1, #33	; 0x21
   11c46:	7812      	ldrb	r2, [r2, #0]
   11c48:	545a      	strb	r2, [r3, r1]
									networkInfo.ETX3 = 0xff;
   11c4a:	4b3f      	ldr	r3, [pc, #252]	; (11d48 <ConsoleProc+0x914>)
   11c4c:	2222      	movs	r2, #34	; 0x22
   11c4e:	21ff      	movs	r1, #255	; 0xff
   11c50:	5499      	strb	r1, [r3, r2]
									break;
   11c52:	e061      	b.n	11d18 <ConsoleProc+0x8e4>
									if(chkecho) printf("\r\nInput First End of Text : ");
   11c54:	4b37      	ldr	r3, [pc, #220]	; (11d34 <ConsoleProc+0x900>)
   11c56:	781b      	ldrb	r3, [r3, #0]
   11c58:	2b00      	cmp	r3, #0
   11c5a:	d003      	beq.n	11c64 <ConsoleProc+0x830>
   11c5c:	4b42      	ldr	r3, [pc, #264]	; (11d68 <ConsoleProc+0x934>)
   11c5e:	0018      	movs	r0, r3
   11c60:	4b36      	ldr	r3, [pc, #216]	; (11d3c <ConsoleProc+0x908>)
   11c62:	4798      	blx	r3
									rxChar = sio2host_getchar();
   11c64:	231f      	movs	r3, #31
   11c66:	18fc      	adds	r4, r7, r3
   11c68:	4b35      	ldr	r3, [pc, #212]	; (11d40 <ConsoleProc+0x90c>)
   11c6a:	4798      	blx	r3
   11c6c:	0003      	movs	r3, r0
   11c6e:	7023      	strb	r3, [r4, #0]
									if(chkecho) printf(" %c\n\rSuccess!\n\r",rxChar);
   11c70:	4b30      	ldr	r3, [pc, #192]	; (11d34 <ConsoleProc+0x900>)
   11c72:	781b      	ldrb	r3, [r3, #0]
   11c74:	2b00      	cmp	r3, #0
   11c76:	d007      	beq.n	11c88 <ConsoleProc+0x854>
   11c78:	231f      	movs	r3, #31
   11c7a:	18fb      	adds	r3, r7, r3
   11c7c:	781a      	ldrb	r2, [r3, #0]
   11c7e:	4b31      	ldr	r3, [pc, #196]	; (11d44 <ConsoleProc+0x910>)
   11c80:	0011      	movs	r1, r2
   11c82:	0018      	movs	r0, r3
   11c84:	4b2d      	ldr	r3, [pc, #180]	; (11d3c <ConsoleProc+0x908>)
   11c86:	4798      	blx	r3
									networkInfo.ETX1 = rxChar;
   11c88:	4b2f      	ldr	r3, [pc, #188]	; (11d48 <ConsoleProc+0x914>)
   11c8a:	221f      	movs	r2, #31
   11c8c:	18ba      	adds	r2, r7, r2
   11c8e:	2120      	movs	r1, #32
   11c90:	7812      	ldrb	r2, [r2, #0]
   11c92:	545a      	strb	r2, [r3, r1]
									if(chkecho) printf("\r\nInput Second End of Text : ");
   11c94:	4b27      	ldr	r3, [pc, #156]	; (11d34 <ConsoleProc+0x900>)
   11c96:	781b      	ldrb	r3, [r3, #0]
   11c98:	2b00      	cmp	r3, #0
   11c9a:	d003      	beq.n	11ca4 <ConsoleProc+0x870>
   11c9c:	4b33      	ldr	r3, [pc, #204]	; (11d6c <ConsoleProc+0x938>)
   11c9e:	0018      	movs	r0, r3
   11ca0:	4b26      	ldr	r3, [pc, #152]	; (11d3c <ConsoleProc+0x908>)
   11ca2:	4798      	blx	r3
									rxChar = sio2host_getchar();
   11ca4:	231f      	movs	r3, #31
   11ca6:	18fc      	adds	r4, r7, r3
   11ca8:	4b25      	ldr	r3, [pc, #148]	; (11d40 <ConsoleProc+0x90c>)
   11caa:	4798      	blx	r3
   11cac:	0003      	movs	r3, r0
   11cae:	7023      	strb	r3, [r4, #0]
									if(chkecho) printf(" %c\n\rSuccess!\n\r",rxChar);
   11cb0:	4b20      	ldr	r3, [pc, #128]	; (11d34 <ConsoleProc+0x900>)
   11cb2:	781b      	ldrb	r3, [r3, #0]
   11cb4:	2b00      	cmp	r3, #0
   11cb6:	d007      	beq.n	11cc8 <ConsoleProc+0x894>
   11cb8:	231f      	movs	r3, #31
   11cba:	18fb      	adds	r3, r7, r3
   11cbc:	781a      	ldrb	r2, [r3, #0]
   11cbe:	4b21      	ldr	r3, [pc, #132]	; (11d44 <ConsoleProc+0x910>)
   11cc0:	0011      	movs	r1, r2
   11cc2:	0018      	movs	r0, r3
   11cc4:	4b1d      	ldr	r3, [pc, #116]	; (11d3c <ConsoleProc+0x908>)
   11cc6:	4798      	blx	r3
									networkInfo.ETX2 = rxChar;
   11cc8:	4b1f      	ldr	r3, [pc, #124]	; (11d48 <ConsoleProc+0x914>)
   11cca:	221f      	movs	r2, #31
   11ccc:	18ba      	adds	r2, r7, r2
   11cce:	2121      	movs	r1, #33	; 0x21
   11cd0:	7812      	ldrb	r2, [r2, #0]
   11cd2:	545a      	strb	r2, [r3, r1]
									if(chkecho) printf("\r\nInput Third End of Text : ");
   11cd4:	4b17      	ldr	r3, [pc, #92]	; (11d34 <ConsoleProc+0x900>)
   11cd6:	781b      	ldrb	r3, [r3, #0]
   11cd8:	2b00      	cmp	r3, #0
   11cda:	d003      	beq.n	11ce4 <ConsoleProc+0x8b0>
   11cdc:	4b24      	ldr	r3, [pc, #144]	; (11d70 <ConsoleProc+0x93c>)
   11cde:	0018      	movs	r0, r3
   11ce0:	4b16      	ldr	r3, [pc, #88]	; (11d3c <ConsoleProc+0x908>)
   11ce2:	4798      	blx	r3
									rxChar = sio2host_getchar();
   11ce4:	231f      	movs	r3, #31
   11ce6:	18fc      	adds	r4, r7, r3
   11ce8:	4b15      	ldr	r3, [pc, #84]	; (11d40 <ConsoleProc+0x90c>)
   11cea:	4798      	blx	r3
   11cec:	0003      	movs	r3, r0
   11cee:	7023      	strb	r3, [r4, #0]
									if(chkecho) printf(" %c\n\rSuccess!\n\r",rxChar);
   11cf0:	4b10      	ldr	r3, [pc, #64]	; (11d34 <ConsoleProc+0x900>)
   11cf2:	781b      	ldrb	r3, [r3, #0]
   11cf4:	2b00      	cmp	r3, #0
   11cf6:	d007      	beq.n	11d08 <ConsoleProc+0x8d4>
   11cf8:	231f      	movs	r3, #31
   11cfa:	18fb      	adds	r3, r7, r3
   11cfc:	781a      	ldrb	r2, [r3, #0]
   11cfe:	4b11      	ldr	r3, [pc, #68]	; (11d44 <ConsoleProc+0x910>)
   11d00:	0011      	movs	r1, r2
   11d02:	0018      	movs	r0, r3
   11d04:	4b0d      	ldr	r3, [pc, #52]	; (11d3c <ConsoleProc+0x908>)
   11d06:	4798      	blx	r3
									networkInfo.ETX3 = rxChar;
   11d08:	4b0f      	ldr	r3, [pc, #60]	; (11d48 <ConsoleProc+0x914>)
   11d0a:	221f      	movs	r2, #31
   11d0c:	18ba      	adds	r2, r7, r2
   11d0e:	2122      	movs	r1, #34	; 0x22
   11d10:	7812      	ldrb	r2, [r2, #0]
   11d12:	545a      	strb	r2, [r3, r1]
									break;
   11d14:	e000      	b.n	11d18 <ConsoleProc+0x8e4>
									break;
   11d16:	46c0      	nop			; (mov r8, r8)
							if(chkecho) printf("\n\rSuccess!, Text Setting!\n\r");
   11d18:	4b06      	ldr	r3, [pc, #24]	; (11d34 <ConsoleProc+0x900>)
   11d1a:	781b      	ldrb	r3, [r3, #0]
   11d1c:	2b00      	cmp	r3, #0
   11d1e:	d003      	beq.n	11d28 <ConsoleProc+0x8f4>
   11d20:	4b14      	ldr	r3, [pc, #80]	; (11d74 <ConsoleProc+0x940>)
   11d22:	0018      	movs	r0, r3
   11d24:	4b05      	ldr	r3, [pc, #20]	; (11d3c <ConsoleProc+0x908>)
   11d26:	4798      	blx	r3
							networkInfo.Text_Status = 1;
   11d28:	4b07      	ldr	r3, [pc, #28]	; (11d48 <ConsoleProc+0x914>)
   11d2a:	2223      	movs	r2, #35	; 0x23
   11d2c:	2101      	movs	r1, #1
   11d2e:	5499      	strb	r1, [r3, r2]
   11d30:	e041      	b.n	11db6 <ConsoleProc+0x982>
   11d32:	46c0      	nop			; (mov r8, r8)
   11d34:	2000002c 	.word	0x2000002c
   11d38:	0001d4c8 	.word	0x0001d4c8
   11d3c:	0001782d 	.word	0x0001782d
   11d40:	00006a51 	.word	0x00006a51
   11d44:	0001d4e8 	.word	0x0001d4e8
   11d48:	2000151c 	.word	0x2000151c
   11d4c:	0001d4f8 	.word	0x0001d4f8
   11d50:	0001d518 	.word	0x0001d518
   11d54:	0001d538 	.word	0x0001d538
   11d58:	00017851 	.word	0x00017851
   11d5c:	0001d560 	.word	0x0001d560
   11d60:	0001d4a0 	.word	0x0001d4a0
   11d64:	0001d4ac 	.word	0x0001d4ac
   11d68:	0001d580 	.word	0x0001d580
   11d6c:	0001d5a0 	.word	0x0001d5a0
   11d70:	0001d5c0 	.word	0x0001d5c0
   11d74:	0001d5e0 	.word	0x0001d5e0
							networkInfo.STXL = '0';
   11d78:	4be2      	ldr	r3, [pc, #904]	; (12104 <ConsoleProc+0xcd0>)
   11d7a:	2230      	movs	r2, #48	; 0x30
   11d7c:	769a      	strb	r2, [r3, #26]
							networkInfo.STX1 = 0xff;
   11d7e:	4be1      	ldr	r3, [pc, #900]	; (12104 <ConsoleProc+0xcd0>)
   11d80:	22ff      	movs	r2, #255	; 0xff
   11d82:	76da      	strb	r2, [r3, #27]
							networkInfo.STX2 = 0xff;
   11d84:	4bdf      	ldr	r3, [pc, #892]	; (12104 <ConsoleProc+0xcd0>)
   11d86:	22ff      	movs	r2, #255	; 0xff
   11d88:	771a      	strb	r2, [r3, #28]
							networkInfo.STX3 = 0xff;
   11d8a:	4bde      	ldr	r3, [pc, #888]	; (12104 <ConsoleProc+0xcd0>)
   11d8c:	22ff      	movs	r2, #255	; 0xff
   11d8e:	775a      	strb	r2, [r3, #29]
							networkInfo.ETXL = '0';
   11d90:	4bdc      	ldr	r3, [pc, #880]	; (12104 <ConsoleProc+0xcd0>)
   11d92:	2230      	movs	r2, #48	; 0x30
   11d94:	77da      	strb	r2, [r3, #31]
							networkInfo.ETX1 = 0xff;
   11d96:	4bdb      	ldr	r3, [pc, #876]	; (12104 <ConsoleProc+0xcd0>)
   11d98:	2220      	movs	r2, #32
   11d9a:	21ff      	movs	r1, #255	; 0xff
   11d9c:	5499      	strb	r1, [r3, r2]
							networkInfo.ETX2 = 0xff;
   11d9e:	4bd9      	ldr	r3, [pc, #868]	; (12104 <ConsoleProc+0xcd0>)
   11da0:	2221      	movs	r2, #33	; 0x21
   11da2:	21ff      	movs	r1, #255	; 0xff
   11da4:	5499      	strb	r1, [r3, r2]
							networkInfo.ETX3 = 0xff;
   11da6:	4bd7      	ldr	r3, [pc, #860]	; (12104 <ConsoleProc+0xcd0>)
   11da8:	2222      	movs	r2, #34	; 0x22
   11daa:	21ff      	movs	r1, #255	; 0xff
   11dac:	5499      	strb	r1, [r3, r2]
							networkInfo.Text_Status = 0;
   11dae:	4bd5      	ldr	r3, [pc, #852]	; (12104 <ConsoleProc+0xcd0>)
   11db0:	2223      	movs	r2, #35	; 0x23
   11db2:	2100      	movs	r1, #0
   11db4:	5499      	strb	r1, [r3, r2]
						NVM_Write_NetInfo(&networkInfo);
   11db6:	4bd3      	ldr	r3, [pc, #844]	; (12104 <ConsoleProc+0xcd0>)
   11db8:	0018      	movs	r0, r3
   11dba:	4bd3      	ldr	r3, [pc, #844]	; (12108 <ConsoleProc+0xcd4>)
   11dbc:	4798      	blx	r3
						break;
   11dbe:	f001 f927 	bl	13010 <ConsoleProc+0x1bdc>
						if(chkecho) printf("\n\rClear NVM...\r\n");
   11dc2:	4bd2      	ldr	r3, [pc, #840]	; (1210c <ConsoleProc+0xcd8>)
   11dc4:	781b      	ldrb	r3, [r3, #0]
   11dc6:	2b00      	cmp	r3, #0
   11dc8:	d003      	beq.n	11dd2 <ConsoleProc+0x99e>
   11dca:	4bd1      	ldr	r3, [pc, #836]	; (12110 <ConsoleProc+0xcdc>)
   11dcc:	0018      	movs	r0, r3
   11dce:	4bd1      	ldr	r3, [pc, #836]	; (12114 <ConsoleProc+0xce0>)
   11dd0:	4798      	blx	r3
						memset(ConnectionTable,0x00,sizeof(ConnectionTable));
   11dd2:	2380      	movs	r3, #128	; 0x80
   11dd4:	005a      	lsls	r2, r3, #1
   11dd6:	4bd0      	ldr	r3, [pc, #832]	; (12118 <ConsoleProc+0xce4>)
   11dd8:	2100      	movs	r1, #0
   11dda:	0018      	movs	r0, r3
   11ddc:	4bcf      	ldr	r3, [pc, #828]	; (1211c <ConsoleProc+0xce8>)
   11dde:	4798      	blx	r3
						NVM_Write_ConTable(ConnectionTable);
   11de0:	4bcd      	ldr	r3, [pc, #820]	; (12118 <ConsoleProc+0xce4>)
   11de2:	0018      	movs	r0, r3
   11de4:	4bce      	ldr	r3, [pc, #824]	; (12120 <ConsoleProc+0xcec>)
   11de6:	4798      	blx	r3
						memset(&networkInfo,0xff,sizeof(networkInfo));
   11de8:	4bc6      	ldr	r3, [pc, #792]	; (12104 <ConsoleProc+0xcd0>)
   11dea:	2228      	movs	r2, #40	; 0x28
   11dec:	21ff      	movs	r1, #255	; 0xff
   11dee:	0018      	movs	r0, r3
   11df0:	4bca      	ldr	r3, [pc, #808]	; (1211c <ConsoleProc+0xce8>)
   11df2:	4798      	blx	r3
						NVM_Write_NetInfo(&networkInfo);		
   11df4:	4bc3      	ldr	r3, [pc, #780]	; (12104 <ConsoleProc+0xcd0>)
   11df6:	0018      	movs	r0, r3
   11df8:	4bc3      	ldr	r3, [pc, #780]	; (12108 <ConsoleProc+0xcd4>)
   11dfa:	4798      	blx	r3
						networkInfo.CH = 20;
   11dfc:	4bc1      	ldr	r3, [pc, #772]	; (12104 <ConsoleProc+0xcd0>)
   11dfe:	2214      	movs	r2, #20
   11e00:	711a      	strb	r2, [r3, #4]
						MiApp_SetChannel(networkInfo.CH);
   11e02:	4bc0      	ldr	r3, [pc, #768]	; (12104 <ConsoleProc+0xcd0>)
   11e04:	791b      	ldrb	r3, [r3, #4]
   11e06:	0018      	movs	r0, r3
   11e08:	4bc6      	ldr	r3, [pc, #792]	; (12124 <ConsoleProc+0xcf0>)
   11e0a:	4798      	blx	r3
						networkInfo.PANID.Val = 0xabcd;
   11e0c:	4bbd      	ldr	r3, [pc, #756]	; (12104 <ConsoleProc+0xcd0>)
   11e0e:	4ac6      	ldr	r2, [pc, #792]	; (12128 <ConsoleProc+0xcf4>)
   11e10:	805a      	strh	r2, [r3, #2]
						MY_PAN_ID=networkInfo.PANID.Val;
   11e12:	4bbc      	ldr	r3, [pc, #752]	; (12104 <ConsoleProc+0xcd0>)
   11e14:	885b      	ldrh	r3, [r3, #2]
   11e16:	001a      	movs	r2, r3
   11e18:	4bc4      	ldr	r3, [pc, #784]	; (1212c <ConsoleProc+0xcf8>)
   11e1a:	601a      	str	r2, [r3, #0]
						myPANID.Val=networkInfo.PANID.Val;
   11e1c:	4bb9      	ldr	r3, [pc, #740]	; (12104 <ConsoleProc+0xcd0>)
   11e1e:	885a      	ldrh	r2, [r3, #2]
   11e20:	4bc3      	ldr	r3, [pc, #780]	; (12130 <ConsoleProc+0xcfc>)
   11e22:	801a      	strh	r2, [r3, #0]
						if(chkecho) printf("\n\Cleared...\r\n");
   11e24:	4bb9      	ldr	r3, [pc, #740]	; (1210c <ConsoleProc+0xcd8>)
   11e26:	781b      	ldrb	r3, [r3, #0]
   11e28:	2b00      	cmp	r3, #0
   11e2a:	d101      	bne.n	11e30 <ConsoleProc+0x9fc>
   11e2c:	f001 f8df 	bl	12fee <ConsoleProc+0x1bba>
   11e30:	4bc0      	ldr	r3, [pc, #768]	; (12134 <ConsoleProc+0xd00>)
   11e32:	0018      	movs	r0, r3
   11e34:	4bb7      	ldr	r3, [pc, #732]	; (12114 <ConsoleProc+0xce0>)
   11e36:	4798      	blx	r3
						break;
   11e38:	f001 f8d9 	bl	12fee <ConsoleProc+0x1bba>
						if(chkprotocol){
   11e3c:	4bbe      	ldr	r3, [pc, #760]	; (12138 <ConsoleProc+0xd04>)
   11e3e:	781b      	ldrb	r3, [r3, #0]
   11e40:	2b00      	cmp	r3, #0
   11e42:	d00c      	beq.n	11e5e <ConsoleProc+0xa2a>
							if(chkecho) printf("\n\rSTOP Protocol Data..! ");
   11e44:	4bb1      	ldr	r3, [pc, #708]	; (1210c <ConsoleProc+0xcd8>)
   11e46:	781b      	ldrb	r3, [r3, #0]
   11e48:	2b00      	cmp	r3, #0
   11e4a:	d003      	beq.n	11e54 <ConsoleProc+0xa20>
   11e4c:	4bbb      	ldr	r3, [pc, #748]	; (1213c <ConsoleProc+0xd08>)
   11e4e:	0018      	movs	r0, r3
   11e50:	4bbb      	ldr	r3, [pc, #748]	; (12140 <ConsoleProc+0xd0c>)
   11e52:	4798      	blx	r3
							chkprotocol = false;
   11e54:	4bb8      	ldr	r3, [pc, #736]	; (12138 <ConsoleProc+0xd04>)
   11e56:	2200      	movs	r2, #0
   11e58:	701a      	strb	r2, [r3, #0]
						break;
   11e5a:	f001 f8d9 	bl	13010 <ConsoleProc+0x1bdc>
							NVM_Read_NetInfo(&networkInfo);
   11e5e:	4ba9      	ldr	r3, [pc, #676]	; (12104 <ConsoleProc+0xcd0>)
   11e60:	0018      	movs	r0, r3
   11e62:	4bb8      	ldr	r3, [pc, #736]	; (12144 <ConsoleProc+0xd10>)
   11e64:	4798      	blx	r3
							if(chkecho) printf("\n\r read_STXL = %c",networkInfo.STXL);
   11e66:	4ba9      	ldr	r3, [pc, #676]	; (1210c <ConsoleProc+0xcd8>)
   11e68:	781b      	ldrb	r3, [r3, #0]
   11e6a:	2b00      	cmp	r3, #0
   11e6c:	d007      	beq.n	11e7e <ConsoleProc+0xa4a>
   11e6e:	4ba5      	ldr	r3, [pc, #660]	; (12104 <ConsoleProc+0xcd0>)
   11e70:	7e9b      	ldrb	r3, [r3, #26]
   11e72:	001a      	movs	r2, r3
   11e74:	4bb4      	ldr	r3, [pc, #720]	; (12148 <ConsoleProc+0xd14>)
   11e76:	0011      	movs	r1, r2
   11e78:	0018      	movs	r0, r3
   11e7a:	4bb1      	ldr	r3, [pc, #708]	; (12140 <ConsoleProc+0xd0c>)
   11e7c:	4798      	blx	r3
							if(chkecho) printf("\n\r read_STX1 = %c",networkInfo.STX1);
   11e7e:	4ba3      	ldr	r3, [pc, #652]	; (1210c <ConsoleProc+0xcd8>)
   11e80:	781b      	ldrb	r3, [r3, #0]
   11e82:	2b00      	cmp	r3, #0
   11e84:	d007      	beq.n	11e96 <ConsoleProc+0xa62>
   11e86:	4b9f      	ldr	r3, [pc, #636]	; (12104 <ConsoleProc+0xcd0>)
   11e88:	7edb      	ldrb	r3, [r3, #27]
   11e8a:	001a      	movs	r2, r3
   11e8c:	4baf      	ldr	r3, [pc, #700]	; (1214c <ConsoleProc+0xd18>)
   11e8e:	0011      	movs	r1, r2
   11e90:	0018      	movs	r0, r3
   11e92:	4bab      	ldr	r3, [pc, #684]	; (12140 <ConsoleProc+0xd0c>)
   11e94:	4798      	blx	r3
							if(chkecho) printf("\n\r read_STX2 = %c",networkInfo.STX2);
   11e96:	4b9d      	ldr	r3, [pc, #628]	; (1210c <ConsoleProc+0xcd8>)
   11e98:	781b      	ldrb	r3, [r3, #0]
   11e9a:	2b00      	cmp	r3, #0
   11e9c:	d007      	beq.n	11eae <ConsoleProc+0xa7a>
   11e9e:	4b99      	ldr	r3, [pc, #612]	; (12104 <ConsoleProc+0xcd0>)
   11ea0:	7f1b      	ldrb	r3, [r3, #28]
   11ea2:	001a      	movs	r2, r3
   11ea4:	4baa      	ldr	r3, [pc, #680]	; (12150 <ConsoleProc+0xd1c>)
   11ea6:	0011      	movs	r1, r2
   11ea8:	0018      	movs	r0, r3
   11eaa:	4ba5      	ldr	r3, [pc, #660]	; (12140 <ConsoleProc+0xd0c>)
   11eac:	4798      	blx	r3
							if(chkecho) printf("\n\r read_STX3 = %c",networkInfo.STX3);
   11eae:	4b97      	ldr	r3, [pc, #604]	; (1210c <ConsoleProc+0xcd8>)
   11eb0:	781b      	ldrb	r3, [r3, #0]
   11eb2:	2b00      	cmp	r3, #0
   11eb4:	d007      	beq.n	11ec6 <ConsoleProc+0xa92>
   11eb6:	4b93      	ldr	r3, [pc, #588]	; (12104 <ConsoleProc+0xcd0>)
   11eb8:	7f5b      	ldrb	r3, [r3, #29]
   11eba:	001a      	movs	r2, r3
   11ebc:	4ba5      	ldr	r3, [pc, #660]	; (12154 <ConsoleProc+0xd20>)
   11ebe:	0011      	movs	r1, r2
   11ec0:	0018      	movs	r0, r3
   11ec2:	4b9f      	ldr	r3, [pc, #636]	; (12140 <ConsoleProc+0xd0c>)
   11ec4:	4798      	blx	r3
							if(chkecho) printf("\n\r read_ETXL = %c",networkInfo.ETXL);
   11ec6:	4b91      	ldr	r3, [pc, #580]	; (1210c <ConsoleProc+0xcd8>)
   11ec8:	781b      	ldrb	r3, [r3, #0]
   11eca:	2b00      	cmp	r3, #0
   11ecc:	d007      	beq.n	11ede <ConsoleProc+0xaaa>
   11ece:	4b8d      	ldr	r3, [pc, #564]	; (12104 <ConsoleProc+0xcd0>)
   11ed0:	7fdb      	ldrb	r3, [r3, #31]
   11ed2:	001a      	movs	r2, r3
   11ed4:	4ba0      	ldr	r3, [pc, #640]	; (12158 <ConsoleProc+0xd24>)
   11ed6:	0011      	movs	r1, r2
   11ed8:	0018      	movs	r0, r3
   11eda:	4b99      	ldr	r3, [pc, #612]	; (12140 <ConsoleProc+0xd0c>)
   11edc:	4798      	blx	r3
							if(chkecho) printf("\n\r read_ETX1 = %c",networkInfo.ETX1);
   11ede:	4b8b      	ldr	r3, [pc, #556]	; (1210c <ConsoleProc+0xcd8>)
   11ee0:	781b      	ldrb	r3, [r3, #0]
   11ee2:	2b00      	cmp	r3, #0
   11ee4:	d008      	beq.n	11ef8 <ConsoleProc+0xac4>
   11ee6:	4b87      	ldr	r3, [pc, #540]	; (12104 <ConsoleProc+0xcd0>)
   11ee8:	2220      	movs	r2, #32
   11eea:	5c9b      	ldrb	r3, [r3, r2]
   11eec:	001a      	movs	r2, r3
   11eee:	4b9b      	ldr	r3, [pc, #620]	; (1215c <ConsoleProc+0xd28>)
   11ef0:	0011      	movs	r1, r2
   11ef2:	0018      	movs	r0, r3
   11ef4:	4b92      	ldr	r3, [pc, #584]	; (12140 <ConsoleProc+0xd0c>)
   11ef6:	4798      	blx	r3
							if(chkecho) printf("\n\r read_ETX2 = %c",networkInfo.ETX2);
   11ef8:	4b84      	ldr	r3, [pc, #528]	; (1210c <ConsoleProc+0xcd8>)
   11efa:	781b      	ldrb	r3, [r3, #0]
   11efc:	2b00      	cmp	r3, #0
   11efe:	d008      	beq.n	11f12 <ConsoleProc+0xade>
   11f00:	4b80      	ldr	r3, [pc, #512]	; (12104 <ConsoleProc+0xcd0>)
   11f02:	2221      	movs	r2, #33	; 0x21
   11f04:	5c9b      	ldrb	r3, [r3, r2]
   11f06:	001a      	movs	r2, r3
   11f08:	4b95      	ldr	r3, [pc, #596]	; (12160 <ConsoleProc+0xd2c>)
   11f0a:	0011      	movs	r1, r2
   11f0c:	0018      	movs	r0, r3
   11f0e:	4b8c      	ldr	r3, [pc, #560]	; (12140 <ConsoleProc+0xd0c>)
   11f10:	4798      	blx	r3
							if(chkecho) printf("\n\r read_ETX3 = %c\n\r\n\r",networkInfo.ETX3);
   11f12:	4b7e      	ldr	r3, [pc, #504]	; (1210c <ConsoleProc+0xcd8>)
   11f14:	781b      	ldrb	r3, [r3, #0]
   11f16:	2b00      	cmp	r3, #0
   11f18:	d008      	beq.n	11f2c <ConsoleProc+0xaf8>
   11f1a:	4b7a      	ldr	r3, [pc, #488]	; (12104 <ConsoleProc+0xcd0>)
   11f1c:	2222      	movs	r2, #34	; 0x22
   11f1e:	5c9b      	ldrb	r3, [r3, r2]
   11f20:	001a      	movs	r2, r3
   11f22:	4b90      	ldr	r3, [pc, #576]	; (12164 <ConsoleProc+0xd30>)
   11f24:	0011      	movs	r1, r2
   11f26:	0018      	movs	r0, r3
   11f28:	4b85      	ldr	r3, [pc, #532]	; (12140 <ConsoleProc+0xd0c>)
   11f2a:	4798      	blx	r3
							chkprotocol = true;
   11f2c:	4b82      	ldr	r3, [pc, #520]	; (12138 <ConsoleProc+0xd04>)
   11f2e:	2201      	movs	r2, #1
   11f30:	701a      	strb	r2, [r3, #0]
						break;
   11f32:	f001 f86d 	bl	13010 <ConsoleProc+0x1bdc>
						system_reset();
   11f36:	4b8c      	ldr	r3, [pc, #560]	; (12168 <ConsoleProc+0xd34>)
   11f38:	4798      	blx	r3
						break;
   11f3a:	f001 f869 	bl	13010 <ConsoleProc+0x1bdc>
						if(chkecho) printf("\r\nSpreading Factor setting...Current SF - %d \r\n",SF_DR);
   11f3e:	4b73      	ldr	r3, [pc, #460]	; (1210c <ConsoleProc+0xcd8>)
   11f40:	781b      	ldrb	r3, [r3, #0]
   11f42:	2b00      	cmp	r3, #0
   11f44:	d007      	beq.n	11f56 <ConsoleProc+0xb22>
   11f46:	4b89      	ldr	r3, [pc, #548]	; (1216c <ConsoleProc+0xd38>)
   11f48:	781b      	ldrb	r3, [r3, #0]
   11f4a:	001a      	movs	r2, r3
   11f4c:	4b88      	ldr	r3, [pc, #544]	; (12170 <ConsoleProc+0xd3c>)
   11f4e:	0011      	movs	r1, r2
   11f50:	0018      	movs	r0, r3
   11f52:	4b7b      	ldr	r3, [pc, #492]	; (12140 <ConsoleProc+0xd0c>)
   11f54:	4798      	blx	r3
						if(chkecho) printf(" 07: SF7, 08: SF8, 09: SF9, 10: SF10, 11: SF11, 12: SF12 \r\n");
   11f56:	4b6d      	ldr	r3, [pc, #436]	; (1210c <ConsoleProc+0xcd8>)
   11f58:	781b      	ldrb	r3, [r3, #0]
   11f5a:	2b00      	cmp	r3, #0
   11f5c:	d003      	beq.n	11f66 <ConsoleProc+0xb32>
   11f5e:	4b85      	ldr	r3, [pc, #532]	; (12174 <ConsoleProc+0xd40>)
   11f60:	0018      	movs	r0, r3
   11f62:	4b6c      	ldr	r3, [pc, #432]	; (12114 <ConsoleProc+0xce0>)
   11f64:	4798      	blx	r3
						rxChar = sio2host_getchar();
   11f66:	231f      	movs	r3, #31
   11f68:	18fc      	adds	r4, r7, r3
   11f6a:	4b83      	ldr	r3, [pc, #524]	; (12178 <ConsoleProc+0xd44>)
   11f6c:	4798      	blx	r3
   11f6e:	0003      	movs	r3, r0
   11f70:	7023      	strb	r3, [r4, #0]
						tmp = (rxChar-'0')*10;
   11f72:	231f      	movs	r3, #31
   11f74:	18fb      	adds	r3, r7, r3
   11f76:	781b      	ldrb	r3, [r3, #0]
   11f78:	3b30      	subs	r3, #48	; 0x30
   11f7a:	b2db      	uxtb	r3, r3
   11f7c:	221e      	movs	r2, #30
   11f7e:	18ba      	adds	r2, r7, r2
   11f80:	1c19      	adds	r1, r3, #0
   11f82:	0089      	lsls	r1, r1, #2
   11f84:	18cb      	adds	r3, r1, r3
   11f86:	18db      	adds	r3, r3, r3
   11f88:	7013      	strb	r3, [r2, #0]
						rxChar = sio2host_getchar();
   11f8a:	231f      	movs	r3, #31
   11f8c:	18fc      	adds	r4, r7, r3
   11f8e:	4b7a      	ldr	r3, [pc, #488]	; (12178 <ConsoleProc+0xd44>)
   11f90:	4798      	blx	r3
   11f92:	0003      	movs	r3, r0
   11f94:	7023      	strb	r3, [r4, #0]
						tmp += (rxChar-'0');
   11f96:	231f      	movs	r3, #31
   11f98:	18fa      	adds	r2, r7, r3
   11f9a:	231e      	movs	r3, #30
   11f9c:	18fb      	adds	r3, r7, r3
   11f9e:	7812      	ldrb	r2, [r2, #0]
   11fa0:	781b      	ldrb	r3, [r3, #0]
   11fa2:	18d3      	adds	r3, r2, r3
   11fa4:	b2da      	uxtb	r2, r3
   11fa6:	231e      	movs	r3, #30
   11fa8:	18fb      	adds	r3, r7, r3
   11faa:	3a30      	subs	r2, #48	; 0x30
   11fac:	701a      	strb	r2, [r3, #0]
						if(tmp>=7 && tmp<=12)
   11fae:	231e      	movs	r3, #30
   11fb0:	18fb      	adds	r3, r7, r3
   11fb2:	781b      	ldrb	r3, [r3, #0]
   11fb4:	2b06      	cmp	r3, #6
   11fb6:	d924      	bls.n	12002 <ConsoleProc+0xbce>
   11fb8:	231e      	movs	r3, #30
   11fba:	18fb      	adds	r3, r7, r3
   11fbc:	781b      	ldrb	r3, [r3, #0]
   11fbe:	2b0c      	cmp	r3, #12
   11fc0:	d81f      	bhi.n	12002 <ConsoleProc+0xbce>
							SF_DR=tmp;
   11fc2:	4b6a      	ldr	r3, [pc, #424]	; (1216c <ConsoleProc+0xd38>)
   11fc4:	221e      	movs	r2, #30
   11fc6:	18ba      	adds	r2, r7, r2
   11fc8:	7812      	ldrb	r2, [r2, #0]
   11fca:	701a      	strb	r2, [r3, #0]
							SX1276LoRaSetSpreadingFactor(SF_DR);
   11fcc:	4b67      	ldr	r3, [pc, #412]	; (1216c <ConsoleProc+0xd38>)
   11fce:	781b      	ldrb	r3, [r3, #0]
   11fd0:	0018      	movs	r0, r3
   11fd2:	4b6a      	ldr	r3, [pc, #424]	; (1217c <ConsoleProc+0xd48>)
   11fd4:	4798      	blx	r3
							if(chkecho) printf("\r\nSet SpreadingFactor - %d - Done\r\n\r\n",SF_DR);
   11fd6:	4b4d      	ldr	r3, [pc, #308]	; (1210c <ConsoleProc+0xcd8>)
   11fd8:	781b      	ldrb	r3, [r3, #0]
   11fda:	2b00      	cmp	r3, #0
   11fdc:	d007      	beq.n	11fee <ConsoleProc+0xbba>
   11fde:	4b63      	ldr	r3, [pc, #396]	; (1216c <ConsoleProc+0xd38>)
   11fe0:	781b      	ldrb	r3, [r3, #0]
   11fe2:	001a      	movs	r2, r3
   11fe4:	4b66      	ldr	r3, [pc, #408]	; (12180 <ConsoleProc+0xd4c>)
   11fe6:	0011      	movs	r1, r2
   11fe8:	0018      	movs	r0, r3
   11fea:	4b55      	ldr	r3, [pc, #340]	; (12140 <ConsoleProc+0xd0c>)
   11fec:	4798      	blx	r3
							networkInfo.SF = SF_DR;
   11fee:	4b5f      	ldr	r3, [pc, #380]	; (1216c <ConsoleProc+0xd38>)
   11ff0:	781a      	ldrb	r2, [r3, #0]
   11ff2:	4b44      	ldr	r3, [pc, #272]	; (12104 <ConsoleProc+0xcd0>)
   11ff4:	75da      	strb	r2, [r3, #23]
							NVM_Write_NetInfo(&networkInfo);
   11ff6:	4b43      	ldr	r3, [pc, #268]	; (12104 <ConsoleProc+0xcd0>)
   11ff8:	0018      	movs	r0, r3
   11ffa:	4b43      	ldr	r3, [pc, #268]	; (12108 <ConsoleProc+0xcd4>)
   11ffc:	4798      	blx	r3
						break;
   11ffe:	f000 fff8 	bl	12ff2 <ConsoleProc+0x1bbe>
							if(chkecho) printf("\r\nInvalid value - %d \r\n\r\n",tmp);
   12002:	4b42      	ldr	r3, [pc, #264]	; (1210c <ConsoleProc+0xcd8>)
   12004:	781b      	ldrb	r3, [r3, #0]
   12006:	2b00      	cmp	r3, #0
   12008:	d101      	bne.n	1200e <ConsoleProc+0xbda>
   1200a:	f000 fff2 	bl	12ff2 <ConsoleProc+0x1bbe>
   1200e:	231e      	movs	r3, #30
   12010:	18fb      	adds	r3, r7, r3
   12012:	781a      	ldrb	r2, [r3, #0]
   12014:	4b5b      	ldr	r3, [pc, #364]	; (12184 <ConsoleProc+0xd50>)
   12016:	0011      	movs	r1, r2
   12018:	0018      	movs	r0, r3
   1201a:	4b49      	ldr	r3, [pc, #292]	; (12140 <ConsoleProc+0xd0c>)
   1201c:	4798      	blx	r3
						break;
   1201e:	f000 ffe8 	bl	12ff2 <ConsoleProc+0x1bbe>
						PrintMenu();
   12022:	4b59      	ldr	r3, [pc, #356]	; (12188 <ConsoleProc+0xd54>)
   12024:	4798      	blx	r3
						break;
   12026:	f000 fff3 	bl	13010 <ConsoleProc+0x1bdc>
							LORA_RSSI_INFO, pFactor->rssi, pFactor->rssi);
   1202a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   1202c:	789b      	ldrb	r3, [r3, #2]
							printf("{\"ca\":%d,\"se\":%d,\"va\":%d}\r\n",
   1202e:	001a      	movs	r2, r3
							LORA_RSSI_INFO, pFactor->rssi, pFactor->rssi);
   12030:	6abb      	ldr	r3, [r7, #40]	; 0x28
   12032:	789b      	ldrb	r3, [r3, #2]
							printf("{\"ca\":%d,\"se\":%d,\"va\":%d}\r\n",
   12034:	4855      	ldr	r0, [pc, #340]	; (1218c <ConsoleProc+0xd58>)
   12036:	2120      	movs	r1, #32
   12038:	4c41      	ldr	r4, [pc, #260]	; (12140 <ConsoleProc+0xd0c>)
   1203a:	47a0      	blx	r4
						break;
   1203c:	f000 ffe8 	bl	13010 <ConsoleProc+0x1bdc>
						set_SearchDuration = 14;
   12040:	4b53      	ldr	r3, [pc, #332]	; (12190 <ConsoleProc+0xd5c>)
   12042:	220e      	movs	r2, #14
   12044:	701a      	strb	r2, [r3, #0]
						MiApp_ConnectionMode(DISABLE_ALL_CONN);
   12046:	2003      	movs	r0, #3
   12048:	4b52      	ldr	r3, [pc, #328]	; (12194 <ConsoleProc+0xd60>)
   1204a:	4798      	blx	r3
						i = MiApp_SearchConnection(set_SearchDuration, OperatingChannel);
   1204c:	4b50      	ldr	r3, [pc, #320]	; (12190 <ConsoleProc+0xd5c>)
   1204e:	781b      	ldrb	r3, [r3, #0]
   12050:	222f      	movs	r2, #47	; 0x2f
   12052:	18bc      	adds	r4, r7, r2
   12054:	6a3a      	ldr	r2, [r7, #32]
   12056:	0011      	movs	r1, r2
   12058:	0018      	movs	r0, r3
   1205a:	4b4f      	ldr	r3, [pc, #316]	; (12198 <ConsoleProc+0xd64>)
   1205c:	4798      	blx	r3
   1205e:	0003      	movs	r3, r0
   12060:	7023      	strb	r3, [r4, #0]
						if(i>0){
   12062:	232f      	movs	r3, #47	; 0x2f
   12064:	18fb      	adds	r3, r7, r3
   12066:	781b      	ldrb	r3, [r3, #0]
   12068:	2b00      	cmp	r3, #0
   1206a:	d022      	beq.n	120b2 <ConsoleProc+0xc7e>
							if( MiApp_EstablishConnection(0, CONN_MODE_DIRECT) == 0xFF ){
   1206c:	2100      	movs	r1, #0
   1206e:	2000      	movs	r0, #0
   12070:	4b4a      	ldr	r3, [pc, #296]	; (1219c <ConsoleProc+0xd68>)
   12072:	4798      	blx	r3
   12074:	0003      	movs	r3, r0
   12076:	2bff      	cmp	r3, #255	; 0xff
   12078:	d108      	bne.n	1208c <ConsoleProc+0xc58>
								if(chkecho) printf("Join Fail....\n\r");
   1207a:	4b24      	ldr	r3, [pc, #144]	; (1210c <ConsoleProc+0xcd8>)
   1207c:	781b      	ldrb	r3, [r3, #0]
   1207e:	2b00      	cmp	r3, #0
   12080:	d01f      	beq.n	120c2 <ConsoleProc+0xc8e>
   12082:	4b47      	ldr	r3, [pc, #284]	; (121a0 <ConsoleProc+0xd6c>)
   12084:	0018      	movs	r0, r3
   12086:	4b2e      	ldr	r3, [pc, #184]	; (12140 <ConsoleProc+0xd0c>)
   12088:	4798      	blx	r3
   1208a:	e01a      	b.n	120c2 <ConsoleProc+0xc8e>
								if(chkecho) printf("Join Success....2\n\r");
   1208c:	4b1f      	ldr	r3, [pc, #124]	; (1210c <ConsoleProc+0xcd8>)
   1208e:	781b      	ldrb	r3, [r3, #0]
   12090:	2b00      	cmp	r3, #0
   12092:	d003      	beq.n	1209c <ConsoleProc+0xc68>
   12094:	4b43      	ldr	r3, [pc, #268]	; (121a4 <ConsoleProc+0xd70>)
   12096:	0018      	movs	r0, r3
   12098:	4b29      	ldr	r3, [pc, #164]	; (12140 <ConsoleProc+0xd0c>)
   1209a:	4798      	blx	r3
								DumpConnection(0xff);
   1209c:	20ff      	movs	r0, #255	; 0xff
   1209e:	4b42      	ldr	r3, [pc, #264]	; (121a8 <ConsoleProc+0xd74>)
   120a0:	4798      	blx	r3
								MiMAC_SetChannel(RF_CHANNEL);			//ihkim					
   120a2:	4b42      	ldr	r3, [pc, #264]	; (121ac <ConsoleProc+0xd78>)
   120a4:	781b      	ldrb	r3, [r3, #0]
   120a6:	0018      	movs	r0, r3
   120a8:	4b41      	ldr	r3, [pc, #260]	; (121b0 <ConsoleProc+0xd7c>)
   120aa:	4798      	blx	r3
								SX1276_RX_INIT();						//ihkim
   120ac:	4b41      	ldr	r3, [pc, #260]	; (121b4 <ConsoleProc+0xd80>)
   120ae:	4798      	blx	r3
   120b0:	e007      	b.n	120c2 <ConsoleProc+0xc8e>
							if(chkecho) printf("\r\nNot found network... Rescan Please...... \r\n");
   120b2:	4b16      	ldr	r3, [pc, #88]	; (1210c <ConsoleProc+0xcd8>)
   120b4:	781b      	ldrb	r3, [r3, #0]
   120b6:	2b00      	cmp	r3, #0
   120b8:	d003      	beq.n	120c2 <ConsoleProc+0xc8e>
   120ba:	4b3f      	ldr	r3, [pc, #252]	; (121b8 <ConsoleProc+0xd84>)
   120bc:	0018      	movs	r0, r3
   120be:	4b15      	ldr	r3, [pc, #84]	; (12114 <ConsoleProc+0xce0>)
   120c0:	4798      	blx	r3
						networkInfo.POWER = RF_OUTPUT;
   120c2:	4b3e      	ldr	r3, [pc, #248]	; (121bc <ConsoleProc+0xd88>)
   120c4:	781a      	ldrb	r2, [r3, #0]
   120c6:	4b0f      	ldr	r3, [pc, #60]	; (12104 <ConsoleProc+0xcd0>)
   120c8:	765a      	strb	r2, [r3, #25]
						networkInfo.SF = SF_DR;
   120ca:	4b28      	ldr	r3, [pc, #160]	; (1216c <ConsoleProc+0xd38>)
   120cc:	781a      	ldrb	r2, [r3, #0]
   120ce:	4b0d      	ldr	r3, [pc, #52]	; (12104 <ConsoleProc+0xcd0>)
   120d0:	75da      	strb	r2, [r3, #23]
						NVM_Write_NetInfo(&networkInfo);
   120d2:	4b0c      	ldr	r3, [pc, #48]	; (12104 <ConsoleProc+0xcd0>)
   120d4:	0018      	movs	r0, r3
   120d6:	4b0c      	ldr	r3, [pc, #48]	; (12108 <ConsoleProc+0xcd4>)
   120d8:	4798      	blx	r3
						break;
   120da:	f000 ff99 	bl	13010 <ConsoleProc+0x1bdc>
						if( MiApp_EstablishConnection(0, CONN_MODE_NVM) == 0xFF ){
   120de:	2102      	movs	r1, #2
   120e0:	2000      	movs	r0, #0
   120e2:	4b2e      	ldr	r3, [pc, #184]	; (1219c <ConsoleProc+0xd68>)
   120e4:	4798      	blx	r3
   120e6:	0003      	movs	r3, r0
   120e8:	2bff      	cmp	r3, #255	; 0xff
   120ea:	d169      	bne.n	121c0 <ConsoleProc+0xd8c>
							if(chkecho) printf("Join Fail....\n\r");
   120ec:	4b07      	ldr	r3, [pc, #28]	; (1210c <ConsoleProc+0xcd8>)
   120ee:	781b      	ldrb	r3, [r3, #0]
   120f0:	2b00      	cmp	r3, #0
   120f2:	d101      	bne.n	120f8 <ConsoleProc+0xcc4>
   120f4:	f000 ff7f 	bl	12ff6 <ConsoleProc+0x1bc2>
   120f8:	4b29      	ldr	r3, [pc, #164]	; (121a0 <ConsoleProc+0xd6c>)
   120fa:	0018      	movs	r0, r3
   120fc:	4b10      	ldr	r3, [pc, #64]	; (12140 <ConsoleProc+0xd0c>)
   120fe:	4798      	blx	r3
						break;
   12100:	f000 ff79 	bl	12ff6 <ConsoleProc+0x1bc2>
   12104:	2000151c 	.word	0x2000151c
   12108:	0000e8a1 	.word	0x0000e8a1
   1210c:	2000002c 	.word	0x2000002c
   12110:	0001d5fc 	.word	0x0001d5fc
   12114:	00017905 	.word	0x00017905
   12118:	20001150 	.word	0x20001150
   1211c:	00017799 	.word	0x00017799
   12120:	0000e80d 	.word	0x0000e80d
   12124:	0000d159 	.word	0x0000d159
   12128:	ffffabcd 	.word	0xffffabcd
   1212c:	20000d54 	.word	0x20000d54
   12130:	20001290 	.word	0x20001290
   12134:	0001d60c 	.word	0x0001d60c
   12138:	2000002d 	.word	0x2000002d
   1213c:	0001d61c 	.word	0x0001d61c
   12140:	0001782d 	.word	0x0001782d
   12144:	0000e979 	.word	0x0000e979
   12148:	0001d3b8 	.word	0x0001d3b8
   1214c:	0001d3cc 	.word	0x0001d3cc
   12150:	0001d3e0 	.word	0x0001d3e0
   12154:	0001d3f4 	.word	0x0001d3f4
   12158:	0001d408 	.word	0x0001d408
   1215c:	0001d41c 	.word	0x0001d41c
   12160:	0001d430 	.word	0x0001d430
   12164:	0001d638 	.word	0x0001d638
   12168:	0001090d 	.word	0x0001090d
   1216c:	20000030 	.word	0x20000030
   12170:	0001d650 	.word	0x0001d650
   12174:	0001d680 	.word	0x0001d680
   12178:	00006a51 	.word	0x00006a51
   1217c:	0000ee55 	.word	0x0000ee55
   12180:	0001d6bc 	.word	0x0001d6bc
   12184:	0001d6e4 	.word	0x0001d6e4
   12188:	00010b99 	.word	0x00010b99
   1218c:	0001d700 	.word	0x0001d700
   12190:	20001bf0 	.word	0x20001bf0
   12194:	0000d199 	.word	0x0000d199
   12198:	0000d201 	.word	0x0000d201
   1219c:	0000d335 	.word	0x0000d335
   121a0:	0001d71c 	.word	0x0001d71c
   121a4:	0001d72c 	.word	0x0001d72c
   121a8:	0000c625 	.word	0x0000c625
   121ac:	2000002f 	.word	0x2000002f
   121b0:	0000fc05 	.word	0x0000fc05
   121b4:	0000f90d 	.word	0x0000f90d
   121b8:	0001d740 	.word	0x0001d740
   121bc:	2000002e 	.word	0x2000002e
							if(chkecho) printf("Join Success....3\n\r");
   121c0:	4be1      	ldr	r3, [pc, #900]	; (12548 <ConsoleProc+0x1114>)
   121c2:	781b      	ldrb	r3, [r3, #0]
   121c4:	2b00      	cmp	r3, #0
   121c6:	d003      	beq.n	121d0 <ConsoleProc+0xd9c>
   121c8:	4be0      	ldr	r3, [pc, #896]	; (1254c <ConsoleProc+0x1118>)
   121ca:	0018      	movs	r0, r3
   121cc:	4be0      	ldr	r3, [pc, #896]	; (12550 <ConsoleProc+0x111c>)
   121ce:	4798      	blx	r3
							SX1276_RX_INIT();
   121d0:	4be0      	ldr	r3, [pc, #896]	; (12554 <ConsoleProc+0x1120>)
   121d2:	4798      	blx	r3
							DumpConnection(0xff);							
   121d4:	20ff      	movs	r0, #255	; 0xff
   121d6:	4be0      	ldr	r3, [pc, #896]	; (12558 <ConsoleProc+0x1124>)
   121d8:	4798      	blx	r3
						break;
   121da:	f000 ff0c 	bl	12ff6 <ConsoleProc+0x1bc2>
						MiApp_ConnectionMode(ENABLE_ALL_CONN);
   121de:	2000      	movs	r0, #0
   121e0:	4bde      	ldr	r3, [pc, #888]	; (1255c <ConsoleProc+0x1128>)
   121e2:	4798      	blx	r3
						if(MiApp_StartConnection(START_FROM_NVM, 0, 0)){
   121e4:	2200      	movs	r2, #0
   121e6:	2100      	movs	r1, #0
   121e8:	2003      	movs	r0, #3
   121ea:	4bdd      	ldr	r3, [pc, #884]	; (12560 <ConsoleProc+0x112c>)
   121ec:	4798      	blx	r3
   121ee:	1e03      	subs	r3, r0, #0
   121f0:	d00f      	beq.n	12212 <ConsoleProc+0xdde>
							if(chkecho) printf("Network Created....\n\r");
   121f2:	4bd5      	ldr	r3, [pc, #852]	; (12548 <ConsoleProc+0x1114>)
   121f4:	781b      	ldrb	r3, [r3, #0]
   121f6:	2b00      	cmp	r3, #0
   121f8:	d003      	beq.n	12202 <ConsoleProc+0xdce>
   121fa:	4bda      	ldr	r3, [pc, #872]	; (12564 <ConsoleProc+0x1130>)
   121fc:	0018      	movs	r0, r3
   121fe:	4bd4      	ldr	r3, [pc, #848]	; (12550 <ConsoleProc+0x111c>)
   12200:	4798      	blx	r3
							MiApp_ConnectionMode(DISABLE_ALL_CONN);
   12202:	2003      	movs	r0, #3
   12204:	4bd5      	ldr	r3, [pc, #852]	; (1255c <ConsoleProc+0x1128>)
   12206:	4798      	blx	r3
							DumpConnection(0xff);
   12208:	20ff      	movs	r0, #255	; 0xff
   1220a:	4bd3      	ldr	r3, [pc, #844]	; (12558 <ConsoleProc+0x1124>)
   1220c:	4798      	blx	r3
						break;
   1220e:	f000 fef4 	bl	12ffa <ConsoleProc+0x1bc6>
							if(chkecho) printf("Network Start Fail....\n\r");
   12212:	4bcd      	ldr	r3, [pc, #820]	; (12548 <ConsoleProc+0x1114>)
   12214:	781b      	ldrb	r3, [r3, #0]
   12216:	2b00      	cmp	r3, #0
   12218:	d101      	bne.n	1221e <ConsoleProc+0xdea>
   1221a:	f000 feee 	bl	12ffa <ConsoleProc+0x1bc6>
   1221e:	4bd2      	ldr	r3, [pc, #840]	; (12568 <ConsoleProc+0x1134>)
   12220:	0018      	movs	r0, r3
   12222:	4bcb      	ldr	r3, [pc, #812]	; (12550 <ConsoleProc+0x111c>)
   12224:	4798      	blx	r3
						break;
   12226:	f000 fee8 	bl	12ffa <ConsoleProc+0x1bc6>
						if(chkecho) printf("\r\nOutput Power setting...Current POWER - %d \r\n",RF_OUTPUT);
   1222a:	4bc7      	ldr	r3, [pc, #796]	; (12548 <ConsoleProc+0x1114>)
   1222c:	781b      	ldrb	r3, [r3, #0]
   1222e:	2b00      	cmp	r3, #0
   12230:	d007      	beq.n	12242 <ConsoleProc+0xe0e>
   12232:	4bce      	ldr	r3, [pc, #824]	; (1256c <ConsoleProc+0x1138>)
   12234:	781b      	ldrb	r3, [r3, #0]
   12236:	001a      	movs	r2, r3
   12238:	4bcd      	ldr	r3, [pc, #820]	; (12570 <ConsoleProc+0x113c>)
   1223a:	0011      	movs	r1, r2
   1223c:	0018      	movs	r0, r3
   1223e:	4bc4      	ldr	r3, [pc, #784]	; (12550 <ConsoleProc+0x111c>)
   12240:	4798      	blx	r3
						if(chkecho) printf("20, 17 ~ 02 dBm");
   12242:	4bc1      	ldr	r3, [pc, #772]	; (12548 <ConsoleProc+0x1114>)
   12244:	781b      	ldrb	r3, [r3, #0]
   12246:	2b00      	cmp	r3, #0
   12248:	d003      	beq.n	12252 <ConsoleProc+0xe1e>
   1224a:	4bca      	ldr	r3, [pc, #808]	; (12574 <ConsoleProc+0x1140>)
   1224c:	0018      	movs	r0, r3
   1224e:	4bc0      	ldr	r3, [pc, #768]	; (12550 <ConsoleProc+0x111c>)
   12250:	4798      	blx	r3
						rxChar = sio2host_getchar();
   12252:	231f      	movs	r3, #31
   12254:	18fc      	adds	r4, r7, r3
   12256:	4bc8      	ldr	r3, [pc, #800]	; (12578 <ConsoleProc+0x1144>)
   12258:	4798      	blx	r3
   1225a:	0003      	movs	r3, r0
   1225c:	7023      	strb	r3, [r4, #0]
						tmp = (rxChar-'0')*10;
   1225e:	231f      	movs	r3, #31
   12260:	18fb      	adds	r3, r7, r3
   12262:	781b      	ldrb	r3, [r3, #0]
   12264:	3b30      	subs	r3, #48	; 0x30
   12266:	b2db      	uxtb	r3, r3
   12268:	221e      	movs	r2, #30
   1226a:	18ba      	adds	r2, r7, r2
   1226c:	1c19      	adds	r1, r3, #0
   1226e:	0089      	lsls	r1, r1, #2
   12270:	18cb      	adds	r3, r1, r3
   12272:	18db      	adds	r3, r3, r3
   12274:	7013      	strb	r3, [r2, #0]
						rxChar = sio2host_getchar();
   12276:	231f      	movs	r3, #31
   12278:	18fc      	adds	r4, r7, r3
   1227a:	4bbf      	ldr	r3, [pc, #764]	; (12578 <ConsoleProc+0x1144>)
   1227c:	4798      	blx	r3
   1227e:	0003      	movs	r3, r0
   12280:	7023      	strb	r3, [r4, #0]
						tmp += (rxChar-'0');
   12282:	231f      	movs	r3, #31
   12284:	18fa      	adds	r2, r7, r3
   12286:	231e      	movs	r3, #30
   12288:	18fb      	adds	r3, r7, r3
   1228a:	7812      	ldrb	r2, [r2, #0]
   1228c:	781b      	ldrb	r3, [r3, #0]
   1228e:	18d3      	adds	r3, r2, r3
   12290:	b2da      	uxtb	r2, r3
   12292:	231e      	movs	r3, #30
   12294:	18fb      	adds	r3, r7, r3
   12296:	3a30      	subs	r2, #48	; 0x30
   12298:	701a      	strb	r2, [r3, #0]
						if((tmp>=2 && tmp<=17) || tmp == 20)
   1229a:	231e      	movs	r3, #30
   1229c:	18fb      	adds	r3, r7, r3
   1229e:	781b      	ldrb	r3, [r3, #0]
   122a0:	2b01      	cmp	r3, #1
   122a2:	d904      	bls.n	122ae <ConsoleProc+0xe7a>
   122a4:	231e      	movs	r3, #30
   122a6:	18fb      	adds	r3, r7, r3
   122a8:	781b      	ldrb	r3, [r3, #0]
   122aa:	2b11      	cmp	r3, #17
   122ac:	d904      	bls.n	122b8 <ConsoleProc+0xe84>
   122ae:	231e      	movs	r3, #30
   122b0:	18fb      	adds	r3, r7, r3
   122b2:	781b      	ldrb	r3, [r3, #0]
   122b4:	2b14      	cmp	r3, #20
   122b6:	d12a      	bne.n	1230e <ConsoleProc+0xeda>
							SX1276LoRaSetRFPower(tmp);
   122b8:	231e      	movs	r3, #30
   122ba:	18fb      	adds	r3, r7, r3
   122bc:	781b      	ldrb	r3, [r3, #0]
   122be:	0018      	movs	r0, r3
   122c0:	4bae      	ldr	r3, [pc, #696]	; (1257c <ConsoleProc+0x1148>)
   122c2:	4798      	blx	r3
							RF_OUTPUT=tmp;
   122c4:	4ba9      	ldr	r3, [pc, #676]	; (1256c <ConsoleProc+0x1138>)
   122c6:	221e      	movs	r2, #30
   122c8:	18ba      	adds	r2, r7, r2
   122ca:	7812      	ldrb	r2, [r2, #0]
   122cc:	701a      	strb	r2, [r3, #0]
							if(chkecho) printf("\r\nSet Output Power - %d - Done\r\n\r\n",RF_OUTPUT);
   122ce:	4b9e      	ldr	r3, [pc, #632]	; (12548 <ConsoleProc+0x1114>)
   122d0:	781b      	ldrb	r3, [r3, #0]
   122d2:	2b00      	cmp	r3, #0
   122d4:	d007      	beq.n	122e6 <ConsoleProc+0xeb2>
   122d6:	4ba5      	ldr	r3, [pc, #660]	; (1256c <ConsoleProc+0x1138>)
   122d8:	781b      	ldrb	r3, [r3, #0]
   122da:	001a      	movs	r2, r3
   122dc:	4ba8      	ldr	r3, [pc, #672]	; (12580 <ConsoleProc+0x114c>)
   122de:	0011      	movs	r1, r2
   122e0:	0018      	movs	r0, r3
   122e2:	4b9b      	ldr	r3, [pc, #620]	; (12550 <ConsoleProc+0x111c>)
   122e4:	4798      	blx	r3
							networkInfo.POWER = RF_OUTPUT;
   122e6:	4ba1      	ldr	r3, [pc, #644]	; (1256c <ConsoleProc+0x1138>)
   122e8:	781a      	ldrb	r2, [r3, #0]
   122ea:	4ba6      	ldr	r3, [pc, #664]	; (12584 <ConsoleProc+0x1150>)
   122ec:	765a      	strb	r2, [r3, #25]
							NVM_Write_NetInfo(&networkInfo);
   122ee:	4ba5      	ldr	r3, [pc, #660]	; (12584 <ConsoleProc+0x1150>)
   122f0:	0018      	movs	r0, r3
   122f2:	4ba5      	ldr	r3, [pc, #660]	; (12588 <ConsoleProc+0x1154>)
   122f4:	4798      	blx	r3
							printf("{\"ca\":%d,\"se\":%d,\"va\":%d}\r\n",
   122f6:	231e      	movs	r3, #30
   122f8:	18fb      	adds	r3, r7, r3
   122fa:	781a      	ldrb	r2, [r3, #0]
   122fc:	231e      	movs	r3, #30
   122fe:	18fb      	adds	r3, r7, r3
   12300:	781b      	ldrb	r3, [r3, #0]
   12302:	48a2      	ldr	r0, [pc, #648]	; (1258c <ConsoleProc+0x1158>)
   12304:	211f      	movs	r1, #31
   12306:	4c92      	ldr	r4, [pc, #584]	; (12550 <ConsoleProc+0x111c>)
   12308:	47a0      	blx	r4
						break;
   1230a:	f000 fe78 	bl	12ffe <ConsoleProc+0x1bca>
							if(chkecho) printf("\r\nInvalid value - %d \r\n\r\n",tmp);
   1230e:	4b8e      	ldr	r3, [pc, #568]	; (12548 <ConsoleProc+0x1114>)
   12310:	781b      	ldrb	r3, [r3, #0]
   12312:	2b00      	cmp	r3, #0
   12314:	d101      	bne.n	1231a <ConsoleProc+0xee6>
   12316:	f000 fe72 	bl	12ffe <ConsoleProc+0x1bca>
   1231a:	231e      	movs	r3, #30
   1231c:	18fb      	adds	r3, r7, r3
   1231e:	781a      	ldrb	r2, [r3, #0]
   12320:	4b9b      	ldr	r3, [pc, #620]	; (12590 <ConsoleProc+0x115c>)
   12322:	0011      	movs	r1, r2
   12324:	0018      	movs	r0, r3
   12326:	4b8a      	ldr	r3, [pc, #552]	; (12550 <ConsoleProc+0x111c>)
   12328:	4798      	blx	r3
						break;
   1232a:	f000 fe68 	bl	12ffe <ConsoleProc+0x1bca>
						if(chkecho) printf("LPS Start...\n\r");
   1232e:	4b86      	ldr	r3, [pc, #536]	; (12548 <ConsoleProc+0x1114>)
   12330:	781b      	ldrb	r3, [r3, #0]
   12332:	2b00      	cmp	r3, #0
   12334:	d003      	beq.n	1233e <ConsoleProc+0xf0a>
   12336:	4b97      	ldr	r3, [pc, #604]	; (12594 <ConsoleProc+0x1160>)
   12338:	0018      	movs	r0, r3
   1233a:	4b85      	ldr	r3, [pc, #532]	; (12550 <ConsoleProc+0x111c>)
   1233c:	4798      	blx	r3
						MiApp_ConnectionMode(ENABLE_ALL_CONN);
   1233e:	2000      	movs	r0, #0
   12340:	4b86      	ldr	r3, [pc, #536]	; (1255c <ConsoleProc+0x1128>)
   12342:	4798      	blx	r3
						break;
   12344:	f000 fe64 	bl	13010 <ConsoleProc+0x1bdc>
						if(chkecho) printf("Read NVM...\r\n");
   12348:	4b7f      	ldr	r3, [pc, #508]	; (12548 <ConsoleProc+0x1114>)
   1234a:	781b      	ldrb	r3, [r3, #0]
   1234c:	2b00      	cmp	r3, #0
   1234e:	d003      	beq.n	12358 <ConsoleProc+0xf24>
   12350:	4b91      	ldr	r3, [pc, #580]	; (12598 <ConsoleProc+0x1164>)
   12352:	0018      	movs	r0, r3
   12354:	4b91      	ldr	r3, [pc, #580]	; (1259c <ConsoleProc+0x1168>)
   12356:	4798      	blx	r3
						NVM_Read_ConTable(ConnectionTable);
   12358:	4b91      	ldr	r3, [pc, #580]	; (125a0 <ConsoleProc+0x116c>)
   1235a:	0018      	movs	r0, r3
   1235c:	4b91      	ldr	r3, [pc, #580]	; (125a4 <ConsoleProc+0x1170>)
   1235e:	4798      	blx	r3
						NVM_Read_NetInfo(&networkInfo);
   12360:	4b88      	ldr	r3, [pc, #544]	; (12584 <ConsoleProc+0x1150>)
   12362:	0018      	movs	r0, r3
   12364:	4b90      	ldr	r3, [pc, #576]	; (125a8 <ConsoleProc+0x1174>)
   12366:	4798      	blx	r3
						ptr = &networkInfo;
   12368:	4b86      	ldr	r3, [pc, #536]	; (12584 <ConsoleProc+0x1150>)
   1236a:	61bb      	str	r3, [r7, #24]
						if(chkecho) printf("\n\rNetwork Information...\r\n");
   1236c:	4b76      	ldr	r3, [pc, #472]	; (12548 <ConsoleProc+0x1114>)
   1236e:	781b      	ldrb	r3, [r3, #0]
   12370:	2b00      	cmp	r3, #0
   12372:	d003      	beq.n	1237c <ConsoleProc+0xf48>
   12374:	4b8d      	ldr	r3, [pc, #564]	; (125ac <ConsoleProc+0x1178>)
   12376:	0018      	movs	r0, r3
   12378:	4b88      	ldr	r3, [pc, #544]	; (1259c <ConsoleProc+0x1168>)
   1237a:	4798      	blx	r3
						for(i=0;i<sizeof(networkInfo);i++){
   1237c:	232f      	movs	r3, #47	; 0x2f
   1237e:	18fb      	adds	r3, r7, r3
   12380:	2200      	movs	r2, #0
   12382:	701a      	strb	r2, [r3, #0]
   12384:	e01e      	b.n	123c4 <ConsoleProc+0xf90>
							printf("%x ", *(ptr+i) );
   12386:	232f      	movs	r3, #47	; 0x2f
   12388:	18fb      	adds	r3, r7, r3
   1238a:	781b      	ldrb	r3, [r3, #0]
   1238c:	69ba      	ldr	r2, [r7, #24]
   1238e:	18d3      	adds	r3, r2, r3
   12390:	781b      	ldrb	r3, [r3, #0]
   12392:	001a      	movs	r2, r3
   12394:	4b86      	ldr	r3, [pc, #536]	; (125b0 <ConsoleProc+0x117c>)
   12396:	0011      	movs	r1, r2
   12398:	0018      	movs	r0, r3
   1239a:	4b6d      	ldr	r3, [pc, #436]	; (12550 <ConsoleProc+0x111c>)
   1239c:	4798      	blx	r3
							if(i%8 == 7) printf("\n\r");
   1239e:	232f      	movs	r3, #47	; 0x2f
   123a0:	18fb      	adds	r3, r7, r3
   123a2:	781b      	ldrb	r3, [r3, #0]
   123a4:	2207      	movs	r2, #7
   123a6:	4013      	ands	r3, r2
   123a8:	b2db      	uxtb	r3, r3
   123aa:	2b07      	cmp	r3, #7
   123ac:	d103      	bne.n	123b6 <ConsoleProc+0xf82>
   123ae:	4b81      	ldr	r3, [pc, #516]	; (125b4 <ConsoleProc+0x1180>)
   123b0:	0018      	movs	r0, r3
   123b2:	4b67      	ldr	r3, [pc, #412]	; (12550 <ConsoleProc+0x111c>)
   123b4:	4798      	blx	r3
						for(i=0;i<sizeof(networkInfo);i++){
   123b6:	232f      	movs	r3, #47	; 0x2f
   123b8:	18fb      	adds	r3, r7, r3
   123ba:	781a      	ldrb	r2, [r3, #0]
   123bc:	232f      	movs	r3, #47	; 0x2f
   123be:	18fb      	adds	r3, r7, r3
   123c0:	3201      	adds	r2, #1
   123c2:	701a      	strb	r2, [r3, #0]
   123c4:	232f      	movs	r3, #47	; 0x2f
   123c6:	18fb      	adds	r3, r7, r3
   123c8:	781b      	ldrb	r3, [r3, #0]
   123ca:	2b27      	cmp	r3, #39	; 0x27
   123cc:	d9db      	bls.n	12386 <ConsoleProc+0xf52>
						ptr = ConnectionTable;
   123ce:	4b74      	ldr	r3, [pc, #464]	; (125a0 <ConsoleProc+0x116c>)
   123d0:	61bb      	str	r3, [r7, #24]
						if(chkecho) printf("\n\rConnection Table...\r\n");
   123d2:	4b5d      	ldr	r3, [pc, #372]	; (12548 <ConsoleProc+0x1114>)
   123d4:	781b      	ldrb	r3, [r3, #0]
   123d6:	2b00      	cmp	r3, #0
   123d8:	d003      	beq.n	123e2 <ConsoleProc+0xfae>
   123da:	4b77      	ldr	r3, [pc, #476]	; (125b8 <ConsoleProc+0x1184>)
   123dc:	0018      	movs	r0, r3
   123de:	4b6f      	ldr	r3, [pc, #444]	; (1259c <ConsoleProc+0x1168>)
   123e0:	4798      	blx	r3
						Con_Buff = 0;
   123e2:	232e      	movs	r3, #46	; 0x2e
   123e4:	18fb      	adds	r3, r7, r3
   123e6:	2200      	movs	r2, #0
   123e8:	701a      	strb	r2, [r3, #0]
						for(i=0;i<sizeof(ConnectionTable);i++){
   123ea:	232f      	movs	r3, #47	; 0x2f
   123ec:	18fb      	adds	r3, r7, r3
   123ee:	2200      	movs	r2, #0
   123f0:	701a      	strb	r2, [r3, #0]
							if(chkecho) printf("%x ", *(ptr+i) );
   123f2:	4b55      	ldr	r3, [pc, #340]	; (12548 <ConsoleProc+0x1114>)
   123f4:	781b      	ldrb	r3, [r3, #0]
   123f6:	2b00      	cmp	r3, #0
   123f8:	d00b      	beq.n	12412 <ConsoleProc+0xfde>
   123fa:	232f      	movs	r3, #47	; 0x2f
   123fc:	18fb      	adds	r3, r7, r3
   123fe:	781b      	ldrb	r3, [r3, #0]
   12400:	69ba      	ldr	r2, [r7, #24]
   12402:	18d3      	adds	r3, r2, r3
   12404:	781b      	ldrb	r3, [r3, #0]
   12406:	001a      	movs	r2, r3
   12408:	4b69      	ldr	r3, [pc, #420]	; (125b0 <ConsoleProc+0x117c>)
   1240a:	0011      	movs	r1, r2
   1240c:	0018      	movs	r0, r3
   1240e:	4b50      	ldr	r3, [pc, #320]	; (12550 <ConsoleProc+0x111c>)
   12410:	4798      	blx	r3
							if(i%8 == 7){
   12412:	232f      	movs	r3, #47	; 0x2f
   12414:	18fb      	adds	r3, r7, r3
   12416:	781b      	ldrb	r3, [r3, #0]
   12418:	2207      	movs	r2, #7
   1241a:	4013      	ands	r3, r2
   1241c:	b2db      	uxtb	r3, r3
   1241e:	2b07      	cmp	r3, #7
   12420:	d10c      	bne.n	1243c <ConsoleProc+0x1008>
								 printf("\n\r");
   12422:	4b64      	ldr	r3, [pc, #400]	; (125b4 <ConsoleProc+0x1180>)
   12424:	0018      	movs	r0, r3
   12426:	4b4a      	ldr	r3, [pc, #296]	; (12550 <ConsoleProc+0x111c>)
   12428:	4798      	blx	r3
								 if(Con_Buff++ > 30)  break;
   1242a:	232e      	movs	r3, #46	; 0x2e
   1242c:	18fb      	adds	r3, r7, r3
   1242e:	781b      	ldrb	r3, [r3, #0]
   12430:	222e      	movs	r2, #46	; 0x2e
   12432:	18ba      	adds	r2, r7, r2
   12434:	1c59      	adds	r1, r3, #1
   12436:	7011      	strb	r1, [r2, #0]
   12438:	2b1e      	cmp	r3, #30
   1243a:	d807      	bhi.n	1244c <ConsoleProc+0x1018>
						for(i=0;i<sizeof(ConnectionTable);i++){
   1243c:	232f      	movs	r3, #47	; 0x2f
   1243e:	18fb      	adds	r3, r7, r3
   12440:	781a      	ldrb	r2, [r3, #0]
   12442:	232f      	movs	r3, #47	; 0x2f
   12444:	18fb      	adds	r3, r7, r3
   12446:	3201      	adds	r2, #1
   12448:	701a      	strb	r2, [r3, #0]
							if(chkecho) printf("%x ", *(ptr+i) );
   1244a:	e7d2      	b.n	123f2 <ConsoleProc+0xfbe>
								 if(Con_Buff++ > 30)  break;
   1244c:	46c0      	nop			; (mov r8, r8)
						break;
   1244e:	f000 fddf 	bl	13010 <ConsoleProc+0x1bdc>
						set_ScanDuration = 7;//14;
   12452:	4b5a      	ldr	r3, [pc, #360]	; (125bc <ConsoleProc+0x1188>)
   12454:	2207      	movs	r2, #7
   12456:	701a      	strb	r2, [r3, #0]
						MiApp_ConnectionMode(ENABLE_ALL_CONN);
   12458:	2000      	movs	r0, #0
   1245a:	4b40      	ldr	r3, [pc, #256]	; (1255c <ConsoleProc+0x1128>)
   1245c:	4798      	blx	r3
						if(MiApp_StartConnection(START_CONN_ENERGY_SCN, set_ScanDuration, OperatingChannel)){
   1245e:	4b57      	ldr	r3, [pc, #348]	; (125bc <ConsoleProc+0x1188>)
   12460:	781b      	ldrb	r3, [r3, #0]
   12462:	6a3a      	ldr	r2, [r7, #32]
   12464:	0019      	movs	r1, r3
   12466:	2001      	movs	r0, #1
   12468:	4b3d      	ldr	r3, [pc, #244]	; (12560 <ConsoleProc+0x112c>)
   1246a:	4798      	blx	r3
   1246c:	1e03      	subs	r3, r0, #0
   1246e:	d012      	beq.n	12496 <ConsoleProc+0x1062>
							if(chkecho) printf("Network Created....\n\r");
   12470:	4b35      	ldr	r3, [pc, #212]	; (12548 <ConsoleProc+0x1114>)
   12472:	781b      	ldrb	r3, [r3, #0]
   12474:	2b00      	cmp	r3, #0
   12476:	d003      	beq.n	12480 <ConsoleProc+0x104c>
   12478:	4b3a      	ldr	r3, [pc, #232]	; (12564 <ConsoleProc+0x1130>)
   1247a:	0018      	movs	r0, r3
   1247c:	4b34      	ldr	r3, [pc, #208]	; (12550 <ConsoleProc+0x111c>)
   1247e:	4798      	blx	r3
							MiApp_BroadcastPacket(false);
   12480:	2000      	movs	r0, #0
   12482:	4b4f      	ldr	r3, [pc, #316]	; (125c0 <ConsoleProc+0x118c>)
   12484:	4798      	blx	r3
							MiApp_ConnectionMode(DISABLE_ALL_CONN);
   12486:	2003      	movs	r0, #3
   12488:	4b34      	ldr	r3, [pc, #208]	; (1255c <ConsoleProc+0x1128>)
   1248a:	4798      	blx	r3
							DumpConnection(0xff);
   1248c:	20ff      	movs	r0, #255	; 0xff
   1248e:	4b32      	ldr	r3, [pc, #200]	; (12558 <ConsoleProc+0x1124>)
   12490:	4798      	blx	r3
						break;
   12492:	f000 fdb6 	bl	13002 <ConsoleProc+0x1bce>
							if(chkecho) printf("Network Start Fail....\n\r");
   12496:	4b2c      	ldr	r3, [pc, #176]	; (12548 <ConsoleProc+0x1114>)
   12498:	781b      	ldrb	r3, [r3, #0]
   1249a:	2b00      	cmp	r3, #0
   1249c:	d101      	bne.n	124a2 <ConsoleProc+0x106e>
   1249e:	f000 fdb0 	bl	13002 <ConsoleProc+0x1bce>
   124a2:	4b31      	ldr	r3, [pc, #196]	; (12568 <ConsoleProc+0x1134>)
   124a4:	0018      	movs	r0, r3
   124a6:	4b2a      	ldr	r3, [pc, #168]	; (12550 <ConsoleProc+0x111c>)
   124a8:	4798      	blx	r3
						break;
   124aa:	f000 fdaa 	bl	13002 <ConsoleProc+0x1bce>
						MiApp_FlushTx();
   124ae:	4b45      	ldr	r3, [pc, #276]	; (125c4 <ConsoleProc+0x1190>)
   124b0:	220b      	movs	r2, #11
   124b2:	701a      	strb	r2, [r3, #0]
							if((-1) != (rxChar = sio2host_getchar_nowait())){
   124b4:	4b44      	ldr	r3, [pc, #272]	; (125c8 <ConsoleProc+0x1194>)
   124b6:	4798      	blx	r3
   124b8:	0002      	movs	r2, r0
   124ba:	231f      	movs	r3, #31
   124bc:	18fb      	adds	r3, r7, r3
   124be:	701a      	strb	r2, [r3, #0]
								if(rxChar != 0xff){					
   124c0:	231f      	movs	r3, #31
   124c2:	18fb      	adds	r3, r7, r3
   124c4:	781b      	ldrb	r3, [r3, #0]
   124c6:	2bff      	cmp	r3, #255	; 0xff
   124c8:	d0f4      	beq.n	124b4 <ConsoleProc+0x1080>
									if(rxChar == 0x0D){						
   124ca:	231f      	movs	r3, #31
   124cc:	18fb      	adds	r3, r7, r3
   124ce:	781b      	ldrb	r3, [r3, #0]
   124d0:	2b0d      	cmp	r3, #13
   124d2:	d11a      	bne.n	1250a <ConsoleProc+0x10d6>
										if(RF_OUTPUT==20){
   124d4:	4b25      	ldr	r3, [pc, #148]	; (1256c <ConsoleProc+0x1138>)
   124d6:	781b      	ldrb	r3, [r3, #0]
   124d8:	2b14      	cmp	r3, #20
   124da:	d104      	bne.n	124e6 <ConsoleProc+0x10b2>
											port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_INACTIVE);//kwlee 200721			//ihkim 20220509
   124dc:	2100      	movs	r1, #0
   124de:	200d      	movs	r0, #13
   124e0:	4b3a      	ldr	r3, [pc, #232]	; (125cc <ConsoleProc+0x1198>)
   124e2:	4798      	blx	r3
   124e4:	e003      	b.n	124ee <ConsoleProc+0x10ba>
											port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_ACTIVE);//kwlee 200727
   124e6:	2101      	movs	r1, #1
   124e8:	200d      	movs	r0, #13
   124ea:	4b38      	ldr	r3, [pc, #224]	; (125cc <ConsoleProc+0x1198>)
   124ec:	4798      	blx	r3
										MiApp_BroadcastPacket(false);
   124ee:	2000      	movs	r0, #0
   124f0:	4b33      	ldr	r3, [pc, #204]	; (125c0 <ConsoleProc+0x118c>)
   124f2:	4798      	blx	r3
										SX1276_RX_INIT();
   124f4:	4b17      	ldr	r3, [pc, #92]	; (12554 <ConsoleProc+0x1120>)
   124f6:	4798      	blx	r3
										uartRxDataIndex=0;
   124f8:	4b35      	ldr	r3, [pc, #212]	; (125d0 <ConsoleProc+0x119c>)
   124fa:	2200      	movs	r2, #0
   124fc:	701a      	strb	r2, [r3, #0]
										break;
   124fe:	46c0      	nop			; (mov r8, r8)
						chkecho = false;
   12500:	4b11      	ldr	r3, [pc, #68]	; (12548 <ConsoleProc+0x1114>)
   12502:	2200      	movs	r2, #0
   12504:	701a      	strb	r2, [r3, #0]
						break;
   12506:	f000 fd83 	bl	13010 <ConsoleProc+0x1bdc>
										if(uartRxDataIndex++ <= 114){					//ihkim    MAX 115 Byte
   1250a:	4b31      	ldr	r3, [pc, #196]	; (125d0 <ConsoleProc+0x119c>)
   1250c:	781b      	ldrb	r3, [r3, #0]
   1250e:	1c5a      	adds	r2, r3, #1
   12510:	b2d1      	uxtb	r1, r2
   12512:	4a2f      	ldr	r2, [pc, #188]	; (125d0 <ConsoleProc+0x119c>)
   12514:	7011      	strb	r1, [r2, #0]
   12516:	2b72      	cmp	r3, #114	; 0x72
   12518:	d8cc      	bhi.n	124b4 <ConsoleProc+0x1080>
											if(chkecho)	printf("%c",rxChar);
   1251a:	4b0b      	ldr	r3, [pc, #44]	; (12548 <ConsoleProc+0x1114>)
   1251c:	781b      	ldrb	r3, [r3, #0]
   1251e:	2b00      	cmp	r3, #0
   12520:	d005      	beq.n	1252e <ConsoleProc+0x10fa>
   12522:	231f      	movs	r3, #31
   12524:	18fb      	adds	r3, r7, r3
   12526:	781b      	ldrb	r3, [r3, #0]
   12528:	0018      	movs	r0, r3
   1252a:	4b2a      	ldr	r3, [pc, #168]	; (125d4 <ConsoleProc+0x11a0>)
   1252c:	4798      	blx	r3
											MiApp_WriteData(rxChar);
   1252e:	4b25      	ldr	r3, [pc, #148]	; (125c4 <ConsoleProc+0x1190>)
   12530:	781b      	ldrb	r3, [r3, #0]
   12532:	1c5a      	adds	r2, r3, #1
   12534:	b2d1      	uxtb	r1, r2
   12536:	4a23      	ldr	r2, [pc, #140]	; (125c4 <ConsoleProc+0x1190>)
   12538:	7011      	strb	r1, [r2, #0]
   1253a:	0019      	movs	r1, r3
   1253c:	4b26      	ldr	r3, [pc, #152]	; (125d8 <ConsoleProc+0x11a4>)
   1253e:	221f      	movs	r2, #31
   12540:	18ba      	adds	r2, r7, r2
   12542:	7812      	ldrb	r2, [r2, #0]
   12544:	545a      	strb	r2, [r3, r1]
							if((-1) != (rxChar = sio2host_getchar_nowait())){
   12546:	e7b5      	b.n	124b4 <ConsoleProc+0x1080>
   12548:	2000002c 	.word	0x2000002c
   1254c:	0001d770 	.word	0x0001d770
   12550:	0001782d 	.word	0x0001782d
   12554:	0000f90d 	.word	0x0000f90d
   12558:	0000c625 	.word	0x0000c625
   1255c:	0000d199 	.word	0x0000d199
   12560:	0000dc95 	.word	0x0000dc95
   12564:	0001d784 	.word	0x0001d784
   12568:	0001d79c 	.word	0x0001d79c
   1256c:	2000002e 	.word	0x2000002e
   12570:	0001d7b8 	.word	0x0001d7b8
   12574:	0001d7e8 	.word	0x0001d7e8
   12578:	00006a51 	.word	0x00006a51
   1257c:	0000ef45 	.word	0x0000ef45
   12580:	0001d7f8 	.word	0x0001d7f8
   12584:	2000151c 	.word	0x2000151c
   12588:	0000e8a1 	.word	0x0000e8a1
   1258c:	0001d700 	.word	0x0001d700
   12590:	0001d6e4 	.word	0x0001d6e4
   12594:	0001d81c 	.word	0x0001d81c
   12598:	0001d82c 	.word	0x0001d82c
   1259c:	00017905 	.word	0x00017905
   125a0:	20001150 	.word	0x20001150
   125a4:	0000e8f9 	.word	0x0000e8f9
   125a8:	0000e979 	.word	0x0000e979
   125ac:	0001d83c 	.word	0x0001d83c
   125b0:	0001d858 	.word	0x0001d858
   125b4:	0001cffc 	.word	0x0001cffc
   125b8:	0001d85c 	.word	0x0001d85c
   125bc:	20001af0 	.word	0x20001af0
   125c0:	0000d805 	.word	0x0000d805
   125c4:	200012dc 	.word	0x200012dc
   125c8:	00006a79 	.word	0x00006a79
   125cc:	0001093d 	.word	0x0001093d
   125d0:	20001b10 	.word	0x20001b10
   125d4:	00017851 	.word	0x00017851
   125d8:	200012e4 	.word	0x200012e4
						if(chkecho) printf("LPS Stop...\n\r");
   125dc:	4bde      	ldr	r3, [pc, #888]	; (12958 <ConsoleProc+0x1524>)
   125de:	781b      	ldrb	r3, [r3, #0]
   125e0:	2b00      	cmp	r3, #0
   125e2:	d003      	beq.n	125ec <ConsoleProc+0x11b8>
   125e4:	4bdd      	ldr	r3, [pc, #884]	; (1295c <ConsoleProc+0x1528>)
   125e6:	0018      	movs	r0, r3
   125e8:	4bdd      	ldr	r3, [pc, #884]	; (12960 <ConsoleProc+0x152c>)
   125ea:	4798      	blx	r3
						MiApp_ConnectionMode(DISABLE_ALL_CONN);
   125ec:	2003      	movs	r0, #3
   125ee:	4bdd      	ldr	r3, [pc, #884]	; (12964 <ConsoleProc+0x1530>)
   125f0:	4798      	blx	r3
						break;						
   125f2:	f000 fd0d 	bl	13010 <ConsoleProc+0x1bdc>
						printf("Goto Sleep Mode!\n\r");
   125f6:	4bdc      	ldr	r3, [pc, #880]	; (12968 <ConsoleProc+0x1534>)
   125f8:	0018      	movs	r0, r3
   125fa:	4bd9      	ldr	r3, [pc, #868]	; (12960 <ConsoleProc+0x152c>)
   125fc:	4798      	blx	r3
						Sleep();		
   125fe:	4bdb      	ldr	r3, [pc, #876]	; (1296c <ConsoleProc+0x1538>)
   12600:	4798      	blx	r3
						break;		
   12602:	f000 fd05 	bl	13010 <ConsoleProc+0x1bdc>
						MiApp_FlushTx();
   12606:	4bda      	ldr	r3, [pc, #872]	; (12970 <ConsoleProc+0x153c>)
   12608:	220b      	movs	r2, #11
   1260a:	701a      	strb	r2, [r3, #0]
						MiApp_WriteData(0x31);
   1260c:	4bd8      	ldr	r3, [pc, #864]	; (12970 <ConsoleProc+0x153c>)
   1260e:	781b      	ldrb	r3, [r3, #0]
   12610:	1c5a      	adds	r2, r3, #1
   12612:	b2d1      	uxtb	r1, r2
   12614:	4ad6      	ldr	r2, [pc, #856]	; (12970 <ConsoleProc+0x153c>)
   12616:	7011      	strb	r1, [r2, #0]
   12618:	001a      	movs	r2, r3
   1261a:	4bd6      	ldr	r3, [pc, #856]	; (12974 <ConsoleProc+0x1540>)
   1261c:	2131      	movs	r1, #49	; 0x31
   1261e:	5499      	strb	r1, [r3, r2]
						MiApp_WriteData(0x32);
   12620:	4bd3      	ldr	r3, [pc, #844]	; (12970 <ConsoleProc+0x153c>)
   12622:	781b      	ldrb	r3, [r3, #0]
   12624:	1c5a      	adds	r2, r3, #1
   12626:	b2d1      	uxtb	r1, r2
   12628:	4ad1      	ldr	r2, [pc, #836]	; (12970 <ConsoleProc+0x153c>)
   1262a:	7011      	strb	r1, [r2, #0]
   1262c:	001a      	movs	r2, r3
   1262e:	4bd1      	ldr	r3, [pc, #836]	; (12974 <ConsoleProc+0x1540>)
   12630:	2132      	movs	r1, #50	; 0x32
   12632:	5499      	strb	r1, [r3, r2]
						MiApp_WriteData(0x33);
   12634:	4bce      	ldr	r3, [pc, #824]	; (12970 <ConsoleProc+0x153c>)
   12636:	781b      	ldrb	r3, [r3, #0]
   12638:	1c5a      	adds	r2, r3, #1
   1263a:	b2d1      	uxtb	r1, r2
   1263c:	4acc      	ldr	r2, [pc, #816]	; (12970 <ConsoleProc+0x153c>)
   1263e:	7011      	strb	r1, [r2, #0]
   12640:	001a      	movs	r2, r3
   12642:	4bcc      	ldr	r3, [pc, #816]	; (12974 <ConsoleProc+0x1540>)
   12644:	2133      	movs	r1, #51	; 0x33
   12646:	5499      	strb	r1, [r3, r2]
						MiApp_WriteData(0x34);
   12648:	4bc9      	ldr	r3, [pc, #804]	; (12970 <ConsoleProc+0x153c>)
   1264a:	781b      	ldrb	r3, [r3, #0]
   1264c:	1c5a      	adds	r2, r3, #1
   1264e:	b2d1      	uxtb	r1, r2
   12650:	4ac7      	ldr	r2, [pc, #796]	; (12970 <ConsoleProc+0x153c>)
   12652:	7011      	strb	r1, [r2, #0]
   12654:	001a      	movs	r2, r3
   12656:	4bc7      	ldr	r3, [pc, #796]	; (12974 <ConsoleProc+0x1540>)
   12658:	2134      	movs	r1, #52	; 0x34
   1265a:	5499      	strb	r1, [r3, r2]
						MiApp_WriteData(0x35);
   1265c:	4bc4      	ldr	r3, [pc, #784]	; (12970 <ConsoleProc+0x153c>)
   1265e:	781b      	ldrb	r3, [r3, #0]
   12660:	1c5a      	adds	r2, r3, #1
   12662:	b2d1      	uxtb	r1, r2
   12664:	4ac2      	ldr	r2, [pc, #776]	; (12970 <ConsoleProc+0x153c>)
   12666:	7011      	strb	r1, [r2, #0]
   12668:	001a      	movs	r2, r3
   1266a:	4bc2      	ldr	r3, [pc, #776]	; (12974 <ConsoleProc+0x1540>)
   1266c:	2135      	movs	r1, #53	; 0x35
   1266e:	5499      	strb	r1, [r3, r2]
						if(RF_OUTPUT==20){
   12670:	4bc1      	ldr	r3, [pc, #772]	; (12978 <ConsoleProc+0x1544>)
   12672:	781b      	ldrb	r3, [r3, #0]
   12674:	2b14      	cmp	r3, #20
   12676:	d104      	bne.n	12682 <ConsoleProc+0x124e>
							port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_INACTIVE);//kwlee 200721
   12678:	2100      	movs	r1, #0
   1267a:	200d      	movs	r0, #13
   1267c:	4bbf      	ldr	r3, [pc, #764]	; (1297c <ConsoleProc+0x1548>)
   1267e:	4798      	blx	r3
   12680:	e003      	b.n	1268a <ConsoleProc+0x1256>
							port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_ACTIVE);//kwlee 200727
   12682:	2101      	movs	r1, #1
   12684:	200d      	movs	r0, #13
   12686:	4bbd      	ldr	r3, [pc, #756]	; (1297c <ConsoleProc+0x1548>)
   12688:	4798      	blx	r3
						MiApp_BroadcastPacket(false);
   1268a:	2000      	movs	r0, #0
   1268c:	4bbc      	ldr	r3, [pc, #752]	; (12980 <ConsoleProc+0x154c>)
   1268e:	4798      	blx	r3
						if(chkecho) printf("Broadcast...3\r\n");
   12690:	4bb1      	ldr	r3, [pc, #708]	; (12958 <ConsoleProc+0x1524>)
   12692:	781b      	ldrb	r3, [r3, #0]
   12694:	2b00      	cmp	r3, #0
   12696:	d003      	beq.n	126a0 <ConsoleProc+0x126c>
   12698:	4bba      	ldr	r3, [pc, #744]	; (12984 <ConsoleProc+0x1550>)
   1269a:	0018      	movs	r0, r3
   1269c:	4bba      	ldr	r3, [pc, #744]	; (12988 <ConsoleProc+0x1554>)
   1269e:	4798      	blx	r3
						port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_ACTIVE);//kwlee 200721
   126a0:	2101      	movs	r1, #1
   126a2:	200d      	movs	r0, #13
   126a4:	4bb5      	ldr	r3, [pc, #724]	; (1297c <ConsoleProc+0x1548>)
   126a6:	4798      	blx	r3
						SX1276_RX_INIT();
   126a8:	4bb8      	ldr	r3, [pc, #736]	; (1298c <ConsoleProc+0x1558>)
   126aa:	4798      	blx	r3
						break;
   126ac:	f000 fcb0 	bl	13010 <ConsoleProc+0x1bdc>
						MiApp_FlushTx();
   126b0:	4baf      	ldr	r3, [pc, #700]	; (12970 <ConsoleProc+0x153c>)
   126b2:	220b      	movs	r2, #11
   126b4:	701a      	strb	r2, [r3, #0]
						MiApp_WriteData(0x36);
   126b6:	4bae      	ldr	r3, [pc, #696]	; (12970 <ConsoleProc+0x153c>)
   126b8:	781b      	ldrb	r3, [r3, #0]
   126ba:	1c5a      	adds	r2, r3, #1
   126bc:	b2d1      	uxtb	r1, r2
   126be:	4aac      	ldr	r2, [pc, #688]	; (12970 <ConsoleProc+0x153c>)
   126c0:	7011      	strb	r1, [r2, #0]
   126c2:	001a      	movs	r2, r3
   126c4:	4bab      	ldr	r3, [pc, #684]	; (12974 <ConsoleProc+0x1540>)
   126c6:	2136      	movs	r1, #54	; 0x36
   126c8:	5499      	strb	r1, [r3, r2]
						MiApp_WriteData(0x37);
   126ca:	4ba9      	ldr	r3, [pc, #676]	; (12970 <ConsoleProc+0x153c>)
   126cc:	781b      	ldrb	r3, [r3, #0]
   126ce:	1c5a      	adds	r2, r3, #1
   126d0:	b2d1      	uxtb	r1, r2
   126d2:	4aa7      	ldr	r2, [pc, #668]	; (12970 <ConsoleProc+0x153c>)
   126d4:	7011      	strb	r1, [r2, #0]
   126d6:	001a      	movs	r2, r3
   126d8:	4ba6      	ldr	r3, [pc, #664]	; (12974 <ConsoleProc+0x1540>)
   126da:	2137      	movs	r1, #55	; 0x37
   126dc:	5499      	strb	r1, [r3, r2]
						MiApp_WriteData(0x38);
   126de:	4ba4      	ldr	r3, [pc, #656]	; (12970 <ConsoleProc+0x153c>)
   126e0:	781b      	ldrb	r3, [r3, #0]
   126e2:	1c5a      	adds	r2, r3, #1
   126e4:	b2d1      	uxtb	r1, r2
   126e6:	4aa2      	ldr	r2, [pc, #648]	; (12970 <ConsoleProc+0x153c>)
   126e8:	7011      	strb	r1, [r2, #0]
   126ea:	001a      	movs	r2, r3
   126ec:	4ba1      	ldr	r3, [pc, #644]	; (12974 <ConsoleProc+0x1540>)
   126ee:	2138      	movs	r1, #56	; 0x38
   126f0:	5499      	strb	r1, [r3, r2]
						MiApp_WriteData(0x39);
   126f2:	4b9f      	ldr	r3, [pc, #636]	; (12970 <ConsoleProc+0x153c>)
   126f4:	781b      	ldrb	r3, [r3, #0]
   126f6:	1c5a      	adds	r2, r3, #1
   126f8:	b2d1      	uxtb	r1, r2
   126fa:	4a9d      	ldr	r2, [pc, #628]	; (12970 <ConsoleProc+0x153c>)
   126fc:	7011      	strb	r1, [r2, #0]
   126fe:	001a      	movs	r2, r3
   12700:	4b9c      	ldr	r3, [pc, #624]	; (12974 <ConsoleProc+0x1540>)
   12702:	2139      	movs	r1, #57	; 0x39
   12704:	5499      	strb	r1, [r3, r2]
						MiApp_WriteData(0x40);
   12706:	4b9a      	ldr	r3, [pc, #616]	; (12970 <ConsoleProc+0x153c>)
   12708:	781b      	ldrb	r3, [r3, #0]
   1270a:	1c5a      	adds	r2, r3, #1
   1270c:	b2d1      	uxtb	r1, r2
   1270e:	4a98      	ldr	r2, [pc, #608]	; (12970 <ConsoleProc+0x153c>)
   12710:	7011      	strb	r1, [r2, #0]
   12712:	001a      	movs	r2, r3
   12714:	4b97      	ldr	r3, [pc, #604]	; (12974 <ConsoleProc+0x1540>)
   12716:	2140      	movs	r1, #64	; 0x40
   12718:	5499      	strb	r1, [r3, r2]
						if(chkecho) printf("Input Connection Index:");
   1271a:	4b8f      	ldr	r3, [pc, #572]	; (12958 <ConsoleProc+0x1524>)
   1271c:	781b      	ldrb	r3, [r3, #0]
   1271e:	2b00      	cmp	r3, #0
   12720:	d003      	beq.n	1272a <ConsoleProc+0x12f6>
   12722:	4b9b      	ldr	r3, [pc, #620]	; (12990 <ConsoleProc+0x155c>)
   12724:	0018      	movs	r0, r3
   12726:	4b8e      	ldr	r3, [pc, #568]	; (12960 <ConsoleProc+0x152c>)
   12728:	4798      	blx	r3
						rxChar = sio2host_getchar();
   1272a:	231f      	movs	r3, #31
   1272c:	18fc      	adds	r4, r7, r3
   1272e:	4b99      	ldr	r3, [pc, #612]	; (12994 <ConsoleProc+0x1560>)
   12730:	4798      	blx	r3
   12732:	0003      	movs	r3, r0
   12734:	7023      	strb	r3, [r4, #0]
						if(chkecho) printf(" %c\r\n", rxChar);
   12736:	4b88      	ldr	r3, [pc, #544]	; (12958 <ConsoleProc+0x1524>)
   12738:	781b      	ldrb	r3, [r3, #0]
   1273a:	2b00      	cmp	r3, #0
   1273c:	d007      	beq.n	1274e <ConsoleProc+0x131a>
   1273e:	231f      	movs	r3, #31
   12740:	18fb      	adds	r3, r7, r3
   12742:	781a      	ldrb	r2, [r3, #0]
   12744:	4b94      	ldr	r3, [pc, #592]	; (12998 <ConsoleProc+0x1564>)
   12746:	0011      	movs	r1, r2
   12748:	0018      	movs	r0, r3
   1274a:	4b85      	ldr	r3, [pc, #532]	; (12960 <ConsoleProc+0x152c>)
   1274c:	4798      	blx	r3
						rxChar = rxChar - 0x30;
   1274e:	231f      	movs	r3, #31
   12750:	18fb      	adds	r3, r7, r3
   12752:	221f      	movs	r2, #31
   12754:	18ba      	adds	r2, r7, r2
   12756:	7812      	ldrb	r2, [r2, #0]
   12758:	3a30      	subs	r2, #48	; 0x30
   1275a:	701a      	strb	r2, [r3, #0]
						if(RF_OUTPUT==20){
   1275c:	4b86      	ldr	r3, [pc, #536]	; (12978 <ConsoleProc+0x1544>)
   1275e:	781b      	ldrb	r3, [r3, #0]
   12760:	2b14      	cmp	r3, #20
   12762:	d104      	bne.n	1276e <ConsoleProc+0x133a>
							port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_INACTIVE);//kwlee 200721		//ihkim 20220510
   12764:	2100      	movs	r1, #0
   12766:	200d      	movs	r0, #13
   12768:	4b84      	ldr	r3, [pc, #528]	; (1297c <ConsoleProc+0x1548>)
   1276a:	4798      	blx	r3
   1276c:	e003      	b.n	12776 <ConsoleProc+0x1342>
							port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_ACTIVE);//kwlee 200727		//ihkim 20220510
   1276e:	2101      	movs	r1, #1
   12770:	200d      	movs	r0, #13
   12772:	4b82      	ldr	r3, [pc, #520]	; (1297c <ConsoleProc+0x1548>)
   12774:	4798      	blx	r3
						rlt = MiApp_UnicastConnection(rxChar,false);
   12776:	2317      	movs	r3, #23
   12778:	18fc      	adds	r4, r7, r3
   1277a:	231f      	movs	r3, #31
   1277c:	18fb      	adds	r3, r7, r3
   1277e:	781b      	ldrb	r3, [r3, #0]
   12780:	2100      	movs	r1, #0
   12782:	0018      	movs	r0, r3
   12784:	4b85      	ldr	r3, [pc, #532]	; (1299c <ConsoleProc+0x1568>)
   12786:	4798      	blx	r3
   12788:	0003      	movs	r3, r0
   1278a:	7023      	strb	r3, [r4, #0]
						if(rlt){
   1278c:	2317      	movs	r3, #23
   1278e:	18fb      	adds	r3, r7, r3
   12790:	781b      	ldrb	r3, [r3, #0]
   12792:	2b00      	cmp	r3, #0
   12794:	d008      	beq.n	127a8 <ConsoleProc+0x1374>
							if(chkecho) printf("Unicast Success...\r\n");
   12796:	4b70      	ldr	r3, [pc, #448]	; (12958 <ConsoleProc+0x1524>)
   12798:	781b      	ldrb	r3, [r3, #0]
   1279a:	2b00      	cmp	r3, #0
   1279c:	d00c      	beq.n	127b8 <ConsoleProc+0x1384>
   1279e:	4b80      	ldr	r3, [pc, #512]	; (129a0 <ConsoleProc+0x156c>)
   127a0:	0018      	movs	r0, r3
   127a2:	4b79      	ldr	r3, [pc, #484]	; (12988 <ConsoleProc+0x1554>)
   127a4:	4798      	blx	r3
   127a6:	e007      	b.n	127b8 <ConsoleProc+0x1384>
							if(chkecho) printf("Unicast fail...\r\n");
   127a8:	4b6b      	ldr	r3, [pc, #428]	; (12958 <ConsoleProc+0x1524>)
   127aa:	781b      	ldrb	r3, [r3, #0]
   127ac:	2b00      	cmp	r3, #0
   127ae:	d003      	beq.n	127b8 <ConsoleProc+0x1384>
   127b0:	4b7c      	ldr	r3, [pc, #496]	; (129a4 <ConsoleProc+0x1570>)
   127b2:	0018      	movs	r0, r3
   127b4:	4b74      	ldr	r3, [pc, #464]	; (12988 <ConsoleProc+0x1554>)
   127b6:	4798      	blx	r3
						SX1276_RX_INIT();
   127b8:	4b74      	ldr	r3, [pc, #464]	; (1298c <ConsoleProc+0x1558>)
   127ba:	4798      	blx	r3
						break;
   127bc:	f000 fc28 	bl	13010 <ConsoleProc+0x1bdc>
						MiApp_FlushTx();
   127c0:	4b6b      	ldr	r3, [pc, #428]	; (12970 <ConsoleProc+0x153c>)
   127c2:	220b      	movs	r2, #11
   127c4:	701a      	strb	r2, [r3, #0]
						MiApp_WriteData(0x36);
   127c6:	4b6a      	ldr	r3, [pc, #424]	; (12970 <ConsoleProc+0x153c>)
   127c8:	781b      	ldrb	r3, [r3, #0]
   127ca:	1c5a      	adds	r2, r3, #1
   127cc:	b2d1      	uxtb	r1, r2
   127ce:	4a68      	ldr	r2, [pc, #416]	; (12970 <ConsoleProc+0x153c>)
   127d0:	7011      	strb	r1, [r2, #0]
   127d2:	001a      	movs	r2, r3
   127d4:	4b67      	ldr	r3, [pc, #412]	; (12974 <ConsoleProc+0x1540>)
   127d6:	2136      	movs	r1, #54	; 0x36
   127d8:	5499      	strb	r1, [r3, r2]
						MiApp_WriteData(0x37);
   127da:	4b65      	ldr	r3, [pc, #404]	; (12970 <ConsoleProc+0x153c>)
   127dc:	781b      	ldrb	r3, [r3, #0]
   127de:	1c5a      	adds	r2, r3, #1
   127e0:	b2d1      	uxtb	r1, r2
   127e2:	4a63      	ldr	r2, [pc, #396]	; (12970 <ConsoleProc+0x153c>)
   127e4:	7011      	strb	r1, [r2, #0]
   127e6:	001a      	movs	r2, r3
   127e8:	4b62      	ldr	r3, [pc, #392]	; (12974 <ConsoleProc+0x1540>)
   127ea:	2137      	movs	r1, #55	; 0x37
   127ec:	5499      	strb	r1, [r3, r2]
						MiApp_WriteData(0x38);
   127ee:	4b60      	ldr	r3, [pc, #384]	; (12970 <ConsoleProc+0x153c>)
   127f0:	781b      	ldrb	r3, [r3, #0]
   127f2:	1c5a      	adds	r2, r3, #1
   127f4:	b2d1      	uxtb	r1, r2
   127f6:	4a5e      	ldr	r2, [pc, #376]	; (12970 <ConsoleProc+0x153c>)
   127f8:	7011      	strb	r1, [r2, #0]
   127fa:	001a      	movs	r2, r3
   127fc:	4b5d      	ldr	r3, [pc, #372]	; (12974 <ConsoleProc+0x1540>)
   127fe:	2138      	movs	r1, #56	; 0x38
   12800:	5499      	strb	r1, [r3, r2]
						MiApp_WriteData(0x39);
   12802:	4b5b      	ldr	r3, [pc, #364]	; (12970 <ConsoleProc+0x153c>)
   12804:	781b      	ldrb	r3, [r3, #0]
   12806:	1c5a      	adds	r2, r3, #1
   12808:	b2d1      	uxtb	r1, r2
   1280a:	4a59      	ldr	r2, [pc, #356]	; (12970 <ConsoleProc+0x153c>)
   1280c:	7011      	strb	r1, [r2, #0]
   1280e:	001a      	movs	r2, r3
   12810:	4b58      	ldr	r3, [pc, #352]	; (12974 <ConsoleProc+0x1540>)
   12812:	2139      	movs	r1, #57	; 0x39
   12814:	5499      	strb	r1, [r3, r2]
						MiApp_WriteData(0x40);
   12816:	4b56      	ldr	r3, [pc, #344]	; (12970 <ConsoleProc+0x153c>)
   12818:	781b      	ldrb	r3, [r3, #0]
   1281a:	1c5a      	adds	r2, r3, #1
   1281c:	b2d1      	uxtb	r1, r2
   1281e:	4a54      	ldr	r2, [pc, #336]	; (12970 <ConsoleProc+0x153c>)
   12820:	7011      	strb	r1, [r2, #0]
   12822:	001a      	movs	r2, r3
   12824:	4b53      	ldr	r3, [pc, #332]	; (12974 <ConsoleProc+0x1540>)
   12826:	2140      	movs	r1, #64	; 0x40
   12828:	5499      	strb	r1, [r3, r2]
						if(chkecho) printf("Input Short Address: 0x");
   1282a:	4b4b      	ldr	r3, [pc, #300]	; (12958 <ConsoleProc+0x1524>)
   1282c:	781b      	ldrb	r3, [r3, #0]
   1282e:	2b00      	cmp	r3, #0
   12830:	d003      	beq.n	1283a <ConsoleProc+0x1406>
   12832:	4b5d      	ldr	r3, [pc, #372]	; (129a8 <ConsoleProc+0x1574>)
   12834:	0018      	movs	r0, r3
   12836:	4b4a      	ldr	r3, [pc, #296]	; (12960 <ConsoleProc+0x152c>)
   12838:	4798      	blx	r3
						memset(rxStr,0x00,sizeof(rxStr));
   1283a:	1d3b      	adds	r3, r7, #4
   1283c:	2211      	movs	r2, #17
   1283e:	2100      	movs	r1, #0
   12840:	0018      	movs	r0, r3
   12842:	4b5a      	ldr	r3, [pc, #360]	; (129ac <ConsoleProc+0x1578>)
   12844:	4798      	blx	r3
						for(i=0;i<4;i++){
   12846:	232f      	movs	r3, #47	; 0x2f
   12848:	18fb      	adds	r3, r7, r3
   1284a:	2200      	movs	r2, #0
   1284c:	701a      	strb	r2, [r3, #0]
   1284e:	e01b      	b.n	12888 <ConsoleProc+0x1454>
							rxStr[i] = sio2host_getchar();
   12850:	232f      	movs	r3, #47	; 0x2f
   12852:	18fb      	adds	r3, r7, r3
   12854:	781c      	ldrb	r4, [r3, #0]
   12856:	4b4f      	ldr	r3, [pc, #316]	; (12994 <ConsoleProc+0x1560>)
   12858:	4798      	blx	r3
   1285a:	0003      	movs	r3, r0
   1285c:	001a      	movs	r2, r3
   1285e:	1d3b      	adds	r3, r7, #4
   12860:	551a      	strb	r2, [r3, r4]
							if(chkecho) printf("%c",rxStr[i]);
   12862:	4b3d      	ldr	r3, [pc, #244]	; (12958 <ConsoleProc+0x1524>)
   12864:	781b      	ldrb	r3, [r3, #0]
   12866:	2b00      	cmp	r3, #0
   12868:	d007      	beq.n	1287a <ConsoleProc+0x1446>
   1286a:	232f      	movs	r3, #47	; 0x2f
   1286c:	18fb      	adds	r3, r7, r3
   1286e:	781b      	ldrb	r3, [r3, #0]
   12870:	1d3a      	adds	r2, r7, #4
   12872:	5cd3      	ldrb	r3, [r2, r3]
   12874:	0018      	movs	r0, r3
   12876:	4b4e      	ldr	r3, [pc, #312]	; (129b0 <ConsoleProc+0x157c>)
   12878:	4798      	blx	r3
						for(i=0;i<4;i++){
   1287a:	232f      	movs	r3, #47	; 0x2f
   1287c:	18fb      	adds	r3, r7, r3
   1287e:	781a      	ldrb	r2, [r3, #0]
   12880:	232f      	movs	r3, #47	; 0x2f
   12882:	18fb      	adds	r3, r7, r3
   12884:	3201      	adds	r2, #1
   12886:	701a      	strb	r2, [r3, #0]
   12888:	232f      	movs	r3, #47	; 0x2f
   1288a:	18fb      	adds	r3, r7, r3
   1288c:	781b      	ldrb	r3, [r3, #0]
   1288e:	2b03      	cmp	r3, #3
   12890:	d9de      	bls.n	12850 <ConsoleProc+0x141c>
						if(chkecho) printf("\n\r");
   12892:	4b31      	ldr	r3, [pc, #196]	; (12958 <ConsoleProc+0x1524>)
   12894:	781b      	ldrb	r3, [r3, #0]
   12896:	2b00      	cmp	r3, #0
   12898:	d003      	beq.n	128a2 <ConsoleProc+0x146e>
   1289a:	4b46      	ldr	r3, [pc, #280]	; (129b4 <ConsoleProc+0x1580>)
   1289c:	0018      	movs	r0, r3
   1289e:	4b30      	ldr	r3, [pc, #192]	; (12960 <ConsoleProc+0x152c>)
   128a0:	4798      	blx	r3
						dst.Val = strtoul(rxStr,NULL,16);
   128a2:	1d3b      	adds	r3, r7, #4
   128a4:	2210      	movs	r2, #16
   128a6:	2100      	movs	r1, #0
   128a8:	0018      	movs	r0, r3
   128aa:	4b43      	ldr	r3, [pc, #268]	; (129b8 <ConsoleProc+0x1584>)
   128ac:	4798      	blx	r3
   128ae:	0003      	movs	r3, r0
   128b0:	b29a      	uxth	r2, r3
   128b2:	003b      	movs	r3, r7
   128b4:	801a      	strh	r2, [r3, #0]
						if(RF_OUTPUT==20){
   128b6:	4b30      	ldr	r3, [pc, #192]	; (12978 <ConsoleProc+0x1544>)
   128b8:	781b      	ldrb	r3, [r3, #0]
   128ba:	2b14      	cmp	r3, #20
   128bc:	d104      	bne.n	128c8 <ConsoleProc+0x1494>
							port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_INACTIVE);//kwlee 200721		//ihkim 20220510
   128be:	2100      	movs	r1, #0
   128c0:	200d      	movs	r0, #13
   128c2:	4b2e      	ldr	r3, [pc, #184]	; (1297c <ConsoleProc+0x1548>)
   128c4:	4798      	blx	r3
   128c6:	e003      	b.n	128d0 <ConsoleProc+0x149c>
							port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_ACTIVE);//kwlee 200727		//ihkim 20220510
   128c8:	2101      	movs	r1, #1
   128ca:	200d      	movs	r0, #13
   128cc:	4b2b      	ldr	r3, [pc, #172]	; (1297c <ConsoleProc+0x1548>)
   128ce:	4798      	blx	r3
						rlt = UnicastShortAddress(dst.v);
   128d0:	003b      	movs	r3, r7
   128d2:	0018      	movs	r0, r3
   128d4:	4b39      	ldr	r3, [pc, #228]	; (129bc <ConsoleProc+0x1588>)
   128d6:	4798      	blx	r3
   128d8:	0003      	movs	r3, r0
   128da:	001a      	movs	r2, r3
   128dc:	2317      	movs	r3, #23
   128de:	18fb      	adds	r3, r7, r3
   128e0:	701a      	strb	r2, [r3, #0]
						if(rlt){
   128e2:	2317      	movs	r3, #23
   128e4:	18fb      	adds	r3, r7, r3
   128e6:	781b      	ldrb	r3, [r3, #0]
   128e8:	2b00      	cmp	r3, #0
   128ea:	d008      	beq.n	128fe <ConsoleProc+0x14ca>
							if(chkecho) printf("Unicast Success...\r\n");
   128ec:	4b1a      	ldr	r3, [pc, #104]	; (12958 <ConsoleProc+0x1524>)
   128ee:	781b      	ldrb	r3, [r3, #0]
   128f0:	2b00      	cmp	r3, #0
   128f2:	d00c      	beq.n	1290e <ConsoleProc+0x14da>
   128f4:	4b2a      	ldr	r3, [pc, #168]	; (129a0 <ConsoleProc+0x156c>)
   128f6:	0018      	movs	r0, r3
   128f8:	4b23      	ldr	r3, [pc, #140]	; (12988 <ConsoleProc+0x1554>)
   128fa:	4798      	blx	r3
   128fc:	e007      	b.n	1290e <ConsoleProc+0x14da>
							if(chkecho) printf("Unicast fail...\r\n");
   128fe:	4b16      	ldr	r3, [pc, #88]	; (12958 <ConsoleProc+0x1524>)
   12900:	781b      	ldrb	r3, [r3, #0]
   12902:	2b00      	cmp	r3, #0
   12904:	d003      	beq.n	1290e <ConsoleProc+0x14da>
   12906:	4b27      	ldr	r3, [pc, #156]	; (129a4 <ConsoleProc+0x1570>)
   12908:	0018      	movs	r0, r3
   1290a:	4b1f      	ldr	r3, [pc, #124]	; (12988 <ConsoleProc+0x1554>)
   1290c:	4798      	blx	r3
						SX1276_RX_INIT();
   1290e:	4b1f      	ldr	r3, [pc, #124]	; (1298c <ConsoleProc+0x1558>)
   12910:	4798      	blx	r3
						break;	
   12912:	f000 fb7d 	bl	13010 <ConsoleProc+0x1bdc>
						if(broadcast_test_f){
   12916:	4b2a      	ldr	r3, [pc, #168]	; (129c0 <ConsoleProc+0x158c>)
   12918:	781b      	ldrb	r3, [r3, #0]
   1291a:	2b00      	cmp	r3, #0
   1291c:	d00b      	beq.n	12936 <ConsoleProc+0x1502>
							if(chkecho) printf("Broadcast Test Stop !\n\r");
   1291e:	4b0e      	ldr	r3, [pc, #56]	; (12958 <ConsoleProc+0x1524>)
   12920:	781b      	ldrb	r3, [r3, #0]
   12922:	2b00      	cmp	r3, #0
   12924:	d003      	beq.n	1292e <ConsoleProc+0x14fa>
   12926:	4b27      	ldr	r3, [pc, #156]	; (129c4 <ConsoleProc+0x1590>)
   12928:	0018      	movs	r0, r3
   1292a:	4b0d      	ldr	r3, [pc, #52]	; (12960 <ConsoleProc+0x152c>)
   1292c:	4798      	blx	r3
							broadcast_test_f = 0;
   1292e:	4b24      	ldr	r3, [pc, #144]	; (129c0 <ConsoleProc+0x158c>)
   12930:	2200      	movs	r2, #0
   12932:	701a      	strb	r2, [r3, #0]
						break;		
   12934:	e36c      	b.n	13010 <ConsoleProc+0x1bdc>
							broadcast_test_f = 1;
   12936:	4b22      	ldr	r3, [pc, #136]	; (129c0 <ConsoleProc+0x158c>)
   12938:	2201      	movs	r2, #1
   1293a:	701a      	strb	r2, [r3, #0]
							if(chkecho) printf("Broadcast Test Start with 26 Byte !\n\r");
   1293c:	4b06      	ldr	r3, [pc, #24]	; (12958 <ConsoleProc+0x1524>)
   1293e:	781b      	ldrb	r3, [r3, #0]
   12940:	2b00      	cmp	r3, #0
   12942:	d003      	beq.n	1294c <ConsoleProc+0x1518>
   12944:	4b20      	ldr	r3, [pc, #128]	; (129c8 <ConsoleProc+0x1594>)
   12946:	0018      	movs	r0, r3
   12948:	4b05      	ldr	r3, [pc, #20]	; (12960 <ConsoleProc+0x152c>)
   1294a:	4798      	blx	r3
							Time_Buffer2 = 200000;
   1294c:	4a1f      	ldr	r2, [pc, #124]	; (129cc <ConsoleProc+0x1598>)
   1294e:	4b20      	ldr	r3, [pc, #128]	; (129d0 <ConsoleProc+0x159c>)
   12950:	2400      	movs	r4, #0
   12952:	6013      	str	r3, [r2, #0]
   12954:	6054      	str	r4, [r2, #4]
						break;		
   12956:	e35b      	b.n	13010 <ConsoleProc+0x1bdc>
   12958:	2000002c 	.word	0x2000002c
   1295c:	0001d874 	.word	0x0001d874
   12960:	0001782d 	.word	0x0001782d
   12964:	0000d199 	.word	0x0000d199
   12968:	0001d884 	.word	0x0001d884
   1296c:	00014249 	.word	0x00014249
   12970:	200012dc 	.word	0x200012dc
   12974:	200012e4 	.word	0x200012e4
   12978:	2000002e 	.word	0x2000002e
   1297c:	0001093d 	.word	0x0001093d
   12980:	0000d805 	.word	0x0000d805
   12984:	0001d898 	.word	0x0001d898
   12988:	00017905 	.word	0x00017905
   1298c:	0000f90d 	.word	0x0000f90d
   12990:	0001d8a8 	.word	0x0001d8a8
   12994:	00006a51 	.word	0x00006a51
   12998:	0001d8c0 	.word	0x0001d8c0
   1299c:	0000d939 	.word	0x0000d939
   129a0:	0001d8c8 	.word	0x0001d8c8
   129a4:	0001d8dc 	.word	0x0001d8dc
   129a8:	0001d8f0 	.word	0x0001d8f0
   129ac:	00017799 	.word	0x00017799
   129b0:	00017851 	.word	0x00017851
   129b4:	0001cffc 	.word	0x0001cffc
   129b8:	00017cb1 	.word	0x00017cb1
   129bc:	0000db3d 	.word	0x0000db3d
   129c0:	20000c7f 	.word	0x20000c7f
   129c4:	0001d908 	.word	0x0001d908
   129c8:	0001d920 	.word	0x0001d920
   129cc:	20001ae0 	.word	0x20001ae0
   129d0:	00030d40 	.word	0x00030d40
						Time_Counter = 0;
   129d4:	4bc4      	ldr	r3, [pc, #784]	; (12ce8 <ConsoleProc+0x18b4>)
   129d6:	2200      	movs	r2, #0
   129d8:	601a      	str	r2, [r3, #0]
						error_count=0;
   129da:	4bc4      	ldr	r3, [pc, #784]	; (12cec <ConsoleProc+0x18b8>)
   129dc:	2200      	movs	r2, #0
   129de:	601a      	str	r2, [r3, #0]
						data_count = 0;
   129e0:	4bc3      	ldr	r3, [pc, #780]	; (12cf0 <ConsoleProc+0x18bc>)
   129e2:	2200      	movs	r2, #0
   129e4:	601a      	str	r2, [r3, #0]
						if(unicast_test_f){
   129e6:	4bc3      	ldr	r3, [pc, #780]	; (12cf4 <ConsoleProc+0x18c0>)
   129e8:	781b      	ldrb	r3, [r3, #0]
   129ea:	2b00      	cmp	r3, #0
   129ec:	d00b      	beq.n	12a06 <ConsoleProc+0x15d2>
							unicast_test_f = 0;
   129ee:	4bc1      	ldr	r3, [pc, #772]	; (12cf4 <ConsoleProc+0x18c0>)
   129f0:	2200      	movs	r2, #0
   129f2:	701a      	strb	r2, [r3, #0]
							if(chkecho) printf("Unicast Test Stop !\n\r");
   129f4:	4bc0      	ldr	r3, [pc, #768]	; (12cf8 <ConsoleProc+0x18c4>)
   129f6:	781b      	ldrb	r3, [r3, #0]
   129f8:	2b00      	cmp	r3, #0
   129fa:	d00f      	beq.n	12a1c <ConsoleProc+0x15e8>
   129fc:	4bbf      	ldr	r3, [pc, #764]	; (12cfc <ConsoleProc+0x18c8>)
   129fe:	0018      	movs	r0, r3
   12a00:	4bbf      	ldr	r3, [pc, #764]	; (12d00 <ConsoleProc+0x18cc>)
   12a02:	4798      	blx	r3
   12a04:	e00a      	b.n	12a1c <ConsoleProc+0x15e8>
							unicast_test_f = 1;
   12a06:	4bbb      	ldr	r3, [pc, #748]	; (12cf4 <ConsoleProc+0x18c0>)
   12a08:	2201      	movs	r2, #1
   12a0a:	701a      	strb	r2, [r3, #0]
							if(chkecho) printf("Unicast Test Start with 26 Byte !\n\r");
   12a0c:	4bba      	ldr	r3, [pc, #744]	; (12cf8 <ConsoleProc+0x18c4>)
   12a0e:	781b      	ldrb	r3, [r3, #0]
   12a10:	2b00      	cmp	r3, #0
   12a12:	d003      	beq.n	12a1c <ConsoleProc+0x15e8>
   12a14:	4bbb      	ldr	r3, [pc, #748]	; (12d04 <ConsoleProc+0x18d0>)
   12a16:	0018      	movs	r0, r3
   12a18:	4bb9      	ldr	r3, [pc, #740]	; (12d00 <ConsoleProc+0x18cc>)
   12a1a:	4798      	blx	r3
						Time_Buffer2 = 200000;
   12a1c:	4aba      	ldr	r2, [pc, #744]	; (12d08 <ConsoleProc+0x18d4>)
   12a1e:	4bbb      	ldr	r3, [pc, #748]	; (12d0c <ConsoleProc+0x18d8>)
   12a20:	2400      	movs	r4, #0
   12a22:	6013      	str	r3, [r2, #0]
   12a24:	6054      	str	r4, [r2, #4]
						break;		
   12a26:	e2f3      	b.n	13010 <ConsoleProc+0x1bdc>
						if(chkecho) printf("USART Borate Input (ex, 1=2400, 2=9600, 3=14400, 4=19200, 5=38400, 6=57600, 7=115200)\n\r");
   12a28:	4bb3      	ldr	r3, [pc, #716]	; (12cf8 <ConsoleProc+0x18c4>)
   12a2a:	781b      	ldrb	r3, [r3, #0]
   12a2c:	2b00      	cmp	r3, #0
   12a2e:	d003      	beq.n	12a38 <ConsoleProc+0x1604>
   12a30:	4bb7      	ldr	r3, [pc, #732]	; (12d10 <ConsoleProc+0x18dc>)
   12a32:	0018      	movs	r0, r3
   12a34:	4bb2      	ldr	r3, [pc, #712]	; (12d00 <ConsoleProc+0x18cc>)
   12a36:	4798      	blx	r3
						rxChar = sio2host_getchar();
   12a38:	231f      	movs	r3, #31
   12a3a:	18fc      	adds	r4, r7, r3
   12a3c:	4bb5      	ldr	r3, [pc, #724]	; (12d14 <ConsoleProc+0x18e0>)
   12a3e:	4798      	blx	r3
   12a40:	0003      	movs	r3, r0
   12a42:	7023      	strb	r3, [r4, #0]
						if(chkecho) printf(" %c\r\n", rxChar);			
   12a44:	4bac      	ldr	r3, [pc, #688]	; (12cf8 <ConsoleProc+0x18c4>)
   12a46:	781b      	ldrb	r3, [r3, #0]
   12a48:	2b00      	cmp	r3, #0
   12a4a:	d007      	beq.n	12a5c <ConsoleProc+0x1628>
   12a4c:	231f      	movs	r3, #31
   12a4e:	18fb      	adds	r3, r7, r3
   12a50:	781a      	ldrb	r2, [r3, #0]
   12a52:	4bb1      	ldr	r3, [pc, #708]	; (12d18 <ConsoleProc+0x18e4>)
   12a54:	0011      	movs	r1, r2
   12a56:	0018      	movs	r0, r3
   12a58:	4ba9      	ldr	r3, [pc, #676]	; (12d00 <ConsoleProc+0x18cc>)
   12a5a:	4798      	blx	r3
						memset(ConnectionTable,0x00,sizeof(ConnectionTable));
   12a5c:	2380      	movs	r3, #128	; 0x80
   12a5e:	005a      	lsls	r2, r3, #1
   12a60:	4bae      	ldr	r3, [pc, #696]	; (12d1c <ConsoleProc+0x18e8>)
   12a62:	2100      	movs	r1, #0
   12a64:	0018      	movs	r0, r3
   12a66:	4bae      	ldr	r3, [pc, #696]	; (12d20 <ConsoleProc+0x18ec>)
   12a68:	4798      	blx	r3
						NVM_Write_ConTable(ConnectionTable);
   12a6a:	4bac      	ldr	r3, [pc, #688]	; (12d1c <ConsoleProc+0x18e8>)
   12a6c:	0018      	movs	r0, r3
   12a6e:	4bad      	ldr	r3, [pc, #692]	; (12d24 <ConsoleProc+0x18f0>)
   12a70:	4798      	blx	r3
						memset(&networkInfo,0xff,sizeof(networkInfo));
   12a72:	4bad      	ldr	r3, [pc, #692]	; (12d28 <ConsoleProc+0x18f4>)
   12a74:	2228      	movs	r2, #40	; 0x28
   12a76:	21ff      	movs	r1, #255	; 0xff
   12a78:	0018      	movs	r0, r3
   12a7a:	4ba9      	ldr	r3, [pc, #676]	; (12d20 <ConsoleProc+0x18ec>)
   12a7c:	4798      	blx	r3
						NVM_Write_NetInfo(&networkInfo);
   12a7e:	4baa      	ldr	r3, [pc, #680]	; (12d28 <ConsoleProc+0x18f4>)
   12a80:	0018      	movs	r0, r3
   12a82:	4baa      	ldr	r3, [pc, #680]	; (12d2c <ConsoleProc+0x18f8>)
   12a84:	4798      	blx	r3
						switch(rxChar){
   12a86:	231f      	movs	r3, #31
   12a88:	18fb      	adds	r3, r7, r3
   12a8a:	781b      	ldrb	r3, [r3, #0]
   12a8c:	3b31      	subs	r3, #49	; 0x31
   12a8e:	2b06      	cmp	r3, #6
   12a90:	d900      	bls.n	12a94 <ConsoleProc+0x1660>
   12a92:	e07b      	b.n	12b8c <ConsoleProc+0x1758>
   12a94:	009a      	lsls	r2, r3, #2
   12a96:	4ba6      	ldr	r3, [pc, #664]	; (12d30 <ConsoleProc+0x18fc>)
   12a98:	18d3      	adds	r3, r2, r3
   12a9a:	681b      	ldr	r3, [r3, #0]
   12a9c:	469f      	mov	pc, r3
								networkInfo.Uart_Borate = 24;
   12a9e:	4ba2      	ldr	r3, [pc, #648]	; (12d28 <ConsoleProc+0x18f4>)
   12aa0:	2218      	movs	r2, #24
   12aa2:	849a      	strh	r2, [r3, #36]	; 0x24
								if(chkecho) printf("USART Borate = 2400 bps setting OK!\n\r");
   12aa4:	4b94      	ldr	r3, [pc, #592]	; (12cf8 <ConsoleProc+0x18c4>)
   12aa6:	781b      	ldrb	r3, [r3, #0]
   12aa8:	2b00      	cmp	r3, #0
   12aaa:	d003      	beq.n	12ab4 <ConsoleProc+0x1680>
   12aac:	4ba1      	ldr	r3, [pc, #644]	; (12d34 <ConsoleProc+0x1900>)
   12aae:	0018      	movs	r0, r3
   12ab0:	4b93      	ldr	r3, [pc, #588]	; (12d00 <ConsoleProc+0x18cc>)
   12ab2:	4798      	blx	r3
								NVM_Write_NetInfo(&networkInfo);
   12ab4:	4b9c      	ldr	r3, [pc, #624]	; (12d28 <ConsoleProc+0x18f4>)
   12ab6:	0018      	movs	r0, r3
   12ab8:	4b9c      	ldr	r3, [pc, #624]	; (12d2c <ConsoleProc+0x18f8>)
   12aba:	4798      	blx	r3
								NVM_Write_ConTable(ConnectionTable);
   12abc:	4b97      	ldr	r3, [pc, #604]	; (12d1c <ConsoleProc+0x18e8>)
   12abe:	0018      	movs	r0, r3
   12ac0:	4b98      	ldr	r3, [pc, #608]	; (12d24 <ConsoleProc+0x18f0>)
   12ac2:	4798      	blx	r3
								break;
   12ac4:	e06c      	b.n	12ba0 <ConsoleProc+0x176c>
								networkInfo.Uart_Borate = 96;
   12ac6:	4b98      	ldr	r3, [pc, #608]	; (12d28 <ConsoleProc+0x18f4>)
   12ac8:	2260      	movs	r2, #96	; 0x60
   12aca:	849a      	strh	r2, [r3, #36]	; 0x24
								if(chkecho) printf("USART Borate = 9600 bps setting OK!\n\r");
   12acc:	4b8a      	ldr	r3, [pc, #552]	; (12cf8 <ConsoleProc+0x18c4>)
   12ace:	781b      	ldrb	r3, [r3, #0]
   12ad0:	2b00      	cmp	r3, #0
   12ad2:	d003      	beq.n	12adc <ConsoleProc+0x16a8>
   12ad4:	4b98      	ldr	r3, [pc, #608]	; (12d38 <ConsoleProc+0x1904>)
   12ad6:	0018      	movs	r0, r3
   12ad8:	4b89      	ldr	r3, [pc, #548]	; (12d00 <ConsoleProc+0x18cc>)
   12ada:	4798      	blx	r3
								NVM_Write_NetInfo(&networkInfo);
   12adc:	4b92      	ldr	r3, [pc, #584]	; (12d28 <ConsoleProc+0x18f4>)
   12ade:	0018      	movs	r0, r3
   12ae0:	4b92      	ldr	r3, [pc, #584]	; (12d2c <ConsoleProc+0x18f8>)
   12ae2:	4798      	blx	r3
								break;
   12ae4:	e05c      	b.n	12ba0 <ConsoleProc+0x176c>
								networkInfo.Uart_Borate = 144;
   12ae6:	4b90      	ldr	r3, [pc, #576]	; (12d28 <ConsoleProc+0x18f4>)
   12ae8:	2290      	movs	r2, #144	; 0x90
   12aea:	849a      	strh	r2, [r3, #36]	; 0x24
								if(chkecho) printf("USART Borate = 14400 bps setting OK!\n\r");
   12aec:	4b82      	ldr	r3, [pc, #520]	; (12cf8 <ConsoleProc+0x18c4>)
   12aee:	781b      	ldrb	r3, [r3, #0]
   12af0:	2b00      	cmp	r3, #0
   12af2:	d003      	beq.n	12afc <ConsoleProc+0x16c8>
   12af4:	4b91      	ldr	r3, [pc, #580]	; (12d3c <ConsoleProc+0x1908>)
   12af6:	0018      	movs	r0, r3
   12af8:	4b81      	ldr	r3, [pc, #516]	; (12d00 <ConsoleProc+0x18cc>)
   12afa:	4798      	blx	r3
								NVM_Write_NetInfo(&networkInfo);
   12afc:	4b8a      	ldr	r3, [pc, #552]	; (12d28 <ConsoleProc+0x18f4>)
   12afe:	0018      	movs	r0, r3
   12b00:	4b8a      	ldr	r3, [pc, #552]	; (12d2c <ConsoleProc+0x18f8>)
   12b02:	4798      	blx	r3
								break;
   12b04:	e04c      	b.n	12ba0 <ConsoleProc+0x176c>
								networkInfo.Uart_Borate = 192;
   12b06:	4b88      	ldr	r3, [pc, #544]	; (12d28 <ConsoleProc+0x18f4>)
   12b08:	22c0      	movs	r2, #192	; 0xc0
   12b0a:	849a      	strh	r2, [r3, #36]	; 0x24
								if(chkecho) printf("USART Borate = 19200 bps setting OK!\n\r");
   12b0c:	4b7a      	ldr	r3, [pc, #488]	; (12cf8 <ConsoleProc+0x18c4>)
   12b0e:	781b      	ldrb	r3, [r3, #0]
   12b10:	2b00      	cmp	r3, #0
   12b12:	d003      	beq.n	12b1c <ConsoleProc+0x16e8>
   12b14:	4b8a      	ldr	r3, [pc, #552]	; (12d40 <ConsoleProc+0x190c>)
   12b16:	0018      	movs	r0, r3
   12b18:	4b79      	ldr	r3, [pc, #484]	; (12d00 <ConsoleProc+0x18cc>)
   12b1a:	4798      	blx	r3
								NVM_Write_NetInfo(&networkInfo);
   12b1c:	4b82      	ldr	r3, [pc, #520]	; (12d28 <ConsoleProc+0x18f4>)
   12b1e:	0018      	movs	r0, r3
   12b20:	4b82      	ldr	r3, [pc, #520]	; (12d2c <ConsoleProc+0x18f8>)
   12b22:	4798      	blx	r3
								break;
   12b24:	e03c      	b.n	12ba0 <ConsoleProc+0x176c>
								networkInfo.Uart_Borate = 384;
   12b26:	4b80      	ldr	r3, [pc, #512]	; (12d28 <ConsoleProc+0x18f4>)
   12b28:	22c0      	movs	r2, #192	; 0xc0
   12b2a:	0052      	lsls	r2, r2, #1
   12b2c:	849a      	strh	r2, [r3, #36]	; 0x24
								if(chkecho) printf("USART Borate = 38400 bps setting OK!\n\r");
   12b2e:	4b72      	ldr	r3, [pc, #456]	; (12cf8 <ConsoleProc+0x18c4>)
   12b30:	781b      	ldrb	r3, [r3, #0]
   12b32:	2b00      	cmp	r3, #0
   12b34:	d003      	beq.n	12b3e <ConsoleProc+0x170a>
   12b36:	4b83      	ldr	r3, [pc, #524]	; (12d44 <ConsoleProc+0x1910>)
   12b38:	0018      	movs	r0, r3
   12b3a:	4b71      	ldr	r3, [pc, #452]	; (12d00 <ConsoleProc+0x18cc>)
   12b3c:	4798      	blx	r3
								NVM_Write_NetInfo(&networkInfo);
   12b3e:	4b7a      	ldr	r3, [pc, #488]	; (12d28 <ConsoleProc+0x18f4>)
   12b40:	0018      	movs	r0, r3
   12b42:	4b7a      	ldr	r3, [pc, #488]	; (12d2c <ConsoleProc+0x18f8>)
   12b44:	4798      	blx	r3
								break;
   12b46:	e02b      	b.n	12ba0 <ConsoleProc+0x176c>
								networkInfo.Uart_Borate = 576;
   12b48:	4b77      	ldr	r3, [pc, #476]	; (12d28 <ConsoleProc+0x18f4>)
   12b4a:	2290      	movs	r2, #144	; 0x90
   12b4c:	0092      	lsls	r2, r2, #2
   12b4e:	849a      	strh	r2, [r3, #36]	; 0x24
								if(chkecho) printf("USART Borate = 57600 bps setting OK!\n\r");
   12b50:	4b69      	ldr	r3, [pc, #420]	; (12cf8 <ConsoleProc+0x18c4>)
   12b52:	781b      	ldrb	r3, [r3, #0]
   12b54:	2b00      	cmp	r3, #0
   12b56:	d003      	beq.n	12b60 <ConsoleProc+0x172c>
   12b58:	4b7b      	ldr	r3, [pc, #492]	; (12d48 <ConsoleProc+0x1914>)
   12b5a:	0018      	movs	r0, r3
   12b5c:	4b68      	ldr	r3, [pc, #416]	; (12d00 <ConsoleProc+0x18cc>)
   12b5e:	4798      	blx	r3
								NVM_Write_NetInfo(&networkInfo);
   12b60:	4b71      	ldr	r3, [pc, #452]	; (12d28 <ConsoleProc+0x18f4>)
   12b62:	0018      	movs	r0, r3
   12b64:	4b71      	ldr	r3, [pc, #452]	; (12d2c <ConsoleProc+0x18f8>)
   12b66:	4798      	blx	r3
								break;
   12b68:	e01a      	b.n	12ba0 <ConsoleProc+0x176c>
								networkInfo.Uart_Borate = 1152;
   12b6a:	4b6f      	ldr	r3, [pc, #444]	; (12d28 <ConsoleProc+0x18f4>)
   12b6c:	2290      	movs	r2, #144	; 0x90
   12b6e:	00d2      	lsls	r2, r2, #3
   12b70:	849a      	strh	r2, [r3, #36]	; 0x24
								if(chkecho) printf("USART Borate = 115200 bps setting OK!\n\r");
   12b72:	4b61      	ldr	r3, [pc, #388]	; (12cf8 <ConsoleProc+0x18c4>)
   12b74:	781b      	ldrb	r3, [r3, #0]
   12b76:	2b00      	cmp	r3, #0
   12b78:	d003      	beq.n	12b82 <ConsoleProc+0x174e>
   12b7a:	4b74      	ldr	r3, [pc, #464]	; (12d4c <ConsoleProc+0x1918>)
   12b7c:	0018      	movs	r0, r3
   12b7e:	4b60      	ldr	r3, [pc, #384]	; (12d00 <ConsoleProc+0x18cc>)
   12b80:	4798      	blx	r3
								NVM_Write_NetInfo(&networkInfo);
   12b82:	4b69      	ldr	r3, [pc, #420]	; (12d28 <ConsoleProc+0x18f4>)
   12b84:	0018      	movs	r0, r3
   12b86:	4b69      	ldr	r3, [pc, #420]	; (12d2c <ConsoleProc+0x18f8>)
   12b88:	4798      	blx	r3
								break;
   12b8a:	e009      	b.n	12ba0 <ConsoleProc+0x176c>
								if(chkecho) printf("USART Borate setting Fail\n\r");	
   12b8c:	4b5a      	ldr	r3, [pc, #360]	; (12cf8 <ConsoleProc+0x18c4>)
   12b8e:	781b      	ldrb	r3, [r3, #0]
   12b90:	2b00      	cmp	r3, #0
   12b92:	d100      	bne.n	12b96 <ConsoleProc+0x1762>
   12b94:	e237      	b.n	13006 <ConsoleProc+0x1bd2>
   12b96:	4b6e      	ldr	r3, [pc, #440]	; (12d50 <ConsoleProc+0x191c>)
   12b98:	0018      	movs	r0, r3
   12b9a:	4b59      	ldr	r3, [pc, #356]	; (12d00 <ConsoleProc+0x18cc>)
   12b9c:	4798      	blx	r3
						break;
   12b9e:	e232      	b.n	13006 <ConsoleProc+0x1bd2>
   12ba0:	e231      	b.n	13006 <ConsoleProc+0x1bd2>
						if(chkecho) printf("\r\nChannel setting...Current Chanel - %d",networkInfo.CH);
   12ba2:	4b55      	ldr	r3, [pc, #340]	; (12cf8 <ConsoleProc+0x18c4>)
   12ba4:	781b      	ldrb	r3, [r3, #0]
   12ba6:	2b00      	cmp	r3, #0
   12ba8:	d007      	beq.n	12bba <ConsoleProc+0x1786>
   12baa:	4b5f      	ldr	r3, [pc, #380]	; (12d28 <ConsoleProc+0x18f4>)
   12bac:	791b      	ldrb	r3, [r3, #4]
   12bae:	001a      	movs	r2, r3
   12bb0:	4b68      	ldr	r3, [pc, #416]	; (12d54 <ConsoleProc+0x1920>)
   12bb2:	0011      	movs	r1, r2
   12bb4:	0018      	movs	r0, r3
   12bb6:	4b52      	ldr	r3, [pc, #328]	; (12d00 <ConsoleProc+0x18cc>)
   12bb8:	4798      	blx	r3
						if(chkecho) printf("\r\nChannel: 01 ~ 32 ( 917.1MHz ~ 923.3MHz )");
   12bba:	4b4f      	ldr	r3, [pc, #316]	; (12cf8 <ConsoleProc+0x18c4>)
   12bbc:	781b      	ldrb	r3, [r3, #0]
   12bbe:	2b00      	cmp	r3, #0
   12bc0:	d003      	beq.n	12bca <ConsoleProc+0x1796>
   12bc2:	4b65      	ldr	r3, [pc, #404]	; (12d58 <ConsoleProc+0x1924>)
   12bc4:	0018      	movs	r0, r3
   12bc6:	4b4e      	ldr	r3, [pc, #312]	; (12d00 <ConsoleProc+0x18cc>)
   12bc8:	4798      	blx	r3
						rxChar = sio2host_getchar();
   12bca:	231f      	movs	r3, #31
   12bcc:	18fc      	adds	r4, r7, r3
   12bce:	4b51      	ldr	r3, [pc, #324]	; (12d14 <ConsoleProc+0x18e0>)
   12bd0:	4798      	blx	r3
   12bd2:	0003      	movs	r3, r0
   12bd4:	7023      	strb	r3, [r4, #0]
						tmp = (rxChar-'0')*10;
   12bd6:	231f      	movs	r3, #31
   12bd8:	18fb      	adds	r3, r7, r3
   12bda:	781b      	ldrb	r3, [r3, #0]
   12bdc:	3b30      	subs	r3, #48	; 0x30
   12bde:	b2db      	uxtb	r3, r3
   12be0:	221e      	movs	r2, #30
   12be2:	18ba      	adds	r2, r7, r2
   12be4:	1c19      	adds	r1, r3, #0
   12be6:	0089      	lsls	r1, r1, #2
   12be8:	18cb      	adds	r3, r1, r3
   12bea:	18db      	adds	r3, r3, r3
   12bec:	7013      	strb	r3, [r2, #0]
						rxChar = sio2host_getchar();
   12bee:	231f      	movs	r3, #31
   12bf0:	18fc      	adds	r4, r7, r3
   12bf2:	4b48      	ldr	r3, [pc, #288]	; (12d14 <ConsoleProc+0x18e0>)
   12bf4:	4798      	blx	r3
   12bf6:	0003      	movs	r3, r0
   12bf8:	7023      	strb	r3, [r4, #0]
						tmp += (rxChar-'0');
   12bfa:	231f      	movs	r3, #31
   12bfc:	18fa      	adds	r2, r7, r3
   12bfe:	231e      	movs	r3, #30
   12c00:	18fb      	adds	r3, r7, r3
   12c02:	7812      	ldrb	r2, [r2, #0]
   12c04:	781b      	ldrb	r3, [r3, #0]
   12c06:	18d3      	adds	r3, r2, r3
   12c08:	b2da      	uxtb	r2, r3
   12c0a:	231e      	movs	r3, #30
   12c0c:	18fb      	adds	r3, r7, r3
   12c0e:	3a30      	subs	r2, #48	; 0x30
   12c10:	701a      	strb	r2, [r3, #0]
						if(tmp>0 && tmp<33)
   12c12:	231e      	movs	r3, #30
   12c14:	18fb      	adds	r3, r7, r3
   12c16:	781b      	ldrb	r3, [r3, #0]
   12c18:	2b00      	cmp	r3, #0
   12c1a:	d038      	beq.n	12c8e <ConsoleProc+0x185a>
   12c1c:	231e      	movs	r3, #30
   12c1e:	18fb      	adds	r3, r7, r3
   12c20:	781b      	ldrb	r3, [r3, #0]
   12c22:	2b20      	cmp	r3, #32
   12c24:	d833      	bhi.n	12c8e <ConsoleProc+0x185a>
							NVM_Read_NetInfo(&networkInfo);
   12c26:	4b40      	ldr	r3, [pc, #256]	; (12d28 <ConsoleProc+0x18f4>)
   12c28:	0018      	movs	r0, r3
   12c2a:	4b4c      	ldr	r3, [pc, #304]	; (12d5c <ConsoleProc+0x1928>)
   12c2c:	4798      	blx	r3
							MiMAC_SetChannel(tmp);
   12c2e:	231e      	movs	r3, #30
   12c30:	18fb      	adds	r3, r7, r3
   12c32:	781b      	ldrb	r3, [r3, #0]
   12c34:	0018      	movs	r0, r3
   12c36:	4b4a      	ldr	r3, [pc, #296]	; (12d60 <ConsoleProc+0x192c>)
   12c38:	4798      	blx	r3
							RF_CHANNEL=tmp;
   12c3a:	4b4a      	ldr	r3, [pc, #296]	; (12d64 <ConsoleProc+0x1930>)
   12c3c:	221e      	movs	r2, #30
   12c3e:	18ba      	adds	r2, r7, r2
   12c40:	7812      	ldrb	r2, [r2, #0]
   12c42:	701a      	strb	r2, [r3, #0]
							currentChannel=RF_CHANNEL;
   12c44:	4b47      	ldr	r3, [pc, #284]	; (12d64 <ConsoleProc+0x1930>)
   12c46:	781a      	ldrb	r2, [r3, #0]
   12c48:	4b47      	ldr	r3, [pc, #284]	; (12d68 <ConsoleProc+0x1934>)
   12c4a:	701a      	strb	r2, [r3, #0]
							networkInfo.CH = currentChannel;
   12c4c:	4b46      	ldr	r3, [pc, #280]	; (12d68 <ConsoleProc+0x1934>)
   12c4e:	781a      	ldrb	r2, [r3, #0]
   12c50:	4b35      	ldr	r3, [pc, #212]	; (12d28 <ConsoleProc+0x18f4>)
   12c52:	711a      	strb	r2, [r3, #4]
							if(chkecho) printf("\r\nSet Channel - %d - Done\r\n\r\n",tmp);
   12c54:	4b28      	ldr	r3, [pc, #160]	; (12cf8 <ConsoleProc+0x18c4>)
   12c56:	781b      	ldrb	r3, [r3, #0]
   12c58:	2b00      	cmp	r3, #0
   12c5a:	d007      	beq.n	12c6c <ConsoleProc+0x1838>
   12c5c:	231e      	movs	r3, #30
   12c5e:	18fb      	adds	r3, r7, r3
   12c60:	781a      	ldrb	r2, [r3, #0]
   12c62:	4b42      	ldr	r3, [pc, #264]	; (12d6c <ConsoleProc+0x1938>)
   12c64:	0011      	movs	r1, r2
   12c66:	0018      	movs	r0, r3
   12c68:	4b25      	ldr	r3, [pc, #148]	; (12d00 <ConsoleProc+0x18cc>)
   12c6a:	4798      	blx	r3
							SX1276_RX_INIT();
   12c6c:	4b40      	ldr	r3, [pc, #256]	; (12d70 <ConsoleProc+0x193c>)
   12c6e:	4798      	blx	r3
							NVM_Write_NetInfo(&networkInfo);			//ihkim
   12c70:	4b2d      	ldr	r3, [pc, #180]	; (12d28 <ConsoleProc+0x18f4>)
   12c72:	0018      	movs	r0, r3
   12c74:	4b2d      	ldr	r3, [pc, #180]	; (12d2c <ConsoleProc+0x18f8>)
   12c76:	4798      	blx	r3
							printf("{\"ca\":%d,\"se\":%d,\"va\":%d}\r\n",
   12c78:	231e      	movs	r3, #30
   12c7a:	18fb      	adds	r3, r7, r3
   12c7c:	781a      	ldrb	r2, [r3, #0]
   12c7e:	231e      	movs	r3, #30
   12c80:	18fb      	adds	r3, r7, r3
   12c82:	781b      	ldrb	r3, [r3, #0]
   12c84:	483b      	ldr	r0, [pc, #236]	; (12d74 <ConsoleProc+0x1940>)
   12c86:	211e      	movs	r1, #30
   12c88:	4c1d      	ldr	r4, [pc, #116]	; (12d00 <ConsoleProc+0x18cc>)
   12c8a:	47a0      	blx	r4
						break;
   12c8c:	e1bd      	b.n	1300a <ConsoleProc+0x1bd6>
							if(chkecho) printf("\r\nInvalid value - %d \r\n\r\n",tmp);
   12c8e:	4b1a      	ldr	r3, [pc, #104]	; (12cf8 <ConsoleProc+0x18c4>)
   12c90:	781b      	ldrb	r3, [r3, #0]
   12c92:	2b00      	cmp	r3, #0
   12c94:	d100      	bne.n	12c98 <ConsoleProc+0x1864>
   12c96:	e1b8      	b.n	1300a <ConsoleProc+0x1bd6>
   12c98:	231e      	movs	r3, #30
   12c9a:	18fb      	adds	r3, r7, r3
   12c9c:	781a      	ldrb	r2, [r3, #0]
   12c9e:	4b36      	ldr	r3, [pc, #216]	; (12d78 <ConsoleProc+0x1944>)
   12ca0:	0011      	movs	r1, r2
   12ca2:	0018      	movs	r0, r3
   12ca4:	4b16      	ldr	r3, [pc, #88]	; (12d00 <ConsoleProc+0x18cc>)
   12ca6:	4798      	blx	r3
						break;
   12ca8:	e1af      	b.n	1300a <ConsoleProc+0x1bd6>
						if(chkecho) printf("\n\rCurrent PANID: 0x%.4x \r\n",myPANID.Val);
   12caa:	4b13      	ldr	r3, [pc, #76]	; (12cf8 <ConsoleProc+0x18c4>)
   12cac:	781b      	ldrb	r3, [r3, #0]
   12cae:	2b00      	cmp	r3, #0
   12cb0:	d007      	beq.n	12cc2 <ConsoleProc+0x188e>
   12cb2:	4b32      	ldr	r3, [pc, #200]	; (12d7c <ConsoleProc+0x1948>)
   12cb4:	881b      	ldrh	r3, [r3, #0]
   12cb6:	001a      	movs	r2, r3
   12cb8:	4b31      	ldr	r3, [pc, #196]	; (12d80 <ConsoleProc+0x194c>)
   12cba:	0011      	movs	r1, r2
   12cbc:	0018      	movs	r0, r3
   12cbe:	4b10      	ldr	r3, [pc, #64]	; (12d00 <ConsoleProc+0x18cc>)
   12cc0:	4798      	blx	r3
						if(chkecho) printf("    New PANID: 0x");
   12cc2:	4b0d      	ldr	r3, [pc, #52]	; (12cf8 <ConsoleProc+0x18c4>)
   12cc4:	781b      	ldrb	r3, [r3, #0]
   12cc6:	2b00      	cmp	r3, #0
   12cc8:	d003      	beq.n	12cd2 <ConsoleProc+0x189e>
   12cca:	4b2e      	ldr	r3, [pc, #184]	; (12d84 <ConsoleProc+0x1950>)
   12ccc:	0018      	movs	r0, r3
   12cce:	4b0c      	ldr	r3, [pc, #48]	; (12d00 <ConsoleProc+0x18cc>)
   12cd0:	4798      	blx	r3
						memset(rxStr,0x00,sizeof(rxStr));
   12cd2:	1d3b      	adds	r3, r7, #4
   12cd4:	2211      	movs	r2, #17
   12cd6:	2100      	movs	r1, #0
   12cd8:	0018      	movs	r0, r3
   12cda:	4b11      	ldr	r3, [pc, #68]	; (12d20 <ConsoleProc+0x18ec>)
   12cdc:	4798      	blx	r3
						for(i=0;i<4;i++){
   12cde:	232f      	movs	r3, #47	; 0x2f
   12ce0:	18fb      	adds	r3, r7, r3
   12ce2:	2200      	movs	r2, #0
   12ce4:	701a      	strb	r2, [r3, #0]
   12ce6:	e067      	b.n	12db8 <ConsoleProc+0x1984>
   12ce8:	20001c00 	.word	0x20001c00
   12cec:	20001b0c 	.word	0x20001b0c
   12cf0:	20001af4 	.word	0x20001af4
   12cf4:	20000c7e 	.word	0x20000c7e
   12cf8:	2000002c 	.word	0x2000002c
   12cfc:	0001d948 	.word	0x0001d948
   12d00:	0001782d 	.word	0x0001782d
   12d04:	0001d960 	.word	0x0001d960
   12d08:	20001ae0 	.word	0x20001ae0
   12d0c:	00030d40 	.word	0x00030d40
   12d10:	0001d984 	.word	0x0001d984
   12d14:	00006a51 	.word	0x00006a51
   12d18:	0001d8c0 	.word	0x0001d8c0
   12d1c:	20001150 	.word	0x20001150
   12d20:	00017799 	.word	0x00017799
   12d24:	0000e80d 	.word	0x0000e80d
   12d28:	2000151c 	.word	0x2000151c
   12d2c:	0000e8a1 	.word	0x0000e8a1
   12d30:	0001de70 	.word	0x0001de70
   12d34:	0001d9dc 	.word	0x0001d9dc
   12d38:	0001da04 	.word	0x0001da04
   12d3c:	0001da2c 	.word	0x0001da2c
   12d40:	0001da54 	.word	0x0001da54
   12d44:	0001da7c 	.word	0x0001da7c
   12d48:	0001daa4 	.word	0x0001daa4
   12d4c:	0001dacc 	.word	0x0001dacc
   12d50:	0001daf4 	.word	0x0001daf4
   12d54:	0001db10 	.word	0x0001db10
   12d58:	0001db38 	.word	0x0001db38
   12d5c:	0000e979 	.word	0x0000e979
   12d60:	0000fc05 	.word	0x0000fc05
   12d64:	2000002f 	.word	0x2000002f
   12d68:	200014b5 	.word	0x200014b5
   12d6c:	0001db64 	.word	0x0001db64
   12d70:	0000f90d 	.word	0x0000f90d
   12d74:	0001d700 	.word	0x0001d700
   12d78:	0001d6e4 	.word	0x0001d6e4
   12d7c:	20001290 	.word	0x20001290
   12d80:	0001db84 	.word	0x0001db84
   12d84:	0001dba0 	.word	0x0001dba0
							rxStr[i] = sio2host_getchar();
   12d88:	232f      	movs	r3, #47	; 0x2f
   12d8a:	18fb      	adds	r3, r7, r3
   12d8c:	781c      	ldrb	r4, [r3, #0]
   12d8e:	4ba2      	ldr	r3, [pc, #648]	; (13018 <ConsoleProc+0x1be4>)
   12d90:	4798      	blx	r3
   12d92:	0003      	movs	r3, r0
   12d94:	001a      	movs	r2, r3
   12d96:	1d3b      	adds	r3, r7, #4
   12d98:	551a      	strb	r2, [r3, r4]
							printf("%c",rxStr[i]);
   12d9a:	232f      	movs	r3, #47	; 0x2f
   12d9c:	18fb      	adds	r3, r7, r3
   12d9e:	781b      	ldrb	r3, [r3, #0]
   12da0:	1d3a      	adds	r2, r7, #4
   12da2:	5cd3      	ldrb	r3, [r2, r3]
   12da4:	0018      	movs	r0, r3
   12da6:	4b9d      	ldr	r3, [pc, #628]	; (1301c <ConsoleProc+0x1be8>)
   12da8:	4798      	blx	r3
						for(i=0;i<4;i++){
   12daa:	232f      	movs	r3, #47	; 0x2f
   12dac:	18fb      	adds	r3, r7, r3
   12dae:	781a      	ldrb	r2, [r3, #0]
   12db0:	232f      	movs	r3, #47	; 0x2f
   12db2:	18fb      	adds	r3, r7, r3
   12db4:	3201      	adds	r2, #1
   12db6:	701a      	strb	r2, [r3, #0]
   12db8:	232f      	movs	r3, #47	; 0x2f
   12dba:	18fb      	adds	r3, r7, r3
   12dbc:	781b      	ldrb	r3, [r3, #0]
   12dbe:	2b03      	cmp	r3, #3
   12dc0:	d9e2      	bls.n	12d88 <ConsoleProc+0x1954>
						myPANID.Val = strtoul(rxStr,NULL,16);
   12dc2:	1d3b      	adds	r3, r7, #4
   12dc4:	2210      	movs	r2, #16
   12dc6:	2100      	movs	r1, #0
   12dc8:	0018      	movs	r0, r3
   12dca:	4b95      	ldr	r3, [pc, #596]	; (13020 <ConsoleProc+0x1bec>)
   12dcc:	4798      	blx	r3
   12dce:	0003      	movs	r3, r0
   12dd0:	b29a      	uxth	r2, r3
   12dd2:	4b94      	ldr	r3, [pc, #592]	; (13024 <ConsoleProc+0x1bf0>)
   12dd4:	801a      	strh	r2, [r3, #0]
						if(chkecho) printf("\n\rPANID Changed...\n\r");		
   12dd6:	4b94      	ldr	r3, [pc, #592]	; (13028 <ConsoleProc+0x1bf4>)
   12dd8:	781b      	ldrb	r3, [r3, #0]
   12dda:	2b00      	cmp	r3, #0
   12ddc:	d003      	beq.n	12de6 <ConsoleProc+0x19b2>
   12dde:	4b93      	ldr	r3, [pc, #588]	; (1302c <ConsoleProc+0x1bf8>)
   12de0:	0018      	movs	r0, r3
   12de2:	4b93      	ldr	r3, [pc, #588]	; (13030 <ConsoleProc+0x1bfc>)
   12de4:	4798      	blx	r3
						networkInfo.PANID.Val = myPANID.Val;
   12de6:	4b8f      	ldr	r3, [pc, #572]	; (13024 <ConsoleProc+0x1bf0>)
   12de8:	881a      	ldrh	r2, [r3, #0]
   12dea:	4b92      	ldr	r3, [pc, #584]	; (13034 <ConsoleProc+0x1c00>)
   12dec:	805a      	strh	r2, [r3, #2]
						NVM_Write_NetInfo(&networkInfo);
   12dee:	4b91      	ldr	r3, [pc, #580]	; (13034 <ConsoleProc+0x1c00>)
   12df0:	0018      	movs	r0, r3
   12df2:	4b91      	ldr	r3, [pc, #580]	; (13038 <ConsoleProc+0x1c04>)
   12df4:	4798      	blx	r3
						break;
   12df6:	e10b      	b.n	13010 <ConsoleProc+0x1bdc>
						if(chkecho) printf("\n\Device Information...\n\r");
   12df8:	4b8b      	ldr	r3, [pc, #556]	; (13028 <ConsoleProc+0x1bf4>)
   12dfa:	781b      	ldrb	r3, [r3, #0]
   12dfc:	2b00      	cmp	r3, #0
   12dfe:	d003      	beq.n	12e08 <ConsoleProc+0x19d4>
   12e00:	4b8e      	ldr	r3, [pc, #568]	; (1303c <ConsoleProc+0x1c08>)
   12e02:	0018      	movs	r0, r3
   12e04:	4b8a      	ldr	r3, [pc, #552]	; (13030 <ConsoleProc+0x1bfc>)
   12e06:	4798      	blx	r3
						if(chkecho) printf("Current Channel: %d \r\n",currentChannel);
   12e08:	4b87      	ldr	r3, [pc, #540]	; (13028 <ConsoleProc+0x1bf4>)
   12e0a:	781b      	ldrb	r3, [r3, #0]
   12e0c:	2b00      	cmp	r3, #0
   12e0e:	d007      	beq.n	12e20 <ConsoleProc+0x19ec>
   12e10:	4b8b      	ldr	r3, [pc, #556]	; (13040 <ConsoleProc+0x1c0c>)
   12e12:	781b      	ldrb	r3, [r3, #0]
   12e14:	001a      	movs	r2, r3
   12e16:	4b8b      	ldr	r3, [pc, #556]	; (13044 <ConsoleProc+0x1c10>)
   12e18:	0011      	movs	r1, r2
   12e1a:	0018      	movs	r0, r3
   12e1c:	4b84      	ldr	r3, [pc, #528]	; (13030 <ConsoleProc+0x1bfc>)
   12e1e:	4798      	blx	r3
						if(chkecho) printf("Channel MAP: 0x%.8x \r\n",ChannelMAP);
   12e20:	4b81      	ldr	r3, [pc, #516]	; (13028 <ConsoleProc+0x1bf4>)
   12e22:	781b      	ldrb	r3, [r3, #0]
   12e24:	2b00      	cmp	r3, #0
   12e26:	d006      	beq.n	12e36 <ConsoleProc+0x1a02>
   12e28:	4b87      	ldr	r3, [pc, #540]	; (13048 <ConsoleProc+0x1c14>)
   12e2a:	681a      	ldr	r2, [r3, #0]
   12e2c:	4b87      	ldr	r3, [pc, #540]	; (1304c <ConsoleProc+0x1c18>)
   12e2e:	0011      	movs	r1, r2
   12e30:	0018      	movs	r0, r3
   12e32:	4b7f      	ldr	r3, [pc, #508]	; (13030 <ConsoleProc+0x1bfc>)
   12e34:	4798      	blx	r3
						if(chkecho) printf("PANID: 0x%.4x \r\n",myPANID.Val);
   12e36:	4b7c      	ldr	r3, [pc, #496]	; (13028 <ConsoleProc+0x1bf4>)
   12e38:	781b      	ldrb	r3, [r3, #0]
   12e3a:	2b00      	cmp	r3, #0
   12e3c:	d007      	beq.n	12e4e <ConsoleProc+0x1a1a>
   12e3e:	4b79      	ldr	r3, [pc, #484]	; (13024 <ConsoleProc+0x1bf0>)
   12e40:	881b      	ldrh	r3, [r3, #0]
   12e42:	001a      	movs	r2, r3
   12e44:	4b82      	ldr	r3, [pc, #520]	; (13050 <ConsoleProc+0x1c1c>)
   12e46:	0011      	movs	r1, r2
   12e48:	0018      	movs	r0, r3
   12e4a:	4b79      	ldr	r3, [pc, #484]	; (13030 <ConsoleProc+0x1bfc>)
   12e4c:	4798      	blx	r3
						if(chkecho) printf("ShortAddr: 0x%.4x \r\n", myShortAddress.Val);
   12e4e:	4b76      	ldr	r3, [pc, #472]	; (13028 <ConsoleProc+0x1bf4>)
   12e50:	781b      	ldrb	r3, [r3, #0]
   12e52:	2b00      	cmp	r3, #0
   12e54:	d007      	beq.n	12e66 <ConsoleProc+0x1a32>
   12e56:	4b7f      	ldr	r3, [pc, #508]	; (13054 <ConsoleProc+0x1c20>)
   12e58:	881b      	ldrh	r3, [r3, #0]
   12e5a:	001a      	movs	r2, r3
   12e5c:	4b7e      	ldr	r3, [pc, #504]	; (13058 <ConsoleProc+0x1c24>)
   12e5e:	0011      	movs	r1, r2
   12e60:	0018      	movs	r0, r3
   12e62:	4b73      	ldr	r3, [pc, #460]	; (13030 <ConsoleProc+0x1bfc>)
   12e64:	4798      	blx	r3
						if(chkecho) printf("MAC Address: 0x");
   12e66:	4b70      	ldr	r3, [pc, #448]	; (13028 <ConsoleProc+0x1bf4>)
   12e68:	781b      	ldrb	r3, [r3, #0]
   12e6a:	2b00      	cmp	r3, #0
   12e6c:	d003      	beq.n	12e76 <ConsoleProc+0x1a42>
   12e6e:	4b7b      	ldr	r3, [pc, #492]	; (1305c <ConsoleProc+0x1c28>)
   12e70:	0018      	movs	r0, r3
   12e72:	4b6f      	ldr	r3, [pc, #444]	; (13030 <ConsoleProc+0x1bfc>)
   12e74:	4798      	blx	r3
						for(i = 0; i < MY_ADDRESS_LENGTH; i++)
   12e76:	232f      	movs	r3, #47	; 0x2f
   12e78:	18fb      	adds	r3, r7, r3
   12e7a:	2200      	movs	r2, #0
   12e7c:	701a      	strb	r2, [r3, #0]
   12e7e:	e013      	b.n	12ea8 <ConsoleProc+0x1a74>
							printf("%.2x",myLongAddress[MY_ADDRESS_LENGTH-1-i]);
   12e80:	232f      	movs	r3, #47	; 0x2f
   12e82:	18fb      	adds	r3, r7, r3
   12e84:	781b      	ldrb	r3, [r3, #0]
   12e86:	2207      	movs	r2, #7
   12e88:	1ad3      	subs	r3, r2, r3
   12e8a:	4a75      	ldr	r2, [pc, #468]	; (13060 <ConsoleProc+0x1c2c>)
   12e8c:	5cd3      	ldrb	r3, [r2, r3]
   12e8e:	001a      	movs	r2, r3
   12e90:	4b74      	ldr	r3, [pc, #464]	; (13064 <ConsoleProc+0x1c30>)
   12e92:	0011      	movs	r1, r2
   12e94:	0018      	movs	r0, r3
   12e96:	4b66      	ldr	r3, [pc, #408]	; (13030 <ConsoleProc+0x1bfc>)
   12e98:	4798      	blx	r3
						for(i = 0; i < MY_ADDRESS_LENGTH; i++)
   12e9a:	232f      	movs	r3, #47	; 0x2f
   12e9c:	18fb      	adds	r3, r7, r3
   12e9e:	781a      	ldrb	r2, [r3, #0]
   12ea0:	232f      	movs	r3, #47	; 0x2f
   12ea2:	18fb      	adds	r3, r7, r3
   12ea4:	3201      	adds	r2, #1
   12ea6:	701a      	strb	r2, [r3, #0]
   12ea8:	232f      	movs	r3, #47	; 0x2f
   12eaa:	18fb      	adds	r3, r7, r3
   12eac:	781b      	ldrb	r3, [r3, #0]
   12eae:	2b07      	cmp	r3, #7
   12eb0:	d9e6      	bls.n	12e80 <ConsoleProc+0x1a4c>
						if(chkecho) printf("\r\nSet SpreadingFactor - %d - \r\n",SF_DR);
   12eb2:	4b5d      	ldr	r3, [pc, #372]	; (13028 <ConsoleProc+0x1bf4>)
   12eb4:	781b      	ldrb	r3, [r3, #0]
   12eb6:	2b00      	cmp	r3, #0
   12eb8:	d007      	beq.n	12eca <ConsoleProc+0x1a96>
   12eba:	4b6b      	ldr	r3, [pc, #428]	; (13068 <ConsoleProc+0x1c34>)
   12ebc:	781b      	ldrb	r3, [r3, #0]
   12ebe:	001a      	movs	r2, r3
   12ec0:	4b6a      	ldr	r3, [pc, #424]	; (1306c <ConsoleProc+0x1c38>)
   12ec2:	0011      	movs	r1, r2
   12ec4:	0018      	movs	r0, r3
   12ec6:	4b5a      	ldr	r3, [pc, #360]	; (13030 <ConsoleProc+0x1bfc>)
   12ec8:	4798      	blx	r3
						if(chkecho) printf("\rSet Output Power - %d - \r\n",RF_OUTPUT);
   12eca:	4b57      	ldr	r3, [pc, #348]	; (13028 <ConsoleProc+0x1bf4>)
   12ecc:	781b      	ldrb	r3, [r3, #0]
   12ece:	2b00      	cmp	r3, #0
   12ed0:	d100      	bne.n	12ed4 <ConsoleProc+0x1aa0>
   12ed2:	e09c      	b.n	1300e <ConsoleProc+0x1bda>
   12ed4:	4b66      	ldr	r3, [pc, #408]	; (13070 <ConsoleProc+0x1c3c>)
   12ed6:	781b      	ldrb	r3, [r3, #0]
   12ed8:	001a      	movs	r2, r3
   12eda:	4b66      	ldr	r3, [pc, #408]	; (13074 <ConsoleProc+0x1c40>)
   12edc:	0011      	movs	r1, r2
   12ede:	0018      	movs	r0, r3
   12ee0:	4b53      	ldr	r3, [pc, #332]	; (13030 <ConsoleProc+0x1bfc>)
   12ee2:	4798      	blx	r3
						break;
   12ee4:	e093      	b.n	1300e <ConsoleProc+0x1bda>
						if(chkecho) printf("\n\rConnection Table...\n\r");
   12ee6:	4b50      	ldr	r3, [pc, #320]	; (13028 <ConsoleProc+0x1bf4>)
   12ee8:	781b      	ldrb	r3, [r3, #0]
   12eea:	2b00      	cmp	r3, #0
   12eec:	d003      	beq.n	12ef6 <ConsoleProc+0x1ac2>
   12eee:	4b62      	ldr	r3, [pc, #392]	; (13078 <ConsoleProc+0x1c44>)
   12ef0:	0018      	movs	r0, r3
   12ef2:	4b4f      	ldr	r3, [pc, #316]	; (13030 <ConsoleProc+0x1bfc>)
   12ef4:	4798      	blx	r3
						DumpConnection(0xff);
   12ef6:	20ff      	movs	r0, #255	; 0xff
   12ef8:	4b60      	ldr	r3, [pc, #384]	; (1307c <ConsoleProc+0x1c48>)
   12efa:	4798      	blx	r3
						break;
   12efc:	e088      	b.n	13010 <ConsoleProc+0x1bdc>
						if(chkecho)	printf("\n\rFAIL\n\r");
   12efe:	4b4a      	ldr	r3, [pc, #296]	; (13028 <ConsoleProc+0x1bf4>)
   12f00:	781b      	ldrb	r3, [r3, #0]
   12f02:	2b00      	cmp	r3, #0
   12f04:	d003      	beq.n	12f0e <ConsoleProc+0x1ada>
   12f06:	4b5e      	ldr	r3, [pc, #376]	; (13080 <ConsoleProc+0x1c4c>)
   12f08:	0018      	movs	r0, r3
   12f0a:	4b49      	ldr	r3, [pc, #292]	; (13030 <ConsoleProc+0x1bfc>)
   12f0c:	4798      	blx	r3
						rxLenCnt = 0;
   12f0e:	4b5d      	ldr	r3, [pc, #372]	; (13084 <ConsoleProc+0x1c50>)
   12f10:	2200      	movs	r2, #0
   12f12:	701a      	strb	r2, [r3, #0]
						for(i=0;i<TX_BUFFER_SIZE;i++)	TxBuffer[i] = 0;
   12f14:	232f      	movs	r3, #47	; 0x2f
   12f16:	18fb      	adds	r3, r7, r3
   12f18:	2200      	movs	r2, #0
   12f1a:	701a      	strb	r2, [r3, #0]
   12f1c:	e00c      	b.n	12f38 <ConsoleProc+0x1b04>
   12f1e:	232f      	movs	r3, #47	; 0x2f
   12f20:	18fb      	adds	r3, r7, r3
   12f22:	781b      	ldrb	r3, [r3, #0]
   12f24:	4a58      	ldr	r2, [pc, #352]	; (13088 <ConsoleProc+0x1c54>)
   12f26:	2100      	movs	r1, #0
   12f28:	54d1      	strb	r1, [r2, r3]
   12f2a:	232f      	movs	r3, #47	; 0x2f
   12f2c:	18fb      	adds	r3, r7, r3
   12f2e:	781a      	ldrb	r2, [r3, #0]
   12f30:	232f      	movs	r3, #47	; 0x2f
   12f32:	18fb      	adds	r3, r7, r3
   12f34:	3201      	adds	r2, #1
   12f36:	701a      	strb	r2, [r3, #0]
   12f38:	232f      	movs	r3, #47	; 0x2f
   12f3a:	18fb      	adds	r3, r7, r3
   12f3c:	781b      	ldrb	r3, [r3, #0]
   12f3e:	2bdb      	cmp	r3, #219	; 0xdb
   12f40:	d9ed      	bls.n	12f1e <ConsoleProc+0x1aea>
						break;
   12f42:	46c0      	nop			; (mov r8, r8)
   12f44:	e064      	b.n	13010 <ConsoleProc+0x1bdc>
			}else if(rxLenCnt == 10){
   12f46:	4b4f      	ldr	r3, [pc, #316]	; (13084 <ConsoleProc+0x1c50>)
   12f48:	781b      	ldrb	r3, [r3, #0]
   12f4a:	2b0a      	cmp	r3, #10
   12f4c:	d122      	bne.n	12f94 <ConsoleProc+0x1b60>
				rxLenCnt = 0;
   12f4e:	4b4d      	ldr	r3, [pc, #308]	; (13084 <ConsoleProc+0x1c50>)
   12f50:	2200      	movs	r2, #0
   12f52:	701a      	strb	r2, [r3, #0]
				for(i=0;i<TX_BUFFER_SIZE;i++)	TxBuffer[i] = 0;
   12f54:	232f      	movs	r3, #47	; 0x2f
   12f56:	18fb      	adds	r3, r7, r3
   12f58:	2200      	movs	r2, #0
   12f5a:	701a      	strb	r2, [r3, #0]
   12f5c:	e00c      	b.n	12f78 <ConsoleProc+0x1b44>
   12f5e:	232f      	movs	r3, #47	; 0x2f
   12f60:	18fb      	adds	r3, r7, r3
   12f62:	781b      	ldrb	r3, [r3, #0]
   12f64:	4a48      	ldr	r2, [pc, #288]	; (13088 <ConsoleProc+0x1c54>)
   12f66:	2100      	movs	r1, #0
   12f68:	54d1      	strb	r1, [r2, r3]
   12f6a:	232f      	movs	r3, #47	; 0x2f
   12f6c:	18fb      	adds	r3, r7, r3
   12f6e:	781a      	ldrb	r2, [r3, #0]
   12f70:	232f      	movs	r3, #47	; 0x2f
   12f72:	18fb      	adds	r3, r7, r3
   12f74:	3201      	adds	r2, #1
   12f76:	701a      	strb	r2, [r3, #0]
   12f78:	232f      	movs	r3, #47	; 0x2f
   12f7a:	18fb      	adds	r3, r7, r3
   12f7c:	781b      	ldrb	r3, [r3, #0]
   12f7e:	2bdb      	cmp	r3, #219	; 0xdb
   12f80:	d9ed      	bls.n	12f5e <ConsoleProc+0x1b2a>
				if(chkecho)	printf("  Error.. Exceed 10..");					
   12f82:	4b29      	ldr	r3, [pc, #164]	; (13028 <ConsoleProc+0x1bf4>)
   12f84:	781b      	ldrb	r3, [r3, #0]
   12f86:	2b00      	cmp	r3, #0
   12f88:	d042      	beq.n	13010 <ConsoleProc+0x1bdc>
   12f8a:	4b40      	ldr	r3, [pc, #256]	; (1308c <ConsoleProc+0x1c58>)
   12f8c:	0018      	movs	r0, r3
   12f8e:	4b28      	ldr	r3, [pc, #160]	; (13030 <ConsoleProc+0x1bfc>)
   12f90:	4798      	blx	r3
}
   12f92:	e03d      	b.n	13010 <ConsoleProc+0x1bdc>
			}else if(rxChar == 0x0d){
   12f94:	231f      	movs	r3, #31
   12f96:	18fb      	adds	r3, r7, r3
   12f98:	781b      	ldrb	r3, [r3, #0]
   12f9a:	2b0d      	cmp	r3, #13
   12f9c:	d110      	bne.n	12fc0 <ConsoleProc+0x1b8c>
				rxLenCnt = 0;
   12f9e:	4b39      	ldr	r3, [pc, #228]	; (13084 <ConsoleProc+0x1c50>)
   12fa0:	2200      	movs	r2, #0
   12fa2:	701a      	strb	r2, [r3, #0]
				MiApp_FlushTx();
   12fa4:	4b3a      	ldr	r3, [pc, #232]	; (13090 <ConsoleProc+0x1c5c>)
   12fa6:	220b      	movs	r2, #11
   12fa8:	701a      	strb	r2, [r3, #0]
				if(chkecho)	printf(" Enter\n\r");
   12faa:	4b1f      	ldr	r3, [pc, #124]	; (13028 <ConsoleProc+0x1bf4>)
   12fac:	781b      	ldrb	r3, [r3, #0]
   12fae:	2b00      	cmp	r3, #0
   12fb0:	d003      	beq.n	12fba <ConsoleProc+0x1b86>
   12fb2:	4b38      	ldr	r3, [pc, #224]	; (13094 <ConsoleProc+0x1c60>)
   12fb4:	0018      	movs	r0, r3
   12fb6:	4b1e      	ldr	r3, [pc, #120]	; (13030 <ConsoleProc+0x1bfc>)
   12fb8:	4798      	blx	r3
				SX1276_RX_INIT();
   12fba:	4b37      	ldr	r3, [pc, #220]	; (13098 <ConsoleProc+0x1c64>)
   12fbc:	4798      	blx	r3
}
   12fbe:	e027      	b.n	13010 <ConsoleProc+0x1bdc>
				MiApp_WriteData(rxChar);
   12fc0:	4b33      	ldr	r3, [pc, #204]	; (13090 <ConsoleProc+0x1c5c>)
   12fc2:	781b      	ldrb	r3, [r3, #0]
   12fc4:	1c5a      	adds	r2, r3, #1
   12fc6:	b2d1      	uxtb	r1, r2
   12fc8:	4a31      	ldr	r2, [pc, #196]	; (13090 <ConsoleProc+0x1c5c>)
   12fca:	7011      	strb	r1, [r2, #0]
   12fcc:	0019      	movs	r1, r3
   12fce:	4b2e      	ldr	r3, [pc, #184]	; (13088 <ConsoleProc+0x1c54>)
   12fd0:	221f      	movs	r2, #31
   12fd2:	18ba      	adds	r2, r7, r2
   12fd4:	7812      	ldrb	r2, [r2, #0]
   12fd6:	545a      	strb	r2, [r3, r1]
				if(chkecho)	printf("%c",rxChar);
   12fd8:	4b13      	ldr	r3, [pc, #76]	; (13028 <ConsoleProc+0x1bf4>)
   12fda:	781b      	ldrb	r3, [r3, #0]
   12fdc:	2b00      	cmp	r3, #0
   12fde:	d017      	beq.n	13010 <ConsoleProc+0x1bdc>
   12fe0:	231f      	movs	r3, #31
   12fe2:	18fb      	adds	r3, r7, r3
   12fe4:	781b      	ldrb	r3, [r3, #0]
   12fe6:	0018      	movs	r0, r3
   12fe8:	4b0c      	ldr	r3, [pc, #48]	; (1301c <ConsoleProc+0x1be8>)
   12fea:	4798      	blx	r3
}
   12fec:	e010      	b.n	13010 <ConsoleProc+0x1bdc>
						break;
   12fee:	46c0      	nop			; (mov r8, r8)
   12ff0:	e00e      	b.n	13010 <ConsoleProc+0x1bdc>
						break;
   12ff2:	46c0      	nop			; (mov r8, r8)
   12ff4:	e00c      	b.n	13010 <ConsoleProc+0x1bdc>
						break;
   12ff6:	46c0      	nop			; (mov r8, r8)
   12ff8:	e00a      	b.n	13010 <ConsoleProc+0x1bdc>
						break;
   12ffa:	46c0      	nop			; (mov r8, r8)
   12ffc:	e008      	b.n	13010 <ConsoleProc+0x1bdc>
						break;
   12ffe:	46c0      	nop			; (mov r8, r8)
   13000:	e006      	b.n	13010 <ConsoleProc+0x1bdc>
						break;
   13002:	46c0      	nop			; (mov r8, r8)
   13004:	e004      	b.n	13010 <ConsoleProc+0x1bdc>
						break;
   13006:	46c0      	nop			; (mov r8, r8)
   13008:	e002      	b.n	13010 <ConsoleProc+0x1bdc>
						break;
   1300a:	46c0      	nop			; (mov r8, r8)
   1300c:	e000      	b.n	13010 <ConsoleProc+0x1bdc>
						break;
   1300e:	46c0      	nop			; (mov r8, r8)
}
   13010:	46c0      	nop			; (mov r8, r8)
   13012:	46bd      	mov	sp, r7
   13014:	b00d      	add	sp, #52	; 0x34
   13016:	bd90      	pop	{r4, r7, pc}
   13018:	00006a51 	.word	0x00006a51
   1301c:	00017851 	.word	0x00017851
   13020:	00017cb1 	.word	0x00017cb1
   13024:	20001290 	.word	0x20001290
   13028:	2000002c 	.word	0x2000002c
   1302c:	0001dbb4 	.word	0x0001dbb4
   13030:	0001782d 	.word	0x0001782d
   13034:	2000151c 	.word	0x2000151c
   13038:	0000e8a1 	.word	0x0000e8a1
   1303c:	0001dbcc 	.word	0x0001dbcc
   13040:	200014b5 	.word	0x200014b5
   13044:	0001dbe8 	.word	0x0001dbe8
   13048:	2000114c 	.word	0x2000114c
   1304c:	0001dc00 	.word	0x0001dc00
   13050:	0001dc18 	.word	0x0001dc18
   13054:	20001140 	.word	0x20001140
   13058:	0001dc2c 	.word	0x0001dc2c
   1305c:	0001dc44 	.word	0x0001dc44
   13060:	20000010 	.word	0x20000010
   13064:	0001dc54 	.word	0x0001dc54
   13068:	20000030 	.word	0x20000030
   1306c:	0001dc5c 	.word	0x0001dc5c
   13070:	2000002e 	.word	0x2000002e
   13074:	0001dc7c 	.word	0x0001dc7c
   13078:	0001dc98 	.word	0x0001dc98
   1307c:	0000c625 	.word	0x0000c625
   13080:	0001d380 	.word	0x0001d380
   13084:	20001af8 	.word	0x20001af8
   13088:	200012e4 	.word	0x200012e4
   1308c:	0001dcb0 	.word	0x0001dcb0
   13090:	200012dc 	.word	0x200012dc
   13094:	0001dcc8 	.word	0x0001dcc8
   13098:	0000f90d 	.word	0x0000f90d

0001309c <test_console>:

void test_console(void){
   1309c:	b590      	push	{r4, r7, lr}
   1309e:	b083      	sub	sp, #12
   130a0:	af00      	add	r7, sp, #0
	uint8_t rlt;
	
	uint32_t t3;
	
	if(unicast_test_f){
   130a2:	4bfb      	ldr	r3, [pc, #1004]	; (13490 <test_console+0x3f4>)
   130a4:	781b      	ldrb	r3, [r3, #0]
   130a6:	2b00      	cmp	r3, #0
   130a8:	d100      	bne.n	130ac <test_console+0x10>
   130aa:	e3da      	b.n	13862 <test_console+0x7c6>
		if(Time_Buffer2++ > 2500){				//5sec  =15000		7500
   130ac:	4bf9      	ldr	r3, [pc, #996]	; (13494 <test_console+0x3f8>)
   130ae:	685c      	ldr	r4, [r3, #4]
   130b0:	681b      	ldr	r3, [r3, #0]
   130b2:	2101      	movs	r1, #1
   130b4:	2200      	movs	r2, #0
   130b6:	18c9      	adds	r1, r1, r3
   130b8:	4162      	adcs	r2, r4
   130ba:	48f6      	ldr	r0, [pc, #984]	; (13494 <test_console+0x3f8>)
   130bc:	6001      	str	r1, [r0, #0]
   130be:	6042      	str	r2, [r0, #4]
   130c0:	2c00      	cmp	r4, #0
   130c2:	d105      	bne.n	130d0 <test_console+0x34>
   130c4:	d000      	beq.n	130c8 <test_console+0x2c>
   130c6:	e3cc      	b.n	13862 <test_console+0x7c6>
   130c8:	4af3      	ldr	r2, [pc, #972]	; (13498 <test_console+0x3fc>)
   130ca:	4293      	cmp	r3, r2
   130cc:	d800      	bhi.n	130d0 <test_console+0x34>
   130ce:	e3c8      	b.n	13862 <test_console+0x7c6>
			Time_Buffer2 = 0;
   130d0:	4af0      	ldr	r2, [pc, #960]	; (13494 <test_console+0x3f8>)
   130d2:	2300      	movs	r3, #0
   130d4:	2400      	movs	r4, #0
   130d6:	6013      	str	r3, [r2, #0]
   130d8:	6054      	str	r4, [r2, #4]
			Time_Counter++;
   130da:	4bf0      	ldr	r3, [pc, #960]	; (1349c <test_console+0x400>)
   130dc:	681b      	ldr	r3, [r3, #0]
   130de:	1c5a      	adds	r2, r3, #1
   130e0:	4bee      	ldr	r3, [pc, #952]	; (1349c <test_console+0x400>)
   130e2:	601a      	str	r2, [r3, #0]
				
			MiApp_FlushTx();
   130e4:	4bee      	ldr	r3, [pc, #952]	; (134a0 <test_console+0x404>)
   130e6:	220b      	movs	r2, #11
   130e8:	701a      	strb	r2, [r3, #0]
			MiApp_WriteData('D');
   130ea:	4bed      	ldr	r3, [pc, #948]	; (134a0 <test_console+0x404>)
   130ec:	781b      	ldrb	r3, [r3, #0]
   130ee:	1c5a      	adds	r2, r3, #1
   130f0:	b2d1      	uxtb	r1, r2
   130f2:	4aeb      	ldr	r2, [pc, #940]	; (134a0 <test_console+0x404>)
   130f4:	7011      	strb	r1, [r2, #0]
   130f6:	001a      	movs	r2, r3
   130f8:	4bea      	ldr	r3, [pc, #936]	; (134a4 <test_console+0x408>)
   130fa:	2144      	movs	r1, #68	; 0x44
   130fc:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('a');
   130fe:	4be8      	ldr	r3, [pc, #928]	; (134a0 <test_console+0x404>)
   13100:	781b      	ldrb	r3, [r3, #0]
   13102:	1c5a      	adds	r2, r3, #1
   13104:	b2d1      	uxtb	r1, r2
   13106:	4ae6      	ldr	r2, [pc, #920]	; (134a0 <test_console+0x404>)
   13108:	7011      	strb	r1, [r2, #0]
   1310a:	001a      	movs	r2, r3
   1310c:	4be5      	ldr	r3, [pc, #916]	; (134a4 <test_console+0x408>)
   1310e:	2161      	movs	r1, #97	; 0x61
   13110:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('t');
   13112:	4be3      	ldr	r3, [pc, #908]	; (134a0 <test_console+0x404>)
   13114:	781b      	ldrb	r3, [r3, #0]
   13116:	1c5a      	adds	r2, r3, #1
   13118:	b2d1      	uxtb	r1, r2
   1311a:	4ae1      	ldr	r2, [pc, #900]	; (134a0 <test_console+0x404>)
   1311c:	7011      	strb	r1, [r2, #0]
   1311e:	001a      	movs	r2, r3
   13120:	4be0      	ldr	r3, [pc, #896]	; (134a4 <test_console+0x408>)
   13122:	2174      	movs	r1, #116	; 0x74
   13124:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('a');
   13126:	4bde      	ldr	r3, [pc, #888]	; (134a0 <test_console+0x404>)
   13128:	781b      	ldrb	r3, [r3, #0]
   1312a:	1c5a      	adds	r2, r3, #1
   1312c:	b2d1      	uxtb	r1, r2
   1312e:	4adc      	ldr	r2, [pc, #880]	; (134a0 <test_console+0x404>)
   13130:	7011      	strb	r1, [r2, #0]
   13132:	001a      	movs	r2, r3
   13134:	4bdb      	ldr	r3, [pc, #876]	; (134a4 <test_console+0x408>)
   13136:	2161      	movs	r1, #97	; 0x61
   13138:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('=');			
   1313a:	4bd9      	ldr	r3, [pc, #868]	; (134a0 <test_console+0x404>)
   1313c:	781b      	ldrb	r3, [r3, #0]
   1313e:	1c5a      	adds	r2, r3, #1
   13140:	b2d1      	uxtb	r1, r2
   13142:	4ad7      	ldr	r2, [pc, #860]	; (134a0 <test_console+0x404>)
   13144:	7011      	strb	r1, [r2, #0]
   13146:	001a      	movs	r2, r3
   13148:	4bd6      	ldr	r3, [pc, #856]	; (134a4 <test_console+0x408>)
   1314a:	213d      	movs	r1, #61	; 0x3d
   1314c:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData((Time_Counter/1000000)+0x30);
   1314e:	4bd4      	ldr	r3, [pc, #848]	; (134a0 <test_console+0x404>)
   13150:	781b      	ldrb	r3, [r3, #0]
   13152:	1c5a      	adds	r2, r3, #1
   13154:	b2d1      	uxtb	r1, r2
   13156:	4ad2      	ldr	r2, [pc, #840]	; (134a0 <test_console+0x404>)
   13158:	7011      	strb	r1, [r2, #0]
   1315a:	001c      	movs	r4, r3
   1315c:	4bcf      	ldr	r3, [pc, #828]	; (1349c <test_console+0x400>)
   1315e:	681a      	ldr	r2, [r3, #0]
   13160:	4bd1      	ldr	r3, [pc, #836]	; (134a8 <test_console+0x40c>)
   13162:	49d2      	ldr	r1, [pc, #840]	; (134ac <test_console+0x410>)
   13164:	0010      	movs	r0, r2
   13166:	4798      	blx	r3
   13168:	0003      	movs	r3, r0
   1316a:	b2db      	uxtb	r3, r3
   1316c:	3330      	adds	r3, #48	; 0x30
   1316e:	b2da      	uxtb	r2, r3
   13170:	4bcc      	ldr	r3, [pc, #816]	; (134a4 <test_console+0x408>)
   13172:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((Time_Counter%1000000/100000)+0x30);
   13174:	4bca      	ldr	r3, [pc, #808]	; (134a0 <test_console+0x404>)
   13176:	781b      	ldrb	r3, [r3, #0]
   13178:	1c5a      	adds	r2, r3, #1
   1317a:	b2d1      	uxtb	r1, r2
   1317c:	4ac8      	ldr	r2, [pc, #800]	; (134a0 <test_console+0x404>)
   1317e:	7011      	strb	r1, [r2, #0]
   13180:	001c      	movs	r4, r3
   13182:	4bc6      	ldr	r3, [pc, #792]	; (1349c <test_console+0x400>)
   13184:	681a      	ldr	r2, [r3, #0]
   13186:	4bca      	ldr	r3, [pc, #808]	; (134b0 <test_console+0x414>)
   13188:	49c8      	ldr	r1, [pc, #800]	; (134ac <test_console+0x410>)
   1318a:	0010      	movs	r0, r2
   1318c:	4798      	blx	r3
   1318e:	000b      	movs	r3, r1
   13190:	001a      	movs	r2, r3
   13192:	4bc5      	ldr	r3, [pc, #788]	; (134a8 <test_console+0x40c>)
   13194:	49c7      	ldr	r1, [pc, #796]	; (134b4 <test_console+0x418>)
   13196:	0010      	movs	r0, r2
   13198:	4798      	blx	r3
   1319a:	0003      	movs	r3, r0
   1319c:	b2db      	uxtb	r3, r3
   1319e:	3330      	adds	r3, #48	; 0x30
   131a0:	b2da      	uxtb	r2, r3
   131a2:	4bc0      	ldr	r3, [pc, #768]	; (134a4 <test_console+0x408>)
   131a4:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((Time_Counter%1000000%100000/10000)+0x30);
   131a6:	4bbe      	ldr	r3, [pc, #760]	; (134a0 <test_console+0x404>)
   131a8:	781b      	ldrb	r3, [r3, #0]
   131aa:	1c5a      	adds	r2, r3, #1
   131ac:	b2d1      	uxtb	r1, r2
   131ae:	4abc      	ldr	r2, [pc, #752]	; (134a0 <test_console+0x404>)
   131b0:	7011      	strb	r1, [r2, #0]
   131b2:	001c      	movs	r4, r3
   131b4:	4bb9      	ldr	r3, [pc, #740]	; (1349c <test_console+0x400>)
   131b6:	681a      	ldr	r2, [r3, #0]
   131b8:	4bbd      	ldr	r3, [pc, #756]	; (134b0 <test_console+0x414>)
   131ba:	49bc      	ldr	r1, [pc, #752]	; (134ac <test_console+0x410>)
   131bc:	0010      	movs	r0, r2
   131be:	4798      	blx	r3
   131c0:	000b      	movs	r3, r1
   131c2:	001a      	movs	r2, r3
   131c4:	4bba      	ldr	r3, [pc, #744]	; (134b0 <test_console+0x414>)
   131c6:	49bb      	ldr	r1, [pc, #748]	; (134b4 <test_console+0x418>)
   131c8:	0010      	movs	r0, r2
   131ca:	4798      	blx	r3
   131cc:	000b      	movs	r3, r1
   131ce:	001a      	movs	r2, r3
   131d0:	4bb5      	ldr	r3, [pc, #724]	; (134a8 <test_console+0x40c>)
   131d2:	49b9      	ldr	r1, [pc, #740]	; (134b8 <test_console+0x41c>)
   131d4:	0010      	movs	r0, r2
   131d6:	4798      	blx	r3
   131d8:	0003      	movs	r3, r0
   131da:	b2db      	uxtb	r3, r3
   131dc:	3330      	adds	r3, #48	; 0x30
   131de:	b2da      	uxtb	r2, r3
   131e0:	4bb0      	ldr	r3, [pc, #704]	; (134a4 <test_console+0x408>)
   131e2:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((Time_Counter%1000000%100000%10000/1000)+0x30);
   131e4:	4bae      	ldr	r3, [pc, #696]	; (134a0 <test_console+0x404>)
   131e6:	781b      	ldrb	r3, [r3, #0]
   131e8:	1c5a      	adds	r2, r3, #1
   131ea:	b2d1      	uxtb	r1, r2
   131ec:	4aac      	ldr	r2, [pc, #688]	; (134a0 <test_console+0x404>)
   131ee:	7011      	strb	r1, [r2, #0]
   131f0:	001c      	movs	r4, r3
   131f2:	4baa      	ldr	r3, [pc, #680]	; (1349c <test_console+0x400>)
   131f4:	681a      	ldr	r2, [r3, #0]
   131f6:	4bae      	ldr	r3, [pc, #696]	; (134b0 <test_console+0x414>)
   131f8:	49ac      	ldr	r1, [pc, #688]	; (134ac <test_console+0x410>)
   131fa:	0010      	movs	r0, r2
   131fc:	4798      	blx	r3
   131fe:	000b      	movs	r3, r1
   13200:	001a      	movs	r2, r3
   13202:	4bab      	ldr	r3, [pc, #684]	; (134b0 <test_console+0x414>)
   13204:	49ab      	ldr	r1, [pc, #684]	; (134b4 <test_console+0x418>)
   13206:	0010      	movs	r0, r2
   13208:	4798      	blx	r3
   1320a:	000b      	movs	r3, r1
   1320c:	001a      	movs	r2, r3
   1320e:	4ba8      	ldr	r3, [pc, #672]	; (134b0 <test_console+0x414>)
   13210:	49a9      	ldr	r1, [pc, #676]	; (134b8 <test_console+0x41c>)
   13212:	0010      	movs	r0, r2
   13214:	4798      	blx	r3
   13216:	000b      	movs	r3, r1
   13218:	0018      	movs	r0, r3
   1321a:	4ba3      	ldr	r3, [pc, #652]	; (134a8 <test_console+0x40c>)
   1321c:	22fa      	movs	r2, #250	; 0xfa
   1321e:	0091      	lsls	r1, r2, #2
   13220:	4798      	blx	r3
   13222:	0003      	movs	r3, r0
   13224:	b2db      	uxtb	r3, r3
   13226:	3330      	adds	r3, #48	; 0x30
   13228:	b2da      	uxtb	r2, r3
   1322a:	4b9e      	ldr	r3, [pc, #632]	; (134a4 <test_console+0x408>)
   1322c:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((Time_Counter%1000000%100000%10000%1000/100)+0x30);
   1322e:	4b9c      	ldr	r3, [pc, #624]	; (134a0 <test_console+0x404>)
   13230:	781b      	ldrb	r3, [r3, #0]
   13232:	1c5a      	adds	r2, r3, #1
   13234:	b2d1      	uxtb	r1, r2
   13236:	4a9a      	ldr	r2, [pc, #616]	; (134a0 <test_console+0x404>)
   13238:	7011      	strb	r1, [r2, #0]
   1323a:	001c      	movs	r4, r3
   1323c:	4b97      	ldr	r3, [pc, #604]	; (1349c <test_console+0x400>)
   1323e:	681a      	ldr	r2, [r3, #0]
   13240:	4b9b      	ldr	r3, [pc, #620]	; (134b0 <test_console+0x414>)
   13242:	499a      	ldr	r1, [pc, #616]	; (134ac <test_console+0x410>)
   13244:	0010      	movs	r0, r2
   13246:	4798      	blx	r3
   13248:	000b      	movs	r3, r1
   1324a:	001a      	movs	r2, r3
   1324c:	4b98      	ldr	r3, [pc, #608]	; (134b0 <test_console+0x414>)
   1324e:	4999      	ldr	r1, [pc, #612]	; (134b4 <test_console+0x418>)
   13250:	0010      	movs	r0, r2
   13252:	4798      	blx	r3
   13254:	000b      	movs	r3, r1
   13256:	001a      	movs	r2, r3
   13258:	4b95      	ldr	r3, [pc, #596]	; (134b0 <test_console+0x414>)
   1325a:	4997      	ldr	r1, [pc, #604]	; (134b8 <test_console+0x41c>)
   1325c:	0010      	movs	r0, r2
   1325e:	4798      	blx	r3
   13260:	000b      	movs	r3, r1
   13262:	0018      	movs	r0, r3
   13264:	4b92      	ldr	r3, [pc, #584]	; (134b0 <test_console+0x414>)
   13266:	22fa      	movs	r2, #250	; 0xfa
   13268:	0091      	lsls	r1, r2, #2
   1326a:	4798      	blx	r3
   1326c:	000b      	movs	r3, r1
   1326e:	001a      	movs	r2, r3
   13270:	4b8d      	ldr	r3, [pc, #564]	; (134a8 <test_console+0x40c>)
   13272:	2164      	movs	r1, #100	; 0x64
   13274:	0010      	movs	r0, r2
   13276:	4798      	blx	r3
   13278:	0003      	movs	r3, r0
   1327a:	b2db      	uxtb	r3, r3
   1327c:	3330      	adds	r3, #48	; 0x30
   1327e:	b2da      	uxtb	r2, r3
   13280:	4b88      	ldr	r3, [pc, #544]	; (134a4 <test_console+0x408>)
   13282:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((Time_Counter%1000000%100000%10000%1000%100/10)+0x30);
   13284:	4b86      	ldr	r3, [pc, #536]	; (134a0 <test_console+0x404>)
   13286:	781b      	ldrb	r3, [r3, #0]
   13288:	1c5a      	adds	r2, r3, #1
   1328a:	b2d1      	uxtb	r1, r2
   1328c:	4a84      	ldr	r2, [pc, #528]	; (134a0 <test_console+0x404>)
   1328e:	7011      	strb	r1, [r2, #0]
   13290:	001c      	movs	r4, r3
   13292:	4b82      	ldr	r3, [pc, #520]	; (1349c <test_console+0x400>)
   13294:	681a      	ldr	r2, [r3, #0]
   13296:	4b86      	ldr	r3, [pc, #536]	; (134b0 <test_console+0x414>)
   13298:	4984      	ldr	r1, [pc, #528]	; (134ac <test_console+0x410>)
   1329a:	0010      	movs	r0, r2
   1329c:	4798      	blx	r3
   1329e:	000b      	movs	r3, r1
   132a0:	001a      	movs	r2, r3
   132a2:	4b83      	ldr	r3, [pc, #524]	; (134b0 <test_console+0x414>)
   132a4:	4983      	ldr	r1, [pc, #524]	; (134b4 <test_console+0x418>)
   132a6:	0010      	movs	r0, r2
   132a8:	4798      	blx	r3
   132aa:	000b      	movs	r3, r1
   132ac:	001a      	movs	r2, r3
   132ae:	4b80      	ldr	r3, [pc, #512]	; (134b0 <test_console+0x414>)
   132b0:	4981      	ldr	r1, [pc, #516]	; (134b8 <test_console+0x41c>)
   132b2:	0010      	movs	r0, r2
   132b4:	4798      	blx	r3
   132b6:	000b      	movs	r3, r1
   132b8:	0018      	movs	r0, r3
   132ba:	4b7d      	ldr	r3, [pc, #500]	; (134b0 <test_console+0x414>)
   132bc:	22fa      	movs	r2, #250	; 0xfa
   132be:	0091      	lsls	r1, r2, #2
   132c0:	4798      	blx	r3
   132c2:	000b      	movs	r3, r1
   132c4:	001a      	movs	r2, r3
   132c6:	4b7a      	ldr	r3, [pc, #488]	; (134b0 <test_console+0x414>)
   132c8:	2164      	movs	r1, #100	; 0x64
   132ca:	0010      	movs	r0, r2
   132cc:	4798      	blx	r3
   132ce:	000b      	movs	r3, r1
   132d0:	001a      	movs	r2, r3
   132d2:	4b75      	ldr	r3, [pc, #468]	; (134a8 <test_console+0x40c>)
   132d4:	210a      	movs	r1, #10
   132d6:	0010      	movs	r0, r2
   132d8:	4798      	blx	r3
   132da:	0003      	movs	r3, r0
   132dc:	b2db      	uxtb	r3, r3
   132de:	3330      	adds	r3, #48	; 0x30
   132e0:	b2da      	uxtb	r2, r3
   132e2:	4b70      	ldr	r3, [pc, #448]	; (134a4 <test_console+0x408>)
   132e4:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((Time_Counter%1000000%100000%10000%1000%100%10)+0x30);
   132e6:	4b6e      	ldr	r3, [pc, #440]	; (134a0 <test_console+0x404>)
   132e8:	781b      	ldrb	r3, [r3, #0]
   132ea:	1c5a      	adds	r2, r3, #1
   132ec:	b2d1      	uxtb	r1, r2
   132ee:	4a6c      	ldr	r2, [pc, #432]	; (134a0 <test_console+0x404>)
   132f0:	7011      	strb	r1, [r2, #0]
   132f2:	001c      	movs	r4, r3
   132f4:	4b69      	ldr	r3, [pc, #420]	; (1349c <test_console+0x400>)
   132f6:	681a      	ldr	r2, [r3, #0]
   132f8:	4b6d      	ldr	r3, [pc, #436]	; (134b0 <test_console+0x414>)
   132fa:	496c      	ldr	r1, [pc, #432]	; (134ac <test_console+0x410>)
   132fc:	0010      	movs	r0, r2
   132fe:	4798      	blx	r3
   13300:	000b      	movs	r3, r1
   13302:	001a      	movs	r2, r3
   13304:	4b6a      	ldr	r3, [pc, #424]	; (134b0 <test_console+0x414>)
   13306:	496b      	ldr	r1, [pc, #428]	; (134b4 <test_console+0x418>)
   13308:	0010      	movs	r0, r2
   1330a:	4798      	blx	r3
   1330c:	000b      	movs	r3, r1
   1330e:	001a      	movs	r2, r3
   13310:	4b67      	ldr	r3, [pc, #412]	; (134b0 <test_console+0x414>)
   13312:	4969      	ldr	r1, [pc, #420]	; (134b8 <test_console+0x41c>)
   13314:	0010      	movs	r0, r2
   13316:	4798      	blx	r3
   13318:	000b      	movs	r3, r1
   1331a:	0018      	movs	r0, r3
   1331c:	4b64      	ldr	r3, [pc, #400]	; (134b0 <test_console+0x414>)
   1331e:	22fa      	movs	r2, #250	; 0xfa
   13320:	0091      	lsls	r1, r2, #2
   13322:	4798      	blx	r3
   13324:	000b      	movs	r3, r1
   13326:	001a      	movs	r2, r3
   13328:	4b61      	ldr	r3, [pc, #388]	; (134b0 <test_console+0x414>)
   1332a:	2164      	movs	r1, #100	; 0x64
   1332c:	0010      	movs	r0, r2
   1332e:	4798      	blx	r3
   13330:	000b      	movs	r3, r1
   13332:	001a      	movs	r2, r3
   13334:	4b5e      	ldr	r3, [pc, #376]	; (134b0 <test_console+0x414>)
   13336:	210a      	movs	r1, #10
   13338:	0010      	movs	r0, r2
   1333a:	4798      	blx	r3
   1333c:	000b      	movs	r3, r1
   1333e:	b2db      	uxtb	r3, r3
   13340:	3330      	adds	r3, #48	; 0x30
   13342:	b2da      	uxtb	r2, r3
   13344:	4b57      	ldr	r3, [pc, #348]	; (134a4 <test_console+0x408>)
   13346:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData(',');
   13348:	4b55      	ldr	r3, [pc, #340]	; (134a0 <test_console+0x404>)
   1334a:	781b      	ldrb	r3, [r3, #0]
   1334c:	1c5a      	adds	r2, r3, #1
   1334e:	b2d1      	uxtb	r1, r2
   13350:	4a53      	ldr	r2, [pc, #332]	; (134a0 <test_console+0x404>)
   13352:	7011      	strb	r1, [r2, #0]
   13354:	001a      	movs	r2, r3
   13356:	4b53      	ldr	r3, [pc, #332]	; (134a4 <test_console+0x408>)
   13358:	212c      	movs	r1, #44	; 0x2c
   1335a:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(' ');
   1335c:	4b50      	ldr	r3, [pc, #320]	; (134a0 <test_console+0x404>)
   1335e:	781b      	ldrb	r3, [r3, #0]
   13360:	1c5a      	adds	r2, r3, #1
   13362:	b2d1      	uxtb	r1, r2
   13364:	4a4e      	ldr	r2, [pc, #312]	; (134a0 <test_console+0x404>)
   13366:	7011      	strb	r1, [r2, #0]
   13368:	001a      	movs	r2, r3
   1336a:	4b4e      	ldr	r3, [pc, #312]	; (134a4 <test_console+0x408>)
   1336c:	2120      	movs	r1, #32
   1336e:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('E');
   13370:	4b4b      	ldr	r3, [pc, #300]	; (134a0 <test_console+0x404>)
   13372:	781b      	ldrb	r3, [r3, #0]
   13374:	1c5a      	adds	r2, r3, #1
   13376:	b2d1      	uxtb	r1, r2
   13378:	4a49      	ldr	r2, [pc, #292]	; (134a0 <test_console+0x404>)
   1337a:	7011      	strb	r1, [r2, #0]
   1337c:	001a      	movs	r2, r3
   1337e:	4b49      	ldr	r3, [pc, #292]	; (134a4 <test_console+0x408>)
   13380:	2145      	movs	r1, #69	; 0x45
   13382:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('r');
   13384:	4b46      	ldr	r3, [pc, #280]	; (134a0 <test_console+0x404>)
   13386:	781b      	ldrb	r3, [r3, #0]
   13388:	1c5a      	adds	r2, r3, #1
   1338a:	b2d1      	uxtb	r1, r2
   1338c:	4a44      	ldr	r2, [pc, #272]	; (134a0 <test_console+0x404>)
   1338e:	7011      	strb	r1, [r2, #0]
   13390:	001a      	movs	r2, r3
   13392:	4b44      	ldr	r3, [pc, #272]	; (134a4 <test_console+0x408>)
   13394:	2172      	movs	r1, #114	; 0x72
   13396:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('r');
   13398:	4b41      	ldr	r3, [pc, #260]	; (134a0 <test_console+0x404>)
   1339a:	781b      	ldrb	r3, [r3, #0]
   1339c:	1c5a      	adds	r2, r3, #1
   1339e:	b2d1      	uxtb	r1, r2
   133a0:	4a3f      	ldr	r2, [pc, #252]	; (134a0 <test_console+0x404>)
   133a2:	7011      	strb	r1, [r2, #0]
   133a4:	001a      	movs	r2, r3
   133a6:	4b3f      	ldr	r3, [pc, #252]	; (134a4 <test_console+0x408>)
   133a8:	2172      	movs	r1, #114	; 0x72
   133aa:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('o');
   133ac:	4b3c      	ldr	r3, [pc, #240]	; (134a0 <test_console+0x404>)
   133ae:	781b      	ldrb	r3, [r3, #0]
   133b0:	1c5a      	adds	r2, r3, #1
   133b2:	b2d1      	uxtb	r1, r2
   133b4:	4a3a      	ldr	r2, [pc, #232]	; (134a0 <test_console+0x404>)
   133b6:	7011      	strb	r1, [r2, #0]
   133b8:	001a      	movs	r2, r3
   133ba:	4b3a      	ldr	r3, [pc, #232]	; (134a4 <test_console+0x408>)
   133bc:	216f      	movs	r1, #111	; 0x6f
   133be:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('r');
   133c0:	4b37      	ldr	r3, [pc, #220]	; (134a0 <test_console+0x404>)
   133c2:	781b      	ldrb	r3, [r3, #0]
   133c4:	1c5a      	adds	r2, r3, #1
   133c6:	b2d1      	uxtb	r1, r2
   133c8:	4a35      	ldr	r2, [pc, #212]	; (134a0 <test_console+0x404>)
   133ca:	7011      	strb	r1, [r2, #0]
   133cc:	001a      	movs	r2, r3
   133ce:	4b35      	ldr	r3, [pc, #212]	; (134a4 <test_console+0x408>)
   133d0:	2172      	movs	r1, #114	; 0x72
   133d2:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('=');
   133d4:	4b32      	ldr	r3, [pc, #200]	; (134a0 <test_console+0x404>)
   133d6:	781b      	ldrb	r3, [r3, #0]
   133d8:	1c5a      	adds	r2, r3, #1
   133da:	b2d1      	uxtb	r1, r2
   133dc:	4a30      	ldr	r2, [pc, #192]	; (134a0 <test_console+0x404>)
   133de:	7011      	strb	r1, [r2, #0]
   133e0:	001a      	movs	r2, r3
   133e2:	4b30      	ldr	r3, [pc, #192]	; (134a4 <test_console+0x408>)
   133e4:	213d      	movs	r1, #61	; 0x3d
   133e6:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData((error_count/1000)+0x30);
   133e8:	4b2d      	ldr	r3, [pc, #180]	; (134a0 <test_console+0x404>)
   133ea:	781b      	ldrb	r3, [r3, #0]
   133ec:	1c5a      	adds	r2, r3, #1
   133ee:	b2d1      	uxtb	r1, r2
   133f0:	4a2b      	ldr	r2, [pc, #172]	; (134a0 <test_console+0x404>)
   133f2:	7011      	strb	r1, [r2, #0]
   133f4:	001c      	movs	r4, r3
   133f6:	4b31      	ldr	r3, [pc, #196]	; (134bc <test_console+0x420>)
   133f8:	6818      	ldr	r0, [r3, #0]
   133fa:	4b2b      	ldr	r3, [pc, #172]	; (134a8 <test_console+0x40c>)
   133fc:	22fa      	movs	r2, #250	; 0xfa
   133fe:	0091      	lsls	r1, r2, #2
   13400:	4798      	blx	r3
   13402:	0003      	movs	r3, r0
   13404:	b2db      	uxtb	r3, r3
   13406:	3330      	adds	r3, #48	; 0x30
   13408:	b2da      	uxtb	r2, r3
   1340a:	4b26      	ldr	r3, [pc, #152]	; (134a4 <test_console+0x408>)
   1340c:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((error_count%1000/100)+0x30);
   1340e:	4b24      	ldr	r3, [pc, #144]	; (134a0 <test_console+0x404>)
   13410:	781b      	ldrb	r3, [r3, #0]
   13412:	1c5a      	adds	r2, r3, #1
   13414:	b2d1      	uxtb	r1, r2
   13416:	4a22      	ldr	r2, [pc, #136]	; (134a0 <test_console+0x404>)
   13418:	7011      	strb	r1, [r2, #0]
   1341a:	001c      	movs	r4, r3
   1341c:	4b27      	ldr	r3, [pc, #156]	; (134bc <test_console+0x420>)
   1341e:	6818      	ldr	r0, [r3, #0]
   13420:	4b23      	ldr	r3, [pc, #140]	; (134b0 <test_console+0x414>)
   13422:	22fa      	movs	r2, #250	; 0xfa
   13424:	0091      	lsls	r1, r2, #2
   13426:	4798      	blx	r3
   13428:	000b      	movs	r3, r1
   1342a:	001a      	movs	r2, r3
   1342c:	4b1e      	ldr	r3, [pc, #120]	; (134a8 <test_console+0x40c>)
   1342e:	2164      	movs	r1, #100	; 0x64
   13430:	0010      	movs	r0, r2
   13432:	4798      	blx	r3
   13434:	0003      	movs	r3, r0
   13436:	b2db      	uxtb	r3, r3
   13438:	3330      	adds	r3, #48	; 0x30
   1343a:	b2da      	uxtb	r2, r3
   1343c:	4b19      	ldr	r3, [pc, #100]	; (134a4 <test_console+0x408>)
   1343e:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((error_count%1000%100/10)+0x30);
   13440:	4b17      	ldr	r3, [pc, #92]	; (134a0 <test_console+0x404>)
   13442:	781b      	ldrb	r3, [r3, #0]
   13444:	1c5a      	adds	r2, r3, #1
   13446:	b2d1      	uxtb	r1, r2
   13448:	4a15      	ldr	r2, [pc, #84]	; (134a0 <test_console+0x404>)
   1344a:	7011      	strb	r1, [r2, #0]
   1344c:	001c      	movs	r4, r3
   1344e:	4b1b      	ldr	r3, [pc, #108]	; (134bc <test_console+0x420>)
   13450:	6818      	ldr	r0, [r3, #0]
   13452:	4b17      	ldr	r3, [pc, #92]	; (134b0 <test_console+0x414>)
   13454:	22fa      	movs	r2, #250	; 0xfa
   13456:	0091      	lsls	r1, r2, #2
   13458:	4798      	blx	r3
   1345a:	000b      	movs	r3, r1
   1345c:	001a      	movs	r2, r3
   1345e:	4b14      	ldr	r3, [pc, #80]	; (134b0 <test_console+0x414>)
   13460:	2164      	movs	r1, #100	; 0x64
   13462:	0010      	movs	r0, r2
   13464:	4798      	blx	r3
   13466:	000b      	movs	r3, r1
   13468:	001a      	movs	r2, r3
   1346a:	4b0f      	ldr	r3, [pc, #60]	; (134a8 <test_console+0x40c>)
   1346c:	210a      	movs	r1, #10
   1346e:	0010      	movs	r0, r2
   13470:	4798      	blx	r3
   13472:	0003      	movs	r3, r0
   13474:	b2db      	uxtb	r3, r3
   13476:	3330      	adds	r3, #48	; 0x30
   13478:	b2da      	uxtb	r2, r3
   1347a:	4b0a      	ldr	r3, [pc, #40]	; (134a4 <test_console+0x408>)
   1347c:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((error_count%1000%100%10)+0x30);
   1347e:	4b08      	ldr	r3, [pc, #32]	; (134a0 <test_console+0x404>)
   13480:	781b      	ldrb	r3, [r3, #0]
   13482:	1c5a      	adds	r2, r3, #1
   13484:	b2d1      	uxtb	r1, r2
   13486:	4a06      	ldr	r2, [pc, #24]	; (134a0 <test_console+0x404>)
   13488:	7011      	strb	r1, [r2, #0]
   1348a:	001c      	movs	r4, r3
   1348c:	e018      	b.n	134c0 <test_console+0x424>
   1348e:	46c0      	nop			; (mov r8, r8)
   13490:	20000c7e 	.word	0x20000c7e
   13494:	20001ae0 	.word	0x20001ae0
   13498:	000009c4 	.word	0x000009c4
   1349c:	20001c00 	.word	0x20001c00
   134a0:	200012dc 	.word	0x200012dc
   134a4:	200012e4 	.word	0x200012e4
   134a8:	0001498d 	.word	0x0001498d
   134ac:	000f4240 	.word	0x000f4240
   134b0:	00014a99 	.word	0x00014a99
   134b4:	000186a0 	.word	0x000186a0
   134b8:	00002710 	.word	0x00002710
   134bc:	20001b0c 	.word	0x20001b0c
   134c0:	4bf4      	ldr	r3, [pc, #976]	; (13894 <test_console+0x7f8>)
   134c2:	6818      	ldr	r0, [r3, #0]
   134c4:	4bf4      	ldr	r3, [pc, #976]	; (13898 <test_console+0x7fc>)
   134c6:	22fa      	movs	r2, #250	; 0xfa
   134c8:	0091      	lsls	r1, r2, #2
   134ca:	4798      	blx	r3
   134cc:	000b      	movs	r3, r1
   134ce:	001a      	movs	r2, r3
   134d0:	4bf1      	ldr	r3, [pc, #964]	; (13898 <test_console+0x7fc>)
   134d2:	2164      	movs	r1, #100	; 0x64
   134d4:	0010      	movs	r0, r2
   134d6:	4798      	blx	r3
   134d8:	000b      	movs	r3, r1
   134da:	001a      	movs	r2, r3
   134dc:	4bee      	ldr	r3, [pc, #952]	; (13898 <test_console+0x7fc>)
   134de:	210a      	movs	r1, #10
   134e0:	0010      	movs	r0, r2
   134e2:	4798      	blx	r3
   134e4:	000b      	movs	r3, r1
   134e6:	b2db      	uxtb	r3, r3
   134e8:	3330      	adds	r3, #48	; 0x30
   134ea:	b2da      	uxtb	r2, r3
   134ec:	4beb      	ldr	r3, [pc, #940]	; (1389c <test_console+0x800>)
   134ee:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData(' ');	//25
   134f0:	4beb      	ldr	r3, [pc, #940]	; (138a0 <test_console+0x804>)
   134f2:	781b      	ldrb	r3, [r3, #0]
   134f4:	1c5a      	adds	r2, r3, #1
   134f6:	b2d1      	uxtb	r1, r2
   134f8:	4ae9      	ldr	r2, [pc, #932]	; (138a0 <test_console+0x804>)
   134fa:	7011      	strb	r1, [r2, #0]
   134fc:	001a      	movs	r2, r3
   134fe:	4be7      	ldr	r3, [pc, #924]	; (1389c <test_console+0x800>)
   13500:	2120      	movs	r1, #32
   13502:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(' ');	//26
   13504:	4be6      	ldr	r3, [pc, #920]	; (138a0 <test_console+0x804>)
   13506:	781b      	ldrb	r3, [r3, #0]
   13508:	1c5a      	adds	r2, r3, #1
   1350a:	b2d1      	uxtb	r1, r2
   1350c:	4ae4      	ldr	r2, [pc, #912]	; (138a0 <test_console+0x804>)
   1350e:	7011      	strb	r1, [r2, #0]
   13510:	001a      	movs	r2, r3
   13512:	4be2      	ldr	r3, [pc, #904]	; (1389c <test_console+0x800>)
   13514:	2120      	movs	r1, #32
   13516:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(' ');	//27
   13518:	4be1      	ldr	r3, [pc, #900]	; (138a0 <test_console+0x804>)
   1351a:	781b      	ldrb	r3, [r3, #0]
   1351c:	1c5a      	adds	r2, r3, #1
   1351e:	b2d1      	uxtb	r1, r2
   13520:	4adf      	ldr	r2, [pc, #892]	; (138a0 <test_console+0x804>)
   13522:	7011      	strb	r1, [r2, #0]
   13524:	001a      	movs	r2, r3
   13526:	4bdd      	ldr	r3, [pc, #884]	; (1389c <test_console+0x800>)
   13528:	2120      	movs	r1, #32
   1352a:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('T');	//28
   1352c:	4bdc      	ldr	r3, [pc, #880]	; (138a0 <test_console+0x804>)
   1352e:	781b      	ldrb	r3, [r3, #0]
   13530:	1c5a      	adds	r2, r3, #1
   13532:	b2d1      	uxtb	r1, r2
   13534:	4ada      	ldr	r2, [pc, #872]	; (138a0 <test_console+0x804>)
   13536:	7011      	strb	r1, [r2, #0]
   13538:	001a      	movs	r2, r3
   1353a:	4bd8      	ldr	r3, [pc, #864]	; (1389c <test_console+0x800>)
   1353c:	2154      	movs	r1, #84	; 0x54
   1353e:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('o');	//29
   13540:	4bd7      	ldr	r3, [pc, #860]	; (138a0 <test_console+0x804>)
   13542:	781b      	ldrb	r3, [r3, #0]
   13544:	1c5a      	adds	r2, r3, #1
   13546:	b2d1      	uxtb	r1, r2
   13548:	4ad5      	ldr	r2, [pc, #852]	; (138a0 <test_console+0x804>)
   1354a:	7011      	strb	r1, [r2, #0]
   1354c:	001a      	movs	r2, r3
   1354e:	4bd3      	ldr	r3, [pc, #844]	; (1389c <test_console+0x800>)
   13550:	216f      	movs	r1, #111	; 0x6f
   13552:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('t');	//30
   13554:	4bd2      	ldr	r3, [pc, #840]	; (138a0 <test_console+0x804>)
   13556:	781b      	ldrb	r3, [r3, #0]
   13558:	1c5a      	adds	r2, r3, #1
   1355a:	b2d1      	uxtb	r1, r2
   1355c:	4ad0      	ldr	r2, [pc, #832]	; (138a0 <test_console+0x804>)
   1355e:	7011      	strb	r1, [r2, #0]
   13560:	001a      	movs	r2, r3
   13562:	4bce      	ldr	r3, [pc, #824]	; (1389c <test_console+0x800>)
   13564:	2174      	movs	r1, #116	; 0x74
   13566:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('a');	//31
   13568:	4bcd      	ldr	r3, [pc, #820]	; (138a0 <test_console+0x804>)
   1356a:	781b      	ldrb	r3, [r3, #0]
   1356c:	1c5a      	adds	r2, r3, #1
   1356e:	b2d1      	uxtb	r1, r2
   13570:	4acb      	ldr	r2, [pc, #812]	; (138a0 <test_console+0x804>)
   13572:	7011      	strb	r1, [r2, #0]
   13574:	001a      	movs	r2, r3
   13576:	4bc9      	ldr	r3, [pc, #804]	; (1389c <test_console+0x800>)
   13578:	2161      	movs	r1, #97	; 0x61
   1357a:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('l');	//32
   1357c:	4bc8      	ldr	r3, [pc, #800]	; (138a0 <test_console+0x804>)
   1357e:	781b      	ldrb	r3, [r3, #0]
   13580:	1c5a      	adds	r2, r3, #1
   13582:	b2d1      	uxtb	r1, r2
   13584:	4ac6      	ldr	r2, [pc, #792]	; (138a0 <test_console+0x804>)
   13586:	7011      	strb	r1, [r2, #0]
   13588:	001a      	movs	r2, r3
   1358a:	4bc4      	ldr	r3, [pc, #784]	; (1389c <test_console+0x800>)
   1358c:	216c      	movs	r1, #108	; 0x6c
   1358e:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(':');	//33
   13590:	4bc3      	ldr	r3, [pc, #780]	; (138a0 <test_console+0x804>)
   13592:	781b      	ldrb	r3, [r3, #0]
   13594:	1c5a      	adds	r2, r3, #1
   13596:	b2d1      	uxtb	r1, r2
   13598:	4ac1      	ldr	r2, [pc, #772]	; (138a0 <test_console+0x804>)
   1359a:	7011      	strb	r1, [r2, #0]
   1359c:	001a      	movs	r2, r3
   1359e:	4bbf      	ldr	r3, [pc, #764]	; (1389c <test_console+0x800>)
   135a0:	213a      	movs	r1, #58	; 0x3a
   135a2:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('6');	//34
   135a4:	4bbe      	ldr	r3, [pc, #760]	; (138a0 <test_console+0x804>)
   135a6:	781b      	ldrb	r3, [r3, #0]
   135a8:	1c5a      	adds	r2, r3, #1
   135aa:	b2d1      	uxtb	r1, r2
   135ac:	4abc      	ldr	r2, [pc, #752]	; (138a0 <test_console+0x804>)
   135ae:	7011      	strb	r1, [r2, #0]
   135b0:	001a      	movs	r2, r3
   135b2:	4bba      	ldr	r3, [pc, #744]	; (1389c <test_console+0x800>)
   135b4:	2136      	movs	r1, #54	; 0x36
   135b6:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('0');	//35
   135b8:	4bb9      	ldr	r3, [pc, #740]	; (138a0 <test_console+0x804>)
   135ba:	781b      	ldrb	r3, [r3, #0]
   135bc:	1c5a      	adds	r2, r3, #1
   135be:	b2d1      	uxtb	r1, r2
   135c0:	4ab7      	ldr	r2, [pc, #732]	; (138a0 <test_console+0x804>)
   135c2:	7011      	strb	r1, [r2, #0]
   135c4:	001a      	movs	r2, r3
   135c6:	4bb5      	ldr	r3, [pc, #724]	; (1389c <test_console+0x800>)
   135c8:	2130      	movs	r1, #48	; 0x30
   135ca:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(' ');	//36
   135cc:	4bb4      	ldr	r3, [pc, #720]	; (138a0 <test_console+0x804>)
   135ce:	781b      	ldrb	r3, [r3, #0]
   135d0:	1c5a      	adds	r2, r3, #1
   135d2:	b2d1      	uxtb	r1, r2
   135d4:	4ab2      	ldr	r2, [pc, #712]	; (138a0 <test_console+0x804>)
   135d6:	7011      	strb	r1, [r2, #0]
   135d8:	001a      	movs	r2, r3
   135da:	4bb0      	ldr	r3, [pc, #704]	; (1389c <test_console+0x800>)
   135dc:	2120      	movs	r1, #32
   135de:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('B');	//37
   135e0:	4baf      	ldr	r3, [pc, #700]	; (138a0 <test_console+0x804>)
   135e2:	781b      	ldrb	r3, [r3, #0]
   135e4:	1c5a      	adds	r2, r3, #1
   135e6:	b2d1      	uxtb	r1, r2
   135e8:	4aad      	ldr	r2, [pc, #692]	; (138a0 <test_console+0x804>)
   135ea:	7011      	strb	r1, [r2, #0]
   135ec:	001a      	movs	r2, r3
   135ee:	4bab      	ldr	r3, [pc, #684]	; (1389c <test_console+0x800>)
   135f0:	2142      	movs	r1, #66	; 0x42
   135f2:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('y');	//38
   135f4:	4baa      	ldr	r3, [pc, #680]	; (138a0 <test_console+0x804>)
   135f6:	781b      	ldrb	r3, [r3, #0]
   135f8:	1c5a      	adds	r2, r3, #1
   135fa:	b2d1      	uxtb	r1, r2
   135fc:	4aa8      	ldr	r2, [pc, #672]	; (138a0 <test_console+0x804>)
   135fe:	7011      	strb	r1, [r2, #0]
   13600:	001a      	movs	r2, r3
   13602:	4ba6      	ldr	r3, [pc, #664]	; (1389c <test_console+0x800>)
   13604:	2179      	movs	r1, #121	; 0x79
   13606:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('t');	//39
   13608:	4ba5      	ldr	r3, [pc, #660]	; (138a0 <test_console+0x804>)
   1360a:	781b      	ldrb	r3, [r3, #0]
   1360c:	1c5a      	adds	r2, r3, #1
   1360e:	b2d1      	uxtb	r1, r2
   13610:	4aa3      	ldr	r2, [pc, #652]	; (138a0 <test_console+0x804>)
   13612:	7011      	strb	r1, [r2, #0]
   13614:	001a      	movs	r2, r3
   13616:	4ba1      	ldr	r3, [pc, #644]	; (1389c <test_console+0x800>)
   13618:	2174      	movs	r1, #116	; 0x74
   1361a:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('e');	//40
   1361c:	4ba0      	ldr	r3, [pc, #640]	; (138a0 <test_console+0x804>)
   1361e:	781b      	ldrb	r3, [r3, #0]
   13620:	1c5a      	adds	r2, r3, #1
   13622:	b2d1      	uxtb	r1, r2
   13624:	4a9e      	ldr	r2, [pc, #632]	; (138a0 <test_console+0x804>)
   13626:	7011      	strb	r1, [r2, #0]
   13628:	001a      	movs	r2, r3
   1362a:	4b9c      	ldr	r3, [pc, #624]	; (1389c <test_console+0x800>)
   1362c:	2165      	movs	r1, #101	; 0x65
   1362e:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(' ');	//41
   13630:	4b9b      	ldr	r3, [pc, #620]	; (138a0 <test_console+0x804>)
   13632:	781b      	ldrb	r3, [r3, #0]
   13634:	1c5a      	adds	r2, r3, #1
   13636:	b2d1      	uxtb	r1, r2
   13638:	4a99      	ldr	r2, [pc, #612]	; (138a0 <test_console+0x804>)
   1363a:	7011      	strb	r1, [r2, #0]
   1363c:	001a      	movs	r2, r3
   1363e:	4b97      	ldr	r3, [pc, #604]	; (1389c <test_console+0x800>)
   13640:	2120      	movs	r1, #32
   13642:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('t');	//42
   13644:	4b96      	ldr	r3, [pc, #600]	; (138a0 <test_console+0x804>)
   13646:	781b      	ldrb	r3, [r3, #0]
   13648:	1c5a      	adds	r2, r3, #1
   1364a:	b2d1      	uxtb	r1, r2
   1364c:	4a94      	ldr	r2, [pc, #592]	; (138a0 <test_console+0x804>)
   1364e:	7011      	strb	r1, [r2, #0]
   13650:	001a      	movs	r2, r3
   13652:	4b92      	ldr	r3, [pc, #584]	; (1389c <test_console+0x800>)
   13654:	2174      	movs	r1, #116	; 0x74
   13656:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('r');	//43
   13658:	4b91      	ldr	r3, [pc, #580]	; (138a0 <test_console+0x804>)
   1365a:	781b      	ldrb	r3, [r3, #0]
   1365c:	1c5a      	adds	r2, r3, #1
   1365e:	b2d1      	uxtb	r1, r2
   13660:	4a8f      	ldr	r2, [pc, #572]	; (138a0 <test_console+0x804>)
   13662:	7011      	strb	r1, [r2, #0]
   13664:	001a      	movs	r2, r3
   13666:	4b8d      	ldr	r3, [pc, #564]	; (1389c <test_console+0x800>)
   13668:	2172      	movs	r1, #114	; 0x72
   1366a:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('a');	//44
   1366c:	4b8c      	ldr	r3, [pc, #560]	; (138a0 <test_console+0x804>)
   1366e:	781b      	ldrb	r3, [r3, #0]
   13670:	1c5a      	adds	r2, r3, #1
   13672:	b2d1      	uxtb	r1, r2
   13674:	4a8a      	ldr	r2, [pc, #552]	; (138a0 <test_console+0x804>)
   13676:	7011      	strb	r1, [r2, #0]
   13678:	001a      	movs	r2, r3
   1367a:	4b88      	ldr	r3, [pc, #544]	; (1389c <test_console+0x800>)
   1367c:	2161      	movs	r1, #97	; 0x61
   1367e:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('n');	//45
   13680:	4b87      	ldr	r3, [pc, #540]	; (138a0 <test_console+0x804>)
   13682:	781b      	ldrb	r3, [r3, #0]
   13684:	1c5a      	adds	r2, r3, #1
   13686:	b2d1      	uxtb	r1, r2
   13688:	4a85      	ldr	r2, [pc, #532]	; (138a0 <test_console+0x804>)
   1368a:	7011      	strb	r1, [r2, #0]
   1368c:	001a      	movs	r2, r3
   1368e:	4b83      	ldr	r3, [pc, #524]	; (1389c <test_console+0x800>)
   13690:	216e      	movs	r1, #110	; 0x6e
   13692:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('s');	//46
   13694:	4b82      	ldr	r3, [pc, #520]	; (138a0 <test_console+0x804>)
   13696:	781b      	ldrb	r3, [r3, #0]
   13698:	1c5a      	adds	r2, r3, #1
   1369a:	b2d1      	uxtb	r1, r2
   1369c:	4a80      	ldr	r2, [pc, #512]	; (138a0 <test_console+0x804>)
   1369e:	7011      	strb	r1, [r2, #0]
   136a0:	001a      	movs	r2, r3
   136a2:	4b7e      	ldr	r3, [pc, #504]	; (1389c <test_console+0x800>)
   136a4:	2173      	movs	r1, #115	; 0x73
   136a6:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('f');	//47
   136a8:	4b7d      	ldr	r3, [pc, #500]	; (138a0 <test_console+0x804>)
   136aa:	781b      	ldrb	r3, [r3, #0]
   136ac:	1c5a      	adds	r2, r3, #1
   136ae:	b2d1      	uxtb	r1, r2
   136b0:	4a7b      	ldr	r2, [pc, #492]	; (138a0 <test_console+0x804>)
   136b2:	7011      	strb	r1, [r2, #0]
   136b4:	001a      	movs	r2, r3
   136b6:	4b79      	ldr	r3, [pc, #484]	; (1389c <test_console+0x800>)
   136b8:	2166      	movs	r1, #102	; 0x66
   136ba:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('e');	//48
   136bc:	4b78      	ldr	r3, [pc, #480]	; (138a0 <test_console+0x804>)
   136be:	781b      	ldrb	r3, [r3, #0]
   136c0:	1c5a      	adds	r2, r3, #1
   136c2:	b2d1      	uxtb	r1, r2
   136c4:	4a76      	ldr	r2, [pc, #472]	; (138a0 <test_console+0x804>)
   136c6:	7011      	strb	r1, [r2, #0]
   136c8:	001a      	movs	r2, r3
   136ca:	4b74      	ldr	r3, [pc, #464]	; (1389c <test_console+0x800>)
   136cc:	2165      	movs	r1, #101	; 0x65
   136ce:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('r');	//49
   136d0:	4b73      	ldr	r3, [pc, #460]	; (138a0 <test_console+0x804>)
   136d2:	781b      	ldrb	r3, [r3, #0]
   136d4:	1c5a      	adds	r2, r3, #1
   136d6:	b2d1      	uxtb	r1, r2
   136d8:	4a71      	ldr	r2, [pc, #452]	; (138a0 <test_console+0x804>)
   136da:	7011      	strb	r1, [r2, #0]
   136dc:	001a      	movs	r2, r3
   136de:	4b6f      	ldr	r3, [pc, #444]	; (1389c <test_console+0x800>)
   136e0:	2172      	movs	r1, #114	; 0x72
   136e2:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(' ');	//50
   136e4:	4b6e      	ldr	r3, [pc, #440]	; (138a0 <test_console+0x804>)
   136e6:	781b      	ldrb	r3, [r3, #0]
   136e8:	1c5a      	adds	r2, r3, #1
   136ea:	b2d1      	uxtb	r1, r2
   136ec:	4a6c      	ldr	r2, [pc, #432]	; (138a0 <test_console+0x804>)
   136ee:	7011      	strb	r1, [r2, #0]
   136f0:	001a      	movs	r2, r3
   136f2:	4b6a      	ldr	r3, [pc, #424]	; (1389c <test_console+0x800>)
   136f4:	2120      	movs	r1, #32
   136f6:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('C');	//51
   136f8:	4b69      	ldr	r3, [pc, #420]	; (138a0 <test_console+0x804>)
   136fa:	781b      	ldrb	r3, [r3, #0]
   136fc:	1c5a      	adds	r2, r3, #1
   136fe:	b2d1      	uxtb	r1, r2
   13700:	4a67      	ldr	r2, [pc, #412]	; (138a0 <test_console+0x804>)
   13702:	7011      	strb	r1, [r2, #0]
   13704:	001a      	movs	r2, r3
   13706:	4b65      	ldr	r3, [pc, #404]	; (1389c <test_console+0x800>)
   13708:	2143      	movs	r1, #67	; 0x43
   1370a:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('o');	//52
   1370c:	4b64      	ldr	r3, [pc, #400]	; (138a0 <test_console+0x804>)
   1370e:	781b      	ldrb	r3, [r3, #0]
   13710:	1c5a      	adds	r2, r3, #1
   13712:	b2d1      	uxtb	r1, r2
   13714:	4a62      	ldr	r2, [pc, #392]	; (138a0 <test_console+0x804>)
   13716:	7011      	strb	r1, [r2, #0]
   13718:	001a      	movs	r2, r3
   1371a:	4b60      	ldr	r3, [pc, #384]	; (1389c <test_console+0x800>)
   1371c:	216f      	movs	r1, #111	; 0x6f
   1371e:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('m');	//53
   13720:	4b5f      	ldr	r3, [pc, #380]	; (138a0 <test_console+0x804>)
   13722:	781b      	ldrb	r3, [r3, #0]
   13724:	1c5a      	adds	r2, r3, #1
   13726:	b2d1      	uxtb	r1, r2
   13728:	4a5d      	ldr	r2, [pc, #372]	; (138a0 <test_console+0x804>)
   1372a:	7011      	strb	r1, [r2, #0]
   1372c:	001a      	movs	r2, r3
   1372e:	4b5b      	ldr	r3, [pc, #364]	; (1389c <test_console+0x800>)
   13730:	216d      	movs	r1, #109	; 0x6d
   13732:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('p');	//54
   13734:	4b5a      	ldr	r3, [pc, #360]	; (138a0 <test_console+0x804>)
   13736:	781b      	ldrb	r3, [r3, #0]
   13738:	1c5a      	adds	r2, r3, #1
   1373a:	b2d1      	uxtb	r1, r2
   1373c:	4a58      	ldr	r2, [pc, #352]	; (138a0 <test_console+0x804>)
   1373e:	7011      	strb	r1, [r2, #0]
   13740:	001a      	movs	r2, r3
   13742:	4b56      	ldr	r3, [pc, #344]	; (1389c <test_console+0x800>)
   13744:	2170      	movs	r1, #112	; 0x70
   13746:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('l');	//55
   13748:	4b55      	ldr	r3, [pc, #340]	; (138a0 <test_console+0x804>)
   1374a:	781b      	ldrb	r3, [r3, #0]
   1374c:	1c5a      	adds	r2, r3, #1
   1374e:	b2d1      	uxtb	r1, r2
   13750:	4a53      	ldr	r2, [pc, #332]	; (138a0 <test_console+0x804>)
   13752:	7011      	strb	r1, [r2, #0]
   13754:	001a      	movs	r2, r3
   13756:	4b51      	ldr	r3, [pc, #324]	; (1389c <test_console+0x800>)
   13758:	216c      	movs	r1, #108	; 0x6c
   1375a:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('e');	//56
   1375c:	4b50      	ldr	r3, [pc, #320]	; (138a0 <test_console+0x804>)
   1375e:	781b      	ldrb	r3, [r3, #0]
   13760:	1c5a      	adds	r2, r3, #1
   13762:	b2d1      	uxtb	r1, r2
   13764:	4a4e      	ldr	r2, [pc, #312]	; (138a0 <test_console+0x804>)
   13766:	7011      	strb	r1, [r2, #0]
   13768:	001a      	movs	r2, r3
   1376a:	4b4c      	ldr	r3, [pc, #304]	; (1389c <test_console+0x800>)
   1376c:	2165      	movs	r1, #101	; 0x65
   1376e:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('t');	//57
   13770:	4b4b      	ldr	r3, [pc, #300]	; (138a0 <test_console+0x804>)
   13772:	781b      	ldrb	r3, [r3, #0]
   13774:	1c5a      	adds	r2, r3, #1
   13776:	b2d1      	uxtb	r1, r2
   13778:	4a49      	ldr	r2, [pc, #292]	; (138a0 <test_console+0x804>)
   1377a:	7011      	strb	r1, [r2, #0]
   1377c:	001a      	movs	r2, r3
   1377e:	4b47      	ldr	r3, [pc, #284]	; (1389c <test_console+0x800>)
   13780:	2174      	movs	r1, #116	; 0x74
   13782:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('e');	//58
   13784:	4b46      	ldr	r3, [pc, #280]	; (138a0 <test_console+0x804>)
   13786:	781b      	ldrb	r3, [r3, #0]
   13788:	1c5a      	adds	r2, r3, #1
   1378a:	b2d1      	uxtb	r1, r2
   1378c:	4a44      	ldr	r2, [pc, #272]	; (138a0 <test_console+0x804>)
   1378e:	7011      	strb	r1, [r2, #0]
   13790:	001a      	movs	r2, r3
   13792:	4b42      	ldr	r3, [pc, #264]	; (1389c <test_console+0x800>)
   13794:	2165      	movs	r1, #101	; 0x65
   13796:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('.');	//59
   13798:	4b41      	ldr	r3, [pc, #260]	; (138a0 <test_console+0x804>)
   1379a:	781b      	ldrb	r3, [r3, #0]
   1379c:	1c5a      	adds	r2, r3, #1
   1379e:	b2d1      	uxtb	r1, r2
   137a0:	4a3f      	ldr	r2, [pc, #252]	; (138a0 <test_console+0x804>)
   137a2:	7011      	strb	r1, [r2, #0]
   137a4:	001a      	movs	r2, r3
   137a6:	4b3d      	ldr	r3, [pc, #244]	; (1389c <test_console+0x800>)
   137a8:	212e      	movs	r1, #46	; 0x2e
   137aa:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('!');	//60
   137ac:	4b3c      	ldr	r3, [pc, #240]	; (138a0 <test_console+0x804>)
   137ae:	781b      	ldrb	r3, [r3, #0]
   137b0:	1c5a      	adds	r2, r3, #1
   137b2:	b2d1      	uxtb	r1, r2
   137b4:	4a3a      	ldr	r2, [pc, #232]	; (138a0 <test_console+0x804>)
   137b6:	7011      	strb	r1, [r2, #0]
   137b8:	001a      	movs	r2, r3
   137ba:	4b38      	ldr	r3, [pc, #224]	; (1389c <test_console+0x800>)
   137bc:	2121      	movs	r1, #33	; 0x21
   137be:	5499      	strb	r1, [r3, r2]
			//MiApp_WriteData('3');
			
			
			//transe_delay_time_new = MiWi_TickGet();
			
			if(RF_OUTPUT==20){
   137c0:	4b38      	ldr	r3, [pc, #224]	; (138a4 <test_console+0x808>)
   137c2:	781b      	ldrb	r3, [r3, #0]
   137c4:	2b14      	cmp	r3, #20
   137c6:	d104      	bne.n	137d2 <test_console+0x736>
				port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_INACTIVE);//kwlee 200721
   137c8:	2100      	movs	r1, #0
   137ca:	200d      	movs	r0, #13
   137cc:	4b36      	ldr	r3, [pc, #216]	; (138a8 <test_console+0x80c>)
   137ce:	4798      	blx	r3
   137d0:	e003      	b.n	137da <test_console+0x73e>
			}else{
				port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_ACTIVE);//kwlee 200727
   137d2:	2101      	movs	r1, #1
   137d4:	200d      	movs	r0, #13
   137d6:	4b34      	ldr	r3, [pc, #208]	; (138a8 <test_console+0x80c>)
   137d8:	4798      	blx	r3
			}
			
			t1 = MiWi_TickGet();
   137da:	4b34      	ldr	r3, [pc, #208]	; (138ac <test_console+0x810>)
   137dc:	4798      	blx	r3
   137de:	0003      	movs	r3, r0
   137e0:	001a      	movs	r2, r3
   137e2:	4b33      	ldr	r3, [pc, #204]	; (138b0 <test_console+0x814>)
   137e4:	601a      	str	r2, [r3, #0]
			rlt = MiApp_UnicastConnection(0,false); //?
   137e6:	1dfc      	adds	r4, r7, #7
   137e8:	2100      	movs	r1, #0
   137ea:	2000      	movs	r0, #0
   137ec:	4b31      	ldr	r3, [pc, #196]	; (138b4 <test_console+0x818>)
   137ee:	4798      	blx	r3
   137f0:	0003      	movs	r3, r0
   137f2:	7023      	strb	r3, [r4, #0]
			t2 = MiWi_TickGet();
   137f4:	4b2d      	ldr	r3, [pc, #180]	; (138ac <test_console+0x810>)
   137f6:	4798      	blx	r3
   137f8:	0003      	movs	r3, r0
   137fa:	001a      	movs	r2, r3
   137fc:	4b2e      	ldr	r3, [pc, #184]	; (138b8 <test_console+0x81c>)
   137fe:	601a      	str	r2, [r3, #0]
			
			//port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_ACTIVE);//kwlee 200721		//ihkim 20220509
			SX1276_RX_INIT();
   13800:	4b2e      	ldr	r3, [pc, #184]	; (138bc <test_console+0x820>)
   13802:	4798      	blx	r3
			
			t3 = t2.Val - t1.Val;
   13804:	4b2c      	ldr	r3, [pc, #176]	; (138b8 <test_console+0x81c>)
   13806:	681a      	ldr	r2, [r3, #0]
   13808:	4b29      	ldr	r3, [pc, #164]	; (138b0 <test_console+0x814>)
   1380a:	681b      	ldr	r3, [r3, #0]
   1380c:	1ad3      	subs	r3, r2, r3
   1380e:	603b      	str	r3, [r7, #0]
			
			if(rlt){
   13810:	1dfb      	adds	r3, r7, #7
   13812:	781b      	ldrb	r3, [r3, #0]
   13814:	2b00      	cmp	r3, #0
   13816:	d014      	beq.n	13842 <test_console+0x7a6>
				//data_count++;
				printf("Unicast Success... Delay=%d, ",t3);
   13818:	683a      	ldr	r2, [r7, #0]
   1381a:	4b29      	ldr	r3, [pc, #164]	; (138c0 <test_console+0x824>)
   1381c:	0011      	movs	r1, r2
   1381e:	0018      	movs	r0, r3
   13820:	4b28      	ldr	r3, [pc, #160]	; (138c4 <test_console+0x828>)
   13822:	4798      	blx	r3
				printf("Data=%d, ",Time_Counter);
   13824:	4b28      	ldr	r3, [pc, #160]	; (138c8 <test_console+0x82c>)
   13826:	681a      	ldr	r2, [r3, #0]
   13828:	4b28      	ldr	r3, [pc, #160]	; (138cc <test_console+0x830>)
   1382a:	0011      	movs	r1, r2
   1382c:	0018      	movs	r0, r3
   1382e:	4b25      	ldr	r3, [pc, #148]	; (138c4 <test_console+0x828>)
   13830:	4798      	blx	r3
				printf("Error=%d\r\n",error_count);
   13832:	4b18      	ldr	r3, [pc, #96]	; (13894 <test_console+0x7f8>)
   13834:	681a      	ldr	r2, [r3, #0]
   13836:	4b26      	ldr	r3, [pc, #152]	; (138d0 <test_console+0x834>)
   13838:	0011      	movs	r1, r2
   1383a:	0018      	movs	r0, r3
   1383c:	4b21      	ldr	r3, [pc, #132]	; (138c4 <test_console+0x828>)
   1383e:	4798      	blx	r3
   13840:	e00f      	b.n	13862 <test_console+0x7c6>
			} else {
				error_count++;
   13842:	4b14      	ldr	r3, [pc, #80]	; (13894 <test_console+0x7f8>)
   13844:	681b      	ldr	r3, [r3, #0]
   13846:	1c5a      	adds	r2, r3, #1
   13848:	4b12      	ldr	r3, [pc, #72]	; (13894 <test_console+0x7f8>)
   1384a:	601a      	str	r2, [r3, #0]
				printf("Unicast fail..., ");
   1384c:	4b21      	ldr	r3, [pc, #132]	; (138d4 <test_console+0x838>)
   1384e:	0018      	movs	r0, r3
   13850:	4b1c      	ldr	r3, [pc, #112]	; (138c4 <test_console+0x828>)
   13852:	4798      	blx	r3
				printf("Error=%d\r\n",error_count);
   13854:	4b0f      	ldr	r3, [pc, #60]	; (13894 <test_console+0x7f8>)
   13856:	681a      	ldr	r2, [r3, #0]
   13858:	4b1d      	ldr	r3, [pc, #116]	; (138d0 <test_console+0x834>)
   1385a:	0011      	movs	r1, r2
   1385c:	0018      	movs	r0, r3
   1385e:	4b19      	ldr	r3, [pc, #100]	; (138c4 <test_console+0x828>)
   13860:	4798      	blx	r3
			}
		}
	}
	
	if(broadcast_test_f){
   13862:	4b1d      	ldr	r3, [pc, #116]	; (138d8 <test_console+0x83c>)
   13864:	781b      	ldrb	r3, [r3, #0]
   13866:	2b00      	cmp	r3, #0
   13868:	d100      	bne.n	1386c <test_console+0x7d0>
   1386a:	e382      	b.n	13f72 <test_console+0xed6>
		if(Time_Buffer++ > 2000){		//5sec  =15000				1000
   1386c:	4b1b      	ldr	r3, [pc, #108]	; (138dc <test_console+0x840>)
   1386e:	685c      	ldr	r4, [r3, #4]
   13870:	681b      	ldr	r3, [r3, #0]
   13872:	2101      	movs	r1, #1
   13874:	2200      	movs	r2, #0
   13876:	18c9      	adds	r1, r1, r3
   13878:	4162      	adcs	r2, r4
   1387a:	4818      	ldr	r0, [pc, #96]	; (138dc <test_console+0x840>)
   1387c:	6001      	str	r1, [r0, #0]
   1387e:	6042      	str	r2, [r0, #4]
   13880:	2c00      	cmp	r4, #0
   13882:	d12d      	bne.n	138e0 <test_console+0x844>
   13884:	d000      	beq.n	13888 <test_console+0x7ec>
   13886:	e374      	b.n	13f72 <test_console+0xed6>
   13888:	22fa      	movs	r2, #250	; 0xfa
   1388a:	00d2      	lsls	r2, r2, #3
   1388c:	4293      	cmp	r3, r2
   1388e:	d827      	bhi.n	138e0 <test_console+0x844>
			
			//port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_ACTIVE);//kwlee 200721
			SX1276_RX_INIT();
		}
	}
}
   13890:	e36f      	b.n	13f72 <test_console+0xed6>
   13892:	46c0      	nop			; (mov r8, r8)
   13894:	20001b0c 	.word	0x20001b0c
   13898:	00014a99 	.word	0x00014a99
   1389c:	200012e4 	.word	0x200012e4
   138a0:	200012dc 	.word	0x200012dc
   138a4:	2000002e 	.word	0x2000002e
   138a8:	0001093d 	.word	0x0001093d
   138ac:	0000ebad 	.word	0x0000ebad
   138b0:	20001bf4 	.word	0x20001bf4
   138b4:	0000d939 	.word	0x0000d939
   138b8:	20001afc 	.word	0x20001afc
   138bc:	0000f90d 	.word	0x0000f90d
   138c0:	0001dcd4 	.word	0x0001dcd4
   138c4:	0001782d 	.word	0x0001782d
   138c8:	20001c00 	.word	0x20001c00
   138cc:	0001dcf4 	.word	0x0001dcf4
   138d0:	0001dd00 	.word	0x0001dd00
   138d4:	0001dd0c 	.word	0x0001dd0c
   138d8:	20000c7f 	.word	0x20000c7f
   138dc:	20001b00 	.word	0x20001b00
			Time_Buffer = 0;
   138e0:	4afd      	ldr	r2, [pc, #1012]	; (13cd8 <test_console+0xc3c>)
   138e2:	2300      	movs	r3, #0
   138e4:	2400      	movs	r4, #0
   138e6:	6013      	str	r3, [r2, #0]
   138e8:	6054      	str	r4, [r2, #4]
			Time_Counter++;
   138ea:	4bfc      	ldr	r3, [pc, #1008]	; (13cdc <test_console+0xc40>)
   138ec:	681b      	ldr	r3, [r3, #0]
   138ee:	1c5a      	adds	r2, r3, #1
   138f0:	4bfa      	ldr	r3, [pc, #1000]	; (13cdc <test_console+0xc40>)
   138f2:	601a      	str	r2, [r3, #0]
			MiApp_FlushTx();
   138f4:	4bfa      	ldr	r3, [pc, #1000]	; (13ce0 <test_console+0xc44>)
   138f6:	220b      	movs	r2, #11
   138f8:	701a      	strb	r2, [r3, #0]
			MiApp_WriteData('B');
   138fa:	4bf9      	ldr	r3, [pc, #996]	; (13ce0 <test_console+0xc44>)
   138fc:	781b      	ldrb	r3, [r3, #0]
   138fe:	1c5a      	adds	r2, r3, #1
   13900:	b2d1      	uxtb	r1, r2
   13902:	4af7      	ldr	r2, [pc, #988]	; (13ce0 <test_console+0xc44>)
   13904:	7011      	strb	r1, [r2, #0]
   13906:	001a      	movs	r2, r3
   13908:	4bf6      	ldr	r3, [pc, #984]	; (13ce4 <test_console+0xc48>)
   1390a:	2142      	movs	r1, #66	; 0x42
   1390c:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('r');
   1390e:	4bf4      	ldr	r3, [pc, #976]	; (13ce0 <test_console+0xc44>)
   13910:	781b      	ldrb	r3, [r3, #0]
   13912:	1c5a      	adds	r2, r3, #1
   13914:	b2d1      	uxtb	r1, r2
   13916:	4af2      	ldr	r2, [pc, #968]	; (13ce0 <test_console+0xc44>)
   13918:	7011      	strb	r1, [r2, #0]
   1391a:	001a      	movs	r2, r3
   1391c:	4bf1      	ldr	r3, [pc, #964]	; (13ce4 <test_console+0xc48>)
   1391e:	2172      	movs	r1, #114	; 0x72
   13920:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('o');
   13922:	4bef      	ldr	r3, [pc, #956]	; (13ce0 <test_console+0xc44>)
   13924:	781b      	ldrb	r3, [r3, #0]
   13926:	1c5a      	adds	r2, r3, #1
   13928:	b2d1      	uxtb	r1, r2
   1392a:	4aed      	ldr	r2, [pc, #948]	; (13ce0 <test_console+0xc44>)
   1392c:	7011      	strb	r1, [r2, #0]
   1392e:	001a      	movs	r2, r3
   13930:	4bec      	ldr	r3, [pc, #944]	; (13ce4 <test_console+0xc48>)
   13932:	216f      	movs	r1, #111	; 0x6f
   13934:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('a');
   13936:	4bea      	ldr	r3, [pc, #936]	; (13ce0 <test_console+0xc44>)
   13938:	781b      	ldrb	r3, [r3, #0]
   1393a:	1c5a      	adds	r2, r3, #1
   1393c:	b2d1      	uxtb	r1, r2
   1393e:	4ae8      	ldr	r2, [pc, #928]	; (13ce0 <test_console+0xc44>)
   13940:	7011      	strb	r1, [r2, #0]
   13942:	001a      	movs	r2, r3
   13944:	4be7      	ldr	r3, [pc, #924]	; (13ce4 <test_console+0xc48>)
   13946:	2161      	movs	r1, #97	; 0x61
   13948:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('d');
   1394a:	4be5      	ldr	r3, [pc, #916]	; (13ce0 <test_console+0xc44>)
   1394c:	781b      	ldrb	r3, [r3, #0]
   1394e:	1c5a      	adds	r2, r3, #1
   13950:	b2d1      	uxtb	r1, r2
   13952:	4ae3      	ldr	r2, [pc, #908]	; (13ce0 <test_console+0xc44>)
   13954:	7011      	strb	r1, [r2, #0]
   13956:	001a      	movs	r2, r3
   13958:	4be2      	ldr	r3, [pc, #904]	; (13ce4 <test_console+0xc48>)
   1395a:	2164      	movs	r1, #100	; 0x64
   1395c:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('c');
   1395e:	4be0      	ldr	r3, [pc, #896]	; (13ce0 <test_console+0xc44>)
   13960:	781b      	ldrb	r3, [r3, #0]
   13962:	1c5a      	adds	r2, r3, #1
   13964:	b2d1      	uxtb	r1, r2
   13966:	4ade      	ldr	r2, [pc, #888]	; (13ce0 <test_console+0xc44>)
   13968:	7011      	strb	r1, [r2, #0]
   1396a:	001a      	movs	r2, r3
   1396c:	4bdd      	ldr	r3, [pc, #884]	; (13ce4 <test_console+0xc48>)
   1396e:	2163      	movs	r1, #99	; 0x63
   13970:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('a');
   13972:	4bdb      	ldr	r3, [pc, #876]	; (13ce0 <test_console+0xc44>)
   13974:	781b      	ldrb	r3, [r3, #0]
   13976:	1c5a      	adds	r2, r3, #1
   13978:	b2d1      	uxtb	r1, r2
   1397a:	4ad9      	ldr	r2, [pc, #868]	; (13ce0 <test_console+0xc44>)
   1397c:	7011      	strb	r1, [r2, #0]
   1397e:	001a      	movs	r2, r3
   13980:	4bd8      	ldr	r3, [pc, #864]	; (13ce4 <test_console+0xc48>)
   13982:	2161      	movs	r1, #97	; 0x61
   13984:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('s');
   13986:	4bd6      	ldr	r3, [pc, #856]	; (13ce0 <test_console+0xc44>)
   13988:	781b      	ldrb	r3, [r3, #0]
   1398a:	1c5a      	adds	r2, r3, #1
   1398c:	b2d1      	uxtb	r1, r2
   1398e:	4ad4      	ldr	r2, [pc, #848]	; (13ce0 <test_console+0xc44>)
   13990:	7011      	strb	r1, [r2, #0]
   13992:	001a      	movs	r2, r3
   13994:	4bd3      	ldr	r3, [pc, #844]	; (13ce4 <test_console+0xc48>)
   13996:	2173      	movs	r1, #115	; 0x73
   13998:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('t');
   1399a:	4bd1      	ldr	r3, [pc, #836]	; (13ce0 <test_console+0xc44>)
   1399c:	781b      	ldrb	r3, [r3, #0]
   1399e:	1c5a      	adds	r2, r3, #1
   139a0:	b2d1      	uxtb	r1, r2
   139a2:	4acf      	ldr	r2, [pc, #828]	; (13ce0 <test_console+0xc44>)
   139a4:	7011      	strb	r1, [r2, #0]
   139a6:	001a      	movs	r2, r3
   139a8:	4bce      	ldr	r3, [pc, #824]	; (13ce4 <test_console+0xc48>)
   139aa:	2174      	movs	r1, #116	; 0x74
   139ac:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('.');
   139ae:	4bcc      	ldr	r3, [pc, #816]	; (13ce0 <test_console+0xc44>)
   139b0:	781b      	ldrb	r3, [r3, #0]
   139b2:	1c5a      	adds	r2, r3, #1
   139b4:	b2d1      	uxtb	r1, r2
   139b6:	4aca      	ldr	r2, [pc, #808]	; (13ce0 <test_console+0xc44>)
   139b8:	7011      	strb	r1, [r2, #0]
   139ba:	001a      	movs	r2, r3
   139bc:	4bc9      	ldr	r3, [pc, #804]	; (13ce4 <test_console+0xc48>)
   139be:	212e      	movs	r1, #46	; 0x2e
   139c0:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('.');
   139c2:	4bc7      	ldr	r3, [pc, #796]	; (13ce0 <test_console+0xc44>)
   139c4:	781b      	ldrb	r3, [r3, #0]
   139c6:	1c5a      	adds	r2, r3, #1
   139c8:	b2d1      	uxtb	r1, r2
   139ca:	4ac5      	ldr	r2, [pc, #788]	; (13ce0 <test_console+0xc44>)
   139cc:	7011      	strb	r1, [r2, #0]
   139ce:	001a      	movs	r2, r3
   139d0:	4bc4      	ldr	r3, [pc, #784]	; (13ce4 <test_console+0xc48>)
   139d2:	212e      	movs	r1, #46	; 0x2e
   139d4:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(' ');
   139d6:	4bc2      	ldr	r3, [pc, #776]	; (13ce0 <test_console+0xc44>)
   139d8:	781b      	ldrb	r3, [r3, #0]
   139da:	1c5a      	adds	r2, r3, #1
   139dc:	b2d1      	uxtb	r1, r2
   139de:	4ac0      	ldr	r2, [pc, #768]	; (13ce0 <test_console+0xc44>)
   139e0:	7011      	strb	r1, [r2, #0]
   139e2:	001a      	movs	r2, r3
   139e4:	4bbf      	ldr	r3, [pc, #764]	; (13ce4 <test_console+0xc48>)
   139e6:	2120      	movs	r1, #32
   139e8:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('D');
   139ea:	4bbd      	ldr	r3, [pc, #756]	; (13ce0 <test_console+0xc44>)
   139ec:	781b      	ldrb	r3, [r3, #0]
   139ee:	1c5a      	adds	r2, r3, #1
   139f0:	b2d1      	uxtb	r1, r2
   139f2:	4abb      	ldr	r2, [pc, #748]	; (13ce0 <test_console+0xc44>)
   139f4:	7011      	strb	r1, [r2, #0]
   139f6:	001a      	movs	r2, r3
   139f8:	4bba      	ldr	r3, [pc, #744]	; (13ce4 <test_console+0xc48>)
   139fa:	2144      	movs	r1, #68	; 0x44
   139fc:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('a');
   139fe:	4bb8      	ldr	r3, [pc, #736]	; (13ce0 <test_console+0xc44>)
   13a00:	781b      	ldrb	r3, [r3, #0]
   13a02:	1c5a      	adds	r2, r3, #1
   13a04:	b2d1      	uxtb	r1, r2
   13a06:	4ab6      	ldr	r2, [pc, #728]	; (13ce0 <test_console+0xc44>)
   13a08:	7011      	strb	r1, [r2, #0]
   13a0a:	001a      	movs	r2, r3
   13a0c:	4bb5      	ldr	r3, [pc, #724]	; (13ce4 <test_console+0xc48>)
   13a0e:	2161      	movs	r1, #97	; 0x61
   13a10:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('t');
   13a12:	4bb3      	ldr	r3, [pc, #716]	; (13ce0 <test_console+0xc44>)
   13a14:	781b      	ldrb	r3, [r3, #0]
   13a16:	1c5a      	adds	r2, r3, #1
   13a18:	b2d1      	uxtb	r1, r2
   13a1a:	4ab1      	ldr	r2, [pc, #708]	; (13ce0 <test_console+0xc44>)
   13a1c:	7011      	strb	r1, [r2, #0]
   13a1e:	001a      	movs	r2, r3
   13a20:	4bb0      	ldr	r3, [pc, #704]	; (13ce4 <test_console+0xc48>)
   13a22:	2174      	movs	r1, #116	; 0x74
   13a24:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('a');
   13a26:	4bae      	ldr	r3, [pc, #696]	; (13ce0 <test_console+0xc44>)
   13a28:	781b      	ldrb	r3, [r3, #0]
   13a2a:	1c5a      	adds	r2, r3, #1
   13a2c:	b2d1      	uxtb	r1, r2
   13a2e:	4aac      	ldr	r2, [pc, #688]	; (13ce0 <test_console+0xc44>)
   13a30:	7011      	strb	r1, [r2, #0]
   13a32:	001a      	movs	r2, r3
   13a34:	4bab      	ldr	r3, [pc, #684]	; (13ce4 <test_console+0xc48>)
   13a36:	2161      	movs	r1, #97	; 0x61
   13a38:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('=');
   13a3a:	4ba9      	ldr	r3, [pc, #676]	; (13ce0 <test_console+0xc44>)
   13a3c:	781b      	ldrb	r3, [r3, #0]
   13a3e:	1c5a      	adds	r2, r3, #1
   13a40:	b2d1      	uxtb	r1, r2
   13a42:	4aa7      	ldr	r2, [pc, #668]	; (13ce0 <test_console+0xc44>)
   13a44:	7011      	strb	r1, [r2, #0]
   13a46:	001a      	movs	r2, r3
   13a48:	4ba6      	ldr	r3, [pc, #664]	; (13ce4 <test_console+0xc48>)
   13a4a:	213d      	movs	r1, #61	; 0x3d
   13a4c:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData((Time_Counter/1000000)+0x30);
   13a4e:	4ba4      	ldr	r3, [pc, #656]	; (13ce0 <test_console+0xc44>)
   13a50:	781b      	ldrb	r3, [r3, #0]
   13a52:	1c5a      	adds	r2, r3, #1
   13a54:	b2d1      	uxtb	r1, r2
   13a56:	4aa2      	ldr	r2, [pc, #648]	; (13ce0 <test_console+0xc44>)
   13a58:	7011      	strb	r1, [r2, #0]
   13a5a:	001c      	movs	r4, r3
   13a5c:	4b9f      	ldr	r3, [pc, #636]	; (13cdc <test_console+0xc40>)
   13a5e:	681a      	ldr	r2, [r3, #0]
   13a60:	4ba1      	ldr	r3, [pc, #644]	; (13ce8 <test_console+0xc4c>)
   13a62:	49a2      	ldr	r1, [pc, #648]	; (13cec <test_console+0xc50>)
   13a64:	0010      	movs	r0, r2
   13a66:	4798      	blx	r3
   13a68:	0003      	movs	r3, r0
   13a6a:	b2db      	uxtb	r3, r3
   13a6c:	3330      	adds	r3, #48	; 0x30
   13a6e:	b2da      	uxtb	r2, r3
   13a70:	4b9c      	ldr	r3, [pc, #624]	; (13ce4 <test_console+0xc48>)
   13a72:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((Time_Counter%1000000/100000)+0x30);
   13a74:	4b9a      	ldr	r3, [pc, #616]	; (13ce0 <test_console+0xc44>)
   13a76:	781b      	ldrb	r3, [r3, #0]
   13a78:	1c5a      	adds	r2, r3, #1
   13a7a:	b2d1      	uxtb	r1, r2
   13a7c:	4a98      	ldr	r2, [pc, #608]	; (13ce0 <test_console+0xc44>)
   13a7e:	7011      	strb	r1, [r2, #0]
   13a80:	001c      	movs	r4, r3
   13a82:	4b96      	ldr	r3, [pc, #600]	; (13cdc <test_console+0xc40>)
   13a84:	681a      	ldr	r2, [r3, #0]
   13a86:	4b9a      	ldr	r3, [pc, #616]	; (13cf0 <test_console+0xc54>)
   13a88:	4998      	ldr	r1, [pc, #608]	; (13cec <test_console+0xc50>)
   13a8a:	0010      	movs	r0, r2
   13a8c:	4798      	blx	r3
   13a8e:	000b      	movs	r3, r1
   13a90:	001a      	movs	r2, r3
   13a92:	4b95      	ldr	r3, [pc, #596]	; (13ce8 <test_console+0xc4c>)
   13a94:	4997      	ldr	r1, [pc, #604]	; (13cf4 <test_console+0xc58>)
   13a96:	0010      	movs	r0, r2
   13a98:	4798      	blx	r3
   13a9a:	0003      	movs	r3, r0
   13a9c:	b2db      	uxtb	r3, r3
   13a9e:	3330      	adds	r3, #48	; 0x30
   13aa0:	b2da      	uxtb	r2, r3
   13aa2:	4b90      	ldr	r3, [pc, #576]	; (13ce4 <test_console+0xc48>)
   13aa4:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((Time_Counter%1000000%100000/10000)+0x30);
   13aa6:	4b8e      	ldr	r3, [pc, #568]	; (13ce0 <test_console+0xc44>)
   13aa8:	781b      	ldrb	r3, [r3, #0]
   13aaa:	1c5a      	adds	r2, r3, #1
   13aac:	b2d1      	uxtb	r1, r2
   13aae:	4a8c      	ldr	r2, [pc, #560]	; (13ce0 <test_console+0xc44>)
   13ab0:	7011      	strb	r1, [r2, #0]
   13ab2:	001c      	movs	r4, r3
   13ab4:	4b89      	ldr	r3, [pc, #548]	; (13cdc <test_console+0xc40>)
   13ab6:	681a      	ldr	r2, [r3, #0]
   13ab8:	4b8d      	ldr	r3, [pc, #564]	; (13cf0 <test_console+0xc54>)
   13aba:	498c      	ldr	r1, [pc, #560]	; (13cec <test_console+0xc50>)
   13abc:	0010      	movs	r0, r2
   13abe:	4798      	blx	r3
   13ac0:	000b      	movs	r3, r1
   13ac2:	001a      	movs	r2, r3
   13ac4:	4b8a      	ldr	r3, [pc, #552]	; (13cf0 <test_console+0xc54>)
   13ac6:	498b      	ldr	r1, [pc, #556]	; (13cf4 <test_console+0xc58>)
   13ac8:	0010      	movs	r0, r2
   13aca:	4798      	blx	r3
   13acc:	000b      	movs	r3, r1
   13ace:	001a      	movs	r2, r3
   13ad0:	4b85      	ldr	r3, [pc, #532]	; (13ce8 <test_console+0xc4c>)
   13ad2:	4989      	ldr	r1, [pc, #548]	; (13cf8 <test_console+0xc5c>)
   13ad4:	0010      	movs	r0, r2
   13ad6:	4798      	blx	r3
   13ad8:	0003      	movs	r3, r0
   13ada:	b2db      	uxtb	r3, r3
   13adc:	3330      	adds	r3, #48	; 0x30
   13ade:	b2da      	uxtb	r2, r3
   13ae0:	4b80      	ldr	r3, [pc, #512]	; (13ce4 <test_console+0xc48>)
   13ae2:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((Time_Counter%1000000%100000%10000/1000)+0x30);
   13ae4:	4b7e      	ldr	r3, [pc, #504]	; (13ce0 <test_console+0xc44>)
   13ae6:	781b      	ldrb	r3, [r3, #0]
   13ae8:	1c5a      	adds	r2, r3, #1
   13aea:	b2d1      	uxtb	r1, r2
   13aec:	4a7c      	ldr	r2, [pc, #496]	; (13ce0 <test_console+0xc44>)
   13aee:	7011      	strb	r1, [r2, #0]
   13af0:	001c      	movs	r4, r3
   13af2:	4b7a      	ldr	r3, [pc, #488]	; (13cdc <test_console+0xc40>)
   13af4:	681a      	ldr	r2, [r3, #0]
   13af6:	4b7e      	ldr	r3, [pc, #504]	; (13cf0 <test_console+0xc54>)
   13af8:	497c      	ldr	r1, [pc, #496]	; (13cec <test_console+0xc50>)
   13afa:	0010      	movs	r0, r2
   13afc:	4798      	blx	r3
   13afe:	000b      	movs	r3, r1
   13b00:	001a      	movs	r2, r3
   13b02:	4b7b      	ldr	r3, [pc, #492]	; (13cf0 <test_console+0xc54>)
   13b04:	497b      	ldr	r1, [pc, #492]	; (13cf4 <test_console+0xc58>)
   13b06:	0010      	movs	r0, r2
   13b08:	4798      	blx	r3
   13b0a:	000b      	movs	r3, r1
   13b0c:	001a      	movs	r2, r3
   13b0e:	4b78      	ldr	r3, [pc, #480]	; (13cf0 <test_console+0xc54>)
   13b10:	4979      	ldr	r1, [pc, #484]	; (13cf8 <test_console+0xc5c>)
   13b12:	0010      	movs	r0, r2
   13b14:	4798      	blx	r3
   13b16:	000b      	movs	r3, r1
   13b18:	0018      	movs	r0, r3
   13b1a:	4b73      	ldr	r3, [pc, #460]	; (13ce8 <test_console+0xc4c>)
   13b1c:	22fa      	movs	r2, #250	; 0xfa
   13b1e:	0091      	lsls	r1, r2, #2
   13b20:	4798      	blx	r3
   13b22:	0003      	movs	r3, r0
   13b24:	b2db      	uxtb	r3, r3
   13b26:	3330      	adds	r3, #48	; 0x30
   13b28:	b2da      	uxtb	r2, r3
   13b2a:	4b6e      	ldr	r3, [pc, #440]	; (13ce4 <test_console+0xc48>)
   13b2c:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((Time_Counter%1000000%100000%10000%1000/100)+0x30);
   13b2e:	4b6c      	ldr	r3, [pc, #432]	; (13ce0 <test_console+0xc44>)
   13b30:	781b      	ldrb	r3, [r3, #0]
   13b32:	1c5a      	adds	r2, r3, #1
   13b34:	b2d1      	uxtb	r1, r2
   13b36:	4a6a      	ldr	r2, [pc, #424]	; (13ce0 <test_console+0xc44>)
   13b38:	7011      	strb	r1, [r2, #0]
   13b3a:	001c      	movs	r4, r3
   13b3c:	4b67      	ldr	r3, [pc, #412]	; (13cdc <test_console+0xc40>)
   13b3e:	681a      	ldr	r2, [r3, #0]
   13b40:	4b6b      	ldr	r3, [pc, #428]	; (13cf0 <test_console+0xc54>)
   13b42:	496a      	ldr	r1, [pc, #424]	; (13cec <test_console+0xc50>)
   13b44:	0010      	movs	r0, r2
   13b46:	4798      	blx	r3
   13b48:	000b      	movs	r3, r1
   13b4a:	001a      	movs	r2, r3
   13b4c:	4b68      	ldr	r3, [pc, #416]	; (13cf0 <test_console+0xc54>)
   13b4e:	4969      	ldr	r1, [pc, #420]	; (13cf4 <test_console+0xc58>)
   13b50:	0010      	movs	r0, r2
   13b52:	4798      	blx	r3
   13b54:	000b      	movs	r3, r1
   13b56:	001a      	movs	r2, r3
   13b58:	4b65      	ldr	r3, [pc, #404]	; (13cf0 <test_console+0xc54>)
   13b5a:	4967      	ldr	r1, [pc, #412]	; (13cf8 <test_console+0xc5c>)
   13b5c:	0010      	movs	r0, r2
   13b5e:	4798      	blx	r3
   13b60:	000b      	movs	r3, r1
   13b62:	0018      	movs	r0, r3
   13b64:	4b62      	ldr	r3, [pc, #392]	; (13cf0 <test_console+0xc54>)
   13b66:	22fa      	movs	r2, #250	; 0xfa
   13b68:	0091      	lsls	r1, r2, #2
   13b6a:	4798      	blx	r3
   13b6c:	000b      	movs	r3, r1
   13b6e:	001a      	movs	r2, r3
   13b70:	4b5d      	ldr	r3, [pc, #372]	; (13ce8 <test_console+0xc4c>)
   13b72:	2164      	movs	r1, #100	; 0x64
   13b74:	0010      	movs	r0, r2
   13b76:	4798      	blx	r3
   13b78:	0003      	movs	r3, r0
   13b7a:	b2db      	uxtb	r3, r3
   13b7c:	3330      	adds	r3, #48	; 0x30
   13b7e:	b2da      	uxtb	r2, r3
   13b80:	4b58      	ldr	r3, [pc, #352]	; (13ce4 <test_console+0xc48>)
   13b82:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((Time_Counter%1000000%100000%10000%1000%100/10)+0x30);
   13b84:	4b56      	ldr	r3, [pc, #344]	; (13ce0 <test_console+0xc44>)
   13b86:	781b      	ldrb	r3, [r3, #0]
   13b88:	1c5a      	adds	r2, r3, #1
   13b8a:	b2d1      	uxtb	r1, r2
   13b8c:	4a54      	ldr	r2, [pc, #336]	; (13ce0 <test_console+0xc44>)
   13b8e:	7011      	strb	r1, [r2, #0]
   13b90:	001c      	movs	r4, r3
   13b92:	4b52      	ldr	r3, [pc, #328]	; (13cdc <test_console+0xc40>)
   13b94:	681a      	ldr	r2, [r3, #0]
   13b96:	4b56      	ldr	r3, [pc, #344]	; (13cf0 <test_console+0xc54>)
   13b98:	4954      	ldr	r1, [pc, #336]	; (13cec <test_console+0xc50>)
   13b9a:	0010      	movs	r0, r2
   13b9c:	4798      	blx	r3
   13b9e:	000b      	movs	r3, r1
   13ba0:	001a      	movs	r2, r3
   13ba2:	4b53      	ldr	r3, [pc, #332]	; (13cf0 <test_console+0xc54>)
   13ba4:	4953      	ldr	r1, [pc, #332]	; (13cf4 <test_console+0xc58>)
   13ba6:	0010      	movs	r0, r2
   13ba8:	4798      	blx	r3
   13baa:	000b      	movs	r3, r1
   13bac:	001a      	movs	r2, r3
   13bae:	4b50      	ldr	r3, [pc, #320]	; (13cf0 <test_console+0xc54>)
   13bb0:	4951      	ldr	r1, [pc, #324]	; (13cf8 <test_console+0xc5c>)
   13bb2:	0010      	movs	r0, r2
   13bb4:	4798      	blx	r3
   13bb6:	000b      	movs	r3, r1
   13bb8:	0018      	movs	r0, r3
   13bba:	4b4d      	ldr	r3, [pc, #308]	; (13cf0 <test_console+0xc54>)
   13bbc:	22fa      	movs	r2, #250	; 0xfa
   13bbe:	0091      	lsls	r1, r2, #2
   13bc0:	4798      	blx	r3
   13bc2:	000b      	movs	r3, r1
   13bc4:	001a      	movs	r2, r3
   13bc6:	4b4a      	ldr	r3, [pc, #296]	; (13cf0 <test_console+0xc54>)
   13bc8:	2164      	movs	r1, #100	; 0x64
   13bca:	0010      	movs	r0, r2
   13bcc:	4798      	blx	r3
   13bce:	000b      	movs	r3, r1
   13bd0:	001a      	movs	r2, r3
   13bd2:	4b45      	ldr	r3, [pc, #276]	; (13ce8 <test_console+0xc4c>)
   13bd4:	210a      	movs	r1, #10
   13bd6:	0010      	movs	r0, r2
   13bd8:	4798      	blx	r3
   13bda:	0003      	movs	r3, r0
   13bdc:	b2db      	uxtb	r3, r3
   13bde:	3330      	adds	r3, #48	; 0x30
   13be0:	b2da      	uxtb	r2, r3
   13be2:	4b40      	ldr	r3, [pc, #256]	; (13ce4 <test_console+0xc48>)
   13be4:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData((Time_Counter%1000000%100000%10000%1000%100%10)+0x30);
   13be6:	4b3e      	ldr	r3, [pc, #248]	; (13ce0 <test_console+0xc44>)
   13be8:	781b      	ldrb	r3, [r3, #0]
   13bea:	1c5a      	adds	r2, r3, #1
   13bec:	b2d1      	uxtb	r1, r2
   13bee:	4a3c      	ldr	r2, [pc, #240]	; (13ce0 <test_console+0xc44>)
   13bf0:	7011      	strb	r1, [r2, #0]
   13bf2:	001c      	movs	r4, r3
   13bf4:	4b39      	ldr	r3, [pc, #228]	; (13cdc <test_console+0xc40>)
   13bf6:	681a      	ldr	r2, [r3, #0]
   13bf8:	4b3d      	ldr	r3, [pc, #244]	; (13cf0 <test_console+0xc54>)
   13bfa:	493c      	ldr	r1, [pc, #240]	; (13cec <test_console+0xc50>)
   13bfc:	0010      	movs	r0, r2
   13bfe:	4798      	blx	r3
   13c00:	000b      	movs	r3, r1
   13c02:	001a      	movs	r2, r3
   13c04:	4b3a      	ldr	r3, [pc, #232]	; (13cf0 <test_console+0xc54>)
   13c06:	493b      	ldr	r1, [pc, #236]	; (13cf4 <test_console+0xc58>)
   13c08:	0010      	movs	r0, r2
   13c0a:	4798      	blx	r3
   13c0c:	000b      	movs	r3, r1
   13c0e:	001a      	movs	r2, r3
   13c10:	4b37      	ldr	r3, [pc, #220]	; (13cf0 <test_console+0xc54>)
   13c12:	4939      	ldr	r1, [pc, #228]	; (13cf8 <test_console+0xc5c>)
   13c14:	0010      	movs	r0, r2
   13c16:	4798      	blx	r3
   13c18:	000b      	movs	r3, r1
   13c1a:	0018      	movs	r0, r3
   13c1c:	4b34      	ldr	r3, [pc, #208]	; (13cf0 <test_console+0xc54>)
   13c1e:	22fa      	movs	r2, #250	; 0xfa
   13c20:	0091      	lsls	r1, r2, #2
   13c22:	4798      	blx	r3
   13c24:	000b      	movs	r3, r1
   13c26:	001a      	movs	r2, r3
   13c28:	4b31      	ldr	r3, [pc, #196]	; (13cf0 <test_console+0xc54>)
   13c2a:	2164      	movs	r1, #100	; 0x64
   13c2c:	0010      	movs	r0, r2
   13c2e:	4798      	blx	r3
   13c30:	000b      	movs	r3, r1
   13c32:	001a      	movs	r2, r3
   13c34:	4b2e      	ldr	r3, [pc, #184]	; (13cf0 <test_console+0xc54>)
   13c36:	210a      	movs	r1, #10
   13c38:	0010      	movs	r0, r2
   13c3a:	4798      	blx	r3
   13c3c:	000b      	movs	r3, r1
   13c3e:	b2db      	uxtb	r3, r3
   13c40:	3330      	adds	r3, #48	; 0x30
   13c42:	b2da      	uxtb	r2, r3
   13c44:	4b27      	ldr	r3, [pc, #156]	; (13ce4 <test_console+0xc48>)
   13c46:	551a      	strb	r2, [r3, r4]
			MiApp_WriteData(' ');	//25
   13c48:	4b25      	ldr	r3, [pc, #148]	; (13ce0 <test_console+0xc44>)
   13c4a:	781b      	ldrb	r3, [r3, #0]
   13c4c:	1c5a      	adds	r2, r3, #1
   13c4e:	b2d1      	uxtb	r1, r2
   13c50:	4a23      	ldr	r2, [pc, #140]	; (13ce0 <test_console+0xc44>)
   13c52:	7011      	strb	r1, [r2, #0]
   13c54:	001a      	movs	r2, r3
   13c56:	4b23      	ldr	r3, [pc, #140]	; (13ce4 <test_console+0xc48>)
   13c58:	2120      	movs	r1, #32
   13c5a:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(' ');	//26			
   13c5c:	4b20      	ldr	r3, [pc, #128]	; (13ce0 <test_console+0xc44>)
   13c5e:	781b      	ldrb	r3, [r3, #0]
   13c60:	1c5a      	adds	r2, r3, #1
   13c62:	b2d1      	uxtb	r1, r2
   13c64:	4a1e      	ldr	r2, [pc, #120]	; (13ce0 <test_console+0xc44>)
   13c66:	7011      	strb	r1, [r2, #0]
   13c68:	001a      	movs	r2, r3
   13c6a:	4b1e      	ldr	r3, [pc, #120]	; (13ce4 <test_console+0xc48>)
   13c6c:	2120      	movs	r1, #32
   13c6e:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(' ');	//27
   13c70:	4b1b      	ldr	r3, [pc, #108]	; (13ce0 <test_console+0xc44>)
   13c72:	781b      	ldrb	r3, [r3, #0]
   13c74:	1c5a      	adds	r2, r3, #1
   13c76:	b2d1      	uxtb	r1, r2
   13c78:	4a19      	ldr	r2, [pc, #100]	; (13ce0 <test_console+0xc44>)
   13c7a:	7011      	strb	r1, [r2, #0]
   13c7c:	001a      	movs	r2, r3
   13c7e:	4b19      	ldr	r3, [pc, #100]	; (13ce4 <test_console+0xc48>)
   13c80:	2120      	movs	r1, #32
   13c82:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('T');	//28
   13c84:	4b16      	ldr	r3, [pc, #88]	; (13ce0 <test_console+0xc44>)
   13c86:	781b      	ldrb	r3, [r3, #0]
   13c88:	1c5a      	adds	r2, r3, #1
   13c8a:	b2d1      	uxtb	r1, r2
   13c8c:	4a14      	ldr	r2, [pc, #80]	; (13ce0 <test_console+0xc44>)
   13c8e:	7011      	strb	r1, [r2, #0]
   13c90:	001a      	movs	r2, r3
   13c92:	4b14      	ldr	r3, [pc, #80]	; (13ce4 <test_console+0xc48>)
   13c94:	2154      	movs	r1, #84	; 0x54
   13c96:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('o');	//29
   13c98:	4b11      	ldr	r3, [pc, #68]	; (13ce0 <test_console+0xc44>)
   13c9a:	781b      	ldrb	r3, [r3, #0]
   13c9c:	1c5a      	adds	r2, r3, #1
   13c9e:	b2d1      	uxtb	r1, r2
   13ca0:	4a0f      	ldr	r2, [pc, #60]	; (13ce0 <test_console+0xc44>)
   13ca2:	7011      	strb	r1, [r2, #0]
   13ca4:	001a      	movs	r2, r3
   13ca6:	4b0f      	ldr	r3, [pc, #60]	; (13ce4 <test_console+0xc48>)
   13ca8:	216f      	movs	r1, #111	; 0x6f
   13caa:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('t');	//30
   13cac:	4b0c      	ldr	r3, [pc, #48]	; (13ce0 <test_console+0xc44>)
   13cae:	781b      	ldrb	r3, [r3, #0]
   13cb0:	1c5a      	adds	r2, r3, #1
   13cb2:	b2d1      	uxtb	r1, r2
   13cb4:	4a0a      	ldr	r2, [pc, #40]	; (13ce0 <test_console+0xc44>)
   13cb6:	7011      	strb	r1, [r2, #0]
   13cb8:	001a      	movs	r2, r3
   13cba:	4b0a      	ldr	r3, [pc, #40]	; (13ce4 <test_console+0xc48>)
   13cbc:	2174      	movs	r1, #116	; 0x74
   13cbe:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('a');	//31
   13cc0:	4b07      	ldr	r3, [pc, #28]	; (13ce0 <test_console+0xc44>)
   13cc2:	781b      	ldrb	r3, [r3, #0]
   13cc4:	1c5a      	adds	r2, r3, #1
   13cc6:	b2d1      	uxtb	r1, r2
   13cc8:	4a05      	ldr	r2, [pc, #20]	; (13ce0 <test_console+0xc44>)
   13cca:	7011      	strb	r1, [r2, #0]
   13ccc:	001a      	movs	r2, r3
   13cce:	4b05      	ldr	r3, [pc, #20]	; (13ce4 <test_console+0xc48>)
   13cd0:	2161      	movs	r1, #97	; 0x61
   13cd2:	5499      	strb	r1, [r3, r2]
   13cd4:	e012      	b.n	13cfc <test_console+0xc60>
   13cd6:	46c0      	nop			; (mov r8, r8)
   13cd8:	20001b00 	.word	0x20001b00
   13cdc:	20001c00 	.word	0x20001c00
   13ce0:	200012dc 	.word	0x200012dc
   13ce4:	200012e4 	.word	0x200012e4
   13ce8:	0001498d 	.word	0x0001498d
   13cec:	000f4240 	.word	0x000f4240
   13cf0:	00014a99 	.word	0x00014a99
   13cf4:	000186a0 	.word	0x000186a0
   13cf8:	00002710 	.word	0x00002710
			MiApp_WriteData('l');	//32			
   13cfc:	4b9f      	ldr	r3, [pc, #636]	; (13f7c <test_console+0xee0>)
   13cfe:	781b      	ldrb	r3, [r3, #0]
   13d00:	1c5a      	adds	r2, r3, #1
   13d02:	b2d1      	uxtb	r1, r2
   13d04:	4a9d      	ldr	r2, [pc, #628]	; (13f7c <test_console+0xee0>)
   13d06:	7011      	strb	r1, [r2, #0]
   13d08:	001a      	movs	r2, r3
   13d0a:	4b9d      	ldr	r3, [pc, #628]	; (13f80 <test_console+0xee4>)
   13d0c:	216c      	movs	r1, #108	; 0x6c
   13d0e:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(':');	//33			
   13d10:	4b9a      	ldr	r3, [pc, #616]	; (13f7c <test_console+0xee0>)
   13d12:	781b      	ldrb	r3, [r3, #0]
   13d14:	1c5a      	adds	r2, r3, #1
   13d16:	b2d1      	uxtb	r1, r2
   13d18:	4a98      	ldr	r2, [pc, #608]	; (13f7c <test_console+0xee0>)
   13d1a:	7011      	strb	r1, [r2, #0]
   13d1c:	001a      	movs	r2, r3
   13d1e:	4b98      	ldr	r3, [pc, #608]	; (13f80 <test_console+0xee4>)
   13d20:	213a      	movs	r1, #58	; 0x3a
   13d22:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('6');	//34
   13d24:	4b95      	ldr	r3, [pc, #596]	; (13f7c <test_console+0xee0>)
   13d26:	781b      	ldrb	r3, [r3, #0]
   13d28:	1c5a      	adds	r2, r3, #1
   13d2a:	b2d1      	uxtb	r1, r2
   13d2c:	4a93      	ldr	r2, [pc, #588]	; (13f7c <test_console+0xee0>)
   13d2e:	7011      	strb	r1, [r2, #0]
   13d30:	001a      	movs	r2, r3
   13d32:	4b93      	ldr	r3, [pc, #588]	; (13f80 <test_console+0xee4>)
   13d34:	2136      	movs	r1, #54	; 0x36
   13d36:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('0');	//35
   13d38:	4b90      	ldr	r3, [pc, #576]	; (13f7c <test_console+0xee0>)
   13d3a:	781b      	ldrb	r3, [r3, #0]
   13d3c:	1c5a      	adds	r2, r3, #1
   13d3e:	b2d1      	uxtb	r1, r2
   13d40:	4a8e      	ldr	r2, [pc, #568]	; (13f7c <test_console+0xee0>)
   13d42:	7011      	strb	r1, [r2, #0]
   13d44:	001a      	movs	r2, r3
   13d46:	4b8e      	ldr	r3, [pc, #568]	; (13f80 <test_console+0xee4>)
   13d48:	2130      	movs	r1, #48	; 0x30
   13d4a:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(' ');	//36
   13d4c:	4b8b      	ldr	r3, [pc, #556]	; (13f7c <test_console+0xee0>)
   13d4e:	781b      	ldrb	r3, [r3, #0]
   13d50:	1c5a      	adds	r2, r3, #1
   13d52:	b2d1      	uxtb	r1, r2
   13d54:	4a89      	ldr	r2, [pc, #548]	; (13f7c <test_console+0xee0>)
   13d56:	7011      	strb	r1, [r2, #0]
   13d58:	001a      	movs	r2, r3
   13d5a:	4b89      	ldr	r3, [pc, #548]	; (13f80 <test_console+0xee4>)
   13d5c:	2120      	movs	r1, #32
   13d5e:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('B');	//37
   13d60:	4b86      	ldr	r3, [pc, #536]	; (13f7c <test_console+0xee0>)
   13d62:	781b      	ldrb	r3, [r3, #0]
   13d64:	1c5a      	adds	r2, r3, #1
   13d66:	b2d1      	uxtb	r1, r2
   13d68:	4a84      	ldr	r2, [pc, #528]	; (13f7c <test_console+0xee0>)
   13d6a:	7011      	strb	r1, [r2, #0]
   13d6c:	001a      	movs	r2, r3
   13d6e:	4b84      	ldr	r3, [pc, #528]	; (13f80 <test_console+0xee4>)
   13d70:	2142      	movs	r1, #66	; 0x42
   13d72:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('y');	//38
   13d74:	4b81      	ldr	r3, [pc, #516]	; (13f7c <test_console+0xee0>)
   13d76:	781b      	ldrb	r3, [r3, #0]
   13d78:	1c5a      	adds	r2, r3, #1
   13d7a:	b2d1      	uxtb	r1, r2
   13d7c:	4a7f      	ldr	r2, [pc, #508]	; (13f7c <test_console+0xee0>)
   13d7e:	7011      	strb	r1, [r2, #0]
   13d80:	001a      	movs	r2, r3
   13d82:	4b7f      	ldr	r3, [pc, #508]	; (13f80 <test_console+0xee4>)
   13d84:	2179      	movs	r1, #121	; 0x79
   13d86:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('t');	//39
   13d88:	4b7c      	ldr	r3, [pc, #496]	; (13f7c <test_console+0xee0>)
   13d8a:	781b      	ldrb	r3, [r3, #0]
   13d8c:	1c5a      	adds	r2, r3, #1
   13d8e:	b2d1      	uxtb	r1, r2
   13d90:	4a7a      	ldr	r2, [pc, #488]	; (13f7c <test_console+0xee0>)
   13d92:	7011      	strb	r1, [r2, #0]
   13d94:	001a      	movs	r2, r3
   13d96:	4b7a      	ldr	r3, [pc, #488]	; (13f80 <test_console+0xee4>)
   13d98:	2174      	movs	r1, #116	; 0x74
   13d9a:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('e');	//40
   13d9c:	4b77      	ldr	r3, [pc, #476]	; (13f7c <test_console+0xee0>)
   13d9e:	781b      	ldrb	r3, [r3, #0]
   13da0:	1c5a      	adds	r2, r3, #1
   13da2:	b2d1      	uxtb	r1, r2
   13da4:	4a75      	ldr	r2, [pc, #468]	; (13f7c <test_console+0xee0>)
   13da6:	7011      	strb	r1, [r2, #0]
   13da8:	001a      	movs	r2, r3
   13daa:	4b75      	ldr	r3, [pc, #468]	; (13f80 <test_console+0xee4>)
   13dac:	2165      	movs	r1, #101	; 0x65
   13dae:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(' ');	//41
   13db0:	4b72      	ldr	r3, [pc, #456]	; (13f7c <test_console+0xee0>)
   13db2:	781b      	ldrb	r3, [r3, #0]
   13db4:	1c5a      	adds	r2, r3, #1
   13db6:	b2d1      	uxtb	r1, r2
   13db8:	4a70      	ldr	r2, [pc, #448]	; (13f7c <test_console+0xee0>)
   13dba:	7011      	strb	r1, [r2, #0]
   13dbc:	001a      	movs	r2, r3
   13dbe:	4b70      	ldr	r3, [pc, #448]	; (13f80 <test_console+0xee4>)
   13dc0:	2120      	movs	r1, #32
   13dc2:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('t');	//42
   13dc4:	4b6d      	ldr	r3, [pc, #436]	; (13f7c <test_console+0xee0>)
   13dc6:	781b      	ldrb	r3, [r3, #0]
   13dc8:	1c5a      	adds	r2, r3, #1
   13dca:	b2d1      	uxtb	r1, r2
   13dcc:	4a6b      	ldr	r2, [pc, #428]	; (13f7c <test_console+0xee0>)
   13dce:	7011      	strb	r1, [r2, #0]
   13dd0:	001a      	movs	r2, r3
   13dd2:	4b6b      	ldr	r3, [pc, #428]	; (13f80 <test_console+0xee4>)
   13dd4:	2174      	movs	r1, #116	; 0x74
   13dd6:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('r');	//43
   13dd8:	4b68      	ldr	r3, [pc, #416]	; (13f7c <test_console+0xee0>)
   13dda:	781b      	ldrb	r3, [r3, #0]
   13ddc:	1c5a      	adds	r2, r3, #1
   13dde:	b2d1      	uxtb	r1, r2
   13de0:	4a66      	ldr	r2, [pc, #408]	; (13f7c <test_console+0xee0>)
   13de2:	7011      	strb	r1, [r2, #0]
   13de4:	001a      	movs	r2, r3
   13de6:	4b66      	ldr	r3, [pc, #408]	; (13f80 <test_console+0xee4>)
   13de8:	2172      	movs	r1, #114	; 0x72
   13dea:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('a');	//44
   13dec:	4b63      	ldr	r3, [pc, #396]	; (13f7c <test_console+0xee0>)
   13dee:	781b      	ldrb	r3, [r3, #0]
   13df0:	1c5a      	adds	r2, r3, #1
   13df2:	b2d1      	uxtb	r1, r2
   13df4:	4a61      	ldr	r2, [pc, #388]	; (13f7c <test_console+0xee0>)
   13df6:	7011      	strb	r1, [r2, #0]
   13df8:	001a      	movs	r2, r3
   13dfa:	4b61      	ldr	r3, [pc, #388]	; (13f80 <test_console+0xee4>)
   13dfc:	2161      	movs	r1, #97	; 0x61
   13dfe:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('n');	//45
   13e00:	4b5e      	ldr	r3, [pc, #376]	; (13f7c <test_console+0xee0>)
   13e02:	781b      	ldrb	r3, [r3, #0]
   13e04:	1c5a      	adds	r2, r3, #1
   13e06:	b2d1      	uxtb	r1, r2
   13e08:	4a5c      	ldr	r2, [pc, #368]	; (13f7c <test_console+0xee0>)
   13e0a:	7011      	strb	r1, [r2, #0]
   13e0c:	001a      	movs	r2, r3
   13e0e:	4b5c      	ldr	r3, [pc, #368]	; (13f80 <test_console+0xee4>)
   13e10:	216e      	movs	r1, #110	; 0x6e
   13e12:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('s');	//46
   13e14:	4b59      	ldr	r3, [pc, #356]	; (13f7c <test_console+0xee0>)
   13e16:	781b      	ldrb	r3, [r3, #0]
   13e18:	1c5a      	adds	r2, r3, #1
   13e1a:	b2d1      	uxtb	r1, r2
   13e1c:	4a57      	ldr	r2, [pc, #348]	; (13f7c <test_console+0xee0>)
   13e1e:	7011      	strb	r1, [r2, #0]
   13e20:	001a      	movs	r2, r3
   13e22:	4b57      	ldr	r3, [pc, #348]	; (13f80 <test_console+0xee4>)
   13e24:	2173      	movs	r1, #115	; 0x73
   13e26:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('f');	//47
   13e28:	4b54      	ldr	r3, [pc, #336]	; (13f7c <test_console+0xee0>)
   13e2a:	781b      	ldrb	r3, [r3, #0]
   13e2c:	1c5a      	adds	r2, r3, #1
   13e2e:	b2d1      	uxtb	r1, r2
   13e30:	4a52      	ldr	r2, [pc, #328]	; (13f7c <test_console+0xee0>)
   13e32:	7011      	strb	r1, [r2, #0]
   13e34:	001a      	movs	r2, r3
   13e36:	4b52      	ldr	r3, [pc, #328]	; (13f80 <test_console+0xee4>)
   13e38:	2166      	movs	r1, #102	; 0x66
   13e3a:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('e');	//48
   13e3c:	4b4f      	ldr	r3, [pc, #316]	; (13f7c <test_console+0xee0>)
   13e3e:	781b      	ldrb	r3, [r3, #0]
   13e40:	1c5a      	adds	r2, r3, #1
   13e42:	b2d1      	uxtb	r1, r2
   13e44:	4a4d      	ldr	r2, [pc, #308]	; (13f7c <test_console+0xee0>)
   13e46:	7011      	strb	r1, [r2, #0]
   13e48:	001a      	movs	r2, r3
   13e4a:	4b4d      	ldr	r3, [pc, #308]	; (13f80 <test_console+0xee4>)
   13e4c:	2165      	movs	r1, #101	; 0x65
   13e4e:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('r');	//49
   13e50:	4b4a      	ldr	r3, [pc, #296]	; (13f7c <test_console+0xee0>)
   13e52:	781b      	ldrb	r3, [r3, #0]
   13e54:	1c5a      	adds	r2, r3, #1
   13e56:	b2d1      	uxtb	r1, r2
   13e58:	4a48      	ldr	r2, [pc, #288]	; (13f7c <test_console+0xee0>)
   13e5a:	7011      	strb	r1, [r2, #0]
   13e5c:	001a      	movs	r2, r3
   13e5e:	4b48      	ldr	r3, [pc, #288]	; (13f80 <test_console+0xee4>)
   13e60:	2172      	movs	r1, #114	; 0x72
   13e62:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData(' ');	//50
   13e64:	4b45      	ldr	r3, [pc, #276]	; (13f7c <test_console+0xee0>)
   13e66:	781b      	ldrb	r3, [r3, #0]
   13e68:	1c5a      	adds	r2, r3, #1
   13e6a:	b2d1      	uxtb	r1, r2
   13e6c:	4a43      	ldr	r2, [pc, #268]	; (13f7c <test_console+0xee0>)
   13e6e:	7011      	strb	r1, [r2, #0]
   13e70:	001a      	movs	r2, r3
   13e72:	4b43      	ldr	r3, [pc, #268]	; (13f80 <test_console+0xee4>)
   13e74:	2120      	movs	r1, #32
   13e76:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('C');	//51
   13e78:	4b40      	ldr	r3, [pc, #256]	; (13f7c <test_console+0xee0>)
   13e7a:	781b      	ldrb	r3, [r3, #0]
   13e7c:	1c5a      	adds	r2, r3, #1
   13e7e:	b2d1      	uxtb	r1, r2
   13e80:	4a3e      	ldr	r2, [pc, #248]	; (13f7c <test_console+0xee0>)
   13e82:	7011      	strb	r1, [r2, #0]
   13e84:	001a      	movs	r2, r3
   13e86:	4b3e      	ldr	r3, [pc, #248]	; (13f80 <test_console+0xee4>)
   13e88:	2143      	movs	r1, #67	; 0x43
   13e8a:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('o');	//52
   13e8c:	4b3b      	ldr	r3, [pc, #236]	; (13f7c <test_console+0xee0>)
   13e8e:	781b      	ldrb	r3, [r3, #0]
   13e90:	1c5a      	adds	r2, r3, #1
   13e92:	b2d1      	uxtb	r1, r2
   13e94:	4a39      	ldr	r2, [pc, #228]	; (13f7c <test_console+0xee0>)
   13e96:	7011      	strb	r1, [r2, #0]
   13e98:	001a      	movs	r2, r3
   13e9a:	4b39      	ldr	r3, [pc, #228]	; (13f80 <test_console+0xee4>)
   13e9c:	216f      	movs	r1, #111	; 0x6f
   13e9e:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('m');	//53
   13ea0:	4b36      	ldr	r3, [pc, #216]	; (13f7c <test_console+0xee0>)
   13ea2:	781b      	ldrb	r3, [r3, #0]
   13ea4:	1c5a      	adds	r2, r3, #1
   13ea6:	b2d1      	uxtb	r1, r2
   13ea8:	4a34      	ldr	r2, [pc, #208]	; (13f7c <test_console+0xee0>)
   13eaa:	7011      	strb	r1, [r2, #0]
   13eac:	001a      	movs	r2, r3
   13eae:	4b34      	ldr	r3, [pc, #208]	; (13f80 <test_console+0xee4>)
   13eb0:	216d      	movs	r1, #109	; 0x6d
   13eb2:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('p');	//54
   13eb4:	4b31      	ldr	r3, [pc, #196]	; (13f7c <test_console+0xee0>)
   13eb6:	781b      	ldrb	r3, [r3, #0]
   13eb8:	1c5a      	adds	r2, r3, #1
   13eba:	b2d1      	uxtb	r1, r2
   13ebc:	4a2f      	ldr	r2, [pc, #188]	; (13f7c <test_console+0xee0>)
   13ebe:	7011      	strb	r1, [r2, #0]
   13ec0:	001a      	movs	r2, r3
   13ec2:	4b2f      	ldr	r3, [pc, #188]	; (13f80 <test_console+0xee4>)
   13ec4:	2170      	movs	r1, #112	; 0x70
   13ec6:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('l');	//55
   13ec8:	4b2c      	ldr	r3, [pc, #176]	; (13f7c <test_console+0xee0>)
   13eca:	781b      	ldrb	r3, [r3, #0]
   13ecc:	1c5a      	adds	r2, r3, #1
   13ece:	b2d1      	uxtb	r1, r2
   13ed0:	4a2a      	ldr	r2, [pc, #168]	; (13f7c <test_console+0xee0>)
   13ed2:	7011      	strb	r1, [r2, #0]
   13ed4:	001a      	movs	r2, r3
   13ed6:	4b2a      	ldr	r3, [pc, #168]	; (13f80 <test_console+0xee4>)
   13ed8:	216c      	movs	r1, #108	; 0x6c
   13eda:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('e');	//56
   13edc:	4b27      	ldr	r3, [pc, #156]	; (13f7c <test_console+0xee0>)
   13ede:	781b      	ldrb	r3, [r3, #0]
   13ee0:	1c5a      	adds	r2, r3, #1
   13ee2:	b2d1      	uxtb	r1, r2
   13ee4:	4a25      	ldr	r2, [pc, #148]	; (13f7c <test_console+0xee0>)
   13ee6:	7011      	strb	r1, [r2, #0]
   13ee8:	001a      	movs	r2, r3
   13eea:	4b25      	ldr	r3, [pc, #148]	; (13f80 <test_console+0xee4>)
   13eec:	2165      	movs	r1, #101	; 0x65
   13eee:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('t');	//57
   13ef0:	4b22      	ldr	r3, [pc, #136]	; (13f7c <test_console+0xee0>)
   13ef2:	781b      	ldrb	r3, [r3, #0]
   13ef4:	1c5a      	adds	r2, r3, #1
   13ef6:	b2d1      	uxtb	r1, r2
   13ef8:	4a20      	ldr	r2, [pc, #128]	; (13f7c <test_console+0xee0>)
   13efa:	7011      	strb	r1, [r2, #0]
   13efc:	001a      	movs	r2, r3
   13efe:	4b20      	ldr	r3, [pc, #128]	; (13f80 <test_console+0xee4>)
   13f00:	2174      	movs	r1, #116	; 0x74
   13f02:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('e');	//58
   13f04:	4b1d      	ldr	r3, [pc, #116]	; (13f7c <test_console+0xee0>)
   13f06:	781b      	ldrb	r3, [r3, #0]
   13f08:	1c5a      	adds	r2, r3, #1
   13f0a:	b2d1      	uxtb	r1, r2
   13f0c:	4a1b      	ldr	r2, [pc, #108]	; (13f7c <test_console+0xee0>)
   13f0e:	7011      	strb	r1, [r2, #0]
   13f10:	001a      	movs	r2, r3
   13f12:	4b1b      	ldr	r3, [pc, #108]	; (13f80 <test_console+0xee4>)
   13f14:	2165      	movs	r1, #101	; 0x65
   13f16:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('.');	//59
   13f18:	4b18      	ldr	r3, [pc, #96]	; (13f7c <test_console+0xee0>)
   13f1a:	781b      	ldrb	r3, [r3, #0]
   13f1c:	1c5a      	adds	r2, r3, #1
   13f1e:	b2d1      	uxtb	r1, r2
   13f20:	4a16      	ldr	r2, [pc, #88]	; (13f7c <test_console+0xee0>)
   13f22:	7011      	strb	r1, [r2, #0]
   13f24:	001a      	movs	r2, r3
   13f26:	4b16      	ldr	r3, [pc, #88]	; (13f80 <test_console+0xee4>)
   13f28:	212e      	movs	r1, #46	; 0x2e
   13f2a:	5499      	strb	r1, [r3, r2]
			MiApp_WriteData('!');	//60
   13f2c:	4b13      	ldr	r3, [pc, #76]	; (13f7c <test_console+0xee0>)
   13f2e:	781b      	ldrb	r3, [r3, #0]
   13f30:	1c5a      	adds	r2, r3, #1
   13f32:	b2d1      	uxtb	r1, r2
   13f34:	4a11      	ldr	r2, [pc, #68]	; (13f7c <test_console+0xee0>)
   13f36:	7011      	strb	r1, [r2, #0]
   13f38:	001a      	movs	r2, r3
   13f3a:	4b11      	ldr	r3, [pc, #68]	; (13f80 <test_console+0xee4>)
   13f3c:	2121      	movs	r1, #33	; 0x21
   13f3e:	5499      	strb	r1, [r3, r2]
			if(RF_OUTPUT==20){
   13f40:	4b10      	ldr	r3, [pc, #64]	; (13f84 <test_console+0xee8>)
   13f42:	781b      	ldrb	r3, [r3, #0]
   13f44:	2b14      	cmp	r3, #20
   13f46:	d104      	bne.n	13f52 <test_console+0xeb6>
				port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_INACTIVE);//kwlee 200721
   13f48:	2100      	movs	r1, #0
   13f4a:	200d      	movs	r0, #13
   13f4c:	4b0e      	ldr	r3, [pc, #56]	; (13f88 <test_console+0xeec>)
   13f4e:	4798      	blx	r3
   13f50:	e003      	b.n	13f5a <test_console+0xebe>
				port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_ACTIVE);//kwlee 200727
   13f52:	2101      	movs	r1, #1
   13f54:	200d      	movs	r0, #13
   13f56:	4b0c      	ldr	r3, [pc, #48]	; (13f88 <test_console+0xeec>)
   13f58:	4798      	blx	r3
			MiApp_BroadcastPacket(false);
   13f5a:	2000      	movs	r0, #0
   13f5c:	4b0b      	ldr	r3, [pc, #44]	; (13f8c <test_console+0xef0>)
   13f5e:	4798      	blx	r3
			printf("Test Broadcast... Counter : %d\r\n",Time_Counter);
   13f60:	4b0b      	ldr	r3, [pc, #44]	; (13f90 <test_console+0xef4>)
   13f62:	681a      	ldr	r2, [r3, #0]
   13f64:	4b0b      	ldr	r3, [pc, #44]	; (13f94 <test_console+0xef8>)
   13f66:	0011      	movs	r1, r2
   13f68:	0018      	movs	r0, r3
   13f6a:	4b0b      	ldr	r3, [pc, #44]	; (13f98 <test_console+0xefc>)
   13f6c:	4798      	blx	r3
			SX1276_RX_INIT();
   13f6e:	4b0b      	ldr	r3, [pc, #44]	; (13f9c <test_console+0xf00>)
   13f70:	4798      	blx	r3
}
   13f72:	46c0      	nop			; (mov r8, r8)
   13f74:	46bd      	mov	sp, r7
   13f76:	b003      	add	sp, #12
   13f78:	bd90      	pop	{r4, r7, pc}
   13f7a:	46c0      	nop			; (mov r8, r8)
   13f7c:	200012dc 	.word	0x200012dc
   13f80:	200012e4 	.word	0x200012e4
   13f84:	2000002e 	.word	0x2000002e
   13f88:	0001093d 	.word	0x0001093d
   13f8c:	0000d805 	.word	0x0000d805
   13f90:	20001c00 	.word	0x20001c00
   13f94:	0001dd20 	.word	0x0001dd20
   13f98:	0001782d 	.word	0x0001782d
   13f9c:	0000f90d 	.word	0x0000f90d

00013fa0 <system_pinmux_get_group_from_gpio_pin>:
{
   13fa0:	b580      	push	{r7, lr}
   13fa2:	b084      	sub	sp, #16
   13fa4:	af00      	add	r7, sp, #0
   13fa6:	0002      	movs	r2, r0
   13fa8:	1dfb      	adds	r3, r7, #7
   13faa:	701a      	strb	r2, [r3, #0]
	uint8_t port_index  = (gpio_pin / 128);
   13fac:	230f      	movs	r3, #15
   13fae:	18fb      	adds	r3, r7, r3
   13fb0:	1dfa      	adds	r2, r7, #7
   13fb2:	7812      	ldrb	r2, [r2, #0]
   13fb4:	09d2      	lsrs	r2, r2, #7
   13fb6:	701a      	strb	r2, [r3, #0]
	uint8_t group_index = (gpio_pin / 32);
   13fb8:	230e      	movs	r3, #14
   13fba:	18fb      	adds	r3, r7, r3
   13fbc:	1dfa      	adds	r2, r7, #7
   13fbe:	7812      	ldrb	r2, [r2, #0]
   13fc0:	0952      	lsrs	r2, r2, #5
   13fc2:	701a      	strb	r2, [r3, #0]
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;
   13fc4:	4b0d      	ldr	r3, [pc, #52]	; (13ffc <system_pinmux_get_group_from_gpio_pin+0x5c>)
   13fc6:	60bb      	str	r3, [r7, #8]
	if (port_index < PORT_INST_NUM) {
   13fc8:	230f      	movs	r3, #15
   13fca:	18fb      	adds	r3, r7, r3
   13fcc:	781b      	ldrb	r3, [r3, #0]
   13fce:	2b00      	cmp	r3, #0
   13fd0:	d10f      	bne.n	13ff2 <system_pinmux_get_group_from_gpio_pin+0x52>
		return &(ports[port_index]->Group[group_index]);
   13fd2:	230f      	movs	r3, #15
   13fd4:	18fb      	adds	r3, r7, r3
   13fd6:	781b      	ldrb	r3, [r3, #0]
   13fd8:	009b      	lsls	r3, r3, #2
   13fda:	2210      	movs	r2, #16
   13fdc:	4694      	mov	ip, r2
   13fde:	44bc      	add	ip, r7
   13fe0:	4463      	add	r3, ip
   13fe2:	3b08      	subs	r3, #8
   13fe4:	681a      	ldr	r2, [r3, #0]
   13fe6:	230e      	movs	r3, #14
   13fe8:	18fb      	adds	r3, r7, r3
   13fea:	781b      	ldrb	r3, [r3, #0]
   13fec:	01db      	lsls	r3, r3, #7
   13fee:	18d3      	adds	r3, r2, r3
   13ff0:	e000      	b.n	13ff4 <system_pinmux_get_group_from_gpio_pin+0x54>
		return NULL;
   13ff2:	2300      	movs	r3, #0
}
   13ff4:	0018      	movs	r0, r3
   13ff6:	46bd      	mov	sp, r7
   13ff8:	b004      	add	sp, #16
   13ffa:	bd80      	pop	{r7, pc}
   13ffc:	40002800 	.word	0x40002800

00014000 <system_set_sleepmode>:
 *
 * \param[in] sleep_mode  Sleep mode to configure for the next sleep operation
 */
static inline void system_set_sleepmode(
	const enum system_sleepmode sleep_mode)
{
   14000:	b580      	push	{r7, lr}
   14002:	b082      	sub	sp, #8
   14004:	af00      	add	r7, sp, #0
   14006:	0002      	movs	r2, r0
   14008:	1dfb      	adds	r3, r7, #7
   1400a:	701a      	strb	r2, [r3, #0]
	PM->SLEEPCFG.reg = sleep_mode;
   1400c:	2380      	movs	r3, #128	; 0x80
   1400e:	05db      	lsls	r3, r3, #23
   14010:	1dfa      	adds	r2, r7, #7
   14012:	7812      	ldrb	r2, [r2, #0]
   14014:	705a      	strb	r2, [r3, #1]
	while(PM->SLEEPCFG.reg != sleep_mode) ;
   14016:	46c0      	nop			; (mov r8, r8)
   14018:	2380      	movs	r3, #128	; 0x80
   1401a:	05db      	lsls	r3, r3, #23
   1401c:	785b      	ldrb	r3, [r3, #1]
   1401e:	b2db      	uxtb	r3, r3
   14020:	1dfa      	adds	r2, r7, #7
   14022:	7812      	ldrb	r2, [r2, #0]
   14024:	429a      	cmp	r2, r3
   14026:	d1f7      	bne.n	14018 <system_set_sleepmode+0x18>
}
   14028:	46c0      	nop			; (mov r8, r8)
   1402a:	46bd      	mov	sp, r7
   1402c:	b002      	add	sp, #8
   1402e:	bd80      	pop	{r7, pc}

00014030 <system_sleep>:
 * all ongoing memory accesses have completed. Further, a WFI (Wait For Interrupt)
 * instruction is executed to place the device into the sleep mode specified by
 * \ref system_set_sleepmode.
 */
static inline void system_sleep(void)
{
   14030:	b580      	push	{r7, lr}
   14032:	af00      	add	r7, sp, #0
   14034:	f3bf 8f4f 	dsb	sy
	__DSB();
	__WFI();
   14038:	bf30      	wfi
}
   1403a:	46c0      	nop			; (mov r8, r8)
   1403c:	46bd      	mov	sp, r7
   1403e:	bd80      	pop	{r7, pc}

00014040 <system_get_reset_cause>:
 * Retrieves the cause of the last system reset.
 *
 * \return An enum value indicating the cause of the last system reset.
 */
static inline enum system_reset_cause system_get_reset_cause(void)
{
   14040:	b580      	push	{r7, lr}
   14042:	af00      	add	r7, sp, #0
	return (enum system_reset_cause)RSTC->RCAUSE.reg;
   14044:	4b02      	ldr	r3, [pc, #8]	; (14050 <system_get_reset_cause+0x10>)
   14046:	781b      	ldrb	r3, [r3, #0]
   14048:	b2db      	uxtb	r3, r3
}
   1404a:	0018      	movs	r0, r3
   1404c:	46bd      	mov	sp, r7
   1404e:	bd80      	pop	{r7, pc}
   14050:	40000800 	.word	0x40000800

00014054 <port_get_group_from_gpio_pin>:
{
   14054:	b580      	push	{r7, lr}
   14056:	b082      	sub	sp, #8
   14058:	af00      	add	r7, sp, #0
   1405a:	0002      	movs	r2, r0
   1405c:	1dfb      	adds	r3, r7, #7
   1405e:	701a      	strb	r2, [r3, #0]
	return system_pinmux_get_group_from_gpio_pin(gpio_pin);
   14060:	1dfb      	adds	r3, r7, #7
   14062:	781b      	ldrb	r3, [r3, #0]
   14064:	0018      	movs	r0, r3
   14066:	4b03      	ldr	r3, [pc, #12]	; (14074 <port_get_group_from_gpio_pin+0x20>)
   14068:	4798      	blx	r3
   1406a:	0003      	movs	r3, r0
}
   1406c:	0018      	movs	r0, r3
   1406e:	46bd      	mov	sp, r7
   14070:	b002      	add	sp, #8
   14072:	bd80      	pop	{r7, pc}
   14074:	00013fa1 	.word	0x00013fa1

00014078 <port_pin_set_output_level>:
{
   14078:	b580      	push	{r7, lr}
   1407a:	b084      	sub	sp, #16
   1407c:	af00      	add	r7, sp, #0
   1407e:	0002      	movs	r2, r0
   14080:	1dfb      	adds	r3, r7, #7
   14082:	701a      	strb	r2, [r3, #0]
   14084:	1dbb      	adds	r3, r7, #6
   14086:	1c0a      	adds	r2, r1, #0
   14088:	701a      	strb	r2, [r3, #0]
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
   1408a:	1dfb      	adds	r3, r7, #7
   1408c:	781b      	ldrb	r3, [r3, #0]
   1408e:	0018      	movs	r0, r3
   14090:	4b0d      	ldr	r3, [pc, #52]	; (140c8 <port_pin_set_output_level+0x50>)
   14092:	4798      	blx	r3
   14094:	0003      	movs	r3, r0
   14096:	60fb      	str	r3, [r7, #12]
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));
   14098:	1dfb      	adds	r3, r7, #7
   1409a:	781b      	ldrb	r3, [r3, #0]
   1409c:	221f      	movs	r2, #31
   1409e:	4013      	ands	r3, r2
   140a0:	2201      	movs	r2, #1
   140a2:	409a      	lsls	r2, r3
   140a4:	0013      	movs	r3, r2
   140a6:	60bb      	str	r3, [r7, #8]
	if (level) {
   140a8:	1dbb      	adds	r3, r7, #6
   140aa:	781b      	ldrb	r3, [r3, #0]
   140ac:	2b00      	cmp	r3, #0
   140ae:	d003      	beq.n	140b8 <port_pin_set_output_level+0x40>
		port_base->OUTSET.reg = pin_mask;
   140b0:	68fb      	ldr	r3, [r7, #12]
   140b2:	68ba      	ldr	r2, [r7, #8]
   140b4:	619a      	str	r2, [r3, #24]
}
   140b6:	e002      	b.n	140be <port_pin_set_output_level+0x46>
		port_base->OUTCLR.reg = pin_mask;
   140b8:	68fb      	ldr	r3, [r7, #12]
   140ba:	68ba      	ldr	r2, [r7, #8]
   140bc:	615a      	str	r2, [r3, #20]
}
   140be:	46c0      	nop			; (mov r8, r8)
   140c0:	46bd      	mov	sp, r7
   140c2:	b004      	add	sp, #16
   140c4:	bd80      	pop	{r7, pc}
   140c6:	46c0      	nop			; (mov r8, r8)
   140c8:	00014055 	.word	0x00014055

000140cc <print_reset_causes>:
#endif

/****************************** FUNCTIONS **************************************/

static void print_reset_causes(void)
{
   140cc:	b590      	push	{r4, r7, lr}
   140ce:	b083      	sub	sp, #12
   140d0:	af00      	add	r7, sp, #0
    enum system_reset_cause rcause = system_get_reset_cause();
   140d2:	1dfc      	adds	r4, r7, #7
   140d4:	4b2e      	ldr	r3, [pc, #184]	; (14190 <print_reset_causes+0xc4>)
   140d6:	4798      	blx	r3
   140d8:	0003      	movs	r3, r0
   140da:	7023      	strb	r3, [r4, #0]
    if(chkecho) printf("Last reset cause: ");
   140dc:	4b2d      	ldr	r3, [pc, #180]	; (14194 <print_reset_causes+0xc8>)
   140de:	781b      	ldrb	r3, [r3, #0]
   140e0:	2b00      	cmp	r3, #0
   140e2:	d003      	beq.n	140ec <print_reset_causes+0x20>
   140e4:	4b2c      	ldr	r3, [pc, #176]	; (14198 <print_reset_causes+0xcc>)
   140e6:	0018      	movs	r0, r3
   140e8:	4b2c      	ldr	r3, [pc, #176]	; (1419c <print_reset_causes+0xd0>)
   140ea:	4798      	blx	r3
    if(rcause & (1 << 6)) {
   140ec:	1dfb      	adds	r3, r7, #7
   140ee:	781b      	ldrb	r3, [r3, #0]
   140f0:	2240      	movs	r2, #64	; 0x40
   140f2:	4013      	ands	r3, r2
   140f4:	d007      	beq.n	14106 <print_reset_causes+0x3a>
        if(chkecho) printf("System Reset Request\r\n");
   140f6:	4b27      	ldr	r3, [pc, #156]	; (14194 <print_reset_causes+0xc8>)
   140f8:	781b      	ldrb	r3, [r3, #0]
   140fa:	2b00      	cmp	r3, #0
   140fc:	d003      	beq.n	14106 <print_reset_causes+0x3a>
   140fe:	4b28      	ldr	r3, [pc, #160]	; (141a0 <print_reset_causes+0xd4>)
   14100:	0018      	movs	r0, r3
   14102:	4b28      	ldr	r3, [pc, #160]	; (141a4 <print_reset_causes+0xd8>)
   14104:	4798      	blx	r3
    }
    if(rcause & (1 << 5)) {
   14106:	1dfb      	adds	r3, r7, #7
   14108:	781b      	ldrb	r3, [r3, #0]
   1410a:	2220      	movs	r2, #32
   1410c:	4013      	ands	r3, r2
   1410e:	d007      	beq.n	14120 <print_reset_causes+0x54>
        if(chkecho) printf("Watchdog Reset\r\n");
   14110:	4b20      	ldr	r3, [pc, #128]	; (14194 <print_reset_causes+0xc8>)
   14112:	781b      	ldrb	r3, [r3, #0]
   14114:	2b00      	cmp	r3, #0
   14116:	d003      	beq.n	14120 <print_reset_causes+0x54>
   14118:	4b23      	ldr	r3, [pc, #140]	; (141a8 <print_reset_causes+0xdc>)
   1411a:	0018      	movs	r0, r3
   1411c:	4b21      	ldr	r3, [pc, #132]	; (141a4 <print_reset_causes+0xd8>)
   1411e:	4798      	blx	r3
    }
    if(rcause & (1 << 4)) {
   14120:	1dfb      	adds	r3, r7, #7
   14122:	781b      	ldrb	r3, [r3, #0]
   14124:	2210      	movs	r2, #16
   14126:	4013      	ands	r3, r2
   14128:	d007      	beq.n	1413a <print_reset_causes+0x6e>
        if(chkecho) printf("External Reset\r\n");
   1412a:	4b1a      	ldr	r3, [pc, #104]	; (14194 <print_reset_causes+0xc8>)
   1412c:	781b      	ldrb	r3, [r3, #0]
   1412e:	2b00      	cmp	r3, #0
   14130:	d003      	beq.n	1413a <print_reset_causes+0x6e>
   14132:	4b1e      	ldr	r3, [pc, #120]	; (141ac <print_reset_causes+0xe0>)
   14134:	0018      	movs	r0, r3
   14136:	4b1b      	ldr	r3, [pc, #108]	; (141a4 <print_reset_causes+0xd8>)
   14138:	4798      	blx	r3
    }
    if(rcause & (1 << 2)) {
   1413a:	1dfb      	adds	r3, r7, #7
   1413c:	781b      	ldrb	r3, [r3, #0]
   1413e:	2204      	movs	r2, #4
   14140:	4013      	ands	r3, r2
   14142:	d007      	beq.n	14154 <print_reset_causes+0x88>
        if(chkecho) printf("Brown Out 33 Detector Reset\r\n");
   14144:	4b13      	ldr	r3, [pc, #76]	; (14194 <print_reset_causes+0xc8>)
   14146:	781b      	ldrb	r3, [r3, #0]
   14148:	2b00      	cmp	r3, #0
   1414a:	d003      	beq.n	14154 <print_reset_causes+0x88>
   1414c:	4b18      	ldr	r3, [pc, #96]	; (141b0 <print_reset_causes+0xe4>)
   1414e:	0018      	movs	r0, r3
   14150:	4b14      	ldr	r3, [pc, #80]	; (141a4 <print_reset_causes+0xd8>)
   14152:	4798      	blx	r3
    }
    if(rcause & (1 << 1)) {
   14154:	1dfb      	adds	r3, r7, #7
   14156:	781b      	ldrb	r3, [r3, #0]
   14158:	2202      	movs	r2, #2
   1415a:	4013      	ands	r3, r2
   1415c:	d007      	beq.n	1416e <print_reset_causes+0xa2>
        if(chkecho) printf("Brown Out 12 Detector Reset\r\n");
   1415e:	4b0d      	ldr	r3, [pc, #52]	; (14194 <print_reset_causes+0xc8>)
   14160:	781b      	ldrb	r3, [r3, #0]
   14162:	2b00      	cmp	r3, #0
   14164:	d003      	beq.n	1416e <print_reset_causes+0xa2>
   14166:	4b13      	ldr	r3, [pc, #76]	; (141b4 <print_reset_causes+0xe8>)
   14168:	0018      	movs	r0, r3
   1416a:	4b0e      	ldr	r3, [pc, #56]	; (141a4 <print_reset_causes+0xd8>)
   1416c:	4798      	blx	r3
    }
    if(rcause & (1 << 0)) {
   1416e:	1dfb      	adds	r3, r7, #7
   14170:	781b      	ldrb	r3, [r3, #0]
   14172:	2201      	movs	r2, #1
   14174:	4013      	ands	r3, r2
   14176:	d007      	beq.n	14188 <print_reset_causes+0xbc>
        if(chkecho) printf("Power-On Reset\r\n");
   14178:	4b06      	ldr	r3, [pc, #24]	; (14194 <print_reset_causes+0xc8>)
   1417a:	781b      	ldrb	r3, [r3, #0]
   1417c:	2b00      	cmp	r3, #0
   1417e:	d003      	beq.n	14188 <print_reset_causes+0xbc>
   14180:	4b0d      	ldr	r3, [pc, #52]	; (141b8 <print_reset_causes+0xec>)
   14182:	0018      	movs	r0, r3
   14184:	4b07      	ldr	r3, [pc, #28]	; (141a4 <print_reset_causes+0xd8>)
   14186:	4798      	blx	r3
    }
}
   14188:	46c0      	nop			; (mov r8, r8)
   1418a:	46bd      	mov	sp, r7
   1418c:	b003      	add	sp, #12
   1418e:	bd90      	pop	{r4, r7, pc}
   14190:	00014041 	.word	0x00014041
   14194:	2000002c 	.word	0x2000002c
   14198:	0001de8c 	.word	0x0001de8c
   1419c:	0001782d 	.word	0x0001782d
   141a0:	0001dea0 	.word	0x0001dea0
   141a4:	00017905 	.word	0x00017905
   141a8:	0001deb8 	.word	0x0001deb8
   141ac:	0001dec8 	.word	0x0001dec8
   141b0:	0001ded8 	.word	0x0001ded8
   141b4:	0001def8 	.word	0x0001def8
   141b8:	0001df18 	.word	0x0001df18

000141bc <put_radio_to_sleep>:
	//led_toggle_indication(LED0_TOGGLE_2);
}


static void put_radio_to_sleep(void)
{
   141bc:	b590      	push	{r4, r7, lr}
   141be:	b083      	sub	sp, #12
   141c0:	af00      	add	r7, sp, #0
	uint8_t op_mode, current_mode;
	uint8_t new_mode = 0x00;
   141c2:	1dfb      	adds	r3, r7, #7
   141c4:	2200      	movs	r2, #0
   141c6:	701a      	strb	r2, [r3, #0]
	//HAL_TCXOPowerOn();
	
	/* Reset the radio */
	//RADIO_Reset();

	op_mode = RADIO_RegisterRead(0x01);
   141c8:	1dbc      	adds	r4, r7, #6
   141ca:	2001      	movs	r0, #1
   141cc:	4b1a      	ldr	r3, [pc, #104]	; (14238 <put_radio_to_sleep+0x7c>)
   141ce:	4798      	blx	r3
   141d0:	0003      	movs	r3, r0
   141d2:	7023      	strb	r3, [r4, #0]
	current_mode = op_mode & 0x07;
   141d4:	1d7b      	adds	r3, r7, #5
   141d6:	1dba      	adds	r2, r7, #6
   141d8:	7812      	ldrb	r2, [r2, #0]
   141da:	2107      	movs	r1, #7
   141dc:	400a      	ands	r2, r1
   141de:	701a      	strb	r2, [r3, #0]
	
	if (new_mode != current_mode)
   141e0:	1dfa      	adds	r2, r7, #7
   141e2:	1d7b      	adds	r3, r7, #5
   141e4:	7812      	ldrb	r2, [r2, #0]
   141e6:	781b      	ldrb	r3, [r3, #0]
   141e8:	429a      	cmp	r2, r3
   141ea:	d01c      	beq.n	14226 <put_radio_to_sleep+0x6a>
	{
		// Do the actual mode switch.
		op_mode &= ~0x07;                // Clear old mode bits
   141ec:	1dbb      	adds	r3, r7, #6
   141ee:	1dba      	adds	r2, r7, #6
   141f0:	7812      	ldrb	r2, [r2, #0]
   141f2:	2107      	movs	r1, #7
   141f4:	438a      	bics	r2, r1
   141f6:	701a      	strb	r2, [r3, #0]
		op_mode |= new_mode;             // Set new mode bits
   141f8:	1dbb      	adds	r3, r7, #6
   141fa:	1db9      	adds	r1, r7, #6
   141fc:	1dfa      	adds	r2, r7, #7
   141fe:	7809      	ldrb	r1, [r1, #0]
   14200:	7812      	ldrb	r2, [r2, #0]
   14202:	430a      	orrs	r2, r1
   14204:	701a      	strb	r2, [r3, #0]
		while (op_mode != RADIO_RegisterRead(0x01))
   14206:	e005      	b.n	14214 <put_radio_to_sleep+0x58>
		{
			RADIO_RegisterWrite(0x01, op_mode);
   14208:	1dbb      	adds	r3, r7, #6
   1420a:	781b      	ldrb	r3, [r3, #0]
   1420c:	0019      	movs	r1, r3
   1420e:	2001      	movs	r0, #1
   14210:	4b0a      	ldr	r3, [pc, #40]	; (1423c <put_radio_to_sleep+0x80>)
   14212:	4798      	blx	r3
		while (op_mode != RADIO_RegisterRead(0x01))
   14214:	2001      	movs	r0, #1
   14216:	4b08      	ldr	r3, [pc, #32]	; (14238 <put_radio_to_sleep+0x7c>)
   14218:	4798      	blx	r3
   1421a:	0003      	movs	r3, r0
   1421c:	001a      	movs	r2, r3
   1421e:	1dbb      	adds	r3, r7, #6
   14220:	781b      	ldrb	r3, [r3, #0]
   14222:	4293      	cmp	r3, r2
   14224:	d1f0      	bne.n	14208 <put_radio_to_sleep+0x4c>
		}
	}
	
	/* Power off the oscillator after putting radio to sleep */
	HAL_TCXOPowerOff();
   14226:	4b06      	ldr	r3, [pc, #24]	; (14240 <put_radio_to_sleep+0x84>)
   14228:	4798      	blx	r3
	
	/* Disable the SPI interface */
	HAL_RadioDeInit();
   1422a:	4b06      	ldr	r3, [pc, #24]	; (14244 <put_radio_to_sleep+0x88>)
   1422c:	4798      	blx	r3
}
   1422e:	46c0      	nop			; (mov r8, r8)
   14230:	46bd      	mov	sp, r7
   14232:	b003      	add	sp, #12
   14234:	bd90      	pop	{r4, r7, pc}
   14236:	46c0      	nop			; (mov r8, r8)
   14238:	00006fcd 	.word	0x00006fcd
   1423c:	00006f81 	.word	0x00006f81
   14240:	00007465 	.word	0x00007465
   14244:	00006f65 	.word	0x00006f65

00014248 <Sleep>:

void Sleep(void)
{
   14248:	b580      	push	{r7, lr}
   1424a:	af00      	add	r7, sp, #0
	if(chkecho) printf("Goto Sleep Mode!\n\r");
   1424c:	4b23      	ldr	r3, [pc, #140]	; (142dc <Sleep+0x94>)
   1424e:	781b      	ldrb	r3, [r3, #0]
   14250:	2b00      	cmp	r3, #0
   14252:	d003      	beq.n	1425c <Sleep+0x14>
   14254:	4b22      	ldr	r3, [pc, #136]	; (142e0 <Sleep+0x98>)
   14256:	0018      	movs	r0, r3
   14258:	4b22      	ldr	r3, [pc, #136]	; (142e4 <Sleep+0x9c>)
   1425a:	4798      	blx	r3
	
//-----------	25uA / 1.8V	
	put_radio_to_sleep();
   1425c:	4b22      	ldr	r3, [pc, #136]	; (142e8 <Sleep+0xa0>)
   1425e:	4798      	blx	r3

	sio2host_disable();
   14260:	4b22      	ldr	r3, [pc, #136]	; (142ec <Sleep+0xa4>)
   14262:	4798      	blx	r3
	sio2host_disable2();
   14264:	4b22      	ldr	r3, [pc, #136]	; (142f0 <Sleep+0xa8>)
   14266:	4798      	blx	r3
	
	port_pin_set_output_level(RF_SWITCH_PIN, RF_SWITCH_INACTIVE);
   14268:	2100      	movs	r1, #0
   1426a:	200d      	movs	r0, #13
   1426c:	4b21      	ldr	r3, [pc, #132]	; (142f4 <Sleep+0xac>)
   1426e:	4798      	blx	r3
	
	port_pin_set_output_level(PIN_PA04, false);
   14270:	2100      	movs	r1, #0
   14272:	2004      	movs	r0, #4
   14274:	4b1f      	ldr	r3, [pc, #124]	; (142f4 <Sleep+0xac>)
   14276:	4798      	blx	r3
	port_pin_set_output_level(PIN_PA05, false);
   14278:	2100      	movs	r1, #0
   1427a:	2005      	movs	r0, #5
   1427c:	4b1d      	ldr	r3, [pc, #116]	; (142f4 <Sleep+0xac>)
   1427e:	4798      	blx	r3
	port_pin_set_output_level(PIN_PA28, false);
   14280:	2100      	movs	r1, #0
   14282:	201c      	movs	r0, #28
   14284:	4b1b      	ldr	r3, [pc, #108]	; (142f4 <Sleep+0xac>)
   14286:	4798      	blx	r3
	port_pin_set_output_level(PIN_PA09, false);
   14288:	2100      	movs	r1, #0
   1428a:	2009      	movs	r0, #9
   1428c:	4b19      	ldr	r3, [pc, #100]	; (142f4 <Sleep+0xac>)
   1428e:	4798      	blx	r3
	port_pin_set_output_level(PIN_PA13, false);	
   14290:	2100      	movs	r1, #0
   14292:	200d      	movs	r0, #13
   14294:	4b17      	ldr	r3, [pc, #92]	; (142f4 <Sleep+0xac>)
   14296:	4798      	blx	r3
	port_pin_set_output_level(PIN_PA08, false);
   14298:	2100      	movs	r1, #0
   1429a:	2008      	movs	r0, #8
   1429c:	4b15      	ldr	r3, [pc, #84]	; (142f4 <Sleep+0xac>)
   1429e:	4798      	blx	r3
	port_pin_set_output_level(PIN_PA06, false);		
   142a0:	2100      	movs	r1, #0
   142a2:	2006      	movs	r0, #6
   142a4:	4b13      	ldr	r3, [pc, #76]	; (142f4 <Sleep+0xac>)
   142a6:	4798      	blx	r3
	port_pin_set_output_level(LED_0_PIN, LED_0_INACTIVE);
   142a8:	2101      	movs	r1, #1
   142aa:	2013      	movs	r0, #19
   142ac:	4b11      	ldr	r3, [pc, #68]	; (142f4 <Sleep+0xac>)
   142ae:	4798      	blx	r3
	port_pin_set_output_level(LED_1_PIN, LED_1_INACTIVE);	
   142b0:	2101      	movs	r1, #1
   142b2:	2012      	movs	r0, #18
   142b4:	4b0f      	ldr	r3, [pc, #60]	; (142f4 <Sleep+0xac>)
   142b6:	4798      	blx	r3
	system_gclk_chan_disable(SERCOM0_GCLK_ID_CORE);
   142b8:	2012      	movs	r0, #18
   142ba:	4b0f      	ldr	r3, [pc, #60]	; (142f8 <Sleep+0xb0>)
   142bc:	4798      	blx	r3
	system_clock_source_disable(SYSTEM_CLOCK_SOURCE_XOSC32K);
   142be:	2005      	movs	r0, #5
   142c0:	4b0e      	ldr	r3, [pc, #56]	; (142fc <Sleep+0xb4>)
   142c2:	4798      	blx	r3

	system_set_sleepmode(SYSTEM_SLEEPMODE_BACKUP);
   142c4:	2005      	movs	r0, #5
   142c6:	4b0e      	ldr	r3, [pc, #56]	; (14300 <Sleep+0xb8>)
   142c8:	4798      	blx	r3
			
	system_sleep();
   142ca:	4b0e      	ldr	r3, [pc, #56]	; (14304 <Sleep+0xbc>)
   142cc:	4798      	blx	r3
	
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_XOSC32K);
   142ce:	2005      	movs	r0, #5
   142d0:	4b0d      	ldr	r3, [pc, #52]	; (14308 <Sleep+0xc0>)
   142d2:	4798      	blx	r3
}
   142d4:	46c0      	nop			; (mov r8, r8)
   142d6:	46bd      	mov	sp, r7
   142d8:	bd80      	pop	{r7, pc}
   142da:	46c0      	nop			; (mov r8, r8)
   142dc:	2000002c 	.word	0x2000002c
   142e0:	0001df48 	.word	0x0001df48
   142e4:	0001782d 	.word	0x0001782d
   142e8:	000141bd 	.word	0x000141bd
   142ec:	00006b29 	.word	0x00006b29
   142f0:	00006b45 	.word	0x00006b45
   142f4:	00014079 	.word	0x00014079
   142f8:	00005761 	.word	0x00005761
   142fc:	00004f61 	.word	0x00004f61
   14300:	00014001 	.word	0x00014001
   14304:	00014031 	.word	0x00014031
   14308:	00004ea1 	.word	0x00004ea1

0001430c <driver_init>:


/* Initializes all the hardware and software modules used for Stack operation */
static void driver_init(void)
{
   1430c:	b580      	push	{r7, lr}
   1430e:	af00      	add	r7, sp, #0
    /* Initialize the Radio Hardware */
    HAL_RadioInit();
   14310:	4b05      	ldr	r3, [pc, #20]	; (14328 <driver_init+0x1c>)
   14312:	4798      	blx	r3
    /* Initialize the AES Hardware Engine */
    AESInit();
   14314:	4b05      	ldr	r3, [pc, #20]	; (1432c <driver_init+0x20>)
   14316:	4798      	blx	r3
    /* Initialize the Software Timer Module */
    SystemTimerInit();
   14318:	4b05      	ldr	r3, [pc, #20]	; (14330 <driver_init+0x24>)
   1431a:	4798      	blx	r3
    /* Initialize the Sleep Timer Module */
    SleepTimerInit();
#endif
#if (ENABLE_PDS == 1)
    /* PDS Module Init */
    PDS_Init();
   1431c:	4b05      	ldr	r3, [pc, #20]	; (14334 <driver_init+0x28>)
   1431e:	4798      	blx	r3
#endif
}
   14320:	46c0      	nop			; (mov r8, r8)
   14322:	46bd      	mov	sp, r7
   14324:	bd80      	pop	{r7, pc}
   14326:	46c0      	nop			; (mov r8, r8)
   14328:	00006f49 	.word	0x00006f49
   1432c:	000074cd 	.word	0x000074cd
   14330:	00008231 	.word	0x00008231
   14334:	00007999 	.word	0x00007999

00014338 <config_init>:

static void config_init(void)
{
   14338:	b580      	push	{r7, lr}
   1433a:	af00      	add	r7, sp, #0
	SX1276_Reset();
   1433c:	4b61      	ldr	r3, [pc, #388]	; (144c4 <config_init+0x18c>)
   1433e:	4798      	blx	r3
	SX1276_Config();
   14340:	4b61      	ldr	r3, [pc, #388]	; (144c8 <config_init+0x190>)
   14342:	4798      	blx	r3
	SX1276_RX_INIT();
   14344:	4b61      	ldr	r3, [pc, #388]	; (144cc <config_init+0x194>)
   14346:	4798      	blx	r3
	
	//Read Netinfo
	NVM_Read_NetInfo(&networkInfo);
   14348:	4b61      	ldr	r3, [pc, #388]	; (144d0 <config_init+0x198>)
   1434a:	0018      	movs	r0, r3
   1434c:	4b61      	ldr	r3, [pc, #388]	; (144d4 <config_init+0x19c>)
   1434e:	4798      	blx	r3
		
	if((networkInfo.CH > 0)&&(networkInfo.CH < 33)){
   14350:	4b5f      	ldr	r3, [pc, #380]	; (144d0 <config_init+0x198>)
   14352:	791b      	ldrb	r3, [r3, #4]
   14354:	2b00      	cmp	r3, #0
   14356:	d008      	beq.n	1436a <config_init+0x32>
   14358:	4b5d      	ldr	r3, [pc, #372]	; (144d0 <config_init+0x198>)
   1435a:	791b      	ldrb	r3, [r3, #4]
   1435c:	2b20      	cmp	r3, #32
   1435e:	d804      	bhi.n	1436a <config_init+0x32>
		currentChannel = networkInfo.CH;
   14360:	4b5b      	ldr	r3, [pc, #364]	; (144d0 <config_init+0x198>)
   14362:	791a      	ldrb	r2, [r3, #4]
   14364:	4b5c      	ldr	r3, [pc, #368]	; (144d8 <config_init+0x1a0>)
   14366:	701a      	strb	r2, [r3, #0]
   14368:	e00a      	b.n	14380 <config_init+0x48>
	}else{
		currentChannel = networkInfo.CH = 20;
   1436a:	4b59      	ldr	r3, [pc, #356]	; (144d0 <config_init+0x198>)
   1436c:	2214      	movs	r2, #20
   1436e:	711a      	strb	r2, [r3, #4]
   14370:	4b57      	ldr	r3, [pc, #348]	; (144d0 <config_init+0x198>)
   14372:	791a      	ldrb	r2, [r3, #4]
   14374:	4b58      	ldr	r3, [pc, #352]	; (144d8 <config_init+0x1a0>)
   14376:	701a      	strb	r2, [r3, #0]
		
		NVM_Write_NetInfo(&networkInfo);			//ihkim
   14378:	4b55      	ldr	r3, [pc, #340]	; (144d0 <config_init+0x198>)
   1437a:	0018      	movs	r0, r3
   1437c:	4b57      	ldr	r3, [pc, #348]	; (144dc <config_init+0x1a4>)
   1437e:	4798      	blx	r3
		//		NVM_Write_ConTable(ConnectionTable);
	}
	
	RF_CHANNEL=networkInfo.CH;
   14380:	4b53      	ldr	r3, [pc, #332]	; (144d0 <config_init+0x198>)
   14382:	791a      	ldrb	r2, [r3, #4]
   14384:	4b56      	ldr	r3, [pc, #344]	; (144e0 <config_init+0x1a8>)
   14386:	701a      	strb	r2, [r3, #0]
	//}else{	
		//ChannelMAP = networkInfo.OCH;	
	//}

	//Default Value
	if (networkInfo.BW ==0 || networkInfo.BW==0xff) networkInfo.BW = 7;
   14388:	4b51      	ldr	r3, [pc, #324]	; (144d0 <config_init+0x198>)
   1438a:	7e1b      	ldrb	r3, [r3, #24]
   1438c:	2b00      	cmp	r3, #0
   1438e:	d003      	beq.n	14398 <config_init+0x60>
   14390:	4b4f      	ldr	r3, [pc, #316]	; (144d0 <config_init+0x198>)
   14392:	7e1b      	ldrb	r3, [r3, #24]
   14394:	2bff      	cmp	r3, #255	; 0xff
   14396:	d102      	bne.n	1439e <config_init+0x66>
   14398:	4b4d      	ldr	r3, [pc, #308]	; (144d0 <config_init+0x198>)
   1439a:	2207      	movs	r2, #7
   1439c:	761a      	strb	r2, [r3, #24]
	RF_BW = networkInfo.BW;	
   1439e:	4b4c      	ldr	r3, [pc, #304]	; (144d0 <config_init+0x198>)
   143a0:	7e1a      	ldrb	r2, [r3, #24]
   143a2:	4b50      	ldr	r3, [pc, #320]	; (144e4 <config_init+0x1ac>)
   143a4:	701a      	strb	r2, [r3, #0]
	
	if (networkInfo.SF ==0 || networkInfo.SF==0xff) networkInfo.SF = 7;
   143a6:	4b4a      	ldr	r3, [pc, #296]	; (144d0 <config_init+0x198>)
   143a8:	7ddb      	ldrb	r3, [r3, #23]
   143aa:	2b00      	cmp	r3, #0
   143ac:	d003      	beq.n	143b6 <config_init+0x7e>
   143ae:	4b48      	ldr	r3, [pc, #288]	; (144d0 <config_init+0x198>)
   143b0:	7ddb      	ldrb	r3, [r3, #23]
   143b2:	2bff      	cmp	r3, #255	; 0xff
   143b4:	d102      	bne.n	143bc <config_init+0x84>
   143b6:	4b46      	ldr	r3, [pc, #280]	; (144d0 <config_init+0x198>)
   143b8:	2207      	movs	r2, #7
   143ba:	75da      	strb	r2, [r3, #23]
	SF_DR = networkInfo.SF;	
   143bc:	4b44      	ldr	r3, [pc, #272]	; (144d0 <config_init+0x198>)
   143be:	7dda      	ldrb	r2, [r3, #23]
   143c0:	4b49      	ldr	r3, [pc, #292]	; (144e8 <config_init+0x1b0>)
   143c2:	701a      	strb	r2, [r3, #0]
	
	if (networkInfo.POWER ==0 || networkInfo.POWER==0xff)	networkInfo.POWER = 16;
   143c4:	4b42      	ldr	r3, [pc, #264]	; (144d0 <config_init+0x198>)
   143c6:	7e5b      	ldrb	r3, [r3, #25]
   143c8:	2b00      	cmp	r3, #0
   143ca:	d003      	beq.n	143d4 <config_init+0x9c>
   143cc:	4b40      	ldr	r3, [pc, #256]	; (144d0 <config_init+0x198>)
   143ce:	7e5b      	ldrb	r3, [r3, #25]
   143d0:	2bff      	cmp	r3, #255	; 0xff
   143d2:	d102      	bne.n	143da <config_init+0xa2>
   143d4:	4b3e      	ldr	r3, [pc, #248]	; (144d0 <config_init+0x198>)
   143d6:	2210      	movs	r2, #16
   143d8:	765a      	strb	r2, [r3, #25]
	RF_OUTPUT = networkInfo.POWER;
   143da:	4b3d      	ldr	r3, [pc, #244]	; (144d0 <config_init+0x198>)
   143dc:	7e5a      	ldrb	r2, [r3, #25]
   143de:	4b43      	ldr	r3, [pc, #268]	; (144ec <config_init+0x1b4>)
   143e0:	701a      	strb	r2, [r3, #0]
		
	//if(networkInfo.echo_chk >0) networkInfo.echo_chk = 1;
	//chkecho = networkInfo.echo_chk;
	
	myPANID = networkInfo.PANID;	
   143e2:	4b43      	ldr	r3, [pc, #268]	; (144f0 <config_init+0x1b8>)
   143e4:	4a3a      	ldr	r2, [pc, #232]	; (144d0 <config_init+0x198>)
   143e6:	8852      	ldrh	r2, [r2, #2]
   143e8:	801a      	strh	r2, [r3, #0]
	
	if(networkInfo.PANID.Val == 0xffff){
   143ea:	4b39      	ldr	r3, [pc, #228]	; (144d0 <config_init+0x198>)
   143ec:	885b      	ldrh	r3, [r3, #2]
   143ee:	4a41      	ldr	r2, [pc, #260]	; (144f4 <config_init+0x1bc>)
   143f0:	4293      	cmp	r3, r2
   143f2:	d107      	bne.n	14404 <config_init+0xcc>
		myPANID.Val = networkInfo.PANID.Val = 0xabcd;
   143f4:	4b36      	ldr	r3, [pc, #216]	; (144d0 <config_init+0x198>)
   143f6:	4a40      	ldr	r2, [pc, #256]	; (144f8 <config_init+0x1c0>)
   143f8:	805a      	strh	r2, [r3, #2]
   143fa:	4b35      	ldr	r3, [pc, #212]	; (144d0 <config_init+0x198>)
   143fc:	885a      	ldrh	r2, [r3, #2]
   143fe:	4b3c      	ldr	r3, [pc, #240]	; (144f0 <config_init+0x1b8>)
   14400:	801a      	strh	r2, [r3, #0]
   14402:	e003      	b.n	1440c <config_init+0xd4>
	}else{
		myPANID.Val = networkInfo.PANID.Val;
   14404:	4b32      	ldr	r3, [pc, #200]	; (144d0 <config_init+0x198>)
   14406:	885a      	ldrh	r2, [r3, #2]
   14408:	4b39      	ldr	r3, [pc, #228]	; (144f0 <config_init+0x1b8>)
   1440a:	801a      	strh	r2, [r3, #0]
	}	
	
	MY_PAN_ID=networkInfo.PANID.Val;
   1440c:	4b30      	ldr	r3, [pc, #192]	; (144d0 <config_init+0x198>)
   1440e:	885b      	ldrh	r3, [r3, #2]
   14410:	001a      	movs	r2, r3
   14412:	4b3a      	ldr	r3, [pc, #232]	; (144fc <config_init+0x1c4>)
   14414:	601a      	str	r2, [r3, #0]
	myPANID.Val=networkInfo.PANID.Val;
   14416:	4b2e      	ldr	r3, [pc, #184]	; (144d0 <config_init+0x198>)
   14418:	885a      	ldrh	r2, [r3, #2]
   1441a:	4b35      	ldr	r3, [pc, #212]	; (144f0 <config_init+0x1b8>)
   1441c:	801a      	strh	r2, [r3, #0]
	
	myShortAddress.Val = networkInfo.SADDR.Val;
   1441e:	4b2c      	ldr	r3, [pc, #176]	; (144d0 <config_init+0x198>)
   14420:	899a      	ldrh	r2, [r3, #12]
   14422:	4b37      	ldr	r3, [pc, #220]	; (14500 <config_init+0x1c8>)
   14424:	801a      	strh	r2, [r3, #0]
	myParent = networkInfo.myParent;
   14426:	4b2a      	ldr	r3, [pc, #168]	; (144d0 <config_init+0x198>)
   14428:	7d9a      	ldrb	r2, [r3, #22]
   1442a:	4b36      	ldr	r3, [pc, #216]	; (14504 <config_init+0x1cc>)
   1442c:	701a      	strb	r2, [r3, #0]
	
	if(chkecho) printf("networkInfo.echo_chk : %d \n\r",networkInfo.echo_chk);
   1442e:	4b36      	ldr	r3, [pc, #216]	; (14508 <config_init+0x1d0>)
   14430:	781b      	ldrb	r3, [r3, #0]
   14432:	2b00      	cmp	r3, #0
   14434:	d008      	beq.n	14448 <config_init+0x110>
   14436:	4b26      	ldr	r3, [pc, #152]	; (144d0 <config_init+0x198>)
   14438:	2226      	movs	r2, #38	; 0x26
   1443a:	5c9b      	ldrb	r3, [r3, r2]
   1443c:	001a      	movs	r2, r3
   1443e:	4b33      	ldr	r3, [pc, #204]	; (1450c <config_init+0x1d4>)
   14440:	0011      	movs	r1, r2
   14442:	0018      	movs	r0, r3
   14444:	4b32      	ldr	r3, [pc, #200]	; (14510 <config_init+0x1d8>)
   14446:	4798      	blx	r3
	if(chkecho) printf("chkecho : %d \n\r",chkecho);
   14448:	4b2f      	ldr	r3, [pc, #188]	; (14508 <config_init+0x1d0>)
   1444a:	781b      	ldrb	r3, [r3, #0]
   1444c:	2b00      	cmp	r3, #0
   1444e:	d007      	beq.n	14460 <config_init+0x128>
   14450:	4b2d      	ldr	r3, [pc, #180]	; (14508 <config_init+0x1d0>)
   14452:	781b      	ldrb	r3, [r3, #0]
   14454:	001a      	movs	r2, r3
   14456:	4b2f      	ldr	r3, [pc, #188]	; (14514 <config_init+0x1dc>)
   14458:	0011      	movs	r1, r2
   1445a:	0018      	movs	r0, r3
   1445c:	4b2c      	ldr	r3, [pc, #176]	; (14510 <config_init+0x1d8>)
   1445e:	4798      	blx	r3
	
	if(networkInfo.Status == 0xff){
   14460:	4b1b      	ldr	r3, [pc, #108]	; (144d0 <config_init+0x198>)
   14462:	781b      	ldrb	r3, [r3, #0]
   14464:	2bff      	cmp	r3, #255	; 0xff
   14466:	d106      	bne.n	14476 <config_init+0x13e>
		networkInfo.Status = 0;
   14468:	4b19      	ldr	r3, [pc, #100]	; (144d0 <config_init+0x198>)
   1446a:	2200      	movs	r2, #0
   1446c:	701a      	strb	r2, [r3, #0]
		wait_nvm_Check = false;
   1446e:	4b2a      	ldr	r3, [pc, #168]	; (14518 <config_init+0x1e0>)
   14470:	2200      	movs	r2, #0
   14472:	701a      	strb	r2, [r3, #0]
   14474:	e002      	b.n	1447c <config_init+0x144>
	}else{
		wait_nvm_Check = true;		
   14476:	4b28      	ldr	r3, [pc, #160]	; (14518 <config_init+0x1e0>)
   14478:	2201      	movs	r2, #1
   1447a:	701a      	strb	r2, [r3, #0]
	}
	if(chkecho) printf("networkInfo.Status : %d \n\r",networkInfo.Status);
   1447c:	4b22      	ldr	r3, [pc, #136]	; (14508 <config_init+0x1d0>)
   1447e:	781b      	ldrb	r3, [r3, #0]
   14480:	2b00      	cmp	r3, #0
   14482:	d007      	beq.n	14494 <config_init+0x15c>
   14484:	4b12      	ldr	r3, [pc, #72]	; (144d0 <config_init+0x198>)
   14486:	781b      	ldrb	r3, [r3, #0]
   14488:	001a      	movs	r2, r3
   1448a:	4b24      	ldr	r3, [pc, #144]	; (1451c <config_init+0x1e4>)
   1448c:	0011      	movs	r1, r2
   1448e:	0018      	movs	r0, r3
   14490:	4b1f      	ldr	r3, [pc, #124]	; (14510 <config_init+0x1d8>)
   14492:	4798      	blx	r3
	
	// Channel [20 ~ 32 ( 920.9MHz ~ 923.3MHz )]
	//MiApp_SetChannel(RF_CHANNEL);
	MiApp_SetChannel(networkInfo.CH);
   14494:	4b0e      	ldr	r3, [pc, #56]	; (144d0 <config_init+0x198>)
   14496:	791b      	ldrb	r3, [r3, #4]
   14498:	0018      	movs	r0, r3
   1449a:	4b21      	ldr	r3, [pc, #132]	; (14520 <config_init+0x1e8>)
   1449c:	4798      	blx	r3
	
	// SignalBw [0:  7.8kHz, 1: 10.4kHz, 2: 15.6kHz, 3: 20.8kHz, 4: 31.25kHz,
	//			 5: 41.7kHz, 6: 62.5kHz, 7: 125kHz,  8: 250kHz,  9: 500kHz, other: Reserved]
	//SX1276LoRaSetSignalBandwidth(7);
	SX1276LoRaSetSignalBandwidth(networkInfo.BW);
   1449e:	4b0c      	ldr	r3, [pc, #48]	; (144d0 <config_init+0x198>)
   144a0:	7e1b      	ldrb	r3, [r3, #24]
   144a2:	0018      	movs	r0, r3
   144a4:	4b1f      	ldr	r3, [pc, #124]	; (14524 <config_init+0x1ec>)
   144a6:	4798      	blx	r3
	
	// SpreadingFactor [6: 64, 7: 128, 8: 256, 9: 512, 10: 1024, 11: 2048, 12: 4096  chips]
	//SX1276LoRaSetSpreadingFactor(7);
	SX1276LoRaSetSpreadingFactor(networkInfo.SF);
   144a8:	4b09      	ldr	r3, [pc, #36]	; (144d0 <config_init+0x198>)
   144aa:	7ddb      	ldrb	r3, [r3, #23]
   144ac:	0018      	movs	r0, r3
   144ae:	4b1e      	ldr	r3, [pc, #120]	; (14528 <config_init+0x1f0>)
   144b0:	4798      	blx	r3
//	SX1276LoRaSetSpreadingFactor(SF_DR);
	
	// RF Output Power [20, 17 ~ 02 dBm]
	//SX1276LoRaSetRFPower(12);
	SX1276LoRaSetRFPower(networkInfo.POWER);
   144b2:	4b07      	ldr	r3, [pc, #28]	; (144d0 <config_init+0x198>)
   144b4:	7e5b      	ldrb	r3, [r3, #25]
   144b6:	0018      	movs	r0, r3
   144b8:	4b1c      	ldr	r3, [pc, #112]	; (1452c <config_init+0x1f4>)
   144ba:	4798      	blx	r3
//	SX1276LoRaSetRFPower(RF_OUTPUT);
}
   144bc:	46c0      	nop			; (mov r8, r8)
   144be:	46bd      	mov	sp, r7
   144c0:	bd80      	pop	{r7, pc}
   144c2:	46c0      	nop			; (mov r8, r8)
   144c4:	0000edd5 	.word	0x0000edd5
   144c8:	0000f081 	.word	0x0000f081
   144cc:	0000f90d 	.word	0x0000f90d
   144d0:	2000151c 	.word	0x2000151c
   144d4:	0000e979 	.word	0x0000e979
   144d8:	200014b5 	.word	0x200014b5
   144dc:	0000e8a1 	.word	0x0000e8a1
   144e0:	2000002f 	.word	0x2000002f
   144e4:	20000031 	.word	0x20000031
   144e8:	20000030 	.word	0x20000030
   144ec:	2000002e 	.word	0x2000002e
   144f0:	20001290 	.word	0x20001290
   144f4:	0000ffff 	.word	0x0000ffff
   144f8:	ffffabcd 	.word	0xffffabcd
   144fc:	20000d54 	.word	0x20000d54
   14500:	20001140 	.word	0x20001140
   14504:	200014b4 	.word	0x200014b4
   14508:	2000002c 	.word	0x2000002c
   1450c:	0001df5c 	.word	0x0001df5c
   14510:	0001782d 	.word	0x0001782d
   14514:	0001df7c 	.word	0x0001df7c
   14518:	20001c22 	.word	0x20001c22
   1451c:	0001df8c 	.word	0x0001df8c
   14520:	0000d159 	.word	0x0000d159
   14524:	0000eee9 	.word	0x0000eee9
   14528:	0000ee55 	.word	0x0000ee55
   1452c:	0000ef45 	.word	0x0000ef45

00014530 <start_nvm>:
/**
 End of File
 */

void start_nvm(void)
{
   14530:	b580      	push	{r7, lr}
   14532:	af00      	add	r7, sp, #0
	int i;
	uint8_t* ptr;	
	
	delay_ms(1000);
   14534:	23fa      	movs	r3, #250	; 0xfa
   14536:	009b      	lsls	r3, r3, #2
   14538:	0018      	movs	r0, r3
   1453a:	4b39      	ldr	r3, [pc, #228]	; (14620 <start_nvm+0xf0>)
   1453c:	4798      	blx	r3
	if(wait_nvm_Check){
   1453e:	4b39      	ldr	r3, [pc, #228]	; (14624 <start_nvm+0xf4>)
   14540:	781b      	ldrb	r3, [r3, #0]
   14542:	2b00      	cmp	r3, #0
   14544:	d048      	beq.n	145d8 <start_nvm+0xa8>
		if(chkecho) printf("\n\rwait_nvm_Check = true\r\n");
   14546:	4b38      	ldr	r3, [pc, #224]	; (14628 <start_nvm+0xf8>)
   14548:	781b      	ldrb	r3, [r3, #0]
   1454a:	2b00      	cmp	r3, #0
   1454c:	d003      	beq.n	14556 <start_nvm+0x26>
   1454e:	4b37      	ldr	r3, [pc, #220]	; (1462c <start_nvm+0xfc>)
   14550:	0018      	movs	r0, r3
   14552:	4b37      	ldr	r3, [pc, #220]	; (14630 <start_nvm+0x100>)
   14554:	4798      	blx	r3
		if(!networkInfo.SADDR.Val){
   14556:	4b37      	ldr	r3, [pc, #220]	; (14634 <start_nvm+0x104>)
   14558:	899b      	ldrh	r3, [r3, #12]
   1455a:	2b00      	cmp	r3, #0
   1455c:	d121      	bne.n	145a2 <start_nvm+0x72>
		// Start NVM Data  - Coordinator = "N"		
			MiApp_ConnectionMode(ENABLE_ALL_CONN);
   1455e:	2000      	movs	r0, #0
   14560:	4b35      	ldr	r3, [pc, #212]	; (14638 <start_nvm+0x108>)
   14562:	4798      	blx	r3
			if(MiApp_StartConnection(START_FROM_NVM, 0, 0)){
   14564:	2200      	movs	r2, #0
   14566:	2100      	movs	r1, #0
   14568:	2003      	movs	r0, #3
   1456a:	4b34      	ldr	r3, [pc, #208]	; (1463c <start_nvm+0x10c>)
   1456c:	4798      	blx	r3
   1456e:	1e03      	subs	r3, r0, #0
   14570:	d00e      	beq.n	14590 <start_nvm+0x60>
				if(chkecho) printf("Network Created....\n\r");
   14572:	4b2d      	ldr	r3, [pc, #180]	; (14628 <start_nvm+0xf8>)
   14574:	781b      	ldrb	r3, [r3, #0]
   14576:	2b00      	cmp	r3, #0
   14578:	d003      	beq.n	14582 <start_nvm+0x52>
   1457a:	4b31      	ldr	r3, [pc, #196]	; (14640 <start_nvm+0x110>)
   1457c:	0018      	movs	r0, r3
   1457e:	4b31      	ldr	r3, [pc, #196]	; (14644 <start_nvm+0x114>)
   14580:	4798      	blx	r3
				MiApp_ConnectionMode(DISABLE_ALL_CONN);
   14582:	2003      	movs	r0, #3
   14584:	4b2c      	ldr	r3, [pc, #176]	; (14638 <start_nvm+0x108>)
   14586:	4798      	blx	r3
				DumpConnection(0xff);
   14588:	20ff      	movs	r0, #255	; 0xff
   1458a:	4b2f      	ldr	r3, [pc, #188]	; (14648 <start_nvm+0x118>)
   1458c:	4798      	blx	r3
   1458e:	e042      	b.n	14616 <start_nvm+0xe6>
			}else{
				if(chkecho) printf("Network Start Fail....\n\r");
   14590:	4b25      	ldr	r3, [pc, #148]	; (14628 <start_nvm+0xf8>)
   14592:	781b      	ldrb	r3, [r3, #0]
   14594:	2b00      	cmp	r3, #0
   14596:	d03e      	beq.n	14616 <start_nvm+0xe6>
   14598:	4b2c      	ldr	r3, [pc, #176]	; (1464c <start_nvm+0x11c>)
   1459a:	0018      	movs	r0, r3
   1459c:	4b29      	ldr	r3, [pc, #164]	; (14644 <start_nvm+0x114>)
   1459e:	4798      	blx	r3
   145a0:	e039      	b.n	14616 <start_nvm+0xe6>
			}
		}else{
		// Start NVM Data  - End device = "K"
			if( MiApp_EstablishConnection(0, CONN_MODE_NVM) == 0xFF ){
   145a2:	2102      	movs	r1, #2
   145a4:	2000      	movs	r0, #0
   145a6:	4b2a      	ldr	r3, [pc, #168]	; (14650 <start_nvm+0x120>)
   145a8:	4798      	blx	r3
   145aa:	0003      	movs	r3, r0
   145ac:	2bff      	cmp	r3, #255	; 0xff
   145ae:	d108      	bne.n	145c2 <start_nvm+0x92>
				if(chkecho) printf("Join Fail....\n\r");
   145b0:	4b1d      	ldr	r3, [pc, #116]	; (14628 <start_nvm+0xf8>)
   145b2:	781b      	ldrb	r3, [r3, #0]
   145b4:	2b00      	cmp	r3, #0
   145b6:	d02e      	beq.n	14616 <start_nvm+0xe6>
   145b8:	4b26      	ldr	r3, [pc, #152]	; (14654 <start_nvm+0x124>)
   145ba:	0018      	movs	r0, r3
   145bc:	4b21      	ldr	r3, [pc, #132]	; (14644 <start_nvm+0x114>)
   145be:	4798      	blx	r3
   145c0:	e029      	b.n	14616 <start_nvm+0xe6>
			} else {
				if(chkecho) printf("Join Success....4\n\r");
   145c2:	4b19      	ldr	r3, [pc, #100]	; (14628 <start_nvm+0xf8>)
   145c4:	781b      	ldrb	r3, [r3, #0]
   145c6:	2b00      	cmp	r3, #0
   145c8:	d003      	beq.n	145d2 <start_nvm+0xa2>
   145ca:	4b23      	ldr	r3, [pc, #140]	; (14658 <start_nvm+0x128>)
   145cc:	0018      	movs	r0, r3
   145ce:	4b1d      	ldr	r3, [pc, #116]	; (14644 <start_nvm+0x114>)
   145d0:	4798      	blx	r3
				SX1276_RX_INIT();
   145d2:	4b22      	ldr	r3, [pc, #136]	; (1465c <start_nvm+0x12c>)
   145d4:	4798      	blx	r3
   145d6:	e01e      	b.n	14616 <start_nvm+0xe6>
				//DumpConnection(0xff);
			}
		}
	}else{
		NVM_Read_NetInfo(&networkInfo);
   145d8:	4b16      	ldr	r3, [pc, #88]	; (14634 <start_nvm+0x104>)
   145da:	0018      	movs	r0, r3
   145dc:	4b20      	ldr	r3, [pc, #128]	; (14660 <start_nvm+0x130>)
   145de:	4798      	blx	r3
		RF_CHANNEL = currentChannel = networkInfo.CH;
   145e0:	4b14      	ldr	r3, [pc, #80]	; (14634 <start_nvm+0x104>)
   145e2:	791a      	ldrb	r2, [r3, #4]
   145e4:	4b1f      	ldr	r3, [pc, #124]	; (14664 <start_nvm+0x134>)
   145e6:	701a      	strb	r2, [r3, #0]
   145e8:	4b1e      	ldr	r3, [pc, #120]	; (14664 <start_nvm+0x134>)
   145ea:	781a      	ldrb	r2, [r3, #0]
   145ec:	4b1e      	ldr	r3, [pc, #120]	; (14668 <start_nvm+0x138>)
   145ee:	701a      	strb	r2, [r3, #0]
		
		memset(ConnectionTable,0x00,sizeof(ConnectionTable));
   145f0:	2380      	movs	r3, #128	; 0x80
   145f2:	005a      	lsls	r2, r3, #1
   145f4:	4b1d      	ldr	r3, [pc, #116]	; (1466c <start_nvm+0x13c>)
   145f6:	2100      	movs	r1, #0
   145f8:	0018      	movs	r0, r3
   145fa:	4b1d      	ldr	r3, [pc, #116]	; (14670 <start_nvm+0x140>)
   145fc:	4798      	blx	r3
		NVM_Write_ConTable(ConnectionTable);
   145fe:	4b1b      	ldr	r3, [pc, #108]	; (1466c <start_nvm+0x13c>)
   14600:	0018      	movs	r0, r3
   14602:	4b1c      	ldr	r3, [pc, #112]	; (14674 <start_nvm+0x144>)
   14604:	4798      	blx	r3
		
		if(chkecho) printf("\n\rwait_nvm_Check = false\r\n");
   14606:	4b08      	ldr	r3, [pc, #32]	; (14628 <start_nvm+0xf8>)
   14608:	781b      	ldrb	r3, [r3, #0]
   1460a:	2b00      	cmp	r3, #0
   1460c:	d003      	beq.n	14616 <start_nvm+0xe6>
   1460e:	4b1a      	ldr	r3, [pc, #104]	; (14678 <start_nvm+0x148>)
   14610:	0018      	movs	r0, r3
   14612:	4b07      	ldr	r3, [pc, #28]	; (14630 <start_nvm+0x100>)
   14614:	4798      	blx	r3
	}
	SX1276_RX_INIT();
   14616:	4b11      	ldr	r3, [pc, #68]	; (1465c <start_nvm+0x12c>)
   14618:	4798      	blx	r3
}
   1461a:	46c0      	nop			; (mov r8, r8)
   1461c:	46bd      	mov	sp, r7
   1461e:	bd80      	pop	{r7, pc}
   14620:	000001a1 	.word	0x000001a1
   14624:	20001c22 	.word	0x20001c22
   14628:	2000002c 	.word	0x2000002c
   1462c:	0001dfa8 	.word	0x0001dfa8
   14630:	00017905 	.word	0x00017905
   14634:	2000151c 	.word	0x2000151c
   14638:	0000d199 	.word	0x0000d199
   1463c:	0000dc95 	.word	0x0000dc95
   14640:	0001dfc4 	.word	0x0001dfc4
   14644:	0001782d 	.word	0x0001782d
   14648:	0000c625 	.word	0x0000c625
   1464c:	0001dfdc 	.word	0x0001dfdc
   14650:	0000d335 	.word	0x0000d335
   14654:	0001dff8 	.word	0x0001dff8
   14658:	0001e008 	.word	0x0001e008
   1465c:	0000f90d 	.word	0x0000f90d
   14660:	0000e979 	.word	0x0000e979
   14664:	200014b5 	.word	0x200014b5
   14668:	2000002f 	.word	0x2000002f
   1466c:	20001150 	.word	0x20001150
   14670:	00017799 	.word	0x00017799
   14674:	0000e80d 	.word	0x0000e80d
   14678:	0001e01c 	.word	0x0001e01c

0001467c <main>:

unsigned int Toggle_Count, Toggle_Continue, Toggle_End, Toggle_Old;		
		//ihkim - ���� test
// test__0		
int main(void)
{
   1467c:	b5b0      	push	{r4, r5, r7, lr}
   1467e:	b082      	sub	sp, #8
   14680:	af00      	add	r7, sp, #0
	unsigned int Buff_Count;
	
	int i;

    /* System Initialization */	
    system_init();
   14682:	4b61      	ldr	r3, [pc, #388]	; (14808 <main+0x18c>)
   14684:	4798      	blx	r3
    /* Initialize the delay driver */
    delay_init();
   14686:	4b61      	ldr	r3, [pc, #388]	; (1480c <main+0x190>)
   14688:	4798      	blx	r3
    /* Initialize the board target resources */
    board_init();
   1468a:	4b61      	ldr	r3, [pc, #388]	; (14810 <main+0x194>)
   1468c:	4798      	blx	r3
    /* Initialize Hardware and Software Modules */
    driver_init();
   1468e:	4b61      	ldr	r3, [pc, #388]	; (14814 <main+0x198>)
   14690:	4798      	blx	r3
    /* ATECC608 Interface */
	edbg_eui_read_eui64((uint8_t *)&myLongAddress[0]);
   14692:	4b61      	ldr	r3, [pc, #388]	; (14818 <main+0x19c>)
   14694:	0018      	movs	r0, r3
   14696:	4b61      	ldr	r3, [pc, #388]	; (1481c <main+0x1a0>)
   14698:	4798      	blx	r3
	/* Initialize the Serial Interface */
		
	NVM_Init();
   1469a:	4b61      	ldr	r3, [pc, #388]	; (14820 <main+0x1a4>)
   1469c:	4798      	blx	r3

// test__1	
	NVM_Read_NetInfo(&networkInfo);
   1469e:	4b61      	ldr	r3, [pc, #388]	; (14824 <main+0x1a8>)
   146a0:	0018      	movs	r0, r3
   146a2:	4b61      	ldr	r3, [pc, #388]	; (14828 <main+0x1ac>)
   146a4:	4798      	blx	r3
	Test_Borate = networkInfo.Uart_Borate;
   146a6:	4b5f      	ldr	r3, [pc, #380]	; (14824 <main+0x1a8>)
   146a8:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
   146aa:	001c      	movs	r4, r3
   146ac:	2300      	movs	r3, #0
   146ae:	001d      	movs	r5, r3
   146b0:	4b5e      	ldr	r3, [pc, #376]	; (1482c <main+0x1b0>)
   146b2:	601c      	str	r4, [r3, #0]
   146b4:	605d      	str	r5, [r3, #4]
	if(networkInfo.Uart_Borate == 96){
   146b6:	4b5b      	ldr	r3, [pc, #364]	; (14824 <main+0x1a8>)
   146b8:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
   146ba:	2b60      	cmp	r3, #96	; 0x60
   146bc:	d106      	bne.n	146cc <main+0x50>
		Test_Borate = 9600;
   146be:	4a5b      	ldr	r2, [pc, #364]	; (1482c <main+0x1b0>)
   146c0:	2396      	movs	r3, #150	; 0x96
   146c2:	019b      	lsls	r3, r3, #6
   146c4:	2400      	movs	r4, #0
   146c6:	6013      	str	r3, [r2, #0]
   146c8:	6054      	str	r4, [r2, #4]
   146ca:	e033      	b.n	14734 <main+0xb8>
	}else if(Test_Borate == 192){
   146cc:	4b57      	ldr	r3, [pc, #348]	; (1482c <main+0x1b0>)
   146ce:	685c      	ldr	r4, [r3, #4]
   146d0:	681b      	ldr	r3, [r3, #0]
   146d2:	2bc0      	cmp	r3, #192	; 0xc0
   146d4:	d108      	bne.n	146e8 <main+0x6c>
   146d6:	2c00      	cmp	r4, #0
   146d8:	d106      	bne.n	146e8 <main+0x6c>
		Test_Borate = 19200;
   146da:	4a54      	ldr	r2, [pc, #336]	; (1482c <main+0x1b0>)
   146dc:	2396      	movs	r3, #150	; 0x96
   146de:	01db      	lsls	r3, r3, #7
   146e0:	2400      	movs	r4, #0
   146e2:	6013      	str	r3, [r2, #0]
   146e4:	6054      	str	r4, [r2, #4]
   146e6:	e025      	b.n	14734 <main+0xb8>
	}else if(Test_Borate == 384){
   146e8:	4b50      	ldr	r3, [pc, #320]	; (1482c <main+0x1b0>)
   146ea:	685c      	ldr	r4, [r3, #4]
   146ec:	681b      	ldr	r3, [r3, #0]
   146ee:	22c0      	movs	r2, #192	; 0xc0
   146f0:	0052      	lsls	r2, r2, #1
   146f2:	4293      	cmp	r3, r2
   146f4:	d108      	bne.n	14708 <main+0x8c>
   146f6:	2c00      	cmp	r4, #0
   146f8:	d106      	bne.n	14708 <main+0x8c>
		Test_Borate = 38400;
   146fa:	4a4c      	ldr	r2, [pc, #304]	; (1482c <main+0x1b0>)
   146fc:	2396      	movs	r3, #150	; 0x96
   146fe:	021b      	lsls	r3, r3, #8
   14700:	2400      	movs	r4, #0
   14702:	6013      	str	r3, [r2, #0]
   14704:	6054      	str	r4, [r2, #4]
   14706:	e015      	b.n	14734 <main+0xb8>
	}else if(Test_Borate == 1152){
   14708:	4b48      	ldr	r3, [pc, #288]	; (1482c <main+0x1b0>)
   1470a:	685c      	ldr	r4, [r3, #4]
   1470c:	681b      	ldr	r3, [r3, #0]
   1470e:	2290      	movs	r2, #144	; 0x90
   14710:	00d2      	lsls	r2, r2, #3
   14712:	4293      	cmp	r3, r2
   14714:	d108      	bne.n	14728 <main+0xac>
   14716:	2c00      	cmp	r4, #0
   14718:	d106      	bne.n	14728 <main+0xac>
		Test_Borate = 115200;
   1471a:	4a44      	ldr	r2, [pc, #272]	; (1482c <main+0x1b0>)
   1471c:	23e1      	movs	r3, #225	; 0xe1
   1471e:	025b      	lsls	r3, r3, #9
   14720:	2400      	movs	r4, #0
   14722:	6013      	str	r3, [r2, #0]
   14724:	6054      	str	r4, [r2, #4]
   14726:	e005      	b.n	14734 <main+0xb8>
	}else{
		Test_Borate = 115200;
   14728:	4a40      	ldr	r2, [pc, #256]	; (1482c <main+0x1b0>)
   1472a:	23e1      	movs	r3, #225	; 0xe1
   1472c:	025b      	lsls	r3, r3, #9
   1472e:	2400      	movs	r4, #0
   14730:	6013      	str	r3, [r2, #0]
   14732:	6054      	str	r4, [r2, #4]
	}
// test__11, echo on/off	
	// chkecho = networkInfo.echo_chk;
	chkecho = 0;
   14734:	4b3e      	ldr	r3, [pc, #248]	; (14830 <main+0x1b4>)
   14736:	2200      	movs	r2, #0
   14738:	701a      	strb	r2, [r3, #0]

	sio2host_init();					//Terminal Port Setting
   1473a:	4b3e      	ldr	r3, [pc, #248]	; (14834 <main+0x1b8>)
   1473c:	4798      	blx	r3

    print_reset_causes();
   1473e:	4b3e      	ldr	r3, [pc, #248]	; (14838 <main+0x1bc>)
   14740:	4798      	blx	r3
#if (_DEBUG_ == 1)
    SYSTEM_AssertSubscribe(assertHandler);
#endif
	
	printf("%cc",0x1b);  // for clear screen. 2023.12.20. 
   14742:	4b3e      	ldr	r3, [pc, #248]	; (1483c <main+0x1c0>)
   14744:	211b      	movs	r1, #27
   14746:	0018      	movs	r0, r3
   14748:	4b3d      	ldr	r3, [pc, #244]	; (14840 <main+0x1c4>)
   1474a:	4798      	blx	r3
	if(chkecho) printf("whybiz project by uttec. 2023.12.20. 20:00\n\r");
   1474c:	4b38      	ldr	r3, [pc, #224]	; (14830 <main+0x1b4>)
   1474e:	781b      	ldrb	r3, [r3, #0]
   14750:	2b00      	cmp	r3, #0
   14752:	d003      	beq.n	1475c <main+0xe0>
   14754:	4b3b      	ldr	r3, [pc, #236]	; (14844 <main+0x1c8>)
   14756:	0018      	movs	r0, r3
   14758:	4b39      	ldr	r3, [pc, #228]	; (14840 <main+0x1c4>)
   1475a:	4798      	blx	r3
	if(chkecho) printf("MAC Address: 0x");
   1475c:	4b34      	ldr	r3, [pc, #208]	; (14830 <main+0x1b4>)
   1475e:	781b      	ldrb	r3, [r3, #0]
   14760:	2b00      	cmp	r3, #0
   14762:	d003      	beq.n	1476c <main+0xf0>
   14764:	4b38      	ldr	r3, [pc, #224]	; (14848 <main+0x1cc>)
   14766:	0018      	movs	r0, r3
   14768:	4b35      	ldr	r3, [pc, #212]	; (14840 <main+0x1c4>)
   1476a:	4798      	blx	r3
	for(i = 0; i < 8; i++)
   1476c:	2300      	movs	r3, #0
   1476e:	607b      	str	r3, [r7, #4]
   14770:	e011      	b.n	14796 <main+0x11a>
	{
		if(chkecho) printf("%.2x",myLongAddress[8-1-i]);
   14772:	4b2f      	ldr	r3, [pc, #188]	; (14830 <main+0x1b4>)
   14774:	781b      	ldrb	r3, [r3, #0]
   14776:	2b00      	cmp	r3, #0
   14778:	d00a      	beq.n	14790 <main+0x114>
   1477a:	687b      	ldr	r3, [r7, #4]
   1477c:	2207      	movs	r2, #7
   1477e:	1ad3      	subs	r3, r2, r3
   14780:	4a25      	ldr	r2, [pc, #148]	; (14818 <main+0x19c>)
   14782:	5cd3      	ldrb	r3, [r2, r3]
   14784:	001a      	movs	r2, r3
   14786:	4b31      	ldr	r3, [pc, #196]	; (1484c <main+0x1d0>)
   14788:	0011      	movs	r1, r2
   1478a:	0018      	movs	r0, r3
   1478c:	4b2c      	ldr	r3, [pc, #176]	; (14840 <main+0x1c4>)
   1478e:	4798      	blx	r3
	for(i = 0; i < 8; i++)
   14790:	687b      	ldr	r3, [r7, #4]
   14792:	3301      	adds	r3, #1
   14794:	607b      	str	r3, [r7, #4]
   14796:	687b      	ldr	r3, [r7, #4]
   14798:	2b07      	cmp	r3, #7
   1479a:	ddea      	ble.n	14772 <main+0xf6>
	}
	if(chkecho) printf("\n\r");
   1479c:	4b24      	ldr	r3, [pc, #144]	; (14830 <main+0x1b4>)
   1479e:	781b      	ldrb	r3, [r3, #0]
   147a0:	2b00      	cmp	r3, #0
   147a2:	d003      	beq.n	147ac <main+0x130>
   147a4:	4b2a      	ldr	r3, [pc, #168]	; (14850 <main+0x1d4>)
   147a6:	0018      	movs	r0, r3
   147a8:	4b25      	ldr	r3, [pc, #148]	; (14840 <main+0x1c4>)
   147aa:	4798      	blx	r3

	config_init(); //Load Configuration from NVM - Brett
   147ac:	4b29      	ldr	r3, [pc, #164]	; (14854 <main+0x1d8>)
   147ae:	4798      	blx	r3

	MiApp_ProtocolInit(false);
   147b0:	2000      	movs	r0, #0
   147b2:	4b29      	ldr	r3, [pc, #164]	; (14858 <main+0x1dc>)
   147b4:	4798      	blx	r3
	PrintMenuC();
	while(1){
		ConsoleProcC();
	}
#else
	if(chkecho) PrintMenu();
   147b6:	4b1e      	ldr	r3, [pc, #120]	; (14830 <main+0x1b4>)
   147b8:	781b      	ldrb	r3, [r3, #0]
   147ba:	2b00      	cmp	r3, #0
   147bc:	d001      	beq.n	147c2 <main+0x146>
   147be:	4b27      	ldr	r3, [pc, #156]	; (1485c <main+0x1e0>)
   147c0:	4798      	blx	r3

	start_nvm();
   147c2:	4b27      	ldr	r3, [pc, #156]	; (14860 <main+0x1e4>)
   147c4:	4798      	blx	r3
	if(networkInfo.CH == 0){
   147c6:	4b17      	ldr	r3, [pc, #92]	; (14824 <main+0x1a8>)
   147c8:	791b      	ldrb	r3, [r3, #4]
   147ca:	2b00      	cmp	r3, #0
   147cc:	d107      	bne.n	147de <main+0x162>
		networkInfo.CH = 20;					//ihkim
   147ce:	4b15      	ldr	r3, [pc, #84]	; (14824 <main+0x1a8>)
   147d0:	2214      	movs	r2, #20
   147d2:	711a      	strb	r2, [r3, #4]
		MiApp_SetChannel(networkInfo.CH);
   147d4:	4b13      	ldr	r3, [pc, #76]	; (14824 <main+0x1a8>)
   147d6:	791b      	ldrb	r3, [r3, #4]
   147d8:	0018      	movs	r0, r3
   147da:	4b22      	ldr	r3, [pc, #136]	; (14864 <main+0x1e8>)
   147dc:	4798      	blx	r3
	}

	chkprotocol = false;
   147de:	4b22      	ldr	r3, [pc, #136]	; (14868 <main+0x1ec>)
   147e0:	2200      	movs	r2, #0
   147e2:	701a      	strb	r2, [r3, #0]
	Toggle_Old = Toggle_Continue;
   147e4:	4b21      	ldr	r3, [pc, #132]	; (1486c <main+0x1f0>)
   147e6:	681a      	ldr	r2, [r3, #0]
   147e8:	4b21      	ldr	r3, [pc, #132]	; (14870 <main+0x1f4>)
   147ea:	601a      	str	r2, [r3, #0]
	
	while(1){
		HandleRxData();
   147ec:	4b21      	ldr	r3, [pc, #132]	; (14874 <main+0x1f8>)
   147ee:	4798      	blx	r3

		if(chkprotocol){
   147f0:	4b1d      	ldr	r3, [pc, #116]	; (14868 <main+0x1ec>)
   147f2:	781b      	ldrb	r3, [r3, #0]
   147f4:	2b00      	cmp	r3, #0
   147f6:	d002      	beq.n	147fe <main+0x182>
			ConsoleProc2();
   147f8:	4b1f      	ldr	r3, [pc, #124]	; (14878 <main+0x1fc>)
   147fa:	4798      	blx	r3
   147fc:	e001      	b.n	14802 <main+0x186>
		}else{
			ConsoleProc();
   147fe:	4b1f      	ldr	r3, [pc, #124]	; (1487c <main+0x200>)
   14800:	4798      	blx	r3
		}
		test_console();
   14802:	4b1f      	ldr	r3, [pc, #124]	; (14880 <main+0x204>)
   14804:	4798      	blx	r3
		HandleRxData();
   14806:	e7f1      	b.n	147ec <main+0x170>
   14808:	000059d1 	.word	0x000059d1
   1480c:	00000149 	.word	0x00000149
   14810:	00000361 	.word	0x00000361
   14814:	0001430d 	.word	0x0001430d
   14818:	20000010 	.word	0x20000010
   1481c:	000076cd 	.word	0x000076cd
   14820:	0000e769 	.word	0x0000e769
   14824:	2000151c 	.word	0x2000151c
   14828:	0000e979 	.word	0x0000e979
   1482c:	20001c18 	.word	0x20001c18
   14830:	2000002c 	.word	0x2000002c
   14834:	0000689d 	.word	0x0000689d
   14838:	000140cd 	.word	0x000140cd
   1483c:	0001e038 	.word	0x0001e038
   14840:	0001782d 	.word	0x0001782d
   14844:	0001e03c 	.word	0x0001e03c
   14848:	0001e06c 	.word	0x0001e06c
   1484c:	0001e07c 	.word	0x0001e07c
   14850:	0001e084 	.word	0x0001e084
   14854:	00014339 	.word	0x00014339
   14858:	0000ceed 	.word	0x0000ceed
   1485c:	00010b99 	.word	0x00010b99
   14860:	00014531 	.word	0x00014531
   14864:	0000d159 	.word	0x0000d159
   14868:	2000002d 	.word	0x2000002d
   1486c:	20001c38 	.word	0x20001c38
   14870:	20001c24 	.word	0x20001c24
   14874:	000109a1 	.word	0x000109a1
   14878:	0001113d 	.word	0x0001113d
   1487c:	00011435 	.word	0x00011435
   14880:	0001309d 	.word	0x0001309d

00014884 <common_tc_delay>:
   14884:	b510      	push	{r4, lr}
   14886:	1c04      	adds	r4, r0, #0
   14888:	4b13      	ldr	r3, [pc, #76]	; (148d8 <common_tc_delay+0x54>)
   1488a:	4798      	blx	r3
   1488c:	4b13      	ldr	r3, [pc, #76]	; (148dc <common_tc_delay+0x58>)
   1488e:	781a      	ldrb	r2, [r3, #0]
   14890:	4362      	muls	r2, r4
   14892:	1881      	adds	r1, r0, r2
   14894:	4b12      	ldr	r3, [pc, #72]	; (148e0 <common_tc_delay+0x5c>)
   14896:	6059      	str	r1, [r3, #4]
   14898:	6859      	ldr	r1, [r3, #4]
   1489a:	0c09      	lsrs	r1, r1, #16
   1489c:	6059      	str	r1, [r3, #4]
   1489e:	685b      	ldr	r3, [r3, #4]
   148a0:	2b00      	cmp	r3, #0
   148a2:	d007      	beq.n	148b4 <common_tc_delay+0x30>
   148a4:	4b0e      	ldr	r3, [pc, #56]	; (148e0 <common_tc_delay+0x5c>)
   148a6:	6859      	ldr	r1, [r3, #4]
   148a8:	3201      	adds	r2, #1
   148aa:	1880      	adds	r0, r0, r2
   148ac:	8118      	strh	r0, [r3, #8]
   148ae:	4b0d      	ldr	r3, [pc, #52]	; (148e4 <common_tc_delay+0x60>)
   148b0:	4798      	blx	r3
   148b2:	e004      	b.n	148be <common_tc_delay+0x3a>
   148b4:	1882      	adds	r2, r0, r2
   148b6:	4b0a      	ldr	r3, [pc, #40]	; (148e0 <common_tc_delay+0x5c>)
   148b8:	811a      	strh	r2, [r3, #8]
   148ba:	4b0b      	ldr	r3, [pc, #44]	; (148e8 <common_tc_delay+0x64>)
   148bc:	4798      	blx	r3
   148be:	4b08      	ldr	r3, [pc, #32]	; (148e0 <common_tc_delay+0x5c>)
   148c0:	891b      	ldrh	r3, [r3, #8]
   148c2:	2b63      	cmp	r3, #99	; 0x63
   148c4:	d802      	bhi.n	148cc <common_tc_delay+0x48>
   148c6:	3364      	adds	r3, #100	; 0x64
   148c8:	4a05      	ldr	r2, [pc, #20]	; (148e0 <common_tc_delay+0x5c>)
   148ca:	8113      	strh	r3, [r2, #8]
   148cc:	4b04      	ldr	r3, [pc, #16]	; (148e0 <common_tc_delay+0x5c>)
   148ce:	8918      	ldrh	r0, [r3, #8]
   148d0:	4b06      	ldr	r3, [pc, #24]	; (148ec <common_tc_delay+0x68>)
   148d2:	4798      	blx	r3
   148d4:	bd10      	pop	{r4, pc}
   148d6:	46c0      	nop			; (mov r8, r8)
   148d8:	00010501 	.word	0x00010501
   148dc:	20001c3c 	.word	0x20001c3c
   148e0:	20000c88 	.word	0x20000c88
   148e4:	00010521 	.word	0x00010521
   148e8:	0001053d 	.word	0x0001053d
   148ec:	00010569 	.word	0x00010569

000148f0 <common_tc_init>:
   148f0:	b508      	push	{r3, lr}
   148f2:	2200      	movs	r2, #0
   148f4:	4b03      	ldr	r3, [pc, #12]	; (14904 <common_tc_init+0x14>)
   148f6:	701a      	strb	r2, [r3, #0]
   148f8:	4b03      	ldr	r3, [pc, #12]	; (14908 <common_tc_init+0x18>)
   148fa:	4798      	blx	r3
   148fc:	4b03      	ldr	r3, [pc, #12]	; (1490c <common_tc_init+0x1c>)
   148fe:	7018      	strb	r0, [r3, #0]
   14900:	bd08      	pop	{r3, pc}
   14902:	46c0      	nop			; (mov r8, r8)
   14904:	20000c88 	.word	0x20000c88
   14908:	000105c5 	.word	0x000105c5
   1490c:	20001c3c 	.word	0x20001c3c

00014910 <tmr_ovf_callback>:
   14910:	b508      	push	{r3, lr}
   14912:	4b0e      	ldr	r3, [pc, #56]	; (1494c <tmr_ovf_callback+0x3c>)
   14914:	685b      	ldr	r3, [r3, #4]
   14916:	2b00      	cmp	r3, #0
   14918:	d007      	beq.n	1492a <tmr_ovf_callback+0x1a>
   1491a:	4a0c      	ldr	r2, [pc, #48]	; (1494c <tmr_ovf_callback+0x3c>)
   1491c:	6853      	ldr	r3, [r2, #4]
   1491e:	3b01      	subs	r3, #1
   14920:	6053      	str	r3, [r2, #4]
   14922:	2b00      	cmp	r3, #0
   14924:	d101      	bne.n	1492a <tmr_ovf_callback+0x1a>
   14926:	4b0a      	ldr	r3, [pc, #40]	; (14950 <tmr_ovf_callback+0x40>)
   14928:	4798      	blx	r3
   1492a:	4a08      	ldr	r2, [pc, #32]	; (1494c <tmr_ovf_callback+0x3c>)
   1492c:	7813      	ldrb	r3, [r2, #0]
   1492e:	3301      	adds	r3, #1
   14930:	b2db      	uxtb	r3, r3
   14932:	7013      	strb	r3, [r2, #0]
   14934:	4a07      	ldr	r2, [pc, #28]	; (14954 <tmr_ovf_callback+0x44>)
   14936:	7812      	ldrb	r2, [r2, #0]
   14938:	429a      	cmp	r2, r3
   1493a:	d806      	bhi.n	1494a <tmr_ovf_callback+0x3a>
   1493c:	4b03      	ldr	r3, [pc, #12]	; (1494c <tmr_ovf_callback+0x3c>)
   1493e:	2200      	movs	r2, #0
   14940:	701a      	strb	r2, [r3, #0]
   14942:	68db      	ldr	r3, [r3, #12]
   14944:	2b00      	cmp	r3, #0
   14946:	d000      	beq.n	1494a <tmr_ovf_callback+0x3a>
   14948:	4798      	blx	r3
   1494a:	bd08      	pop	{r3, pc}
   1494c:	20000c88 	.word	0x20000c88
   14950:	0001053d 	.word	0x0001053d
   14954:	20001c3c 	.word	0x20001c3c

00014958 <tmr_cca_callback>:
   14958:	b508      	push	{r3, lr}
   1495a:	4b04      	ldr	r3, [pc, #16]	; (1496c <tmr_cca_callback+0x14>)
   1495c:	4798      	blx	r3
   1495e:	4b04      	ldr	r3, [pc, #16]	; (14970 <tmr_cca_callback+0x18>)
   14960:	691b      	ldr	r3, [r3, #16]
   14962:	2b00      	cmp	r3, #0
   14964:	d000      	beq.n	14968 <tmr_cca_callback+0x10>
   14966:	4798      	blx	r3
   14968:	bd08      	pop	{r3, pc}
   1496a:	46c0      	nop			; (mov r8, r8)
   1496c:	00010521 	.word	0x00010521
   14970:	20000c88 	.word	0x20000c88

00014974 <set_common_tc_overflow_callback>:
   14974:	4b01      	ldr	r3, [pc, #4]	; (1497c <set_common_tc_overflow_callback+0x8>)
   14976:	60d8      	str	r0, [r3, #12]
   14978:	4770      	bx	lr
   1497a:	46c0      	nop			; (mov r8, r8)
   1497c:	20000c88 	.word	0x20000c88

00014980 <set_common_tc_expiry_callback>:
   14980:	4b01      	ldr	r3, [pc, #4]	; (14988 <set_common_tc_expiry_callback+0x8>)
   14982:	6118      	str	r0, [r3, #16]
   14984:	4770      	bx	lr
   14986:	46c0      	nop			; (mov r8, r8)
   14988:	20000c88 	.word	0x20000c88

0001498c <__udivsi3>:
   1498c:	2200      	movs	r2, #0
   1498e:	0843      	lsrs	r3, r0, #1
   14990:	428b      	cmp	r3, r1
   14992:	d374      	bcc.n	14a7e <__udivsi3+0xf2>
   14994:	0903      	lsrs	r3, r0, #4
   14996:	428b      	cmp	r3, r1
   14998:	d35f      	bcc.n	14a5a <__udivsi3+0xce>
   1499a:	0a03      	lsrs	r3, r0, #8
   1499c:	428b      	cmp	r3, r1
   1499e:	d344      	bcc.n	14a2a <__udivsi3+0x9e>
   149a0:	0b03      	lsrs	r3, r0, #12
   149a2:	428b      	cmp	r3, r1
   149a4:	d328      	bcc.n	149f8 <__udivsi3+0x6c>
   149a6:	0c03      	lsrs	r3, r0, #16
   149a8:	428b      	cmp	r3, r1
   149aa:	d30d      	bcc.n	149c8 <__udivsi3+0x3c>
   149ac:	22ff      	movs	r2, #255	; 0xff
   149ae:	0209      	lsls	r1, r1, #8
   149b0:	ba12      	rev	r2, r2
   149b2:	0c03      	lsrs	r3, r0, #16
   149b4:	428b      	cmp	r3, r1
   149b6:	d302      	bcc.n	149be <__udivsi3+0x32>
   149b8:	1212      	asrs	r2, r2, #8
   149ba:	0209      	lsls	r1, r1, #8
   149bc:	d065      	beq.n	14a8a <__udivsi3+0xfe>
   149be:	0b03      	lsrs	r3, r0, #12
   149c0:	428b      	cmp	r3, r1
   149c2:	d319      	bcc.n	149f8 <__udivsi3+0x6c>
   149c4:	e000      	b.n	149c8 <__udivsi3+0x3c>
   149c6:	0a09      	lsrs	r1, r1, #8
   149c8:	0bc3      	lsrs	r3, r0, #15
   149ca:	428b      	cmp	r3, r1
   149cc:	d301      	bcc.n	149d2 <__udivsi3+0x46>
   149ce:	03cb      	lsls	r3, r1, #15
   149d0:	1ac0      	subs	r0, r0, r3
   149d2:	4152      	adcs	r2, r2
   149d4:	0b83      	lsrs	r3, r0, #14
   149d6:	428b      	cmp	r3, r1
   149d8:	d301      	bcc.n	149de <__udivsi3+0x52>
   149da:	038b      	lsls	r3, r1, #14
   149dc:	1ac0      	subs	r0, r0, r3
   149de:	4152      	adcs	r2, r2
   149e0:	0b43      	lsrs	r3, r0, #13
   149e2:	428b      	cmp	r3, r1
   149e4:	d301      	bcc.n	149ea <__udivsi3+0x5e>
   149e6:	034b      	lsls	r3, r1, #13
   149e8:	1ac0      	subs	r0, r0, r3
   149ea:	4152      	adcs	r2, r2
   149ec:	0b03      	lsrs	r3, r0, #12
   149ee:	428b      	cmp	r3, r1
   149f0:	d301      	bcc.n	149f6 <__udivsi3+0x6a>
   149f2:	030b      	lsls	r3, r1, #12
   149f4:	1ac0      	subs	r0, r0, r3
   149f6:	4152      	adcs	r2, r2
   149f8:	0ac3      	lsrs	r3, r0, #11
   149fa:	428b      	cmp	r3, r1
   149fc:	d301      	bcc.n	14a02 <__udivsi3+0x76>
   149fe:	02cb      	lsls	r3, r1, #11
   14a00:	1ac0      	subs	r0, r0, r3
   14a02:	4152      	adcs	r2, r2
   14a04:	0a83      	lsrs	r3, r0, #10
   14a06:	428b      	cmp	r3, r1
   14a08:	d301      	bcc.n	14a0e <__udivsi3+0x82>
   14a0a:	028b      	lsls	r3, r1, #10
   14a0c:	1ac0      	subs	r0, r0, r3
   14a0e:	4152      	adcs	r2, r2
   14a10:	0a43      	lsrs	r3, r0, #9
   14a12:	428b      	cmp	r3, r1
   14a14:	d301      	bcc.n	14a1a <__udivsi3+0x8e>
   14a16:	024b      	lsls	r3, r1, #9
   14a18:	1ac0      	subs	r0, r0, r3
   14a1a:	4152      	adcs	r2, r2
   14a1c:	0a03      	lsrs	r3, r0, #8
   14a1e:	428b      	cmp	r3, r1
   14a20:	d301      	bcc.n	14a26 <__udivsi3+0x9a>
   14a22:	020b      	lsls	r3, r1, #8
   14a24:	1ac0      	subs	r0, r0, r3
   14a26:	4152      	adcs	r2, r2
   14a28:	d2cd      	bcs.n	149c6 <__udivsi3+0x3a>
   14a2a:	09c3      	lsrs	r3, r0, #7
   14a2c:	428b      	cmp	r3, r1
   14a2e:	d301      	bcc.n	14a34 <__udivsi3+0xa8>
   14a30:	01cb      	lsls	r3, r1, #7
   14a32:	1ac0      	subs	r0, r0, r3
   14a34:	4152      	adcs	r2, r2
   14a36:	0983      	lsrs	r3, r0, #6
   14a38:	428b      	cmp	r3, r1
   14a3a:	d301      	bcc.n	14a40 <__udivsi3+0xb4>
   14a3c:	018b      	lsls	r3, r1, #6
   14a3e:	1ac0      	subs	r0, r0, r3
   14a40:	4152      	adcs	r2, r2
   14a42:	0943      	lsrs	r3, r0, #5
   14a44:	428b      	cmp	r3, r1
   14a46:	d301      	bcc.n	14a4c <__udivsi3+0xc0>
   14a48:	014b      	lsls	r3, r1, #5
   14a4a:	1ac0      	subs	r0, r0, r3
   14a4c:	4152      	adcs	r2, r2
   14a4e:	0903      	lsrs	r3, r0, #4
   14a50:	428b      	cmp	r3, r1
   14a52:	d301      	bcc.n	14a58 <__udivsi3+0xcc>
   14a54:	010b      	lsls	r3, r1, #4
   14a56:	1ac0      	subs	r0, r0, r3
   14a58:	4152      	adcs	r2, r2
   14a5a:	08c3      	lsrs	r3, r0, #3
   14a5c:	428b      	cmp	r3, r1
   14a5e:	d301      	bcc.n	14a64 <__udivsi3+0xd8>
   14a60:	00cb      	lsls	r3, r1, #3
   14a62:	1ac0      	subs	r0, r0, r3
   14a64:	4152      	adcs	r2, r2
   14a66:	0883      	lsrs	r3, r0, #2
   14a68:	428b      	cmp	r3, r1
   14a6a:	d301      	bcc.n	14a70 <__udivsi3+0xe4>
   14a6c:	008b      	lsls	r3, r1, #2
   14a6e:	1ac0      	subs	r0, r0, r3
   14a70:	4152      	adcs	r2, r2
   14a72:	0843      	lsrs	r3, r0, #1
   14a74:	428b      	cmp	r3, r1
   14a76:	d301      	bcc.n	14a7c <__udivsi3+0xf0>
   14a78:	004b      	lsls	r3, r1, #1
   14a7a:	1ac0      	subs	r0, r0, r3
   14a7c:	4152      	adcs	r2, r2
   14a7e:	1a41      	subs	r1, r0, r1
   14a80:	d200      	bcs.n	14a84 <__udivsi3+0xf8>
   14a82:	4601      	mov	r1, r0
   14a84:	4152      	adcs	r2, r2
   14a86:	4610      	mov	r0, r2
   14a88:	4770      	bx	lr
   14a8a:	e7ff      	b.n	14a8c <__udivsi3+0x100>
   14a8c:	b501      	push	{r0, lr}
   14a8e:	2000      	movs	r0, #0
   14a90:	f000 f8f0 	bl	14c74 <__aeabi_idiv0>
   14a94:	bd02      	pop	{r1, pc}
   14a96:	46c0      	nop			; (mov r8, r8)

00014a98 <__aeabi_uidivmod>:
   14a98:	2900      	cmp	r1, #0
   14a9a:	d0f7      	beq.n	14a8c <__udivsi3+0x100>
   14a9c:	e776      	b.n	1498c <__udivsi3>
   14a9e:	4770      	bx	lr

00014aa0 <__divsi3>:
   14aa0:	4603      	mov	r3, r0
   14aa2:	430b      	orrs	r3, r1
   14aa4:	d47f      	bmi.n	14ba6 <__divsi3+0x106>
   14aa6:	2200      	movs	r2, #0
   14aa8:	0843      	lsrs	r3, r0, #1
   14aaa:	428b      	cmp	r3, r1
   14aac:	d374      	bcc.n	14b98 <__divsi3+0xf8>
   14aae:	0903      	lsrs	r3, r0, #4
   14ab0:	428b      	cmp	r3, r1
   14ab2:	d35f      	bcc.n	14b74 <__divsi3+0xd4>
   14ab4:	0a03      	lsrs	r3, r0, #8
   14ab6:	428b      	cmp	r3, r1
   14ab8:	d344      	bcc.n	14b44 <__divsi3+0xa4>
   14aba:	0b03      	lsrs	r3, r0, #12
   14abc:	428b      	cmp	r3, r1
   14abe:	d328      	bcc.n	14b12 <__divsi3+0x72>
   14ac0:	0c03      	lsrs	r3, r0, #16
   14ac2:	428b      	cmp	r3, r1
   14ac4:	d30d      	bcc.n	14ae2 <__divsi3+0x42>
   14ac6:	22ff      	movs	r2, #255	; 0xff
   14ac8:	0209      	lsls	r1, r1, #8
   14aca:	ba12      	rev	r2, r2
   14acc:	0c03      	lsrs	r3, r0, #16
   14ace:	428b      	cmp	r3, r1
   14ad0:	d302      	bcc.n	14ad8 <__divsi3+0x38>
   14ad2:	1212      	asrs	r2, r2, #8
   14ad4:	0209      	lsls	r1, r1, #8
   14ad6:	d065      	beq.n	14ba4 <__divsi3+0x104>
   14ad8:	0b03      	lsrs	r3, r0, #12
   14ada:	428b      	cmp	r3, r1
   14adc:	d319      	bcc.n	14b12 <__divsi3+0x72>
   14ade:	e000      	b.n	14ae2 <__divsi3+0x42>
   14ae0:	0a09      	lsrs	r1, r1, #8
   14ae2:	0bc3      	lsrs	r3, r0, #15
   14ae4:	428b      	cmp	r3, r1
   14ae6:	d301      	bcc.n	14aec <__divsi3+0x4c>
   14ae8:	03cb      	lsls	r3, r1, #15
   14aea:	1ac0      	subs	r0, r0, r3
   14aec:	4152      	adcs	r2, r2
   14aee:	0b83      	lsrs	r3, r0, #14
   14af0:	428b      	cmp	r3, r1
   14af2:	d301      	bcc.n	14af8 <__divsi3+0x58>
   14af4:	038b      	lsls	r3, r1, #14
   14af6:	1ac0      	subs	r0, r0, r3
   14af8:	4152      	adcs	r2, r2
   14afa:	0b43      	lsrs	r3, r0, #13
   14afc:	428b      	cmp	r3, r1
   14afe:	d301      	bcc.n	14b04 <__divsi3+0x64>
   14b00:	034b      	lsls	r3, r1, #13
   14b02:	1ac0      	subs	r0, r0, r3
   14b04:	4152      	adcs	r2, r2
   14b06:	0b03      	lsrs	r3, r0, #12
   14b08:	428b      	cmp	r3, r1
   14b0a:	d301      	bcc.n	14b10 <__divsi3+0x70>
   14b0c:	030b      	lsls	r3, r1, #12
   14b0e:	1ac0      	subs	r0, r0, r3
   14b10:	4152      	adcs	r2, r2
   14b12:	0ac3      	lsrs	r3, r0, #11
   14b14:	428b      	cmp	r3, r1
   14b16:	d301      	bcc.n	14b1c <__divsi3+0x7c>
   14b18:	02cb      	lsls	r3, r1, #11
   14b1a:	1ac0      	subs	r0, r0, r3
   14b1c:	4152      	adcs	r2, r2
   14b1e:	0a83      	lsrs	r3, r0, #10
   14b20:	428b      	cmp	r3, r1
   14b22:	d301      	bcc.n	14b28 <__divsi3+0x88>
   14b24:	028b      	lsls	r3, r1, #10
   14b26:	1ac0      	subs	r0, r0, r3
   14b28:	4152      	adcs	r2, r2
   14b2a:	0a43      	lsrs	r3, r0, #9
   14b2c:	428b      	cmp	r3, r1
   14b2e:	d301      	bcc.n	14b34 <__divsi3+0x94>
   14b30:	024b      	lsls	r3, r1, #9
   14b32:	1ac0      	subs	r0, r0, r3
   14b34:	4152      	adcs	r2, r2
   14b36:	0a03      	lsrs	r3, r0, #8
   14b38:	428b      	cmp	r3, r1
   14b3a:	d301      	bcc.n	14b40 <__divsi3+0xa0>
   14b3c:	020b      	lsls	r3, r1, #8
   14b3e:	1ac0      	subs	r0, r0, r3
   14b40:	4152      	adcs	r2, r2
   14b42:	d2cd      	bcs.n	14ae0 <__divsi3+0x40>
   14b44:	09c3      	lsrs	r3, r0, #7
   14b46:	428b      	cmp	r3, r1
   14b48:	d301      	bcc.n	14b4e <__divsi3+0xae>
   14b4a:	01cb      	lsls	r3, r1, #7
   14b4c:	1ac0      	subs	r0, r0, r3
   14b4e:	4152      	adcs	r2, r2
   14b50:	0983      	lsrs	r3, r0, #6
   14b52:	428b      	cmp	r3, r1
   14b54:	d301      	bcc.n	14b5a <__divsi3+0xba>
   14b56:	018b      	lsls	r3, r1, #6
   14b58:	1ac0      	subs	r0, r0, r3
   14b5a:	4152      	adcs	r2, r2
   14b5c:	0943      	lsrs	r3, r0, #5
   14b5e:	428b      	cmp	r3, r1
   14b60:	d301      	bcc.n	14b66 <__divsi3+0xc6>
   14b62:	014b      	lsls	r3, r1, #5
   14b64:	1ac0      	subs	r0, r0, r3
   14b66:	4152      	adcs	r2, r2
   14b68:	0903      	lsrs	r3, r0, #4
   14b6a:	428b      	cmp	r3, r1
   14b6c:	d301      	bcc.n	14b72 <__divsi3+0xd2>
   14b6e:	010b      	lsls	r3, r1, #4
   14b70:	1ac0      	subs	r0, r0, r3
   14b72:	4152      	adcs	r2, r2
   14b74:	08c3      	lsrs	r3, r0, #3
   14b76:	428b      	cmp	r3, r1
   14b78:	d301      	bcc.n	14b7e <__divsi3+0xde>
   14b7a:	00cb      	lsls	r3, r1, #3
   14b7c:	1ac0      	subs	r0, r0, r3
   14b7e:	4152      	adcs	r2, r2
   14b80:	0883      	lsrs	r3, r0, #2
   14b82:	428b      	cmp	r3, r1
   14b84:	d301      	bcc.n	14b8a <__divsi3+0xea>
   14b86:	008b      	lsls	r3, r1, #2
   14b88:	1ac0      	subs	r0, r0, r3
   14b8a:	4152      	adcs	r2, r2
   14b8c:	0843      	lsrs	r3, r0, #1
   14b8e:	428b      	cmp	r3, r1
   14b90:	d301      	bcc.n	14b96 <__divsi3+0xf6>
   14b92:	004b      	lsls	r3, r1, #1
   14b94:	1ac0      	subs	r0, r0, r3
   14b96:	4152      	adcs	r2, r2
   14b98:	1a41      	subs	r1, r0, r1
   14b9a:	d200      	bcs.n	14b9e <__divsi3+0xfe>
   14b9c:	4601      	mov	r1, r0
   14b9e:	4152      	adcs	r2, r2
   14ba0:	4610      	mov	r0, r2
   14ba2:	4770      	bx	lr
   14ba4:	e05d      	b.n	14c62 <__divsi3+0x1c2>
   14ba6:	0fca      	lsrs	r2, r1, #31
   14ba8:	d000      	beq.n	14bac <__divsi3+0x10c>
   14baa:	4249      	negs	r1, r1
   14bac:	1003      	asrs	r3, r0, #32
   14bae:	d300      	bcc.n	14bb2 <__divsi3+0x112>
   14bb0:	4240      	negs	r0, r0
   14bb2:	4053      	eors	r3, r2
   14bb4:	2200      	movs	r2, #0
   14bb6:	469c      	mov	ip, r3
   14bb8:	0903      	lsrs	r3, r0, #4
   14bba:	428b      	cmp	r3, r1
   14bbc:	d32d      	bcc.n	14c1a <__divsi3+0x17a>
   14bbe:	0a03      	lsrs	r3, r0, #8
   14bc0:	428b      	cmp	r3, r1
   14bc2:	d312      	bcc.n	14bea <__divsi3+0x14a>
   14bc4:	22fc      	movs	r2, #252	; 0xfc
   14bc6:	0189      	lsls	r1, r1, #6
   14bc8:	ba12      	rev	r2, r2
   14bca:	0a03      	lsrs	r3, r0, #8
   14bcc:	428b      	cmp	r3, r1
   14bce:	d30c      	bcc.n	14bea <__divsi3+0x14a>
   14bd0:	0189      	lsls	r1, r1, #6
   14bd2:	1192      	asrs	r2, r2, #6
   14bd4:	428b      	cmp	r3, r1
   14bd6:	d308      	bcc.n	14bea <__divsi3+0x14a>
   14bd8:	0189      	lsls	r1, r1, #6
   14bda:	1192      	asrs	r2, r2, #6
   14bdc:	428b      	cmp	r3, r1
   14bde:	d304      	bcc.n	14bea <__divsi3+0x14a>
   14be0:	0189      	lsls	r1, r1, #6
   14be2:	d03a      	beq.n	14c5a <__divsi3+0x1ba>
   14be4:	1192      	asrs	r2, r2, #6
   14be6:	e000      	b.n	14bea <__divsi3+0x14a>
   14be8:	0989      	lsrs	r1, r1, #6
   14bea:	09c3      	lsrs	r3, r0, #7
   14bec:	428b      	cmp	r3, r1
   14bee:	d301      	bcc.n	14bf4 <__divsi3+0x154>
   14bf0:	01cb      	lsls	r3, r1, #7
   14bf2:	1ac0      	subs	r0, r0, r3
   14bf4:	4152      	adcs	r2, r2
   14bf6:	0983      	lsrs	r3, r0, #6
   14bf8:	428b      	cmp	r3, r1
   14bfa:	d301      	bcc.n	14c00 <__divsi3+0x160>
   14bfc:	018b      	lsls	r3, r1, #6
   14bfe:	1ac0      	subs	r0, r0, r3
   14c00:	4152      	adcs	r2, r2
   14c02:	0943      	lsrs	r3, r0, #5
   14c04:	428b      	cmp	r3, r1
   14c06:	d301      	bcc.n	14c0c <__divsi3+0x16c>
   14c08:	014b      	lsls	r3, r1, #5
   14c0a:	1ac0      	subs	r0, r0, r3
   14c0c:	4152      	adcs	r2, r2
   14c0e:	0903      	lsrs	r3, r0, #4
   14c10:	428b      	cmp	r3, r1
   14c12:	d301      	bcc.n	14c18 <__divsi3+0x178>
   14c14:	010b      	lsls	r3, r1, #4
   14c16:	1ac0      	subs	r0, r0, r3
   14c18:	4152      	adcs	r2, r2
   14c1a:	08c3      	lsrs	r3, r0, #3
   14c1c:	428b      	cmp	r3, r1
   14c1e:	d301      	bcc.n	14c24 <__divsi3+0x184>
   14c20:	00cb      	lsls	r3, r1, #3
   14c22:	1ac0      	subs	r0, r0, r3
   14c24:	4152      	adcs	r2, r2
   14c26:	0883      	lsrs	r3, r0, #2
   14c28:	428b      	cmp	r3, r1
   14c2a:	d301      	bcc.n	14c30 <__divsi3+0x190>
   14c2c:	008b      	lsls	r3, r1, #2
   14c2e:	1ac0      	subs	r0, r0, r3
   14c30:	4152      	adcs	r2, r2
   14c32:	d2d9      	bcs.n	14be8 <__divsi3+0x148>
   14c34:	0843      	lsrs	r3, r0, #1
   14c36:	428b      	cmp	r3, r1
   14c38:	d301      	bcc.n	14c3e <__divsi3+0x19e>
   14c3a:	004b      	lsls	r3, r1, #1
   14c3c:	1ac0      	subs	r0, r0, r3
   14c3e:	4152      	adcs	r2, r2
   14c40:	1a41      	subs	r1, r0, r1
   14c42:	d200      	bcs.n	14c46 <__divsi3+0x1a6>
   14c44:	4601      	mov	r1, r0
   14c46:	4663      	mov	r3, ip
   14c48:	4152      	adcs	r2, r2
   14c4a:	105b      	asrs	r3, r3, #1
   14c4c:	4610      	mov	r0, r2
   14c4e:	d301      	bcc.n	14c54 <__divsi3+0x1b4>
   14c50:	4240      	negs	r0, r0
   14c52:	2b00      	cmp	r3, #0
   14c54:	d500      	bpl.n	14c58 <__divsi3+0x1b8>
   14c56:	4249      	negs	r1, r1
   14c58:	4770      	bx	lr
   14c5a:	4663      	mov	r3, ip
   14c5c:	105b      	asrs	r3, r3, #1
   14c5e:	d300      	bcc.n	14c62 <__divsi3+0x1c2>
   14c60:	4240      	negs	r0, r0
   14c62:	b501      	push	{r0, lr}
   14c64:	2000      	movs	r0, #0
   14c66:	f000 f805 	bl	14c74 <__aeabi_idiv0>
   14c6a:	bd02      	pop	{r1, pc}

00014c6c <__aeabi_idivmod>:
   14c6c:	2900      	cmp	r1, #0
   14c6e:	d0f8      	beq.n	14c62 <__divsi3+0x1c2>
   14c70:	e716      	b.n	14aa0 <__divsi3>
   14c72:	4770      	bx	lr

00014c74 <__aeabi_idiv0>:
   14c74:	4770      	bx	lr
   14c76:	46c0      	nop			; (mov r8, r8)

00014c78 <__aeabi_cfrcmple>:
   14c78:	4684      	mov	ip, r0
   14c7a:	1c08      	adds	r0, r1, #0
   14c7c:	4661      	mov	r1, ip
   14c7e:	e7ff      	b.n	14c80 <__aeabi_cfcmpeq>

00014c80 <__aeabi_cfcmpeq>:
   14c80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   14c82:	f000 fc13 	bl	154ac <__lesf2>
   14c86:	2800      	cmp	r0, #0
   14c88:	d401      	bmi.n	14c8e <__aeabi_cfcmpeq+0xe>
   14c8a:	2100      	movs	r1, #0
   14c8c:	42c8      	cmn	r0, r1
   14c8e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00014c90 <__aeabi_fcmpeq>:
   14c90:	b510      	push	{r4, lr}
   14c92:	f000 fba5 	bl	153e0 <__eqsf2>
   14c96:	4240      	negs	r0, r0
   14c98:	3001      	adds	r0, #1
   14c9a:	bd10      	pop	{r4, pc}

00014c9c <__aeabi_fcmplt>:
   14c9c:	b510      	push	{r4, lr}
   14c9e:	f000 fc05 	bl	154ac <__lesf2>
   14ca2:	2800      	cmp	r0, #0
   14ca4:	db01      	blt.n	14caa <__aeabi_fcmplt+0xe>
   14ca6:	2000      	movs	r0, #0
   14ca8:	bd10      	pop	{r4, pc}
   14caa:	2001      	movs	r0, #1
   14cac:	bd10      	pop	{r4, pc}
   14cae:	46c0      	nop			; (mov r8, r8)

00014cb0 <__aeabi_fcmple>:
   14cb0:	b510      	push	{r4, lr}
   14cb2:	f000 fbfb 	bl	154ac <__lesf2>
   14cb6:	2800      	cmp	r0, #0
   14cb8:	dd01      	ble.n	14cbe <__aeabi_fcmple+0xe>
   14cba:	2000      	movs	r0, #0
   14cbc:	bd10      	pop	{r4, pc}
   14cbe:	2001      	movs	r0, #1
   14cc0:	bd10      	pop	{r4, pc}
   14cc2:	46c0      	nop			; (mov r8, r8)

00014cc4 <__aeabi_fcmpgt>:
   14cc4:	b510      	push	{r4, lr}
   14cc6:	f000 fbb1 	bl	1542c <__gesf2>
   14cca:	2800      	cmp	r0, #0
   14ccc:	dc01      	bgt.n	14cd2 <__aeabi_fcmpgt+0xe>
   14cce:	2000      	movs	r0, #0
   14cd0:	bd10      	pop	{r4, pc}
   14cd2:	2001      	movs	r0, #1
   14cd4:	bd10      	pop	{r4, pc}
   14cd6:	46c0      	nop			; (mov r8, r8)

00014cd8 <__aeabi_fcmpge>:
   14cd8:	b510      	push	{r4, lr}
   14cda:	f000 fba7 	bl	1542c <__gesf2>
   14cde:	2800      	cmp	r0, #0
   14ce0:	da01      	bge.n	14ce6 <__aeabi_fcmpge+0xe>
   14ce2:	2000      	movs	r0, #0
   14ce4:	bd10      	pop	{r4, pc}
   14ce6:	2001      	movs	r0, #1
   14ce8:	bd10      	pop	{r4, pc}
   14cea:	46c0      	nop			; (mov r8, r8)

00014cec <__aeabi_ldivmod>:
   14cec:	2b00      	cmp	r3, #0
   14cee:	d115      	bne.n	14d1c <__aeabi_ldivmod+0x30>
   14cf0:	2a00      	cmp	r2, #0
   14cf2:	d113      	bne.n	14d1c <__aeabi_ldivmod+0x30>
   14cf4:	2900      	cmp	r1, #0
   14cf6:	db06      	blt.n	14d06 <__aeabi_ldivmod+0x1a>
   14cf8:	dc01      	bgt.n	14cfe <__aeabi_ldivmod+0x12>
   14cfa:	2800      	cmp	r0, #0
   14cfc:	d006      	beq.n	14d0c <__aeabi_ldivmod+0x20>
   14cfe:	2000      	movs	r0, #0
   14d00:	43c0      	mvns	r0, r0
   14d02:	0841      	lsrs	r1, r0, #1
   14d04:	e002      	b.n	14d0c <__aeabi_ldivmod+0x20>
   14d06:	2180      	movs	r1, #128	; 0x80
   14d08:	0609      	lsls	r1, r1, #24
   14d0a:	2000      	movs	r0, #0
   14d0c:	b407      	push	{r0, r1, r2}
   14d0e:	4802      	ldr	r0, [pc, #8]	; (14d18 <__aeabi_ldivmod+0x2c>)
   14d10:	a101      	add	r1, pc, #4	; (adr r1, 14d18 <__aeabi_ldivmod+0x2c>)
   14d12:	1840      	adds	r0, r0, r1
   14d14:	9002      	str	r0, [sp, #8]
   14d16:	bd03      	pop	{r0, r1, pc}
   14d18:	ffffff5d 	.word	0xffffff5d
   14d1c:	b403      	push	{r0, r1}
   14d1e:	4668      	mov	r0, sp
   14d20:	b501      	push	{r0, lr}
   14d22:	9802      	ldr	r0, [sp, #8]
   14d24:	f000 f866 	bl	14df4 <__gnu_ldivmod_helper>
   14d28:	9b01      	ldr	r3, [sp, #4]
   14d2a:	469e      	mov	lr, r3
   14d2c:	b002      	add	sp, #8
   14d2e:	bc0c      	pop	{r2, r3}
   14d30:	4770      	bx	lr
   14d32:	46c0      	nop			; (mov r8, r8)

00014d34 <__aeabi_lmul>:
   14d34:	b5f0      	push	{r4, r5, r6, r7, lr}
   14d36:	46ce      	mov	lr, r9
   14d38:	4647      	mov	r7, r8
   14d3a:	0415      	lsls	r5, r2, #16
   14d3c:	0c2d      	lsrs	r5, r5, #16
   14d3e:	002e      	movs	r6, r5
   14d40:	b580      	push	{r7, lr}
   14d42:	0407      	lsls	r7, r0, #16
   14d44:	0c14      	lsrs	r4, r2, #16
   14d46:	0c3f      	lsrs	r7, r7, #16
   14d48:	4699      	mov	r9, r3
   14d4a:	0c03      	lsrs	r3, r0, #16
   14d4c:	437e      	muls	r6, r7
   14d4e:	435d      	muls	r5, r3
   14d50:	4367      	muls	r7, r4
   14d52:	4363      	muls	r3, r4
   14d54:	197f      	adds	r7, r7, r5
   14d56:	0c34      	lsrs	r4, r6, #16
   14d58:	19e4      	adds	r4, r4, r7
   14d5a:	469c      	mov	ip, r3
   14d5c:	42a5      	cmp	r5, r4
   14d5e:	d903      	bls.n	14d68 <__aeabi_lmul+0x34>
   14d60:	2380      	movs	r3, #128	; 0x80
   14d62:	025b      	lsls	r3, r3, #9
   14d64:	4698      	mov	r8, r3
   14d66:	44c4      	add	ip, r8
   14d68:	464b      	mov	r3, r9
   14d6a:	4351      	muls	r1, r2
   14d6c:	4343      	muls	r3, r0
   14d6e:	0436      	lsls	r6, r6, #16
   14d70:	0c36      	lsrs	r6, r6, #16
   14d72:	0c25      	lsrs	r5, r4, #16
   14d74:	0424      	lsls	r4, r4, #16
   14d76:	4465      	add	r5, ip
   14d78:	19a4      	adds	r4, r4, r6
   14d7a:	1859      	adds	r1, r3, r1
   14d7c:	1949      	adds	r1, r1, r5
   14d7e:	0020      	movs	r0, r4
   14d80:	bc0c      	pop	{r2, r3}
   14d82:	4690      	mov	r8, r2
   14d84:	4699      	mov	r9, r3
   14d86:	bdf0      	pop	{r4, r5, r6, r7, pc}

00014d88 <__aeabi_f2uiz>:
   14d88:	219e      	movs	r1, #158	; 0x9e
   14d8a:	b510      	push	{r4, lr}
   14d8c:	05c9      	lsls	r1, r1, #23
   14d8e:	1c04      	adds	r4, r0, #0
   14d90:	f7ff ffa2 	bl	14cd8 <__aeabi_fcmpge>
   14d94:	2800      	cmp	r0, #0
   14d96:	d103      	bne.n	14da0 <__aeabi_f2uiz+0x18>
   14d98:	1c20      	adds	r0, r4, #0
   14d9a:	f000 fd65 	bl	15868 <__aeabi_f2iz>
   14d9e:	bd10      	pop	{r4, pc}
   14da0:	219e      	movs	r1, #158	; 0x9e
   14da2:	1c20      	adds	r0, r4, #0
   14da4:	05c9      	lsls	r1, r1, #23
   14da6:	f000 fbc3 	bl	15530 <__aeabi_fsub>
   14daa:	f000 fd5d 	bl	15868 <__aeabi_f2iz>
   14dae:	2380      	movs	r3, #128	; 0x80
   14db0:	061b      	lsls	r3, r3, #24
   14db2:	469c      	mov	ip, r3
   14db4:	4460      	add	r0, ip
   14db6:	e7f2      	b.n	14d9e <__aeabi_f2uiz+0x16>

00014db8 <__aeabi_d2uiz>:
   14db8:	b570      	push	{r4, r5, r6, lr}
   14dba:	2200      	movs	r2, #0
   14dbc:	4b0c      	ldr	r3, [pc, #48]	; (14df0 <__aeabi_d2uiz+0x38>)
   14dbe:	0004      	movs	r4, r0
   14dc0:	000d      	movs	r5, r1
   14dc2:	f002 fa73 	bl	172ac <__aeabi_dcmpge>
   14dc6:	2800      	cmp	r0, #0
   14dc8:	d104      	bne.n	14dd4 <__aeabi_d2uiz+0x1c>
   14dca:	0020      	movs	r0, r4
   14dcc:	0029      	movs	r1, r5
   14dce:	f002 f98b 	bl	170e8 <__aeabi_d2iz>
   14dd2:	bd70      	pop	{r4, r5, r6, pc}
   14dd4:	4b06      	ldr	r3, [pc, #24]	; (14df0 <__aeabi_d2uiz+0x38>)
   14dd6:	2200      	movs	r2, #0
   14dd8:	0020      	movs	r0, r4
   14dda:	0029      	movs	r1, r5
   14ddc:	f001 fe6e 	bl	16abc <__aeabi_dsub>
   14de0:	f002 f982 	bl	170e8 <__aeabi_d2iz>
   14de4:	2380      	movs	r3, #128	; 0x80
   14de6:	061b      	lsls	r3, r3, #24
   14de8:	469c      	mov	ip, r3
   14dea:	4460      	add	r0, ip
   14dec:	e7f1      	b.n	14dd2 <__aeabi_d2uiz+0x1a>
   14dee:	46c0      	nop			; (mov r8, r8)
   14df0:	41e00000 	.word	0x41e00000

00014df4 <__gnu_ldivmod_helper>:
   14df4:	b5f0      	push	{r4, r5, r6, r7, lr}
   14df6:	b083      	sub	sp, #12
   14df8:	0016      	movs	r6, r2
   14dfa:	001f      	movs	r7, r3
   14dfc:	9000      	str	r0, [sp, #0]
   14dfe:	9101      	str	r1, [sp, #4]
   14e00:	f002 fa7c 	bl	172fc <__divdi3>
   14e04:	0004      	movs	r4, r0
   14e06:	000d      	movs	r5, r1
   14e08:	0002      	movs	r2, r0
   14e0a:	000b      	movs	r3, r1
   14e0c:	0030      	movs	r0, r6
   14e0e:	0039      	movs	r1, r7
   14e10:	f7ff ff90 	bl	14d34 <__aeabi_lmul>
   14e14:	9a00      	ldr	r2, [sp, #0]
   14e16:	9b01      	ldr	r3, [sp, #4]
   14e18:	1a12      	subs	r2, r2, r0
   14e1a:	418b      	sbcs	r3, r1
   14e1c:	9908      	ldr	r1, [sp, #32]
   14e1e:	0020      	movs	r0, r4
   14e20:	600a      	str	r2, [r1, #0]
   14e22:	604b      	str	r3, [r1, #4]
   14e24:	0029      	movs	r1, r5
   14e26:	b003      	add	sp, #12
   14e28:	bdf0      	pop	{r4, r5, r6, r7, pc}
   14e2a:	46c0      	nop			; (mov r8, r8)

00014e2c <__aeabi_fadd>:
   14e2c:	b5f0      	push	{r4, r5, r6, r7, lr}
   14e2e:	46c6      	mov	lr, r8
   14e30:	024e      	lsls	r6, r1, #9
   14e32:	0247      	lsls	r7, r0, #9
   14e34:	0a76      	lsrs	r6, r6, #9
   14e36:	0a7b      	lsrs	r3, r7, #9
   14e38:	0044      	lsls	r4, r0, #1
   14e3a:	0fc5      	lsrs	r5, r0, #31
   14e3c:	00f7      	lsls	r7, r6, #3
   14e3e:	0048      	lsls	r0, r1, #1
   14e40:	4698      	mov	r8, r3
   14e42:	b500      	push	{lr}
   14e44:	0e24      	lsrs	r4, r4, #24
   14e46:	002a      	movs	r2, r5
   14e48:	00db      	lsls	r3, r3, #3
   14e4a:	0e00      	lsrs	r0, r0, #24
   14e4c:	0fc9      	lsrs	r1, r1, #31
   14e4e:	46bc      	mov	ip, r7
   14e50:	428d      	cmp	r5, r1
   14e52:	d067      	beq.n	14f24 <__aeabi_fadd+0xf8>
   14e54:	1a22      	subs	r2, r4, r0
   14e56:	2a00      	cmp	r2, #0
   14e58:	dc00      	bgt.n	14e5c <__aeabi_fadd+0x30>
   14e5a:	e0a5      	b.n	14fa8 <__aeabi_fadd+0x17c>
   14e5c:	2800      	cmp	r0, #0
   14e5e:	d13a      	bne.n	14ed6 <__aeabi_fadd+0xaa>
   14e60:	2f00      	cmp	r7, #0
   14e62:	d100      	bne.n	14e66 <__aeabi_fadd+0x3a>
   14e64:	e093      	b.n	14f8e <__aeabi_fadd+0x162>
   14e66:	1e51      	subs	r1, r2, #1
   14e68:	2900      	cmp	r1, #0
   14e6a:	d000      	beq.n	14e6e <__aeabi_fadd+0x42>
   14e6c:	e0bc      	b.n	14fe8 <__aeabi_fadd+0x1bc>
   14e6e:	2401      	movs	r4, #1
   14e70:	1bdb      	subs	r3, r3, r7
   14e72:	015a      	lsls	r2, r3, #5
   14e74:	d546      	bpl.n	14f04 <__aeabi_fadd+0xd8>
   14e76:	019b      	lsls	r3, r3, #6
   14e78:	099e      	lsrs	r6, r3, #6
   14e7a:	0030      	movs	r0, r6
   14e7c:	f002 fa20 	bl	172c0 <__clzsi2>
   14e80:	3805      	subs	r0, #5
   14e82:	4086      	lsls	r6, r0
   14e84:	4284      	cmp	r4, r0
   14e86:	dd00      	ble.n	14e8a <__aeabi_fadd+0x5e>
   14e88:	e09d      	b.n	14fc6 <__aeabi_fadd+0x19a>
   14e8a:	1b04      	subs	r4, r0, r4
   14e8c:	0032      	movs	r2, r6
   14e8e:	2020      	movs	r0, #32
   14e90:	3401      	adds	r4, #1
   14e92:	40e2      	lsrs	r2, r4
   14e94:	1b04      	subs	r4, r0, r4
   14e96:	40a6      	lsls	r6, r4
   14e98:	0033      	movs	r3, r6
   14e9a:	1e5e      	subs	r6, r3, #1
   14e9c:	41b3      	sbcs	r3, r6
   14e9e:	2400      	movs	r4, #0
   14ea0:	4313      	orrs	r3, r2
   14ea2:	075a      	lsls	r2, r3, #29
   14ea4:	d004      	beq.n	14eb0 <__aeabi_fadd+0x84>
   14ea6:	220f      	movs	r2, #15
   14ea8:	401a      	ands	r2, r3
   14eaa:	2a04      	cmp	r2, #4
   14eac:	d000      	beq.n	14eb0 <__aeabi_fadd+0x84>
   14eae:	3304      	adds	r3, #4
   14eb0:	015a      	lsls	r2, r3, #5
   14eb2:	d529      	bpl.n	14f08 <__aeabi_fadd+0xdc>
   14eb4:	3401      	adds	r4, #1
   14eb6:	2cff      	cmp	r4, #255	; 0xff
   14eb8:	d100      	bne.n	14ebc <__aeabi_fadd+0x90>
   14eba:	e081      	b.n	14fc0 <__aeabi_fadd+0x194>
   14ebc:	002a      	movs	r2, r5
   14ebe:	019b      	lsls	r3, r3, #6
   14ec0:	0a5b      	lsrs	r3, r3, #9
   14ec2:	b2e4      	uxtb	r4, r4
   14ec4:	025b      	lsls	r3, r3, #9
   14ec6:	05e4      	lsls	r4, r4, #23
   14ec8:	0a58      	lsrs	r0, r3, #9
   14eca:	07d2      	lsls	r2, r2, #31
   14ecc:	4320      	orrs	r0, r4
   14ece:	4310      	orrs	r0, r2
   14ed0:	bc04      	pop	{r2}
   14ed2:	4690      	mov	r8, r2
   14ed4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   14ed6:	2cff      	cmp	r4, #255	; 0xff
   14ed8:	d0e3      	beq.n	14ea2 <__aeabi_fadd+0x76>
   14eda:	2180      	movs	r1, #128	; 0x80
   14edc:	0038      	movs	r0, r7
   14ede:	04c9      	lsls	r1, r1, #19
   14ee0:	4308      	orrs	r0, r1
   14ee2:	4684      	mov	ip, r0
   14ee4:	2a1b      	cmp	r2, #27
   14ee6:	dd00      	ble.n	14eea <__aeabi_fadd+0xbe>
   14ee8:	e082      	b.n	14ff0 <__aeabi_fadd+0x1c4>
   14eea:	2020      	movs	r0, #32
   14eec:	4661      	mov	r1, ip
   14eee:	40d1      	lsrs	r1, r2
   14ef0:	1a82      	subs	r2, r0, r2
   14ef2:	4660      	mov	r0, ip
   14ef4:	4090      	lsls	r0, r2
   14ef6:	0002      	movs	r2, r0
   14ef8:	1e50      	subs	r0, r2, #1
   14efa:	4182      	sbcs	r2, r0
   14efc:	430a      	orrs	r2, r1
   14efe:	1a9b      	subs	r3, r3, r2
   14f00:	015a      	lsls	r2, r3, #5
   14f02:	d4b8      	bmi.n	14e76 <__aeabi_fadd+0x4a>
   14f04:	075a      	lsls	r2, r3, #29
   14f06:	d1ce      	bne.n	14ea6 <__aeabi_fadd+0x7a>
   14f08:	08de      	lsrs	r6, r3, #3
   14f0a:	002a      	movs	r2, r5
   14f0c:	2cff      	cmp	r4, #255	; 0xff
   14f0e:	d13a      	bne.n	14f86 <__aeabi_fadd+0x15a>
   14f10:	2e00      	cmp	r6, #0
   14f12:	d100      	bne.n	14f16 <__aeabi_fadd+0xea>
   14f14:	e0ae      	b.n	15074 <__aeabi_fadd+0x248>
   14f16:	2380      	movs	r3, #128	; 0x80
   14f18:	03db      	lsls	r3, r3, #15
   14f1a:	4333      	orrs	r3, r6
   14f1c:	025b      	lsls	r3, r3, #9
   14f1e:	0a5b      	lsrs	r3, r3, #9
   14f20:	24ff      	movs	r4, #255	; 0xff
   14f22:	e7cf      	b.n	14ec4 <__aeabi_fadd+0x98>
   14f24:	1a21      	subs	r1, r4, r0
   14f26:	2900      	cmp	r1, #0
   14f28:	dd52      	ble.n	14fd0 <__aeabi_fadd+0x1a4>
   14f2a:	2800      	cmp	r0, #0
   14f2c:	d031      	beq.n	14f92 <__aeabi_fadd+0x166>
   14f2e:	2cff      	cmp	r4, #255	; 0xff
   14f30:	d0b7      	beq.n	14ea2 <__aeabi_fadd+0x76>
   14f32:	2080      	movs	r0, #128	; 0x80
   14f34:	003e      	movs	r6, r7
   14f36:	04c0      	lsls	r0, r0, #19
   14f38:	4306      	orrs	r6, r0
   14f3a:	46b4      	mov	ip, r6
   14f3c:	291b      	cmp	r1, #27
   14f3e:	dd00      	ble.n	14f42 <__aeabi_fadd+0x116>
   14f40:	e0aa      	b.n	15098 <__aeabi_fadd+0x26c>
   14f42:	2620      	movs	r6, #32
   14f44:	4660      	mov	r0, ip
   14f46:	40c8      	lsrs	r0, r1
   14f48:	1a71      	subs	r1, r6, r1
   14f4a:	4666      	mov	r6, ip
   14f4c:	408e      	lsls	r6, r1
   14f4e:	0031      	movs	r1, r6
   14f50:	1e4e      	subs	r6, r1, #1
   14f52:	41b1      	sbcs	r1, r6
   14f54:	4301      	orrs	r1, r0
   14f56:	185b      	adds	r3, r3, r1
   14f58:	0159      	lsls	r1, r3, #5
   14f5a:	d5d3      	bpl.n	14f04 <__aeabi_fadd+0xd8>
   14f5c:	3401      	adds	r4, #1
   14f5e:	2cff      	cmp	r4, #255	; 0xff
   14f60:	d100      	bne.n	14f64 <__aeabi_fadd+0x138>
   14f62:	e087      	b.n	15074 <__aeabi_fadd+0x248>
   14f64:	2201      	movs	r2, #1
   14f66:	4978      	ldr	r1, [pc, #480]	; (15148 <__aeabi_fadd+0x31c>)
   14f68:	401a      	ands	r2, r3
   14f6a:	085b      	lsrs	r3, r3, #1
   14f6c:	400b      	ands	r3, r1
   14f6e:	4313      	orrs	r3, r2
   14f70:	e797      	b.n	14ea2 <__aeabi_fadd+0x76>
   14f72:	2c00      	cmp	r4, #0
   14f74:	d000      	beq.n	14f78 <__aeabi_fadd+0x14c>
   14f76:	e0a7      	b.n	150c8 <__aeabi_fadd+0x29c>
   14f78:	2b00      	cmp	r3, #0
   14f7a:	d000      	beq.n	14f7e <__aeabi_fadd+0x152>
   14f7c:	e0b6      	b.n	150ec <__aeabi_fadd+0x2c0>
   14f7e:	1e3b      	subs	r3, r7, #0
   14f80:	d162      	bne.n	15048 <__aeabi_fadd+0x21c>
   14f82:	2600      	movs	r6, #0
   14f84:	2200      	movs	r2, #0
   14f86:	0273      	lsls	r3, r6, #9
   14f88:	0a5b      	lsrs	r3, r3, #9
   14f8a:	b2e4      	uxtb	r4, r4
   14f8c:	e79a      	b.n	14ec4 <__aeabi_fadd+0x98>
   14f8e:	0014      	movs	r4, r2
   14f90:	e787      	b.n	14ea2 <__aeabi_fadd+0x76>
   14f92:	2f00      	cmp	r7, #0
   14f94:	d04d      	beq.n	15032 <__aeabi_fadd+0x206>
   14f96:	1e48      	subs	r0, r1, #1
   14f98:	2800      	cmp	r0, #0
   14f9a:	d157      	bne.n	1504c <__aeabi_fadd+0x220>
   14f9c:	4463      	add	r3, ip
   14f9e:	2401      	movs	r4, #1
   14fa0:	015a      	lsls	r2, r3, #5
   14fa2:	d5af      	bpl.n	14f04 <__aeabi_fadd+0xd8>
   14fa4:	2402      	movs	r4, #2
   14fa6:	e7dd      	b.n	14f64 <__aeabi_fadd+0x138>
   14fa8:	2a00      	cmp	r2, #0
   14faa:	d124      	bne.n	14ff6 <__aeabi_fadd+0x1ca>
   14fac:	1c62      	adds	r2, r4, #1
   14fae:	b2d2      	uxtb	r2, r2
   14fb0:	2a01      	cmp	r2, #1
   14fb2:	ddde      	ble.n	14f72 <__aeabi_fadd+0x146>
   14fb4:	1bde      	subs	r6, r3, r7
   14fb6:	0172      	lsls	r2, r6, #5
   14fb8:	d535      	bpl.n	15026 <__aeabi_fadd+0x1fa>
   14fba:	1afe      	subs	r6, r7, r3
   14fbc:	000d      	movs	r5, r1
   14fbe:	e75c      	b.n	14e7a <__aeabi_fadd+0x4e>
   14fc0:	002a      	movs	r2, r5
   14fc2:	2300      	movs	r3, #0
   14fc4:	e77e      	b.n	14ec4 <__aeabi_fadd+0x98>
   14fc6:	0033      	movs	r3, r6
   14fc8:	4a60      	ldr	r2, [pc, #384]	; (1514c <__aeabi_fadd+0x320>)
   14fca:	1a24      	subs	r4, r4, r0
   14fcc:	4013      	ands	r3, r2
   14fce:	e768      	b.n	14ea2 <__aeabi_fadd+0x76>
   14fd0:	2900      	cmp	r1, #0
   14fd2:	d163      	bne.n	1509c <__aeabi_fadd+0x270>
   14fd4:	1c61      	adds	r1, r4, #1
   14fd6:	b2c8      	uxtb	r0, r1
   14fd8:	2801      	cmp	r0, #1
   14fda:	dd4e      	ble.n	1507a <__aeabi_fadd+0x24e>
   14fdc:	29ff      	cmp	r1, #255	; 0xff
   14fde:	d049      	beq.n	15074 <__aeabi_fadd+0x248>
   14fe0:	4463      	add	r3, ip
   14fe2:	085b      	lsrs	r3, r3, #1
   14fe4:	000c      	movs	r4, r1
   14fe6:	e75c      	b.n	14ea2 <__aeabi_fadd+0x76>
   14fe8:	2aff      	cmp	r2, #255	; 0xff
   14fea:	d041      	beq.n	15070 <__aeabi_fadd+0x244>
   14fec:	000a      	movs	r2, r1
   14fee:	e779      	b.n	14ee4 <__aeabi_fadd+0xb8>
   14ff0:	2201      	movs	r2, #1
   14ff2:	1a9b      	subs	r3, r3, r2
   14ff4:	e784      	b.n	14f00 <__aeabi_fadd+0xd4>
   14ff6:	2c00      	cmp	r4, #0
   14ff8:	d01d      	beq.n	15036 <__aeabi_fadd+0x20a>
   14ffa:	28ff      	cmp	r0, #255	; 0xff
   14ffc:	d022      	beq.n	15044 <__aeabi_fadd+0x218>
   14ffe:	2480      	movs	r4, #128	; 0x80
   15000:	04e4      	lsls	r4, r4, #19
   15002:	4252      	negs	r2, r2
   15004:	4323      	orrs	r3, r4
   15006:	2a1b      	cmp	r2, #27
   15008:	dd00      	ble.n	1500c <__aeabi_fadd+0x1e0>
   1500a:	e08a      	b.n	15122 <__aeabi_fadd+0x2f6>
   1500c:	001c      	movs	r4, r3
   1500e:	2520      	movs	r5, #32
   15010:	40d4      	lsrs	r4, r2
   15012:	1aaa      	subs	r2, r5, r2
   15014:	4093      	lsls	r3, r2
   15016:	1e5a      	subs	r2, r3, #1
   15018:	4193      	sbcs	r3, r2
   1501a:	4323      	orrs	r3, r4
   1501c:	4662      	mov	r2, ip
   1501e:	0004      	movs	r4, r0
   15020:	1ad3      	subs	r3, r2, r3
   15022:	000d      	movs	r5, r1
   15024:	e725      	b.n	14e72 <__aeabi_fadd+0x46>
   15026:	2e00      	cmp	r6, #0
   15028:	d000      	beq.n	1502c <__aeabi_fadd+0x200>
   1502a:	e726      	b.n	14e7a <__aeabi_fadd+0x4e>
   1502c:	2200      	movs	r2, #0
   1502e:	2400      	movs	r4, #0
   15030:	e7a9      	b.n	14f86 <__aeabi_fadd+0x15a>
   15032:	000c      	movs	r4, r1
   15034:	e735      	b.n	14ea2 <__aeabi_fadd+0x76>
   15036:	2b00      	cmp	r3, #0
   15038:	d04d      	beq.n	150d6 <__aeabi_fadd+0x2aa>
   1503a:	43d2      	mvns	r2, r2
   1503c:	2a00      	cmp	r2, #0
   1503e:	d0ed      	beq.n	1501c <__aeabi_fadd+0x1f0>
   15040:	28ff      	cmp	r0, #255	; 0xff
   15042:	d1e0      	bne.n	15006 <__aeabi_fadd+0x1da>
   15044:	4663      	mov	r3, ip
   15046:	24ff      	movs	r4, #255	; 0xff
   15048:	000d      	movs	r5, r1
   1504a:	e72a      	b.n	14ea2 <__aeabi_fadd+0x76>
   1504c:	29ff      	cmp	r1, #255	; 0xff
   1504e:	d00f      	beq.n	15070 <__aeabi_fadd+0x244>
   15050:	0001      	movs	r1, r0
   15052:	e773      	b.n	14f3c <__aeabi_fadd+0x110>
   15054:	2b00      	cmp	r3, #0
   15056:	d061      	beq.n	1511c <__aeabi_fadd+0x2f0>
   15058:	24ff      	movs	r4, #255	; 0xff
   1505a:	2f00      	cmp	r7, #0
   1505c:	d100      	bne.n	15060 <__aeabi_fadd+0x234>
   1505e:	e720      	b.n	14ea2 <__aeabi_fadd+0x76>
   15060:	2280      	movs	r2, #128	; 0x80
   15062:	4641      	mov	r1, r8
   15064:	03d2      	lsls	r2, r2, #15
   15066:	4211      	tst	r1, r2
   15068:	d002      	beq.n	15070 <__aeabi_fadd+0x244>
   1506a:	4216      	tst	r6, r2
   1506c:	d100      	bne.n	15070 <__aeabi_fadd+0x244>
   1506e:	003b      	movs	r3, r7
   15070:	24ff      	movs	r4, #255	; 0xff
   15072:	e716      	b.n	14ea2 <__aeabi_fadd+0x76>
   15074:	24ff      	movs	r4, #255	; 0xff
   15076:	2300      	movs	r3, #0
   15078:	e724      	b.n	14ec4 <__aeabi_fadd+0x98>
   1507a:	2c00      	cmp	r4, #0
   1507c:	d1ea      	bne.n	15054 <__aeabi_fadd+0x228>
   1507e:	2b00      	cmp	r3, #0
   15080:	d058      	beq.n	15134 <__aeabi_fadd+0x308>
   15082:	2f00      	cmp	r7, #0
   15084:	d100      	bne.n	15088 <__aeabi_fadd+0x25c>
   15086:	e70c      	b.n	14ea2 <__aeabi_fadd+0x76>
   15088:	4463      	add	r3, ip
   1508a:	015a      	lsls	r2, r3, #5
   1508c:	d400      	bmi.n	15090 <__aeabi_fadd+0x264>
   1508e:	e739      	b.n	14f04 <__aeabi_fadd+0xd8>
   15090:	4a2e      	ldr	r2, [pc, #184]	; (1514c <__aeabi_fadd+0x320>)
   15092:	000c      	movs	r4, r1
   15094:	4013      	ands	r3, r2
   15096:	e704      	b.n	14ea2 <__aeabi_fadd+0x76>
   15098:	2101      	movs	r1, #1
   1509a:	e75c      	b.n	14f56 <__aeabi_fadd+0x12a>
   1509c:	2c00      	cmp	r4, #0
   1509e:	d11e      	bne.n	150de <__aeabi_fadd+0x2b2>
   150a0:	2b00      	cmp	r3, #0
   150a2:	d040      	beq.n	15126 <__aeabi_fadd+0x2fa>
   150a4:	43c9      	mvns	r1, r1
   150a6:	2900      	cmp	r1, #0
   150a8:	d00b      	beq.n	150c2 <__aeabi_fadd+0x296>
   150aa:	28ff      	cmp	r0, #255	; 0xff
   150ac:	d036      	beq.n	1511c <__aeabi_fadd+0x2f0>
   150ae:	291b      	cmp	r1, #27
   150b0:	dc47      	bgt.n	15142 <__aeabi_fadd+0x316>
   150b2:	001c      	movs	r4, r3
   150b4:	2620      	movs	r6, #32
   150b6:	40cc      	lsrs	r4, r1
   150b8:	1a71      	subs	r1, r6, r1
   150ba:	408b      	lsls	r3, r1
   150bc:	1e59      	subs	r1, r3, #1
   150be:	418b      	sbcs	r3, r1
   150c0:	4323      	orrs	r3, r4
   150c2:	4463      	add	r3, ip
   150c4:	0004      	movs	r4, r0
   150c6:	e747      	b.n	14f58 <__aeabi_fadd+0x12c>
   150c8:	2b00      	cmp	r3, #0
   150ca:	d118      	bne.n	150fe <__aeabi_fadd+0x2d2>
   150cc:	1e3b      	subs	r3, r7, #0
   150ce:	d02d      	beq.n	1512c <__aeabi_fadd+0x300>
   150d0:	000d      	movs	r5, r1
   150d2:	24ff      	movs	r4, #255	; 0xff
   150d4:	e6e5      	b.n	14ea2 <__aeabi_fadd+0x76>
   150d6:	003b      	movs	r3, r7
   150d8:	0004      	movs	r4, r0
   150da:	000d      	movs	r5, r1
   150dc:	e6e1      	b.n	14ea2 <__aeabi_fadd+0x76>
   150de:	28ff      	cmp	r0, #255	; 0xff
   150e0:	d01c      	beq.n	1511c <__aeabi_fadd+0x2f0>
   150e2:	2480      	movs	r4, #128	; 0x80
   150e4:	04e4      	lsls	r4, r4, #19
   150e6:	4249      	negs	r1, r1
   150e8:	4323      	orrs	r3, r4
   150ea:	e7e0      	b.n	150ae <__aeabi_fadd+0x282>
   150ec:	2f00      	cmp	r7, #0
   150ee:	d100      	bne.n	150f2 <__aeabi_fadd+0x2c6>
   150f0:	e6d7      	b.n	14ea2 <__aeabi_fadd+0x76>
   150f2:	1bde      	subs	r6, r3, r7
   150f4:	0172      	lsls	r2, r6, #5
   150f6:	d51f      	bpl.n	15138 <__aeabi_fadd+0x30c>
   150f8:	1afb      	subs	r3, r7, r3
   150fa:	000d      	movs	r5, r1
   150fc:	e6d1      	b.n	14ea2 <__aeabi_fadd+0x76>
   150fe:	24ff      	movs	r4, #255	; 0xff
   15100:	2f00      	cmp	r7, #0
   15102:	d100      	bne.n	15106 <__aeabi_fadd+0x2da>
   15104:	e6cd      	b.n	14ea2 <__aeabi_fadd+0x76>
   15106:	2280      	movs	r2, #128	; 0x80
   15108:	4640      	mov	r0, r8
   1510a:	03d2      	lsls	r2, r2, #15
   1510c:	4210      	tst	r0, r2
   1510e:	d0af      	beq.n	15070 <__aeabi_fadd+0x244>
   15110:	4216      	tst	r6, r2
   15112:	d1ad      	bne.n	15070 <__aeabi_fadd+0x244>
   15114:	003b      	movs	r3, r7
   15116:	000d      	movs	r5, r1
   15118:	24ff      	movs	r4, #255	; 0xff
   1511a:	e6c2      	b.n	14ea2 <__aeabi_fadd+0x76>
   1511c:	4663      	mov	r3, ip
   1511e:	24ff      	movs	r4, #255	; 0xff
   15120:	e6bf      	b.n	14ea2 <__aeabi_fadd+0x76>
   15122:	2301      	movs	r3, #1
   15124:	e77a      	b.n	1501c <__aeabi_fadd+0x1f0>
   15126:	003b      	movs	r3, r7
   15128:	0004      	movs	r4, r0
   1512a:	e6ba      	b.n	14ea2 <__aeabi_fadd+0x76>
   1512c:	2680      	movs	r6, #128	; 0x80
   1512e:	2200      	movs	r2, #0
   15130:	03f6      	lsls	r6, r6, #15
   15132:	e6f0      	b.n	14f16 <__aeabi_fadd+0xea>
   15134:	003b      	movs	r3, r7
   15136:	e6b4      	b.n	14ea2 <__aeabi_fadd+0x76>
   15138:	1e33      	subs	r3, r6, #0
   1513a:	d000      	beq.n	1513e <__aeabi_fadd+0x312>
   1513c:	e6e2      	b.n	14f04 <__aeabi_fadd+0xd8>
   1513e:	2200      	movs	r2, #0
   15140:	e721      	b.n	14f86 <__aeabi_fadd+0x15a>
   15142:	2301      	movs	r3, #1
   15144:	e7bd      	b.n	150c2 <__aeabi_fadd+0x296>
   15146:	46c0      	nop			; (mov r8, r8)
   15148:	7dffffff 	.word	0x7dffffff
   1514c:	fbffffff 	.word	0xfbffffff

00015150 <__aeabi_fdiv>:
   15150:	b5f0      	push	{r4, r5, r6, r7, lr}
   15152:	4657      	mov	r7, sl
   15154:	464e      	mov	r6, r9
   15156:	46de      	mov	lr, fp
   15158:	4645      	mov	r5, r8
   1515a:	b5e0      	push	{r5, r6, r7, lr}
   1515c:	0244      	lsls	r4, r0, #9
   1515e:	0043      	lsls	r3, r0, #1
   15160:	0fc6      	lsrs	r6, r0, #31
   15162:	b083      	sub	sp, #12
   15164:	1c0f      	adds	r7, r1, #0
   15166:	0a64      	lsrs	r4, r4, #9
   15168:	0e1b      	lsrs	r3, r3, #24
   1516a:	46b2      	mov	sl, r6
   1516c:	d053      	beq.n	15216 <__aeabi_fdiv+0xc6>
   1516e:	2bff      	cmp	r3, #255	; 0xff
   15170:	d027      	beq.n	151c2 <__aeabi_fdiv+0x72>
   15172:	2280      	movs	r2, #128	; 0x80
   15174:	00e4      	lsls	r4, r4, #3
   15176:	04d2      	lsls	r2, r2, #19
   15178:	4314      	orrs	r4, r2
   1517a:	227f      	movs	r2, #127	; 0x7f
   1517c:	4252      	negs	r2, r2
   1517e:	4690      	mov	r8, r2
   15180:	4498      	add	r8, r3
   15182:	2300      	movs	r3, #0
   15184:	4699      	mov	r9, r3
   15186:	469b      	mov	fp, r3
   15188:	027d      	lsls	r5, r7, #9
   1518a:	0078      	lsls	r0, r7, #1
   1518c:	0ffb      	lsrs	r3, r7, #31
   1518e:	0a6d      	lsrs	r5, r5, #9
   15190:	0e00      	lsrs	r0, r0, #24
   15192:	9300      	str	r3, [sp, #0]
   15194:	d024      	beq.n	151e0 <__aeabi_fdiv+0x90>
   15196:	28ff      	cmp	r0, #255	; 0xff
   15198:	d046      	beq.n	15228 <__aeabi_fdiv+0xd8>
   1519a:	2380      	movs	r3, #128	; 0x80
   1519c:	2100      	movs	r1, #0
   1519e:	00ed      	lsls	r5, r5, #3
   151a0:	04db      	lsls	r3, r3, #19
   151a2:	431d      	orrs	r5, r3
   151a4:	387f      	subs	r0, #127	; 0x7f
   151a6:	4647      	mov	r7, r8
   151a8:	1a38      	subs	r0, r7, r0
   151aa:	464f      	mov	r7, r9
   151ac:	430f      	orrs	r7, r1
   151ae:	00bf      	lsls	r7, r7, #2
   151b0:	46b9      	mov	r9, r7
   151b2:	0033      	movs	r3, r6
   151b4:	9a00      	ldr	r2, [sp, #0]
   151b6:	4f87      	ldr	r7, [pc, #540]	; (153d4 <__aeabi_fdiv+0x284>)
   151b8:	4053      	eors	r3, r2
   151ba:	464a      	mov	r2, r9
   151bc:	58ba      	ldr	r2, [r7, r2]
   151be:	9301      	str	r3, [sp, #4]
   151c0:	4697      	mov	pc, r2
   151c2:	2c00      	cmp	r4, #0
   151c4:	d14e      	bne.n	15264 <__aeabi_fdiv+0x114>
   151c6:	2308      	movs	r3, #8
   151c8:	4699      	mov	r9, r3
   151ca:	33f7      	adds	r3, #247	; 0xf7
   151cc:	4698      	mov	r8, r3
   151ce:	3bfd      	subs	r3, #253	; 0xfd
   151d0:	469b      	mov	fp, r3
   151d2:	027d      	lsls	r5, r7, #9
   151d4:	0078      	lsls	r0, r7, #1
   151d6:	0ffb      	lsrs	r3, r7, #31
   151d8:	0a6d      	lsrs	r5, r5, #9
   151da:	0e00      	lsrs	r0, r0, #24
   151dc:	9300      	str	r3, [sp, #0]
   151de:	d1da      	bne.n	15196 <__aeabi_fdiv+0x46>
   151e0:	2d00      	cmp	r5, #0
   151e2:	d126      	bne.n	15232 <__aeabi_fdiv+0xe2>
   151e4:	2000      	movs	r0, #0
   151e6:	2101      	movs	r1, #1
   151e8:	0033      	movs	r3, r6
   151ea:	9a00      	ldr	r2, [sp, #0]
   151ec:	4f7a      	ldr	r7, [pc, #488]	; (153d8 <__aeabi_fdiv+0x288>)
   151ee:	4053      	eors	r3, r2
   151f0:	4642      	mov	r2, r8
   151f2:	1a10      	subs	r0, r2, r0
   151f4:	464a      	mov	r2, r9
   151f6:	430a      	orrs	r2, r1
   151f8:	0092      	lsls	r2, r2, #2
   151fa:	58ba      	ldr	r2, [r7, r2]
   151fc:	001d      	movs	r5, r3
   151fe:	4697      	mov	pc, r2
   15200:	9b00      	ldr	r3, [sp, #0]
   15202:	002c      	movs	r4, r5
   15204:	469a      	mov	sl, r3
   15206:	468b      	mov	fp, r1
   15208:	465b      	mov	r3, fp
   1520a:	2b02      	cmp	r3, #2
   1520c:	d131      	bne.n	15272 <__aeabi_fdiv+0x122>
   1520e:	4653      	mov	r3, sl
   15210:	21ff      	movs	r1, #255	; 0xff
   15212:	2400      	movs	r4, #0
   15214:	e038      	b.n	15288 <__aeabi_fdiv+0x138>
   15216:	2c00      	cmp	r4, #0
   15218:	d117      	bne.n	1524a <__aeabi_fdiv+0xfa>
   1521a:	2304      	movs	r3, #4
   1521c:	4699      	mov	r9, r3
   1521e:	2300      	movs	r3, #0
   15220:	4698      	mov	r8, r3
   15222:	3301      	adds	r3, #1
   15224:	469b      	mov	fp, r3
   15226:	e7af      	b.n	15188 <__aeabi_fdiv+0x38>
   15228:	20ff      	movs	r0, #255	; 0xff
   1522a:	2d00      	cmp	r5, #0
   1522c:	d10b      	bne.n	15246 <__aeabi_fdiv+0xf6>
   1522e:	2102      	movs	r1, #2
   15230:	e7da      	b.n	151e8 <__aeabi_fdiv+0x98>
   15232:	0028      	movs	r0, r5
   15234:	f002 f844 	bl	172c0 <__clzsi2>
   15238:	1f43      	subs	r3, r0, #5
   1523a:	409d      	lsls	r5, r3
   1523c:	2376      	movs	r3, #118	; 0x76
   1523e:	425b      	negs	r3, r3
   15240:	1a18      	subs	r0, r3, r0
   15242:	2100      	movs	r1, #0
   15244:	e7af      	b.n	151a6 <__aeabi_fdiv+0x56>
   15246:	2103      	movs	r1, #3
   15248:	e7ad      	b.n	151a6 <__aeabi_fdiv+0x56>
   1524a:	0020      	movs	r0, r4
   1524c:	f002 f838 	bl	172c0 <__clzsi2>
   15250:	1f43      	subs	r3, r0, #5
   15252:	409c      	lsls	r4, r3
   15254:	2376      	movs	r3, #118	; 0x76
   15256:	425b      	negs	r3, r3
   15258:	1a1b      	subs	r3, r3, r0
   1525a:	4698      	mov	r8, r3
   1525c:	2300      	movs	r3, #0
   1525e:	4699      	mov	r9, r3
   15260:	469b      	mov	fp, r3
   15262:	e791      	b.n	15188 <__aeabi_fdiv+0x38>
   15264:	230c      	movs	r3, #12
   15266:	4699      	mov	r9, r3
   15268:	33f3      	adds	r3, #243	; 0xf3
   1526a:	4698      	mov	r8, r3
   1526c:	3bfc      	subs	r3, #252	; 0xfc
   1526e:	469b      	mov	fp, r3
   15270:	e78a      	b.n	15188 <__aeabi_fdiv+0x38>
   15272:	2b03      	cmp	r3, #3
   15274:	d100      	bne.n	15278 <__aeabi_fdiv+0x128>
   15276:	e0a5      	b.n	153c4 <__aeabi_fdiv+0x274>
   15278:	4655      	mov	r5, sl
   1527a:	2b01      	cmp	r3, #1
   1527c:	d000      	beq.n	15280 <__aeabi_fdiv+0x130>
   1527e:	e081      	b.n	15384 <__aeabi_fdiv+0x234>
   15280:	2301      	movs	r3, #1
   15282:	2100      	movs	r1, #0
   15284:	2400      	movs	r4, #0
   15286:	402b      	ands	r3, r5
   15288:	0264      	lsls	r4, r4, #9
   1528a:	05c9      	lsls	r1, r1, #23
   1528c:	0a60      	lsrs	r0, r4, #9
   1528e:	07db      	lsls	r3, r3, #31
   15290:	4308      	orrs	r0, r1
   15292:	4318      	orrs	r0, r3
   15294:	b003      	add	sp, #12
   15296:	bc3c      	pop	{r2, r3, r4, r5}
   15298:	4690      	mov	r8, r2
   1529a:	4699      	mov	r9, r3
   1529c:	46a2      	mov	sl, r4
   1529e:	46ab      	mov	fp, r5
   152a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   152a2:	2480      	movs	r4, #128	; 0x80
   152a4:	2300      	movs	r3, #0
   152a6:	03e4      	lsls	r4, r4, #15
   152a8:	21ff      	movs	r1, #255	; 0xff
   152aa:	e7ed      	b.n	15288 <__aeabi_fdiv+0x138>
   152ac:	21ff      	movs	r1, #255	; 0xff
   152ae:	2400      	movs	r4, #0
   152b0:	e7ea      	b.n	15288 <__aeabi_fdiv+0x138>
   152b2:	2301      	movs	r3, #1
   152b4:	1a59      	subs	r1, r3, r1
   152b6:	291b      	cmp	r1, #27
   152b8:	dd66      	ble.n	15388 <__aeabi_fdiv+0x238>
   152ba:	9a01      	ldr	r2, [sp, #4]
   152bc:	4013      	ands	r3, r2
   152be:	2100      	movs	r1, #0
   152c0:	2400      	movs	r4, #0
   152c2:	e7e1      	b.n	15288 <__aeabi_fdiv+0x138>
   152c4:	2380      	movs	r3, #128	; 0x80
   152c6:	03db      	lsls	r3, r3, #15
   152c8:	421c      	tst	r4, r3
   152ca:	d038      	beq.n	1533e <__aeabi_fdiv+0x1ee>
   152cc:	421d      	tst	r5, r3
   152ce:	d051      	beq.n	15374 <__aeabi_fdiv+0x224>
   152d0:	431c      	orrs	r4, r3
   152d2:	0264      	lsls	r4, r4, #9
   152d4:	0a64      	lsrs	r4, r4, #9
   152d6:	0033      	movs	r3, r6
   152d8:	21ff      	movs	r1, #255	; 0xff
   152da:	e7d5      	b.n	15288 <__aeabi_fdiv+0x138>
   152dc:	0163      	lsls	r3, r4, #5
   152de:	016c      	lsls	r4, r5, #5
   152e0:	42a3      	cmp	r3, r4
   152e2:	d23b      	bcs.n	1535c <__aeabi_fdiv+0x20c>
   152e4:	261b      	movs	r6, #27
   152e6:	2100      	movs	r1, #0
   152e8:	3801      	subs	r0, #1
   152ea:	2501      	movs	r5, #1
   152ec:	001f      	movs	r7, r3
   152ee:	0049      	lsls	r1, r1, #1
   152f0:	005b      	lsls	r3, r3, #1
   152f2:	2f00      	cmp	r7, #0
   152f4:	db01      	blt.n	152fa <__aeabi_fdiv+0x1aa>
   152f6:	429c      	cmp	r4, r3
   152f8:	d801      	bhi.n	152fe <__aeabi_fdiv+0x1ae>
   152fa:	1b1b      	subs	r3, r3, r4
   152fc:	4329      	orrs	r1, r5
   152fe:	3e01      	subs	r6, #1
   15300:	2e00      	cmp	r6, #0
   15302:	d1f3      	bne.n	152ec <__aeabi_fdiv+0x19c>
   15304:	001c      	movs	r4, r3
   15306:	1e63      	subs	r3, r4, #1
   15308:	419c      	sbcs	r4, r3
   1530a:	430c      	orrs	r4, r1
   1530c:	0001      	movs	r1, r0
   1530e:	317f      	adds	r1, #127	; 0x7f
   15310:	2900      	cmp	r1, #0
   15312:	ddce      	ble.n	152b2 <__aeabi_fdiv+0x162>
   15314:	0763      	lsls	r3, r4, #29
   15316:	d004      	beq.n	15322 <__aeabi_fdiv+0x1d2>
   15318:	230f      	movs	r3, #15
   1531a:	4023      	ands	r3, r4
   1531c:	2b04      	cmp	r3, #4
   1531e:	d000      	beq.n	15322 <__aeabi_fdiv+0x1d2>
   15320:	3404      	adds	r4, #4
   15322:	0123      	lsls	r3, r4, #4
   15324:	d503      	bpl.n	1532e <__aeabi_fdiv+0x1de>
   15326:	0001      	movs	r1, r0
   15328:	4b2c      	ldr	r3, [pc, #176]	; (153dc <__aeabi_fdiv+0x28c>)
   1532a:	3180      	adds	r1, #128	; 0x80
   1532c:	401c      	ands	r4, r3
   1532e:	29fe      	cmp	r1, #254	; 0xfe
   15330:	dd0d      	ble.n	1534e <__aeabi_fdiv+0x1fe>
   15332:	2301      	movs	r3, #1
   15334:	9a01      	ldr	r2, [sp, #4]
   15336:	21ff      	movs	r1, #255	; 0xff
   15338:	4013      	ands	r3, r2
   1533a:	2400      	movs	r4, #0
   1533c:	e7a4      	b.n	15288 <__aeabi_fdiv+0x138>
   1533e:	2380      	movs	r3, #128	; 0x80
   15340:	03db      	lsls	r3, r3, #15
   15342:	431c      	orrs	r4, r3
   15344:	0264      	lsls	r4, r4, #9
   15346:	0a64      	lsrs	r4, r4, #9
   15348:	0033      	movs	r3, r6
   1534a:	21ff      	movs	r1, #255	; 0xff
   1534c:	e79c      	b.n	15288 <__aeabi_fdiv+0x138>
   1534e:	2301      	movs	r3, #1
   15350:	9a01      	ldr	r2, [sp, #4]
   15352:	01a4      	lsls	r4, r4, #6
   15354:	0a64      	lsrs	r4, r4, #9
   15356:	b2c9      	uxtb	r1, r1
   15358:	4013      	ands	r3, r2
   1535a:	e795      	b.n	15288 <__aeabi_fdiv+0x138>
   1535c:	1b1b      	subs	r3, r3, r4
   1535e:	261a      	movs	r6, #26
   15360:	2101      	movs	r1, #1
   15362:	e7c2      	b.n	152ea <__aeabi_fdiv+0x19a>
   15364:	9b00      	ldr	r3, [sp, #0]
   15366:	468b      	mov	fp, r1
   15368:	469a      	mov	sl, r3
   1536a:	2400      	movs	r4, #0
   1536c:	e74c      	b.n	15208 <__aeabi_fdiv+0xb8>
   1536e:	0263      	lsls	r3, r4, #9
   15370:	d5e5      	bpl.n	1533e <__aeabi_fdiv+0x1ee>
   15372:	2500      	movs	r5, #0
   15374:	2480      	movs	r4, #128	; 0x80
   15376:	03e4      	lsls	r4, r4, #15
   15378:	432c      	orrs	r4, r5
   1537a:	0264      	lsls	r4, r4, #9
   1537c:	0a64      	lsrs	r4, r4, #9
   1537e:	9b00      	ldr	r3, [sp, #0]
   15380:	21ff      	movs	r1, #255	; 0xff
   15382:	e781      	b.n	15288 <__aeabi_fdiv+0x138>
   15384:	9501      	str	r5, [sp, #4]
   15386:	e7c1      	b.n	1530c <__aeabi_fdiv+0x1bc>
   15388:	0023      	movs	r3, r4
   1538a:	2020      	movs	r0, #32
   1538c:	40cb      	lsrs	r3, r1
   1538e:	1a41      	subs	r1, r0, r1
   15390:	408c      	lsls	r4, r1
   15392:	1e61      	subs	r1, r4, #1
   15394:	418c      	sbcs	r4, r1
   15396:	431c      	orrs	r4, r3
   15398:	0763      	lsls	r3, r4, #29
   1539a:	d004      	beq.n	153a6 <__aeabi_fdiv+0x256>
   1539c:	230f      	movs	r3, #15
   1539e:	4023      	ands	r3, r4
   153a0:	2b04      	cmp	r3, #4
   153a2:	d000      	beq.n	153a6 <__aeabi_fdiv+0x256>
   153a4:	3404      	adds	r4, #4
   153a6:	0163      	lsls	r3, r4, #5
   153a8:	d505      	bpl.n	153b6 <__aeabi_fdiv+0x266>
   153aa:	2301      	movs	r3, #1
   153ac:	9a01      	ldr	r2, [sp, #4]
   153ae:	2101      	movs	r1, #1
   153b0:	4013      	ands	r3, r2
   153b2:	2400      	movs	r4, #0
   153b4:	e768      	b.n	15288 <__aeabi_fdiv+0x138>
   153b6:	2301      	movs	r3, #1
   153b8:	9a01      	ldr	r2, [sp, #4]
   153ba:	01a4      	lsls	r4, r4, #6
   153bc:	0a64      	lsrs	r4, r4, #9
   153be:	4013      	ands	r3, r2
   153c0:	2100      	movs	r1, #0
   153c2:	e761      	b.n	15288 <__aeabi_fdiv+0x138>
   153c4:	2380      	movs	r3, #128	; 0x80
   153c6:	03db      	lsls	r3, r3, #15
   153c8:	431c      	orrs	r4, r3
   153ca:	0264      	lsls	r4, r4, #9
   153cc:	0a64      	lsrs	r4, r4, #9
   153ce:	4653      	mov	r3, sl
   153d0:	21ff      	movs	r1, #255	; 0xff
   153d2:	e759      	b.n	15288 <__aeabi_fdiv+0x138>
   153d4:	0001e088 	.word	0x0001e088
   153d8:	0001e0c8 	.word	0x0001e0c8
   153dc:	f7ffffff 	.word	0xf7ffffff

000153e0 <__eqsf2>:
   153e0:	b570      	push	{r4, r5, r6, lr}
   153e2:	0042      	lsls	r2, r0, #1
   153e4:	0245      	lsls	r5, r0, #9
   153e6:	024e      	lsls	r6, r1, #9
   153e8:	004c      	lsls	r4, r1, #1
   153ea:	0fc3      	lsrs	r3, r0, #31
   153ec:	0a6d      	lsrs	r5, r5, #9
   153ee:	0e12      	lsrs	r2, r2, #24
   153f0:	0a76      	lsrs	r6, r6, #9
   153f2:	0e24      	lsrs	r4, r4, #24
   153f4:	0fc9      	lsrs	r1, r1, #31
   153f6:	2001      	movs	r0, #1
   153f8:	2aff      	cmp	r2, #255	; 0xff
   153fa:	d006      	beq.n	1540a <__eqsf2+0x2a>
   153fc:	2cff      	cmp	r4, #255	; 0xff
   153fe:	d003      	beq.n	15408 <__eqsf2+0x28>
   15400:	42a2      	cmp	r2, r4
   15402:	d101      	bne.n	15408 <__eqsf2+0x28>
   15404:	42b5      	cmp	r5, r6
   15406:	d006      	beq.n	15416 <__eqsf2+0x36>
   15408:	bd70      	pop	{r4, r5, r6, pc}
   1540a:	2d00      	cmp	r5, #0
   1540c:	d1fc      	bne.n	15408 <__eqsf2+0x28>
   1540e:	2cff      	cmp	r4, #255	; 0xff
   15410:	d1fa      	bne.n	15408 <__eqsf2+0x28>
   15412:	2e00      	cmp	r6, #0
   15414:	d1f8      	bne.n	15408 <__eqsf2+0x28>
   15416:	428b      	cmp	r3, r1
   15418:	d006      	beq.n	15428 <__eqsf2+0x48>
   1541a:	2001      	movs	r0, #1
   1541c:	2a00      	cmp	r2, #0
   1541e:	d1f3      	bne.n	15408 <__eqsf2+0x28>
   15420:	0028      	movs	r0, r5
   15422:	1e45      	subs	r5, r0, #1
   15424:	41a8      	sbcs	r0, r5
   15426:	e7ef      	b.n	15408 <__eqsf2+0x28>
   15428:	2000      	movs	r0, #0
   1542a:	e7ed      	b.n	15408 <__eqsf2+0x28>

0001542c <__gesf2>:
   1542c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1542e:	0042      	lsls	r2, r0, #1
   15430:	0245      	lsls	r5, r0, #9
   15432:	024c      	lsls	r4, r1, #9
   15434:	0fc3      	lsrs	r3, r0, #31
   15436:	0048      	lsls	r0, r1, #1
   15438:	0a6d      	lsrs	r5, r5, #9
   1543a:	0e12      	lsrs	r2, r2, #24
   1543c:	0a64      	lsrs	r4, r4, #9
   1543e:	0e00      	lsrs	r0, r0, #24
   15440:	0fc9      	lsrs	r1, r1, #31
   15442:	2aff      	cmp	r2, #255	; 0xff
   15444:	d01e      	beq.n	15484 <__gesf2+0x58>
   15446:	28ff      	cmp	r0, #255	; 0xff
   15448:	d021      	beq.n	1548e <__gesf2+0x62>
   1544a:	2a00      	cmp	r2, #0
   1544c:	d10a      	bne.n	15464 <__gesf2+0x38>
   1544e:	426e      	negs	r6, r5
   15450:	416e      	adcs	r6, r5
   15452:	b2f6      	uxtb	r6, r6
   15454:	2800      	cmp	r0, #0
   15456:	d10f      	bne.n	15478 <__gesf2+0x4c>
   15458:	2c00      	cmp	r4, #0
   1545a:	d10d      	bne.n	15478 <__gesf2+0x4c>
   1545c:	2000      	movs	r0, #0
   1545e:	2d00      	cmp	r5, #0
   15460:	d009      	beq.n	15476 <__gesf2+0x4a>
   15462:	e005      	b.n	15470 <__gesf2+0x44>
   15464:	2800      	cmp	r0, #0
   15466:	d101      	bne.n	1546c <__gesf2+0x40>
   15468:	2c00      	cmp	r4, #0
   1546a:	d001      	beq.n	15470 <__gesf2+0x44>
   1546c:	428b      	cmp	r3, r1
   1546e:	d011      	beq.n	15494 <__gesf2+0x68>
   15470:	2101      	movs	r1, #1
   15472:	4258      	negs	r0, r3
   15474:	4308      	orrs	r0, r1
   15476:	bdf0      	pop	{r4, r5, r6, r7, pc}
   15478:	2e00      	cmp	r6, #0
   1547a:	d0f7      	beq.n	1546c <__gesf2+0x40>
   1547c:	2001      	movs	r0, #1
   1547e:	3901      	subs	r1, #1
   15480:	4308      	orrs	r0, r1
   15482:	e7f8      	b.n	15476 <__gesf2+0x4a>
   15484:	2d00      	cmp	r5, #0
   15486:	d0de      	beq.n	15446 <__gesf2+0x1a>
   15488:	2002      	movs	r0, #2
   1548a:	4240      	negs	r0, r0
   1548c:	e7f3      	b.n	15476 <__gesf2+0x4a>
   1548e:	2c00      	cmp	r4, #0
   15490:	d0db      	beq.n	1544a <__gesf2+0x1e>
   15492:	e7f9      	b.n	15488 <__gesf2+0x5c>
   15494:	4282      	cmp	r2, r0
   15496:	dceb      	bgt.n	15470 <__gesf2+0x44>
   15498:	db04      	blt.n	154a4 <__gesf2+0x78>
   1549a:	42a5      	cmp	r5, r4
   1549c:	d8e8      	bhi.n	15470 <__gesf2+0x44>
   1549e:	2000      	movs	r0, #0
   154a0:	42a5      	cmp	r5, r4
   154a2:	d2e8      	bcs.n	15476 <__gesf2+0x4a>
   154a4:	2101      	movs	r1, #1
   154a6:	1e58      	subs	r0, r3, #1
   154a8:	4308      	orrs	r0, r1
   154aa:	e7e4      	b.n	15476 <__gesf2+0x4a>

000154ac <__lesf2>:
   154ac:	b5f0      	push	{r4, r5, r6, r7, lr}
   154ae:	0042      	lsls	r2, r0, #1
   154b0:	024d      	lsls	r5, r1, #9
   154b2:	004c      	lsls	r4, r1, #1
   154b4:	0246      	lsls	r6, r0, #9
   154b6:	0a76      	lsrs	r6, r6, #9
   154b8:	0e12      	lsrs	r2, r2, #24
   154ba:	0fc3      	lsrs	r3, r0, #31
   154bc:	0a6d      	lsrs	r5, r5, #9
   154be:	0e24      	lsrs	r4, r4, #24
   154c0:	0fc9      	lsrs	r1, r1, #31
   154c2:	2aff      	cmp	r2, #255	; 0xff
   154c4:	d016      	beq.n	154f4 <__lesf2+0x48>
   154c6:	2cff      	cmp	r4, #255	; 0xff
   154c8:	d018      	beq.n	154fc <__lesf2+0x50>
   154ca:	2a00      	cmp	r2, #0
   154cc:	d10a      	bne.n	154e4 <__lesf2+0x38>
   154ce:	4270      	negs	r0, r6
   154d0:	4170      	adcs	r0, r6
   154d2:	b2c0      	uxtb	r0, r0
   154d4:	2c00      	cmp	r4, #0
   154d6:	d015      	beq.n	15504 <__lesf2+0x58>
   154d8:	2800      	cmp	r0, #0
   154da:	d005      	beq.n	154e8 <__lesf2+0x3c>
   154dc:	2001      	movs	r0, #1
   154de:	3901      	subs	r1, #1
   154e0:	4308      	orrs	r0, r1
   154e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   154e4:	2c00      	cmp	r4, #0
   154e6:	d013      	beq.n	15510 <__lesf2+0x64>
   154e8:	4299      	cmp	r1, r3
   154ea:	d014      	beq.n	15516 <__lesf2+0x6a>
   154ec:	2001      	movs	r0, #1
   154ee:	425b      	negs	r3, r3
   154f0:	4318      	orrs	r0, r3
   154f2:	e7f6      	b.n	154e2 <__lesf2+0x36>
   154f4:	2002      	movs	r0, #2
   154f6:	2e00      	cmp	r6, #0
   154f8:	d1f3      	bne.n	154e2 <__lesf2+0x36>
   154fa:	e7e4      	b.n	154c6 <__lesf2+0x1a>
   154fc:	2002      	movs	r0, #2
   154fe:	2d00      	cmp	r5, #0
   15500:	d1ef      	bne.n	154e2 <__lesf2+0x36>
   15502:	e7e2      	b.n	154ca <__lesf2+0x1e>
   15504:	2d00      	cmp	r5, #0
   15506:	d1e7      	bne.n	154d8 <__lesf2+0x2c>
   15508:	2000      	movs	r0, #0
   1550a:	2e00      	cmp	r6, #0
   1550c:	d0e9      	beq.n	154e2 <__lesf2+0x36>
   1550e:	e7ed      	b.n	154ec <__lesf2+0x40>
   15510:	2d00      	cmp	r5, #0
   15512:	d1e9      	bne.n	154e8 <__lesf2+0x3c>
   15514:	e7ea      	b.n	154ec <__lesf2+0x40>
   15516:	42a2      	cmp	r2, r4
   15518:	dc06      	bgt.n	15528 <__lesf2+0x7c>
   1551a:	dbdf      	blt.n	154dc <__lesf2+0x30>
   1551c:	42ae      	cmp	r6, r5
   1551e:	d803      	bhi.n	15528 <__lesf2+0x7c>
   15520:	2000      	movs	r0, #0
   15522:	42ae      	cmp	r6, r5
   15524:	d3da      	bcc.n	154dc <__lesf2+0x30>
   15526:	e7dc      	b.n	154e2 <__lesf2+0x36>
   15528:	2001      	movs	r0, #1
   1552a:	4249      	negs	r1, r1
   1552c:	4308      	orrs	r0, r1
   1552e:	e7d8      	b.n	154e2 <__lesf2+0x36>

00015530 <__aeabi_fsub>:
   15530:	b5f0      	push	{r4, r5, r6, r7, lr}
   15532:	464f      	mov	r7, r9
   15534:	46d6      	mov	lr, sl
   15536:	4646      	mov	r6, r8
   15538:	0044      	lsls	r4, r0, #1
   1553a:	b5c0      	push	{r6, r7, lr}
   1553c:	0fc2      	lsrs	r2, r0, #31
   1553e:	0247      	lsls	r7, r0, #9
   15540:	0248      	lsls	r0, r1, #9
   15542:	0a40      	lsrs	r0, r0, #9
   15544:	4684      	mov	ip, r0
   15546:	4666      	mov	r6, ip
   15548:	0a7b      	lsrs	r3, r7, #9
   1554a:	0048      	lsls	r0, r1, #1
   1554c:	0fc9      	lsrs	r1, r1, #31
   1554e:	469a      	mov	sl, r3
   15550:	0e24      	lsrs	r4, r4, #24
   15552:	0015      	movs	r5, r2
   15554:	00db      	lsls	r3, r3, #3
   15556:	0e00      	lsrs	r0, r0, #24
   15558:	4689      	mov	r9, r1
   1555a:	00f6      	lsls	r6, r6, #3
   1555c:	28ff      	cmp	r0, #255	; 0xff
   1555e:	d100      	bne.n	15562 <__aeabi_fsub+0x32>
   15560:	e08f      	b.n	15682 <__aeabi_fsub+0x152>
   15562:	2101      	movs	r1, #1
   15564:	464f      	mov	r7, r9
   15566:	404f      	eors	r7, r1
   15568:	0039      	movs	r1, r7
   1556a:	4291      	cmp	r1, r2
   1556c:	d066      	beq.n	1563c <__aeabi_fsub+0x10c>
   1556e:	1a22      	subs	r2, r4, r0
   15570:	2a00      	cmp	r2, #0
   15572:	dc00      	bgt.n	15576 <__aeabi_fsub+0x46>
   15574:	e09d      	b.n	156b2 <__aeabi_fsub+0x182>
   15576:	2800      	cmp	r0, #0
   15578:	d13d      	bne.n	155f6 <__aeabi_fsub+0xc6>
   1557a:	2e00      	cmp	r6, #0
   1557c:	d100      	bne.n	15580 <__aeabi_fsub+0x50>
   1557e:	e08b      	b.n	15698 <__aeabi_fsub+0x168>
   15580:	1e51      	subs	r1, r2, #1
   15582:	2900      	cmp	r1, #0
   15584:	d000      	beq.n	15588 <__aeabi_fsub+0x58>
   15586:	e0b5      	b.n	156f4 <__aeabi_fsub+0x1c4>
   15588:	2401      	movs	r4, #1
   1558a:	1b9b      	subs	r3, r3, r6
   1558c:	015a      	lsls	r2, r3, #5
   1558e:	d544      	bpl.n	1561a <__aeabi_fsub+0xea>
   15590:	019b      	lsls	r3, r3, #6
   15592:	099f      	lsrs	r7, r3, #6
   15594:	0038      	movs	r0, r7
   15596:	f001 fe93 	bl	172c0 <__clzsi2>
   1559a:	3805      	subs	r0, #5
   1559c:	4087      	lsls	r7, r0
   1559e:	4284      	cmp	r4, r0
   155a0:	dd00      	ble.n	155a4 <__aeabi_fsub+0x74>
   155a2:	e096      	b.n	156d2 <__aeabi_fsub+0x1a2>
   155a4:	1b04      	subs	r4, r0, r4
   155a6:	003a      	movs	r2, r7
   155a8:	2020      	movs	r0, #32
   155aa:	3401      	adds	r4, #1
   155ac:	40e2      	lsrs	r2, r4
   155ae:	1b04      	subs	r4, r0, r4
   155b0:	40a7      	lsls	r7, r4
   155b2:	003b      	movs	r3, r7
   155b4:	1e5f      	subs	r7, r3, #1
   155b6:	41bb      	sbcs	r3, r7
   155b8:	2400      	movs	r4, #0
   155ba:	4313      	orrs	r3, r2
   155bc:	075a      	lsls	r2, r3, #29
   155be:	d004      	beq.n	155ca <__aeabi_fsub+0x9a>
   155c0:	220f      	movs	r2, #15
   155c2:	401a      	ands	r2, r3
   155c4:	2a04      	cmp	r2, #4
   155c6:	d000      	beq.n	155ca <__aeabi_fsub+0x9a>
   155c8:	3304      	adds	r3, #4
   155ca:	015a      	lsls	r2, r3, #5
   155cc:	d527      	bpl.n	1561e <__aeabi_fsub+0xee>
   155ce:	3401      	adds	r4, #1
   155d0:	2cff      	cmp	r4, #255	; 0xff
   155d2:	d100      	bne.n	155d6 <__aeabi_fsub+0xa6>
   155d4:	e079      	b.n	156ca <__aeabi_fsub+0x19a>
   155d6:	2201      	movs	r2, #1
   155d8:	019b      	lsls	r3, r3, #6
   155da:	0a5b      	lsrs	r3, r3, #9
   155dc:	b2e4      	uxtb	r4, r4
   155de:	402a      	ands	r2, r5
   155e0:	025b      	lsls	r3, r3, #9
   155e2:	05e4      	lsls	r4, r4, #23
   155e4:	0a58      	lsrs	r0, r3, #9
   155e6:	07d2      	lsls	r2, r2, #31
   155e8:	4320      	orrs	r0, r4
   155ea:	4310      	orrs	r0, r2
   155ec:	bc1c      	pop	{r2, r3, r4}
   155ee:	4690      	mov	r8, r2
   155f0:	4699      	mov	r9, r3
   155f2:	46a2      	mov	sl, r4
   155f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   155f6:	2cff      	cmp	r4, #255	; 0xff
   155f8:	d0e0      	beq.n	155bc <__aeabi_fsub+0x8c>
   155fa:	2180      	movs	r1, #128	; 0x80
   155fc:	04c9      	lsls	r1, r1, #19
   155fe:	430e      	orrs	r6, r1
   15600:	2a1b      	cmp	r2, #27
   15602:	dc7b      	bgt.n	156fc <__aeabi_fsub+0x1cc>
   15604:	0031      	movs	r1, r6
   15606:	2020      	movs	r0, #32
   15608:	40d1      	lsrs	r1, r2
   1560a:	1a82      	subs	r2, r0, r2
   1560c:	4096      	lsls	r6, r2
   1560e:	1e72      	subs	r2, r6, #1
   15610:	4196      	sbcs	r6, r2
   15612:	430e      	orrs	r6, r1
   15614:	1b9b      	subs	r3, r3, r6
   15616:	015a      	lsls	r2, r3, #5
   15618:	d4ba      	bmi.n	15590 <__aeabi_fsub+0x60>
   1561a:	075a      	lsls	r2, r3, #29
   1561c:	d1d0      	bne.n	155c0 <__aeabi_fsub+0x90>
   1561e:	2201      	movs	r2, #1
   15620:	08df      	lsrs	r7, r3, #3
   15622:	402a      	ands	r2, r5
   15624:	2cff      	cmp	r4, #255	; 0xff
   15626:	d133      	bne.n	15690 <__aeabi_fsub+0x160>
   15628:	2f00      	cmp	r7, #0
   1562a:	d100      	bne.n	1562e <__aeabi_fsub+0xfe>
   1562c:	e0a8      	b.n	15780 <__aeabi_fsub+0x250>
   1562e:	2380      	movs	r3, #128	; 0x80
   15630:	03db      	lsls	r3, r3, #15
   15632:	433b      	orrs	r3, r7
   15634:	025b      	lsls	r3, r3, #9
   15636:	0a5b      	lsrs	r3, r3, #9
   15638:	24ff      	movs	r4, #255	; 0xff
   1563a:	e7d1      	b.n	155e0 <__aeabi_fsub+0xb0>
   1563c:	1a21      	subs	r1, r4, r0
   1563e:	2900      	cmp	r1, #0
   15640:	dd4c      	ble.n	156dc <__aeabi_fsub+0x1ac>
   15642:	2800      	cmp	r0, #0
   15644:	d02a      	beq.n	1569c <__aeabi_fsub+0x16c>
   15646:	2cff      	cmp	r4, #255	; 0xff
   15648:	d0b8      	beq.n	155bc <__aeabi_fsub+0x8c>
   1564a:	2080      	movs	r0, #128	; 0x80
   1564c:	04c0      	lsls	r0, r0, #19
   1564e:	4306      	orrs	r6, r0
   15650:	291b      	cmp	r1, #27
   15652:	dd00      	ble.n	15656 <__aeabi_fsub+0x126>
   15654:	e0af      	b.n	157b6 <__aeabi_fsub+0x286>
   15656:	0030      	movs	r0, r6
   15658:	2720      	movs	r7, #32
   1565a:	40c8      	lsrs	r0, r1
   1565c:	1a79      	subs	r1, r7, r1
   1565e:	408e      	lsls	r6, r1
   15660:	1e71      	subs	r1, r6, #1
   15662:	418e      	sbcs	r6, r1
   15664:	4306      	orrs	r6, r0
   15666:	199b      	adds	r3, r3, r6
   15668:	0159      	lsls	r1, r3, #5
   1566a:	d5d6      	bpl.n	1561a <__aeabi_fsub+0xea>
   1566c:	3401      	adds	r4, #1
   1566e:	2cff      	cmp	r4, #255	; 0xff
   15670:	d100      	bne.n	15674 <__aeabi_fsub+0x144>
   15672:	e085      	b.n	15780 <__aeabi_fsub+0x250>
   15674:	2201      	movs	r2, #1
   15676:	497a      	ldr	r1, [pc, #488]	; (15860 <__aeabi_fsub+0x330>)
   15678:	401a      	ands	r2, r3
   1567a:	085b      	lsrs	r3, r3, #1
   1567c:	400b      	ands	r3, r1
   1567e:	4313      	orrs	r3, r2
   15680:	e79c      	b.n	155bc <__aeabi_fsub+0x8c>
   15682:	2e00      	cmp	r6, #0
   15684:	d000      	beq.n	15688 <__aeabi_fsub+0x158>
   15686:	e770      	b.n	1556a <__aeabi_fsub+0x3a>
   15688:	e76b      	b.n	15562 <__aeabi_fsub+0x32>
   1568a:	1e3b      	subs	r3, r7, #0
   1568c:	d1c5      	bne.n	1561a <__aeabi_fsub+0xea>
   1568e:	2200      	movs	r2, #0
   15690:	027b      	lsls	r3, r7, #9
   15692:	0a5b      	lsrs	r3, r3, #9
   15694:	b2e4      	uxtb	r4, r4
   15696:	e7a3      	b.n	155e0 <__aeabi_fsub+0xb0>
   15698:	0014      	movs	r4, r2
   1569a:	e78f      	b.n	155bc <__aeabi_fsub+0x8c>
   1569c:	2e00      	cmp	r6, #0
   1569e:	d04d      	beq.n	1573c <__aeabi_fsub+0x20c>
   156a0:	1e48      	subs	r0, r1, #1
   156a2:	2800      	cmp	r0, #0
   156a4:	d157      	bne.n	15756 <__aeabi_fsub+0x226>
   156a6:	199b      	adds	r3, r3, r6
   156a8:	2401      	movs	r4, #1
   156aa:	015a      	lsls	r2, r3, #5
   156ac:	d5b5      	bpl.n	1561a <__aeabi_fsub+0xea>
   156ae:	2402      	movs	r4, #2
   156b0:	e7e0      	b.n	15674 <__aeabi_fsub+0x144>
   156b2:	2a00      	cmp	r2, #0
   156b4:	d125      	bne.n	15702 <__aeabi_fsub+0x1d2>
   156b6:	1c62      	adds	r2, r4, #1
   156b8:	b2d2      	uxtb	r2, r2
   156ba:	2a01      	cmp	r2, #1
   156bc:	dd72      	ble.n	157a4 <__aeabi_fsub+0x274>
   156be:	1b9f      	subs	r7, r3, r6
   156c0:	017a      	lsls	r2, r7, #5
   156c2:	d535      	bpl.n	15730 <__aeabi_fsub+0x200>
   156c4:	1af7      	subs	r7, r6, r3
   156c6:	000d      	movs	r5, r1
   156c8:	e764      	b.n	15594 <__aeabi_fsub+0x64>
   156ca:	2201      	movs	r2, #1
   156cc:	2300      	movs	r3, #0
   156ce:	402a      	ands	r2, r5
   156d0:	e786      	b.n	155e0 <__aeabi_fsub+0xb0>
   156d2:	003b      	movs	r3, r7
   156d4:	4a63      	ldr	r2, [pc, #396]	; (15864 <__aeabi_fsub+0x334>)
   156d6:	1a24      	subs	r4, r4, r0
   156d8:	4013      	ands	r3, r2
   156da:	e76f      	b.n	155bc <__aeabi_fsub+0x8c>
   156dc:	2900      	cmp	r1, #0
   156de:	d16c      	bne.n	157ba <__aeabi_fsub+0x28a>
   156e0:	1c61      	adds	r1, r4, #1
   156e2:	b2c8      	uxtb	r0, r1
   156e4:	2801      	cmp	r0, #1
   156e6:	dd4e      	ble.n	15786 <__aeabi_fsub+0x256>
   156e8:	29ff      	cmp	r1, #255	; 0xff
   156ea:	d049      	beq.n	15780 <__aeabi_fsub+0x250>
   156ec:	199b      	adds	r3, r3, r6
   156ee:	085b      	lsrs	r3, r3, #1
   156f0:	000c      	movs	r4, r1
   156f2:	e763      	b.n	155bc <__aeabi_fsub+0x8c>
   156f4:	2aff      	cmp	r2, #255	; 0xff
   156f6:	d041      	beq.n	1577c <__aeabi_fsub+0x24c>
   156f8:	000a      	movs	r2, r1
   156fa:	e781      	b.n	15600 <__aeabi_fsub+0xd0>
   156fc:	2601      	movs	r6, #1
   156fe:	1b9b      	subs	r3, r3, r6
   15700:	e789      	b.n	15616 <__aeabi_fsub+0xe6>
   15702:	2c00      	cmp	r4, #0
   15704:	d01c      	beq.n	15740 <__aeabi_fsub+0x210>
   15706:	28ff      	cmp	r0, #255	; 0xff
   15708:	d021      	beq.n	1574e <__aeabi_fsub+0x21e>
   1570a:	2480      	movs	r4, #128	; 0x80
   1570c:	04e4      	lsls	r4, r4, #19
   1570e:	4252      	negs	r2, r2
   15710:	4323      	orrs	r3, r4
   15712:	2a1b      	cmp	r2, #27
   15714:	dd00      	ble.n	15718 <__aeabi_fsub+0x1e8>
   15716:	e096      	b.n	15846 <__aeabi_fsub+0x316>
   15718:	001c      	movs	r4, r3
   1571a:	2520      	movs	r5, #32
   1571c:	40d4      	lsrs	r4, r2
   1571e:	1aaa      	subs	r2, r5, r2
   15720:	4093      	lsls	r3, r2
   15722:	1e5a      	subs	r2, r3, #1
   15724:	4193      	sbcs	r3, r2
   15726:	4323      	orrs	r3, r4
   15728:	1af3      	subs	r3, r6, r3
   1572a:	0004      	movs	r4, r0
   1572c:	000d      	movs	r5, r1
   1572e:	e72d      	b.n	1558c <__aeabi_fsub+0x5c>
   15730:	2f00      	cmp	r7, #0
   15732:	d000      	beq.n	15736 <__aeabi_fsub+0x206>
   15734:	e72e      	b.n	15594 <__aeabi_fsub+0x64>
   15736:	2200      	movs	r2, #0
   15738:	2400      	movs	r4, #0
   1573a:	e7a9      	b.n	15690 <__aeabi_fsub+0x160>
   1573c:	000c      	movs	r4, r1
   1573e:	e73d      	b.n	155bc <__aeabi_fsub+0x8c>
   15740:	2b00      	cmp	r3, #0
   15742:	d058      	beq.n	157f6 <__aeabi_fsub+0x2c6>
   15744:	43d2      	mvns	r2, r2
   15746:	2a00      	cmp	r2, #0
   15748:	d0ee      	beq.n	15728 <__aeabi_fsub+0x1f8>
   1574a:	28ff      	cmp	r0, #255	; 0xff
   1574c:	d1e1      	bne.n	15712 <__aeabi_fsub+0x1e2>
   1574e:	0033      	movs	r3, r6
   15750:	24ff      	movs	r4, #255	; 0xff
   15752:	000d      	movs	r5, r1
   15754:	e732      	b.n	155bc <__aeabi_fsub+0x8c>
   15756:	29ff      	cmp	r1, #255	; 0xff
   15758:	d010      	beq.n	1577c <__aeabi_fsub+0x24c>
   1575a:	0001      	movs	r1, r0
   1575c:	e778      	b.n	15650 <__aeabi_fsub+0x120>
   1575e:	2b00      	cmp	r3, #0
   15760:	d06e      	beq.n	15840 <__aeabi_fsub+0x310>
   15762:	24ff      	movs	r4, #255	; 0xff
   15764:	2e00      	cmp	r6, #0
   15766:	d100      	bne.n	1576a <__aeabi_fsub+0x23a>
   15768:	e728      	b.n	155bc <__aeabi_fsub+0x8c>
   1576a:	2280      	movs	r2, #128	; 0x80
   1576c:	4651      	mov	r1, sl
   1576e:	03d2      	lsls	r2, r2, #15
   15770:	4211      	tst	r1, r2
   15772:	d003      	beq.n	1577c <__aeabi_fsub+0x24c>
   15774:	4661      	mov	r1, ip
   15776:	4211      	tst	r1, r2
   15778:	d100      	bne.n	1577c <__aeabi_fsub+0x24c>
   1577a:	0033      	movs	r3, r6
   1577c:	24ff      	movs	r4, #255	; 0xff
   1577e:	e71d      	b.n	155bc <__aeabi_fsub+0x8c>
   15780:	24ff      	movs	r4, #255	; 0xff
   15782:	2300      	movs	r3, #0
   15784:	e72c      	b.n	155e0 <__aeabi_fsub+0xb0>
   15786:	2c00      	cmp	r4, #0
   15788:	d1e9      	bne.n	1575e <__aeabi_fsub+0x22e>
   1578a:	2b00      	cmp	r3, #0
   1578c:	d063      	beq.n	15856 <__aeabi_fsub+0x326>
   1578e:	2e00      	cmp	r6, #0
   15790:	d100      	bne.n	15794 <__aeabi_fsub+0x264>
   15792:	e713      	b.n	155bc <__aeabi_fsub+0x8c>
   15794:	199b      	adds	r3, r3, r6
   15796:	015a      	lsls	r2, r3, #5
   15798:	d400      	bmi.n	1579c <__aeabi_fsub+0x26c>
   1579a:	e73e      	b.n	1561a <__aeabi_fsub+0xea>
   1579c:	4a31      	ldr	r2, [pc, #196]	; (15864 <__aeabi_fsub+0x334>)
   1579e:	000c      	movs	r4, r1
   157a0:	4013      	ands	r3, r2
   157a2:	e70b      	b.n	155bc <__aeabi_fsub+0x8c>
   157a4:	2c00      	cmp	r4, #0
   157a6:	d11e      	bne.n	157e6 <__aeabi_fsub+0x2b6>
   157a8:	2b00      	cmp	r3, #0
   157aa:	d12f      	bne.n	1580c <__aeabi_fsub+0x2dc>
   157ac:	2e00      	cmp	r6, #0
   157ae:	d04f      	beq.n	15850 <__aeabi_fsub+0x320>
   157b0:	0033      	movs	r3, r6
   157b2:	000d      	movs	r5, r1
   157b4:	e702      	b.n	155bc <__aeabi_fsub+0x8c>
   157b6:	2601      	movs	r6, #1
   157b8:	e755      	b.n	15666 <__aeabi_fsub+0x136>
   157ba:	2c00      	cmp	r4, #0
   157bc:	d11f      	bne.n	157fe <__aeabi_fsub+0x2ce>
   157be:	2b00      	cmp	r3, #0
   157c0:	d043      	beq.n	1584a <__aeabi_fsub+0x31a>
   157c2:	43c9      	mvns	r1, r1
   157c4:	2900      	cmp	r1, #0
   157c6:	d00b      	beq.n	157e0 <__aeabi_fsub+0x2b0>
   157c8:	28ff      	cmp	r0, #255	; 0xff
   157ca:	d039      	beq.n	15840 <__aeabi_fsub+0x310>
   157cc:	291b      	cmp	r1, #27
   157ce:	dc44      	bgt.n	1585a <__aeabi_fsub+0x32a>
   157d0:	001c      	movs	r4, r3
   157d2:	2720      	movs	r7, #32
   157d4:	40cc      	lsrs	r4, r1
   157d6:	1a79      	subs	r1, r7, r1
   157d8:	408b      	lsls	r3, r1
   157da:	1e59      	subs	r1, r3, #1
   157dc:	418b      	sbcs	r3, r1
   157de:	4323      	orrs	r3, r4
   157e0:	199b      	adds	r3, r3, r6
   157e2:	0004      	movs	r4, r0
   157e4:	e740      	b.n	15668 <__aeabi_fsub+0x138>
   157e6:	2b00      	cmp	r3, #0
   157e8:	d11a      	bne.n	15820 <__aeabi_fsub+0x2f0>
   157ea:	2e00      	cmp	r6, #0
   157ec:	d124      	bne.n	15838 <__aeabi_fsub+0x308>
   157ee:	2780      	movs	r7, #128	; 0x80
   157f0:	2200      	movs	r2, #0
   157f2:	03ff      	lsls	r7, r7, #15
   157f4:	e71b      	b.n	1562e <__aeabi_fsub+0xfe>
   157f6:	0033      	movs	r3, r6
   157f8:	0004      	movs	r4, r0
   157fa:	000d      	movs	r5, r1
   157fc:	e6de      	b.n	155bc <__aeabi_fsub+0x8c>
   157fe:	28ff      	cmp	r0, #255	; 0xff
   15800:	d01e      	beq.n	15840 <__aeabi_fsub+0x310>
   15802:	2480      	movs	r4, #128	; 0x80
   15804:	04e4      	lsls	r4, r4, #19
   15806:	4249      	negs	r1, r1
   15808:	4323      	orrs	r3, r4
   1580a:	e7df      	b.n	157cc <__aeabi_fsub+0x29c>
   1580c:	2e00      	cmp	r6, #0
   1580e:	d100      	bne.n	15812 <__aeabi_fsub+0x2e2>
   15810:	e6d4      	b.n	155bc <__aeabi_fsub+0x8c>
   15812:	1b9f      	subs	r7, r3, r6
   15814:	017a      	lsls	r2, r7, #5
   15816:	d400      	bmi.n	1581a <__aeabi_fsub+0x2ea>
   15818:	e737      	b.n	1568a <__aeabi_fsub+0x15a>
   1581a:	1af3      	subs	r3, r6, r3
   1581c:	000d      	movs	r5, r1
   1581e:	e6cd      	b.n	155bc <__aeabi_fsub+0x8c>
   15820:	24ff      	movs	r4, #255	; 0xff
   15822:	2e00      	cmp	r6, #0
   15824:	d100      	bne.n	15828 <__aeabi_fsub+0x2f8>
   15826:	e6c9      	b.n	155bc <__aeabi_fsub+0x8c>
   15828:	2280      	movs	r2, #128	; 0x80
   1582a:	4650      	mov	r0, sl
   1582c:	03d2      	lsls	r2, r2, #15
   1582e:	4210      	tst	r0, r2
   15830:	d0a4      	beq.n	1577c <__aeabi_fsub+0x24c>
   15832:	4660      	mov	r0, ip
   15834:	4210      	tst	r0, r2
   15836:	d1a1      	bne.n	1577c <__aeabi_fsub+0x24c>
   15838:	0033      	movs	r3, r6
   1583a:	000d      	movs	r5, r1
   1583c:	24ff      	movs	r4, #255	; 0xff
   1583e:	e6bd      	b.n	155bc <__aeabi_fsub+0x8c>
   15840:	0033      	movs	r3, r6
   15842:	24ff      	movs	r4, #255	; 0xff
   15844:	e6ba      	b.n	155bc <__aeabi_fsub+0x8c>
   15846:	2301      	movs	r3, #1
   15848:	e76e      	b.n	15728 <__aeabi_fsub+0x1f8>
   1584a:	0033      	movs	r3, r6
   1584c:	0004      	movs	r4, r0
   1584e:	e6b5      	b.n	155bc <__aeabi_fsub+0x8c>
   15850:	2700      	movs	r7, #0
   15852:	2200      	movs	r2, #0
   15854:	e71c      	b.n	15690 <__aeabi_fsub+0x160>
   15856:	0033      	movs	r3, r6
   15858:	e6b0      	b.n	155bc <__aeabi_fsub+0x8c>
   1585a:	2301      	movs	r3, #1
   1585c:	e7c0      	b.n	157e0 <__aeabi_fsub+0x2b0>
   1585e:	46c0      	nop			; (mov r8, r8)
   15860:	7dffffff 	.word	0x7dffffff
   15864:	fbffffff 	.word	0xfbffffff

00015868 <__aeabi_f2iz>:
   15868:	0241      	lsls	r1, r0, #9
   1586a:	0043      	lsls	r3, r0, #1
   1586c:	0fc2      	lsrs	r2, r0, #31
   1586e:	0a49      	lsrs	r1, r1, #9
   15870:	0e1b      	lsrs	r3, r3, #24
   15872:	2000      	movs	r0, #0
   15874:	2b7e      	cmp	r3, #126	; 0x7e
   15876:	dd0d      	ble.n	15894 <__aeabi_f2iz+0x2c>
   15878:	2b9d      	cmp	r3, #157	; 0x9d
   1587a:	dc0c      	bgt.n	15896 <__aeabi_f2iz+0x2e>
   1587c:	2080      	movs	r0, #128	; 0x80
   1587e:	0400      	lsls	r0, r0, #16
   15880:	4301      	orrs	r1, r0
   15882:	2b95      	cmp	r3, #149	; 0x95
   15884:	dc0a      	bgt.n	1589c <__aeabi_f2iz+0x34>
   15886:	2096      	movs	r0, #150	; 0x96
   15888:	1ac3      	subs	r3, r0, r3
   1588a:	40d9      	lsrs	r1, r3
   1588c:	4248      	negs	r0, r1
   1588e:	2a00      	cmp	r2, #0
   15890:	d100      	bne.n	15894 <__aeabi_f2iz+0x2c>
   15892:	0008      	movs	r0, r1
   15894:	4770      	bx	lr
   15896:	4b03      	ldr	r3, [pc, #12]	; (158a4 <__aeabi_f2iz+0x3c>)
   15898:	18d0      	adds	r0, r2, r3
   1589a:	e7fb      	b.n	15894 <__aeabi_f2iz+0x2c>
   1589c:	3b96      	subs	r3, #150	; 0x96
   1589e:	4099      	lsls	r1, r3
   158a0:	e7f4      	b.n	1588c <__aeabi_f2iz+0x24>
   158a2:	46c0      	nop			; (mov r8, r8)
   158a4:	7fffffff 	.word	0x7fffffff

000158a8 <__aeabi_ui2f>:
   158a8:	b510      	push	{r4, lr}
   158aa:	1e04      	subs	r4, r0, #0
   158ac:	d027      	beq.n	158fe <__aeabi_ui2f+0x56>
   158ae:	f001 fd07 	bl	172c0 <__clzsi2>
   158b2:	239e      	movs	r3, #158	; 0x9e
   158b4:	1a1b      	subs	r3, r3, r0
   158b6:	2b96      	cmp	r3, #150	; 0x96
   158b8:	dc0a      	bgt.n	158d0 <__aeabi_ui2f+0x28>
   158ba:	2296      	movs	r2, #150	; 0x96
   158bc:	1ad2      	subs	r2, r2, r3
   158be:	4094      	lsls	r4, r2
   158c0:	0264      	lsls	r4, r4, #9
   158c2:	0a64      	lsrs	r4, r4, #9
   158c4:	b2db      	uxtb	r3, r3
   158c6:	0264      	lsls	r4, r4, #9
   158c8:	05db      	lsls	r3, r3, #23
   158ca:	0a60      	lsrs	r0, r4, #9
   158cc:	4318      	orrs	r0, r3
   158ce:	bd10      	pop	{r4, pc}
   158d0:	2b99      	cmp	r3, #153	; 0x99
   158d2:	dc17      	bgt.n	15904 <__aeabi_ui2f+0x5c>
   158d4:	2299      	movs	r2, #153	; 0x99
   158d6:	1ad2      	subs	r2, r2, r3
   158d8:	2a00      	cmp	r2, #0
   158da:	dd27      	ble.n	1592c <__aeabi_ui2f+0x84>
   158dc:	4094      	lsls	r4, r2
   158de:	0022      	movs	r2, r4
   158e0:	4c13      	ldr	r4, [pc, #76]	; (15930 <__aeabi_ui2f+0x88>)
   158e2:	4014      	ands	r4, r2
   158e4:	0751      	lsls	r1, r2, #29
   158e6:	d004      	beq.n	158f2 <__aeabi_ui2f+0x4a>
   158e8:	210f      	movs	r1, #15
   158ea:	400a      	ands	r2, r1
   158ec:	2a04      	cmp	r2, #4
   158ee:	d000      	beq.n	158f2 <__aeabi_ui2f+0x4a>
   158f0:	3404      	adds	r4, #4
   158f2:	0162      	lsls	r2, r4, #5
   158f4:	d412      	bmi.n	1591c <__aeabi_ui2f+0x74>
   158f6:	01a4      	lsls	r4, r4, #6
   158f8:	0a64      	lsrs	r4, r4, #9
   158fa:	b2db      	uxtb	r3, r3
   158fc:	e7e3      	b.n	158c6 <__aeabi_ui2f+0x1e>
   158fe:	2300      	movs	r3, #0
   15900:	2400      	movs	r4, #0
   15902:	e7e0      	b.n	158c6 <__aeabi_ui2f+0x1e>
   15904:	22b9      	movs	r2, #185	; 0xb9
   15906:	0021      	movs	r1, r4
   15908:	1ad2      	subs	r2, r2, r3
   1590a:	4091      	lsls	r1, r2
   1590c:	000a      	movs	r2, r1
   1590e:	1e51      	subs	r1, r2, #1
   15910:	418a      	sbcs	r2, r1
   15912:	2105      	movs	r1, #5
   15914:	1a09      	subs	r1, r1, r0
   15916:	40cc      	lsrs	r4, r1
   15918:	4314      	orrs	r4, r2
   1591a:	e7db      	b.n	158d4 <__aeabi_ui2f+0x2c>
   1591c:	4b04      	ldr	r3, [pc, #16]	; (15930 <__aeabi_ui2f+0x88>)
   1591e:	401c      	ands	r4, r3
   15920:	239f      	movs	r3, #159	; 0x9f
   15922:	01a4      	lsls	r4, r4, #6
   15924:	1a1b      	subs	r3, r3, r0
   15926:	0a64      	lsrs	r4, r4, #9
   15928:	b2db      	uxtb	r3, r3
   1592a:	e7cc      	b.n	158c6 <__aeabi_ui2f+0x1e>
   1592c:	0022      	movs	r2, r4
   1592e:	e7d7      	b.n	158e0 <__aeabi_ui2f+0x38>
   15930:	fbffffff 	.word	0xfbffffff

00015934 <__aeabi_dadd>:
   15934:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15936:	4645      	mov	r5, r8
   15938:	46de      	mov	lr, fp
   1593a:	4657      	mov	r7, sl
   1593c:	464e      	mov	r6, r9
   1593e:	030c      	lsls	r4, r1, #12
   15940:	b5e0      	push	{r5, r6, r7, lr}
   15942:	004e      	lsls	r6, r1, #1
   15944:	0fc9      	lsrs	r1, r1, #31
   15946:	4688      	mov	r8, r1
   15948:	000d      	movs	r5, r1
   1594a:	0a61      	lsrs	r1, r4, #9
   1594c:	0f44      	lsrs	r4, r0, #29
   1594e:	430c      	orrs	r4, r1
   15950:	00c7      	lsls	r7, r0, #3
   15952:	0319      	lsls	r1, r3, #12
   15954:	0058      	lsls	r0, r3, #1
   15956:	0fdb      	lsrs	r3, r3, #31
   15958:	469b      	mov	fp, r3
   1595a:	0a4b      	lsrs	r3, r1, #9
   1595c:	0f51      	lsrs	r1, r2, #29
   1595e:	430b      	orrs	r3, r1
   15960:	0d76      	lsrs	r6, r6, #21
   15962:	0d40      	lsrs	r0, r0, #21
   15964:	0019      	movs	r1, r3
   15966:	00d2      	lsls	r2, r2, #3
   15968:	45d8      	cmp	r8, fp
   1596a:	d100      	bne.n	1596e <__aeabi_dadd+0x3a>
   1596c:	e0ae      	b.n	15acc <__aeabi_dadd+0x198>
   1596e:	1a35      	subs	r5, r6, r0
   15970:	2d00      	cmp	r5, #0
   15972:	dc00      	bgt.n	15976 <__aeabi_dadd+0x42>
   15974:	e0f6      	b.n	15b64 <__aeabi_dadd+0x230>
   15976:	2800      	cmp	r0, #0
   15978:	d10f      	bne.n	1599a <__aeabi_dadd+0x66>
   1597a:	4313      	orrs	r3, r2
   1597c:	d100      	bne.n	15980 <__aeabi_dadd+0x4c>
   1597e:	e0db      	b.n	15b38 <__aeabi_dadd+0x204>
   15980:	1e6b      	subs	r3, r5, #1
   15982:	2b00      	cmp	r3, #0
   15984:	d000      	beq.n	15988 <__aeabi_dadd+0x54>
   15986:	e137      	b.n	15bf8 <__aeabi_dadd+0x2c4>
   15988:	1aba      	subs	r2, r7, r2
   1598a:	4297      	cmp	r7, r2
   1598c:	41bf      	sbcs	r7, r7
   1598e:	1a64      	subs	r4, r4, r1
   15990:	427f      	negs	r7, r7
   15992:	1be4      	subs	r4, r4, r7
   15994:	2601      	movs	r6, #1
   15996:	0017      	movs	r7, r2
   15998:	e024      	b.n	159e4 <__aeabi_dadd+0xb0>
   1599a:	4bc6      	ldr	r3, [pc, #792]	; (15cb4 <__aeabi_dadd+0x380>)
   1599c:	429e      	cmp	r6, r3
   1599e:	d04d      	beq.n	15a3c <__aeabi_dadd+0x108>
   159a0:	2380      	movs	r3, #128	; 0x80
   159a2:	041b      	lsls	r3, r3, #16
   159a4:	4319      	orrs	r1, r3
   159a6:	2d38      	cmp	r5, #56	; 0x38
   159a8:	dd00      	ble.n	159ac <__aeabi_dadd+0x78>
   159aa:	e107      	b.n	15bbc <__aeabi_dadd+0x288>
   159ac:	2d1f      	cmp	r5, #31
   159ae:	dd00      	ble.n	159b2 <__aeabi_dadd+0x7e>
   159b0:	e138      	b.n	15c24 <__aeabi_dadd+0x2f0>
   159b2:	2020      	movs	r0, #32
   159b4:	1b43      	subs	r3, r0, r5
   159b6:	469a      	mov	sl, r3
   159b8:	000b      	movs	r3, r1
   159ba:	4650      	mov	r0, sl
   159bc:	4083      	lsls	r3, r0
   159be:	4699      	mov	r9, r3
   159c0:	0013      	movs	r3, r2
   159c2:	4648      	mov	r0, r9
   159c4:	40eb      	lsrs	r3, r5
   159c6:	4318      	orrs	r0, r3
   159c8:	0003      	movs	r3, r0
   159ca:	4650      	mov	r0, sl
   159cc:	4082      	lsls	r2, r0
   159ce:	1e50      	subs	r0, r2, #1
   159d0:	4182      	sbcs	r2, r0
   159d2:	40e9      	lsrs	r1, r5
   159d4:	431a      	orrs	r2, r3
   159d6:	1aba      	subs	r2, r7, r2
   159d8:	1a61      	subs	r1, r4, r1
   159da:	4297      	cmp	r7, r2
   159dc:	41a4      	sbcs	r4, r4
   159de:	0017      	movs	r7, r2
   159e0:	4264      	negs	r4, r4
   159e2:	1b0c      	subs	r4, r1, r4
   159e4:	0223      	lsls	r3, r4, #8
   159e6:	d562      	bpl.n	15aae <__aeabi_dadd+0x17a>
   159e8:	0264      	lsls	r4, r4, #9
   159ea:	0a65      	lsrs	r5, r4, #9
   159ec:	2d00      	cmp	r5, #0
   159ee:	d100      	bne.n	159f2 <__aeabi_dadd+0xbe>
   159f0:	e0df      	b.n	15bb2 <__aeabi_dadd+0x27e>
   159f2:	0028      	movs	r0, r5
   159f4:	f001 fc64 	bl	172c0 <__clzsi2>
   159f8:	0003      	movs	r3, r0
   159fa:	3b08      	subs	r3, #8
   159fc:	2b1f      	cmp	r3, #31
   159fe:	dd00      	ble.n	15a02 <__aeabi_dadd+0xce>
   15a00:	e0d2      	b.n	15ba8 <__aeabi_dadd+0x274>
   15a02:	2220      	movs	r2, #32
   15a04:	003c      	movs	r4, r7
   15a06:	1ad2      	subs	r2, r2, r3
   15a08:	409d      	lsls	r5, r3
   15a0a:	40d4      	lsrs	r4, r2
   15a0c:	409f      	lsls	r7, r3
   15a0e:	4325      	orrs	r5, r4
   15a10:	429e      	cmp	r6, r3
   15a12:	dd00      	ble.n	15a16 <__aeabi_dadd+0xe2>
   15a14:	e0c4      	b.n	15ba0 <__aeabi_dadd+0x26c>
   15a16:	1b9e      	subs	r6, r3, r6
   15a18:	1c73      	adds	r3, r6, #1
   15a1a:	2b1f      	cmp	r3, #31
   15a1c:	dd00      	ble.n	15a20 <__aeabi_dadd+0xec>
   15a1e:	e0f1      	b.n	15c04 <__aeabi_dadd+0x2d0>
   15a20:	2220      	movs	r2, #32
   15a22:	0038      	movs	r0, r7
   15a24:	0029      	movs	r1, r5
   15a26:	1ad2      	subs	r2, r2, r3
   15a28:	40d8      	lsrs	r0, r3
   15a2a:	4091      	lsls	r1, r2
   15a2c:	4097      	lsls	r7, r2
   15a2e:	002c      	movs	r4, r5
   15a30:	4301      	orrs	r1, r0
   15a32:	1e78      	subs	r0, r7, #1
   15a34:	4187      	sbcs	r7, r0
   15a36:	40dc      	lsrs	r4, r3
   15a38:	2600      	movs	r6, #0
   15a3a:	430f      	orrs	r7, r1
   15a3c:	077b      	lsls	r3, r7, #29
   15a3e:	d009      	beq.n	15a54 <__aeabi_dadd+0x120>
   15a40:	230f      	movs	r3, #15
   15a42:	403b      	ands	r3, r7
   15a44:	2b04      	cmp	r3, #4
   15a46:	d005      	beq.n	15a54 <__aeabi_dadd+0x120>
   15a48:	1d3b      	adds	r3, r7, #4
   15a4a:	42bb      	cmp	r3, r7
   15a4c:	41bf      	sbcs	r7, r7
   15a4e:	427f      	negs	r7, r7
   15a50:	19e4      	adds	r4, r4, r7
   15a52:	001f      	movs	r7, r3
   15a54:	0223      	lsls	r3, r4, #8
   15a56:	d52c      	bpl.n	15ab2 <__aeabi_dadd+0x17e>
   15a58:	4b96      	ldr	r3, [pc, #600]	; (15cb4 <__aeabi_dadd+0x380>)
   15a5a:	3601      	adds	r6, #1
   15a5c:	429e      	cmp	r6, r3
   15a5e:	d100      	bne.n	15a62 <__aeabi_dadd+0x12e>
   15a60:	e09a      	b.n	15b98 <__aeabi_dadd+0x264>
   15a62:	4645      	mov	r5, r8
   15a64:	4b94      	ldr	r3, [pc, #592]	; (15cb8 <__aeabi_dadd+0x384>)
   15a66:	08ff      	lsrs	r7, r7, #3
   15a68:	401c      	ands	r4, r3
   15a6a:	0760      	lsls	r0, r4, #29
   15a6c:	0576      	lsls	r6, r6, #21
   15a6e:	0264      	lsls	r4, r4, #9
   15a70:	4307      	orrs	r7, r0
   15a72:	0b24      	lsrs	r4, r4, #12
   15a74:	0d76      	lsrs	r6, r6, #21
   15a76:	2100      	movs	r1, #0
   15a78:	0324      	lsls	r4, r4, #12
   15a7a:	0b23      	lsrs	r3, r4, #12
   15a7c:	0d0c      	lsrs	r4, r1, #20
   15a7e:	4a8f      	ldr	r2, [pc, #572]	; (15cbc <__aeabi_dadd+0x388>)
   15a80:	0524      	lsls	r4, r4, #20
   15a82:	431c      	orrs	r4, r3
   15a84:	4014      	ands	r4, r2
   15a86:	0533      	lsls	r3, r6, #20
   15a88:	4323      	orrs	r3, r4
   15a8a:	005b      	lsls	r3, r3, #1
   15a8c:	07ed      	lsls	r5, r5, #31
   15a8e:	085b      	lsrs	r3, r3, #1
   15a90:	432b      	orrs	r3, r5
   15a92:	0038      	movs	r0, r7
   15a94:	0019      	movs	r1, r3
   15a96:	bc3c      	pop	{r2, r3, r4, r5}
   15a98:	4690      	mov	r8, r2
   15a9a:	4699      	mov	r9, r3
   15a9c:	46a2      	mov	sl, r4
   15a9e:	46ab      	mov	fp, r5
   15aa0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   15aa2:	4664      	mov	r4, ip
   15aa4:	4304      	orrs	r4, r0
   15aa6:	d100      	bne.n	15aaa <__aeabi_dadd+0x176>
   15aa8:	e211      	b.n	15ece <__aeabi_dadd+0x59a>
   15aaa:	0004      	movs	r4, r0
   15aac:	4667      	mov	r7, ip
   15aae:	077b      	lsls	r3, r7, #29
   15ab0:	d1c6      	bne.n	15a40 <__aeabi_dadd+0x10c>
   15ab2:	4645      	mov	r5, r8
   15ab4:	0760      	lsls	r0, r4, #29
   15ab6:	08ff      	lsrs	r7, r7, #3
   15ab8:	4307      	orrs	r7, r0
   15aba:	08e4      	lsrs	r4, r4, #3
   15abc:	4b7d      	ldr	r3, [pc, #500]	; (15cb4 <__aeabi_dadd+0x380>)
   15abe:	429e      	cmp	r6, r3
   15ac0:	d030      	beq.n	15b24 <__aeabi_dadd+0x1f0>
   15ac2:	0324      	lsls	r4, r4, #12
   15ac4:	0576      	lsls	r6, r6, #21
   15ac6:	0b24      	lsrs	r4, r4, #12
   15ac8:	0d76      	lsrs	r6, r6, #21
   15aca:	e7d4      	b.n	15a76 <__aeabi_dadd+0x142>
   15acc:	1a33      	subs	r3, r6, r0
   15ace:	469a      	mov	sl, r3
   15ad0:	2b00      	cmp	r3, #0
   15ad2:	dd78      	ble.n	15bc6 <__aeabi_dadd+0x292>
   15ad4:	2800      	cmp	r0, #0
   15ad6:	d031      	beq.n	15b3c <__aeabi_dadd+0x208>
   15ad8:	4876      	ldr	r0, [pc, #472]	; (15cb4 <__aeabi_dadd+0x380>)
   15ada:	4286      	cmp	r6, r0
   15adc:	d0ae      	beq.n	15a3c <__aeabi_dadd+0x108>
   15ade:	2080      	movs	r0, #128	; 0x80
   15ae0:	0400      	lsls	r0, r0, #16
   15ae2:	4301      	orrs	r1, r0
   15ae4:	4653      	mov	r3, sl
   15ae6:	2b38      	cmp	r3, #56	; 0x38
   15ae8:	dc00      	bgt.n	15aec <__aeabi_dadd+0x1b8>
   15aea:	e0e9      	b.n	15cc0 <__aeabi_dadd+0x38c>
   15aec:	430a      	orrs	r2, r1
   15aee:	1e51      	subs	r1, r2, #1
   15af0:	418a      	sbcs	r2, r1
   15af2:	2100      	movs	r1, #0
   15af4:	19d2      	adds	r2, r2, r7
   15af6:	42ba      	cmp	r2, r7
   15af8:	41bf      	sbcs	r7, r7
   15afa:	1909      	adds	r1, r1, r4
   15afc:	427c      	negs	r4, r7
   15afe:	0017      	movs	r7, r2
   15b00:	190c      	adds	r4, r1, r4
   15b02:	0223      	lsls	r3, r4, #8
   15b04:	d5d3      	bpl.n	15aae <__aeabi_dadd+0x17a>
   15b06:	4b6b      	ldr	r3, [pc, #428]	; (15cb4 <__aeabi_dadd+0x380>)
   15b08:	3601      	adds	r6, #1
   15b0a:	429e      	cmp	r6, r3
   15b0c:	d100      	bne.n	15b10 <__aeabi_dadd+0x1dc>
   15b0e:	e13a      	b.n	15d86 <__aeabi_dadd+0x452>
   15b10:	2001      	movs	r0, #1
   15b12:	4b69      	ldr	r3, [pc, #420]	; (15cb8 <__aeabi_dadd+0x384>)
   15b14:	401c      	ands	r4, r3
   15b16:	087b      	lsrs	r3, r7, #1
   15b18:	4007      	ands	r7, r0
   15b1a:	431f      	orrs	r7, r3
   15b1c:	07e0      	lsls	r0, r4, #31
   15b1e:	4307      	orrs	r7, r0
   15b20:	0864      	lsrs	r4, r4, #1
   15b22:	e78b      	b.n	15a3c <__aeabi_dadd+0x108>
   15b24:	0023      	movs	r3, r4
   15b26:	433b      	orrs	r3, r7
   15b28:	d100      	bne.n	15b2c <__aeabi_dadd+0x1f8>
   15b2a:	e1cb      	b.n	15ec4 <__aeabi_dadd+0x590>
   15b2c:	2280      	movs	r2, #128	; 0x80
   15b2e:	0312      	lsls	r2, r2, #12
   15b30:	4314      	orrs	r4, r2
   15b32:	0324      	lsls	r4, r4, #12
   15b34:	0b24      	lsrs	r4, r4, #12
   15b36:	e79e      	b.n	15a76 <__aeabi_dadd+0x142>
   15b38:	002e      	movs	r6, r5
   15b3a:	e77f      	b.n	15a3c <__aeabi_dadd+0x108>
   15b3c:	0008      	movs	r0, r1
   15b3e:	4310      	orrs	r0, r2
   15b40:	d100      	bne.n	15b44 <__aeabi_dadd+0x210>
   15b42:	e0b4      	b.n	15cae <__aeabi_dadd+0x37a>
   15b44:	1e58      	subs	r0, r3, #1
   15b46:	2800      	cmp	r0, #0
   15b48:	d000      	beq.n	15b4c <__aeabi_dadd+0x218>
   15b4a:	e0de      	b.n	15d0a <__aeabi_dadd+0x3d6>
   15b4c:	18ba      	adds	r2, r7, r2
   15b4e:	42ba      	cmp	r2, r7
   15b50:	419b      	sbcs	r3, r3
   15b52:	1864      	adds	r4, r4, r1
   15b54:	425b      	negs	r3, r3
   15b56:	18e4      	adds	r4, r4, r3
   15b58:	0017      	movs	r7, r2
   15b5a:	2601      	movs	r6, #1
   15b5c:	0223      	lsls	r3, r4, #8
   15b5e:	d5a6      	bpl.n	15aae <__aeabi_dadd+0x17a>
   15b60:	2602      	movs	r6, #2
   15b62:	e7d5      	b.n	15b10 <__aeabi_dadd+0x1dc>
   15b64:	2d00      	cmp	r5, #0
   15b66:	d16e      	bne.n	15c46 <__aeabi_dadd+0x312>
   15b68:	1c70      	adds	r0, r6, #1
   15b6a:	0540      	lsls	r0, r0, #21
   15b6c:	0d40      	lsrs	r0, r0, #21
   15b6e:	2801      	cmp	r0, #1
   15b70:	dc00      	bgt.n	15b74 <__aeabi_dadd+0x240>
   15b72:	e0f9      	b.n	15d68 <__aeabi_dadd+0x434>
   15b74:	1ab8      	subs	r0, r7, r2
   15b76:	4684      	mov	ip, r0
   15b78:	4287      	cmp	r7, r0
   15b7a:	4180      	sbcs	r0, r0
   15b7c:	1ae5      	subs	r5, r4, r3
   15b7e:	4240      	negs	r0, r0
   15b80:	1a2d      	subs	r5, r5, r0
   15b82:	0228      	lsls	r0, r5, #8
   15b84:	d400      	bmi.n	15b88 <__aeabi_dadd+0x254>
   15b86:	e089      	b.n	15c9c <__aeabi_dadd+0x368>
   15b88:	1bd7      	subs	r7, r2, r7
   15b8a:	42ba      	cmp	r2, r7
   15b8c:	4192      	sbcs	r2, r2
   15b8e:	1b1c      	subs	r4, r3, r4
   15b90:	4252      	negs	r2, r2
   15b92:	1aa5      	subs	r5, r4, r2
   15b94:	46d8      	mov	r8, fp
   15b96:	e729      	b.n	159ec <__aeabi_dadd+0xb8>
   15b98:	4645      	mov	r5, r8
   15b9a:	2400      	movs	r4, #0
   15b9c:	2700      	movs	r7, #0
   15b9e:	e76a      	b.n	15a76 <__aeabi_dadd+0x142>
   15ba0:	4c45      	ldr	r4, [pc, #276]	; (15cb8 <__aeabi_dadd+0x384>)
   15ba2:	1af6      	subs	r6, r6, r3
   15ba4:	402c      	ands	r4, r5
   15ba6:	e749      	b.n	15a3c <__aeabi_dadd+0x108>
   15ba8:	003d      	movs	r5, r7
   15baa:	3828      	subs	r0, #40	; 0x28
   15bac:	4085      	lsls	r5, r0
   15bae:	2700      	movs	r7, #0
   15bb0:	e72e      	b.n	15a10 <__aeabi_dadd+0xdc>
   15bb2:	0038      	movs	r0, r7
   15bb4:	f001 fb84 	bl	172c0 <__clzsi2>
   15bb8:	3020      	adds	r0, #32
   15bba:	e71d      	b.n	159f8 <__aeabi_dadd+0xc4>
   15bbc:	430a      	orrs	r2, r1
   15bbe:	1e51      	subs	r1, r2, #1
   15bc0:	418a      	sbcs	r2, r1
   15bc2:	2100      	movs	r1, #0
   15bc4:	e707      	b.n	159d6 <__aeabi_dadd+0xa2>
   15bc6:	2b00      	cmp	r3, #0
   15bc8:	d000      	beq.n	15bcc <__aeabi_dadd+0x298>
   15bca:	e0f3      	b.n	15db4 <__aeabi_dadd+0x480>
   15bcc:	1c70      	adds	r0, r6, #1
   15bce:	0543      	lsls	r3, r0, #21
   15bd0:	0d5b      	lsrs	r3, r3, #21
   15bd2:	2b01      	cmp	r3, #1
   15bd4:	dc00      	bgt.n	15bd8 <__aeabi_dadd+0x2a4>
   15bd6:	e0ad      	b.n	15d34 <__aeabi_dadd+0x400>
   15bd8:	4b36      	ldr	r3, [pc, #216]	; (15cb4 <__aeabi_dadd+0x380>)
   15bda:	4298      	cmp	r0, r3
   15bdc:	d100      	bne.n	15be0 <__aeabi_dadd+0x2ac>
   15bde:	e0d1      	b.n	15d84 <__aeabi_dadd+0x450>
   15be0:	18ba      	adds	r2, r7, r2
   15be2:	42ba      	cmp	r2, r7
   15be4:	41bf      	sbcs	r7, r7
   15be6:	1864      	adds	r4, r4, r1
   15be8:	427f      	negs	r7, r7
   15bea:	19e4      	adds	r4, r4, r7
   15bec:	07e7      	lsls	r7, r4, #31
   15bee:	0852      	lsrs	r2, r2, #1
   15bf0:	4317      	orrs	r7, r2
   15bf2:	0864      	lsrs	r4, r4, #1
   15bf4:	0006      	movs	r6, r0
   15bf6:	e721      	b.n	15a3c <__aeabi_dadd+0x108>
   15bf8:	482e      	ldr	r0, [pc, #184]	; (15cb4 <__aeabi_dadd+0x380>)
   15bfa:	4285      	cmp	r5, r0
   15bfc:	d100      	bne.n	15c00 <__aeabi_dadd+0x2cc>
   15bfe:	e093      	b.n	15d28 <__aeabi_dadd+0x3f4>
   15c00:	001d      	movs	r5, r3
   15c02:	e6d0      	b.n	159a6 <__aeabi_dadd+0x72>
   15c04:	0029      	movs	r1, r5
   15c06:	3e1f      	subs	r6, #31
   15c08:	40f1      	lsrs	r1, r6
   15c0a:	2b20      	cmp	r3, #32
   15c0c:	d100      	bne.n	15c10 <__aeabi_dadd+0x2dc>
   15c0e:	e08d      	b.n	15d2c <__aeabi_dadd+0x3f8>
   15c10:	2240      	movs	r2, #64	; 0x40
   15c12:	1ad3      	subs	r3, r2, r3
   15c14:	409d      	lsls	r5, r3
   15c16:	432f      	orrs	r7, r5
   15c18:	1e7d      	subs	r5, r7, #1
   15c1a:	41af      	sbcs	r7, r5
   15c1c:	2400      	movs	r4, #0
   15c1e:	430f      	orrs	r7, r1
   15c20:	2600      	movs	r6, #0
   15c22:	e744      	b.n	15aae <__aeabi_dadd+0x17a>
   15c24:	002b      	movs	r3, r5
   15c26:	0008      	movs	r0, r1
   15c28:	3b20      	subs	r3, #32
   15c2a:	40d8      	lsrs	r0, r3
   15c2c:	0003      	movs	r3, r0
   15c2e:	2d20      	cmp	r5, #32
   15c30:	d100      	bne.n	15c34 <__aeabi_dadd+0x300>
   15c32:	e07d      	b.n	15d30 <__aeabi_dadd+0x3fc>
   15c34:	2040      	movs	r0, #64	; 0x40
   15c36:	1b45      	subs	r5, r0, r5
   15c38:	40a9      	lsls	r1, r5
   15c3a:	430a      	orrs	r2, r1
   15c3c:	1e51      	subs	r1, r2, #1
   15c3e:	418a      	sbcs	r2, r1
   15c40:	2100      	movs	r1, #0
   15c42:	431a      	orrs	r2, r3
   15c44:	e6c7      	b.n	159d6 <__aeabi_dadd+0xa2>
   15c46:	2e00      	cmp	r6, #0
   15c48:	d050      	beq.n	15cec <__aeabi_dadd+0x3b8>
   15c4a:	4e1a      	ldr	r6, [pc, #104]	; (15cb4 <__aeabi_dadd+0x380>)
   15c4c:	42b0      	cmp	r0, r6
   15c4e:	d057      	beq.n	15d00 <__aeabi_dadd+0x3cc>
   15c50:	2680      	movs	r6, #128	; 0x80
   15c52:	426b      	negs	r3, r5
   15c54:	4699      	mov	r9, r3
   15c56:	0436      	lsls	r6, r6, #16
   15c58:	4334      	orrs	r4, r6
   15c5a:	464b      	mov	r3, r9
   15c5c:	2b38      	cmp	r3, #56	; 0x38
   15c5e:	dd00      	ble.n	15c62 <__aeabi_dadd+0x32e>
   15c60:	e0d6      	b.n	15e10 <__aeabi_dadd+0x4dc>
   15c62:	2b1f      	cmp	r3, #31
   15c64:	dd00      	ble.n	15c68 <__aeabi_dadd+0x334>
   15c66:	e135      	b.n	15ed4 <__aeabi_dadd+0x5a0>
   15c68:	2620      	movs	r6, #32
   15c6a:	1af5      	subs	r5, r6, r3
   15c6c:	0026      	movs	r6, r4
   15c6e:	40ae      	lsls	r6, r5
   15c70:	46b2      	mov	sl, r6
   15c72:	003e      	movs	r6, r7
   15c74:	40de      	lsrs	r6, r3
   15c76:	46ac      	mov	ip, r5
   15c78:	0035      	movs	r5, r6
   15c7a:	4656      	mov	r6, sl
   15c7c:	432e      	orrs	r6, r5
   15c7e:	4665      	mov	r5, ip
   15c80:	40af      	lsls	r7, r5
   15c82:	1e7d      	subs	r5, r7, #1
   15c84:	41af      	sbcs	r7, r5
   15c86:	40dc      	lsrs	r4, r3
   15c88:	4337      	orrs	r7, r6
   15c8a:	1bd7      	subs	r7, r2, r7
   15c8c:	42ba      	cmp	r2, r7
   15c8e:	4192      	sbcs	r2, r2
   15c90:	1b0c      	subs	r4, r1, r4
   15c92:	4252      	negs	r2, r2
   15c94:	1aa4      	subs	r4, r4, r2
   15c96:	0006      	movs	r6, r0
   15c98:	46d8      	mov	r8, fp
   15c9a:	e6a3      	b.n	159e4 <__aeabi_dadd+0xb0>
   15c9c:	4664      	mov	r4, ip
   15c9e:	4667      	mov	r7, ip
   15ca0:	432c      	orrs	r4, r5
   15ca2:	d000      	beq.n	15ca6 <__aeabi_dadd+0x372>
   15ca4:	e6a2      	b.n	159ec <__aeabi_dadd+0xb8>
   15ca6:	2500      	movs	r5, #0
   15ca8:	2600      	movs	r6, #0
   15caa:	2700      	movs	r7, #0
   15cac:	e706      	b.n	15abc <__aeabi_dadd+0x188>
   15cae:	001e      	movs	r6, r3
   15cb0:	e6c4      	b.n	15a3c <__aeabi_dadd+0x108>
   15cb2:	46c0      	nop			; (mov r8, r8)
   15cb4:	000007ff 	.word	0x000007ff
   15cb8:	ff7fffff 	.word	0xff7fffff
   15cbc:	800fffff 	.word	0x800fffff
   15cc0:	2b1f      	cmp	r3, #31
   15cc2:	dc63      	bgt.n	15d8c <__aeabi_dadd+0x458>
   15cc4:	2020      	movs	r0, #32
   15cc6:	1ac3      	subs	r3, r0, r3
   15cc8:	0008      	movs	r0, r1
   15cca:	4098      	lsls	r0, r3
   15ccc:	469c      	mov	ip, r3
   15cce:	4683      	mov	fp, r0
   15cd0:	4653      	mov	r3, sl
   15cd2:	0010      	movs	r0, r2
   15cd4:	40d8      	lsrs	r0, r3
   15cd6:	0003      	movs	r3, r0
   15cd8:	4658      	mov	r0, fp
   15cda:	4318      	orrs	r0, r3
   15cdc:	4663      	mov	r3, ip
   15cde:	409a      	lsls	r2, r3
   15ce0:	1e53      	subs	r3, r2, #1
   15ce2:	419a      	sbcs	r2, r3
   15ce4:	4653      	mov	r3, sl
   15ce6:	4302      	orrs	r2, r0
   15ce8:	40d9      	lsrs	r1, r3
   15cea:	e703      	b.n	15af4 <__aeabi_dadd+0x1c0>
   15cec:	0026      	movs	r6, r4
   15cee:	433e      	orrs	r6, r7
   15cf0:	d006      	beq.n	15d00 <__aeabi_dadd+0x3cc>
   15cf2:	43eb      	mvns	r3, r5
   15cf4:	4699      	mov	r9, r3
   15cf6:	2b00      	cmp	r3, #0
   15cf8:	d0c7      	beq.n	15c8a <__aeabi_dadd+0x356>
   15cfa:	4e94      	ldr	r6, [pc, #592]	; (15f4c <__aeabi_dadd+0x618>)
   15cfc:	42b0      	cmp	r0, r6
   15cfe:	d1ac      	bne.n	15c5a <__aeabi_dadd+0x326>
   15d00:	000c      	movs	r4, r1
   15d02:	0017      	movs	r7, r2
   15d04:	0006      	movs	r6, r0
   15d06:	46d8      	mov	r8, fp
   15d08:	e698      	b.n	15a3c <__aeabi_dadd+0x108>
   15d0a:	4b90      	ldr	r3, [pc, #576]	; (15f4c <__aeabi_dadd+0x618>)
   15d0c:	459a      	cmp	sl, r3
   15d0e:	d00b      	beq.n	15d28 <__aeabi_dadd+0x3f4>
   15d10:	4682      	mov	sl, r0
   15d12:	e6e7      	b.n	15ae4 <__aeabi_dadd+0x1b0>
   15d14:	2800      	cmp	r0, #0
   15d16:	d000      	beq.n	15d1a <__aeabi_dadd+0x3e6>
   15d18:	e09e      	b.n	15e58 <__aeabi_dadd+0x524>
   15d1a:	0018      	movs	r0, r3
   15d1c:	4310      	orrs	r0, r2
   15d1e:	d100      	bne.n	15d22 <__aeabi_dadd+0x3ee>
   15d20:	e0e9      	b.n	15ef6 <__aeabi_dadd+0x5c2>
   15d22:	001c      	movs	r4, r3
   15d24:	0017      	movs	r7, r2
   15d26:	46d8      	mov	r8, fp
   15d28:	4e88      	ldr	r6, [pc, #544]	; (15f4c <__aeabi_dadd+0x618>)
   15d2a:	e687      	b.n	15a3c <__aeabi_dadd+0x108>
   15d2c:	2500      	movs	r5, #0
   15d2e:	e772      	b.n	15c16 <__aeabi_dadd+0x2e2>
   15d30:	2100      	movs	r1, #0
   15d32:	e782      	b.n	15c3a <__aeabi_dadd+0x306>
   15d34:	0023      	movs	r3, r4
   15d36:	433b      	orrs	r3, r7
   15d38:	2e00      	cmp	r6, #0
   15d3a:	d000      	beq.n	15d3e <__aeabi_dadd+0x40a>
   15d3c:	e0ab      	b.n	15e96 <__aeabi_dadd+0x562>
   15d3e:	2b00      	cmp	r3, #0
   15d40:	d100      	bne.n	15d44 <__aeabi_dadd+0x410>
   15d42:	e0e7      	b.n	15f14 <__aeabi_dadd+0x5e0>
   15d44:	000b      	movs	r3, r1
   15d46:	4313      	orrs	r3, r2
   15d48:	d100      	bne.n	15d4c <__aeabi_dadd+0x418>
   15d4a:	e677      	b.n	15a3c <__aeabi_dadd+0x108>
   15d4c:	18ba      	adds	r2, r7, r2
   15d4e:	42ba      	cmp	r2, r7
   15d50:	41bf      	sbcs	r7, r7
   15d52:	1864      	adds	r4, r4, r1
   15d54:	427f      	negs	r7, r7
   15d56:	19e4      	adds	r4, r4, r7
   15d58:	0223      	lsls	r3, r4, #8
   15d5a:	d400      	bmi.n	15d5e <__aeabi_dadd+0x42a>
   15d5c:	e0f2      	b.n	15f44 <__aeabi_dadd+0x610>
   15d5e:	4b7c      	ldr	r3, [pc, #496]	; (15f50 <__aeabi_dadd+0x61c>)
   15d60:	0017      	movs	r7, r2
   15d62:	401c      	ands	r4, r3
   15d64:	0006      	movs	r6, r0
   15d66:	e669      	b.n	15a3c <__aeabi_dadd+0x108>
   15d68:	0020      	movs	r0, r4
   15d6a:	4338      	orrs	r0, r7
   15d6c:	2e00      	cmp	r6, #0
   15d6e:	d1d1      	bne.n	15d14 <__aeabi_dadd+0x3e0>
   15d70:	2800      	cmp	r0, #0
   15d72:	d15b      	bne.n	15e2c <__aeabi_dadd+0x4f8>
   15d74:	001c      	movs	r4, r3
   15d76:	4314      	orrs	r4, r2
   15d78:	d100      	bne.n	15d7c <__aeabi_dadd+0x448>
   15d7a:	e0a8      	b.n	15ece <__aeabi_dadd+0x59a>
   15d7c:	001c      	movs	r4, r3
   15d7e:	0017      	movs	r7, r2
   15d80:	46d8      	mov	r8, fp
   15d82:	e65b      	b.n	15a3c <__aeabi_dadd+0x108>
   15d84:	0006      	movs	r6, r0
   15d86:	2400      	movs	r4, #0
   15d88:	2700      	movs	r7, #0
   15d8a:	e697      	b.n	15abc <__aeabi_dadd+0x188>
   15d8c:	4650      	mov	r0, sl
   15d8e:	000b      	movs	r3, r1
   15d90:	3820      	subs	r0, #32
   15d92:	40c3      	lsrs	r3, r0
   15d94:	4699      	mov	r9, r3
   15d96:	4653      	mov	r3, sl
   15d98:	2b20      	cmp	r3, #32
   15d9a:	d100      	bne.n	15d9e <__aeabi_dadd+0x46a>
   15d9c:	e095      	b.n	15eca <__aeabi_dadd+0x596>
   15d9e:	2340      	movs	r3, #64	; 0x40
   15da0:	4650      	mov	r0, sl
   15da2:	1a1b      	subs	r3, r3, r0
   15da4:	4099      	lsls	r1, r3
   15da6:	430a      	orrs	r2, r1
   15da8:	1e51      	subs	r1, r2, #1
   15daa:	418a      	sbcs	r2, r1
   15dac:	464b      	mov	r3, r9
   15dae:	2100      	movs	r1, #0
   15db0:	431a      	orrs	r2, r3
   15db2:	e69f      	b.n	15af4 <__aeabi_dadd+0x1c0>
   15db4:	2e00      	cmp	r6, #0
   15db6:	d130      	bne.n	15e1a <__aeabi_dadd+0x4e6>
   15db8:	0026      	movs	r6, r4
   15dba:	433e      	orrs	r6, r7
   15dbc:	d067      	beq.n	15e8e <__aeabi_dadd+0x55a>
   15dbe:	43db      	mvns	r3, r3
   15dc0:	469a      	mov	sl, r3
   15dc2:	2b00      	cmp	r3, #0
   15dc4:	d01c      	beq.n	15e00 <__aeabi_dadd+0x4cc>
   15dc6:	4e61      	ldr	r6, [pc, #388]	; (15f4c <__aeabi_dadd+0x618>)
   15dc8:	42b0      	cmp	r0, r6
   15dca:	d060      	beq.n	15e8e <__aeabi_dadd+0x55a>
   15dcc:	4653      	mov	r3, sl
   15dce:	2b38      	cmp	r3, #56	; 0x38
   15dd0:	dd00      	ble.n	15dd4 <__aeabi_dadd+0x4a0>
   15dd2:	e096      	b.n	15f02 <__aeabi_dadd+0x5ce>
   15dd4:	2b1f      	cmp	r3, #31
   15dd6:	dd00      	ble.n	15dda <__aeabi_dadd+0x4a6>
   15dd8:	e09f      	b.n	15f1a <__aeabi_dadd+0x5e6>
   15dda:	2620      	movs	r6, #32
   15ddc:	1af3      	subs	r3, r6, r3
   15dde:	0026      	movs	r6, r4
   15de0:	409e      	lsls	r6, r3
   15de2:	469c      	mov	ip, r3
   15de4:	46b3      	mov	fp, r6
   15de6:	4653      	mov	r3, sl
   15de8:	003e      	movs	r6, r7
   15dea:	40de      	lsrs	r6, r3
   15dec:	0033      	movs	r3, r6
   15dee:	465e      	mov	r6, fp
   15df0:	431e      	orrs	r6, r3
   15df2:	4663      	mov	r3, ip
   15df4:	409f      	lsls	r7, r3
   15df6:	1e7b      	subs	r3, r7, #1
   15df8:	419f      	sbcs	r7, r3
   15dfa:	4653      	mov	r3, sl
   15dfc:	40dc      	lsrs	r4, r3
   15dfe:	4337      	orrs	r7, r6
   15e00:	18bf      	adds	r7, r7, r2
   15e02:	4297      	cmp	r7, r2
   15e04:	4192      	sbcs	r2, r2
   15e06:	1864      	adds	r4, r4, r1
   15e08:	4252      	negs	r2, r2
   15e0a:	18a4      	adds	r4, r4, r2
   15e0c:	0006      	movs	r6, r0
   15e0e:	e678      	b.n	15b02 <__aeabi_dadd+0x1ce>
   15e10:	4327      	orrs	r7, r4
   15e12:	1e7c      	subs	r4, r7, #1
   15e14:	41a7      	sbcs	r7, r4
   15e16:	2400      	movs	r4, #0
   15e18:	e737      	b.n	15c8a <__aeabi_dadd+0x356>
   15e1a:	4e4c      	ldr	r6, [pc, #304]	; (15f4c <__aeabi_dadd+0x618>)
   15e1c:	42b0      	cmp	r0, r6
   15e1e:	d036      	beq.n	15e8e <__aeabi_dadd+0x55a>
   15e20:	2680      	movs	r6, #128	; 0x80
   15e22:	425b      	negs	r3, r3
   15e24:	0436      	lsls	r6, r6, #16
   15e26:	469a      	mov	sl, r3
   15e28:	4334      	orrs	r4, r6
   15e2a:	e7cf      	b.n	15dcc <__aeabi_dadd+0x498>
   15e2c:	0018      	movs	r0, r3
   15e2e:	4310      	orrs	r0, r2
   15e30:	d100      	bne.n	15e34 <__aeabi_dadd+0x500>
   15e32:	e603      	b.n	15a3c <__aeabi_dadd+0x108>
   15e34:	1ab8      	subs	r0, r7, r2
   15e36:	4684      	mov	ip, r0
   15e38:	4567      	cmp	r7, ip
   15e3a:	41ad      	sbcs	r5, r5
   15e3c:	1ae0      	subs	r0, r4, r3
   15e3e:	426d      	negs	r5, r5
   15e40:	1b40      	subs	r0, r0, r5
   15e42:	0205      	lsls	r5, r0, #8
   15e44:	d400      	bmi.n	15e48 <__aeabi_dadd+0x514>
   15e46:	e62c      	b.n	15aa2 <__aeabi_dadd+0x16e>
   15e48:	1bd7      	subs	r7, r2, r7
   15e4a:	42ba      	cmp	r2, r7
   15e4c:	4192      	sbcs	r2, r2
   15e4e:	1b1c      	subs	r4, r3, r4
   15e50:	4252      	negs	r2, r2
   15e52:	1aa4      	subs	r4, r4, r2
   15e54:	46d8      	mov	r8, fp
   15e56:	e5f1      	b.n	15a3c <__aeabi_dadd+0x108>
   15e58:	0018      	movs	r0, r3
   15e5a:	4310      	orrs	r0, r2
   15e5c:	d100      	bne.n	15e60 <__aeabi_dadd+0x52c>
   15e5e:	e763      	b.n	15d28 <__aeabi_dadd+0x3f4>
   15e60:	08f8      	lsrs	r0, r7, #3
   15e62:	0767      	lsls	r7, r4, #29
   15e64:	4307      	orrs	r7, r0
   15e66:	2080      	movs	r0, #128	; 0x80
   15e68:	08e4      	lsrs	r4, r4, #3
   15e6a:	0300      	lsls	r0, r0, #12
   15e6c:	4204      	tst	r4, r0
   15e6e:	d008      	beq.n	15e82 <__aeabi_dadd+0x54e>
   15e70:	08dd      	lsrs	r5, r3, #3
   15e72:	4205      	tst	r5, r0
   15e74:	d105      	bne.n	15e82 <__aeabi_dadd+0x54e>
   15e76:	08d2      	lsrs	r2, r2, #3
   15e78:	0759      	lsls	r1, r3, #29
   15e7a:	4311      	orrs	r1, r2
   15e7c:	000f      	movs	r7, r1
   15e7e:	002c      	movs	r4, r5
   15e80:	46d8      	mov	r8, fp
   15e82:	0f7b      	lsrs	r3, r7, #29
   15e84:	00e4      	lsls	r4, r4, #3
   15e86:	431c      	orrs	r4, r3
   15e88:	00ff      	lsls	r7, r7, #3
   15e8a:	4e30      	ldr	r6, [pc, #192]	; (15f4c <__aeabi_dadd+0x618>)
   15e8c:	e5d6      	b.n	15a3c <__aeabi_dadd+0x108>
   15e8e:	000c      	movs	r4, r1
   15e90:	0017      	movs	r7, r2
   15e92:	0006      	movs	r6, r0
   15e94:	e5d2      	b.n	15a3c <__aeabi_dadd+0x108>
   15e96:	2b00      	cmp	r3, #0
   15e98:	d038      	beq.n	15f0c <__aeabi_dadd+0x5d8>
   15e9a:	000b      	movs	r3, r1
   15e9c:	4313      	orrs	r3, r2
   15e9e:	d100      	bne.n	15ea2 <__aeabi_dadd+0x56e>
   15ea0:	e742      	b.n	15d28 <__aeabi_dadd+0x3f4>
   15ea2:	08f8      	lsrs	r0, r7, #3
   15ea4:	0767      	lsls	r7, r4, #29
   15ea6:	4307      	orrs	r7, r0
   15ea8:	2080      	movs	r0, #128	; 0x80
   15eaa:	08e4      	lsrs	r4, r4, #3
   15eac:	0300      	lsls	r0, r0, #12
   15eae:	4204      	tst	r4, r0
   15eb0:	d0e7      	beq.n	15e82 <__aeabi_dadd+0x54e>
   15eb2:	08cb      	lsrs	r3, r1, #3
   15eb4:	4203      	tst	r3, r0
   15eb6:	d1e4      	bne.n	15e82 <__aeabi_dadd+0x54e>
   15eb8:	08d2      	lsrs	r2, r2, #3
   15eba:	0749      	lsls	r1, r1, #29
   15ebc:	4311      	orrs	r1, r2
   15ebe:	000f      	movs	r7, r1
   15ec0:	001c      	movs	r4, r3
   15ec2:	e7de      	b.n	15e82 <__aeabi_dadd+0x54e>
   15ec4:	2700      	movs	r7, #0
   15ec6:	2400      	movs	r4, #0
   15ec8:	e5d5      	b.n	15a76 <__aeabi_dadd+0x142>
   15eca:	2100      	movs	r1, #0
   15ecc:	e76b      	b.n	15da6 <__aeabi_dadd+0x472>
   15ece:	2500      	movs	r5, #0
   15ed0:	2700      	movs	r7, #0
   15ed2:	e5f3      	b.n	15abc <__aeabi_dadd+0x188>
   15ed4:	464e      	mov	r6, r9
   15ed6:	0025      	movs	r5, r4
   15ed8:	3e20      	subs	r6, #32
   15eda:	40f5      	lsrs	r5, r6
   15edc:	464b      	mov	r3, r9
   15ede:	002e      	movs	r6, r5
   15ee0:	2b20      	cmp	r3, #32
   15ee2:	d02d      	beq.n	15f40 <__aeabi_dadd+0x60c>
   15ee4:	2540      	movs	r5, #64	; 0x40
   15ee6:	1aed      	subs	r5, r5, r3
   15ee8:	40ac      	lsls	r4, r5
   15eea:	4327      	orrs	r7, r4
   15eec:	1e7c      	subs	r4, r7, #1
   15eee:	41a7      	sbcs	r7, r4
   15ef0:	2400      	movs	r4, #0
   15ef2:	4337      	orrs	r7, r6
   15ef4:	e6c9      	b.n	15c8a <__aeabi_dadd+0x356>
   15ef6:	2480      	movs	r4, #128	; 0x80
   15ef8:	2500      	movs	r5, #0
   15efa:	0324      	lsls	r4, r4, #12
   15efc:	4e13      	ldr	r6, [pc, #76]	; (15f4c <__aeabi_dadd+0x618>)
   15efe:	2700      	movs	r7, #0
   15f00:	e5dc      	b.n	15abc <__aeabi_dadd+0x188>
   15f02:	4327      	orrs	r7, r4
   15f04:	1e7c      	subs	r4, r7, #1
   15f06:	41a7      	sbcs	r7, r4
   15f08:	2400      	movs	r4, #0
   15f0a:	e779      	b.n	15e00 <__aeabi_dadd+0x4cc>
   15f0c:	000c      	movs	r4, r1
   15f0e:	0017      	movs	r7, r2
   15f10:	4e0e      	ldr	r6, [pc, #56]	; (15f4c <__aeabi_dadd+0x618>)
   15f12:	e593      	b.n	15a3c <__aeabi_dadd+0x108>
   15f14:	000c      	movs	r4, r1
   15f16:	0017      	movs	r7, r2
   15f18:	e590      	b.n	15a3c <__aeabi_dadd+0x108>
   15f1a:	4656      	mov	r6, sl
   15f1c:	0023      	movs	r3, r4
   15f1e:	3e20      	subs	r6, #32
   15f20:	40f3      	lsrs	r3, r6
   15f22:	4699      	mov	r9, r3
   15f24:	4653      	mov	r3, sl
   15f26:	2b20      	cmp	r3, #32
   15f28:	d00e      	beq.n	15f48 <__aeabi_dadd+0x614>
   15f2a:	2340      	movs	r3, #64	; 0x40
   15f2c:	4656      	mov	r6, sl
   15f2e:	1b9b      	subs	r3, r3, r6
   15f30:	409c      	lsls	r4, r3
   15f32:	4327      	orrs	r7, r4
   15f34:	1e7c      	subs	r4, r7, #1
   15f36:	41a7      	sbcs	r7, r4
   15f38:	464b      	mov	r3, r9
   15f3a:	2400      	movs	r4, #0
   15f3c:	431f      	orrs	r7, r3
   15f3e:	e75f      	b.n	15e00 <__aeabi_dadd+0x4cc>
   15f40:	2400      	movs	r4, #0
   15f42:	e7d2      	b.n	15eea <__aeabi_dadd+0x5b6>
   15f44:	0017      	movs	r7, r2
   15f46:	e5b2      	b.n	15aae <__aeabi_dadd+0x17a>
   15f48:	2400      	movs	r4, #0
   15f4a:	e7f2      	b.n	15f32 <__aeabi_dadd+0x5fe>
   15f4c:	000007ff 	.word	0x000007ff
   15f50:	ff7fffff 	.word	0xff7fffff

00015f54 <__aeabi_ddiv>:
   15f54:	b5f0      	push	{r4, r5, r6, r7, lr}
   15f56:	4657      	mov	r7, sl
   15f58:	4645      	mov	r5, r8
   15f5a:	46de      	mov	lr, fp
   15f5c:	464e      	mov	r6, r9
   15f5e:	b5e0      	push	{r5, r6, r7, lr}
   15f60:	004c      	lsls	r4, r1, #1
   15f62:	030e      	lsls	r6, r1, #12
   15f64:	b087      	sub	sp, #28
   15f66:	4683      	mov	fp, r0
   15f68:	4692      	mov	sl, r2
   15f6a:	001d      	movs	r5, r3
   15f6c:	4680      	mov	r8, r0
   15f6e:	0b36      	lsrs	r6, r6, #12
   15f70:	0d64      	lsrs	r4, r4, #21
   15f72:	0fcf      	lsrs	r7, r1, #31
   15f74:	2c00      	cmp	r4, #0
   15f76:	d04f      	beq.n	16018 <__aeabi_ddiv+0xc4>
   15f78:	4b6f      	ldr	r3, [pc, #444]	; (16138 <__aeabi_ddiv+0x1e4>)
   15f7a:	429c      	cmp	r4, r3
   15f7c:	d035      	beq.n	15fea <__aeabi_ddiv+0x96>
   15f7e:	2380      	movs	r3, #128	; 0x80
   15f80:	0f42      	lsrs	r2, r0, #29
   15f82:	041b      	lsls	r3, r3, #16
   15f84:	00f6      	lsls	r6, r6, #3
   15f86:	4313      	orrs	r3, r2
   15f88:	4333      	orrs	r3, r6
   15f8a:	4699      	mov	r9, r3
   15f8c:	00c3      	lsls	r3, r0, #3
   15f8e:	4698      	mov	r8, r3
   15f90:	4b6a      	ldr	r3, [pc, #424]	; (1613c <__aeabi_ddiv+0x1e8>)
   15f92:	2600      	movs	r6, #0
   15f94:	469c      	mov	ip, r3
   15f96:	2300      	movs	r3, #0
   15f98:	4464      	add	r4, ip
   15f9a:	9303      	str	r3, [sp, #12]
   15f9c:	032b      	lsls	r3, r5, #12
   15f9e:	0b1b      	lsrs	r3, r3, #12
   15fa0:	469b      	mov	fp, r3
   15fa2:	006b      	lsls	r3, r5, #1
   15fa4:	0fed      	lsrs	r5, r5, #31
   15fa6:	4650      	mov	r0, sl
   15fa8:	0d5b      	lsrs	r3, r3, #21
   15faa:	9501      	str	r5, [sp, #4]
   15fac:	d05e      	beq.n	1606c <__aeabi_ddiv+0x118>
   15fae:	4a62      	ldr	r2, [pc, #392]	; (16138 <__aeabi_ddiv+0x1e4>)
   15fb0:	4293      	cmp	r3, r2
   15fb2:	d053      	beq.n	1605c <__aeabi_ddiv+0x108>
   15fb4:	465a      	mov	r2, fp
   15fb6:	00d1      	lsls	r1, r2, #3
   15fb8:	2280      	movs	r2, #128	; 0x80
   15fba:	0f40      	lsrs	r0, r0, #29
   15fbc:	0412      	lsls	r2, r2, #16
   15fbe:	4302      	orrs	r2, r0
   15fc0:	430a      	orrs	r2, r1
   15fc2:	4693      	mov	fp, r2
   15fc4:	4652      	mov	r2, sl
   15fc6:	00d1      	lsls	r1, r2, #3
   15fc8:	4a5c      	ldr	r2, [pc, #368]	; (1613c <__aeabi_ddiv+0x1e8>)
   15fca:	4694      	mov	ip, r2
   15fcc:	2200      	movs	r2, #0
   15fce:	4463      	add	r3, ip
   15fd0:	0038      	movs	r0, r7
   15fd2:	4068      	eors	r0, r5
   15fd4:	4684      	mov	ip, r0
   15fd6:	9002      	str	r0, [sp, #8]
   15fd8:	1ae4      	subs	r4, r4, r3
   15fda:	4316      	orrs	r6, r2
   15fdc:	2e0f      	cmp	r6, #15
   15fde:	d900      	bls.n	15fe2 <__aeabi_ddiv+0x8e>
   15fe0:	e0b4      	b.n	1614c <__aeabi_ddiv+0x1f8>
   15fe2:	4b57      	ldr	r3, [pc, #348]	; (16140 <__aeabi_ddiv+0x1ec>)
   15fe4:	00b6      	lsls	r6, r6, #2
   15fe6:	599b      	ldr	r3, [r3, r6]
   15fe8:	469f      	mov	pc, r3
   15fea:	0003      	movs	r3, r0
   15fec:	4333      	orrs	r3, r6
   15fee:	4699      	mov	r9, r3
   15ff0:	d16c      	bne.n	160cc <__aeabi_ddiv+0x178>
   15ff2:	2300      	movs	r3, #0
   15ff4:	4698      	mov	r8, r3
   15ff6:	3302      	adds	r3, #2
   15ff8:	2608      	movs	r6, #8
   15ffa:	9303      	str	r3, [sp, #12]
   15ffc:	e7ce      	b.n	15f9c <__aeabi_ddiv+0x48>
   15ffe:	46cb      	mov	fp, r9
   16000:	4641      	mov	r1, r8
   16002:	9a03      	ldr	r2, [sp, #12]
   16004:	9701      	str	r7, [sp, #4]
   16006:	2a02      	cmp	r2, #2
   16008:	d165      	bne.n	160d6 <__aeabi_ddiv+0x182>
   1600a:	9b01      	ldr	r3, [sp, #4]
   1600c:	4c4a      	ldr	r4, [pc, #296]	; (16138 <__aeabi_ddiv+0x1e4>)
   1600e:	469c      	mov	ip, r3
   16010:	2300      	movs	r3, #0
   16012:	2200      	movs	r2, #0
   16014:	4698      	mov	r8, r3
   16016:	e06b      	b.n	160f0 <__aeabi_ddiv+0x19c>
   16018:	0003      	movs	r3, r0
   1601a:	4333      	orrs	r3, r6
   1601c:	4699      	mov	r9, r3
   1601e:	d04e      	beq.n	160be <__aeabi_ddiv+0x16a>
   16020:	2e00      	cmp	r6, #0
   16022:	d100      	bne.n	16026 <__aeabi_ddiv+0xd2>
   16024:	e1bc      	b.n	163a0 <__aeabi_ddiv+0x44c>
   16026:	0030      	movs	r0, r6
   16028:	f001 f94a 	bl	172c0 <__clzsi2>
   1602c:	0003      	movs	r3, r0
   1602e:	3b0b      	subs	r3, #11
   16030:	2b1c      	cmp	r3, #28
   16032:	dd00      	ble.n	16036 <__aeabi_ddiv+0xe2>
   16034:	e1ac      	b.n	16390 <__aeabi_ddiv+0x43c>
   16036:	221d      	movs	r2, #29
   16038:	1ad3      	subs	r3, r2, r3
   1603a:	465a      	mov	r2, fp
   1603c:	0001      	movs	r1, r0
   1603e:	40da      	lsrs	r2, r3
   16040:	3908      	subs	r1, #8
   16042:	408e      	lsls	r6, r1
   16044:	0013      	movs	r3, r2
   16046:	4333      	orrs	r3, r6
   16048:	4699      	mov	r9, r3
   1604a:	465b      	mov	r3, fp
   1604c:	408b      	lsls	r3, r1
   1604e:	4698      	mov	r8, r3
   16050:	2300      	movs	r3, #0
   16052:	4c3c      	ldr	r4, [pc, #240]	; (16144 <__aeabi_ddiv+0x1f0>)
   16054:	2600      	movs	r6, #0
   16056:	1a24      	subs	r4, r4, r0
   16058:	9303      	str	r3, [sp, #12]
   1605a:	e79f      	b.n	15f9c <__aeabi_ddiv+0x48>
   1605c:	4651      	mov	r1, sl
   1605e:	465a      	mov	r2, fp
   16060:	4311      	orrs	r1, r2
   16062:	d129      	bne.n	160b8 <__aeabi_ddiv+0x164>
   16064:	2200      	movs	r2, #0
   16066:	4693      	mov	fp, r2
   16068:	3202      	adds	r2, #2
   1606a:	e7b1      	b.n	15fd0 <__aeabi_ddiv+0x7c>
   1606c:	4659      	mov	r1, fp
   1606e:	4301      	orrs	r1, r0
   16070:	d01e      	beq.n	160b0 <__aeabi_ddiv+0x15c>
   16072:	465b      	mov	r3, fp
   16074:	2b00      	cmp	r3, #0
   16076:	d100      	bne.n	1607a <__aeabi_ddiv+0x126>
   16078:	e19e      	b.n	163b8 <__aeabi_ddiv+0x464>
   1607a:	4658      	mov	r0, fp
   1607c:	f001 f920 	bl	172c0 <__clzsi2>
   16080:	0003      	movs	r3, r0
   16082:	3b0b      	subs	r3, #11
   16084:	2b1c      	cmp	r3, #28
   16086:	dd00      	ble.n	1608a <__aeabi_ddiv+0x136>
   16088:	e18f      	b.n	163aa <__aeabi_ddiv+0x456>
   1608a:	0002      	movs	r2, r0
   1608c:	4659      	mov	r1, fp
   1608e:	3a08      	subs	r2, #8
   16090:	4091      	lsls	r1, r2
   16092:	468b      	mov	fp, r1
   16094:	211d      	movs	r1, #29
   16096:	1acb      	subs	r3, r1, r3
   16098:	4651      	mov	r1, sl
   1609a:	40d9      	lsrs	r1, r3
   1609c:	000b      	movs	r3, r1
   1609e:	4659      	mov	r1, fp
   160a0:	430b      	orrs	r3, r1
   160a2:	4651      	mov	r1, sl
   160a4:	469b      	mov	fp, r3
   160a6:	4091      	lsls	r1, r2
   160a8:	4b26      	ldr	r3, [pc, #152]	; (16144 <__aeabi_ddiv+0x1f0>)
   160aa:	2200      	movs	r2, #0
   160ac:	1a1b      	subs	r3, r3, r0
   160ae:	e78f      	b.n	15fd0 <__aeabi_ddiv+0x7c>
   160b0:	2300      	movs	r3, #0
   160b2:	2201      	movs	r2, #1
   160b4:	469b      	mov	fp, r3
   160b6:	e78b      	b.n	15fd0 <__aeabi_ddiv+0x7c>
   160b8:	4651      	mov	r1, sl
   160ba:	2203      	movs	r2, #3
   160bc:	e788      	b.n	15fd0 <__aeabi_ddiv+0x7c>
   160be:	2300      	movs	r3, #0
   160c0:	4698      	mov	r8, r3
   160c2:	3301      	adds	r3, #1
   160c4:	2604      	movs	r6, #4
   160c6:	2400      	movs	r4, #0
   160c8:	9303      	str	r3, [sp, #12]
   160ca:	e767      	b.n	15f9c <__aeabi_ddiv+0x48>
   160cc:	2303      	movs	r3, #3
   160ce:	46b1      	mov	r9, r6
   160d0:	9303      	str	r3, [sp, #12]
   160d2:	260c      	movs	r6, #12
   160d4:	e762      	b.n	15f9c <__aeabi_ddiv+0x48>
   160d6:	2a03      	cmp	r2, #3
   160d8:	d100      	bne.n	160dc <__aeabi_ddiv+0x188>
   160da:	e25c      	b.n	16596 <__aeabi_ddiv+0x642>
   160dc:	9b01      	ldr	r3, [sp, #4]
   160de:	2a01      	cmp	r2, #1
   160e0:	d000      	beq.n	160e4 <__aeabi_ddiv+0x190>
   160e2:	e1e4      	b.n	164ae <__aeabi_ddiv+0x55a>
   160e4:	4013      	ands	r3, r2
   160e6:	469c      	mov	ip, r3
   160e8:	2300      	movs	r3, #0
   160ea:	2400      	movs	r4, #0
   160ec:	2200      	movs	r2, #0
   160ee:	4698      	mov	r8, r3
   160f0:	2100      	movs	r1, #0
   160f2:	0312      	lsls	r2, r2, #12
   160f4:	0b13      	lsrs	r3, r2, #12
   160f6:	0d0a      	lsrs	r2, r1, #20
   160f8:	0512      	lsls	r2, r2, #20
   160fa:	431a      	orrs	r2, r3
   160fc:	0523      	lsls	r3, r4, #20
   160fe:	4c12      	ldr	r4, [pc, #72]	; (16148 <__aeabi_ddiv+0x1f4>)
   16100:	4640      	mov	r0, r8
   16102:	4022      	ands	r2, r4
   16104:	4313      	orrs	r3, r2
   16106:	4662      	mov	r2, ip
   16108:	005b      	lsls	r3, r3, #1
   1610a:	07d2      	lsls	r2, r2, #31
   1610c:	085b      	lsrs	r3, r3, #1
   1610e:	4313      	orrs	r3, r2
   16110:	0019      	movs	r1, r3
   16112:	b007      	add	sp, #28
   16114:	bc3c      	pop	{r2, r3, r4, r5}
   16116:	4690      	mov	r8, r2
   16118:	4699      	mov	r9, r3
   1611a:	46a2      	mov	sl, r4
   1611c:	46ab      	mov	fp, r5
   1611e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16120:	2300      	movs	r3, #0
   16122:	2280      	movs	r2, #128	; 0x80
   16124:	469c      	mov	ip, r3
   16126:	0312      	lsls	r2, r2, #12
   16128:	4698      	mov	r8, r3
   1612a:	4c03      	ldr	r4, [pc, #12]	; (16138 <__aeabi_ddiv+0x1e4>)
   1612c:	e7e0      	b.n	160f0 <__aeabi_ddiv+0x19c>
   1612e:	2300      	movs	r3, #0
   16130:	4c01      	ldr	r4, [pc, #4]	; (16138 <__aeabi_ddiv+0x1e4>)
   16132:	2200      	movs	r2, #0
   16134:	4698      	mov	r8, r3
   16136:	e7db      	b.n	160f0 <__aeabi_ddiv+0x19c>
   16138:	000007ff 	.word	0x000007ff
   1613c:	fffffc01 	.word	0xfffffc01
   16140:	0001e108 	.word	0x0001e108
   16144:	fffffc0d 	.word	0xfffffc0d
   16148:	800fffff 	.word	0x800fffff
   1614c:	45d9      	cmp	r9, fp
   1614e:	d900      	bls.n	16152 <__aeabi_ddiv+0x1fe>
   16150:	e139      	b.n	163c6 <__aeabi_ddiv+0x472>
   16152:	d100      	bne.n	16156 <__aeabi_ddiv+0x202>
   16154:	e134      	b.n	163c0 <__aeabi_ddiv+0x46c>
   16156:	2300      	movs	r3, #0
   16158:	4646      	mov	r6, r8
   1615a:	464d      	mov	r5, r9
   1615c:	469a      	mov	sl, r3
   1615e:	3c01      	subs	r4, #1
   16160:	465b      	mov	r3, fp
   16162:	0e0a      	lsrs	r2, r1, #24
   16164:	021b      	lsls	r3, r3, #8
   16166:	431a      	orrs	r2, r3
   16168:	020b      	lsls	r3, r1, #8
   1616a:	0c17      	lsrs	r7, r2, #16
   1616c:	9303      	str	r3, [sp, #12]
   1616e:	0413      	lsls	r3, r2, #16
   16170:	0c1b      	lsrs	r3, r3, #16
   16172:	0039      	movs	r1, r7
   16174:	0028      	movs	r0, r5
   16176:	4690      	mov	r8, r2
   16178:	9301      	str	r3, [sp, #4]
   1617a:	f7fe fc07 	bl	1498c <__udivsi3>
   1617e:	0002      	movs	r2, r0
   16180:	9b01      	ldr	r3, [sp, #4]
   16182:	4683      	mov	fp, r0
   16184:	435a      	muls	r2, r3
   16186:	0028      	movs	r0, r5
   16188:	0039      	movs	r1, r7
   1618a:	4691      	mov	r9, r2
   1618c:	f7fe fc84 	bl	14a98 <__aeabi_uidivmod>
   16190:	0c35      	lsrs	r5, r6, #16
   16192:	0409      	lsls	r1, r1, #16
   16194:	430d      	orrs	r5, r1
   16196:	45a9      	cmp	r9, r5
   16198:	d90d      	bls.n	161b6 <__aeabi_ddiv+0x262>
   1619a:	465b      	mov	r3, fp
   1619c:	4445      	add	r5, r8
   1619e:	3b01      	subs	r3, #1
   161a0:	45a8      	cmp	r8, r5
   161a2:	d900      	bls.n	161a6 <__aeabi_ddiv+0x252>
   161a4:	e13a      	b.n	1641c <__aeabi_ddiv+0x4c8>
   161a6:	45a9      	cmp	r9, r5
   161a8:	d800      	bhi.n	161ac <__aeabi_ddiv+0x258>
   161aa:	e137      	b.n	1641c <__aeabi_ddiv+0x4c8>
   161ac:	2302      	movs	r3, #2
   161ae:	425b      	negs	r3, r3
   161b0:	469c      	mov	ip, r3
   161b2:	4445      	add	r5, r8
   161b4:	44e3      	add	fp, ip
   161b6:	464b      	mov	r3, r9
   161b8:	1aeb      	subs	r3, r5, r3
   161ba:	0039      	movs	r1, r7
   161bc:	0018      	movs	r0, r3
   161be:	9304      	str	r3, [sp, #16]
   161c0:	f7fe fbe4 	bl	1498c <__udivsi3>
   161c4:	9b01      	ldr	r3, [sp, #4]
   161c6:	0005      	movs	r5, r0
   161c8:	4343      	muls	r3, r0
   161ca:	0039      	movs	r1, r7
   161cc:	9804      	ldr	r0, [sp, #16]
   161ce:	4699      	mov	r9, r3
   161d0:	f7fe fc62 	bl	14a98 <__aeabi_uidivmod>
   161d4:	0433      	lsls	r3, r6, #16
   161d6:	0409      	lsls	r1, r1, #16
   161d8:	0c1b      	lsrs	r3, r3, #16
   161da:	430b      	orrs	r3, r1
   161dc:	4599      	cmp	r9, r3
   161de:	d909      	bls.n	161f4 <__aeabi_ddiv+0x2a0>
   161e0:	4443      	add	r3, r8
   161e2:	1e6a      	subs	r2, r5, #1
   161e4:	4598      	cmp	r8, r3
   161e6:	d900      	bls.n	161ea <__aeabi_ddiv+0x296>
   161e8:	e11a      	b.n	16420 <__aeabi_ddiv+0x4cc>
   161ea:	4599      	cmp	r9, r3
   161ec:	d800      	bhi.n	161f0 <__aeabi_ddiv+0x29c>
   161ee:	e117      	b.n	16420 <__aeabi_ddiv+0x4cc>
   161f0:	3d02      	subs	r5, #2
   161f2:	4443      	add	r3, r8
   161f4:	464a      	mov	r2, r9
   161f6:	1a9b      	subs	r3, r3, r2
   161f8:	465a      	mov	r2, fp
   161fa:	0412      	lsls	r2, r2, #16
   161fc:	432a      	orrs	r2, r5
   161fe:	9903      	ldr	r1, [sp, #12]
   16200:	4693      	mov	fp, r2
   16202:	0c10      	lsrs	r0, r2, #16
   16204:	0c0a      	lsrs	r2, r1, #16
   16206:	4691      	mov	r9, r2
   16208:	0409      	lsls	r1, r1, #16
   1620a:	465a      	mov	r2, fp
   1620c:	0c09      	lsrs	r1, r1, #16
   1620e:	464e      	mov	r6, r9
   16210:	000d      	movs	r5, r1
   16212:	0412      	lsls	r2, r2, #16
   16214:	0c12      	lsrs	r2, r2, #16
   16216:	4345      	muls	r5, r0
   16218:	9105      	str	r1, [sp, #20]
   1621a:	4351      	muls	r1, r2
   1621c:	4372      	muls	r2, r6
   1621e:	4370      	muls	r0, r6
   16220:	1952      	adds	r2, r2, r5
   16222:	0c0e      	lsrs	r6, r1, #16
   16224:	18b2      	adds	r2, r6, r2
   16226:	4295      	cmp	r5, r2
   16228:	d903      	bls.n	16232 <__aeabi_ddiv+0x2de>
   1622a:	2580      	movs	r5, #128	; 0x80
   1622c:	026d      	lsls	r5, r5, #9
   1622e:	46ac      	mov	ip, r5
   16230:	4460      	add	r0, ip
   16232:	0c15      	lsrs	r5, r2, #16
   16234:	0409      	lsls	r1, r1, #16
   16236:	0412      	lsls	r2, r2, #16
   16238:	0c09      	lsrs	r1, r1, #16
   1623a:	1828      	adds	r0, r5, r0
   1623c:	1852      	adds	r2, r2, r1
   1623e:	4283      	cmp	r3, r0
   16240:	d200      	bcs.n	16244 <__aeabi_ddiv+0x2f0>
   16242:	e0ce      	b.n	163e2 <__aeabi_ddiv+0x48e>
   16244:	d100      	bne.n	16248 <__aeabi_ddiv+0x2f4>
   16246:	e0c8      	b.n	163da <__aeabi_ddiv+0x486>
   16248:	1a1d      	subs	r5, r3, r0
   1624a:	4653      	mov	r3, sl
   1624c:	1a9e      	subs	r6, r3, r2
   1624e:	45b2      	cmp	sl, r6
   16250:	4192      	sbcs	r2, r2
   16252:	4252      	negs	r2, r2
   16254:	1aab      	subs	r3, r5, r2
   16256:	469a      	mov	sl, r3
   16258:	4598      	cmp	r8, r3
   1625a:	d100      	bne.n	1625e <__aeabi_ddiv+0x30a>
   1625c:	e117      	b.n	1648e <__aeabi_ddiv+0x53a>
   1625e:	0039      	movs	r1, r7
   16260:	0018      	movs	r0, r3
   16262:	f7fe fb93 	bl	1498c <__udivsi3>
   16266:	9b01      	ldr	r3, [sp, #4]
   16268:	0005      	movs	r5, r0
   1626a:	4343      	muls	r3, r0
   1626c:	0039      	movs	r1, r7
   1626e:	4650      	mov	r0, sl
   16270:	9304      	str	r3, [sp, #16]
   16272:	f7fe fc11 	bl	14a98 <__aeabi_uidivmod>
   16276:	9804      	ldr	r0, [sp, #16]
   16278:	040b      	lsls	r3, r1, #16
   1627a:	0c31      	lsrs	r1, r6, #16
   1627c:	4319      	orrs	r1, r3
   1627e:	4288      	cmp	r0, r1
   16280:	d909      	bls.n	16296 <__aeabi_ddiv+0x342>
   16282:	4441      	add	r1, r8
   16284:	1e6b      	subs	r3, r5, #1
   16286:	4588      	cmp	r8, r1
   16288:	d900      	bls.n	1628c <__aeabi_ddiv+0x338>
   1628a:	e107      	b.n	1649c <__aeabi_ddiv+0x548>
   1628c:	4288      	cmp	r0, r1
   1628e:	d800      	bhi.n	16292 <__aeabi_ddiv+0x33e>
   16290:	e104      	b.n	1649c <__aeabi_ddiv+0x548>
   16292:	3d02      	subs	r5, #2
   16294:	4441      	add	r1, r8
   16296:	9b04      	ldr	r3, [sp, #16]
   16298:	1acb      	subs	r3, r1, r3
   1629a:	0018      	movs	r0, r3
   1629c:	0039      	movs	r1, r7
   1629e:	9304      	str	r3, [sp, #16]
   162a0:	f7fe fb74 	bl	1498c <__udivsi3>
   162a4:	9b01      	ldr	r3, [sp, #4]
   162a6:	4682      	mov	sl, r0
   162a8:	4343      	muls	r3, r0
   162aa:	0039      	movs	r1, r7
   162ac:	9804      	ldr	r0, [sp, #16]
   162ae:	9301      	str	r3, [sp, #4]
   162b0:	f7fe fbf2 	bl	14a98 <__aeabi_uidivmod>
   162b4:	9801      	ldr	r0, [sp, #4]
   162b6:	040b      	lsls	r3, r1, #16
   162b8:	0431      	lsls	r1, r6, #16
   162ba:	0c09      	lsrs	r1, r1, #16
   162bc:	4319      	orrs	r1, r3
   162be:	4288      	cmp	r0, r1
   162c0:	d90d      	bls.n	162de <__aeabi_ddiv+0x38a>
   162c2:	4653      	mov	r3, sl
   162c4:	4441      	add	r1, r8
   162c6:	3b01      	subs	r3, #1
   162c8:	4588      	cmp	r8, r1
   162ca:	d900      	bls.n	162ce <__aeabi_ddiv+0x37a>
   162cc:	e0e8      	b.n	164a0 <__aeabi_ddiv+0x54c>
   162ce:	4288      	cmp	r0, r1
   162d0:	d800      	bhi.n	162d4 <__aeabi_ddiv+0x380>
   162d2:	e0e5      	b.n	164a0 <__aeabi_ddiv+0x54c>
   162d4:	2302      	movs	r3, #2
   162d6:	425b      	negs	r3, r3
   162d8:	469c      	mov	ip, r3
   162da:	4441      	add	r1, r8
   162dc:	44e2      	add	sl, ip
   162de:	9b01      	ldr	r3, [sp, #4]
   162e0:	042d      	lsls	r5, r5, #16
   162e2:	1ace      	subs	r6, r1, r3
   162e4:	4651      	mov	r1, sl
   162e6:	4329      	orrs	r1, r5
   162e8:	9d05      	ldr	r5, [sp, #20]
   162ea:	464f      	mov	r7, r9
   162ec:	002a      	movs	r2, r5
   162ee:	040b      	lsls	r3, r1, #16
   162f0:	0c08      	lsrs	r0, r1, #16
   162f2:	0c1b      	lsrs	r3, r3, #16
   162f4:	435a      	muls	r2, r3
   162f6:	4345      	muls	r5, r0
   162f8:	437b      	muls	r3, r7
   162fa:	4378      	muls	r0, r7
   162fc:	195b      	adds	r3, r3, r5
   162fe:	0c17      	lsrs	r7, r2, #16
   16300:	18fb      	adds	r3, r7, r3
   16302:	429d      	cmp	r5, r3
   16304:	d903      	bls.n	1630e <__aeabi_ddiv+0x3ba>
   16306:	2580      	movs	r5, #128	; 0x80
   16308:	026d      	lsls	r5, r5, #9
   1630a:	46ac      	mov	ip, r5
   1630c:	4460      	add	r0, ip
   1630e:	0c1d      	lsrs	r5, r3, #16
   16310:	0412      	lsls	r2, r2, #16
   16312:	041b      	lsls	r3, r3, #16
   16314:	0c12      	lsrs	r2, r2, #16
   16316:	1828      	adds	r0, r5, r0
   16318:	189b      	adds	r3, r3, r2
   1631a:	4286      	cmp	r6, r0
   1631c:	d200      	bcs.n	16320 <__aeabi_ddiv+0x3cc>
   1631e:	e093      	b.n	16448 <__aeabi_ddiv+0x4f4>
   16320:	d100      	bne.n	16324 <__aeabi_ddiv+0x3d0>
   16322:	e08e      	b.n	16442 <__aeabi_ddiv+0x4ee>
   16324:	2301      	movs	r3, #1
   16326:	4319      	orrs	r1, r3
   16328:	4ba0      	ldr	r3, [pc, #640]	; (165ac <__aeabi_ddiv+0x658>)
   1632a:	18e3      	adds	r3, r4, r3
   1632c:	2b00      	cmp	r3, #0
   1632e:	dc00      	bgt.n	16332 <__aeabi_ddiv+0x3de>
   16330:	e099      	b.n	16466 <__aeabi_ddiv+0x512>
   16332:	074a      	lsls	r2, r1, #29
   16334:	d000      	beq.n	16338 <__aeabi_ddiv+0x3e4>
   16336:	e09e      	b.n	16476 <__aeabi_ddiv+0x522>
   16338:	465a      	mov	r2, fp
   1633a:	01d2      	lsls	r2, r2, #7
   1633c:	d506      	bpl.n	1634c <__aeabi_ddiv+0x3f8>
   1633e:	465a      	mov	r2, fp
   16340:	4b9b      	ldr	r3, [pc, #620]	; (165b0 <__aeabi_ddiv+0x65c>)
   16342:	401a      	ands	r2, r3
   16344:	2380      	movs	r3, #128	; 0x80
   16346:	4693      	mov	fp, r2
   16348:	00db      	lsls	r3, r3, #3
   1634a:	18e3      	adds	r3, r4, r3
   1634c:	4a99      	ldr	r2, [pc, #612]	; (165b4 <__aeabi_ddiv+0x660>)
   1634e:	4293      	cmp	r3, r2
   16350:	dd68      	ble.n	16424 <__aeabi_ddiv+0x4d0>
   16352:	2301      	movs	r3, #1
   16354:	9a02      	ldr	r2, [sp, #8]
   16356:	4c98      	ldr	r4, [pc, #608]	; (165b8 <__aeabi_ddiv+0x664>)
   16358:	401a      	ands	r2, r3
   1635a:	2300      	movs	r3, #0
   1635c:	4694      	mov	ip, r2
   1635e:	4698      	mov	r8, r3
   16360:	2200      	movs	r2, #0
   16362:	e6c5      	b.n	160f0 <__aeabi_ddiv+0x19c>
   16364:	2280      	movs	r2, #128	; 0x80
   16366:	464b      	mov	r3, r9
   16368:	0312      	lsls	r2, r2, #12
   1636a:	4213      	tst	r3, r2
   1636c:	d00a      	beq.n	16384 <__aeabi_ddiv+0x430>
   1636e:	465b      	mov	r3, fp
   16370:	4213      	tst	r3, r2
   16372:	d106      	bne.n	16382 <__aeabi_ddiv+0x42e>
   16374:	431a      	orrs	r2, r3
   16376:	0312      	lsls	r2, r2, #12
   16378:	0b12      	lsrs	r2, r2, #12
   1637a:	46ac      	mov	ip, r5
   1637c:	4688      	mov	r8, r1
   1637e:	4c8e      	ldr	r4, [pc, #568]	; (165b8 <__aeabi_ddiv+0x664>)
   16380:	e6b6      	b.n	160f0 <__aeabi_ddiv+0x19c>
   16382:	464b      	mov	r3, r9
   16384:	431a      	orrs	r2, r3
   16386:	0312      	lsls	r2, r2, #12
   16388:	0b12      	lsrs	r2, r2, #12
   1638a:	46bc      	mov	ip, r7
   1638c:	4c8a      	ldr	r4, [pc, #552]	; (165b8 <__aeabi_ddiv+0x664>)
   1638e:	e6af      	b.n	160f0 <__aeabi_ddiv+0x19c>
   16390:	0003      	movs	r3, r0
   16392:	465a      	mov	r2, fp
   16394:	3b28      	subs	r3, #40	; 0x28
   16396:	409a      	lsls	r2, r3
   16398:	2300      	movs	r3, #0
   1639a:	4691      	mov	r9, r2
   1639c:	4698      	mov	r8, r3
   1639e:	e657      	b.n	16050 <__aeabi_ddiv+0xfc>
   163a0:	4658      	mov	r0, fp
   163a2:	f000 ff8d 	bl	172c0 <__clzsi2>
   163a6:	3020      	adds	r0, #32
   163a8:	e640      	b.n	1602c <__aeabi_ddiv+0xd8>
   163aa:	0003      	movs	r3, r0
   163ac:	4652      	mov	r2, sl
   163ae:	3b28      	subs	r3, #40	; 0x28
   163b0:	409a      	lsls	r2, r3
   163b2:	2100      	movs	r1, #0
   163b4:	4693      	mov	fp, r2
   163b6:	e677      	b.n	160a8 <__aeabi_ddiv+0x154>
   163b8:	f000 ff82 	bl	172c0 <__clzsi2>
   163bc:	3020      	adds	r0, #32
   163be:	e65f      	b.n	16080 <__aeabi_ddiv+0x12c>
   163c0:	4588      	cmp	r8, r1
   163c2:	d200      	bcs.n	163c6 <__aeabi_ddiv+0x472>
   163c4:	e6c7      	b.n	16156 <__aeabi_ddiv+0x202>
   163c6:	464b      	mov	r3, r9
   163c8:	07de      	lsls	r6, r3, #31
   163ca:	085d      	lsrs	r5, r3, #1
   163cc:	4643      	mov	r3, r8
   163ce:	085b      	lsrs	r3, r3, #1
   163d0:	431e      	orrs	r6, r3
   163d2:	4643      	mov	r3, r8
   163d4:	07db      	lsls	r3, r3, #31
   163d6:	469a      	mov	sl, r3
   163d8:	e6c2      	b.n	16160 <__aeabi_ddiv+0x20c>
   163da:	2500      	movs	r5, #0
   163dc:	4592      	cmp	sl, r2
   163de:	d300      	bcc.n	163e2 <__aeabi_ddiv+0x48e>
   163e0:	e733      	b.n	1624a <__aeabi_ddiv+0x2f6>
   163e2:	9e03      	ldr	r6, [sp, #12]
   163e4:	4659      	mov	r1, fp
   163e6:	46b4      	mov	ip, r6
   163e8:	44e2      	add	sl, ip
   163ea:	45b2      	cmp	sl, r6
   163ec:	41ad      	sbcs	r5, r5
   163ee:	426d      	negs	r5, r5
   163f0:	4445      	add	r5, r8
   163f2:	18eb      	adds	r3, r5, r3
   163f4:	3901      	subs	r1, #1
   163f6:	4598      	cmp	r8, r3
   163f8:	d207      	bcs.n	1640a <__aeabi_ddiv+0x4b6>
   163fa:	4298      	cmp	r0, r3
   163fc:	d900      	bls.n	16400 <__aeabi_ddiv+0x4ac>
   163fe:	e07f      	b.n	16500 <__aeabi_ddiv+0x5ac>
   16400:	d100      	bne.n	16404 <__aeabi_ddiv+0x4b0>
   16402:	e0bc      	b.n	1657e <__aeabi_ddiv+0x62a>
   16404:	1a1d      	subs	r5, r3, r0
   16406:	468b      	mov	fp, r1
   16408:	e71f      	b.n	1624a <__aeabi_ddiv+0x2f6>
   1640a:	4598      	cmp	r8, r3
   1640c:	d1fa      	bne.n	16404 <__aeabi_ddiv+0x4b0>
   1640e:	9d03      	ldr	r5, [sp, #12]
   16410:	4555      	cmp	r5, sl
   16412:	d9f2      	bls.n	163fa <__aeabi_ddiv+0x4a6>
   16414:	4643      	mov	r3, r8
   16416:	468b      	mov	fp, r1
   16418:	1a1d      	subs	r5, r3, r0
   1641a:	e716      	b.n	1624a <__aeabi_ddiv+0x2f6>
   1641c:	469b      	mov	fp, r3
   1641e:	e6ca      	b.n	161b6 <__aeabi_ddiv+0x262>
   16420:	0015      	movs	r5, r2
   16422:	e6e7      	b.n	161f4 <__aeabi_ddiv+0x2a0>
   16424:	465a      	mov	r2, fp
   16426:	08c9      	lsrs	r1, r1, #3
   16428:	0752      	lsls	r2, r2, #29
   1642a:	430a      	orrs	r2, r1
   1642c:	055b      	lsls	r3, r3, #21
   1642e:	4690      	mov	r8, r2
   16430:	0d5c      	lsrs	r4, r3, #21
   16432:	465a      	mov	r2, fp
   16434:	2301      	movs	r3, #1
   16436:	9902      	ldr	r1, [sp, #8]
   16438:	0252      	lsls	r2, r2, #9
   1643a:	4019      	ands	r1, r3
   1643c:	0b12      	lsrs	r2, r2, #12
   1643e:	468c      	mov	ip, r1
   16440:	e656      	b.n	160f0 <__aeabi_ddiv+0x19c>
   16442:	2b00      	cmp	r3, #0
   16444:	d100      	bne.n	16448 <__aeabi_ddiv+0x4f4>
   16446:	e76f      	b.n	16328 <__aeabi_ddiv+0x3d4>
   16448:	4446      	add	r6, r8
   1644a:	1e4a      	subs	r2, r1, #1
   1644c:	45b0      	cmp	r8, r6
   1644e:	d929      	bls.n	164a4 <__aeabi_ddiv+0x550>
   16450:	0011      	movs	r1, r2
   16452:	4286      	cmp	r6, r0
   16454:	d000      	beq.n	16458 <__aeabi_ddiv+0x504>
   16456:	e765      	b.n	16324 <__aeabi_ddiv+0x3d0>
   16458:	9a03      	ldr	r2, [sp, #12]
   1645a:	4293      	cmp	r3, r2
   1645c:	d000      	beq.n	16460 <__aeabi_ddiv+0x50c>
   1645e:	e761      	b.n	16324 <__aeabi_ddiv+0x3d0>
   16460:	e762      	b.n	16328 <__aeabi_ddiv+0x3d4>
   16462:	2101      	movs	r1, #1
   16464:	4249      	negs	r1, r1
   16466:	2001      	movs	r0, #1
   16468:	1ac2      	subs	r2, r0, r3
   1646a:	2a38      	cmp	r2, #56	; 0x38
   1646c:	dd21      	ble.n	164b2 <__aeabi_ddiv+0x55e>
   1646e:	9b02      	ldr	r3, [sp, #8]
   16470:	4003      	ands	r3, r0
   16472:	469c      	mov	ip, r3
   16474:	e638      	b.n	160e8 <__aeabi_ddiv+0x194>
   16476:	220f      	movs	r2, #15
   16478:	400a      	ands	r2, r1
   1647a:	2a04      	cmp	r2, #4
   1647c:	d100      	bne.n	16480 <__aeabi_ddiv+0x52c>
   1647e:	e75b      	b.n	16338 <__aeabi_ddiv+0x3e4>
   16480:	000a      	movs	r2, r1
   16482:	1d11      	adds	r1, r2, #4
   16484:	4291      	cmp	r1, r2
   16486:	4192      	sbcs	r2, r2
   16488:	4252      	negs	r2, r2
   1648a:	4493      	add	fp, r2
   1648c:	e754      	b.n	16338 <__aeabi_ddiv+0x3e4>
   1648e:	4b47      	ldr	r3, [pc, #284]	; (165ac <__aeabi_ddiv+0x658>)
   16490:	18e3      	adds	r3, r4, r3
   16492:	2b00      	cmp	r3, #0
   16494:	dde5      	ble.n	16462 <__aeabi_ddiv+0x50e>
   16496:	2201      	movs	r2, #1
   16498:	4252      	negs	r2, r2
   1649a:	e7f2      	b.n	16482 <__aeabi_ddiv+0x52e>
   1649c:	001d      	movs	r5, r3
   1649e:	e6fa      	b.n	16296 <__aeabi_ddiv+0x342>
   164a0:	469a      	mov	sl, r3
   164a2:	e71c      	b.n	162de <__aeabi_ddiv+0x38a>
   164a4:	42b0      	cmp	r0, r6
   164a6:	d839      	bhi.n	1651c <__aeabi_ddiv+0x5c8>
   164a8:	d06e      	beq.n	16588 <__aeabi_ddiv+0x634>
   164aa:	0011      	movs	r1, r2
   164ac:	e73a      	b.n	16324 <__aeabi_ddiv+0x3d0>
   164ae:	9302      	str	r3, [sp, #8]
   164b0:	e73a      	b.n	16328 <__aeabi_ddiv+0x3d4>
   164b2:	2a1f      	cmp	r2, #31
   164b4:	dc3c      	bgt.n	16530 <__aeabi_ddiv+0x5dc>
   164b6:	2320      	movs	r3, #32
   164b8:	1a9b      	subs	r3, r3, r2
   164ba:	000c      	movs	r4, r1
   164bc:	4658      	mov	r0, fp
   164be:	4099      	lsls	r1, r3
   164c0:	4098      	lsls	r0, r3
   164c2:	1e4b      	subs	r3, r1, #1
   164c4:	4199      	sbcs	r1, r3
   164c6:	465b      	mov	r3, fp
   164c8:	40d4      	lsrs	r4, r2
   164ca:	40d3      	lsrs	r3, r2
   164cc:	4320      	orrs	r0, r4
   164ce:	4308      	orrs	r0, r1
   164d0:	001a      	movs	r2, r3
   164d2:	0743      	lsls	r3, r0, #29
   164d4:	d009      	beq.n	164ea <__aeabi_ddiv+0x596>
   164d6:	230f      	movs	r3, #15
   164d8:	4003      	ands	r3, r0
   164da:	2b04      	cmp	r3, #4
   164dc:	d005      	beq.n	164ea <__aeabi_ddiv+0x596>
   164de:	0001      	movs	r1, r0
   164e0:	1d08      	adds	r0, r1, #4
   164e2:	4288      	cmp	r0, r1
   164e4:	419b      	sbcs	r3, r3
   164e6:	425b      	negs	r3, r3
   164e8:	18d2      	adds	r2, r2, r3
   164ea:	0213      	lsls	r3, r2, #8
   164ec:	d53a      	bpl.n	16564 <__aeabi_ddiv+0x610>
   164ee:	2301      	movs	r3, #1
   164f0:	9a02      	ldr	r2, [sp, #8]
   164f2:	2401      	movs	r4, #1
   164f4:	401a      	ands	r2, r3
   164f6:	2300      	movs	r3, #0
   164f8:	4694      	mov	ip, r2
   164fa:	4698      	mov	r8, r3
   164fc:	2200      	movs	r2, #0
   164fe:	e5f7      	b.n	160f0 <__aeabi_ddiv+0x19c>
   16500:	2102      	movs	r1, #2
   16502:	4249      	negs	r1, r1
   16504:	468c      	mov	ip, r1
   16506:	9d03      	ldr	r5, [sp, #12]
   16508:	44e3      	add	fp, ip
   1650a:	46ac      	mov	ip, r5
   1650c:	44e2      	add	sl, ip
   1650e:	45aa      	cmp	sl, r5
   16510:	41ad      	sbcs	r5, r5
   16512:	426d      	negs	r5, r5
   16514:	4445      	add	r5, r8
   16516:	18ed      	adds	r5, r5, r3
   16518:	1a2d      	subs	r5, r5, r0
   1651a:	e696      	b.n	1624a <__aeabi_ddiv+0x2f6>
   1651c:	1e8a      	subs	r2, r1, #2
   1651e:	9903      	ldr	r1, [sp, #12]
   16520:	004d      	lsls	r5, r1, #1
   16522:	428d      	cmp	r5, r1
   16524:	4189      	sbcs	r1, r1
   16526:	4249      	negs	r1, r1
   16528:	4441      	add	r1, r8
   1652a:	1876      	adds	r6, r6, r1
   1652c:	9503      	str	r5, [sp, #12]
   1652e:	e78f      	b.n	16450 <__aeabi_ddiv+0x4fc>
   16530:	201f      	movs	r0, #31
   16532:	4240      	negs	r0, r0
   16534:	1ac3      	subs	r3, r0, r3
   16536:	4658      	mov	r0, fp
   16538:	40d8      	lsrs	r0, r3
   1653a:	0003      	movs	r3, r0
   1653c:	2a20      	cmp	r2, #32
   1653e:	d028      	beq.n	16592 <__aeabi_ddiv+0x63e>
   16540:	2040      	movs	r0, #64	; 0x40
   16542:	465d      	mov	r5, fp
   16544:	1a82      	subs	r2, r0, r2
   16546:	4095      	lsls	r5, r2
   16548:	4329      	orrs	r1, r5
   1654a:	1e4a      	subs	r2, r1, #1
   1654c:	4191      	sbcs	r1, r2
   1654e:	4319      	orrs	r1, r3
   16550:	2307      	movs	r3, #7
   16552:	2200      	movs	r2, #0
   16554:	400b      	ands	r3, r1
   16556:	d009      	beq.n	1656c <__aeabi_ddiv+0x618>
   16558:	230f      	movs	r3, #15
   1655a:	2200      	movs	r2, #0
   1655c:	400b      	ands	r3, r1
   1655e:	0008      	movs	r0, r1
   16560:	2b04      	cmp	r3, #4
   16562:	d1bd      	bne.n	164e0 <__aeabi_ddiv+0x58c>
   16564:	0001      	movs	r1, r0
   16566:	0753      	lsls	r3, r2, #29
   16568:	0252      	lsls	r2, r2, #9
   1656a:	0b12      	lsrs	r2, r2, #12
   1656c:	08c9      	lsrs	r1, r1, #3
   1656e:	4319      	orrs	r1, r3
   16570:	2301      	movs	r3, #1
   16572:	4688      	mov	r8, r1
   16574:	9902      	ldr	r1, [sp, #8]
   16576:	2400      	movs	r4, #0
   16578:	4019      	ands	r1, r3
   1657a:	468c      	mov	ip, r1
   1657c:	e5b8      	b.n	160f0 <__aeabi_ddiv+0x19c>
   1657e:	4552      	cmp	r2, sl
   16580:	d8be      	bhi.n	16500 <__aeabi_ddiv+0x5ac>
   16582:	468b      	mov	fp, r1
   16584:	2500      	movs	r5, #0
   16586:	e660      	b.n	1624a <__aeabi_ddiv+0x2f6>
   16588:	9d03      	ldr	r5, [sp, #12]
   1658a:	429d      	cmp	r5, r3
   1658c:	d3c6      	bcc.n	1651c <__aeabi_ddiv+0x5c8>
   1658e:	0011      	movs	r1, r2
   16590:	e762      	b.n	16458 <__aeabi_ddiv+0x504>
   16592:	2500      	movs	r5, #0
   16594:	e7d8      	b.n	16548 <__aeabi_ddiv+0x5f4>
   16596:	2280      	movs	r2, #128	; 0x80
   16598:	465b      	mov	r3, fp
   1659a:	0312      	lsls	r2, r2, #12
   1659c:	431a      	orrs	r2, r3
   1659e:	9b01      	ldr	r3, [sp, #4]
   165a0:	0312      	lsls	r2, r2, #12
   165a2:	0b12      	lsrs	r2, r2, #12
   165a4:	469c      	mov	ip, r3
   165a6:	4688      	mov	r8, r1
   165a8:	4c03      	ldr	r4, [pc, #12]	; (165b8 <__aeabi_ddiv+0x664>)
   165aa:	e5a1      	b.n	160f0 <__aeabi_ddiv+0x19c>
   165ac:	000003ff 	.word	0x000003ff
   165b0:	feffffff 	.word	0xfeffffff
   165b4:	000007fe 	.word	0x000007fe
   165b8:	000007ff 	.word	0x000007ff

000165bc <__aeabi_dmul>:
   165bc:	b5f0      	push	{r4, r5, r6, r7, lr}
   165be:	4657      	mov	r7, sl
   165c0:	4645      	mov	r5, r8
   165c2:	46de      	mov	lr, fp
   165c4:	464e      	mov	r6, r9
   165c6:	b5e0      	push	{r5, r6, r7, lr}
   165c8:	030c      	lsls	r4, r1, #12
   165ca:	4698      	mov	r8, r3
   165cc:	004e      	lsls	r6, r1, #1
   165ce:	0b23      	lsrs	r3, r4, #12
   165d0:	b087      	sub	sp, #28
   165d2:	0007      	movs	r7, r0
   165d4:	4692      	mov	sl, r2
   165d6:	469b      	mov	fp, r3
   165d8:	0d76      	lsrs	r6, r6, #21
   165da:	0fcd      	lsrs	r5, r1, #31
   165dc:	2e00      	cmp	r6, #0
   165de:	d06b      	beq.n	166b8 <__aeabi_dmul+0xfc>
   165e0:	4b6d      	ldr	r3, [pc, #436]	; (16798 <__aeabi_dmul+0x1dc>)
   165e2:	429e      	cmp	r6, r3
   165e4:	d035      	beq.n	16652 <__aeabi_dmul+0x96>
   165e6:	2480      	movs	r4, #128	; 0x80
   165e8:	465b      	mov	r3, fp
   165ea:	0f42      	lsrs	r2, r0, #29
   165ec:	0424      	lsls	r4, r4, #16
   165ee:	00db      	lsls	r3, r3, #3
   165f0:	4314      	orrs	r4, r2
   165f2:	431c      	orrs	r4, r3
   165f4:	00c3      	lsls	r3, r0, #3
   165f6:	4699      	mov	r9, r3
   165f8:	4b68      	ldr	r3, [pc, #416]	; (1679c <__aeabi_dmul+0x1e0>)
   165fa:	46a3      	mov	fp, r4
   165fc:	469c      	mov	ip, r3
   165fe:	2300      	movs	r3, #0
   16600:	2700      	movs	r7, #0
   16602:	4466      	add	r6, ip
   16604:	9302      	str	r3, [sp, #8]
   16606:	4643      	mov	r3, r8
   16608:	031c      	lsls	r4, r3, #12
   1660a:	005a      	lsls	r2, r3, #1
   1660c:	0fdb      	lsrs	r3, r3, #31
   1660e:	4650      	mov	r0, sl
   16610:	0b24      	lsrs	r4, r4, #12
   16612:	0d52      	lsrs	r2, r2, #21
   16614:	4698      	mov	r8, r3
   16616:	d100      	bne.n	1661a <__aeabi_dmul+0x5e>
   16618:	e076      	b.n	16708 <__aeabi_dmul+0x14c>
   1661a:	4b5f      	ldr	r3, [pc, #380]	; (16798 <__aeabi_dmul+0x1dc>)
   1661c:	429a      	cmp	r2, r3
   1661e:	d06d      	beq.n	166fc <__aeabi_dmul+0x140>
   16620:	2380      	movs	r3, #128	; 0x80
   16622:	0f41      	lsrs	r1, r0, #29
   16624:	041b      	lsls	r3, r3, #16
   16626:	430b      	orrs	r3, r1
   16628:	495c      	ldr	r1, [pc, #368]	; (1679c <__aeabi_dmul+0x1e0>)
   1662a:	00e4      	lsls	r4, r4, #3
   1662c:	468c      	mov	ip, r1
   1662e:	431c      	orrs	r4, r3
   16630:	00c3      	lsls	r3, r0, #3
   16632:	2000      	movs	r0, #0
   16634:	4462      	add	r2, ip
   16636:	4641      	mov	r1, r8
   16638:	18b6      	adds	r6, r6, r2
   1663a:	4069      	eors	r1, r5
   1663c:	1c72      	adds	r2, r6, #1
   1663e:	9101      	str	r1, [sp, #4]
   16640:	4694      	mov	ip, r2
   16642:	4307      	orrs	r7, r0
   16644:	2f0f      	cmp	r7, #15
   16646:	d900      	bls.n	1664a <__aeabi_dmul+0x8e>
   16648:	e0b0      	b.n	167ac <__aeabi_dmul+0x1f0>
   1664a:	4a55      	ldr	r2, [pc, #340]	; (167a0 <__aeabi_dmul+0x1e4>)
   1664c:	00bf      	lsls	r7, r7, #2
   1664e:	59d2      	ldr	r2, [r2, r7]
   16650:	4697      	mov	pc, r2
   16652:	465b      	mov	r3, fp
   16654:	4303      	orrs	r3, r0
   16656:	4699      	mov	r9, r3
   16658:	d000      	beq.n	1665c <__aeabi_dmul+0xa0>
   1665a:	e087      	b.n	1676c <__aeabi_dmul+0x1b0>
   1665c:	2300      	movs	r3, #0
   1665e:	469b      	mov	fp, r3
   16660:	3302      	adds	r3, #2
   16662:	2708      	movs	r7, #8
   16664:	9302      	str	r3, [sp, #8]
   16666:	e7ce      	b.n	16606 <__aeabi_dmul+0x4a>
   16668:	4642      	mov	r2, r8
   1666a:	9201      	str	r2, [sp, #4]
   1666c:	2802      	cmp	r0, #2
   1666e:	d067      	beq.n	16740 <__aeabi_dmul+0x184>
   16670:	2803      	cmp	r0, #3
   16672:	d100      	bne.n	16676 <__aeabi_dmul+0xba>
   16674:	e20e      	b.n	16a94 <__aeabi_dmul+0x4d8>
   16676:	2801      	cmp	r0, #1
   16678:	d000      	beq.n	1667c <__aeabi_dmul+0xc0>
   1667a:	e162      	b.n	16942 <__aeabi_dmul+0x386>
   1667c:	2300      	movs	r3, #0
   1667e:	2400      	movs	r4, #0
   16680:	2200      	movs	r2, #0
   16682:	4699      	mov	r9, r3
   16684:	9901      	ldr	r1, [sp, #4]
   16686:	4001      	ands	r1, r0
   16688:	b2cd      	uxtb	r5, r1
   1668a:	2100      	movs	r1, #0
   1668c:	0312      	lsls	r2, r2, #12
   1668e:	0d0b      	lsrs	r3, r1, #20
   16690:	0b12      	lsrs	r2, r2, #12
   16692:	051b      	lsls	r3, r3, #20
   16694:	4313      	orrs	r3, r2
   16696:	4a43      	ldr	r2, [pc, #268]	; (167a4 <__aeabi_dmul+0x1e8>)
   16698:	0524      	lsls	r4, r4, #20
   1669a:	4013      	ands	r3, r2
   1669c:	431c      	orrs	r4, r3
   1669e:	0064      	lsls	r4, r4, #1
   166a0:	07ed      	lsls	r5, r5, #31
   166a2:	0864      	lsrs	r4, r4, #1
   166a4:	432c      	orrs	r4, r5
   166a6:	4648      	mov	r0, r9
   166a8:	0021      	movs	r1, r4
   166aa:	b007      	add	sp, #28
   166ac:	bc3c      	pop	{r2, r3, r4, r5}
   166ae:	4690      	mov	r8, r2
   166b0:	4699      	mov	r9, r3
   166b2:	46a2      	mov	sl, r4
   166b4:	46ab      	mov	fp, r5
   166b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   166b8:	4303      	orrs	r3, r0
   166ba:	4699      	mov	r9, r3
   166bc:	d04f      	beq.n	1675e <__aeabi_dmul+0x1a2>
   166be:	465b      	mov	r3, fp
   166c0:	2b00      	cmp	r3, #0
   166c2:	d100      	bne.n	166c6 <__aeabi_dmul+0x10a>
   166c4:	e189      	b.n	169da <__aeabi_dmul+0x41e>
   166c6:	4658      	mov	r0, fp
   166c8:	f000 fdfa 	bl	172c0 <__clzsi2>
   166cc:	0003      	movs	r3, r0
   166ce:	3b0b      	subs	r3, #11
   166d0:	2b1c      	cmp	r3, #28
   166d2:	dd00      	ble.n	166d6 <__aeabi_dmul+0x11a>
   166d4:	e17a      	b.n	169cc <__aeabi_dmul+0x410>
   166d6:	221d      	movs	r2, #29
   166d8:	1ad3      	subs	r3, r2, r3
   166da:	003a      	movs	r2, r7
   166dc:	0001      	movs	r1, r0
   166de:	465c      	mov	r4, fp
   166e0:	40da      	lsrs	r2, r3
   166e2:	3908      	subs	r1, #8
   166e4:	408c      	lsls	r4, r1
   166e6:	0013      	movs	r3, r2
   166e8:	408f      	lsls	r7, r1
   166ea:	4323      	orrs	r3, r4
   166ec:	469b      	mov	fp, r3
   166ee:	46b9      	mov	r9, r7
   166f0:	2300      	movs	r3, #0
   166f2:	4e2d      	ldr	r6, [pc, #180]	; (167a8 <__aeabi_dmul+0x1ec>)
   166f4:	2700      	movs	r7, #0
   166f6:	1a36      	subs	r6, r6, r0
   166f8:	9302      	str	r3, [sp, #8]
   166fa:	e784      	b.n	16606 <__aeabi_dmul+0x4a>
   166fc:	4653      	mov	r3, sl
   166fe:	4323      	orrs	r3, r4
   16700:	d12a      	bne.n	16758 <__aeabi_dmul+0x19c>
   16702:	2400      	movs	r4, #0
   16704:	2002      	movs	r0, #2
   16706:	e796      	b.n	16636 <__aeabi_dmul+0x7a>
   16708:	4653      	mov	r3, sl
   1670a:	4323      	orrs	r3, r4
   1670c:	d020      	beq.n	16750 <__aeabi_dmul+0x194>
   1670e:	2c00      	cmp	r4, #0
   16710:	d100      	bne.n	16714 <__aeabi_dmul+0x158>
   16712:	e157      	b.n	169c4 <__aeabi_dmul+0x408>
   16714:	0020      	movs	r0, r4
   16716:	f000 fdd3 	bl	172c0 <__clzsi2>
   1671a:	0003      	movs	r3, r0
   1671c:	3b0b      	subs	r3, #11
   1671e:	2b1c      	cmp	r3, #28
   16720:	dd00      	ble.n	16724 <__aeabi_dmul+0x168>
   16722:	e149      	b.n	169b8 <__aeabi_dmul+0x3fc>
   16724:	211d      	movs	r1, #29
   16726:	1acb      	subs	r3, r1, r3
   16728:	4651      	mov	r1, sl
   1672a:	0002      	movs	r2, r0
   1672c:	40d9      	lsrs	r1, r3
   1672e:	4653      	mov	r3, sl
   16730:	3a08      	subs	r2, #8
   16732:	4094      	lsls	r4, r2
   16734:	4093      	lsls	r3, r2
   16736:	430c      	orrs	r4, r1
   16738:	4a1b      	ldr	r2, [pc, #108]	; (167a8 <__aeabi_dmul+0x1ec>)
   1673a:	1a12      	subs	r2, r2, r0
   1673c:	2000      	movs	r0, #0
   1673e:	e77a      	b.n	16636 <__aeabi_dmul+0x7a>
   16740:	2501      	movs	r5, #1
   16742:	9b01      	ldr	r3, [sp, #4]
   16744:	4c14      	ldr	r4, [pc, #80]	; (16798 <__aeabi_dmul+0x1dc>)
   16746:	401d      	ands	r5, r3
   16748:	2300      	movs	r3, #0
   1674a:	2200      	movs	r2, #0
   1674c:	4699      	mov	r9, r3
   1674e:	e79c      	b.n	1668a <__aeabi_dmul+0xce>
   16750:	2400      	movs	r4, #0
   16752:	2200      	movs	r2, #0
   16754:	2001      	movs	r0, #1
   16756:	e76e      	b.n	16636 <__aeabi_dmul+0x7a>
   16758:	4653      	mov	r3, sl
   1675a:	2003      	movs	r0, #3
   1675c:	e76b      	b.n	16636 <__aeabi_dmul+0x7a>
   1675e:	2300      	movs	r3, #0
   16760:	469b      	mov	fp, r3
   16762:	3301      	adds	r3, #1
   16764:	2704      	movs	r7, #4
   16766:	2600      	movs	r6, #0
   16768:	9302      	str	r3, [sp, #8]
   1676a:	e74c      	b.n	16606 <__aeabi_dmul+0x4a>
   1676c:	2303      	movs	r3, #3
   1676e:	4681      	mov	r9, r0
   16770:	270c      	movs	r7, #12
   16772:	9302      	str	r3, [sp, #8]
   16774:	e747      	b.n	16606 <__aeabi_dmul+0x4a>
   16776:	2280      	movs	r2, #128	; 0x80
   16778:	2300      	movs	r3, #0
   1677a:	2500      	movs	r5, #0
   1677c:	0312      	lsls	r2, r2, #12
   1677e:	4699      	mov	r9, r3
   16780:	4c05      	ldr	r4, [pc, #20]	; (16798 <__aeabi_dmul+0x1dc>)
   16782:	e782      	b.n	1668a <__aeabi_dmul+0xce>
   16784:	465c      	mov	r4, fp
   16786:	464b      	mov	r3, r9
   16788:	9802      	ldr	r0, [sp, #8]
   1678a:	e76f      	b.n	1666c <__aeabi_dmul+0xb0>
   1678c:	465c      	mov	r4, fp
   1678e:	464b      	mov	r3, r9
   16790:	9501      	str	r5, [sp, #4]
   16792:	9802      	ldr	r0, [sp, #8]
   16794:	e76a      	b.n	1666c <__aeabi_dmul+0xb0>
   16796:	46c0      	nop			; (mov r8, r8)
   16798:	000007ff 	.word	0x000007ff
   1679c:	fffffc01 	.word	0xfffffc01
   167a0:	0001e148 	.word	0x0001e148
   167a4:	800fffff 	.word	0x800fffff
   167a8:	fffffc0d 	.word	0xfffffc0d
   167ac:	464a      	mov	r2, r9
   167ae:	4649      	mov	r1, r9
   167b0:	0c17      	lsrs	r7, r2, #16
   167b2:	0c1a      	lsrs	r2, r3, #16
   167b4:	041b      	lsls	r3, r3, #16
   167b6:	0c1b      	lsrs	r3, r3, #16
   167b8:	0408      	lsls	r0, r1, #16
   167ba:	0019      	movs	r1, r3
   167bc:	0c00      	lsrs	r0, r0, #16
   167be:	4341      	muls	r1, r0
   167c0:	0015      	movs	r5, r2
   167c2:	4688      	mov	r8, r1
   167c4:	0019      	movs	r1, r3
   167c6:	437d      	muls	r5, r7
   167c8:	4379      	muls	r1, r7
   167ca:	9503      	str	r5, [sp, #12]
   167cc:	4689      	mov	r9, r1
   167ce:	0029      	movs	r1, r5
   167d0:	0015      	movs	r5, r2
   167d2:	4345      	muls	r5, r0
   167d4:	444d      	add	r5, r9
   167d6:	9502      	str	r5, [sp, #8]
   167d8:	4645      	mov	r5, r8
   167da:	0c2d      	lsrs	r5, r5, #16
   167dc:	46aa      	mov	sl, r5
   167de:	9d02      	ldr	r5, [sp, #8]
   167e0:	4455      	add	r5, sl
   167e2:	45a9      	cmp	r9, r5
   167e4:	d906      	bls.n	167f4 <__aeabi_dmul+0x238>
   167e6:	468a      	mov	sl, r1
   167e8:	2180      	movs	r1, #128	; 0x80
   167ea:	0249      	lsls	r1, r1, #9
   167ec:	4689      	mov	r9, r1
   167ee:	44ca      	add	sl, r9
   167f0:	4651      	mov	r1, sl
   167f2:	9103      	str	r1, [sp, #12]
   167f4:	0c29      	lsrs	r1, r5, #16
   167f6:	9104      	str	r1, [sp, #16]
   167f8:	4641      	mov	r1, r8
   167fa:	0409      	lsls	r1, r1, #16
   167fc:	042d      	lsls	r5, r5, #16
   167fe:	0c09      	lsrs	r1, r1, #16
   16800:	4688      	mov	r8, r1
   16802:	0029      	movs	r1, r5
   16804:	0c25      	lsrs	r5, r4, #16
   16806:	0424      	lsls	r4, r4, #16
   16808:	4441      	add	r1, r8
   1680a:	0c24      	lsrs	r4, r4, #16
   1680c:	9105      	str	r1, [sp, #20]
   1680e:	0021      	movs	r1, r4
   16810:	4341      	muls	r1, r0
   16812:	4688      	mov	r8, r1
   16814:	0021      	movs	r1, r4
   16816:	4379      	muls	r1, r7
   16818:	468a      	mov	sl, r1
   1681a:	4368      	muls	r0, r5
   1681c:	4641      	mov	r1, r8
   1681e:	4450      	add	r0, sl
   16820:	4681      	mov	r9, r0
   16822:	0c08      	lsrs	r0, r1, #16
   16824:	4448      	add	r0, r9
   16826:	436f      	muls	r7, r5
   16828:	4582      	cmp	sl, r0
   1682a:	d903      	bls.n	16834 <__aeabi_dmul+0x278>
   1682c:	2180      	movs	r1, #128	; 0x80
   1682e:	0249      	lsls	r1, r1, #9
   16830:	4689      	mov	r9, r1
   16832:	444f      	add	r7, r9
   16834:	0c01      	lsrs	r1, r0, #16
   16836:	4689      	mov	r9, r1
   16838:	0039      	movs	r1, r7
   1683a:	4449      	add	r1, r9
   1683c:	9102      	str	r1, [sp, #8]
   1683e:	4641      	mov	r1, r8
   16840:	040f      	lsls	r7, r1, #16
   16842:	9904      	ldr	r1, [sp, #16]
   16844:	0c3f      	lsrs	r7, r7, #16
   16846:	4688      	mov	r8, r1
   16848:	0400      	lsls	r0, r0, #16
   1684a:	19c0      	adds	r0, r0, r7
   1684c:	4480      	add	r8, r0
   1684e:	4641      	mov	r1, r8
   16850:	9104      	str	r1, [sp, #16]
   16852:	4659      	mov	r1, fp
   16854:	0c0f      	lsrs	r7, r1, #16
   16856:	0409      	lsls	r1, r1, #16
   16858:	0c09      	lsrs	r1, r1, #16
   1685a:	4688      	mov	r8, r1
   1685c:	4359      	muls	r1, r3
   1685e:	468a      	mov	sl, r1
   16860:	0039      	movs	r1, r7
   16862:	4351      	muls	r1, r2
   16864:	4689      	mov	r9, r1
   16866:	4641      	mov	r1, r8
   16868:	434a      	muls	r2, r1
   1686a:	4651      	mov	r1, sl
   1686c:	0c09      	lsrs	r1, r1, #16
   1686e:	468b      	mov	fp, r1
   16870:	437b      	muls	r3, r7
   16872:	18d2      	adds	r2, r2, r3
   16874:	445a      	add	r2, fp
   16876:	4293      	cmp	r3, r2
   16878:	d903      	bls.n	16882 <__aeabi_dmul+0x2c6>
   1687a:	2380      	movs	r3, #128	; 0x80
   1687c:	025b      	lsls	r3, r3, #9
   1687e:	469b      	mov	fp, r3
   16880:	44d9      	add	r9, fp
   16882:	4651      	mov	r1, sl
   16884:	0409      	lsls	r1, r1, #16
   16886:	0c09      	lsrs	r1, r1, #16
   16888:	468a      	mov	sl, r1
   1688a:	4641      	mov	r1, r8
   1688c:	4361      	muls	r1, r4
   1688e:	437c      	muls	r4, r7
   16890:	0c13      	lsrs	r3, r2, #16
   16892:	0412      	lsls	r2, r2, #16
   16894:	444b      	add	r3, r9
   16896:	4452      	add	r2, sl
   16898:	46a1      	mov	r9, r4
   1689a:	468a      	mov	sl, r1
   1689c:	003c      	movs	r4, r7
   1689e:	4641      	mov	r1, r8
   168a0:	436c      	muls	r4, r5
   168a2:	434d      	muls	r5, r1
   168a4:	4651      	mov	r1, sl
   168a6:	444d      	add	r5, r9
   168a8:	0c0f      	lsrs	r7, r1, #16
   168aa:	197d      	adds	r5, r7, r5
   168ac:	45a9      	cmp	r9, r5
   168ae:	d903      	bls.n	168b8 <__aeabi_dmul+0x2fc>
   168b0:	2180      	movs	r1, #128	; 0x80
   168b2:	0249      	lsls	r1, r1, #9
   168b4:	4688      	mov	r8, r1
   168b6:	4444      	add	r4, r8
   168b8:	9f04      	ldr	r7, [sp, #16]
   168ba:	9903      	ldr	r1, [sp, #12]
   168bc:	46b8      	mov	r8, r7
   168be:	4441      	add	r1, r8
   168c0:	468b      	mov	fp, r1
   168c2:	4583      	cmp	fp, r0
   168c4:	4180      	sbcs	r0, r0
   168c6:	4241      	negs	r1, r0
   168c8:	4688      	mov	r8, r1
   168ca:	4651      	mov	r1, sl
   168cc:	0408      	lsls	r0, r1, #16
   168ce:	042f      	lsls	r7, r5, #16
   168d0:	0c00      	lsrs	r0, r0, #16
   168d2:	183f      	adds	r7, r7, r0
   168d4:	4658      	mov	r0, fp
   168d6:	9902      	ldr	r1, [sp, #8]
   168d8:	1810      	adds	r0, r2, r0
   168da:	4689      	mov	r9, r1
   168dc:	4290      	cmp	r0, r2
   168de:	4192      	sbcs	r2, r2
   168e0:	444f      	add	r7, r9
   168e2:	46ba      	mov	sl, r7
   168e4:	4252      	negs	r2, r2
   168e6:	4699      	mov	r9, r3
   168e8:	4693      	mov	fp, r2
   168ea:	44c2      	add	sl, r8
   168ec:	44d1      	add	r9, sl
   168ee:	44cb      	add	fp, r9
   168f0:	428f      	cmp	r7, r1
   168f2:	41bf      	sbcs	r7, r7
   168f4:	45c2      	cmp	sl, r8
   168f6:	4189      	sbcs	r1, r1
   168f8:	4599      	cmp	r9, r3
   168fa:	419b      	sbcs	r3, r3
   168fc:	4593      	cmp	fp, r2
   168fe:	4192      	sbcs	r2, r2
   16900:	427f      	negs	r7, r7
   16902:	4249      	negs	r1, r1
   16904:	0c2d      	lsrs	r5, r5, #16
   16906:	4252      	negs	r2, r2
   16908:	430f      	orrs	r7, r1
   1690a:	425b      	negs	r3, r3
   1690c:	4313      	orrs	r3, r2
   1690e:	197f      	adds	r7, r7, r5
   16910:	18ff      	adds	r7, r7, r3
   16912:	465b      	mov	r3, fp
   16914:	193c      	adds	r4, r7, r4
   16916:	0ddb      	lsrs	r3, r3, #23
   16918:	9a05      	ldr	r2, [sp, #20]
   1691a:	0264      	lsls	r4, r4, #9
   1691c:	431c      	orrs	r4, r3
   1691e:	0243      	lsls	r3, r0, #9
   16920:	4313      	orrs	r3, r2
   16922:	1e5d      	subs	r5, r3, #1
   16924:	41ab      	sbcs	r3, r5
   16926:	465a      	mov	r2, fp
   16928:	0dc0      	lsrs	r0, r0, #23
   1692a:	4303      	orrs	r3, r0
   1692c:	0252      	lsls	r2, r2, #9
   1692e:	4313      	orrs	r3, r2
   16930:	01e2      	lsls	r2, r4, #7
   16932:	d556      	bpl.n	169e2 <__aeabi_dmul+0x426>
   16934:	2001      	movs	r0, #1
   16936:	085a      	lsrs	r2, r3, #1
   16938:	4003      	ands	r3, r0
   1693a:	4313      	orrs	r3, r2
   1693c:	07e2      	lsls	r2, r4, #31
   1693e:	4313      	orrs	r3, r2
   16940:	0864      	lsrs	r4, r4, #1
   16942:	485a      	ldr	r0, [pc, #360]	; (16aac <__aeabi_dmul+0x4f0>)
   16944:	4460      	add	r0, ip
   16946:	2800      	cmp	r0, #0
   16948:	dd4d      	ble.n	169e6 <__aeabi_dmul+0x42a>
   1694a:	075a      	lsls	r2, r3, #29
   1694c:	d009      	beq.n	16962 <__aeabi_dmul+0x3a6>
   1694e:	220f      	movs	r2, #15
   16950:	401a      	ands	r2, r3
   16952:	2a04      	cmp	r2, #4
   16954:	d005      	beq.n	16962 <__aeabi_dmul+0x3a6>
   16956:	1d1a      	adds	r2, r3, #4
   16958:	429a      	cmp	r2, r3
   1695a:	419b      	sbcs	r3, r3
   1695c:	425b      	negs	r3, r3
   1695e:	18e4      	adds	r4, r4, r3
   16960:	0013      	movs	r3, r2
   16962:	01e2      	lsls	r2, r4, #7
   16964:	d504      	bpl.n	16970 <__aeabi_dmul+0x3b4>
   16966:	2080      	movs	r0, #128	; 0x80
   16968:	4a51      	ldr	r2, [pc, #324]	; (16ab0 <__aeabi_dmul+0x4f4>)
   1696a:	00c0      	lsls	r0, r0, #3
   1696c:	4014      	ands	r4, r2
   1696e:	4460      	add	r0, ip
   16970:	4a50      	ldr	r2, [pc, #320]	; (16ab4 <__aeabi_dmul+0x4f8>)
   16972:	4290      	cmp	r0, r2
   16974:	dd00      	ble.n	16978 <__aeabi_dmul+0x3bc>
   16976:	e6e3      	b.n	16740 <__aeabi_dmul+0x184>
   16978:	2501      	movs	r5, #1
   1697a:	08db      	lsrs	r3, r3, #3
   1697c:	0762      	lsls	r2, r4, #29
   1697e:	431a      	orrs	r2, r3
   16980:	0264      	lsls	r4, r4, #9
   16982:	9b01      	ldr	r3, [sp, #4]
   16984:	4691      	mov	r9, r2
   16986:	0b22      	lsrs	r2, r4, #12
   16988:	0544      	lsls	r4, r0, #21
   1698a:	0d64      	lsrs	r4, r4, #21
   1698c:	401d      	ands	r5, r3
   1698e:	e67c      	b.n	1668a <__aeabi_dmul+0xce>
   16990:	2280      	movs	r2, #128	; 0x80
   16992:	4659      	mov	r1, fp
   16994:	0312      	lsls	r2, r2, #12
   16996:	4211      	tst	r1, r2
   16998:	d008      	beq.n	169ac <__aeabi_dmul+0x3f0>
   1699a:	4214      	tst	r4, r2
   1699c:	d106      	bne.n	169ac <__aeabi_dmul+0x3f0>
   1699e:	4322      	orrs	r2, r4
   169a0:	0312      	lsls	r2, r2, #12
   169a2:	0b12      	lsrs	r2, r2, #12
   169a4:	4645      	mov	r5, r8
   169a6:	4699      	mov	r9, r3
   169a8:	4c43      	ldr	r4, [pc, #268]	; (16ab8 <__aeabi_dmul+0x4fc>)
   169aa:	e66e      	b.n	1668a <__aeabi_dmul+0xce>
   169ac:	465b      	mov	r3, fp
   169ae:	431a      	orrs	r2, r3
   169b0:	0312      	lsls	r2, r2, #12
   169b2:	0b12      	lsrs	r2, r2, #12
   169b4:	4c40      	ldr	r4, [pc, #256]	; (16ab8 <__aeabi_dmul+0x4fc>)
   169b6:	e668      	b.n	1668a <__aeabi_dmul+0xce>
   169b8:	0003      	movs	r3, r0
   169ba:	4654      	mov	r4, sl
   169bc:	3b28      	subs	r3, #40	; 0x28
   169be:	409c      	lsls	r4, r3
   169c0:	2300      	movs	r3, #0
   169c2:	e6b9      	b.n	16738 <__aeabi_dmul+0x17c>
   169c4:	f000 fc7c 	bl	172c0 <__clzsi2>
   169c8:	3020      	adds	r0, #32
   169ca:	e6a6      	b.n	1671a <__aeabi_dmul+0x15e>
   169cc:	0003      	movs	r3, r0
   169ce:	3b28      	subs	r3, #40	; 0x28
   169d0:	409f      	lsls	r7, r3
   169d2:	2300      	movs	r3, #0
   169d4:	46bb      	mov	fp, r7
   169d6:	4699      	mov	r9, r3
   169d8:	e68a      	b.n	166f0 <__aeabi_dmul+0x134>
   169da:	f000 fc71 	bl	172c0 <__clzsi2>
   169de:	3020      	adds	r0, #32
   169e0:	e674      	b.n	166cc <__aeabi_dmul+0x110>
   169e2:	46b4      	mov	ip, r6
   169e4:	e7ad      	b.n	16942 <__aeabi_dmul+0x386>
   169e6:	2501      	movs	r5, #1
   169e8:	1a2a      	subs	r2, r5, r0
   169ea:	2a38      	cmp	r2, #56	; 0x38
   169ec:	dd06      	ble.n	169fc <__aeabi_dmul+0x440>
   169ee:	9b01      	ldr	r3, [sp, #4]
   169f0:	2400      	movs	r4, #0
   169f2:	401d      	ands	r5, r3
   169f4:	2300      	movs	r3, #0
   169f6:	2200      	movs	r2, #0
   169f8:	4699      	mov	r9, r3
   169fa:	e646      	b.n	1668a <__aeabi_dmul+0xce>
   169fc:	2a1f      	cmp	r2, #31
   169fe:	dc21      	bgt.n	16a44 <__aeabi_dmul+0x488>
   16a00:	2520      	movs	r5, #32
   16a02:	0020      	movs	r0, r4
   16a04:	1aad      	subs	r5, r5, r2
   16a06:	001e      	movs	r6, r3
   16a08:	40ab      	lsls	r3, r5
   16a0a:	40a8      	lsls	r0, r5
   16a0c:	40d6      	lsrs	r6, r2
   16a0e:	1e5d      	subs	r5, r3, #1
   16a10:	41ab      	sbcs	r3, r5
   16a12:	4330      	orrs	r0, r6
   16a14:	4318      	orrs	r0, r3
   16a16:	40d4      	lsrs	r4, r2
   16a18:	0743      	lsls	r3, r0, #29
   16a1a:	d009      	beq.n	16a30 <__aeabi_dmul+0x474>
   16a1c:	230f      	movs	r3, #15
   16a1e:	4003      	ands	r3, r0
   16a20:	2b04      	cmp	r3, #4
   16a22:	d005      	beq.n	16a30 <__aeabi_dmul+0x474>
   16a24:	0003      	movs	r3, r0
   16a26:	1d18      	adds	r0, r3, #4
   16a28:	4298      	cmp	r0, r3
   16a2a:	419b      	sbcs	r3, r3
   16a2c:	425b      	negs	r3, r3
   16a2e:	18e4      	adds	r4, r4, r3
   16a30:	0223      	lsls	r3, r4, #8
   16a32:	d521      	bpl.n	16a78 <__aeabi_dmul+0x4bc>
   16a34:	2501      	movs	r5, #1
   16a36:	9b01      	ldr	r3, [sp, #4]
   16a38:	2401      	movs	r4, #1
   16a3a:	401d      	ands	r5, r3
   16a3c:	2300      	movs	r3, #0
   16a3e:	2200      	movs	r2, #0
   16a40:	4699      	mov	r9, r3
   16a42:	e622      	b.n	1668a <__aeabi_dmul+0xce>
   16a44:	251f      	movs	r5, #31
   16a46:	0021      	movs	r1, r4
   16a48:	426d      	negs	r5, r5
   16a4a:	1a28      	subs	r0, r5, r0
   16a4c:	40c1      	lsrs	r1, r0
   16a4e:	0008      	movs	r0, r1
   16a50:	2a20      	cmp	r2, #32
   16a52:	d01d      	beq.n	16a90 <__aeabi_dmul+0x4d4>
   16a54:	355f      	adds	r5, #95	; 0x5f
   16a56:	1aaa      	subs	r2, r5, r2
   16a58:	4094      	lsls	r4, r2
   16a5a:	4323      	orrs	r3, r4
   16a5c:	1e5c      	subs	r4, r3, #1
   16a5e:	41a3      	sbcs	r3, r4
   16a60:	2507      	movs	r5, #7
   16a62:	4303      	orrs	r3, r0
   16a64:	401d      	ands	r5, r3
   16a66:	2200      	movs	r2, #0
   16a68:	2d00      	cmp	r5, #0
   16a6a:	d009      	beq.n	16a80 <__aeabi_dmul+0x4c4>
   16a6c:	220f      	movs	r2, #15
   16a6e:	2400      	movs	r4, #0
   16a70:	401a      	ands	r2, r3
   16a72:	0018      	movs	r0, r3
   16a74:	2a04      	cmp	r2, #4
   16a76:	d1d6      	bne.n	16a26 <__aeabi_dmul+0x46a>
   16a78:	0003      	movs	r3, r0
   16a7a:	0765      	lsls	r5, r4, #29
   16a7c:	0264      	lsls	r4, r4, #9
   16a7e:	0b22      	lsrs	r2, r4, #12
   16a80:	08db      	lsrs	r3, r3, #3
   16a82:	432b      	orrs	r3, r5
   16a84:	2501      	movs	r5, #1
   16a86:	4699      	mov	r9, r3
   16a88:	9b01      	ldr	r3, [sp, #4]
   16a8a:	2400      	movs	r4, #0
   16a8c:	401d      	ands	r5, r3
   16a8e:	e5fc      	b.n	1668a <__aeabi_dmul+0xce>
   16a90:	2400      	movs	r4, #0
   16a92:	e7e2      	b.n	16a5a <__aeabi_dmul+0x49e>
   16a94:	2280      	movs	r2, #128	; 0x80
   16a96:	2501      	movs	r5, #1
   16a98:	0312      	lsls	r2, r2, #12
   16a9a:	4322      	orrs	r2, r4
   16a9c:	9901      	ldr	r1, [sp, #4]
   16a9e:	0312      	lsls	r2, r2, #12
   16aa0:	0b12      	lsrs	r2, r2, #12
   16aa2:	400d      	ands	r5, r1
   16aa4:	4699      	mov	r9, r3
   16aa6:	4c04      	ldr	r4, [pc, #16]	; (16ab8 <__aeabi_dmul+0x4fc>)
   16aa8:	e5ef      	b.n	1668a <__aeabi_dmul+0xce>
   16aaa:	46c0      	nop			; (mov r8, r8)
   16aac:	000003ff 	.word	0x000003ff
   16ab0:	feffffff 	.word	0xfeffffff
   16ab4:	000007fe 	.word	0x000007fe
   16ab8:	000007ff 	.word	0x000007ff

00016abc <__aeabi_dsub>:
   16abc:	b5f0      	push	{r4, r5, r6, r7, lr}
   16abe:	4646      	mov	r6, r8
   16ac0:	46d6      	mov	lr, sl
   16ac2:	464f      	mov	r7, r9
   16ac4:	030c      	lsls	r4, r1, #12
   16ac6:	b5c0      	push	{r6, r7, lr}
   16ac8:	0fcd      	lsrs	r5, r1, #31
   16aca:	004e      	lsls	r6, r1, #1
   16acc:	0a61      	lsrs	r1, r4, #9
   16ace:	0f44      	lsrs	r4, r0, #29
   16ad0:	430c      	orrs	r4, r1
   16ad2:	00c1      	lsls	r1, r0, #3
   16ad4:	0058      	lsls	r0, r3, #1
   16ad6:	0d40      	lsrs	r0, r0, #21
   16ad8:	4684      	mov	ip, r0
   16ada:	468a      	mov	sl, r1
   16adc:	000f      	movs	r7, r1
   16ade:	0319      	lsls	r1, r3, #12
   16ae0:	0f50      	lsrs	r0, r2, #29
   16ae2:	0a49      	lsrs	r1, r1, #9
   16ae4:	4301      	orrs	r1, r0
   16ae6:	48c6      	ldr	r0, [pc, #792]	; (16e00 <__aeabi_dsub+0x344>)
   16ae8:	0d76      	lsrs	r6, r6, #21
   16aea:	46a8      	mov	r8, r5
   16aec:	0fdb      	lsrs	r3, r3, #31
   16aee:	00d2      	lsls	r2, r2, #3
   16af0:	4584      	cmp	ip, r0
   16af2:	d100      	bne.n	16af6 <__aeabi_dsub+0x3a>
   16af4:	e0d8      	b.n	16ca8 <__aeabi_dsub+0x1ec>
   16af6:	2001      	movs	r0, #1
   16af8:	4043      	eors	r3, r0
   16afa:	42ab      	cmp	r3, r5
   16afc:	d100      	bne.n	16b00 <__aeabi_dsub+0x44>
   16afe:	e0a6      	b.n	16c4e <__aeabi_dsub+0x192>
   16b00:	4660      	mov	r0, ip
   16b02:	1a35      	subs	r5, r6, r0
   16b04:	2d00      	cmp	r5, #0
   16b06:	dc00      	bgt.n	16b0a <__aeabi_dsub+0x4e>
   16b08:	e105      	b.n	16d16 <__aeabi_dsub+0x25a>
   16b0a:	2800      	cmp	r0, #0
   16b0c:	d110      	bne.n	16b30 <__aeabi_dsub+0x74>
   16b0e:	000b      	movs	r3, r1
   16b10:	4313      	orrs	r3, r2
   16b12:	d100      	bne.n	16b16 <__aeabi_dsub+0x5a>
   16b14:	e0d7      	b.n	16cc6 <__aeabi_dsub+0x20a>
   16b16:	1e6b      	subs	r3, r5, #1
   16b18:	2b00      	cmp	r3, #0
   16b1a:	d000      	beq.n	16b1e <__aeabi_dsub+0x62>
   16b1c:	e14b      	b.n	16db6 <__aeabi_dsub+0x2fa>
   16b1e:	4653      	mov	r3, sl
   16b20:	1a9f      	subs	r7, r3, r2
   16b22:	45ba      	cmp	sl, r7
   16b24:	4180      	sbcs	r0, r0
   16b26:	1a64      	subs	r4, r4, r1
   16b28:	4240      	negs	r0, r0
   16b2a:	1a24      	subs	r4, r4, r0
   16b2c:	2601      	movs	r6, #1
   16b2e:	e01e      	b.n	16b6e <__aeabi_dsub+0xb2>
   16b30:	4bb3      	ldr	r3, [pc, #716]	; (16e00 <__aeabi_dsub+0x344>)
   16b32:	429e      	cmp	r6, r3
   16b34:	d048      	beq.n	16bc8 <__aeabi_dsub+0x10c>
   16b36:	2380      	movs	r3, #128	; 0x80
   16b38:	041b      	lsls	r3, r3, #16
   16b3a:	4319      	orrs	r1, r3
   16b3c:	2d38      	cmp	r5, #56	; 0x38
   16b3e:	dd00      	ble.n	16b42 <__aeabi_dsub+0x86>
   16b40:	e119      	b.n	16d76 <__aeabi_dsub+0x2ba>
   16b42:	2d1f      	cmp	r5, #31
   16b44:	dd00      	ble.n	16b48 <__aeabi_dsub+0x8c>
   16b46:	e14c      	b.n	16de2 <__aeabi_dsub+0x326>
   16b48:	2320      	movs	r3, #32
   16b4a:	000f      	movs	r7, r1
   16b4c:	1b5b      	subs	r3, r3, r5
   16b4e:	0010      	movs	r0, r2
   16b50:	409a      	lsls	r2, r3
   16b52:	409f      	lsls	r7, r3
   16b54:	40e8      	lsrs	r0, r5
   16b56:	1e53      	subs	r3, r2, #1
   16b58:	419a      	sbcs	r2, r3
   16b5a:	40e9      	lsrs	r1, r5
   16b5c:	4307      	orrs	r7, r0
   16b5e:	4317      	orrs	r7, r2
   16b60:	4653      	mov	r3, sl
   16b62:	1bdf      	subs	r7, r3, r7
   16b64:	1a61      	subs	r1, r4, r1
   16b66:	45ba      	cmp	sl, r7
   16b68:	41a4      	sbcs	r4, r4
   16b6a:	4264      	negs	r4, r4
   16b6c:	1b0c      	subs	r4, r1, r4
   16b6e:	0223      	lsls	r3, r4, #8
   16b70:	d400      	bmi.n	16b74 <__aeabi_dsub+0xb8>
   16b72:	e0c5      	b.n	16d00 <__aeabi_dsub+0x244>
   16b74:	0264      	lsls	r4, r4, #9
   16b76:	0a65      	lsrs	r5, r4, #9
   16b78:	2d00      	cmp	r5, #0
   16b7a:	d100      	bne.n	16b7e <__aeabi_dsub+0xc2>
   16b7c:	e0f6      	b.n	16d6c <__aeabi_dsub+0x2b0>
   16b7e:	0028      	movs	r0, r5
   16b80:	f000 fb9e 	bl	172c0 <__clzsi2>
   16b84:	0003      	movs	r3, r0
   16b86:	3b08      	subs	r3, #8
   16b88:	2b1f      	cmp	r3, #31
   16b8a:	dd00      	ble.n	16b8e <__aeabi_dsub+0xd2>
   16b8c:	e0e9      	b.n	16d62 <__aeabi_dsub+0x2a6>
   16b8e:	2220      	movs	r2, #32
   16b90:	003c      	movs	r4, r7
   16b92:	1ad2      	subs	r2, r2, r3
   16b94:	409d      	lsls	r5, r3
   16b96:	40d4      	lsrs	r4, r2
   16b98:	409f      	lsls	r7, r3
   16b9a:	4325      	orrs	r5, r4
   16b9c:	429e      	cmp	r6, r3
   16b9e:	dd00      	ble.n	16ba2 <__aeabi_dsub+0xe6>
   16ba0:	e0db      	b.n	16d5a <__aeabi_dsub+0x29e>
   16ba2:	1b9e      	subs	r6, r3, r6
   16ba4:	1c73      	adds	r3, r6, #1
   16ba6:	2b1f      	cmp	r3, #31
   16ba8:	dd00      	ble.n	16bac <__aeabi_dsub+0xf0>
   16baa:	e10a      	b.n	16dc2 <__aeabi_dsub+0x306>
   16bac:	2220      	movs	r2, #32
   16bae:	0038      	movs	r0, r7
   16bb0:	1ad2      	subs	r2, r2, r3
   16bb2:	0029      	movs	r1, r5
   16bb4:	4097      	lsls	r7, r2
   16bb6:	002c      	movs	r4, r5
   16bb8:	4091      	lsls	r1, r2
   16bba:	40d8      	lsrs	r0, r3
   16bbc:	1e7a      	subs	r2, r7, #1
   16bbe:	4197      	sbcs	r7, r2
   16bc0:	40dc      	lsrs	r4, r3
   16bc2:	2600      	movs	r6, #0
   16bc4:	4301      	orrs	r1, r0
   16bc6:	430f      	orrs	r7, r1
   16bc8:	077b      	lsls	r3, r7, #29
   16bca:	d009      	beq.n	16be0 <__aeabi_dsub+0x124>
   16bcc:	230f      	movs	r3, #15
   16bce:	403b      	ands	r3, r7
   16bd0:	2b04      	cmp	r3, #4
   16bd2:	d005      	beq.n	16be0 <__aeabi_dsub+0x124>
   16bd4:	1d3b      	adds	r3, r7, #4
   16bd6:	42bb      	cmp	r3, r7
   16bd8:	41bf      	sbcs	r7, r7
   16bda:	427f      	negs	r7, r7
   16bdc:	19e4      	adds	r4, r4, r7
   16bde:	001f      	movs	r7, r3
   16be0:	0223      	lsls	r3, r4, #8
   16be2:	d525      	bpl.n	16c30 <__aeabi_dsub+0x174>
   16be4:	4b86      	ldr	r3, [pc, #536]	; (16e00 <__aeabi_dsub+0x344>)
   16be6:	3601      	adds	r6, #1
   16be8:	429e      	cmp	r6, r3
   16bea:	d100      	bne.n	16bee <__aeabi_dsub+0x132>
   16bec:	e0af      	b.n	16d4e <__aeabi_dsub+0x292>
   16bee:	4b85      	ldr	r3, [pc, #532]	; (16e04 <__aeabi_dsub+0x348>)
   16bf0:	2501      	movs	r5, #1
   16bf2:	401c      	ands	r4, r3
   16bf4:	4643      	mov	r3, r8
   16bf6:	0762      	lsls	r2, r4, #29
   16bf8:	08ff      	lsrs	r7, r7, #3
   16bfa:	0264      	lsls	r4, r4, #9
   16bfc:	0576      	lsls	r6, r6, #21
   16bfe:	4317      	orrs	r7, r2
   16c00:	0b24      	lsrs	r4, r4, #12
   16c02:	0d76      	lsrs	r6, r6, #21
   16c04:	401d      	ands	r5, r3
   16c06:	2100      	movs	r1, #0
   16c08:	0324      	lsls	r4, r4, #12
   16c0a:	0b23      	lsrs	r3, r4, #12
   16c0c:	0d0c      	lsrs	r4, r1, #20
   16c0e:	4a7e      	ldr	r2, [pc, #504]	; (16e08 <__aeabi_dsub+0x34c>)
   16c10:	0524      	lsls	r4, r4, #20
   16c12:	431c      	orrs	r4, r3
   16c14:	4014      	ands	r4, r2
   16c16:	0533      	lsls	r3, r6, #20
   16c18:	4323      	orrs	r3, r4
   16c1a:	005b      	lsls	r3, r3, #1
   16c1c:	07ed      	lsls	r5, r5, #31
   16c1e:	085b      	lsrs	r3, r3, #1
   16c20:	432b      	orrs	r3, r5
   16c22:	0038      	movs	r0, r7
   16c24:	0019      	movs	r1, r3
   16c26:	bc1c      	pop	{r2, r3, r4}
   16c28:	4690      	mov	r8, r2
   16c2a:	4699      	mov	r9, r3
   16c2c:	46a2      	mov	sl, r4
   16c2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16c30:	2501      	movs	r5, #1
   16c32:	4643      	mov	r3, r8
   16c34:	0762      	lsls	r2, r4, #29
   16c36:	08ff      	lsrs	r7, r7, #3
   16c38:	4317      	orrs	r7, r2
   16c3a:	08e4      	lsrs	r4, r4, #3
   16c3c:	401d      	ands	r5, r3
   16c3e:	4b70      	ldr	r3, [pc, #448]	; (16e00 <__aeabi_dsub+0x344>)
   16c40:	429e      	cmp	r6, r3
   16c42:	d036      	beq.n	16cb2 <__aeabi_dsub+0x1f6>
   16c44:	0324      	lsls	r4, r4, #12
   16c46:	0576      	lsls	r6, r6, #21
   16c48:	0b24      	lsrs	r4, r4, #12
   16c4a:	0d76      	lsrs	r6, r6, #21
   16c4c:	e7db      	b.n	16c06 <__aeabi_dsub+0x14a>
   16c4e:	4663      	mov	r3, ip
   16c50:	1af3      	subs	r3, r6, r3
   16c52:	2b00      	cmp	r3, #0
   16c54:	dc00      	bgt.n	16c58 <__aeabi_dsub+0x19c>
   16c56:	e094      	b.n	16d82 <__aeabi_dsub+0x2c6>
   16c58:	4660      	mov	r0, ip
   16c5a:	2800      	cmp	r0, #0
   16c5c:	d035      	beq.n	16cca <__aeabi_dsub+0x20e>
   16c5e:	4868      	ldr	r0, [pc, #416]	; (16e00 <__aeabi_dsub+0x344>)
   16c60:	4286      	cmp	r6, r0
   16c62:	d0b1      	beq.n	16bc8 <__aeabi_dsub+0x10c>
   16c64:	2780      	movs	r7, #128	; 0x80
   16c66:	043f      	lsls	r7, r7, #16
   16c68:	4339      	orrs	r1, r7
   16c6a:	2b38      	cmp	r3, #56	; 0x38
   16c6c:	dc00      	bgt.n	16c70 <__aeabi_dsub+0x1b4>
   16c6e:	e0fd      	b.n	16e6c <__aeabi_dsub+0x3b0>
   16c70:	430a      	orrs	r2, r1
   16c72:	0017      	movs	r7, r2
   16c74:	2100      	movs	r1, #0
   16c76:	1e7a      	subs	r2, r7, #1
   16c78:	4197      	sbcs	r7, r2
   16c7a:	4457      	add	r7, sl
   16c7c:	4557      	cmp	r7, sl
   16c7e:	4180      	sbcs	r0, r0
   16c80:	1909      	adds	r1, r1, r4
   16c82:	4244      	negs	r4, r0
   16c84:	190c      	adds	r4, r1, r4
   16c86:	0223      	lsls	r3, r4, #8
   16c88:	d53a      	bpl.n	16d00 <__aeabi_dsub+0x244>
   16c8a:	4b5d      	ldr	r3, [pc, #372]	; (16e00 <__aeabi_dsub+0x344>)
   16c8c:	3601      	adds	r6, #1
   16c8e:	429e      	cmp	r6, r3
   16c90:	d100      	bne.n	16c94 <__aeabi_dsub+0x1d8>
   16c92:	e14b      	b.n	16f2c <__aeabi_dsub+0x470>
   16c94:	2201      	movs	r2, #1
   16c96:	4b5b      	ldr	r3, [pc, #364]	; (16e04 <__aeabi_dsub+0x348>)
   16c98:	401c      	ands	r4, r3
   16c9a:	087b      	lsrs	r3, r7, #1
   16c9c:	4017      	ands	r7, r2
   16c9e:	431f      	orrs	r7, r3
   16ca0:	07e2      	lsls	r2, r4, #31
   16ca2:	4317      	orrs	r7, r2
   16ca4:	0864      	lsrs	r4, r4, #1
   16ca6:	e78f      	b.n	16bc8 <__aeabi_dsub+0x10c>
   16ca8:	0008      	movs	r0, r1
   16caa:	4310      	orrs	r0, r2
   16cac:	d000      	beq.n	16cb0 <__aeabi_dsub+0x1f4>
   16cae:	e724      	b.n	16afa <__aeabi_dsub+0x3e>
   16cb0:	e721      	b.n	16af6 <__aeabi_dsub+0x3a>
   16cb2:	0023      	movs	r3, r4
   16cb4:	433b      	orrs	r3, r7
   16cb6:	d100      	bne.n	16cba <__aeabi_dsub+0x1fe>
   16cb8:	e1b9      	b.n	1702e <__aeabi_dsub+0x572>
   16cba:	2280      	movs	r2, #128	; 0x80
   16cbc:	0312      	lsls	r2, r2, #12
   16cbe:	4314      	orrs	r4, r2
   16cc0:	0324      	lsls	r4, r4, #12
   16cc2:	0b24      	lsrs	r4, r4, #12
   16cc4:	e79f      	b.n	16c06 <__aeabi_dsub+0x14a>
   16cc6:	002e      	movs	r6, r5
   16cc8:	e77e      	b.n	16bc8 <__aeabi_dsub+0x10c>
   16cca:	0008      	movs	r0, r1
   16ccc:	4310      	orrs	r0, r2
   16cce:	d100      	bne.n	16cd2 <__aeabi_dsub+0x216>
   16cd0:	e0ca      	b.n	16e68 <__aeabi_dsub+0x3ac>
   16cd2:	1e58      	subs	r0, r3, #1
   16cd4:	4684      	mov	ip, r0
   16cd6:	2800      	cmp	r0, #0
   16cd8:	d000      	beq.n	16cdc <__aeabi_dsub+0x220>
   16cda:	e0e7      	b.n	16eac <__aeabi_dsub+0x3f0>
   16cdc:	4452      	add	r2, sl
   16cde:	4552      	cmp	r2, sl
   16ce0:	4180      	sbcs	r0, r0
   16ce2:	1864      	adds	r4, r4, r1
   16ce4:	4240      	negs	r0, r0
   16ce6:	1824      	adds	r4, r4, r0
   16ce8:	0017      	movs	r7, r2
   16cea:	2601      	movs	r6, #1
   16cec:	0223      	lsls	r3, r4, #8
   16cee:	d507      	bpl.n	16d00 <__aeabi_dsub+0x244>
   16cf0:	2602      	movs	r6, #2
   16cf2:	e7cf      	b.n	16c94 <__aeabi_dsub+0x1d8>
   16cf4:	4664      	mov	r4, ip
   16cf6:	432c      	orrs	r4, r5
   16cf8:	d100      	bne.n	16cfc <__aeabi_dsub+0x240>
   16cfa:	e1b3      	b.n	17064 <__aeabi_dsub+0x5a8>
   16cfc:	002c      	movs	r4, r5
   16cfe:	4667      	mov	r7, ip
   16d00:	077b      	lsls	r3, r7, #29
   16d02:	d000      	beq.n	16d06 <__aeabi_dsub+0x24a>
   16d04:	e762      	b.n	16bcc <__aeabi_dsub+0x110>
   16d06:	0763      	lsls	r3, r4, #29
   16d08:	08ff      	lsrs	r7, r7, #3
   16d0a:	431f      	orrs	r7, r3
   16d0c:	2501      	movs	r5, #1
   16d0e:	4643      	mov	r3, r8
   16d10:	08e4      	lsrs	r4, r4, #3
   16d12:	401d      	ands	r5, r3
   16d14:	e793      	b.n	16c3e <__aeabi_dsub+0x182>
   16d16:	2d00      	cmp	r5, #0
   16d18:	d178      	bne.n	16e0c <__aeabi_dsub+0x350>
   16d1a:	1c75      	adds	r5, r6, #1
   16d1c:	056d      	lsls	r5, r5, #21
   16d1e:	0d6d      	lsrs	r5, r5, #21
   16d20:	2d01      	cmp	r5, #1
   16d22:	dc00      	bgt.n	16d26 <__aeabi_dsub+0x26a>
   16d24:	e0f2      	b.n	16f0c <__aeabi_dsub+0x450>
   16d26:	4650      	mov	r0, sl
   16d28:	1a80      	subs	r0, r0, r2
   16d2a:	4582      	cmp	sl, r0
   16d2c:	41bf      	sbcs	r7, r7
   16d2e:	1a65      	subs	r5, r4, r1
   16d30:	427f      	negs	r7, r7
   16d32:	1bed      	subs	r5, r5, r7
   16d34:	4684      	mov	ip, r0
   16d36:	0228      	lsls	r0, r5, #8
   16d38:	d400      	bmi.n	16d3c <__aeabi_dsub+0x280>
   16d3a:	e08c      	b.n	16e56 <__aeabi_dsub+0x39a>
   16d3c:	4650      	mov	r0, sl
   16d3e:	1a17      	subs	r7, r2, r0
   16d40:	42ba      	cmp	r2, r7
   16d42:	4192      	sbcs	r2, r2
   16d44:	1b0c      	subs	r4, r1, r4
   16d46:	4255      	negs	r5, r2
   16d48:	1b65      	subs	r5, r4, r5
   16d4a:	4698      	mov	r8, r3
   16d4c:	e714      	b.n	16b78 <__aeabi_dsub+0xbc>
   16d4e:	2501      	movs	r5, #1
   16d50:	4643      	mov	r3, r8
   16d52:	2400      	movs	r4, #0
   16d54:	401d      	ands	r5, r3
   16d56:	2700      	movs	r7, #0
   16d58:	e755      	b.n	16c06 <__aeabi_dsub+0x14a>
   16d5a:	4c2a      	ldr	r4, [pc, #168]	; (16e04 <__aeabi_dsub+0x348>)
   16d5c:	1af6      	subs	r6, r6, r3
   16d5e:	402c      	ands	r4, r5
   16d60:	e732      	b.n	16bc8 <__aeabi_dsub+0x10c>
   16d62:	003d      	movs	r5, r7
   16d64:	3828      	subs	r0, #40	; 0x28
   16d66:	4085      	lsls	r5, r0
   16d68:	2700      	movs	r7, #0
   16d6a:	e717      	b.n	16b9c <__aeabi_dsub+0xe0>
   16d6c:	0038      	movs	r0, r7
   16d6e:	f000 faa7 	bl	172c0 <__clzsi2>
   16d72:	3020      	adds	r0, #32
   16d74:	e706      	b.n	16b84 <__aeabi_dsub+0xc8>
   16d76:	430a      	orrs	r2, r1
   16d78:	0017      	movs	r7, r2
   16d7a:	2100      	movs	r1, #0
   16d7c:	1e7a      	subs	r2, r7, #1
   16d7e:	4197      	sbcs	r7, r2
   16d80:	e6ee      	b.n	16b60 <__aeabi_dsub+0xa4>
   16d82:	2b00      	cmp	r3, #0
   16d84:	d000      	beq.n	16d88 <__aeabi_dsub+0x2cc>
   16d86:	e0e5      	b.n	16f54 <__aeabi_dsub+0x498>
   16d88:	1c73      	adds	r3, r6, #1
   16d8a:	469c      	mov	ip, r3
   16d8c:	055b      	lsls	r3, r3, #21
   16d8e:	0d5b      	lsrs	r3, r3, #21
   16d90:	2b01      	cmp	r3, #1
   16d92:	dc00      	bgt.n	16d96 <__aeabi_dsub+0x2da>
   16d94:	e09f      	b.n	16ed6 <__aeabi_dsub+0x41a>
   16d96:	4b1a      	ldr	r3, [pc, #104]	; (16e00 <__aeabi_dsub+0x344>)
   16d98:	459c      	cmp	ip, r3
   16d9a:	d100      	bne.n	16d9e <__aeabi_dsub+0x2e2>
   16d9c:	e0c5      	b.n	16f2a <__aeabi_dsub+0x46e>
   16d9e:	4452      	add	r2, sl
   16da0:	4552      	cmp	r2, sl
   16da2:	4180      	sbcs	r0, r0
   16da4:	1864      	adds	r4, r4, r1
   16da6:	4240      	negs	r0, r0
   16da8:	1824      	adds	r4, r4, r0
   16daa:	07e7      	lsls	r7, r4, #31
   16dac:	0852      	lsrs	r2, r2, #1
   16dae:	4317      	orrs	r7, r2
   16db0:	0864      	lsrs	r4, r4, #1
   16db2:	4666      	mov	r6, ip
   16db4:	e708      	b.n	16bc8 <__aeabi_dsub+0x10c>
   16db6:	4812      	ldr	r0, [pc, #72]	; (16e00 <__aeabi_dsub+0x344>)
   16db8:	4285      	cmp	r5, r0
   16dba:	d100      	bne.n	16dbe <__aeabi_dsub+0x302>
   16dbc:	e085      	b.n	16eca <__aeabi_dsub+0x40e>
   16dbe:	001d      	movs	r5, r3
   16dc0:	e6bc      	b.n	16b3c <__aeabi_dsub+0x80>
   16dc2:	0029      	movs	r1, r5
   16dc4:	3e1f      	subs	r6, #31
   16dc6:	40f1      	lsrs	r1, r6
   16dc8:	2b20      	cmp	r3, #32
   16dca:	d100      	bne.n	16dce <__aeabi_dsub+0x312>
   16dcc:	e07f      	b.n	16ece <__aeabi_dsub+0x412>
   16dce:	2240      	movs	r2, #64	; 0x40
   16dd0:	1ad3      	subs	r3, r2, r3
   16dd2:	409d      	lsls	r5, r3
   16dd4:	432f      	orrs	r7, r5
   16dd6:	1e7d      	subs	r5, r7, #1
   16dd8:	41af      	sbcs	r7, r5
   16dda:	2400      	movs	r4, #0
   16ddc:	430f      	orrs	r7, r1
   16dde:	2600      	movs	r6, #0
   16de0:	e78e      	b.n	16d00 <__aeabi_dsub+0x244>
   16de2:	002b      	movs	r3, r5
   16de4:	000f      	movs	r7, r1
   16de6:	3b20      	subs	r3, #32
   16de8:	40df      	lsrs	r7, r3
   16dea:	2d20      	cmp	r5, #32
   16dec:	d071      	beq.n	16ed2 <__aeabi_dsub+0x416>
   16dee:	2340      	movs	r3, #64	; 0x40
   16df0:	1b5d      	subs	r5, r3, r5
   16df2:	40a9      	lsls	r1, r5
   16df4:	430a      	orrs	r2, r1
   16df6:	1e51      	subs	r1, r2, #1
   16df8:	418a      	sbcs	r2, r1
   16dfa:	2100      	movs	r1, #0
   16dfc:	4317      	orrs	r7, r2
   16dfe:	e6af      	b.n	16b60 <__aeabi_dsub+0xa4>
   16e00:	000007ff 	.word	0x000007ff
   16e04:	ff7fffff 	.word	0xff7fffff
   16e08:	800fffff 	.word	0x800fffff
   16e0c:	2e00      	cmp	r6, #0
   16e0e:	d03e      	beq.n	16e8e <__aeabi_dsub+0x3d2>
   16e10:	4eb3      	ldr	r6, [pc, #716]	; (170e0 <__aeabi_dsub+0x624>)
   16e12:	45b4      	cmp	ip, r6
   16e14:	d045      	beq.n	16ea2 <__aeabi_dsub+0x3e6>
   16e16:	2680      	movs	r6, #128	; 0x80
   16e18:	0436      	lsls	r6, r6, #16
   16e1a:	426d      	negs	r5, r5
   16e1c:	4334      	orrs	r4, r6
   16e1e:	2d38      	cmp	r5, #56	; 0x38
   16e20:	dd00      	ble.n	16e24 <__aeabi_dsub+0x368>
   16e22:	e0a8      	b.n	16f76 <__aeabi_dsub+0x4ba>
   16e24:	2d1f      	cmp	r5, #31
   16e26:	dd00      	ble.n	16e2a <__aeabi_dsub+0x36e>
   16e28:	e11f      	b.n	1706a <__aeabi_dsub+0x5ae>
   16e2a:	2620      	movs	r6, #32
   16e2c:	0027      	movs	r7, r4
   16e2e:	4650      	mov	r0, sl
   16e30:	1b76      	subs	r6, r6, r5
   16e32:	40b7      	lsls	r7, r6
   16e34:	40e8      	lsrs	r0, r5
   16e36:	4307      	orrs	r7, r0
   16e38:	4650      	mov	r0, sl
   16e3a:	40b0      	lsls	r0, r6
   16e3c:	1e46      	subs	r6, r0, #1
   16e3e:	41b0      	sbcs	r0, r6
   16e40:	40ec      	lsrs	r4, r5
   16e42:	4338      	orrs	r0, r7
   16e44:	1a17      	subs	r7, r2, r0
   16e46:	42ba      	cmp	r2, r7
   16e48:	4192      	sbcs	r2, r2
   16e4a:	1b0c      	subs	r4, r1, r4
   16e4c:	4252      	negs	r2, r2
   16e4e:	1aa4      	subs	r4, r4, r2
   16e50:	4666      	mov	r6, ip
   16e52:	4698      	mov	r8, r3
   16e54:	e68b      	b.n	16b6e <__aeabi_dsub+0xb2>
   16e56:	4664      	mov	r4, ip
   16e58:	4667      	mov	r7, ip
   16e5a:	432c      	orrs	r4, r5
   16e5c:	d000      	beq.n	16e60 <__aeabi_dsub+0x3a4>
   16e5e:	e68b      	b.n	16b78 <__aeabi_dsub+0xbc>
   16e60:	2500      	movs	r5, #0
   16e62:	2600      	movs	r6, #0
   16e64:	2700      	movs	r7, #0
   16e66:	e6ea      	b.n	16c3e <__aeabi_dsub+0x182>
   16e68:	001e      	movs	r6, r3
   16e6a:	e6ad      	b.n	16bc8 <__aeabi_dsub+0x10c>
   16e6c:	2b1f      	cmp	r3, #31
   16e6e:	dc60      	bgt.n	16f32 <__aeabi_dsub+0x476>
   16e70:	2720      	movs	r7, #32
   16e72:	1af8      	subs	r0, r7, r3
   16e74:	000f      	movs	r7, r1
   16e76:	4684      	mov	ip, r0
   16e78:	4087      	lsls	r7, r0
   16e7a:	0010      	movs	r0, r2
   16e7c:	40d8      	lsrs	r0, r3
   16e7e:	4307      	orrs	r7, r0
   16e80:	4660      	mov	r0, ip
   16e82:	4082      	lsls	r2, r0
   16e84:	1e50      	subs	r0, r2, #1
   16e86:	4182      	sbcs	r2, r0
   16e88:	40d9      	lsrs	r1, r3
   16e8a:	4317      	orrs	r7, r2
   16e8c:	e6f5      	b.n	16c7a <__aeabi_dsub+0x1be>
   16e8e:	0026      	movs	r6, r4
   16e90:	4650      	mov	r0, sl
   16e92:	4306      	orrs	r6, r0
   16e94:	d005      	beq.n	16ea2 <__aeabi_dsub+0x3e6>
   16e96:	43ed      	mvns	r5, r5
   16e98:	2d00      	cmp	r5, #0
   16e9a:	d0d3      	beq.n	16e44 <__aeabi_dsub+0x388>
   16e9c:	4e90      	ldr	r6, [pc, #576]	; (170e0 <__aeabi_dsub+0x624>)
   16e9e:	45b4      	cmp	ip, r6
   16ea0:	d1bd      	bne.n	16e1e <__aeabi_dsub+0x362>
   16ea2:	000c      	movs	r4, r1
   16ea4:	0017      	movs	r7, r2
   16ea6:	4666      	mov	r6, ip
   16ea8:	4698      	mov	r8, r3
   16eaa:	e68d      	b.n	16bc8 <__aeabi_dsub+0x10c>
   16eac:	488c      	ldr	r0, [pc, #560]	; (170e0 <__aeabi_dsub+0x624>)
   16eae:	4283      	cmp	r3, r0
   16eb0:	d00b      	beq.n	16eca <__aeabi_dsub+0x40e>
   16eb2:	4663      	mov	r3, ip
   16eb4:	e6d9      	b.n	16c6a <__aeabi_dsub+0x1ae>
   16eb6:	2d00      	cmp	r5, #0
   16eb8:	d000      	beq.n	16ebc <__aeabi_dsub+0x400>
   16eba:	e096      	b.n	16fea <__aeabi_dsub+0x52e>
   16ebc:	0008      	movs	r0, r1
   16ebe:	4310      	orrs	r0, r2
   16ec0:	d100      	bne.n	16ec4 <__aeabi_dsub+0x408>
   16ec2:	e0e2      	b.n	1708a <__aeabi_dsub+0x5ce>
   16ec4:	000c      	movs	r4, r1
   16ec6:	0017      	movs	r7, r2
   16ec8:	4698      	mov	r8, r3
   16eca:	4e85      	ldr	r6, [pc, #532]	; (170e0 <__aeabi_dsub+0x624>)
   16ecc:	e67c      	b.n	16bc8 <__aeabi_dsub+0x10c>
   16ece:	2500      	movs	r5, #0
   16ed0:	e780      	b.n	16dd4 <__aeabi_dsub+0x318>
   16ed2:	2100      	movs	r1, #0
   16ed4:	e78e      	b.n	16df4 <__aeabi_dsub+0x338>
   16ed6:	0023      	movs	r3, r4
   16ed8:	4650      	mov	r0, sl
   16eda:	4303      	orrs	r3, r0
   16edc:	2e00      	cmp	r6, #0
   16ede:	d000      	beq.n	16ee2 <__aeabi_dsub+0x426>
   16ee0:	e0a8      	b.n	17034 <__aeabi_dsub+0x578>
   16ee2:	2b00      	cmp	r3, #0
   16ee4:	d100      	bne.n	16ee8 <__aeabi_dsub+0x42c>
   16ee6:	e0de      	b.n	170a6 <__aeabi_dsub+0x5ea>
   16ee8:	000b      	movs	r3, r1
   16eea:	4313      	orrs	r3, r2
   16eec:	d100      	bne.n	16ef0 <__aeabi_dsub+0x434>
   16eee:	e66b      	b.n	16bc8 <__aeabi_dsub+0x10c>
   16ef0:	4452      	add	r2, sl
   16ef2:	4552      	cmp	r2, sl
   16ef4:	4180      	sbcs	r0, r0
   16ef6:	1864      	adds	r4, r4, r1
   16ef8:	4240      	negs	r0, r0
   16efa:	1824      	adds	r4, r4, r0
   16efc:	0017      	movs	r7, r2
   16efe:	0223      	lsls	r3, r4, #8
   16f00:	d400      	bmi.n	16f04 <__aeabi_dsub+0x448>
   16f02:	e6fd      	b.n	16d00 <__aeabi_dsub+0x244>
   16f04:	4b77      	ldr	r3, [pc, #476]	; (170e4 <__aeabi_dsub+0x628>)
   16f06:	4666      	mov	r6, ip
   16f08:	401c      	ands	r4, r3
   16f0a:	e65d      	b.n	16bc8 <__aeabi_dsub+0x10c>
   16f0c:	0025      	movs	r5, r4
   16f0e:	4650      	mov	r0, sl
   16f10:	4305      	orrs	r5, r0
   16f12:	2e00      	cmp	r6, #0
   16f14:	d1cf      	bne.n	16eb6 <__aeabi_dsub+0x3fa>
   16f16:	2d00      	cmp	r5, #0
   16f18:	d14f      	bne.n	16fba <__aeabi_dsub+0x4fe>
   16f1a:	000c      	movs	r4, r1
   16f1c:	4314      	orrs	r4, r2
   16f1e:	d100      	bne.n	16f22 <__aeabi_dsub+0x466>
   16f20:	e0a0      	b.n	17064 <__aeabi_dsub+0x5a8>
   16f22:	000c      	movs	r4, r1
   16f24:	0017      	movs	r7, r2
   16f26:	4698      	mov	r8, r3
   16f28:	e64e      	b.n	16bc8 <__aeabi_dsub+0x10c>
   16f2a:	4666      	mov	r6, ip
   16f2c:	2400      	movs	r4, #0
   16f2e:	2700      	movs	r7, #0
   16f30:	e685      	b.n	16c3e <__aeabi_dsub+0x182>
   16f32:	001f      	movs	r7, r3
   16f34:	0008      	movs	r0, r1
   16f36:	3f20      	subs	r7, #32
   16f38:	40f8      	lsrs	r0, r7
   16f3a:	0007      	movs	r7, r0
   16f3c:	2b20      	cmp	r3, #32
   16f3e:	d100      	bne.n	16f42 <__aeabi_dsub+0x486>
   16f40:	e08e      	b.n	17060 <__aeabi_dsub+0x5a4>
   16f42:	2040      	movs	r0, #64	; 0x40
   16f44:	1ac3      	subs	r3, r0, r3
   16f46:	4099      	lsls	r1, r3
   16f48:	430a      	orrs	r2, r1
   16f4a:	1e51      	subs	r1, r2, #1
   16f4c:	418a      	sbcs	r2, r1
   16f4e:	2100      	movs	r1, #0
   16f50:	4317      	orrs	r7, r2
   16f52:	e692      	b.n	16c7a <__aeabi_dsub+0x1be>
   16f54:	2e00      	cmp	r6, #0
   16f56:	d114      	bne.n	16f82 <__aeabi_dsub+0x4c6>
   16f58:	0026      	movs	r6, r4
   16f5a:	4650      	mov	r0, sl
   16f5c:	4306      	orrs	r6, r0
   16f5e:	d062      	beq.n	17026 <__aeabi_dsub+0x56a>
   16f60:	43db      	mvns	r3, r3
   16f62:	2b00      	cmp	r3, #0
   16f64:	d15c      	bne.n	17020 <__aeabi_dsub+0x564>
   16f66:	1887      	adds	r7, r0, r2
   16f68:	4297      	cmp	r7, r2
   16f6a:	4192      	sbcs	r2, r2
   16f6c:	1864      	adds	r4, r4, r1
   16f6e:	4252      	negs	r2, r2
   16f70:	18a4      	adds	r4, r4, r2
   16f72:	4666      	mov	r6, ip
   16f74:	e687      	b.n	16c86 <__aeabi_dsub+0x1ca>
   16f76:	4650      	mov	r0, sl
   16f78:	4320      	orrs	r0, r4
   16f7a:	1e44      	subs	r4, r0, #1
   16f7c:	41a0      	sbcs	r0, r4
   16f7e:	2400      	movs	r4, #0
   16f80:	e760      	b.n	16e44 <__aeabi_dsub+0x388>
   16f82:	4e57      	ldr	r6, [pc, #348]	; (170e0 <__aeabi_dsub+0x624>)
   16f84:	45b4      	cmp	ip, r6
   16f86:	d04e      	beq.n	17026 <__aeabi_dsub+0x56a>
   16f88:	2680      	movs	r6, #128	; 0x80
   16f8a:	0436      	lsls	r6, r6, #16
   16f8c:	425b      	negs	r3, r3
   16f8e:	4334      	orrs	r4, r6
   16f90:	2b38      	cmp	r3, #56	; 0x38
   16f92:	dd00      	ble.n	16f96 <__aeabi_dsub+0x4da>
   16f94:	e07f      	b.n	17096 <__aeabi_dsub+0x5da>
   16f96:	2b1f      	cmp	r3, #31
   16f98:	dd00      	ble.n	16f9c <__aeabi_dsub+0x4e0>
   16f9a:	e08b      	b.n	170b4 <__aeabi_dsub+0x5f8>
   16f9c:	2620      	movs	r6, #32
   16f9e:	0027      	movs	r7, r4
   16fa0:	4650      	mov	r0, sl
   16fa2:	1af6      	subs	r6, r6, r3
   16fa4:	40b7      	lsls	r7, r6
   16fa6:	40d8      	lsrs	r0, r3
   16fa8:	4307      	orrs	r7, r0
   16faa:	4650      	mov	r0, sl
   16fac:	40b0      	lsls	r0, r6
   16fae:	1e46      	subs	r6, r0, #1
   16fb0:	41b0      	sbcs	r0, r6
   16fb2:	4307      	orrs	r7, r0
   16fb4:	40dc      	lsrs	r4, r3
   16fb6:	18bf      	adds	r7, r7, r2
   16fb8:	e7d6      	b.n	16f68 <__aeabi_dsub+0x4ac>
   16fba:	000d      	movs	r5, r1
   16fbc:	4315      	orrs	r5, r2
   16fbe:	d100      	bne.n	16fc2 <__aeabi_dsub+0x506>
   16fc0:	e602      	b.n	16bc8 <__aeabi_dsub+0x10c>
   16fc2:	4650      	mov	r0, sl
   16fc4:	1a80      	subs	r0, r0, r2
   16fc6:	4582      	cmp	sl, r0
   16fc8:	41bf      	sbcs	r7, r7
   16fca:	1a65      	subs	r5, r4, r1
   16fcc:	427f      	negs	r7, r7
   16fce:	1bed      	subs	r5, r5, r7
   16fd0:	4684      	mov	ip, r0
   16fd2:	0228      	lsls	r0, r5, #8
   16fd4:	d400      	bmi.n	16fd8 <__aeabi_dsub+0x51c>
   16fd6:	e68d      	b.n	16cf4 <__aeabi_dsub+0x238>
   16fd8:	4650      	mov	r0, sl
   16fda:	1a17      	subs	r7, r2, r0
   16fdc:	42ba      	cmp	r2, r7
   16fde:	4192      	sbcs	r2, r2
   16fe0:	1b0c      	subs	r4, r1, r4
   16fe2:	4252      	negs	r2, r2
   16fe4:	1aa4      	subs	r4, r4, r2
   16fe6:	4698      	mov	r8, r3
   16fe8:	e5ee      	b.n	16bc8 <__aeabi_dsub+0x10c>
   16fea:	000d      	movs	r5, r1
   16fec:	4315      	orrs	r5, r2
   16fee:	d100      	bne.n	16ff2 <__aeabi_dsub+0x536>
   16ff0:	e76b      	b.n	16eca <__aeabi_dsub+0x40e>
   16ff2:	4650      	mov	r0, sl
   16ff4:	0767      	lsls	r7, r4, #29
   16ff6:	08c0      	lsrs	r0, r0, #3
   16ff8:	4307      	orrs	r7, r0
   16ffa:	2080      	movs	r0, #128	; 0x80
   16ffc:	08e4      	lsrs	r4, r4, #3
   16ffe:	0300      	lsls	r0, r0, #12
   17000:	4204      	tst	r4, r0
   17002:	d007      	beq.n	17014 <__aeabi_dsub+0x558>
   17004:	08cd      	lsrs	r5, r1, #3
   17006:	4205      	tst	r5, r0
   17008:	d104      	bne.n	17014 <__aeabi_dsub+0x558>
   1700a:	002c      	movs	r4, r5
   1700c:	4698      	mov	r8, r3
   1700e:	08d7      	lsrs	r7, r2, #3
   17010:	0749      	lsls	r1, r1, #29
   17012:	430f      	orrs	r7, r1
   17014:	0f7b      	lsrs	r3, r7, #29
   17016:	00e4      	lsls	r4, r4, #3
   17018:	431c      	orrs	r4, r3
   1701a:	00ff      	lsls	r7, r7, #3
   1701c:	4e30      	ldr	r6, [pc, #192]	; (170e0 <__aeabi_dsub+0x624>)
   1701e:	e5d3      	b.n	16bc8 <__aeabi_dsub+0x10c>
   17020:	4e2f      	ldr	r6, [pc, #188]	; (170e0 <__aeabi_dsub+0x624>)
   17022:	45b4      	cmp	ip, r6
   17024:	d1b4      	bne.n	16f90 <__aeabi_dsub+0x4d4>
   17026:	000c      	movs	r4, r1
   17028:	0017      	movs	r7, r2
   1702a:	4666      	mov	r6, ip
   1702c:	e5cc      	b.n	16bc8 <__aeabi_dsub+0x10c>
   1702e:	2700      	movs	r7, #0
   17030:	2400      	movs	r4, #0
   17032:	e5e8      	b.n	16c06 <__aeabi_dsub+0x14a>
   17034:	2b00      	cmp	r3, #0
   17036:	d039      	beq.n	170ac <__aeabi_dsub+0x5f0>
   17038:	000b      	movs	r3, r1
   1703a:	4313      	orrs	r3, r2
   1703c:	d100      	bne.n	17040 <__aeabi_dsub+0x584>
   1703e:	e744      	b.n	16eca <__aeabi_dsub+0x40e>
   17040:	08c0      	lsrs	r0, r0, #3
   17042:	0767      	lsls	r7, r4, #29
   17044:	4307      	orrs	r7, r0
   17046:	2080      	movs	r0, #128	; 0x80
   17048:	08e4      	lsrs	r4, r4, #3
   1704a:	0300      	lsls	r0, r0, #12
   1704c:	4204      	tst	r4, r0
   1704e:	d0e1      	beq.n	17014 <__aeabi_dsub+0x558>
   17050:	08cb      	lsrs	r3, r1, #3
   17052:	4203      	tst	r3, r0
   17054:	d1de      	bne.n	17014 <__aeabi_dsub+0x558>
   17056:	08d7      	lsrs	r7, r2, #3
   17058:	0749      	lsls	r1, r1, #29
   1705a:	430f      	orrs	r7, r1
   1705c:	001c      	movs	r4, r3
   1705e:	e7d9      	b.n	17014 <__aeabi_dsub+0x558>
   17060:	2100      	movs	r1, #0
   17062:	e771      	b.n	16f48 <__aeabi_dsub+0x48c>
   17064:	2500      	movs	r5, #0
   17066:	2700      	movs	r7, #0
   17068:	e5e9      	b.n	16c3e <__aeabi_dsub+0x182>
   1706a:	002e      	movs	r6, r5
   1706c:	0027      	movs	r7, r4
   1706e:	3e20      	subs	r6, #32
   17070:	40f7      	lsrs	r7, r6
   17072:	2d20      	cmp	r5, #32
   17074:	d02f      	beq.n	170d6 <__aeabi_dsub+0x61a>
   17076:	2640      	movs	r6, #64	; 0x40
   17078:	1b75      	subs	r5, r6, r5
   1707a:	40ac      	lsls	r4, r5
   1707c:	4650      	mov	r0, sl
   1707e:	4320      	orrs	r0, r4
   17080:	1e44      	subs	r4, r0, #1
   17082:	41a0      	sbcs	r0, r4
   17084:	2400      	movs	r4, #0
   17086:	4338      	orrs	r0, r7
   17088:	e6dc      	b.n	16e44 <__aeabi_dsub+0x388>
   1708a:	2480      	movs	r4, #128	; 0x80
   1708c:	2500      	movs	r5, #0
   1708e:	0324      	lsls	r4, r4, #12
   17090:	4e13      	ldr	r6, [pc, #76]	; (170e0 <__aeabi_dsub+0x624>)
   17092:	2700      	movs	r7, #0
   17094:	e5d3      	b.n	16c3e <__aeabi_dsub+0x182>
   17096:	4650      	mov	r0, sl
   17098:	4320      	orrs	r0, r4
   1709a:	0007      	movs	r7, r0
   1709c:	1e78      	subs	r0, r7, #1
   1709e:	4187      	sbcs	r7, r0
   170a0:	2400      	movs	r4, #0
   170a2:	18bf      	adds	r7, r7, r2
   170a4:	e760      	b.n	16f68 <__aeabi_dsub+0x4ac>
   170a6:	000c      	movs	r4, r1
   170a8:	0017      	movs	r7, r2
   170aa:	e58d      	b.n	16bc8 <__aeabi_dsub+0x10c>
   170ac:	000c      	movs	r4, r1
   170ae:	0017      	movs	r7, r2
   170b0:	4e0b      	ldr	r6, [pc, #44]	; (170e0 <__aeabi_dsub+0x624>)
   170b2:	e589      	b.n	16bc8 <__aeabi_dsub+0x10c>
   170b4:	001e      	movs	r6, r3
   170b6:	0027      	movs	r7, r4
   170b8:	3e20      	subs	r6, #32
   170ba:	40f7      	lsrs	r7, r6
   170bc:	2b20      	cmp	r3, #32
   170be:	d00c      	beq.n	170da <__aeabi_dsub+0x61e>
   170c0:	2640      	movs	r6, #64	; 0x40
   170c2:	1af3      	subs	r3, r6, r3
   170c4:	409c      	lsls	r4, r3
   170c6:	4650      	mov	r0, sl
   170c8:	4320      	orrs	r0, r4
   170ca:	1e44      	subs	r4, r0, #1
   170cc:	41a0      	sbcs	r0, r4
   170ce:	4307      	orrs	r7, r0
   170d0:	2400      	movs	r4, #0
   170d2:	18bf      	adds	r7, r7, r2
   170d4:	e748      	b.n	16f68 <__aeabi_dsub+0x4ac>
   170d6:	2400      	movs	r4, #0
   170d8:	e7d0      	b.n	1707c <__aeabi_dsub+0x5c0>
   170da:	2400      	movs	r4, #0
   170dc:	e7f3      	b.n	170c6 <__aeabi_dsub+0x60a>
   170de:	46c0      	nop			; (mov r8, r8)
   170e0:	000007ff 	.word	0x000007ff
   170e4:	ff7fffff 	.word	0xff7fffff

000170e8 <__aeabi_d2iz>:
   170e8:	b530      	push	{r4, r5, lr}
   170ea:	4d13      	ldr	r5, [pc, #76]	; (17138 <__aeabi_d2iz+0x50>)
   170ec:	030a      	lsls	r2, r1, #12
   170ee:	004b      	lsls	r3, r1, #1
   170f0:	0b12      	lsrs	r2, r2, #12
   170f2:	0d5b      	lsrs	r3, r3, #21
   170f4:	0fc9      	lsrs	r1, r1, #31
   170f6:	2400      	movs	r4, #0
   170f8:	42ab      	cmp	r3, r5
   170fa:	dd10      	ble.n	1711e <__aeabi_d2iz+0x36>
   170fc:	4c0f      	ldr	r4, [pc, #60]	; (1713c <__aeabi_d2iz+0x54>)
   170fe:	42a3      	cmp	r3, r4
   17100:	dc0f      	bgt.n	17122 <__aeabi_d2iz+0x3a>
   17102:	2480      	movs	r4, #128	; 0x80
   17104:	4d0e      	ldr	r5, [pc, #56]	; (17140 <__aeabi_d2iz+0x58>)
   17106:	0364      	lsls	r4, r4, #13
   17108:	4322      	orrs	r2, r4
   1710a:	1aed      	subs	r5, r5, r3
   1710c:	2d1f      	cmp	r5, #31
   1710e:	dd0b      	ble.n	17128 <__aeabi_d2iz+0x40>
   17110:	480c      	ldr	r0, [pc, #48]	; (17144 <__aeabi_d2iz+0x5c>)
   17112:	1ac3      	subs	r3, r0, r3
   17114:	40da      	lsrs	r2, r3
   17116:	4254      	negs	r4, r2
   17118:	2900      	cmp	r1, #0
   1711a:	d100      	bne.n	1711e <__aeabi_d2iz+0x36>
   1711c:	0014      	movs	r4, r2
   1711e:	0020      	movs	r0, r4
   17120:	bd30      	pop	{r4, r5, pc}
   17122:	4b09      	ldr	r3, [pc, #36]	; (17148 <__aeabi_d2iz+0x60>)
   17124:	18cc      	adds	r4, r1, r3
   17126:	e7fa      	b.n	1711e <__aeabi_d2iz+0x36>
   17128:	4c08      	ldr	r4, [pc, #32]	; (1714c <__aeabi_d2iz+0x64>)
   1712a:	40e8      	lsrs	r0, r5
   1712c:	46a4      	mov	ip, r4
   1712e:	4463      	add	r3, ip
   17130:	409a      	lsls	r2, r3
   17132:	4302      	orrs	r2, r0
   17134:	e7ef      	b.n	17116 <__aeabi_d2iz+0x2e>
   17136:	46c0      	nop			; (mov r8, r8)
   17138:	000003fe 	.word	0x000003fe
   1713c:	0000041d 	.word	0x0000041d
   17140:	00000433 	.word	0x00000433
   17144:	00000413 	.word	0x00000413
   17148:	7fffffff 	.word	0x7fffffff
   1714c:	fffffbed 	.word	0xfffffbed

00017150 <__aeabi_i2d>:
   17150:	b570      	push	{r4, r5, r6, lr}
   17152:	2800      	cmp	r0, #0
   17154:	d030      	beq.n	171b8 <__aeabi_i2d+0x68>
   17156:	17c3      	asrs	r3, r0, #31
   17158:	18c4      	adds	r4, r0, r3
   1715a:	405c      	eors	r4, r3
   1715c:	0fc5      	lsrs	r5, r0, #31
   1715e:	0020      	movs	r0, r4
   17160:	f000 f8ae 	bl	172c0 <__clzsi2>
   17164:	4b17      	ldr	r3, [pc, #92]	; (171c4 <__aeabi_i2d+0x74>)
   17166:	4a18      	ldr	r2, [pc, #96]	; (171c8 <__aeabi_i2d+0x78>)
   17168:	1a1b      	subs	r3, r3, r0
   1716a:	1ad2      	subs	r2, r2, r3
   1716c:	2a1f      	cmp	r2, #31
   1716e:	dd18      	ble.n	171a2 <__aeabi_i2d+0x52>
   17170:	4a16      	ldr	r2, [pc, #88]	; (171cc <__aeabi_i2d+0x7c>)
   17172:	1ad2      	subs	r2, r2, r3
   17174:	4094      	lsls	r4, r2
   17176:	2200      	movs	r2, #0
   17178:	0324      	lsls	r4, r4, #12
   1717a:	055b      	lsls	r3, r3, #21
   1717c:	0b24      	lsrs	r4, r4, #12
   1717e:	0d5b      	lsrs	r3, r3, #21
   17180:	2100      	movs	r1, #0
   17182:	0010      	movs	r0, r2
   17184:	0324      	lsls	r4, r4, #12
   17186:	0d0a      	lsrs	r2, r1, #20
   17188:	0b24      	lsrs	r4, r4, #12
   1718a:	0512      	lsls	r2, r2, #20
   1718c:	4322      	orrs	r2, r4
   1718e:	4c10      	ldr	r4, [pc, #64]	; (171d0 <__aeabi_i2d+0x80>)
   17190:	051b      	lsls	r3, r3, #20
   17192:	4022      	ands	r2, r4
   17194:	4313      	orrs	r3, r2
   17196:	005b      	lsls	r3, r3, #1
   17198:	07ed      	lsls	r5, r5, #31
   1719a:	085b      	lsrs	r3, r3, #1
   1719c:	432b      	orrs	r3, r5
   1719e:	0019      	movs	r1, r3
   171a0:	bd70      	pop	{r4, r5, r6, pc}
   171a2:	0021      	movs	r1, r4
   171a4:	4091      	lsls	r1, r2
   171a6:	000a      	movs	r2, r1
   171a8:	210b      	movs	r1, #11
   171aa:	1a08      	subs	r0, r1, r0
   171ac:	40c4      	lsrs	r4, r0
   171ae:	055b      	lsls	r3, r3, #21
   171b0:	0324      	lsls	r4, r4, #12
   171b2:	0b24      	lsrs	r4, r4, #12
   171b4:	0d5b      	lsrs	r3, r3, #21
   171b6:	e7e3      	b.n	17180 <__aeabi_i2d+0x30>
   171b8:	2500      	movs	r5, #0
   171ba:	2300      	movs	r3, #0
   171bc:	2400      	movs	r4, #0
   171be:	2200      	movs	r2, #0
   171c0:	e7de      	b.n	17180 <__aeabi_i2d+0x30>
   171c2:	46c0      	nop			; (mov r8, r8)
   171c4:	0000041e 	.word	0x0000041e
   171c8:	00000433 	.word	0x00000433
   171cc:	00000413 	.word	0x00000413
   171d0:	800fffff 	.word	0x800fffff

000171d4 <__aeabi_ui2d>:
   171d4:	b510      	push	{r4, lr}
   171d6:	1e04      	subs	r4, r0, #0
   171d8:	d028      	beq.n	1722c <__aeabi_ui2d+0x58>
   171da:	f000 f871 	bl	172c0 <__clzsi2>
   171de:	4b15      	ldr	r3, [pc, #84]	; (17234 <__aeabi_ui2d+0x60>)
   171e0:	4a15      	ldr	r2, [pc, #84]	; (17238 <__aeabi_ui2d+0x64>)
   171e2:	1a1b      	subs	r3, r3, r0
   171e4:	1ad2      	subs	r2, r2, r3
   171e6:	2a1f      	cmp	r2, #31
   171e8:	dd15      	ble.n	17216 <__aeabi_ui2d+0x42>
   171ea:	4a14      	ldr	r2, [pc, #80]	; (1723c <__aeabi_ui2d+0x68>)
   171ec:	1ad2      	subs	r2, r2, r3
   171ee:	4094      	lsls	r4, r2
   171f0:	2200      	movs	r2, #0
   171f2:	0324      	lsls	r4, r4, #12
   171f4:	055b      	lsls	r3, r3, #21
   171f6:	0b24      	lsrs	r4, r4, #12
   171f8:	0d5b      	lsrs	r3, r3, #21
   171fa:	2100      	movs	r1, #0
   171fc:	0010      	movs	r0, r2
   171fe:	0324      	lsls	r4, r4, #12
   17200:	0d0a      	lsrs	r2, r1, #20
   17202:	0b24      	lsrs	r4, r4, #12
   17204:	0512      	lsls	r2, r2, #20
   17206:	4322      	orrs	r2, r4
   17208:	4c0d      	ldr	r4, [pc, #52]	; (17240 <__aeabi_ui2d+0x6c>)
   1720a:	051b      	lsls	r3, r3, #20
   1720c:	4022      	ands	r2, r4
   1720e:	4313      	orrs	r3, r2
   17210:	005b      	lsls	r3, r3, #1
   17212:	0859      	lsrs	r1, r3, #1
   17214:	bd10      	pop	{r4, pc}
   17216:	0021      	movs	r1, r4
   17218:	4091      	lsls	r1, r2
   1721a:	000a      	movs	r2, r1
   1721c:	210b      	movs	r1, #11
   1721e:	1a08      	subs	r0, r1, r0
   17220:	40c4      	lsrs	r4, r0
   17222:	055b      	lsls	r3, r3, #21
   17224:	0324      	lsls	r4, r4, #12
   17226:	0b24      	lsrs	r4, r4, #12
   17228:	0d5b      	lsrs	r3, r3, #21
   1722a:	e7e6      	b.n	171fa <__aeabi_ui2d+0x26>
   1722c:	2300      	movs	r3, #0
   1722e:	2400      	movs	r4, #0
   17230:	2200      	movs	r2, #0
   17232:	e7e2      	b.n	171fa <__aeabi_ui2d+0x26>
   17234:	0000041e 	.word	0x0000041e
   17238:	00000433 	.word	0x00000433
   1723c:	00000413 	.word	0x00000413
   17240:	800fffff 	.word	0x800fffff

00017244 <__aeabi_cdrcmple>:
   17244:	4684      	mov	ip, r0
   17246:	1c10      	adds	r0, r2, #0
   17248:	4662      	mov	r2, ip
   1724a:	468c      	mov	ip, r1
   1724c:	1c19      	adds	r1, r3, #0
   1724e:	4663      	mov	r3, ip
   17250:	e000      	b.n	17254 <__aeabi_cdcmpeq>
   17252:	46c0      	nop			; (mov r8, r8)

00017254 <__aeabi_cdcmpeq>:
   17254:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   17256:	f000 f9cb 	bl	175f0 <__ledf2>
   1725a:	2800      	cmp	r0, #0
   1725c:	d401      	bmi.n	17262 <__aeabi_cdcmpeq+0xe>
   1725e:	2100      	movs	r1, #0
   17260:	42c8      	cmn	r0, r1
   17262:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00017264 <__aeabi_dcmpeq>:
   17264:	b510      	push	{r4, lr}
   17266:	f000 f925 	bl	174b4 <__eqdf2>
   1726a:	4240      	negs	r0, r0
   1726c:	3001      	adds	r0, #1
   1726e:	bd10      	pop	{r4, pc}

00017270 <__aeabi_dcmplt>:
   17270:	b510      	push	{r4, lr}
   17272:	f000 f9bd 	bl	175f0 <__ledf2>
   17276:	2800      	cmp	r0, #0
   17278:	db01      	blt.n	1727e <__aeabi_dcmplt+0xe>
   1727a:	2000      	movs	r0, #0
   1727c:	bd10      	pop	{r4, pc}
   1727e:	2001      	movs	r0, #1
   17280:	bd10      	pop	{r4, pc}
   17282:	46c0      	nop			; (mov r8, r8)

00017284 <__aeabi_dcmple>:
   17284:	b510      	push	{r4, lr}
   17286:	f000 f9b3 	bl	175f0 <__ledf2>
   1728a:	2800      	cmp	r0, #0
   1728c:	dd01      	ble.n	17292 <__aeabi_dcmple+0xe>
   1728e:	2000      	movs	r0, #0
   17290:	bd10      	pop	{r4, pc}
   17292:	2001      	movs	r0, #1
   17294:	bd10      	pop	{r4, pc}
   17296:	46c0      	nop			; (mov r8, r8)

00017298 <__aeabi_dcmpgt>:
   17298:	b510      	push	{r4, lr}
   1729a:	f000 f945 	bl	17528 <__gedf2>
   1729e:	2800      	cmp	r0, #0
   172a0:	dc01      	bgt.n	172a6 <__aeabi_dcmpgt+0xe>
   172a2:	2000      	movs	r0, #0
   172a4:	bd10      	pop	{r4, pc}
   172a6:	2001      	movs	r0, #1
   172a8:	bd10      	pop	{r4, pc}
   172aa:	46c0      	nop			; (mov r8, r8)

000172ac <__aeabi_dcmpge>:
   172ac:	b510      	push	{r4, lr}
   172ae:	f000 f93b 	bl	17528 <__gedf2>
   172b2:	2800      	cmp	r0, #0
   172b4:	da01      	bge.n	172ba <__aeabi_dcmpge+0xe>
   172b6:	2000      	movs	r0, #0
   172b8:	bd10      	pop	{r4, pc}
   172ba:	2001      	movs	r0, #1
   172bc:	bd10      	pop	{r4, pc}
   172be:	46c0      	nop			; (mov r8, r8)

000172c0 <__clzsi2>:
   172c0:	211c      	movs	r1, #28
   172c2:	2301      	movs	r3, #1
   172c4:	041b      	lsls	r3, r3, #16
   172c6:	4298      	cmp	r0, r3
   172c8:	d301      	bcc.n	172ce <__clzsi2+0xe>
   172ca:	0c00      	lsrs	r0, r0, #16
   172cc:	3910      	subs	r1, #16
   172ce:	0a1b      	lsrs	r3, r3, #8
   172d0:	4298      	cmp	r0, r3
   172d2:	d301      	bcc.n	172d8 <__clzsi2+0x18>
   172d4:	0a00      	lsrs	r0, r0, #8
   172d6:	3908      	subs	r1, #8
   172d8:	091b      	lsrs	r3, r3, #4
   172da:	4298      	cmp	r0, r3
   172dc:	d301      	bcc.n	172e2 <__clzsi2+0x22>
   172de:	0900      	lsrs	r0, r0, #4
   172e0:	3904      	subs	r1, #4
   172e2:	a202      	add	r2, pc, #8	; (adr r2, 172ec <__clzsi2+0x2c>)
   172e4:	5c10      	ldrb	r0, [r2, r0]
   172e6:	1840      	adds	r0, r0, r1
   172e8:	4770      	bx	lr
   172ea:	46c0      	nop			; (mov r8, r8)
   172ec:	02020304 	.word	0x02020304
   172f0:	01010101 	.word	0x01010101
	...

000172fc <__divdi3>:
   172fc:	b5f0      	push	{r4, r5, r6, r7, lr}
   172fe:	464e      	mov	r6, r9
   17300:	4657      	mov	r7, sl
   17302:	46de      	mov	lr, fp
   17304:	4645      	mov	r5, r8
   17306:	b5e0      	push	{r5, r6, r7, lr}
   17308:	0006      	movs	r6, r0
   1730a:	2000      	movs	r0, #0
   1730c:	000f      	movs	r7, r1
   1730e:	b083      	sub	sp, #12
   17310:	0019      	movs	r1, r3
   17312:	4681      	mov	r9, r0
   17314:	2f00      	cmp	r7, #0
   17316:	da00      	bge.n	1731a <__divdi3+0x1e>
   17318:	e08c      	b.n	17434 <__divdi3+0x138>
   1731a:	2900      	cmp	r1, #0
   1731c:	da00      	bge.n	17320 <__divdi3+0x24>
   1731e:	e080      	b.n	17422 <__divdi3+0x126>
   17320:	0034      	movs	r4, r6
   17322:	003d      	movs	r5, r7
   17324:	4692      	mov	sl, r2
   17326:	4698      	mov	r8, r3
   17328:	42bb      	cmp	r3, r7
   1732a:	d869      	bhi.n	17400 <__divdi3+0x104>
   1732c:	d066      	beq.n	173fc <__divdi3+0x100>
   1732e:	4641      	mov	r1, r8
   17330:	4650      	mov	r0, sl
   17332:	f000 f9bf 	bl	176b4 <__clzdi2>
   17336:	4683      	mov	fp, r0
   17338:	0039      	movs	r1, r7
   1733a:	0030      	movs	r0, r6
   1733c:	f000 f9ba 	bl	176b4 <__clzdi2>
   17340:	465b      	mov	r3, fp
   17342:	1a1b      	subs	r3, r3, r0
   17344:	469c      	mov	ip, r3
   17346:	3b20      	subs	r3, #32
   17348:	469b      	mov	fp, r3
   1734a:	d500      	bpl.n	1734e <__divdi3+0x52>
   1734c:	e087      	b.n	1745e <__divdi3+0x162>
   1734e:	4651      	mov	r1, sl
   17350:	4658      	mov	r0, fp
   17352:	4081      	lsls	r1, r0
   17354:	000b      	movs	r3, r1
   17356:	4651      	mov	r1, sl
   17358:	4660      	mov	r0, ip
   1735a:	4081      	lsls	r1, r0
   1735c:	000a      	movs	r2, r1
   1735e:	42bb      	cmp	r3, r7
   17360:	d900      	bls.n	17364 <__divdi3+0x68>
   17362:	e072      	b.n	1744a <__divdi3+0x14e>
   17364:	d06e      	beq.n	17444 <__divdi3+0x148>
   17366:	0034      	movs	r4, r6
   17368:	003d      	movs	r5, r7
   1736a:	4659      	mov	r1, fp
   1736c:	1aa4      	subs	r4, r4, r2
   1736e:	419d      	sbcs	r5, r3
   17370:	2900      	cmp	r1, #0
   17372:	da00      	bge.n	17376 <__divdi3+0x7a>
   17374:	e08a      	b.n	1748c <__divdi3+0x190>
   17376:	2100      	movs	r1, #0
   17378:	2000      	movs	r0, #0
   1737a:	2601      	movs	r6, #1
   1737c:	9000      	str	r0, [sp, #0]
   1737e:	9101      	str	r1, [sp, #4]
   17380:	4659      	mov	r1, fp
   17382:	408e      	lsls	r6, r1
   17384:	9601      	str	r6, [sp, #4]
   17386:	4661      	mov	r1, ip
   17388:	2601      	movs	r6, #1
   1738a:	408e      	lsls	r6, r1
   1738c:	4661      	mov	r1, ip
   1738e:	9600      	str	r6, [sp, #0]
   17390:	2900      	cmp	r1, #0
   17392:	d061      	beq.n	17458 <__divdi3+0x15c>
   17394:	07d9      	lsls	r1, r3, #31
   17396:	0856      	lsrs	r6, r2, #1
   17398:	430e      	orrs	r6, r1
   1739a:	085f      	lsrs	r7, r3, #1
   1739c:	4661      	mov	r1, ip
   1739e:	2201      	movs	r2, #1
   173a0:	2300      	movs	r3, #0
   173a2:	e00c      	b.n	173be <__divdi3+0xc2>
   173a4:	42af      	cmp	r7, r5
   173a6:	d101      	bne.n	173ac <__divdi3+0xb0>
   173a8:	42a6      	cmp	r6, r4
   173aa:	d80a      	bhi.n	173c2 <__divdi3+0xc6>
   173ac:	1ba4      	subs	r4, r4, r6
   173ae:	41bd      	sbcs	r5, r7
   173b0:	1924      	adds	r4, r4, r4
   173b2:	416d      	adcs	r5, r5
   173b4:	3901      	subs	r1, #1
   173b6:	18a4      	adds	r4, r4, r2
   173b8:	415d      	adcs	r5, r3
   173ba:	2900      	cmp	r1, #0
   173bc:	d006      	beq.n	173cc <__divdi3+0xd0>
   173be:	42af      	cmp	r7, r5
   173c0:	d9f0      	bls.n	173a4 <__divdi3+0xa8>
   173c2:	3901      	subs	r1, #1
   173c4:	1924      	adds	r4, r4, r4
   173c6:	416d      	adcs	r5, r5
   173c8:	2900      	cmp	r1, #0
   173ca:	d1f8      	bne.n	173be <__divdi3+0xc2>
   173cc:	465b      	mov	r3, fp
   173ce:	9800      	ldr	r0, [sp, #0]
   173d0:	9901      	ldr	r1, [sp, #4]
   173d2:	1900      	adds	r0, r0, r4
   173d4:	4169      	adcs	r1, r5
   173d6:	2b00      	cmp	r3, #0
   173d8:	db4d      	blt.n	17476 <__divdi3+0x17a>
   173da:	002e      	movs	r6, r5
   173dc:	40de      	lsrs	r6, r3
   173de:	4663      	mov	r3, ip
   173e0:	002c      	movs	r4, r5
   173e2:	40dc      	lsrs	r4, r3
   173e4:	465b      	mov	r3, fp
   173e6:	2b00      	cmp	r3, #0
   173e8:	db5b      	blt.n	174a2 <__divdi3+0x1a6>
   173ea:	0034      	movs	r4, r6
   173ec:	409c      	lsls	r4, r3
   173ee:	0023      	movs	r3, r4
   173f0:	4664      	mov	r4, ip
   173f2:	40a6      	lsls	r6, r4
   173f4:	0032      	movs	r2, r6
   173f6:	1a80      	subs	r0, r0, r2
   173f8:	4199      	sbcs	r1, r3
   173fa:	e003      	b.n	17404 <__divdi3+0x108>
   173fc:	42b2      	cmp	r2, r6
   173fe:	d996      	bls.n	1732e <__divdi3+0x32>
   17400:	2000      	movs	r0, #0
   17402:	2100      	movs	r1, #0
   17404:	464b      	mov	r3, r9
   17406:	2b00      	cmp	r3, #0
   17408:	d004      	beq.n	17414 <__divdi3+0x118>
   1740a:	0003      	movs	r3, r0
   1740c:	000c      	movs	r4, r1
   1740e:	2100      	movs	r1, #0
   17410:	4258      	negs	r0, r3
   17412:	41a1      	sbcs	r1, r4
   17414:	b003      	add	sp, #12
   17416:	bc3c      	pop	{r2, r3, r4, r5}
   17418:	4690      	mov	r8, r2
   1741a:	4699      	mov	r9, r3
   1741c:	46a2      	mov	sl, r4
   1741e:	46ab      	mov	fp, r5
   17420:	bdf0      	pop	{r4, r5, r6, r7, pc}
   17422:	4649      	mov	r1, r9
   17424:	43c9      	mvns	r1, r1
   17426:	0010      	movs	r0, r2
   17428:	4689      	mov	r9, r1
   1742a:	0019      	movs	r1, r3
   1742c:	2300      	movs	r3, #0
   1742e:	4242      	negs	r2, r0
   17430:	418b      	sbcs	r3, r1
   17432:	e775      	b.n	17320 <__divdi3+0x24>
   17434:	0034      	movs	r4, r6
   17436:	003d      	movs	r5, r7
   17438:	3801      	subs	r0, #1
   1743a:	2700      	movs	r7, #0
   1743c:	4266      	negs	r6, r4
   1743e:	41af      	sbcs	r7, r5
   17440:	4681      	mov	r9, r0
   17442:	e76a      	b.n	1731a <__divdi3+0x1e>
   17444:	42b1      	cmp	r1, r6
   17446:	d800      	bhi.n	1744a <__divdi3+0x14e>
   17448:	e78d      	b.n	17366 <__divdi3+0x6a>
   1744a:	2100      	movs	r1, #0
   1744c:	2000      	movs	r0, #0
   1744e:	9000      	str	r0, [sp, #0]
   17450:	9101      	str	r1, [sp, #4]
   17452:	4661      	mov	r1, ip
   17454:	2900      	cmp	r1, #0
   17456:	d19d      	bne.n	17394 <__divdi3+0x98>
   17458:	9800      	ldr	r0, [sp, #0]
   1745a:	9901      	ldr	r1, [sp, #4]
   1745c:	e7d2      	b.n	17404 <__divdi3+0x108>
   1745e:	4662      	mov	r2, ip
   17460:	4640      	mov	r0, r8
   17462:	2320      	movs	r3, #32
   17464:	4651      	mov	r1, sl
   17466:	4090      	lsls	r0, r2
   17468:	1a9b      	subs	r3, r3, r2
   1746a:	40d9      	lsrs	r1, r3
   1746c:	0003      	movs	r3, r0
   1746e:	9100      	str	r1, [sp, #0]
   17470:	9900      	ldr	r1, [sp, #0]
   17472:	430b      	orrs	r3, r1
   17474:	e76f      	b.n	17356 <__divdi3+0x5a>
   17476:	4662      	mov	r2, ip
   17478:	2320      	movs	r3, #32
   1747a:	1a9b      	subs	r3, r3, r2
   1747c:	002a      	movs	r2, r5
   1747e:	409a      	lsls	r2, r3
   17480:	0026      	movs	r6, r4
   17482:	0013      	movs	r3, r2
   17484:	4662      	mov	r2, ip
   17486:	40d6      	lsrs	r6, r2
   17488:	431e      	orrs	r6, r3
   1748a:	e7a8      	b.n	173de <__divdi3+0xe2>
   1748c:	4661      	mov	r1, ip
   1748e:	2620      	movs	r6, #32
   17490:	2701      	movs	r7, #1
   17492:	1a76      	subs	r6, r6, r1
   17494:	2000      	movs	r0, #0
   17496:	2100      	movs	r1, #0
   17498:	40f7      	lsrs	r7, r6
   1749a:	9000      	str	r0, [sp, #0]
   1749c:	9101      	str	r1, [sp, #4]
   1749e:	9701      	str	r7, [sp, #4]
   174a0:	e771      	b.n	17386 <__divdi3+0x8a>
   174a2:	4662      	mov	r2, ip
   174a4:	2320      	movs	r3, #32
   174a6:	0035      	movs	r5, r6
   174a8:	4094      	lsls	r4, r2
   174aa:	1a9b      	subs	r3, r3, r2
   174ac:	40dd      	lsrs	r5, r3
   174ae:	0023      	movs	r3, r4
   174b0:	432b      	orrs	r3, r5
   174b2:	e79d      	b.n	173f0 <__divdi3+0xf4>

000174b4 <__eqdf2>:
   174b4:	b5f0      	push	{r4, r5, r6, r7, lr}
   174b6:	464f      	mov	r7, r9
   174b8:	4646      	mov	r6, r8
   174ba:	46d6      	mov	lr, sl
   174bc:	005c      	lsls	r4, r3, #1
   174be:	b5c0      	push	{r6, r7, lr}
   174c0:	031f      	lsls	r7, r3, #12
   174c2:	0fdb      	lsrs	r3, r3, #31
   174c4:	469a      	mov	sl, r3
   174c6:	4b17      	ldr	r3, [pc, #92]	; (17524 <__eqdf2+0x70>)
   174c8:	030e      	lsls	r6, r1, #12
   174ca:	004d      	lsls	r5, r1, #1
   174cc:	4684      	mov	ip, r0
   174ce:	4680      	mov	r8, r0
   174d0:	0b36      	lsrs	r6, r6, #12
   174d2:	0d6d      	lsrs	r5, r5, #21
   174d4:	0fc9      	lsrs	r1, r1, #31
   174d6:	4691      	mov	r9, r2
   174d8:	0b3f      	lsrs	r7, r7, #12
   174da:	0d64      	lsrs	r4, r4, #21
   174dc:	2001      	movs	r0, #1
   174de:	429d      	cmp	r5, r3
   174e0:	d008      	beq.n	174f4 <__eqdf2+0x40>
   174e2:	429c      	cmp	r4, r3
   174e4:	d001      	beq.n	174ea <__eqdf2+0x36>
   174e6:	42a5      	cmp	r5, r4
   174e8:	d00b      	beq.n	17502 <__eqdf2+0x4e>
   174ea:	bc1c      	pop	{r2, r3, r4}
   174ec:	4690      	mov	r8, r2
   174ee:	4699      	mov	r9, r3
   174f0:	46a2      	mov	sl, r4
   174f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   174f4:	4663      	mov	r3, ip
   174f6:	4333      	orrs	r3, r6
   174f8:	d1f7      	bne.n	174ea <__eqdf2+0x36>
   174fa:	42ac      	cmp	r4, r5
   174fc:	d1f5      	bne.n	174ea <__eqdf2+0x36>
   174fe:	433a      	orrs	r2, r7
   17500:	d1f3      	bne.n	174ea <__eqdf2+0x36>
   17502:	2001      	movs	r0, #1
   17504:	42be      	cmp	r6, r7
   17506:	d1f0      	bne.n	174ea <__eqdf2+0x36>
   17508:	45c8      	cmp	r8, r9
   1750a:	d1ee      	bne.n	174ea <__eqdf2+0x36>
   1750c:	4551      	cmp	r1, sl
   1750e:	d007      	beq.n	17520 <__eqdf2+0x6c>
   17510:	2d00      	cmp	r5, #0
   17512:	d1ea      	bne.n	174ea <__eqdf2+0x36>
   17514:	4663      	mov	r3, ip
   17516:	431e      	orrs	r6, r3
   17518:	0030      	movs	r0, r6
   1751a:	1e46      	subs	r6, r0, #1
   1751c:	41b0      	sbcs	r0, r6
   1751e:	e7e4      	b.n	174ea <__eqdf2+0x36>
   17520:	2000      	movs	r0, #0
   17522:	e7e2      	b.n	174ea <__eqdf2+0x36>
   17524:	000007ff 	.word	0x000007ff

00017528 <__gedf2>:
   17528:	b5f0      	push	{r4, r5, r6, r7, lr}
   1752a:	4645      	mov	r5, r8
   1752c:	46de      	mov	lr, fp
   1752e:	4657      	mov	r7, sl
   17530:	464e      	mov	r6, r9
   17532:	b5e0      	push	{r5, r6, r7, lr}
   17534:	031f      	lsls	r7, r3, #12
   17536:	0b3d      	lsrs	r5, r7, #12
   17538:	4f2c      	ldr	r7, [pc, #176]	; (175ec <__gedf2+0xc4>)
   1753a:	030e      	lsls	r6, r1, #12
   1753c:	004c      	lsls	r4, r1, #1
   1753e:	46ab      	mov	fp, r5
   17540:	005d      	lsls	r5, r3, #1
   17542:	4684      	mov	ip, r0
   17544:	0b36      	lsrs	r6, r6, #12
   17546:	0d64      	lsrs	r4, r4, #21
   17548:	0fc9      	lsrs	r1, r1, #31
   1754a:	4690      	mov	r8, r2
   1754c:	0d6d      	lsrs	r5, r5, #21
   1754e:	0fdb      	lsrs	r3, r3, #31
   17550:	42bc      	cmp	r4, r7
   17552:	d02a      	beq.n	175aa <__gedf2+0x82>
   17554:	4f25      	ldr	r7, [pc, #148]	; (175ec <__gedf2+0xc4>)
   17556:	42bd      	cmp	r5, r7
   17558:	d02d      	beq.n	175b6 <__gedf2+0x8e>
   1755a:	2c00      	cmp	r4, #0
   1755c:	d10f      	bne.n	1757e <__gedf2+0x56>
   1755e:	4330      	orrs	r0, r6
   17560:	0007      	movs	r7, r0
   17562:	4681      	mov	r9, r0
   17564:	4278      	negs	r0, r7
   17566:	4178      	adcs	r0, r7
   17568:	b2c0      	uxtb	r0, r0
   1756a:	2d00      	cmp	r5, #0
   1756c:	d117      	bne.n	1759e <__gedf2+0x76>
   1756e:	465f      	mov	r7, fp
   17570:	433a      	orrs	r2, r7
   17572:	d114      	bne.n	1759e <__gedf2+0x76>
   17574:	464b      	mov	r3, r9
   17576:	2000      	movs	r0, #0
   17578:	2b00      	cmp	r3, #0
   1757a:	d00a      	beq.n	17592 <__gedf2+0x6a>
   1757c:	e006      	b.n	1758c <__gedf2+0x64>
   1757e:	2d00      	cmp	r5, #0
   17580:	d102      	bne.n	17588 <__gedf2+0x60>
   17582:	4658      	mov	r0, fp
   17584:	4302      	orrs	r2, r0
   17586:	d001      	beq.n	1758c <__gedf2+0x64>
   17588:	4299      	cmp	r1, r3
   1758a:	d018      	beq.n	175be <__gedf2+0x96>
   1758c:	4248      	negs	r0, r1
   1758e:	2101      	movs	r1, #1
   17590:	4308      	orrs	r0, r1
   17592:	bc3c      	pop	{r2, r3, r4, r5}
   17594:	4690      	mov	r8, r2
   17596:	4699      	mov	r9, r3
   17598:	46a2      	mov	sl, r4
   1759a:	46ab      	mov	fp, r5
   1759c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1759e:	2800      	cmp	r0, #0
   175a0:	d0f2      	beq.n	17588 <__gedf2+0x60>
   175a2:	2001      	movs	r0, #1
   175a4:	3b01      	subs	r3, #1
   175a6:	4318      	orrs	r0, r3
   175a8:	e7f3      	b.n	17592 <__gedf2+0x6a>
   175aa:	0037      	movs	r7, r6
   175ac:	4307      	orrs	r7, r0
   175ae:	d0d1      	beq.n	17554 <__gedf2+0x2c>
   175b0:	2002      	movs	r0, #2
   175b2:	4240      	negs	r0, r0
   175b4:	e7ed      	b.n	17592 <__gedf2+0x6a>
   175b6:	465f      	mov	r7, fp
   175b8:	4317      	orrs	r7, r2
   175ba:	d0ce      	beq.n	1755a <__gedf2+0x32>
   175bc:	e7f8      	b.n	175b0 <__gedf2+0x88>
   175be:	42ac      	cmp	r4, r5
   175c0:	dce4      	bgt.n	1758c <__gedf2+0x64>
   175c2:	da03      	bge.n	175cc <__gedf2+0xa4>
   175c4:	1e48      	subs	r0, r1, #1
   175c6:	2101      	movs	r1, #1
   175c8:	4308      	orrs	r0, r1
   175ca:	e7e2      	b.n	17592 <__gedf2+0x6a>
   175cc:	455e      	cmp	r6, fp
   175ce:	d8dd      	bhi.n	1758c <__gedf2+0x64>
   175d0:	d006      	beq.n	175e0 <__gedf2+0xb8>
   175d2:	2000      	movs	r0, #0
   175d4:	455e      	cmp	r6, fp
   175d6:	d2dc      	bcs.n	17592 <__gedf2+0x6a>
   175d8:	2301      	movs	r3, #1
   175da:	1e48      	subs	r0, r1, #1
   175dc:	4318      	orrs	r0, r3
   175de:	e7d8      	b.n	17592 <__gedf2+0x6a>
   175e0:	45c4      	cmp	ip, r8
   175e2:	d8d3      	bhi.n	1758c <__gedf2+0x64>
   175e4:	2000      	movs	r0, #0
   175e6:	45c4      	cmp	ip, r8
   175e8:	d3f6      	bcc.n	175d8 <__gedf2+0xb0>
   175ea:	e7d2      	b.n	17592 <__gedf2+0x6a>
   175ec:	000007ff 	.word	0x000007ff

000175f0 <__ledf2>:
   175f0:	b5f0      	push	{r4, r5, r6, r7, lr}
   175f2:	464e      	mov	r6, r9
   175f4:	4645      	mov	r5, r8
   175f6:	46de      	mov	lr, fp
   175f8:	4657      	mov	r7, sl
   175fa:	005c      	lsls	r4, r3, #1
   175fc:	b5e0      	push	{r5, r6, r7, lr}
   175fe:	031f      	lsls	r7, r3, #12
   17600:	0fdb      	lsrs	r3, r3, #31
   17602:	4699      	mov	r9, r3
   17604:	4b2a      	ldr	r3, [pc, #168]	; (176b0 <__ledf2+0xc0>)
   17606:	030e      	lsls	r6, r1, #12
   17608:	004d      	lsls	r5, r1, #1
   1760a:	0fc9      	lsrs	r1, r1, #31
   1760c:	4684      	mov	ip, r0
   1760e:	0b36      	lsrs	r6, r6, #12
   17610:	0d6d      	lsrs	r5, r5, #21
   17612:	468b      	mov	fp, r1
   17614:	4690      	mov	r8, r2
   17616:	0b3f      	lsrs	r7, r7, #12
   17618:	0d64      	lsrs	r4, r4, #21
   1761a:	429d      	cmp	r5, r3
   1761c:	d020      	beq.n	17660 <__ledf2+0x70>
   1761e:	4b24      	ldr	r3, [pc, #144]	; (176b0 <__ledf2+0xc0>)
   17620:	429c      	cmp	r4, r3
   17622:	d022      	beq.n	1766a <__ledf2+0x7a>
   17624:	2d00      	cmp	r5, #0
   17626:	d112      	bne.n	1764e <__ledf2+0x5e>
   17628:	4330      	orrs	r0, r6
   1762a:	4243      	negs	r3, r0
   1762c:	4143      	adcs	r3, r0
   1762e:	b2db      	uxtb	r3, r3
   17630:	2c00      	cmp	r4, #0
   17632:	d01f      	beq.n	17674 <__ledf2+0x84>
   17634:	2b00      	cmp	r3, #0
   17636:	d00c      	beq.n	17652 <__ledf2+0x62>
   17638:	464b      	mov	r3, r9
   1763a:	2001      	movs	r0, #1
   1763c:	3b01      	subs	r3, #1
   1763e:	4303      	orrs	r3, r0
   17640:	0018      	movs	r0, r3
   17642:	bc3c      	pop	{r2, r3, r4, r5}
   17644:	4690      	mov	r8, r2
   17646:	4699      	mov	r9, r3
   17648:	46a2      	mov	sl, r4
   1764a:	46ab      	mov	fp, r5
   1764c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1764e:	2c00      	cmp	r4, #0
   17650:	d016      	beq.n	17680 <__ledf2+0x90>
   17652:	45cb      	cmp	fp, r9
   17654:	d017      	beq.n	17686 <__ledf2+0x96>
   17656:	465b      	mov	r3, fp
   17658:	4259      	negs	r1, r3
   1765a:	2301      	movs	r3, #1
   1765c:	430b      	orrs	r3, r1
   1765e:	e7ef      	b.n	17640 <__ledf2+0x50>
   17660:	0031      	movs	r1, r6
   17662:	2302      	movs	r3, #2
   17664:	4301      	orrs	r1, r0
   17666:	d1eb      	bne.n	17640 <__ledf2+0x50>
   17668:	e7d9      	b.n	1761e <__ledf2+0x2e>
   1766a:	0039      	movs	r1, r7
   1766c:	2302      	movs	r3, #2
   1766e:	4311      	orrs	r1, r2
   17670:	d1e6      	bne.n	17640 <__ledf2+0x50>
   17672:	e7d7      	b.n	17624 <__ledf2+0x34>
   17674:	433a      	orrs	r2, r7
   17676:	d1dd      	bne.n	17634 <__ledf2+0x44>
   17678:	2300      	movs	r3, #0
   1767a:	2800      	cmp	r0, #0
   1767c:	d0e0      	beq.n	17640 <__ledf2+0x50>
   1767e:	e7ea      	b.n	17656 <__ledf2+0x66>
   17680:	433a      	orrs	r2, r7
   17682:	d1e6      	bne.n	17652 <__ledf2+0x62>
   17684:	e7e7      	b.n	17656 <__ledf2+0x66>
   17686:	42a5      	cmp	r5, r4
   17688:	dce5      	bgt.n	17656 <__ledf2+0x66>
   1768a:	db05      	blt.n	17698 <__ledf2+0xa8>
   1768c:	42be      	cmp	r6, r7
   1768e:	d8e2      	bhi.n	17656 <__ledf2+0x66>
   17690:	d007      	beq.n	176a2 <__ledf2+0xb2>
   17692:	2300      	movs	r3, #0
   17694:	42be      	cmp	r6, r7
   17696:	d2d3      	bcs.n	17640 <__ledf2+0x50>
   17698:	4659      	mov	r1, fp
   1769a:	2301      	movs	r3, #1
   1769c:	3901      	subs	r1, #1
   1769e:	430b      	orrs	r3, r1
   176a0:	e7ce      	b.n	17640 <__ledf2+0x50>
   176a2:	45c4      	cmp	ip, r8
   176a4:	d8d7      	bhi.n	17656 <__ledf2+0x66>
   176a6:	2300      	movs	r3, #0
   176a8:	45c4      	cmp	ip, r8
   176aa:	d3f5      	bcc.n	17698 <__ledf2+0xa8>
   176ac:	e7c8      	b.n	17640 <__ledf2+0x50>
   176ae:	46c0      	nop			; (mov r8, r8)
   176b0:	000007ff 	.word	0x000007ff

000176b4 <__clzdi2>:
   176b4:	b510      	push	{r4, lr}
   176b6:	2900      	cmp	r1, #0
   176b8:	d103      	bne.n	176c2 <__clzdi2+0xe>
   176ba:	f7ff fe01 	bl	172c0 <__clzsi2>
   176be:	3020      	adds	r0, #32
   176c0:	e002      	b.n	176c8 <__clzdi2+0x14>
   176c2:	1c08      	adds	r0, r1, #0
   176c4:	f7ff fdfc 	bl	172c0 <__clzsi2>
   176c8:	bd10      	pop	{r4, pc}
   176ca:	46c0      	nop			; (mov r8, r8)

000176cc <__libc_init_array>:
   176cc:	b570      	push	{r4, r5, r6, lr}
   176ce:	4e0d      	ldr	r6, [pc, #52]	; (17704 <__libc_init_array+0x38>)
   176d0:	4d0d      	ldr	r5, [pc, #52]	; (17708 <__libc_init_array+0x3c>)
   176d2:	2400      	movs	r4, #0
   176d4:	1bad      	subs	r5, r5, r6
   176d6:	10ad      	asrs	r5, r5, #2
   176d8:	d005      	beq.n	176e6 <__libc_init_array+0x1a>
   176da:	00a3      	lsls	r3, r4, #2
   176dc:	58f3      	ldr	r3, [r6, r3]
   176de:	3401      	adds	r4, #1
   176e0:	4798      	blx	r3
   176e2:	42a5      	cmp	r5, r4
   176e4:	d1f9      	bne.n	176da <__libc_init_array+0xe>
   176e6:	f006 ff47 	bl	1e578 <_init>
   176ea:	4e08      	ldr	r6, [pc, #32]	; (1770c <__libc_init_array+0x40>)
   176ec:	4d08      	ldr	r5, [pc, #32]	; (17710 <__libc_init_array+0x44>)
   176ee:	2400      	movs	r4, #0
   176f0:	1bad      	subs	r5, r5, r6
   176f2:	10ad      	asrs	r5, r5, #2
   176f4:	d005      	beq.n	17702 <__libc_init_array+0x36>
   176f6:	00a3      	lsls	r3, r4, #2
   176f8:	58f3      	ldr	r3, [r6, r3]
   176fa:	3401      	adds	r4, #1
   176fc:	4798      	blx	r3
   176fe:	42a5      	cmp	r5, r4
   17700:	d1f9      	bne.n	176f6 <__libc_init_array+0x2a>
   17702:	bd70      	pop	{r4, r5, r6, pc}
   17704:	0001e584 	.word	0x0001e584
   17708:	0001e584 	.word	0x0001e584
   1770c:	0001e584 	.word	0x0001e584
   17710:	0001e58c 	.word	0x0001e58c

00017714 <memcpy>:
   17714:	b5f0      	push	{r4, r5, r6, r7, lr}
   17716:	0005      	movs	r5, r0
   17718:	2a0f      	cmp	r2, #15
   1771a:	d92f      	bls.n	1777c <memcpy+0x68>
   1771c:	000b      	movs	r3, r1
   1771e:	4303      	orrs	r3, r0
   17720:	079b      	lsls	r3, r3, #30
   17722:	d134      	bne.n	1778e <memcpy+0x7a>
   17724:	0016      	movs	r6, r2
   17726:	000c      	movs	r4, r1
   17728:	0003      	movs	r3, r0
   1772a:	3e10      	subs	r6, #16
   1772c:	0935      	lsrs	r5, r6, #4
   1772e:	3501      	adds	r5, #1
   17730:	012d      	lsls	r5, r5, #4
   17732:	1945      	adds	r5, r0, r5
   17734:	6827      	ldr	r7, [r4, #0]
   17736:	601f      	str	r7, [r3, #0]
   17738:	6867      	ldr	r7, [r4, #4]
   1773a:	605f      	str	r7, [r3, #4]
   1773c:	68a7      	ldr	r7, [r4, #8]
   1773e:	609f      	str	r7, [r3, #8]
   17740:	68e7      	ldr	r7, [r4, #12]
   17742:	3410      	adds	r4, #16
   17744:	60df      	str	r7, [r3, #12]
   17746:	3310      	adds	r3, #16
   17748:	429d      	cmp	r5, r3
   1774a:	d1f3      	bne.n	17734 <memcpy+0x20>
   1774c:	230f      	movs	r3, #15
   1774e:	439e      	bics	r6, r3
   17750:	3610      	adds	r6, #16
   17752:	1985      	adds	r5, r0, r6
   17754:	1989      	adds	r1, r1, r6
   17756:	4013      	ands	r3, r2
   17758:	2b03      	cmp	r3, #3
   1775a:	d91a      	bls.n	17792 <memcpy+0x7e>
   1775c:	1f1e      	subs	r6, r3, #4
   1775e:	2300      	movs	r3, #0
   17760:	08b4      	lsrs	r4, r6, #2
   17762:	3401      	adds	r4, #1
   17764:	00a4      	lsls	r4, r4, #2
   17766:	58cf      	ldr	r7, [r1, r3]
   17768:	50ef      	str	r7, [r5, r3]
   1776a:	3304      	adds	r3, #4
   1776c:	42a3      	cmp	r3, r4
   1776e:	d1fa      	bne.n	17766 <memcpy+0x52>
   17770:	2403      	movs	r4, #3
   17772:	43a6      	bics	r6, r4
   17774:	1d33      	adds	r3, r6, #4
   17776:	4022      	ands	r2, r4
   17778:	18c9      	adds	r1, r1, r3
   1777a:	18ed      	adds	r5, r5, r3
   1777c:	2a00      	cmp	r2, #0
   1777e:	d005      	beq.n	1778c <memcpy+0x78>
   17780:	2300      	movs	r3, #0
   17782:	5ccc      	ldrb	r4, [r1, r3]
   17784:	54ec      	strb	r4, [r5, r3]
   17786:	3301      	adds	r3, #1
   17788:	4293      	cmp	r3, r2
   1778a:	d1fa      	bne.n	17782 <memcpy+0x6e>
   1778c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1778e:	0005      	movs	r5, r0
   17790:	e7f6      	b.n	17780 <memcpy+0x6c>
   17792:	001a      	movs	r2, r3
   17794:	e7f2      	b.n	1777c <memcpy+0x68>
   17796:	46c0      	nop			; (mov r8, r8)

00017798 <memset>:
   17798:	b5f0      	push	{r4, r5, r6, r7, lr}
   1779a:	0783      	lsls	r3, r0, #30
   1779c:	d043      	beq.n	17826 <memset+0x8e>
   1779e:	1e54      	subs	r4, r2, #1
   177a0:	2a00      	cmp	r2, #0
   177a2:	d03f      	beq.n	17824 <memset+0x8c>
   177a4:	b2ce      	uxtb	r6, r1
   177a6:	0002      	movs	r2, r0
   177a8:	2503      	movs	r5, #3
   177aa:	e002      	b.n	177b2 <memset+0x1a>
   177ac:	001a      	movs	r2, r3
   177ae:	3c01      	subs	r4, #1
   177b0:	d338      	bcc.n	17824 <memset+0x8c>
   177b2:	1c53      	adds	r3, r2, #1
   177b4:	7016      	strb	r6, [r2, #0]
   177b6:	422b      	tst	r3, r5
   177b8:	d1f8      	bne.n	177ac <memset+0x14>
   177ba:	2c03      	cmp	r4, #3
   177bc:	d92a      	bls.n	17814 <memset+0x7c>
   177be:	22ff      	movs	r2, #255	; 0xff
   177c0:	400a      	ands	r2, r1
   177c2:	0215      	lsls	r5, r2, #8
   177c4:	4315      	orrs	r5, r2
   177c6:	042a      	lsls	r2, r5, #16
   177c8:	4315      	orrs	r5, r2
   177ca:	2c0f      	cmp	r4, #15
   177cc:	d914      	bls.n	177f8 <memset+0x60>
   177ce:	0027      	movs	r7, r4
   177d0:	001a      	movs	r2, r3
   177d2:	3f10      	subs	r7, #16
   177d4:	093e      	lsrs	r6, r7, #4
   177d6:	3601      	adds	r6, #1
   177d8:	0136      	lsls	r6, r6, #4
   177da:	199e      	adds	r6, r3, r6
   177dc:	6015      	str	r5, [r2, #0]
   177de:	6055      	str	r5, [r2, #4]
   177e0:	6095      	str	r5, [r2, #8]
   177e2:	60d5      	str	r5, [r2, #12]
   177e4:	3210      	adds	r2, #16
   177e6:	4296      	cmp	r6, r2
   177e8:	d1f8      	bne.n	177dc <memset+0x44>
   177ea:	220f      	movs	r2, #15
   177ec:	4397      	bics	r7, r2
   177ee:	3710      	adds	r7, #16
   177f0:	19db      	adds	r3, r3, r7
   177f2:	4014      	ands	r4, r2
   177f4:	2c03      	cmp	r4, #3
   177f6:	d90d      	bls.n	17814 <memset+0x7c>
   177f8:	001a      	movs	r2, r3
   177fa:	1f27      	subs	r7, r4, #4
   177fc:	08be      	lsrs	r6, r7, #2
   177fe:	3601      	adds	r6, #1
   17800:	00b6      	lsls	r6, r6, #2
   17802:	199e      	adds	r6, r3, r6
   17804:	c220      	stmia	r2!, {r5}
   17806:	42b2      	cmp	r2, r6
   17808:	d1fc      	bne.n	17804 <memset+0x6c>
   1780a:	2203      	movs	r2, #3
   1780c:	4397      	bics	r7, r2
   1780e:	3704      	adds	r7, #4
   17810:	19db      	adds	r3, r3, r7
   17812:	4014      	ands	r4, r2
   17814:	2c00      	cmp	r4, #0
   17816:	d005      	beq.n	17824 <memset+0x8c>
   17818:	b2c9      	uxtb	r1, r1
   1781a:	191c      	adds	r4, r3, r4
   1781c:	7019      	strb	r1, [r3, #0]
   1781e:	3301      	adds	r3, #1
   17820:	429c      	cmp	r4, r3
   17822:	d1fb      	bne.n	1781c <memset+0x84>
   17824:	bdf0      	pop	{r4, r5, r6, r7, pc}
   17826:	0014      	movs	r4, r2
   17828:	0003      	movs	r3, r0
   1782a:	e7c6      	b.n	177ba <memset+0x22>

0001782c <printf>:
   1782c:	b40f      	push	{r0, r1, r2, r3}
   1782e:	b500      	push	{lr}
   17830:	4906      	ldr	r1, [pc, #24]	; (1784c <printf+0x20>)
   17832:	b083      	sub	sp, #12
   17834:	ab04      	add	r3, sp, #16
   17836:	6808      	ldr	r0, [r1, #0]
   17838:	cb04      	ldmia	r3!, {r2}
   1783a:	6881      	ldr	r1, [r0, #8]
   1783c:	9301      	str	r3, [sp, #4]
   1783e:	f000 fa4d 	bl	17cdc <_vfprintf_r>
   17842:	b003      	add	sp, #12
   17844:	bc08      	pop	{r3}
   17846:	b004      	add	sp, #16
   17848:	4718      	bx	r3
   1784a:	46c0      	nop			; (mov r8, r8)
   1784c:	20000038 	.word	0x20000038

00017850 <putchar>:
   17850:	b510      	push	{r4, lr}
   17852:	4b03      	ldr	r3, [pc, #12]	; (17860 <putchar+0x10>)
   17854:	0001      	movs	r1, r0
   17856:	6818      	ldr	r0, [r3, #0]
   17858:	6882      	ldr	r2, [r0, #8]
   1785a:	f004 fa6b 	bl	1bd34 <_putc_r>
   1785e:	bd10      	pop	{r4, pc}
   17860:	20000038 	.word	0x20000038

00017864 <_puts_r>:
   17864:	b530      	push	{r4, r5, lr}
   17866:	0004      	movs	r4, r0
   17868:	b089      	sub	sp, #36	; 0x24
   1786a:	0008      	movs	r0, r1
   1786c:	000d      	movs	r5, r1
   1786e:	f000 f947 	bl	17b00 <strlen>
   17872:	ab04      	add	r3, sp, #16
   17874:	4a21      	ldr	r2, [pc, #132]	; (178fc <_puts_r+0x98>)
   17876:	9301      	str	r3, [sp, #4]
   17878:	2302      	movs	r3, #2
   1787a:	9206      	str	r2, [sp, #24]
   1787c:	2201      	movs	r2, #1
   1787e:	9302      	str	r3, [sp, #8]
   17880:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   17882:	9005      	str	r0, [sp, #20]
   17884:	3001      	adds	r0, #1
   17886:	9504      	str	r5, [sp, #16]
   17888:	9207      	str	r2, [sp, #28]
   1788a:	9003      	str	r0, [sp, #12]
   1788c:	68a5      	ldr	r5, [r4, #8]
   1788e:	2b00      	cmp	r3, #0
   17890:	d02f      	beq.n	178f2 <_puts_r+0x8e>
   17892:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   17894:	07db      	lsls	r3, r3, #31
   17896:	d424      	bmi.n	178e2 <_puts_r+0x7e>
   17898:	230c      	movs	r3, #12
   1789a:	5eea      	ldrsh	r2, [r5, r3]
   1789c:	b291      	uxth	r1, r2
   1789e:	058b      	lsls	r3, r1, #22
   178a0:	d51c      	bpl.n	178dc <_puts_r+0x78>
   178a2:	2380      	movs	r3, #128	; 0x80
   178a4:	019b      	lsls	r3, r3, #6
   178a6:	4219      	tst	r1, r3
   178a8:	d105      	bne.n	178b6 <_puts_r+0x52>
   178aa:	4313      	orrs	r3, r2
   178ac:	81ab      	strh	r3, [r5, #12]
   178ae:	6e6a      	ldr	r2, [r5, #100]	; 0x64
   178b0:	4b13      	ldr	r3, [pc, #76]	; (17900 <_puts_r+0x9c>)
   178b2:	4013      	ands	r3, r2
   178b4:	666b      	str	r3, [r5, #100]	; 0x64
   178b6:	0020      	movs	r0, r4
   178b8:	aa01      	add	r2, sp, #4
   178ba:	0029      	movs	r1, r5
   178bc:	f003 f934 	bl	1ab28 <__sfvwrite_r>
   178c0:	1e44      	subs	r4, r0, #1
   178c2:	41a0      	sbcs	r0, r4
   178c4:	4244      	negs	r4, r0
   178c6:	200a      	movs	r0, #10
   178c8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   178ca:	4304      	orrs	r4, r0
   178cc:	07db      	lsls	r3, r3, #31
   178ce:	d402      	bmi.n	178d6 <_puts_r+0x72>
   178d0:	89ab      	ldrh	r3, [r5, #12]
   178d2:	059b      	lsls	r3, r3, #22
   178d4:	d509      	bpl.n	178ea <_puts_r+0x86>
   178d6:	0020      	movs	r0, r4
   178d8:	b009      	add	sp, #36	; 0x24
   178da:	bd30      	pop	{r4, r5, pc}
   178dc:	6da8      	ldr	r0, [r5, #88]	; 0x58
   178de:	f003 faf1 	bl	1aec4 <__retarget_lock_acquire_recursive>
   178e2:	230c      	movs	r3, #12
   178e4:	5eea      	ldrsh	r2, [r5, r3]
   178e6:	b291      	uxth	r1, r2
   178e8:	e7db      	b.n	178a2 <_puts_r+0x3e>
   178ea:	6da8      	ldr	r0, [r5, #88]	; 0x58
   178ec:	f003 faec 	bl	1aec8 <__retarget_lock_release_recursive>
   178f0:	e7f1      	b.n	178d6 <_puts_r+0x72>
   178f2:	0020      	movs	r0, r4
   178f4:	f002 ff90 	bl	1a818 <__sinit>
   178f8:	e7cb      	b.n	17892 <_puts_r+0x2e>
   178fa:	46c0      	nop			; (mov r8, r8)
   178fc:	0001e18c 	.word	0x0001e18c
   17900:	ffffdfff 	.word	0xffffdfff

00017904 <puts>:
   17904:	b510      	push	{r4, lr}
   17906:	4b03      	ldr	r3, [pc, #12]	; (17914 <puts+0x10>)
   17908:	0001      	movs	r1, r0
   1790a:	6818      	ldr	r0, [r3, #0]
   1790c:	f7ff ffaa 	bl	17864 <_puts_r>
   17910:	bd10      	pop	{r4, pc}
   17912:	46c0      	nop			; (mov r8, r8)
   17914:	20000038 	.word	0x20000038

00017918 <rand>:
   17918:	b510      	push	{r4, lr}
   1791a:	4b09      	ldr	r3, [pc, #36]	; (17940 <rand+0x28>)
   1791c:	4a09      	ldr	r2, [pc, #36]	; (17944 <rand+0x2c>)
   1791e:	681c      	ldr	r4, [r3, #0]
   17920:	4b09      	ldr	r3, [pc, #36]	; (17948 <rand+0x30>)
   17922:	34a8      	adds	r4, #168	; 0xa8
   17924:	6820      	ldr	r0, [r4, #0]
   17926:	6861      	ldr	r1, [r4, #4]
   17928:	f7fd fa04 	bl	14d34 <__aeabi_lmul>
   1792c:	2201      	movs	r2, #1
   1792e:	2300      	movs	r3, #0
   17930:	1880      	adds	r0, r0, r2
   17932:	4159      	adcs	r1, r3
   17934:	6020      	str	r0, [r4, #0]
   17936:	6061      	str	r1, [r4, #4]
   17938:	0048      	lsls	r0, r1, #1
   1793a:	0840      	lsrs	r0, r0, #1
   1793c:	bd10      	pop	{r4, pc}
   1793e:	46c0      	nop			; (mov r8, r8)
   17940:	20000038 	.word	0x20000038
   17944:	4c957f2d 	.word	0x4c957f2d
   17948:	5851f42d 	.word	0x5851f42d

0001794c <setbuf>:
   1794c:	424a      	negs	r2, r1
   1794e:	414a      	adcs	r2, r1
   17950:	2380      	movs	r3, #128	; 0x80
   17952:	b510      	push	{r4, lr}
   17954:	0052      	lsls	r2, r2, #1
   17956:	00db      	lsls	r3, r3, #3
   17958:	f000 f802 	bl	17960 <setvbuf>
   1795c:	bd10      	pop	{r4, pc}
   1795e:	46c0      	nop			; (mov r8, r8)

00017960 <setvbuf>:
   17960:	b5f0      	push	{r4, r5, r6, r7, lr}
   17962:	4647      	mov	r7, r8
   17964:	46ce      	mov	lr, r9
   17966:	b580      	push	{r7, lr}
   17968:	001f      	movs	r7, r3
   1796a:	4b63      	ldr	r3, [pc, #396]	; (17af8 <setvbuf+0x198>)
   1796c:	b083      	sub	sp, #12
   1796e:	681d      	ldr	r5, [r3, #0]
   17970:	0004      	movs	r4, r0
   17972:	4688      	mov	r8, r1
   17974:	0016      	movs	r6, r2
   17976:	2d00      	cmp	r5, #0
   17978:	d002      	beq.n	17980 <setvbuf+0x20>
   1797a:	6bab      	ldr	r3, [r5, #56]	; 0x38
   1797c:	2b00      	cmp	r3, #0
   1797e:	d066      	beq.n	17a4e <setvbuf+0xee>
   17980:	2e02      	cmp	r6, #2
   17982:	d005      	beq.n	17990 <setvbuf+0x30>
   17984:	2e01      	cmp	r6, #1
   17986:	d900      	bls.n	1798a <setvbuf+0x2a>
   17988:	e0a1      	b.n	17ace <setvbuf+0x16e>
   1798a:	2f00      	cmp	r7, #0
   1798c:	da00      	bge.n	17990 <setvbuf+0x30>
   1798e:	e09e      	b.n	17ace <setvbuf+0x16e>
   17990:	6e63      	ldr	r3, [r4, #100]	; 0x64
   17992:	07db      	lsls	r3, r3, #31
   17994:	d533      	bpl.n	179fe <setvbuf+0x9e>
   17996:	0021      	movs	r1, r4
   17998:	0028      	movs	r0, r5
   1799a:	f002 fee3 	bl	1a764 <_fflush_r>
   1799e:	6b21      	ldr	r1, [r4, #48]	; 0x30
   179a0:	2900      	cmp	r1, #0
   179a2:	d008      	beq.n	179b6 <setvbuf+0x56>
   179a4:	0023      	movs	r3, r4
   179a6:	3340      	adds	r3, #64	; 0x40
   179a8:	4299      	cmp	r1, r3
   179aa:	d002      	beq.n	179b2 <setvbuf+0x52>
   179ac:	0028      	movs	r0, r5
   179ae:	f002 ffdd 	bl	1a96c <_free_r>
   179b2:	2300      	movs	r3, #0
   179b4:	6323      	str	r3, [r4, #48]	; 0x30
   179b6:	2300      	movs	r3, #0
   179b8:	61a3      	str	r3, [r4, #24]
   179ba:	6063      	str	r3, [r4, #4]
   179bc:	220c      	movs	r2, #12
   179be:	5ea3      	ldrsh	r3, [r4, r2]
   179c0:	061a      	lsls	r2, r3, #24
   179c2:	d43d      	bmi.n	17a40 <setvbuf+0xe0>
   179c4:	4a4d      	ldr	r2, [pc, #308]	; (17afc <setvbuf+0x19c>)
   179c6:	4013      	ands	r3, r2
   179c8:	81a3      	strh	r3, [r4, #12]
   179ca:	2e02      	cmp	r6, #2
   179cc:	d01e      	beq.n	17a0c <setvbuf+0xac>
   179ce:	ab01      	add	r3, sp, #4
   179d0:	466a      	mov	r2, sp
   179d2:	0021      	movs	r1, r4
   179d4:	0028      	movs	r0, r5
   179d6:	f003 fa79 	bl	1aecc <__swhatbuf_r>
   179da:	89a3      	ldrh	r3, [r4, #12]
   179dc:	4318      	orrs	r0, r3
   179de:	81a0      	strh	r0, [r4, #12]
   179e0:	2f00      	cmp	r7, #0
   179e2:	d138      	bne.n	17a56 <setvbuf+0xf6>
   179e4:	9f00      	ldr	r7, [sp, #0]
   179e6:	0038      	movs	r0, r7
   179e8:	f003 fae8 	bl	1afbc <malloc>
   179ec:	4680      	mov	r8, r0
   179ee:	2800      	cmp	r0, #0
   179f0:	d100      	bne.n	179f4 <setvbuf+0x94>
   179f2:	e06f      	b.n	17ad4 <setvbuf+0x174>
   179f4:	2280      	movs	r2, #128	; 0x80
   179f6:	89a3      	ldrh	r3, [r4, #12]
   179f8:	4313      	orrs	r3, r2
   179fa:	81a3      	strh	r3, [r4, #12]
   179fc:	e02e      	b.n	17a5c <setvbuf+0xfc>
   179fe:	89a3      	ldrh	r3, [r4, #12]
   17a00:	059b      	lsls	r3, r3, #22
   17a02:	d4c8      	bmi.n	17996 <setvbuf+0x36>
   17a04:	6da0      	ldr	r0, [r4, #88]	; 0x58
   17a06:	f003 fa5d 	bl	1aec4 <__retarget_lock_acquire_recursive>
   17a0a:	e7c4      	b.n	17996 <setvbuf+0x36>
   17a0c:	2500      	movs	r5, #0
   17a0e:	2202      	movs	r2, #2
   17a10:	4313      	orrs	r3, r2
   17a12:	2200      	movs	r2, #0
   17a14:	60a2      	str	r2, [r4, #8]
   17a16:	0022      	movs	r2, r4
   17a18:	3243      	adds	r2, #67	; 0x43
   17a1a:	6022      	str	r2, [r4, #0]
   17a1c:	6122      	str	r2, [r4, #16]
   17a1e:	2201      	movs	r2, #1
   17a20:	6e61      	ldr	r1, [r4, #100]	; 0x64
   17a22:	81a3      	strh	r3, [r4, #12]
   17a24:	6162      	str	r2, [r4, #20]
   17a26:	4211      	tst	r1, r2
   17a28:	d104      	bne.n	17a34 <setvbuf+0xd4>
   17a2a:	059b      	lsls	r3, r3, #22
   17a2c:	d402      	bmi.n	17a34 <setvbuf+0xd4>
   17a2e:	6da0      	ldr	r0, [r4, #88]	; 0x58
   17a30:	f003 fa4a 	bl	1aec8 <__retarget_lock_release_recursive>
   17a34:	0028      	movs	r0, r5
   17a36:	b003      	add	sp, #12
   17a38:	bc0c      	pop	{r2, r3}
   17a3a:	4690      	mov	r8, r2
   17a3c:	4699      	mov	r9, r3
   17a3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   17a40:	6921      	ldr	r1, [r4, #16]
   17a42:	0028      	movs	r0, r5
   17a44:	f002 ff92 	bl	1a96c <_free_r>
   17a48:	220c      	movs	r2, #12
   17a4a:	5ea3      	ldrsh	r3, [r4, r2]
   17a4c:	e7ba      	b.n	179c4 <setvbuf+0x64>
   17a4e:	0028      	movs	r0, r5
   17a50:	f002 fee2 	bl	1a818 <__sinit>
   17a54:	e794      	b.n	17980 <setvbuf+0x20>
   17a56:	4643      	mov	r3, r8
   17a58:	2b00      	cmp	r3, #0
   17a5a:	d0c4      	beq.n	179e6 <setvbuf+0x86>
   17a5c:	6bab      	ldr	r3, [r5, #56]	; 0x38
   17a5e:	2b00      	cmp	r3, #0
   17a60:	d027      	beq.n	17ab2 <setvbuf+0x152>
   17a62:	9b00      	ldr	r3, [sp, #0]
   17a64:	429f      	cmp	r7, r3
   17a66:	d02a      	beq.n	17abe <setvbuf+0x15e>
   17a68:	2380      	movs	r3, #128	; 0x80
   17a6a:	89a2      	ldrh	r2, [r4, #12]
   17a6c:	011b      	lsls	r3, r3, #4
   17a6e:	4313      	orrs	r3, r2
   17a70:	b21b      	sxth	r3, r3
   17a72:	81a3      	strh	r3, [r4, #12]
   17a74:	2e01      	cmp	r6, #1
   17a76:	d026      	beq.n	17ac6 <setvbuf+0x166>
   17a78:	4642      	mov	r2, r8
   17a7a:	6022      	str	r2, [r4, #0]
   17a7c:	6122      	str	r2, [r4, #16]
   17a7e:	2208      	movs	r2, #8
   17a80:	b29b      	uxth	r3, r3
   17a82:	6167      	str	r7, [r4, #20]
   17a84:	401a      	ands	r2, r3
   17a86:	d00b      	beq.n	17aa0 <setvbuf+0x140>
   17a88:	07da      	lsls	r2, r3, #31
   17a8a:	d510      	bpl.n	17aae <setvbuf+0x14e>
   17a8c:	2200      	movs	r2, #0
   17a8e:	2501      	movs	r5, #1
   17a90:	60a2      	str	r2, [r4, #8]
   17a92:	6e62      	ldr	r2, [r4, #100]	; 0x64
   17a94:	427f      	negs	r7, r7
   17a96:	61a7      	str	r7, [r4, #24]
   17a98:	4015      	ands	r5, r2
   17a9a:	d0c6      	beq.n	17a2a <setvbuf+0xca>
   17a9c:	2500      	movs	r5, #0
   17a9e:	e7c9      	b.n	17a34 <setvbuf+0xd4>
   17aa0:	60a2      	str	r2, [r4, #8]
   17aa2:	2501      	movs	r5, #1
   17aa4:	6e62      	ldr	r2, [r4, #100]	; 0x64
   17aa6:	4015      	ands	r5, r2
   17aa8:	d0bf      	beq.n	17a2a <setvbuf+0xca>
   17aaa:	2500      	movs	r5, #0
   17aac:	e7c2      	b.n	17a34 <setvbuf+0xd4>
   17aae:	60a7      	str	r7, [r4, #8]
   17ab0:	e7f7      	b.n	17aa2 <setvbuf+0x142>
   17ab2:	0028      	movs	r0, r5
   17ab4:	f002 feb0 	bl	1a818 <__sinit>
   17ab8:	9b00      	ldr	r3, [sp, #0]
   17aba:	429f      	cmp	r7, r3
   17abc:	d1d4      	bne.n	17a68 <setvbuf+0x108>
   17abe:	220c      	movs	r2, #12
   17ac0:	5ea3      	ldrsh	r3, [r4, r2]
   17ac2:	2e01      	cmp	r6, #1
   17ac4:	d1d8      	bne.n	17a78 <setvbuf+0x118>
   17ac6:	2201      	movs	r2, #1
   17ac8:	4313      	orrs	r3, r2
   17aca:	81a3      	strh	r3, [r4, #12]
   17acc:	e7d4      	b.n	17a78 <setvbuf+0x118>
   17ace:	2501      	movs	r5, #1
   17ad0:	426d      	negs	r5, r5
   17ad2:	e7af      	b.n	17a34 <setvbuf+0xd4>
   17ad4:	9b00      	ldr	r3, [sp, #0]
   17ad6:	4699      	mov	r9, r3
   17ad8:	42bb      	cmp	r3, r7
   17ada:	d005      	beq.n	17ae8 <setvbuf+0x188>
   17adc:	0018      	movs	r0, r3
   17ade:	f003 fa6d 	bl	1afbc <malloc>
   17ae2:	4680      	mov	r8, r0
   17ae4:	2800      	cmp	r0, #0
   17ae6:	d104      	bne.n	17af2 <setvbuf+0x192>
   17ae8:	2501      	movs	r5, #1
   17aea:	220c      	movs	r2, #12
   17aec:	5ea3      	ldrsh	r3, [r4, r2]
   17aee:	426d      	negs	r5, r5
   17af0:	e78d      	b.n	17a0e <setvbuf+0xae>
   17af2:	464f      	mov	r7, r9
   17af4:	e77e      	b.n	179f4 <setvbuf+0x94>
   17af6:	46c0      	nop			; (mov r8, r8)
   17af8:	20000038 	.word	0x20000038
   17afc:	fffff35c 	.word	0xfffff35c

00017b00 <strlen>:
   17b00:	b510      	push	{r4, lr}
   17b02:	0783      	lsls	r3, r0, #30
   17b04:	d025      	beq.n	17b52 <strlen+0x52>
   17b06:	7803      	ldrb	r3, [r0, #0]
   17b08:	2b00      	cmp	r3, #0
   17b0a:	d024      	beq.n	17b56 <strlen+0x56>
   17b0c:	0003      	movs	r3, r0
   17b0e:	2103      	movs	r1, #3
   17b10:	e002      	b.n	17b18 <strlen+0x18>
   17b12:	781a      	ldrb	r2, [r3, #0]
   17b14:	2a00      	cmp	r2, #0
   17b16:	d01a      	beq.n	17b4e <strlen+0x4e>
   17b18:	3301      	adds	r3, #1
   17b1a:	420b      	tst	r3, r1
   17b1c:	d1f9      	bne.n	17b12 <strlen+0x12>
   17b1e:	6819      	ldr	r1, [r3, #0]
   17b20:	4a0e      	ldr	r2, [pc, #56]	; (17b5c <strlen+0x5c>)
   17b22:	4c0f      	ldr	r4, [pc, #60]	; (17b60 <strlen+0x60>)
   17b24:	188a      	adds	r2, r1, r2
   17b26:	438a      	bics	r2, r1
   17b28:	4222      	tst	r2, r4
   17b2a:	d106      	bne.n	17b3a <strlen+0x3a>
   17b2c:	3304      	adds	r3, #4
   17b2e:	6819      	ldr	r1, [r3, #0]
   17b30:	4a0a      	ldr	r2, [pc, #40]	; (17b5c <strlen+0x5c>)
   17b32:	188a      	adds	r2, r1, r2
   17b34:	438a      	bics	r2, r1
   17b36:	4222      	tst	r2, r4
   17b38:	d0f8      	beq.n	17b2c <strlen+0x2c>
   17b3a:	001a      	movs	r2, r3
   17b3c:	781b      	ldrb	r3, [r3, #0]
   17b3e:	2b00      	cmp	r3, #0
   17b40:	d003      	beq.n	17b4a <strlen+0x4a>
   17b42:	3201      	adds	r2, #1
   17b44:	7811      	ldrb	r1, [r2, #0]
   17b46:	2900      	cmp	r1, #0
   17b48:	d1fb      	bne.n	17b42 <strlen+0x42>
   17b4a:	1a10      	subs	r0, r2, r0
   17b4c:	bd10      	pop	{r4, pc}
   17b4e:	1a18      	subs	r0, r3, r0
   17b50:	e7fc      	b.n	17b4c <strlen+0x4c>
   17b52:	0003      	movs	r3, r0
   17b54:	e7e3      	b.n	17b1e <strlen+0x1e>
   17b56:	2000      	movs	r0, #0
   17b58:	e7f8      	b.n	17b4c <strlen+0x4c>
   17b5a:	46c0      	nop			; (mov r8, r8)
   17b5c:	fefefeff 	.word	0xfefefeff
   17b60:	80808080 	.word	0x80808080

00017b64 <_strtoul_l.isra.0>:
   17b64:	b5f0      	push	{r4, r5, r6, r7, lr}
   17b66:	4657      	mov	r7, sl
   17b68:	464e      	mov	r6, r9
   17b6a:	46de      	mov	lr, fp
   17b6c:	4645      	mov	r5, r8
   17b6e:	b5e0      	push	{r5, r6, r7, lr}
   17b70:	001e      	movs	r6, r3
   17b72:	2308      	movs	r3, #8
   17b74:	b083      	sub	sp, #12
   17b76:	4683      	mov	fp, r0
   17b78:	4689      	mov	r9, r1
   17b7a:	4692      	mov	sl, r2
   17b7c:	000f      	movs	r7, r1
   17b7e:	4698      	mov	r8, r3
   17b80:	e000      	b.n	17b84 <_strtoul_l.isra.0+0x20>
   17b82:	002f      	movs	r7, r5
   17b84:	980c      	ldr	r0, [sp, #48]	; 0x30
   17b86:	783c      	ldrb	r4, [r7, #0]
   17b88:	f003 f986 	bl	1ae98 <__locale_ctype_ptr_l>
   17b8c:	4642      	mov	r2, r8
   17b8e:	1900      	adds	r0, r0, r4
   17b90:	7843      	ldrb	r3, [r0, #1]
   17b92:	1c7d      	adds	r5, r7, #1
   17b94:	421a      	tst	r2, r3
   17b96:	d1f4      	bne.n	17b82 <_strtoul_l.isra.0+0x1e>
   17b98:	2c2d      	cmp	r4, #45	; 0x2d
   17b9a:	d05b      	beq.n	17c54 <_strtoul_l.isra.0+0xf0>
   17b9c:	2300      	movs	r3, #0
   17b9e:	9301      	str	r3, [sp, #4]
   17ba0:	2c2b      	cmp	r4, #43	; 0x2b
   17ba2:	d05c      	beq.n	17c5e <_strtoul_l.isra.0+0xfa>
   17ba4:	2e00      	cmp	r6, #0
   17ba6:	d00e      	beq.n	17bc6 <_strtoul_l.isra.0+0x62>
   17ba8:	2e10      	cmp	r6, #16
   17baa:	d05b      	beq.n	17c64 <_strtoul_l.isra.0+0x100>
   17bac:	2001      	movs	r0, #1
   17bae:	0031      	movs	r1, r6
   17bb0:	4240      	negs	r0, r0
   17bb2:	f7fc feeb 	bl	1498c <__udivsi3>
   17bb6:	0007      	movs	r7, r0
   17bb8:	2001      	movs	r0, #1
   17bba:	0031      	movs	r1, r6
   17bbc:	4240      	negs	r0, r0
   17bbe:	46b0      	mov	r8, r6
   17bc0:	f7fc ff6a 	bl	14a98 <__aeabi_uidivmod>
   17bc4:	e006      	b.n	17bd4 <_strtoul_l.isra.0+0x70>
   17bc6:	2c30      	cmp	r4, #48	; 0x30
   17bc8:	d05b      	beq.n	17c82 <_strtoul_l.isra.0+0x11e>
   17bca:	230a      	movs	r3, #10
   17bcc:	2105      	movs	r1, #5
   17bce:	4698      	mov	r8, r3
   17bd0:	260a      	movs	r6, #10
   17bd2:	4f34      	ldr	r7, [pc, #208]	; (17ca4 <_strtoul_l.isra.0+0x140>)
   17bd4:	2200      	movs	r2, #0
   17bd6:	2000      	movs	r0, #0
   17bd8:	0023      	movs	r3, r4
   17bda:	3b30      	subs	r3, #48	; 0x30
   17bdc:	2b09      	cmp	r3, #9
   17bde:	d907      	bls.n	17bf0 <_strtoul_l.isra.0+0x8c>
   17be0:	3b11      	subs	r3, #17
   17be2:	2b19      	cmp	r3, #25
   17be4:	d903      	bls.n	17bee <_strtoul_l.isra.0+0x8a>
   17be6:	0023      	movs	r3, r4
   17be8:	3b61      	subs	r3, #97	; 0x61
   17bea:	2b19      	cmp	r3, #25
   17bec:	d80e      	bhi.n	17c0c <_strtoul_l.isra.0+0xa8>
   17bee:	330a      	adds	r3, #10
   17bf0:	429e      	cmp	r6, r3
   17bf2:	dd0b      	ble.n	17c0c <_strtoul_l.isra.0+0xa8>
   17bf4:	2a00      	cmp	r2, #0
   17bf6:	db20      	blt.n	17c3a <_strtoul_l.isra.0+0xd6>
   17bf8:	42b8      	cmp	r0, r7
   17bfa:	d81e      	bhi.n	17c3a <_strtoul_l.isra.0+0xd6>
   17bfc:	d01b      	beq.n	17c36 <_strtoul_l.isra.0+0xd2>
   17bfe:	4642      	mov	r2, r8
   17c00:	4350      	muls	r0, r2
   17c02:	2201      	movs	r2, #1
   17c04:	1818      	adds	r0, r3, r0
   17c06:	782c      	ldrb	r4, [r5, #0]
   17c08:	3501      	adds	r5, #1
   17c0a:	e7e5      	b.n	17bd8 <_strtoul_l.isra.0+0x74>
   17c0c:	2a00      	cmp	r2, #0
   17c0e:	db17      	blt.n	17c40 <_strtoul_l.isra.0+0xdc>
   17c10:	9b01      	ldr	r3, [sp, #4]
   17c12:	2b00      	cmp	r3, #0
   17c14:	d000      	beq.n	17c18 <_strtoul_l.isra.0+0xb4>
   17c16:	4240      	negs	r0, r0
   17c18:	4653      	mov	r3, sl
   17c1a:	2b00      	cmp	r3, #0
   17c1c:	d004      	beq.n	17c28 <_strtoul_l.isra.0+0xc4>
   17c1e:	464b      	mov	r3, r9
   17c20:	2a00      	cmp	r2, #0
   17c22:	d115      	bne.n	17c50 <_strtoul_l.isra.0+0xec>
   17c24:	4652      	mov	r2, sl
   17c26:	6013      	str	r3, [r2, #0]
   17c28:	b003      	add	sp, #12
   17c2a:	bc3c      	pop	{r2, r3, r4, r5}
   17c2c:	4690      	mov	r8, r2
   17c2e:	4699      	mov	r9, r3
   17c30:	46a2      	mov	sl, r4
   17c32:	46ab      	mov	fp, r5
   17c34:	bdf0      	pop	{r4, r5, r6, r7, pc}
   17c36:	428b      	cmp	r3, r1
   17c38:	dde1      	ble.n	17bfe <_strtoul_l.isra.0+0x9a>
   17c3a:	2201      	movs	r2, #1
   17c3c:	4252      	negs	r2, r2
   17c3e:	e7e2      	b.n	17c06 <_strtoul_l.isra.0+0xa2>
   17c40:	2322      	movs	r3, #34	; 0x22
   17c42:	465a      	mov	r2, fp
   17c44:	2001      	movs	r0, #1
   17c46:	6013      	str	r3, [r2, #0]
   17c48:	4653      	mov	r3, sl
   17c4a:	4240      	negs	r0, r0
   17c4c:	2b00      	cmp	r3, #0
   17c4e:	d0eb      	beq.n	17c28 <_strtoul_l.isra.0+0xc4>
   17c50:	1e6b      	subs	r3, r5, #1
   17c52:	e7e7      	b.n	17c24 <_strtoul_l.isra.0+0xc0>
   17c54:	2301      	movs	r3, #1
   17c56:	782c      	ldrb	r4, [r5, #0]
   17c58:	9301      	str	r3, [sp, #4]
   17c5a:	1cbd      	adds	r5, r7, #2
   17c5c:	e7a2      	b.n	17ba4 <_strtoul_l.isra.0+0x40>
   17c5e:	782c      	ldrb	r4, [r5, #0]
   17c60:	1cbd      	adds	r5, r7, #2
   17c62:	e79f      	b.n	17ba4 <_strtoul_l.isra.0+0x40>
   17c64:	2c30      	cmp	r4, #48	; 0x30
   17c66:	d117      	bne.n	17c98 <_strtoul_l.isra.0+0x134>
   17c68:	2220      	movs	r2, #32
   17c6a:	782b      	ldrb	r3, [r5, #0]
   17c6c:	4393      	bics	r3, r2
   17c6e:	2b58      	cmp	r3, #88	; 0x58
   17c70:	d112      	bne.n	17c98 <_strtoul_l.isra.0+0x134>
   17c72:	2310      	movs	r3, #16
   17c74:	786c      	ldrb	r4, [r5, #1]
   17c76:	210f      	movs	r1, #15
   17c78:	3502      	adds	r5, #2
   17c7a:	4f0b      	ldr	r7, [pc, #44]	; (17ca8 <_strtoul_l.isra.0+0x144>)
   17c7c:	4698      	mov	r8, r3
   17c7e:	2610      	movs	r6, #16
   17c80:	e7a8      	b.n	17bd4 <_strtoul_l.isra.0+0x70>
   17c82:	2220      	movs	r2, #32
   17c84:	782b      	ldrb	r3, [r5, #0]
   17c86:	4393      	bics	r3, r2
   17c88:	2b58      	cmp	r3, #88	; 0x58
   17c8a:	d0f2      	beq.n	17c72 <_strtoul_l.isra.0+0x10e>
   17c8c:	2308      	movs	r3, #8
   17c8e:	2107      	movs	r1, #7
   17c90:	4f06      	ldr	r7, [pc, #24]	; (17cac <_strtoul_l.isra.0+0x148>)
   17c92:	4698      	mov	r8, r3
   17c94:	2608      	movs	r6, #8
   17c96:	e79d      	b.n	17bd4 <_strtoul_l.isra.0+0x70>
   17c98:	2310      	movs	r3, #16
   17c9a:	210f      	movs	r1, #15
   17c9c:	4f02      	ldr	r7, [pc, #8]	; (17ca8 <_strtoul_l.isra.0+0x144>)
   17c9e:	4698      	mov	r8, r3
   17ca0:	e798      	b.n	17bd4 <_strtoul_l.isra.0+0x70>
   17ca2:	46c0      	nop			; (mov r8, r8)
   17ca4:	19999999 	.word	0x19999999
   17ca8:	0fffffff 	.word	0x0fffffff
   17cac:	1fffffff 	.word	0x1fffffff

00017cb0 <strtoul>:
   17cb0:	0013      	movs	r3, r2
   17cb2:	4a08      	ldr	r2, [pc, #32]	; (17cd4 <strtoul+0x24>)
   17cb4:	b530      	push	{r4, r5, lr}
   17cb6:	0005      	movs	r5, r0
   17cb8:	6810      	ldr	r0, [r2, #0]
   17cba:	b083      	sub	sp, #12
   17cbc:	6b44      	ldr	r4, [r0, #52]	; 0x34
   17cbe:	2c00      	cmp	r4, #0
   17cc0:	d006      	beq.n	17cd0 <strtoul+0x20>
   17cc2:	000a      	movs	r2, r1
   17cc4:	9400      	str	r4, [sp, #0]
   17cc6:	0029      	movs	r1, r5
   17cc8:	f7ff ff4c 	bl	17b64 <_strtoul_l.isra.0>
   17ccc:	b003      	add	sp, #12
   17cce:	bd30      	pop	{r4, r5, pc}
   17cd0:	4c01      	ldr	r4, [pc, #4]	; (17cd8 <strtoul+0x28>)
   17cd2:	e7f6      	b.n	17cc2 <strtoul+0x12>
   17cd4:	20000038 	.word	0x20000038
   17cd8:	2000046c 	.word	0x2000046c

00017cdc <_vfprintf_r>:
   17cdc:	b5f0      	push	{r4, r5, r6, r7, lr}
   17cde:	46de      	mov	lr, fp
   17ce0:	464e      	mov	r6, r9
   17ce2:	4645      	mov	r5, r8
   17ce4:	4657      	mov	r7, sl
   17ce6:	b5e0      	push	{r5, r6, r7, lr}
   17ce8:	b0c3      	sub	sp, #268	; 0x10c
   17cea:	4689      	mov	r9, r1
   17cec:	0014      	movs	r4, r2
   17cee:	001d      	movs	r5, r3
   17cf0:	930f      	str	r3, [sp, #60]	; 0x3c
   17cf2:	0006      	movs	r6, r0
   17cf4:	9006      	str	r0, [sp, #24]
   17cf6:	f003 f8d3 	bl	1aea0 <_localeconv_r>
   17cfa:	6803      	ldr	r3, [r0, #0]
   17cfc:	0018      	movs	r0, r3
   17cfe:	9318      	str	r3, [sp, #96]	; 0x60
   17d00:	f7ff fefe 	bl	17b00 <strlen>
   17d04:	9017      	str	r0, [sp, #92]	; 0x5c
   17d06:	2e00      	cmp	r6, #0
   17d08:	d004      	beq.n	17d14 <_vfprintf_r+0x38>
   17d0a:	6bb3      	ldr	r3, [r6, #56]	; 0x38
   17d0c:	9307      	str	r3, [sp, #28]
   17d0e:	2b00      	cmp	r3, #0
   17d10:	d100      	bne.n	17d14 <_vfprintf_r+0x38>
   17d12:	e0a7      	b.n	17e64 <_vfprintf_r+0x188>
   17d14:	464b      	mov	r3, r9
   17d16:	6e5b      	ldr	r3, [r3, #100]	; 0x64
   17d18:	07db      	lsls	r3, r3, #31
   17d1a:	d478      	bmi.n	17e0e <_vfprintf_r+0x132>
   17d1c:	464b      	mov	r3, r9
   17d1e:	210c      	movs	r1, #12
   17d20:	5e59      	ldrsh	r1, [r3, r1]
   17d22:	b28b      	uxth	r3, r1
   17d24:	059a      	lsls	r2, r3, #22
   17d26:	d56e      	bpl.n	17e06 <_vfprintf_r+0x12a>
   17d28:	2280      	movs	r2, #128	; 0x80
   17d2a:	0192      	lsls	r2, r2, #6
   17d2c:	4213      	tst	r3, r2
   17d2e:	d109      	bne.n	17d44 <_vfprintf_r+0x68>
   17d30:	430a      	orrs	r2, r1
   17d32:	464b      	mov	r3, r9
   17d34:	4649      	mov	r1, r9
   17d36:	819a      	strh	r2, [r3, #12]
   17d38:	6e49      	ldr	r1, [r1, #100]	; 0x64
   17d3a:	4bcc      	ldr	r3, [pc, #816]	; (1806c <_vfprintf_r+0x390>)
   17d3c:	400b      	ands	r3, r1
   17d3e:	4649      	mov	r1, r9
   17d40:	664b      	str	r3, [r1, #100]	; 0x64
   17d42:	b293      	uxth	r3, r2
   17d44:	071a      	lsls	r2, r3, #28
   17d46:	d567      	bpl.n	17e18 <_vfprintf_r+0x13c>
   17d48:	464a      	mov	r2, r9
   17d4a:	6912      	ldr	r2, [r2, #16]
   17d4c:	2a00      	cmp	r2, #0
   17d4e:	d063      	beq.n	17e18 <_vfprintf_r+0x13c>
   17d50:	221a      	movs	r2, #26
   17d52:	401a      	ands	r2, r3
   17d54:	2a0a      	cmp	r2, #10
   17d56:	d100      	bne.n	17d5a <_vfprintf_r+0x7e>
   17d58:	e088      	b.n	17e6c <_vfprintf_r+0x190>
   17d5a:	ab32      	add	r3, sp, #200	; 0xc8
   17d5c:	9325      	str	r3, [sp, #148]	; 0x94
   17d5e:	2300      	movs	r3, #0
   17d60:	46cb      	mov	fp, r9
   17d62:	af25      	add	r7, sp, #148	; 0x94
   17d64:	60bb      	str	r3, [r7, #8]
   17d66:	607b      	str	r3, [r7, #4]
   17d68:	9407      	str	r4, [sp, #28]
   17d6a:	9314      	str	r3, [sp, #80]	; 0x50
   17d6c:	9316      	str	r3, [sp, #88]	; 0x58
   17d6e:	9315      	str	r3, [sp, #84]	; 0x54
   17d70:	ae32      	add	r6, sp, #200	; 0xc8
   17d72:	9319      	str	r3, [sp, #100]	; 0x64
   17d74:	931a      	str	r3, [sp, #104]	; 0x68
   17d76:	930a      	str	r3, [sp, #40]	; 0x28
   17d78:	9c07      	ldr	r4, [sp, #28]
   17d7a:	7823      	ldrb	r3, [r4, #0]
   17d7c:	2b00      	cmp	r3, #0
   17d7e:	d101      	bne.n	17d84 <_vfprintf_r+0xa8>
   17d80:	f000 fd9e 	bl	188c0 <_vfprintf_r+0xbe4>
   17d84:	2b25      	cmp	r3, #37	; 0x25
   17d86:	d103      	bne.n	17d90 <_vfprintf_r+0xb4>
   17d88:	f000 fd9a 	bl	188c0 <_vfprintf_r+0xbe4>
   17d8c:	2b25      	cmp	r3, #37	; 0x25
   17d8e:	d003      	beq.n	17d98 <_vfprintf_r+0xbc>
   17d90:	3401      	adds	r4, #1
   17d92:	7823      	ldrb	r3, [r4, #0]
   17d94:	2b00      	cmp	r3, #0
   17d96:	d1f9      	bne.n	17d8c <_vfprintf_r+0xb0>
   17d98:	9b07      	ldr	r3, [sp, #28]
   17d9a:	1ae5      	subs	r5, r4, r3
   17d9c:	d010      	beq.n	17dc0 <_vfprintf_r+0xe4>
   17d9e:	9b07      	ldr	r3, [sp, #28]
   17da0:	6075      	str	r5, [r6, #4]
   17da2:	6033      	str	r3, [r6, #0]
   17da4:	68bb      	ldr	r3, [r7, #8]
   17da6:	195b      	adds	r3, r3, r5
   17da8:	60bb      	str	r3, [r7, #8]
   17daa:	687b      	ldr	r3, [r7, #4]
   17dac:	3301      	adds	r3, #1
   17dae:	607b      	str	r3, [r7, #4]
   17db0:	2b07      	cmp	r3, #7
   17db2:	dc4c      	bgt.n	17e4e <_vfprintf_r+0x172>
   17db4:	3608      	adds	r6, #8
   17db6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   17db8:	469c      	mov	ip, r3
   17dba:	44ac      	add	ip, r5
   17dbc:	4663      	mov	r3, ip
   17dbe:	930a      	str	r3, [sp, #40]	; 0x28
   17dc0:	7823      	ldrb	r3, [r4, #0]
   17dc2:	2b00      	cmp	r3, #0
   17dc4:	d101      	bne.n	17dca <_vfprintf_r+0xee>
   17dc6:	f000 fc99 	bl	186fc <_vfprintf_r+0xa20>
   17dca:	1c63      	adds	r3, r4, #1
   17dcc:	9307      	str	r3, [sp, #28]
   17dce:	2300      	movs	r3, #0
   17dd0:	aa16      	add	r2, sp, #88	; 0x58
   17dd2:	77d3      	strb	r3, [r2, #31]
   17dd4:	2201      	movs	r2, #1
   17dd6:	4252      	negs	r2, r2
   17dd8:	4692      	mov	sl, r2
   17dda:	2200      	movs	r2, #0
   17ddc:	920b      	str	r2, [sp, #44]	; 0x2c
   17dde:	3220      	adds	r2, #32
   17de0:	4691      	mov	r9, r2
   17de2:	3220      	adds	r2, #32
   17de4:	7863      	ldrb	r3, [r4, #1]
   17de6:	2100      	movs	r1, #0
   17de8:	2000      	movs	r0, #0
   17dea:	2400      	movs	r4, #0
   17dec:	4694      	mov	ip, r2
   17dee:	9a07      	ldr	r2, [sp, #28]
   17df0:	3201      	adds	r2, #1
   17df2:	9207      	str	r2, [sp, #28]
   17df4:	001a      	movs	r2, r3
   17df6:	3a20      	subs	r2, #32
   17df8:	2a58      	cmp	r2, #88	; 0x58
   17dfa:	d900      	bls.n	17dfe <_vfprintf_r+0x122>
   17dfc:	e2e7      	b.n	183ce <_vfprintf_r+0x6f2>
   17dfe:	4d9c      	ldr	r5, [pc, #624]	; (18070 <_vfprintf_r+0x394>)
   17e00:	0092      	lsls	r2, r2, #2
   17e02:	58aa      	ldr	r2, [r5, r2]
   17e04:	4697      	mov	pc, r2
   17e06:	464b      	mov	r3, r9
   17e08:	6d98      	ldr	r0, [r3, #88]	; 0x58
   17e0a:	f003 f85b 	bl	1aec4 <__retarget_lock_acquire_recursive>
   17e0e:	464b      	mov	r3, r9
   17e10:	210c      	movs	r1, #12
   17e12:	5e59      	ldrsh	r1, [r3, r1]
   17e14:	b28b      	uxth	r3, r1
   17e16:	e787      	b.n	17d28 <_vfprintf_r+0x4c>
   17e18:	4649      	mov	r1, r9
   17e1a:	9806      	ldr	r0, [sp, #24]
   17e1c:	f001 fb0e 	bl	1943c <__swsetup_r>
   17e20:	464b      	mov	r3, r9
   17e22:	2800      	cmp	r0, #0
   17e24:	d03a      	beq.n	17e9c <_vfprintf_r+0x1c0>
   17e26:	6e5b      	ldr	r3, [r3, #100]	; 0x64
   17e28:	07db      	lsls	r3, r3, #31
   17e2a:	d405      	bmi.n	17e38 <_vfprintf_r+0x15c>
   17e2c:	464b      	mov	r3, r9
   17e2e:	899b      	ldrh	r3, [r3, #12]
   17e30:	059b      	lsls	r3, r3, #22
   17e32:	d401      	bmi.n	17e38 <_vfprintf_r+0x15c>
   17e34:	f000 ffcf 	bl	18dd6 <_vfprintf_r+0x10fa>
   17e38:	2301      	movs	r3, #1
   17e3a:	425b      	negs	r3, r3
   17e3c:	930a      	str	r3, [sp, #40]	; 0x28
   17e3e:	980a      	ldr	r0, [sp, #40]	; 0x28
   17e40:	b043      	add	sp, #268	; 0x10c
   17e42:	bc3c      	pop	{r2, r3, r4, r5}
   17e44:	4690      	mov	r8, r2
   17e46:	4699      	mov	r9, r3
   17e48:	46a2      	mov	sl, r4
   17e4a:	46ab      	mov	fp, r5
   17e4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   17e4e:	003a      	movs	r2, r7
   17e50:	4659      	mov	r1, fp
   17e52:	9806      	ldr	r0, [sp, #24]
   17e54:	f004 fa08 	bl	1c268 <__sprint_r>
   17e58:	2800      	cmp	r0, #0
   17e5a:	d001      	beq.n	17e60 <_vfprintf_r+0x184>
   17e5c:	f000 fcce 	bl	187fc <_vfprintf_r+0xb20>
   17e60:	ae32      	add	r6, sp, #200	; 0xc8
   17e62:	e7a8      	b.n	17db6 <_vfprintf_r+0xda>
   17e64:	9806      	ldr	r0, [sp, #24]
   17e66:	f002 fcd7 	bl	1a818 <__sinit>
   17e6a:	e753      	b.n	17d14 <_vfprintf_r+0x38>
   17e6c:	464a      	mov	r2, r9
   17e6e:	210e      	movs	r1, #14
   17e70:	5e52      	ldrsh	r2, [r2, r1]
   17e72:	2a00      	cmp	r2, #0
   17e74:	da00      	bge.n	17e78 <_vfprintf_r+0x19c>
   17e76:	e770      	b.n	17d5a <_vfprintf_r+0x7e>
   17e78:	464a      	mov	r2, r9
   17e7a:	6e52      	ldr	r2, [r2, #100]	; 0x64
   17e7c:	07d2      	lsls	r2, r2, #31
   17e7e:	d405      	bmi.n	17e8c <_vfprintf_r+0x1b0>
   17e80:	059b      	lsls	r3, r3, #22
   17e82:	d403      	bmi.n	17e8c <_vfprintf_r+0x1b0>
   17e84:	464b      	mov	r3, r9
   17e86:	6d98      	ldr	r0, [r3, #88]	; 0x58
   17e88:	f003 f81e 	bl	1aec8 <__retarget_lock_release_recursive>
   17e8c:	002b      	movs	r3, r5
   17e8e:	0022      	movs	r2, r4
   17e90:	4649      	mov	r1, r9
   17e92:	9806      	ldr	r0, [sp, #24]
   17e94:	f001 fa8e 	bl	193b4 <__sbprintf>
   17e98:	900a      	str	r0, [sp, #40]	; 0x28
   17e9a:	e7d0      	b.n	17e3e <_vfprintf_r+0x162>
   17e9c:	899b      	ldrh	r3, [r3, #12]
   17e9e:	e757      	b.n	17d50 <_vfprintf_r+0x74>
   17ea0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   17ea2:	920f      	str	r2, [sp, #60]	; 0x3c
   17ea4:	425b      	negs	r3, r3
   17ea6:	930b      	str	r3, [sp, #44]	; 0x2c
   17ea8:	2304      	movs	r3, #4
   17eaa:	431c      	orrs	r4, r3
   17eac:	9b07      	ldr	r3, [sp, #28]
   17eae:	781b      	ldrb	r3, [r3, #0]
   17eb0:	e79d      	b.n	17dee <_vfprintf_r+0x112>
   17eb2:	9b07      	ldr	r3, [sp, #28]
   17eb4:	2101      	movs	r1, #1
   17eb6:	781b      	ldrb	r3, [r3, #0]
   17eb8:	202b      	movs	r0, #43	; 0x2b
   17eba:	e798      	b.n	17dee <_vfprintf_r+0x112>
   17ebc:	9b07      	ldr	r3, [sp, #28]
   17ebe:	1c5a      	adds	r2, r3, #1
   17ec0:	781b      	ldrb	r3, [r3, #0]
   17ec2:	4690      	mov	r8, r2
   17ec4:	2b2a      	cmp	r3, #42	; 0x2a
   17ec6:	d101      	bne.n	17ecc <_vfprintf_r+0x1f0>
   17ec8:	f001 fa38 	bl	1933c <_vfprintf_r+0x1660>
   17ecc:	001a      	movs	r2, r3
   17ece:	2500      	movs	r5, #0
   17ed0:	3a30      	subs	r2, #48	; 0x30
   17ed2:	46aa      	mov	sl, r5
   17ed4:	2a09      	cmp	r2, #9
   17ed6:	d901      	bls.n	17edc <_vfprintf_r+0x200>
   17ed8:	f001 f96d 	bl	191b6 <_vfprintf_r+0x14da>
   17edc:	0025      	movs	r5, r4
   17ede:	4643      	mov	r3, r8
   17ee0:	4654      	mov	r4, sl
   17ee2:	4688      	mov	r8, r1
   17ee4:	4682      	mov	sl, r0
   17ee6:	00a1      	lsls	r1, r4, #2
   17ee8:	190c      	adds	r4, r1, r4
   17eea:	7818      	ldrb	r0, [r3, #0]
   17eec:	0064      	lsls	r4, r4, #1
   17eee:	18a4      	adds	r4, r4, r2
   17ef0:	0002      	movs	r2, r0
   17ef2:	1c59      	adds	r1, r3, #1
   17ef4:	3a30      	subs	r2, #48	; 0x30
   17ef6:	000b      	movs	r3, r1
   17ef8:	2a09      	cmp	r2, #9
   17efa:	d9f4      	bls.n	17ee6 <_vfprintf_r+0x20a>
   17efc:	9107      	str	r1, [sp, #28]
   17efe:	0003      	movs	r3, r0
   17f00:	4641      	mov	r1, r8
   17f02:	4650      	mov	r0, sl
   17f04:	46a2      	mov	sl, r4
   17f06:	002c      	movs	r4, r5
   17f08:	e774      	b.n	17df4 <_vfprintf_r+0x118>
   17f0a:	9312      	str	r3, [sp, #72]	; 0x48
   17f0c:	2900      	cmp	r1, #0
   17f0e:	d001      	beq.n	17f14 <_vfprintf_r+0x238>
   17f10:	f001 fa2e 	bl	19370 <_vfprintf_r+0x1694>
   17f14:	4b57      	ldr	r3, [pc, #348]	; (18074 <_vfprintf_r+0x398>)
   17f16:	9319      	str	r3, [sp, #100]	; 0x64
   17f18:	06a3      	lsls	r3, r4, #26
   17f1a:	d501      	bpl.n	17f20 <_vfprintf_r+0x244>
   17f1c:	f000 fe9a 	bl	18c54 <_vfprintf_r+0xf78>
   17f20:	06e3      	lsls	r3, r4, #27
   17f22:	d501      	bpl.n	17f28 <_vfprintf_r+0x24c>
   17f24:	f000 fd9a 	bl	18a5c <_vfprintf_r+0xd80>
   17f28:	0663      	lsls	r3, r4, #25
   17f2a:	d401      	bmi.n	17f30 <_vfprintf_r+0x254>
   17f2c:	f000 fd96 	bl	18a5c <_vfprintf_r+0xd80>
   17f30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   17f32:	881a      	ldrh	r2, [r3, #0]
   17f34:	920c      	str	r2, [sp, #48]	; 0x30
   17f36:	2200      	movs	r2, #0
   17f38:	3304      	adds	r3, #4
   17f3a:	920d      	str	r2, [sp, #52]	; 0x34
   17f3c:	930f      	str	r3, [sp, #60]	; 0x3c
   17f3e:	07e3      	lsls	r3, r4, #31
   17f40:	d401      	bmi.n	17f46 <_vfprintf_r+0x26a>
   17f42:	f000 fd76 	bl	18a32 <_vfprintf_r+0xd56>
   17f46:	990c      	ldr	r1, [sp, #48]	; 0x30
   17f48:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   17f4a:	000b      	movs	r3, r1
   17f4c:	4313      	orrs	r3, r2
   17f4e:	001a      	movs	r2, r3
   17f50:	2302      	movs	r3, #2
   17f52:	2a00      	cmp	r2, #0
   17f54:	d008      	beq.n	17f68 <_vfprintf_r+0x28c>
   17f56:	2030      	movs	r0, #48	; 0x30
   17f58:	a91e      	add	r1, sp, #120	; 0x78
   17f5a:	7008      	strb	r0, [r1, #0]
   17f5c:	2548      	movs	r5, #72	; 0x48
   17f5e:	4668      	mov	r0, sp
   17f60:	1940      	adds	r0, r0, r5
   17f62:	7800      	ldrb	r0, [r0, #0]
   17f64:	431c      	orrs	r4, r3
   17f66:	7048      	strb	r0, [r1, #1]
   17f68:	2100      	movs	r1, #0
   17f6a:	4688      	mov	r8, r1
   17f6c:	a816      	add	r0, sp, #88	; 0x58
   17f6e:	77c1      	strb	r1, [r0, #31]
   17f70:	4651      	mov	r1, sl
   17f72:	3101      	adds	r1, #1
   17f74:	d100      	bne.n	17f78 <_vfprintf_r+0x29c>
   17f76:	e0e6      	b.n	18146 <_vfprintf_r+0x46a>
   17f78:	2180      	movs	r1, #128	; 0x80
   17f7a:	0020      	movs	r0, r4
   17f7c:	4388      	bics	r0, r1
   17f7e:	9009      	str	r0, [sp, #36]	; 0x24
   17f80:	2a00      	cmp	r2, #0
   17f82:	d000      	beq.n	17f86 <_vfprintf_r+0x2aa>
   17f84:	e0e3      	b.n	1814e <_vfprintf_r+0x472>
   17f86:	4652      	mov	r2, sl
   17f88:	2a00      	cmp	r2, #0
   17f8a:	d001      	beq.n	17f90 <_vfprintf_r+0x2b4>
   17f8c:	f000 fc38 	bl	18800 <_vfprintf_r+0xb24>
   17f90:	2b00      	cmp	r3, #0
   17f92:	d001      	beq.n	17f98 <_vfprintf_r+0x2bc>
   17f94:	f000 fd0c 	bl	189b0 <_vfprintf_r+0xcd4>
   17f98:	2001      	movs	r0, #1
   17f9a:	ab32      	add	r3, sp, #200	; 0xc8
   17f9c:	4020      	ands	r0, r4
   17f9e:	900e      	str	r0, [sp, #56]	; 0x38
   17fa0:	9311      	str	r3, [sp, #68]	; 0x44
   17fa2:	d008      	beq.n	17fb6 <_vfprintf_r+0x2da>
   17fa4:	2327      	movs	r3, #39	; 0x27
   17fa6:	2130      	movs	r1, #48	; 0x30
   17fa8:	aa28      	add	r2, sp, #160	; 0xa0
   17faa:	54d1      	strb	r1, [r2, r3]
   17fac:	aa16      	add	r2, sp, #88	; 0x58
   17fae:	4694      	mov	ip, r2
   17fb0:	3348      	adds	r3, #72	; 0x48
   17fb2:	4463      	add	r3, ip
   17fb4:	9311      	str	r3, [sp, #68]	; 0x44
   17fb6:	4653      	mov	r3, sl
   17fb8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   17fba:	9308      	str	r3, [sp, #32]
   17fbc:	4592      	cmp	sl, r2
   17fbe:	da00      	bge.n	17fc2 <_vfprintf_r+0x2e6>
   17fc0:	9208      	str	r2, [sp, #32]
   17fc2:	2300      	movs	r3, #0
   17fc4:	9313      	str	r3, [sp, #76]	; 0x4c
   17fc6:	4643      	mov	r3, r8
   17fc8:	2b00      	cmp	r3, #0
   17fca:	d002      	beq.n	17fd2 <_vfprintf_r+0x2f6>
   17fcc:	9b08      	ldr	r3, [sp, #32]
   17fce:	3301      	adds	r3, #1
   17fd0:	9308      	str	r3, [sp, #32]
   17fd2:	2302      	movs	r3, #2
   17fd4:	9a09      	ldr	r2, [sp, #36]	; 0x24
   17fd6:	401a      	ands	r2, r3
   17fd8:	4691      	mov	r9, r2
   17fda:	d002      	beq.n	17fe2 <_vfprintf_r+0x306>
   17fdc:	9b08      	ldr	r3, [sp, #32]
   17fde:	3302      	adds	r3, #2
   17fe0:	9308      	str	r3, [sp, #32]
   17fe2:	2384      	movs	r3, #132	; 0x84
   17fe4:	9a09      	ldr	r2, [sp, #36]	; 0x24
   17fe6:	401a      	ands	r2, r3
   17fe8:	9210      	str	r2, [sp, #64]	; 0x40
   17fea:	d000      	beq.n	17fee <_vfprintf_r+0x312>
   17fec:	e207      	b.n	183fe <_vfprintf_r+0x722>
   17fee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   17ff0:	9a08      	ldr	r2, [sp, #32]
   17ff2:	1a9c      	subs	r4, r3, r2
   17ff4:	2c00      	cmp	r4, #0
   17ff6:	dc00      	bgt.n	17ffa <_vfprintf_r+0x31e>
   17ff8:	e201      	b.n	183fe <_vfprintf_r+0x722>
   17ffa:	491f      	ldr	r1, [pc, #124]	; (18078 <_vfprintf_r+0x39c>)
   17ffc:	68ba      	ldr	r2, [r7, #8]
   17ffe:	687b      	ldr	r3, [r7, #4]
   18000:	4688      	mov	r8, r1
   18002:	2c10      	cmp	r4, #16
   18004:	dd21      	ble.n	1804a <_vfprintf_r+0x36e>
   18006:	0031      	movs	r1, r6
   18008:	2510      	movs	r5, #16
   1800a:	465e      	mov	r6, fp
   1800c:	e003      	b.n	18016 <_vfprintf_r+0x33a>
   1800e:	3c10      	subs	r4, #16
   18010:	3108      	adds	r1, #8
   18012:	2c10      	cmp	r4, #16
   18014:	dd17      	ble.n	18046 <_vfprintf_r+0x36a>
   18016:	4640      	mov	r0, r8
   18018:	3210      	adds	r2, #16
   1801a:	3301      	adds	r3, #1
   1801c:	6008      	str	r0, [r1, #0]
   1801e:	604d      	str	r5, [r1, #4]
   18020:	60ba      	str	r2, [r7, #8]
   18022:	607b      	str	r3, [r7, #4]
   18024:	2b07      	cmp	r3, #7
   18026:	ddf2      	ble.n	1800e <_vfprintf_r+0x332>
   18028:	003a      	movs	r2, r7
   1802a:	0031      	movs	r1, r6
   1802c:	9806      	ldr	r0, [sp, #24]
   1802e:	f004 f91b 	bl	1c268 <__sprint_r>
   18032:	2800      	cmp	r0, #0
   18034:	d001      	beq.n	1803a <_vfprintf_r+0x35e>
   18036:	f000 fccf 	bl	189d8 <_vfprintf_r+0xcfc>
   1803a:	3c10      	subs	r4, #16
   1803c:	68ba      	ldr	r2, [r7, #8]
   1803e:	687b      	ldr	r3, [r7, #4]
   18040:	a932      	add	r1, sp, #200	; 0xc8
   18042:	2c10      	cmp	r4, #16
   18044:	dce7      	bgt.n	18016 <_vfprintf_r+0x33a>
   18046:	46b3      	mov	fp, r6
   18048:	000e      	movs	r6, r1
   1804a:	4641      	mov	r1, r8
   1804c:	6074      	str	r4, [r6, #4]
   1804e:	3301      	adds	r3, #1
   18050:	18a4      	adds	r4, r4, r2
   18052:	6031      	str	r1, [r6, #0]
   18054:	60bc      	str	r4, [r7, #8]
   18056:	607b      	str	r3, [r7, #4]
   18058:	2b07      	cmp	r3, #7
   1805a:	dd01      	ble.n	18060 <_vfprintf_r+0x384>
   1805c:	f000 fcae 	bl	189bc <_vfprintf_r+0xce0>
   18060:	ab16      	add	r3, sp, #88	; 0x58
   18062:	7fdb      	ldrb	r3, [r3, #31]
   18064:	3608      	adds	r6, #8
   18066:	4698      	mov	r8, r3
   18068:	e1ca      	b.n	18400 <_vfprintf_r+0x724>
   1806a:	46c0      	nop			; (mov r8, r8)
   1806c:	ffffdfff 	.word	0xffffdfff
   18070:	0001e190 	.word	0x0001e190
   18074:	0001e318 	.word	0x0001e318
   18078:	0001e338 	.word	0x0001e338
   1807c:	2200      	movs	r2, #0
   1807e:	9d07      	ldr	r5, [sp, #28]
   18080:	3b30      	subs	r3, #48	; 0x30
   18082:	46a8      	mov	r8, r5
   18084:	920b      	str	r2, [sp, #44]	; 0x2c
   18086:	001a      	movs	r2, r3
   18088:	9408      	str	r4, [sp, #32]
   1808a:	002c      	movs	r4, r5
   1808c:	4655      	mov	r5, sl
   1808e:	4682      	mov	sl, r0
   18090:	4640      	mov	r0, r8
   18092:	4688      	mov	r8, r1
   18094:	0011      	movs	r1, r2
   18096:	2200      	movs	r2, #0
   18098:	0093      	lsls	r3, r2, #2
   1809a:	189a      	adds	r2, r3, r2
   1809c:	7803      	ldrb	r3, [r0, #0]
   1809e:	0052      	lsls	r2, r2, #1
   180a0:	188a      	adds	r2, r1, r2
   180a2:	0019      	movs	r1, r3
   180a4:	3401      	adds	r4, #1
   180a6:	3930      	subs	r1, #48	; 0x30
   180a8:	0020      	movs	r0, r4
   180aa:	2909      	cmp	r1, #9
   180ac:	d9f4      	bls.n	18098 <_vfprintf_r+0x3bc>
   180ae:	9407      	str	r4, [sp, #28]
   180b0:	4650      	mov	r0, sl
   180b2:	9c08      	ldr	r4, [sp, #32]
   180b4:	920b      	str	r2, [sp, #44]	; 0x2c
   180b6:	4641      	mov	r1, r8
   180b8:	46aa      	mov	sl, r5
   180ba:	e69b      	b.n	17df4 <_vfprintf_r+0x118>
   180bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   180be:	9312      	str	r3, [sp, #72]	; 0x48
   180c0:	6813      	ldr	r3, [r2, #0]
   180c2:	2120      	movs	r1, #32
   180c4:	9308      	str	r3, [sp, #32]
   180c6:	466b      	mov	r3, sp
   180c8:	185b      	adds	r3, r3, r1
   180ca:	781b      	ldrb	r3, [r3, #0]
   180cc:	ad28      	add	r5, sp, #160	; 0xa0
   180ce:	702b      	strb	r3, [r5, #0]
   180d0:	2300      	movs	r3, #0
   180d2:	a916      	add	r1, sp, #88	; 0x58
   180d4:	77cb      	strb	r3, [r1, #31]
   180d6:	0013      	movs	r3, r2
   180d8:	3304      	adds	r3, #4
   180da:	930f      	str	r3, [sp, #60]	; 0x3c
   180dc:	2300      	movs	r3, #0
   180de:	9409      	str	r4, [sp, #36]	; 0x24
   180e0:	4698      	mov	r8, r3
   180e2:	3301      	adds	r3, #1
   180e4:	9308      	str	r3, [sp, #32]
   180e6:	930e      	str	r3, [sp, #56]	; 0x38
   180e8:	2300      	movs	r3, #0
   180ea:	9511      	str	r5, [sp, #68]	; 0x44
   180ec:	469a      	mov	sl, r3
   180ee:	9313      	str	r3, [sp, #76]	; 0x4c
   180f0:	e76f      	b.n	17fd2 <_vfprintf_r+0x2f6>
   180f2:	9312      	str	r3, [sp, #72]	; 0x48
   180f4:	2900      	cmp	r1, #0
   180f6:	d001      	beq.n	180fc <_vfprintf_r+0x420>
   180f8:	f001 f94d 	bl	19396 <_vfprintf_r+0x16ba>
   180fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   180fe:	06a3      	lsls	r3, r4, #26
   18100:	d501      	bpl.n	18106 <_vfprintf_r+0x42a>
   18102:	f000 fd5a 	bl	18bba <_vfprintf_r+0xede>
   18106:	06e3      	lsls	r3, r4, #27
   18108:	d501      	bpl.n	1810e <_vfprintf_r+0x432>
   1810a:	f000 fcab 	bl	18a64 <_vfprintf_r+0xd88>
   1810e:	0663      	lsls	r3, r4, #25
   18110:	d401      	bmi.n	18116 <_vfprintf_r+0x43a>
   18112:	f000 fca7 	bl	18a64 <_vfprintf_r+0xd88>
   18116:	2100      	movs	r1, #0
   18118:	5e53      	ldrsh	r3, [r2, r1]
   1811a:	930c      	str	r3, [sp, #48]	; 0x30
   1811c:	3204      	adds	r2, #4
   1811e:	17db      	asrs	r3, r3, #31
   18120:	930d      	str	r3, [sp, #52]	; 0x34
   18122:	920f      	str	r2, [sp, #60]	; 0x3c
   18124:	2b00      	cmp	r3, #0
   18126:	da01      	bge.n	1812c <_vfprintf_r+0x450>
   18128:	f000 fdb2 	bl	18c90 <_vfprintf_r+0xfb4>
   1812c:	990c      	ldr	r1, [sp, #48]	; 0x30
   1812e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   18130:	0008      	movs	r0, r1
   18132:	4651      	mov	r1, sl
   18134:	ab16      	add	r3, sp, #88	; 0x58
   18136:	7fdb      	ldrb	r3, [r3, #31]
   18138:	4310      	orrs	r0, r2
   1813a:	4698      	mov	r8, r3
   1813c:	0002      	movs	r2, r0
   1813e:	2301      	movs	r3, #1
   18140:	3101      	adds	r1, #1
   18142:	d000      	beq.n	18146 <_vfprintf_r+0x46a>
   18144:	e718      	b.n	17f78 <_vfprintf_r+0x29c>
   18146:	2a00      	cmp	r2, #0
   18148:	d100      	bne.n	1814c <_vfprintf_r+0x470>
   1814a:	e35a      	b.n	18802 <_vfprintf_r+0xb26>
   1814c:	9409      	str	r4, [sp, #36]	; 0x24
   1814e:	2b01      	cmp	r3, #1
   18150:	d101      	bne.n	18156 <_vfprintf_r+0x47a>
   18152:	f000 fc06 	bl	18962 <_vfprintf_r+0xc86>
   18156:	2b02      	cmp	r3, #2
   18158:	d000      	beq.n	1815c <_vfprintf_r+0x480>
   1815a:	e380      	b.n	1885e <_vfprintf_r+0xb82>
   1815c:	9c19      	ldr	r4, [sp, #100]	; 0x64
   1815e:	200f      	movs	r0, #15
   18160:	46a1      	mov	r9, r4
   18162:	46b4      	mov	ip, r6
   18164:	ab32      	add	r3, sp, #200	; 0xc8
   18166:	0019      	movs	r1, r3
   18168:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   1816a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1816c:	0004      	movs	r4, r0
   1816e:	464d      	mov	r5, r9
   18170:	4014      	ands	r4, r2
   18172:	5d2c      	ldrb	r4, [r5, r4]
   18174:	071e      	lsls	r6, r3, #28
   18176:	0915      	lsrs	r5, r2, #4
   18178:	3901      	subs	r1, #1
   1817a:	432e      	orrs	r6, r5
   1817c:	700c      	strb	r4, [r1, #0]
   1817e:	091c      	lsrs	r4, r3, #4
   18180:	0023      	movs	r3, r4
   18182:	0034      	movs	r4, r6
   18184:	0032      	movs	r2, r6
   18186:	431c      	orrs	r4, r3
   18188:	d1f0      	bne.n	1816c <_vfprintf_r+0x490>
   1818a:	920c      	str	r2, [sp, #48]	; 0x30
   1818c:	930d      	str	r3, [sp, #52]	; 0x34
   1818e:	ab32      	add	r3, sp, #200	; 0xc8
   18190:	1a5b      	subs	r3, r3, r1
   18192:	9111      	str	r1, [sp, #68]	; 0x44
   18194:	4666      	mov	r6, ip
   18196:	930e      	str	r3, [sp, #56]	; 0x38
   18198:	e70d      	b.n	17fb6 <_vfprintf_r+0x2da>
   1819a:	4663      	mov	r3, ip
   1819c:	431c      	orrs	r4, r3
   1819e:	9b07      	ldr	r3, [sp, #28]
   181a0:	781b      	ldrb	r3, [r3, #0]
   181a2:	e624      	b.n	17dee <_vfprintf_r+0x112>
   181a4:	9b07      	ldr	r3, [sp, #28]
   181a6:	781b      	ldrb	r3, [r3, #0]
   181a8:	2b6c      	cmp	r3, #108	; 0x6c
   181aa:	d101      	bne.n	181b0 <_vfprintf_r+0x4d4>
   181ac:	f000 fe8c 	bl	18ec8 <_vfprintf_r+0x11ec>
   181b0:	2210      	movs	r2, #16
   181b2:	4314      	orrs	r4, r2
   181b4:	e61b      	b.n	17dee <_vfprintf_r+0x112>
   181b6:	2900      	cmp	r1, #0
   181b8:	d001      	beq.n	181be <_vfprintf_r+0x4e2>
   181ba:	f001 f8d5 	bl	19368 <_vfprintf_r+0x168c>
   181be:	06a3      	lsls	r3, r4, #26
   181c0:	d501      	bpl.n	181c6 <_vfprintf_r+0x4ea>
   181c2:	f000 fe76 	bl	18eb2 <_vfprintf_r+0x11d6>
   181c6:	06e3      	lsls	r3, r4, #27
   181c8:	d500      	bpl.n	181cc <_vfprintf_r+0x4f0>
   181ca:	e110      	b.n	183ee <_vfprintf_r+0x712>
   181cc:	0663      	lsls	r3, r4, #25
   181ce:	d400      	bmi.n	181d2 <_vfprintf_r+0x4f6>
   181d0:	e10d      	b.n	183ee <_vfprintf_r+0x712>
   181d2:	4669      	mov	r1, sp
   181d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   181d6:	8d09      	ldrh	r1, [r1, #40]	; 0x28
   181d8:	681a      	ldr	r2, [r3, #0]
   181da:	3304      	adds	r3, #4
   181dc:	9208      	str	r2, [sp, #32]
   181de:	8011      	strh	r1, [r2, #0]
   181e0:	930f      	str	r3, [sp, #60]	; 0x3c
   181e2:	e5c9      	b.n	17d78 <_vfprintf_r+0x9c>
   181e4:	990f      	ldr	r1, [sp, #60]	; 0x3c
   181e6:	2230      	movs	r2, #48	; 0x30
   181e8:	680b      	ldr	r3, [r1, #0]
   181ea:	930c      	str	r3, [sp, #48]	; 0x30
   181ec:	2300      	movs	r3, #0
   181ee:	930d      	str	r3, [sp, #52]	; 0x34
   181f0:	3302      	adds	r3, #2
   181f2:	431c      	orrs	r4, r3
   181f4:	ab1e      	add	r3, sp, #120	; 0x78
   181f6:	701a      	strb	r2, [r3, #0]
   181f8:	3248      	adds	r2, #72	; 0x48
   181fa:	705a      	strb	r2, [r3, #1]
   181fc:	000b      	movs	r3, r1
   181fe:	3304      	adds	r3, #4
   18200:	930f      	str	r3, [sp, #60]	; 0x3c
   18202:	4bc1      	ldr	r3, [pc, #772]	; (18508 <_vfprintf_r+0x82c>)
   18204:	9212      	str	r2, [sp, #72]	; 0x48
   18206:	9319      	str	r3, [sp, #100]	; 0x64
   18208:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   1820a:	2302      	movs	r3, #2
   1820c:	e6ac      	b.n	17f68 <_vfprintf_r+0x28c>
   1820e:	464b      	mov	r3, r9
   18210:	431c      	orrs	r4, r3
   18212:	9b07      	ldr	r3, [sp, #28]
   18214:	781b      	ldrb	r3, [r3, #0]
   18216:	e5ea      	b.n	17dee <_vfprintf_r+0x112>
   18218:	9312      	str	r3, [sp, #72]	; 0x48
   1821a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1821c:	a916      	add	r1, sp, #88	; 0x58
   1821e:	1d1d      	adds	r5, r3, #4
   18220:	681b      	ldr	r3, [r3, #0]
   18222:	001a      	movs	r2, r3
   18224:	9311      	str	r3, [sp, #68]	; 0x44
   18226:	2300      	movs	r3, #0
   18228:	77cb      	strb	r3, [r1, #31]
   1822a:	2a00      	cmp	r2, #0
   1822c:	d101      	bne.n	18232 <_vfprintf_r+0x556>
   1822e:	f000 ff01 	bl	19034 <_vfprintf_r+0x1358>
   18232:	4653      	mov	r3, sl
   18234:	3301      	adds	r3, #1
   18236:	d101      	bne.n	1823c <_vfprintf_r+0x560>
   18238:	f000 fe64 	bl	18f04 <_vfprintf_r+0x1228>
   1823c:	4652      	mov	r2, sl
   1823e:	2100      	movs	r1, #0
   18240:	9811      	ldr	r0, [sp, #68]	; 0x44
   18242:	f003 f98f 	bl	1b564 <memchr>
   18246:	2800      	cmp	r0, #0
   18248:	d101      	bne.n	1824e <_vfprintf_r+0x572>
   1824a:	f000 ff78 	bl	1913e <_vfprintf_r+0x1462>
   1824e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   18250:	1ac3      	subs	r3, r0, r3
   18252:	001a      	movs	r2, r3
   18254:	930e      	str	r3, [sp, #56]	; 0x38
   18256:	43db      	mvns	r3, r3
   18258:	17db      	asrs	r3, r3, #31
   1825a:	401a      	ands	r2, r3
   1825c:	ab16      	add	r3, sp, #88	; 0x58
   1825e:	7fdb      	ldrb	r3, [r3, #31]
   18260:	9208      	str	r2, [sp, #32]
   18262:	4698      	mov	r8, r3
   18264:	2300      	movs	r3, #0
   18266:	950f      	str	r5, [sp, #60]	; 0x3c
   18268:	9409      	str	r4, [sp, #36]	; 0x24
   1826a:	469a      	mov	sl, r3
   1826c:	9313      	str	r3, [sp, #76]	; 0x4c
   1826e:	e6aa      	b.n	17fc6 <_vfprintf_r+0x2ea>
   18270:	2308      	movs	r3, #8
   18272:	431c      	orrs	r4, r3
   18274:	9b07      	ldr	r3, [sp, #28]
   18276:	781b      	ldrb	r3, [r3, #0]
   18278:	e5b9      	b.n	17dee <_vfprintf_r+0x112>
   1827a:	9312      	str	r3, [sp, #72]	; 0x48
   1827c:	2310      	movs	r3, #16
   1827e:	431c      	orrs	r4, r3
   18280:	06a3      	lsls	r3, r4, #26
   18282:	d501      	bpl.n	18288 <_vfprintf_r+0x5ac>
   18284:	f000 fca7 	bl	18bd6 <_vfprintf_r+0xefa>
   18288:	06e3      	lsls	r3, r4, #27
   1828a:	d500      	bpl.n	1828e <_vfprintf_r+0x5b2>
   1828c:	e3ee      	b.n	18a6c <_vfprintf_r+0xd90>
   1828e:	0663      	lsls	r3, r4, #25
   18290:	d400      	bmi.n	18294 <_vfprintf_r+0x5b8>
   18292:	e3eb      	b.n	18a6c <_vfprintf_r+0xd90>
   18294:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   18296:	881a      	ldrh	r2, [r3, #0]
   18298:	920c      	str	r2, [sp, #48]	; 0x30
   1829a:	2200      	movs	r2, #0
   1829c:	3304      	adds	r3, #4
   1829e:	920d      	str	r2, [sp, #52]	; 0x34
   182a0:	930f      	str	r3, [sp, #60]	; 0x3c
   182a2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   182a4:	2300      	movs	r3, #0
   182a6:	e65f      	b.n	17f68 <_vfprintf_r+0x28c>
   182a8:	9312      	str	r3, [sp, #72]	; 0x48
   182aa:	2310      	movs	r3, #16
   182ac:	431c      	orrs	r4, r3
   182ae:	06a3      	lsls	r3, r4, #26
   182b0:	d501      	bpl.n	182b6 <_vfprintf_r+0x5da>
   182b2:	f000 fcba 	bl	18c2a <_vfprintf_r+0xf4e>
   182b6:	06e3      	lsls	r3, r4, #27
   182b8:	d500      	bpl.n	182bc <_vfprintf_r+0x5e0>
   182ba:	e3da      	b.n	18a72 <_vfprintf_r+0xd96>
   182bc:	0663      	lsls	r3, r4, #25
   182be:	d400      	bmi.n	182c2 <_vfprintf_r+0x5e6>
   182c0:	e3d7      	b.n	18a72 <_vfprintf_r+0xd96>
   182c2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   182c4:	881a      	ldrh	r2, [r3, #0]
   182c6:	920c      	str	r2, [sp, #48]	; 0x30
   182c8:	2200      	movs	r2, #0
   182ca:	3304      	adds	r3, #4
   182cc:	920d      	str	r2, [sp, #52]	; 0x34
   182ce:	930f      	str	r3, [sp, #60]	; 0x3c
   182d0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   182d2:	2301      	movs	r3, #1
   182d4:	e648      	b.n	17f68 <_vfprintf_r+0x28c>
   182d6:	9312      	str	r3, [sp, #72]	; 0x48
   182d8:	2900      	cmp	r1, #0
   182da:	d001      	beq.n	182e0 <_vfprintf_r+0x604>
   182dc:	f001 f857 	bl	1938e <_vfprintf_r+0x16b2>
   182e0:	4b8a      	ldr	r3, [pc, #552]	; (1850c <_vfprintf_r+0x830>)
   182e2:	9319      	str	r3, [sp, #100]	; 0x64
   182e4:	e618      	b.n	17f18 <_vfprintf_r+0x23c>
   182e6:	2301      	movs	r3, #1
   182e8:	431c      	orrs	r4, r3
   182ea:	9b07      	ldr	r3, [sp, #28]
   182ec:	781b      	ldrb	r3, [r3, #0]
   182ee:	e57e      	b.n	17dee <_vfprintf_r+0x112>
   182f0:	2380      	movs	r3, #128	; 0x80
   182f2:	431c      	orrs	r4, r3
   182f4:	9b07      	ldr	r3, [sp, #28]
   182f6:	781b      	ldrb	r3, [r3, #0]
   182f8:	e579      	b.n	17dee <_vfprintf_r+0x112>
   182fa:	9b07      	ldr	r3, [sp, #28]
   182fc:	781b      	ldrb	r3, [r3, #0]
   182fe:	2800      	cmp	r0, #0
   18300:	d000      	beq.n	18304 <_vfprintf_r+0x628>
   18302:	e574      	b.n	17dee <_vfprintf_r+0x112>
   18304:	2101      	movs	r1, #1
   18306:	3020      	adds	r0, #32
   18308:	e571      	b.n	17dee <_vfprintf_r+0x112>
   1830a:	9312      	str	r3, [sp, #72]	; 0x48
   1830c:	2900      	cmp	r1, #0
   1830e:	d001      	beq.n	18314 <_vfprintf_r+0x638>
   18310:	f001 f839 	bl	19386 <_vfprintf_r+0x16aa>
   18314:	2207      	movs	r2, #7
   18316:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   18318:	3307      	adds	r3, #7
   1831a:	4393      	bics	r3, r2
   1831c:	3201      	adds	r2, #1
   1831e:	4694      	mov	ip, r2
   18320:	449c      	add	ip, r3
   18322:	4662      	mov	r2, ip
   18324:	920f      	str	r2, [sp, #60]	; 0x3c
   18326:	681a      	ldr	r2, [r3, #0]
   18328:	9216      	str	r2, [sp, #88]	; 0x58
   1832a:	685b      	ldr	r3, [r3, #4]
   1832c:	2201      	movs	r2, #1
   1832e:	9315      	str	r3, [sp, #84]	; 0x54
   18330:	9b15      	ldr	r3, [sp, #84]	; 0x54
   18332:	9d16      	ldr	r5, [sp, #88]	; 0x58
   18334:	005b      	lsls	r3, r3, #1
   18336:	085b      	lsrs	r3, r3, #1
   18338:	4698      	mov	r8, r3
   1833a:	4252      	negs	r2, r2
   1833c:	4b74      	ldr	r3, [pc, #464]	; (18510 <_vfprintf_r+0x834>)
   1833e:	0028      	movs	r0, r5
   18340:	4641      	mov	r1, r8
   18342:	f004 fb0b 	bl	1c95c <__aeabi_dcmpun>
   18346:	2800      	cmp	r0, #0
   18348:	d001      	beq.n	1834e <_vfprintf_r+0x672>
   1834a:	f000 fcb4 	bl	18cb6 <_vfprintf_r+0xfda>
   1834e:	2201      	movs	r2, #1
   18350:	4b6f      	ldr	r3, [pc, #444]	; (18510 <_vfprintf_r+0x834>)
   18352:	4252      	negs	r2, r2
   18354:	0028      	movs	r0, r5
   18356:	4641      	mov	r1, r8
   18358:	f7fe ff94 	bl	17284 <__aeabi_dcmple>
   1835c:	2800      	cmp	r0, #0
   1835e:	d001      	beq.n	18364 <_vfprintf_r+0x688>
   18360:	f000 fca9 	bl	18cb6 <_vfprintf_r+0xfda>
   18364:	2200      	movs	r2, #0
   18366:	2300      	movs	r3, #0
   18368:	9816      	ldr	r0, [sp, #88]	; 0x58
   1836a:	9915      	ldr	r1, [sp, #84]	; 0x54
   1836c:	f7fe ff80 	bl	17270 <__aeabi_dcmplt>
   18370:	2800      	cmp	r0, #0
   18372:	d001      	beq.n	18378 <_vfprintf_r+0x69c>
   18374:	f000 fd55 	bl	18e22 <_vfprintf_r+0x1146>
   18378:	ab16      	add	r3, sp, #88	; 0x58
   1837a:	7fdb      	ldrb	r3, [r3, #31]
   1837c:	4698      	mov	r8, r3
   1837e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   18380:	2b47      	cmp	r3, #71	; 0x47
   18382:	dd01      	ble.n	18388 <_vfprintf_r+0x6ac>
   18384:	f000 fdb4 	bl	18ef0 <_vfprintf_r+0x1214>
   18388:	4b62      	ldr	r3, [pc, #392]	; (18514 <_vfprintf_r+0x838>)
   1838a:	9311      	str	r3, [sp, #68]	; 0x44
   1838c:	2380      	movs	r3, #128	; 0x80
   1838e:	439c      	bics	r4, r3
   18390:	3b7d      	subs	r3, #125	; 0x7d
   18392:	9308      	str	r3, [sp, #32]
   18394:	930e      	str	r3, [sp, #56]	; 0x38
   18396:	2300      	movs	r3, #0
   18398:	9409      	str	r4, [sp, #36]	; 0x24
   1839a:	469a      	mov	sl, r3
   1839c:	9313      	str	r3, [sp, #76]	; 0x4c
   1839e:	e612      	b.n	17fc6 <_vfprintf_r+0x2ea>
   183a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   183a2:	1d1a      	adds	r2, r3, #4
   183a4:	681b      	ldr	r3, [r3, #0]
   183a6:	930b      	str	r3, [sp, #44]	; 0x2c
   183a8:	2b00      	cmp	r3, #0
   183aa:	da00      	bge.n	183ae <_vfprintf_r+0x6d2>
   183ac:	e578      	b.n	17ea0 <_vfprintf_r+0x1c4>
   183ae:	9b07      	ldr	r3, [sp, #28]
   183b0:	920f      	str	r2, [sp, #60]	; 0x3c
   183b2:	781b      	ldrb	r3, [r3, #0]
   183b4:	e51b      	b.n	17dee <_vfprintf_r+0x112>
   183b6:	9312      	str	r3, [sp, #72]	; 0x48
   183b8:	2900      	cmp	r1, #0
   183ba:	d001      	beq.n	183c0 <_vfprintf_r+0x6e4>
   183bc:	f000 ffcc 	bl	19358 <_vfprintf_r+0x167c>
   183c0:	2310      	movs	r3, #16
   183c2:	431c      	orrs	r4, r3
   183c4:	e69a      	b.n	180fc <_vfprintf_r+0x420>
   183c6:	9312      	str	r3, [sp, #72]	; 0x48
   183c8:	e771      	b.n	182ae <_vfprintf_r+0x5d2>
   183ca:	9312      	str	r3, [sp, #72]	; 0x48
   183cc:	e758      	b.n	18280 <_vfprintf_r+0x5a4>
   183ce:	9312      	str	r3, [sp, #72]	; 0x48
   183d0:	2900      	cmp	r1, #0
   183d2:	d001      	beq.n	183d8 <_vfprintf_r+0x6fc>
   183d4:	f000 ffd3 	bl	1937e <_vfprintf_r+0x16a2>
   183d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   183da:	2b00      	cmp	r3, #0
   183dc:	d100      	bne.n	183e0 <_vfprintf_r+0x704>
   183de:	e18d      	b.n	186fc <_vfprintf_r+0xa20>
   183e0:	ad28      	add	r5, sp, #160	; 0xa0
   183e2:	702b      	strb	r3, [r5, #0]
   183e4:	2300      	movs	r3, #0
   183e6:	aa16      	add	r2, sp, #88	; 0x58
   183e8:	77d3      	strb	r3, [r2, #31]
   183ea:	9409      	str	r4, [sp, #36]	; 0x24
   183ec:	e678      	b.n	180e0 <_vfprintf_r+0x404>
   183ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   183f0:	990a      	ldr	r1, [sp, #40]	; 0x28
   183f2:	6813      	ldr	r3, [r2, #0]
   183f4:	6019      	str	r1, [r3, #0]
   183f6:	0013      	movs	r3, r2
   183f8:	3304      	adds	r3, #4
   183fa:	930f      	str	r3, [sp, #60]	; 0x3c
   183fc:	e4bc      	b.n	17d78 <_vfprintf_r+0x9c>
   183fe:	68bc      	ldr	r4, [r7, #8]
   18400:	4643      	mov	r3, r8
   18402:	2b00      	cmp	r3, #0
   18404:	d00f      	beq.n	18426 <_vfprintf_r+0x74a>
   18406:	aa16      	add	r2, sp, #88	; 0x58
   18408:	231f      	movs	r3, #31
   1840a:	4694      	mov	ip, r2
   1840c:	4463      	add	r3, ip
   1840e:	6033      	str	r3, [r6, #0]
   18410:	2301      	movs	r3, #1
   18412:	6073      	str	r3, [r6, #4]
   18414:	687b      	ldr	r3, [r7, #4]
   18416:	3401      	adds	r4, #1
   18418:	3301      	adds	r3, #1
   1841a:	60bc      	str	r4, [r7, #8]
   1841c:	607b      	str	r3, [r7, #4]
   1841e:	2b07      	cmp	r3, #7
   18420:	dd00      	ble.n	18424 <_vfprintf_r+0x748>
   18422:	e203      	b.n	1882c <_vfprintf_r+0xb50>
   18424:	3608      	adds	r6, #8
   18426:	464b      	mov	r3, r9
   18428:	2b00      	cmp	r3, #0
   1842a:	d00c      	beq.n	18446 <_vfprintf_r+0x76a>
   1842c:	ab1e      	add	r3, sp, #120	; 0x78
   1842e:	6033      	str	r3, [r6, #0]
   18430:	2302      	movs	r3, #2
   18432:	6073      	str	r3, [r6, #4]
   18434:	687b      	ldr	r3, [r7, #4]
   18436:	3402      	adds	r4, #2
   18438:	3301      	adds	r3, #1
   1843a:	60bc      	str	r4, [r7, #8]
   1843c:	607b      	str	r3, [r7, #4]
   1843e:	2b07      	cmp	r3, #7
   18440:	dd00      	ble.n	18444 <_vfprintf_r+0x768>
   18442:	e1fd      	b.n	18840 <_vfprintf_r+0xb64>
   18444:	3608      	adds	r6, #8
   18446:	9b10      	ldr	r3, [sp, #64]	; 0x40
   18448:	2b80      	cmp	r3, #128	; 0x80
   1844a:	d100      	bne.n	1844e <_vfprintf_r+0x772>
   1844c:	e173      	b.n	18736 <_vfprintf_r+0xa5a>
   1844e:	4653      	mov	r3, sl
   18450:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   18452:	1a9d      	subs	r5, r3, r2
   18454:	2d00      	cmp	r5, #0
   18456:	dd32      	ble.n	184be <_vfprintf_r+0x7e2>
   18458:	4a2f      	ldr	r2, [pc, #188]	; (18518 <_vfprintf_r+0x83c>)
   1845a:	687b      	ldr	r3, [r7, #4]
   1845c:	4691      	mov	r9, r2
   1845e:	2d10      	cmp	r5, #16
   18460:	dd22      	ble.n	184a8 <_vfprintf_r+0x7cc>
   18462:	2210      	movs	r2, #16
   18464:	4692      	mov	sl, r2
   18466:	0022      	movs	r2, r4
   18468:	465c      	mov	r4, fp
   1846a:	e003      	b.n	18474 <_vfprintf_r+0x798>
   1846c:	3d10      	subs	r5, #16
   1846e:	3608      	adds	r6, #8
   18470:	2d10      	cmp	r5, #16
   18472:	dd17      	ble.n	184a4 <_vfprintf_r+0x7c8>
   18474:	4649      	mov	r1, r9
   18476:	6031      	str	r1, [r6, #0]
   18478:	4651      	mov	r1, sl
   1847a:	3210      	adds	r2, #16
   1847c:	3301      	adds	r3, #1
   1847e:	6071      	str	r1, [r6, #4]
   18480:	60ba      	str	r2, [r7, #8]
   18482:	607b      	str	r3, [r7, #4]
   18484:	2b07      	cmp	r3, #7
   18486:	ddf1      	ble.n	1846c <_vfprintf_r+0x790>
   18488:	003a      	movs	r2, r7
   1848a:	0021      	movs	r1, r4
   1848c:	9806      	ldr	r0, [sp, #24]
   1848e:	f003 feeb 	bl	1c268 <__sprint_r>
   18492:	2800      	cmp	r0, #0
   18494:	d000      	beq.n	18498 <_vfprintf_r+0x7bc>
   18496:	e18a      	b.n	187ae <_vfprintf_r+0xad2>
   18498:	3d10      	subs	r5, #16
   1849a:	68ba      	ldr	r2, [r7, #8]
   1849c:	687b      	ldr	r3, [r7, #4]
   1849e:	ae32      	add	r6, sp, #200	; 0xc8
   184a0:	2d10      	cmp	r5, #16
   184a2:	dce7      	bgt.n	18474 <_vfprintf_r+0x798>
   184a4:	46a3      	mov	fp, r4
   184a6:	0014      	movs	r4, r2
   184a8:	464a      	mov	r2, r9
   184aa:	1964      	adds	r4, r4, r5
   184ac:	3301      	adds	r3, #1
   184ae:	6032      	str	r2, [r6, #0]
   184b0:	6075      	str	r5, [r6, #4]
   184b2:	60bc      	str	r4, [r7, #8]
   184b4:	607b      	str	r3, [r7, #4]
   184b6:	2b07      	cmp	r3, #7
   184b8:	dd00      	ble.n	184bc <_vfprintf_r+0x7e0>
   184ba:	e1ad      	b.n	18818 <_vfprintf_r+0xb3c>
   184bc:	3608      	adds	r6, #8
   184be:	9b09      	ldr	r3, [sp, #36]	; 0x24
   184c0:	05db      	lsls	r3, r3, #23
   184c2:	d500      	bpl.n	184c6 <_vfprintf_r+0x7ea>
   184c4:	e0be      	b.n	18644 <_vfprintf_r+0x968>
   184c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
   184c8:	6033      	str	r3, [r6, #0]
   184ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   184cc:	469c      	mov	ip, r3
   184ce:	6073      	str	r3, [r6, #4]
   184d0:	687b      	ldr	r3, [r7, #4]
   184d2:	4464      	add	r4, ip
   184d4:	3301      	adds	r3, #1
   184d6:	60bc      	str	r4, [r7, #8]
   184d8:	607b      	str	r3, [r7, #4]
   184da:	2b07      	cmp	r3, #7
   184dc:	dd00      	ble.n	184e0 <_vfprintf_r+0x804>
   184de:	e0a6      	b.n	1862e <_vfprintf_r+0x952>
   184e0:	3608      	adds	r6, #8
   184e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
   184e4:	075b      	lsls	r3, r3, #29
   184e6:	d54a      	bpl.n	1857e <_vfprintf_r+0x8a2>
   184e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   184ea:	9a08      	ldr	r2, [sp, #32]
   184ec:	1a9d      	subs	r5, r3, r2
   184ee:	2d00      	cmp	r5, #0
   184f0:	dd45      	ble.n	1857e <_vfprintf_r+0x8a2>
   184f2:	4a0a      	ldr	r2, [pc, #40]	; (1851c <_vfprintf_r+0x840>)
   184f4:	687b      	ldr	r3, [r7, #4]
   184f6:	4690      	mov	r8, r2
   184f8:	2d10      	cmp	r5, #16
   184fa:	dd2f      	ble.n	1855c <_vfprintf_r+0x880>
   184fc:	2210      	movs	r2, #16
   184fe:	4691      	mov	r9, r2
   18500:	0022      	movs	r2, r4
   18502:	465c      	mov	r4, fp
   18504:	e010      	b.n	18528 <_vfprintf_r+0x84c>
   18506:	46c0      	nop			; (mov r8, r8)
   18508:	0001e318 	.word	0x0001e318
   1850c:	0001e304 	.word	0x0001e304
   18510:	7fefffff 	.word	0x7fefffff
   18514:	0001e2f4 	.word	0x0001e2f4
   18518:	0001e348 	.word	0x0001e348
   1851c:	0001e338 	.word	0x0001e338
   18520:	3d10      	subs	r5, #16
   18522:	3608      	adds	r6, #8
   18524:	2d10      	cmp	r5, #16
   18526:	dd17      	ble.n	18558 <_vfprintf_r+0x87c>
   18528:	49d1      	ldr	r1, [pc, #836]	; (18870 <_vfprintf_r+0xb94>)
   1852a:	3210      	adds	r2, #16
   1852c:	6031      	str	r1, [r6, #0]
   1852e:	4649      	mov	r1, r9
   18530:	3301      	adds	r3, #1
   18532:	6071      	str	r1, [r6, #4]
   18534:	60ba      	str	r2, [r7, #8]
   18536:	607b      	str	r3, [r7, #4]
   18538:	2b07      	cmp	r3, #7
   1853a:	ddf1      	ble.n	18520 <_vfprintf_r+0x844>
   1853c:	003a      	movs	r2, r7
   1853e:	0021      	movs	r1, r4
   18540:	9806      	ldr	r0, [sp, #24]
   18542:	f003 fe91 	bl	1c268 <__sprint_r>
   18546:	2800      	cmp	r0, #0
   18548:	d000      	beq.n	1854c <_vfprintf_r+0x870>
   1854a:	e130      	b.n	187ae <_vfprintf_r+0xad2>
   1854c:	3d10      	subs	r5, #16
   1854e:	68ba      	ldr	r2, [r7, #8]
   18550:	687b      	ldr	r3, [r7, #4]
   18552:	ae32      	add	r6, sp, #200	; 0xc8
   18554:	2d10      	cmp	r5, #16
   18556:	dce7      	bgt.n	18528 <_vfprintf_r+0x84c>
   18558:	46a3      	mov	fp, r4
   1855a:	0014      	movs	r4, r2
   1855c:	4642      	mov	r2, r8
   1855e:	1964      	adds	r4, r4, r5
   18560:	3301      	adds	r3, #1
   18562:	c624      	stmia	r6!, {r2, r5}
   18564:	60bc      	str	r4, [r7, #8]
   18566:	607b      	str	r3, [r7, #4]
   18568:	2b07      	cmp	r3, #7
   1856a:	dd08      	ble.n	1857e <_vfprintf_r+0x8a2>
   1856c:	003a      	movs	r2, r7
   1856e:	4659      	mov	r1, fp
   18570:	9806      	ldr	r0, [sp, #24]
   18572:	f003 fe79 	bl	1c268 <__sprint_r>
   18576:	2800      	cmp	r0, #0
   18578:	d000      	beq.n	1857c <_vfprintf_r+0x8a0>
   1857a:	e13f      	b.n	187fc <_vfprintf_r+0xb20>
   1857c:	68bc      	ldr	r4, [r7, #8]
   1857e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   18580:	9908      	ldr	r1, [sp, #32]
   18582:	428b      	cmp	r3, r1
   18584:	da00      	bge.n	18588 <_vfprintf_r+0x8ac>
   18586:	000b      	movs	r3, r1
   18588:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1858a:	4694      	mov	ip, r2
   1858c:	449c      	add	ip, r3
   1858e:	4663      	mov	r3, ip
   18590:	930a      	str	r3, [sp, #40]	; 0x28
   18592:	2c00      	cmp	r4, #0
   18594:	d000      	beq.n	18598 <_vfprintf_r+0x8bc>
   18596:	e129      	b.n	187ec <_vfprintf_r+0xb10>
   18598:	2300      	movs	r3, #0
   1859a:	ae32      	add	r6, sp, #200	; 0xc8
   1859c:	607b      	str	r3, [r7, #4]
   1859e:	f7ff fbeb 	bl	17d78 <_vfprintf_r+0x9c>
   185a2:	9b14      	ldr	r3, [sp, #80]	; 0x50
   185a4:	2b01      	cmp	r3, #1
   185a6:	dc00      	bgt.n	185aa <_vfprintf_r+0x8ce>
   185a8:	e103      	b.n	187b2 <_vfprintf_r+0xad6>
   185aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
   185ac:	3401      	adds	r4, #1
   185ae:	6033      	str	r3, [r6, #0]
   185b0:	2301      	movs	r3, #1
   185b2:	6073      	str	r3, [r6, #4]
   185b4:	687b      	ldr	r3, [r7, #4]
   185b6:	60bc      	str	r4, [r7, #8]
   185b8:	3301      	adds	r3, #1
   185ba:	607b      	str	r3, [r7, #4]
   185bc:	2b07      	cmp	r3, #7
   185be:	dd00      	ble.n	185c2 <_vfprintf_r+0x8e6>
   185c0:	e2ef      	b.n	18ba2 <_vfprintf_r+0xec6>
   185c2:	3608      	adds	r6, #8
   185c4:	9a18      	ldr	r2, [sp, #96]	; 0x60
   185c6:	3301      	adds	r3, #1
   185c8:	6032      	str	r2, [r6, #0]
   185ca:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   185cc:	4698      	mov	r8, r3
   185ce:	4694      	mov	ip, r2
   185d0:	4464      	add	r4, ip
   185d2:	6072      	str	r2, [r6, #4]
   185d4:	60bc      	str	r4, [r7, #8]
   185d6:	607b      	str	r3, [r7, #4]
   185d8:	2b07      	cmp	r3, #7
   185da:	dd00      	ble.n	185de <_vfprintf_r+0x902>
   185dc:	e318      	b.n	18c10 <_vfprintf_r+0xf34>
   185de:	3608      	adds	r6, #8
   185e0:	2200      	movs	r2, #0
   185e2:	2300      	movs	r3, #0
   185e4:	9816      	ldr	r0, [sp, #88]	; 0x58
   185e6:	9915      	ldr	r1, [sp, #84]	; 0x54
   185e8:	f7fe fe3c 	bl	17264 <__aeabi_dcmpeq>
   185ec:	2800      	cmp	r0, #0
   185ee:	d000      	beq.n	185f2 <_vfprintf_r+0x916>
   185f0:	e1f4      	b.n	189dc <_vfprintf_r+0xd00>
   185f2:	9d11      	ldr	r5, [sp, #68]	; 0x44
   185f4:	9b14      	ldr	r3, [sp, #80]	; 0x50
   185f6:	3501      	adds	r5, #1
   185f8:	3b01      	subs	r3, #1
   185fa:	6035      	str	r5, [r6, #0]
   185fc:	6073      	str	r3, [r6, #4]
   185fe:	18e4      	adds	r4, r4, r3
   18600:	2301      	movs	r3, #1
   18602:	469c      	mov	ip, r3
   18604:	44e0      	add	r8, ip
   18606:	4643      	mov	r3, r8
   18608:	60bc      	str	r4, [r7, #8]
   1860a:	607b      	str	r3, [r7, #4]
   1860c:	2b07      	cmp	r3, #7
   1860e:	dd00      	ble.n	18612 <_vfprintf_r+0x936>
   18610:	e0e0      	b.n	187d4 <_vfprintf_r+0xaf8>
   18612:	3608      	adds	r6, #8
   18614:	ab21      	add	r3, sp, #132	; 0x84
   18616:	6033      	str	r3, [r6, #0]
   18618:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1861a:	469c      	mov	ip, r3
   1861c:	6073      	str	r3, [r6, #4]
   1861e:	4643      	mov	r3, r8
   18620:	4464      	add	r4, ip
   18622:	3301      	adds	r3, #1
   18624:	60bc      	str	r4, [r7, #8]
   18626:	607b      	str	r3, [r7, #4]
   18628:	2b07      	cmp	r3, #7
   1862a:	dc00      	bgt.n	1862e <_vfprintf_r+0x952>
   1862c:	e758      	b.n	184e0 <_vfprintf_r+0x804>
   1862e:	003a      	movs	r2, r7
   18630:	4659      	mov	r1, fp
   18632:	9806      	ldr	r0, [sp, #24]
   18634:	f003 fe18 	bl	1c268 <__sprint_r>
   18638:	2800      	cmp	r0, #0
   1863a:	d000      	beq.n	1863e <_vfprintf_r+0x962>
   1863c:	e0de      	b.n	187fc <_vfprintf_r+0xb20>
   1863e:	68bc      	ldr	r4, [r7, #8]
   18640:	ae32      	add	r6, sp, #200	; 0xc8
   18642:	e74e      	b.n	184e2 <_vfprintf_r+0x806>
   18644:	9b12      	ldr	r3, [sp, #72]	; 0x48
   18646:	2b65      	cmp	r3, #101	; 0x65
   18648:	ddab      	ble.n	185a2 <_vfprintf_r+0x8c6>
   1864a:	2200      	movs	r2, #0
   1864c:	2300      	movs	r3, #0
   1864e:	9816      	ldr	r0, [sp, #88]	; 0x58
   18650:	9915      	ldr	r1, [sp, #84]	; 0x54
   18652:	f7fe fe07 	bl	17264 <__aeabi_dcmpeq>
   18656:	2800      	cmp	r0, #0
   18658:	d100      	bne.n	1865c <_vfprintf_r+0x980>
   1865a:	e134      	b.n	188c6 <_vfprintf_r+0xbea>
   1865c:	4b85      	ldr	r3, [pc, #532]	; (18874 <_vfprintf_r+0xb98>)
   1865e:	3401      	adds	r4, #1
   18660:	6033      	str	r3, [r6, #0]
   18662:	2301      	movs	r3, #1
   18664:	6073      	str	r3, [r6, #4]
   18666:	687b      	ldr	r3, [r7, #4]
   18668:	60bc      	str	r4, [r7, #8]
   1866a:	3301      	adds	r3, #1
   1866c:	607b      	str	r3, [r7, #4]
   1866e:	2b07      	cmp	r3, #7
   18670:	dd00      	ble.n	18674 <_vfprintf_r+0x998>
   18672:	e3dc      	b.n	18e2e <_vfprintf_r+0x1152>
   18674:	3608      	adds	r6, #8
   18676:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   18678:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1867a:	4293      	cmp	r3, r2
   1867c:	db03      	blt.n	18686 <_vfprintf_r+0x9aa>
   1867e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   18680:	07db      	lsls	r3, r3, #31
   18682:	d400      	bmi.n	18686 <_vfprintf_r+0x9aa>
   18684:	e3b7      	b.n	18df6 <_vfprintf_r+0x111a>
   18686:	9b18      	ldr	r3, [sp, #96]	; 0x60
   18688:	68ba      	ldr	r2, [r7, #8]
   1868a:	6033      	str	r3, [r6, #0]
   1868c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1868e:	469c      	mov	ip, r3
   18690:	6073      	str	r3, [r6, #4]
   18692:	687b      	ldr	r3, [r7, #4]
   18694:	4462      	add	r2, ip
   18696:	3301      	adds	r3, #1
   18698:	0014      	movs	r4, r2
   1869a:	60ba      	str	r2, [r7, #8]
   1869c:	607b      	str	r3, [r7, #4]
   1869e:	2b07      	cmp	r3, #7
   186a0:	dd01      	ble.n	186a6 <_vfprintf_r+0x9ca>
   186a2:	f000 fc19 	bl	18ed8 <_vfprintf_r+0x11fc>
   186a6:	3608      	adds	r6, #8
   186a8:	9b14      	ldr	r3, [sp, #80]	; 0x50
   186aa:	1e5d      	subs	r5, r3, #1
   186ac:	2d00      	cmp	r5, #0
   186ae:	dc00      	bgt.n	186b2 <_vfprintf_r+0x9d6>
   186b0:	e717      	b.n	184e2 <_vfprintf_r+0x806>
   186b2:	4a71      	ldr	r2, [pc, #452]	; (18878 <_vfprintf_r+0xb9c>)
   186b4:	687b      	ldr	r3, [r7, #4]
   186b6:	4691      	mov	r9, r2
   186b8:	2d10      	cmp	r5, #16
   186ba:	dc00      	bgt.n	186be <_vfprintf_r+0x9e2>
   186bc:	e1c3      	b.n	18a46 <_vfprintf_r+0xd6a>
   186be:	2210      	movs	r2, #16
   186c0:	4690      	mov	r8, r2
   186c2:	0022      	movs	r2, r4
   186c4:	464c      	mov	r4, r9
   186c6:	46d9      	mov	r9, fp
   186c8:	e004      	b.n	186d4 <_vfprintf_r+0x9f8>
   186ca:	3608      	adds	r6, #8
   186cc:	3d10      	subs	r5, #16
   186ce:	2d10      	cmp	r5, #16
   186d0:	dc00      	bgt.n	186d4 <_vfprintf_r+0x9f8>
   186d2:	e37c      	b.n	18dce <_vfprintf_r+0x10f2>
   186d4:	4641      	mov	r1, r8
   186d6:	3210      	adds	r2, #16
   186d8:	3301      	adds	r3, #1
   186da:	6034      	str	r4, [r6, #0]
   186dc:	6071      	str	r1, [r6, #4]
   186de:	60ba      	str	r2, [r7, #8]
   186e0:	607b      	str	r3, [r7, #4]
   186e2:	2b07      	cmp	r3, #7
   186e4:	ddf1      	ble.n	186ca <_vfprintf_r+0x9ee>
   186e6:	003a      	movs	r2, r7
   186e8:	4649      	mov	r1, r9
   186ea:	9806      	ldr	r0, [sp, #24]
   186ec:	f003 fdbc 	bl	1c268 <__sprint_r>
   186f0:	2800      	cmp	r0, #0
   186f2:	d10b      	bne.n	1870c <_vfprintf_r+0xa30>
   186f4:	68ba      	ldr	r2, [r7, #8]
   186f6:	687b      	ldr	r3, [r7, #4]
   186f8:	ae32      	add	r6, sp, #200	; 0xc8
   186fa:	e7e7      	b.n	186cc <_vfprintf_r+0x9f0>
   186fc:	68bb      	ldr	r3, [r7, #8]
   186fe:	46d9      	mov	r9, fp
   18700:	2b00      	cmp	r3, #0
   18702:	d001      	beq.n	18708 <_vfprintf_r+0xa2c>
   18704:	f000 fd4c 	bl	191a0 <_vfprintf_r+0x14c4>
   18708:	2300      	movs	r3, #0
   1870a:	607b      	str	r3, [r7, #4]
   1870c:	464b      	mov	r3, r9
   1870e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
   18710:	07db      	lsls	r3, r3, #31
   18712:	d40d      	bmi.n	18730 <_vfprintf_r+0xa54>
   18714:	464b      	mov	r3, r9
   18716:	899b      	ldrh	r3, [r3, #12]
   18718:	059a      	lsls	r2, r3, #22
   1871a:	d505      	bpl.n	18728 <_vfprintf_r+0xa4c>
   1871c:	065b      	lsls	r3, r3, #25
   1871e:	d401      	bmi.n	18724 <_vfprintf_r+0xa48>
   18720:	f7ff fb8d 	bl	17e3e <_vfprintf_r+0x162>
   18724:	f7ff fb88 	bl	17e38 <_vfprintf_r+0x15c>
   18728:	464b      	mov	r3, r9
   1872a:	6d98      	ldr	r0, [r3, #88]	; 0x58
   1872c:	f002 fbcc 	bl	1aec8 <__retarget_lock_release_recursive>
   18730:	464b      	mov	r3, r9
   18732:	899b      	ldrh	r3, [r3, #12]
   18734:	e7f2      	b.n	1871c <_vfprintf_r+0xa40>
   18736:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   18738:	9a08      	ldr	r2, [sp, #32]
   1873a:	1a9d      	subs	r5, r3, r2
   1873c:	2d00      	cmp	r5, #0
   1873e:	dc00      	bgt.n	18742 <_vfprintf_r+0xa66>
   18740:	e685      	b.n	1844e <_vfprintf_r+0x772>
   18742:	4a4d      	ldr	r2, [pc, #308]	; (18878 <_vfprintf_r+0xb9c>)
   18744:	687b      	ldr	r3, [r7, #4]
   18746:	4691      	mov	r9, r2
   18748:	2d10      	cmp	r5, #16
   1874a:	dd24      	ble.n	18796 <_vfprintf_r+0xaba>
   1874c:	2210      	movs	r2, #16
   1874e:	0021      	movs	r1, r4
   18750:	4690      	mov	r8, r2
   18752:	465c      	mov	r4, fp
   18754:	0032      	movs	r2, r6
   18756:	464e      	mov	r6, r9
   18758:	e003      	b.n	18762 <_vfprintf_r+0xa86>
   1875a:	3d10      	subs	r5, #16
   1875c:	3208      	adds	r2, #8
   1875e:	2d10      	cmp	r5, #16
   18760:	dd15      	ble.n	1878e <_vfprintf_r+0xab2>
   18762:	4640      	mov	r0, r8
   18764:	3110      	adds	r1, #16
   18766:	3301      	adds	r3, #1
   18768:	6016      	str	r6, [r2, #0]
   1876a:	6050      	str	r0, [r2, #4]
   1876c:	60b9      	str	r1, [r7, #8]
   1876e:	607b      	str	r3, [r7, #4]
   18770:	2b07      	cmp	r3, #7
   18772:	ddf2      	ble.n	1875a <_vfprintf_r+0xa7e>
   18774:	003a      	movs	r2, r7
   18776:	0021      	movs	r1, r4
   18778:	9806      	ldr	r0, [sp, #24]
   1877a:	f003 fd75 	bl	1c268 <__sprint_r>
   1877e:	2800      	cmp	r0, #0
   18780:	d115      	bne.n	187ae <_vfprintf_r+0xad2>
   18782:	3d10      	subs	r5, #16
   18784:	68b9      	ldr	r1, [r7, #8]
   18786:	687b      	ldr	r3, [r7, #4]
   18788:	aa32      	add	r2, sp, #200	; 0xc8
   1878a:	2d10      	cmp	r5, #16
   1878c:	dce9      	bgt.n	18762 <_vfprintf_r+0xa86>
   1878e:	46a3      	mov	fp, r4
   18790:	46b1      	mov	r9, r6
   18792:	000c      	movs	r4, r1
   18794:	0016      	movs	r6, r2
   18796:	464a      	mov	r2, r9
   18798:	1964      	adds	r4, r4, r5
   1879a:	3301      	adds	r3, #1
   1879c:	6032      	str	r2, [r6, #0]
   1879e:	6075      	str	r5, [r6, #4]
   187a0:	60bc      	str	r4, [r7, #8]
   187a2:	607b      	str	r3, [r7, #4]
   187a4:	2b07      	cmp	r3, #7
   187a6:	dd00      	ble.n	187aa <_vfprintf_r+0xace>
   187a8:	e263      	b.n	18c72 <_vfprintf_r+0xf96>
   187aa:	3608      	adds	r6, #8
   187ac:	e64f      	b.n	1844e <_vfprintf_r+0x772>
   187ae:	46a1      	mov	r9, r4
   187b0:	e7ac      	b.n	1870c <_vfprintf_r+0xa30>
   187b2:	2301      	movs	r3, #1
   187b4:	9a09      	ldr	r2, [sp, #36]	; 0x24
   187b6:	4213      	tst	r3, r2
   187b8:	d000      	beq.n	187bc <_vfprintf_r+0xae0>
   187ba:	e6f6      	b.n	185aa <_vfprintf_r+0x8ce>
   187bc:	6073      	str	r3, [r6, #4]
   187be:	687b      	ldr	r3, [r7, #4]
   187c0:	9a11      	ldr	r2, [sp, #68]	; 0x44
   187c2:	3301      	adds	r3, #1
   187c4:	3401      	adds	r4, #1
   187c6:	6032      	str	r2, [r6, #0]
   187c8:	60bc      	str	r4, [r7, #8]
   187ca:	4698      	mov	r8, r3
   187cc:	607b      	str	r3, [r7, #4]
   187ce:	2b07      	cmp	r3, #7
   187d0:	dc00      	bgt.n	187d4 <_vfprintf_r+0xaf8>
   187d2:	e71e      	b.n	18612 <_vfprintf_r+0x936>
   187d4:	003a      	movs	r2, r7
   187d6:	4659      	mov	r1, fp
   187d8:	9806      	ldr	r0, [sp, #24]
   187da:	f003 fd45 	bl	1c268 <__sprint_r>
   187de:	2800      	cmp	r0, #0
   187e0:	d10c      	bne.n	187fc <_vfprintf_r+0xb20>
   187e2:	687b      	ldr	r3, [r7, #4]
   187e4:	68bc      	ldr	r4, [r7, #8]
   187e6:	4698      	mov	r8, r3
   187e8:	ae32      	add	r6, sp, #200	; 0xc8
   187ea:	e713      	b.n	18614 <_vfprintf_r+0x938>
   187ec:	003a      	movs	r2, r7
   187ee:	4659      	mov	r1, fp
   187f0:	9806      	ldr	r0, [sp, #24]
   187f2:	f003 fd39 	bl	1c268 <__sprint_r>
   187f6:	2800      	cmp	r0, #0
   187f8:	d100      	bne.n	187fc <_vfprintf_r+0xb20>
   187fa:	e6cd      	b.n	18598 <_vfprintf_r+0x8bc>
   187fc:	46d9      	mov	r9, fp
   187fe:	e785      	b.n	1870c <_vfprintf_r+0xa30>
   18800:	9c09      	ldr	r4, [sp, #36]	; 0x24
   18802:	2b01      	cmp	r3, #1
   18804:	d100      	bne.n	18808 <_vfprintf_r+0xb2c>
   18806:	e148      	b.n	18a9a <_vfprintf_r+0xdbe>
   18808:	2b02      	cmp	r3, #2
   1880a:	d123      	bne.n	18854 <_vfprintf_r+0xb78>
   1880c:	9409      	str	r4, [sp, #36]	; 0x24
   1880e:	2300      	movs	r3, #0
   18810:	2400      	movs	r4, #0
   18812:	930c      	str	r3, [sp, #48]	; 0x30
   18814:	940d      	str	r4, [sp, #52]	; 0x34
   18816:	e4a1      	b.n	1815c <_vfprintf_r+0x480>
   18818:	003a      	movs	r2, r7
   1881a:	4659      	mov	r1, fp
   1881c:	9806      	ldr	r0, [sp, #24]
   1881e:	f003 fd23 	bl	1c268 <__sprint_r>
   18822:	2800      	cmp	r0, #0
   18824:	d1ea      	bne.n	187fc <_vfprintf_r+0xb20>
   18826:	68bc      	ldr	r4, [r7, #8]
   18828:	ae32      	add	r6, sp, #200	; 0xc8
   1882a:	e648      	b.n	184be <_vfprintf_r+0x7e2>
   1882c:	003a      	movs	r2, r7
   1882e:	4659      	mov	r1, fp
   18830:	9806      	ldr	r0, [sp, #24]
   18832:	f003 fd19 	bl	1c268 <__sprint_r>
   18836:	2800      	cmp	r0, #0
   18838:	d1e0      	bne.n	187fc <_vfprintf_r+0xb20>
   1883a:	68bc      	ldr	r4, [r7, #8]
   1883c:	ae32      	add	r6, sp, #200	; 0xc8
   1883e:	e5f2      	b.n	18426 <_vfprintf_r+0x74a>
   18840:	003a      	movs	r2, r7
   18842:	4659      	mov	r1, fp
   18844:	9806      	ldr	r0, [sp, #24]
   18846:	f003 fd0f 	bl	1c268 <__sprint_r>
   1884a:	2800      	cmp	r0, #0
   1884c:	d1d6      	bne.n	187fc <_vfprintf_r+0xb20>
   1884e:	68bc      	ldr	r4, [r7, #8]
   18850:	ae32      	add	r6, sp, #200	; 0xc8
   18852:	e5f8      	b.n	18446 <_vfprintf_r+0x76a>
   18854:	9409      	str	r4, [sp, #36]	; 0x24
   18856:	2300      	movs	r3, #0
   18858:	2400      	movs	r4, #0
   1885a:	930c      	str	r3, [sp, #48]	; 0x30
   1885c:	940d      	str	r4, [sp, #52]	; 0x34
   1885e:	980c      	ldr	r0, [sp, #48]	; 0x30
   18860:	990d      	ldr	r1, [sp, #52]	; 0x34
   18862:	4653      	mov	r3, sl
   18864:	aa32      	add	r2, sp, #200	; 0xc8
   18866:	4691      	mov	r9, r2
   18868:	9308      	str	r3, [sp, #32]
   1886a:	46b2      	mov	sl, r6
   1886c:	e007      	b.n	1887e <_vfprintf_r+0xba2>
   1886e:	46c0      	nop			; (mov r8, r8)
   18870:	0001e338 	.word	0x0001e338
   18874:	0001e334 	.word	0x0001e334
   18878:	0001e348 	.word	0x0001e348
   1887c:	46a1      	mov	r9, r4
   1887e:	074a      	lsls	r2, r1, #29
   18880:	4694      	mov	ip, r2
   18882:	464b      	mov	r3, r9
   18884:	4665      	mov	r5, ip
   18886:	1e5c      	subs	r4, r3, #1
   18888:	08c6      	lsrs	r6, r0, #3
   1888a:	2307      	movs	r3, #7
   1888c:	08ca      	lsrs	r2, r1, #3
   1888e:	4335      	orrs	r5, r6
   18890:	0011      	movs	r1, r2
   18892:	002a      	movs	r2, r5
   18894:	4003      	ands	r3, r0
   18896:	3330      	adds	r3, #48	; 0x30
   18898:	7023      	strb	r3, [r4, #0]
   1889a:	0028      	movs	r0, r5
   1889c:	430a      	orrs	r2, r1
   1889e:	d1ed      	bne.n	1887c <_vfprintf_r+0xba0>
   188a0:	900c      	str	r0, [sp, #48]	; 0x30
   188a2:	910d      	str	r1, [sp, #52]	; 0x34
   188a4:	9908      	ldr	r1, [sp, #32]
   188a6:	4656      	mov	r6, sl
   188a8:	468a      	mov	sl, r1
   188aa:	9909      	ldr	r1, [sp, #36]	; 0x24
   188ac:	464a      	mov	r2, r9
   188ae:	9411      	str	r4, [sp, #68]	; 0x44
   188b0:	07c9      	lsls	r1, r1, #31
   188b2:	d500      	bpl.n	188b6 <_vfprintf_r+0xbda>
   188b4:	e0e0      	b.n	18a78 <_vfprintf_r+0xd9c>
   188b6:	ab32      	add	r3, sp, #200	; 0xc8
   188b8:	1b1b      	subs	r3, r3, r4
   188ba:	930e      	str	r3, [sp, #56]	; 0x38
   188bc:	f7ff fb7b 	bl	17fb6 <_vfprintf_r+0x2da>
   188c0:	9c07      	ldr	r4, [sp, #28]
   188c2:	f7ff fa7d 	bl	17dc0 <_vfprintf_r+0xe4>
   188c6:	981f      	ldr	r0, [sp, #124]	; 0x7c
   188c8:	2800      	cmp	r0, #0
   188ca:	dc00      	bgt.n	188ce <_vfprintf_r+0xbf2>
   188cc:	e2b9      	b.n	18e42 <_vfprintf_r+0x1166>
   188ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   188d0:	9914      	ldr	r1, [sp, #80]	; 0x50
   188d2:	0013      	movs	r3, r2
   188d4:	4690      	mov	r8, r2
   188d6:	428b      	cmp	r3, r1
   188d8:	dd00      	ble.n	188dc <_vfprintf_r+0xc00>
   188da:	4688      	mov	r8, r1
   188dc:	4643      	mov	r3, r8
   188de:	2b00      	cmp	r3, #0
   188e0:	dd0c      	ble.n	188fc <_vfprintf_r+0xc20>
   188e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
   188e4:	4444      	add	r4, r8
   188e6:	6033      	str	r3, [r6, #0]
   188e8:	4643      	mov	r3, r8
   188ea:	6073      	str	r3, [r6, #4]
   188ec:	687b      	ldr	r3, [r7, #4]
   188ee:	60bc      	str	r4, [r7, #8]
   188f0:	3301      	adds	r3, #1
   188f2:	607b      	str	r3, [r7, #4]
   188f4:	2b07      	cmp	r3, #7
   188f6:	dd00      	ble.n	188fa <_vfprintf_r+0xc1e>
   188f8:	e389      	b.n	1900e <_vfprintf_r+0x1332>
   188fa:	3608      	adds	r6, #8
   188fc:	4643      	mov	r3, r8
   188fe:	43db      	mvns	r3, r3
   18900:	4642      	mov	r2, r8
   18902:	17db      	asrs	r3, r3, #31
   18904:	4013      	ands	r3, r2
   18906:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   18908:	1ad3      	subs	r3, r2, r3
   1890a:	4698      	mov	r8, r3
   1890c:	2b00      	cmp	r3, #0
   1890e:	dc00      	bgt.n	18912 <_vfprintf_r+0xc36>
   18910:	e0eb      	b.n	18aea <_vfprintf_r+0xe0e>
   18912:	2b10      	cmp	r3, #16
   18914:	dc01      	bgt.n	1891a <_vfprintf_r+0xc3e>
   18916:	f000 fcd9 	bl	192cc <_vfprintf_r+0x15f0>
   1891a:	4adc      	ldr	r2, [pc, #880]	; (18c8c <_vfprintf_r+0xfb0>)
   1891c:	687b      	ldr	r3, [r7, #4]
   1891e:	4691      	mov	r9, r2
   18920:	2210      	movs	r2, #16
   18922:	464d      	mov	r5, r9
   18924:	4692      	mov	sl, r2
   18926:	0022      	movs	r2, r4
   18928:	4644      	mov	r4, r8
   1892a:	46d8      	mov	r8, fp
   1892c:	e004      	b.n	18938 <_vfprintf_r+0xc5c>
   1892e:	3608      	adds	r6, #8
   18930:	3c10      	subs	r4, #16
   18932:	2c10      	cmp	r4, #16
   18934:	dc00      	bgt.n	18938 <_vfprintf_r+0xc5c>
   18936:	e0bf      	b.n	18ab8 <_vfprintf_r+0xddc>
   18938:	4651      	mov	r1, sl
   1893a:	3210      	adds	r2, #16
   1893c:	3301      	adds	r3, #1
   1893e:	6035      	str	r5, [r6, #0]
   18940:	6071      	str	r1, [r6, #4]
   18942:	60ba      	str	r2, [r7, #8]
   18944:	607b      	str	r3, [r7, #4]
   18946:	2b07      	cmp	r3, #7
   18948:	ddf1      	ble.n	1892e <_vfprintf_r+0xc52>
   1894a:	003a      	movs	r2, r7
   1894c:	4641      	mov	r1, r8
   1894e:	9806      	ldr	r0, [sp, #24]
   18950:	f003 fc8a 	bl	1c268 <__sprint_r>
   18954:	2800      	cmp	r0, #0
   18956:	d000      	beq.n	1895a <_vfprintf_r+0xc7e>
   18958:	e3b6      	b.n	190c8 <_vfprintf_r+0x13ec>
   1895a:	68ba      	ldr	r2, [r7, #8]
   1895c:	687b      	ldr	r3, [r7, #4]
   1895e:	ae32      	add	r6, sp, #200	; 0xc8
   18960:	e7e6      	b.n	18930 <_vfprintf_r+0xc54>
   18962:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   18964:	2b00      	cmp	r3, #0
   18966:	d100      	bne.n	1896a <_vfprintf_r+0xc8e>
   18968:	e092      	b.n	18a90 <_vfprintf_r+0xdb4>
   1896a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   1896c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   1896e:	ab32      	add	r3, sp, #200	; 0xc8
   18970:	46b1      	mov	r9, r6
   18972:	001e      	movs	r6, r3
   18974:	0020      	movs	r0, r4
   18976:	0029      	movs	r1, r5
   18978:	220a      	movs	r2, #10
   1897a:	2300      	movs	r3, #0
   1897c:	f003 ff0e 	bl	1c79c <__aeabi_uldivmod>
   18980:	3e01      	subs	r6, #1
   18982:	3230      	adds	r2, #48	; 0x30
   18984:	7032      	strb	r2, [r6, #0]
   18986:	2300      	movs	r3, #0
   18988:	0020      	movs	r0, r4
   1898a:	0029      	movs	r1, r5
   1898c:	220a      	movs	r2, #10
   1898e:	f003 ff05 	bl	1c79c <__aeabi_uldivmod>
   18992:	0003      	movs	r3, r0
   18994:	0004      	movs	r4, r0
   18996:	000d      	movs	r5, r1
   18998:	430b      	orrs	r3, r1
   1899a:	d1eb      	bne.n	18974 <_vfprintf_r+0xc98>
   1899c:	0032      	movs	r2, r6
   1899e:	ab32      	add	r3, sp, #200	; 0xc8
   189a0:	1a9b      	subs	r3, r3, r2
   189a2:	9611      	str	r6, [sp, #68]	; 0x44
   189a4:	940c      	str	r4, [sp, #48]	; 0x30
   189a6:	950d      	str	r5, [sp, #52]	; 0x34
   189a8:	464e      	mov	r6, r9
   189aa:	930e      	str	r3, [sp, #56]	; 0x38
   189ac:	f7ff fb03 	bl	17fb6 <_vfprintf_r+0x2da>
   189b0:	2300      	movs	r3, #0
   189b2:	930e      	str	r3, [sp, #56]	; 0x38
   189b4:	ab32      	add	r3, sp, #200	; 0xc8
   189b6:	9311      	str	r3, [sp, #68]	; 0x44
   189b8:	f7ff fafd 	bl	17fb6 <_vfprintf_r+0x2da>
   189bc:	003a      	movs	r2, r7
   189be:	4659      	mov	r1, fp
   189c0:	9806      	ldr	r0, [sp, #24]
   189c2:	f003 fc51 	bl	1c268 <__sprint_r>
   189c6:	2800      	cmp	r0, #0
   189c8:	d000      	beq.n	189cc <_vfprintf_r+0xcf0>
   189ca:	e717      	b.n	187fc <_vfprintf_r+0xb20>
   189cc:	ab16      	add	r3, sp, #88	; 0x58
   189ce:	7fdb      	ldrb	r3, [r3, #31]
   189d0:	68bc      	ldr	r4, [r7, #8]
   189d2:	4698      	mov	r8, r3
   189d4:	ae32      	add	r6, sp, #200	; 0xc8
   189d6:	e513      	b.n	18400 <_vfprintf_r+0x724>
   189d8:	46b1      	mov	r9, r6
   189da:	e697      	b.n	1870c <_vfprintf_r+0xa30>
   189dc:	9b14      	ldr	r3, [sp, #80]	; 0x50
   189de:	1e5d      	subs	r5, r3, #1
   189e0:	2d00      	cmp	r5, #0
   189e2:	dc00      	bgt.n	189e6 <_vfprintf_r+0xd0a>
   189e4:	e616      	b.n	18614 <_vfprintf_r+0x938>
   189e6:	4ba9      	ldr	r3, [pc, #676]	; (18c8c <_vfprintf_r+0xfb0>)
   189e8:	4699      	mov	r9, r3
   189ea:	2d10      	cmp	r5, #16
   189ec:	dc00      	bgt.n	189f0 <_vfprintf_r+0xd14>
   189ee:	e10a      	b.n	18c06 <_vfprintf_r+0xf2a>
   189f0:	2310      	movs	r3, #16
   189f2:	0022      	movs	r2, r4
   189f4:	469a      	mov	sl, r3
   189f6:	465c      	mov	r4, fp
   189f8:	4643      	mov	r3, r8
   189fa:	e004      	b.n	18a06 <_vfprintf_r+0xd2a>
   189fc:	3608      	adds	r6, #8
   189fe:	3d10      	subs	r5, #16
   18a00:	2d10      	cmp	r5, #16
   18a02:	dc00      	bgt.n	18a06 <_vfprintf_r+0xd2a>
   18a04:	e0fc      	b.n	18c00 <_vfprintf_r+0xf24>
   18a06:	4649      	mov	r1, r9
   18a08:	6031      	str	r1, [r6, #0]
   18a0a:	4651      	mov	r1, sl
   18a0c:	3210      	adds	r2, #16
   18a0e:	3301      	adds	r3, #1
   18a10:	6071      	str	r1, [r6, #4]
   18a12:	60ba      	str	r2, [r7, #8]
   18a14:	607b      	str	r3, [r7, #4]
   18a16:	2b07      	cmp	r3, #7
   18a18:	ddf0      	ble.n	189fc <_vfprintf_r+0xd20>
   18a1a:	003a      	movs	r2, r7
   18a1c:	0021      	movs	r1, r4
   18a1e:	9806      	ldr	r0, [sp, #24]
   18a20:	f003 fc22 	bl	1c268 <__sprint_r>
   18a24:	2800      	cmp	r0, #0
   18a26:	d000      	beq.n	18a2a <_vfprintf_r+0xd4e>
   18a28:	e6c1      	b.n	187ae <_vfprintf_r+0xad2>
   18a2a:	68ba      	ldr	r2, [r7, #8]
   18a2c:	687b      	ldr	r3, [r7, #4]
   18a2e:	ae32      	add	r6, sp, #200	; 0xc8
   18a30:	e7e5      	b.n	189fe <_vfprintf_r+0xd22>
   18a32:	990c      	ldr	r1, [sp, #48]	; 0x30
   18a34:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   18a36:	0008      	movs	r0, r1
   18a38:	4310      	orrs	r0, r2
   18a3a:	2302      	movs	r3, #2
   18a3c:	0002      	movs	r2, r0
   18a3e:	f7ff fa93 	bl	17f68 <_vfprintf_r+0x28c>
   18a42:	46a3      	mov	fp, r4
   18a44:	0014      	movs	r4, r2
   18a46:	464a      	mov	r2, r9
   18a48:	1964      	adds	r4, r4, r5
   18a4a:	3301      	adds	r3, #1
   18a4c:	6032      	str	r2, [r6, #0]
   18a4e:	6075      	str	r5, [r6, #4]
   18a50:	60bc      	str	r4, [r7, #8]
   18a52:	607b      	str	r3, [r7, #4]
   18a54:	2b07      	cmp	r3, #7
   18a56:	dc00      	bgt.n	18a5a <_vfprintf_r+0xd7e>
   18a58:	e542      	b.n	184e0 <_vfprintf_r+0x804>
   18a5a:	e5e8      	b.n	1862e <_vfprintf_r+0x952>
   18a5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   18a5e:	681a      	ldr	r2, [r3, #0]
   18a60:	f7ff fa68 	bl	17f34 <_vfprintf_r+0x258>
   18a64:	6813      	ldr	r3, [r2, #0]
   18a66:	9308      	str	r3, [sp, #32]
   18a68:	f7ff fb57 	bl	1811a <_vfprintf_r+0x43e>
   18a6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   18a6e:	681a      	ldr	r2, [r3, #0]
   18a70:	e412      	b.n	18298 <_vfprintf_r+0x5bc>
   18a72:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   18a74:	681a      	ldr	r2, [r3, #0]
   18a76:	e426      	b.n	182c6 <_vfprintf_r+0x5ea>
   18a78:	2b30      	cmp	r3, #48	; 0x30
   18a7a:	d100      	bne.n	18a7e <_vfprintf_r+0xda2>
   18a7c:	e23c      	b.n	18ef8 <_vfprintf_r+0x121c>
   18a7e:	2330      	movs	r3, #48	; 0x30
   18a80:	3a02      	subs	r2, #2
   18a82:	7013      	strb	r3, [r2, #0]
   18a84:	ab32      	add	r3, sp, #200	; 0xc8
   18a86:	1a9b      	subs	r3, r3, r2
   18a88:	930e      	str	r3, [sp, #56]	; 0x38
   18a8a:	9211      	str	r2, [sp, #68]	; 0x44
   18a8c:	f7ff fa93 	bl	17fb6 <_vfprintf_r+0x2da>
   18a90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   18a92:	2b09      	cmp	r3, #9
   18a94:	d900      	bls.n	18a98 <_vfprintf_r+0xdbc>
   18a96:	e768      	b.n	1896a <_vfprintf_r+0xc8e>
   18a98:	9c09      	ldr	r4, [sp, #36]	; 0x24
   18a9a:	2227      	movs	r2, #39	; 0x27
   18a9c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   18a9e:	a928      	add	r1, sp, #160	; 0xa0
   18aa0:	3330      	adds	r3, #48	; 0x30
   18aa2:	548b      	strb	r3, [r1, r2]
   18aa4:	2301      	movs	r3, #1
   18aa6:	aa16      	add	r2, sp, #88	; 0x58
   18aa8:	4694      	mov	ip, r2
   18aaa:	930e      	str	r3, [sp, #56]	; 0x38
   18aac:	336e      	adds	r3, #110	; 0x6e
   18aae:	4463      	add	r3, ip
   18ab0:	9409      	str	r4, [sp, #36]	; 0x24
   18ab2:	9311      	str	r3, [sp, #68]	; 0x44
   18ab4:	f7ff fa7f 	bl	17fb6 <_vfprintf_r+0x2da>
   18ab8:	46c3      	mov	fp, r8
   18aba:	46a9      	mov	r9, r5
   18abc:	46a0      	mov	r8, r4
   18abe:	0014      	movs	r4, r2
   18ac0:	464a      	mov	r2, r9
   18ac2:	6032      	str	r2, [r6, #0]
   18ac4:	4642      	mov	r2, r8
   18ac6:	4444      	add	r4, r8
   18ac8:	3301      	adds	r3, #1
   18aca:	6072      	str	r2, [r6, #4]
   18acc:	60bc      	str	r4, [r7, #8]
   18ace:	607b      	str	r3, [r7, #4]
   18ad0:	2b07      	cmp	r3, #7
   18ad2:	dc00      	bgt.n	18ad6 <_vfprintf_r+0xdfa>
   18ad4:	e18d      	b.n	18df2 <_vfprintf_r+0x1116>
   18ad6:	003a      	movs	r2, r7
   18ad8:	4659      	mov	r1, fp
   18ada:	9806      	ldr	r0, [sp, #24]
   18adc:	f003 fbc4 	bl	1c268 <__sprint_r>
   18ae0:	2800      	cmp	r0, #0
   18ae2:	d000      	beq.n	18ae6 <_vfprintf_r+0xe0a>
   18ae4:	e68a      	b.n	187fc <_vfprintf_r+0xb20>
   18ae6:	68bc      	ldr	r4, [r7, #8]
   18ae8:	ae32      	add	r6, sp, #200	; 0xc8
   18aea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   18aec:	9a14      	ldr	r2, [sp, #80]	; 0x50
   18aee:	4293      	cmp	r3, r2
   18af0:	db00      	blt.n	18af4 <_vfprintf_r+0xe18>
   18af2:	e179      	b.n	18de8 <_vfprintf_r+0x110c>
   18af4:	9a18      	ldr	r2, [sp, #96]	; 0x60
   18af6:	6032      	str	r2, [r6, #0]
   18af8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   18afa:	4694      	mov	ip, r2
   18afc:	6072      	str	r2, [r6, #4]
   18afe:	687a      	ldr	r2, [r7, #4]
   18b00:	4464      	add	r4, ip
   18b02:	3201      	adds	r2, #1
   18b04:	60bc      	str	r4, [r7, #8]
   18b06:	607a      	str	r2, [r7, #4]
   18b08:	2a07      	cmp	r2, #7
   18b0a:	dd00      	ble.n	18b0e <_vfprintf_r+0xe32>
   18b0c:	e176      	b.n	18dfc <_vfprintf_r+0x1120>
   18b0e:	3608      	adds	r6, #8
   18b10:	9a14      	ldr	r2, [sp, #80]	; 0x50
   18b12:	9913      	ldr	r1, [sp, #76]	; 0x4c
   18b14:	1ad3      	subs	r3, r2, r3
   18b16:	1a52      	subs	r2, r2, r1
   18b18:	4690      	mov	r8, r2
   18b1a:	429a      	cmp	r2, r3
   18b1c:	dd00      	ble.n	18b20 <_vfprintf_r+0xe44>
   18b1e:	4698      	mov	r8, r3
   18b20:	4642      	mov	r2, r8
   18b22:	2a00      	cmp	r2, #0
   18b24:	dd0f      	ble.n	18b46 <_vfprintf_r+0xe6a>
   18b26:	9913      	ldr	r1, [sp, #76]	; 0x4c
   18b28:	9a11      	ldr	r2, [sp, #68]	; 0x44
   18b2a:	468c      	mov	ip, r1
   18b2c:	4462      	add	r2, ip
   18b2e:	6032      	str	r2, [r6, #0]
   18b30:	4642      	mov	r2, r8
   18b32:	6072      	str	r2, [r6, #4]
   18b34:	687a      	ldr	r2, [r7, #4]
   18b36:	4444      	add	r4, r8
   18b38:	3201      	adds	r2, #1
   18b3a:	60bc      	str	r4, [r7, #8]
   18b3c:	607a      	str	r2, [r7, #4]
   18b3e:	2a07      	cmp	r2, #7
   18b40:	dd00      	ble.n	18b44 <_vfprintf_r+0xe68>
   18b42:	e289      	b.n	19058 <_vfprintf_r+0x137c>
   18b44:	3608      	adds	r6, #8
   18b46:	4642      	mov	r2, r8
   18b48:	43d5      	mvns	r5, r2
   18b4a:	17ed      	asrs	r5, r5, #31
   18b4c:	4015      	ands	r5, r2
   18b4e:	1b5d      	subs	r5, r3, r5
   18b50:	2d00      	cmp	r5, #0
   18b52:	dc00      	bgt.n	18b56 <_vfprintf_r+0xe7a>
   18b54:	e4c5      	b.n	184e2 <_vfprintf_r+0x806>
   18b56:	4a4d      	ldr	r2, [pc, #308]	; (18c8c <_vfprintf_r+0xfb0>)
   18b58:	687b      	ldr	r3, [r7, #4]
   18b5a:	4691      	mov	r9, r2
   18b5c:	2d10      	cmp	r5, #16
   18b5e:	dc00      	bgt.n	18b62 <_vfprintf_r+0xe86>
   18b60:	e771      	b.n	18a46 <_vfprintf_r+0xd6a>
   18b62:	2210      	movs	r2, #16
   18b64:	4690      	mov	r8, r2
   18b66:	0022      	movs	r2, r4
   18b68:	465c      	mov	r4, fp
   18b6a:	e004      	b.n	18b76 <_vfprintf_r+0xe9a>
   18b6c:	3608      	adds	r6, #8
   18b6e:	3d10      	subs	r5, #16
   18b70:	2d10      	cmp	r5, #16
   18b72:	dc00      	bgt.n	18b76 <_vfprintf_r+0xe9a>
   18b74:	e765      	b.n	18a42 <_vfprintf_r+0xd66>
   18b76:	4649      	mov	r1, r9
   18b78:	6031      	str	r1, [r6, #0]
   18b7a:	4641      	mov	r1, r8
   18b7c:	3210      	adds	r2, #16
   18b7e:	3301      	adds	r3, #1
   18b80:	6071      	str	r1, [r6, #4]
   18b82:	60ba      	str	r2, [r7, #8]
   18b84:	607b      	str	r3, [r7, #4]
   18b86:	2b07      	cmp	r3, #7
   18b88:	ddf0      	ble.n	18b6c <_vfprintf_r+0xe90>
   18b8a:	003a      	movs	r2, r7
   18b8c:	0021      	movs	r1, r4
   18b8e:	9806      	ldr	r0, [sp, #24]
   18b90:	f003 fb6a 	bl	1c268 <__sprint_r>
   18b94:	2800      	cmp	r0, #0
   18b96:	d000      	beq.n	18b9a <_vfprintf_r+0xebe>
   18b98:	e609      	b.n	187ae <_vfprintf_r+0xad2>
   18b9a:	68ba      	ldr	r2, [r7, #8]
   18b9c:	687b      	ldr	r3, [r7, #4]
   18b9e:	ae32      	add	r6, sp, #200	; 0xc8
   18ba0:	e7e5      	b.n	18b6e <_vfprintf_r+0xe92>
   18ba2:	003a      	movs	r2, r7
   18ba4:	4659      	mov	r1, fp
   18ba6:	9806      	ldr	r0, [sp, #24]
   18ba8:	f003 fb5e 	bl	1c268 <__sprint_r>
   18bac:	2800      	cmp	r0, #0
   18bae:	d000      	beq.n	18bb2 <_vfprintf_r+0xed6>
   18bb0:	e624      	b.n	187fc <_vfprintf_r+0xb20>
   18bb2:	68bc      	ldr	r4, [r7, #8]
   18bb4:	687b      	ldr	r3, [r7, #4]
   18bb6:	ae32      	add	r6, sp, #200	; 0xc8
   18bb8:	e504      	b.n	185c4 <_vfprintf_r+0x8e8>
   18bba:	2307      	movs	r3, #7
   18bbc:	3207      	adds	r2, #7
   18bbe:	439a      	bics	r2, r3
   18bc0:	3301      	adds	r3, #1
   18bc2:	469c      	mov	ip, r3
   18bc4:	4494      	add	ip, r2
   18bc6:	4663      	mov	r3, ip
   18bc8:	930f      	str	r3, [sp, #60]	; 0x3c
   18bca:	6853      	ldr	r3, [r2, #4]
   18bcc:	6812      	ldr	r2, [r2, #0]
   18bce:	930d      	str	r3, [sp, #52]	; 0x34
   18bd0:	920c      	str	r2, [sp, #48]	; 0x30
   18bd2:	f7ff faa7 	bl	18124 <_vfprintf_r+0x448>
   18bd6:	2207      	movs	r2, #7
   18bd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   18bda:	3307      	adds	r3, #7
   18bdc:	4393      	bics	r3, r2
   18bde:	3201      	adds	r2, #1
   18be0:	4694      	mov	ip, r2
   18be2:	449c      	add	ip, r3
   18be4:	4662      	mov	r2, ip
   18be6:	920f      	str	r2, [sp, #60]	; 0x3c
   18be8:	681a      	ldr	r2, [r3, #0]
   18bea:	685b      	ldr	r3, [r3, #4]
   18bec:	0011      	movs	r1, r2
   18bee:	001a      	movs	r2, r3
   18bf0:	0008      	movs	r0, r1
   18bf2:	4310      	orrs	r0, r2
   18bf4:	910c      	str	r1, [sp, #48]	; 0x30
   18bf6:	920d      	str	r2, [sp, #52]	; 0x34
   18bf8:	2300      	movs	r3, #0
   18bfa:	0002      	movs	r2, r0
   18bfc:	f7ff f9b4 	bl	17f68 <_vfprintf_r+0x28c>
   18c00:	46a3      	mov	fp, r4
   18c02:	4698      	mov	r8, r3
   18c04:	0014      	movs	r4, r2
   18c06:	464b      	mov	r3, r9
   18c08:	6075      	str	r5, [r6, #4]
   18c0a:	6033      	str	r3, [r6, #0]
   18c0c:	1964      	adds	r4, r4, r5
   18c0e:	e4f7      	b.n	18600 <_vfprintf_r+0x924>
   18c10:	003a      	movs	r2, r7
   18c12:	4659      	mov	r1, fp
   18c14:	9806      	ldr	r0, [sp, #24]
   18c16:	f003 fb27 	bl	1c268 <__sprint_r>
   18c1a:	2800      	cmp	r0, #0
   18c1c:	d000      	beq.n	18c20 <_vfprintf_r+0xf44>
   18c1e:	e5ed      	b.n	187fc <_vfprintf_r+0xb20>
   18c20:	687b      	ldr	r3, [r7, #4]
   18c22:	68bc      	ldr	r4, [r7, #8]
   18c24:	4698      	mov	r8, r3
   18c26:	ae32      	add	r6, sp, #200	; 0xc8
   18c28:	e4da      	b.n	185e0 <_vfprintf_r+0x904>
   18c2a:	2207      	movs	r2, #7
   18c2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   18c2e:	3307      	adds	r3, #7
   18c30:	4393      	bics	r3, r2
   18c32:	3201      	adds	r2, #1
   18c34:	4694      	mov	ip, r2
   18c36:	449c      	add	ip, r3
   18c38:	4662      	mov	r2, ip
   18c3a:	920f      	str	r2, [sp, #60]	; 0x3c
   18c3c:	681a      	ldr	r2, [r3, #0]
   18c3e:	685b      	ldr	r3, [r3, #4]
   18c40:	0011      	movs	r1, r2
   18c42:	001a      	movs	r2, r3
   18c44:	0008      	movs	r0, r1
   18c46:	4310      	orrs	r0, r2
   18c48:	910c      	str	r1, [sp, #48]	; 0x30
   18c4a:	920d      	str	r2, [sp, #52]	; 0x34
   18c4c:	2301      	movs	r3, #1
   18c4e:	0002      	movs	r2, r0
   18c50:	f7ff f98a 	bl	17f68 <_vfprintf_r+0x28c>
   18c54:	2207      	movs	r2, #7
   18c56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   18c58:	3307      	adds	r3, #7
   18c5a:	4393      	bics	r3, r2
   18c5c:	3201      	adds	r2, #1
   18c5e:	4694      	mov	ip, r2
   18c60:	449c      	add	ip, r3
   18c62:	4662      	mov	r2, ip
   18c64:	920f      	str	r2, [sp, #60]	; 0x3c
   18c66:	681a      	ldr	r2, [r3, #0]
   18c68:	685b      	ldr	r3, [r3, #4]
   18c6a:	920c      	str	r2, [sp, #48]	; 0x30
   18c6c:	930d      	str	r3, [sp, #52]	; 0x34
   18c6e:	f7ff f966 	bl	17f3e <_vfprintf_r+0x262>
   18c72:	003a      	movs	r2, r7
   18c74:	4659      	mov	r1, fp
   18c76:	9806      	ldr	r0, [sp, #24]
   18c78:	f003 faf6 	bl	1c268 <__sprint_r>
   18c7c:	2800      	cmp	r0, #0
   18c7e:	d000      	beq.n	18c82 <_vfprintf_r+0xfa6>
   18c80:	e5bc      	b.n	187fc <_vfprintf_r+0xb20>
   18c82:	68bc      	ldr	r4, [r7, #8]
   18c84:	ae32      	add	r6, sp, #200	; 0xc8
   18c86:	f7ff fbe2 	bl	1844e <_vfprintf_r+0x772>
   18c8a:	46c0      	nop			; (mov r8, r8)
   18c8c:	0001e348 	.word	0x0001e348
   18c90:	980c      	ldr	r0, [sp, #48]	; 0x30
   18c92:	990d      	ldr	r1, [sp, #52]	; 0x34
   18c94:	2300      	movs	r3, #0
   18c96:	4242      	negs	r2, r0
   18c98:	418b      	sbcs	r3, r1
   18c9a:	0011      	movs	r1, r2
   18c9c:	001a      	movs	r2, r3
   18c9e:	232d      	movs	r3, #45	; 0x2d
   18ca0:	a816      	add	r0, sp, #88	; 0x58
   18ca2:	77c3      	strb	r3, [r0, #31]
   18ca4:	0008      	movs	r0, r1
   18ca6:	4310      	orrs	r0, r2
   18ca8:	910c      	str	r1, [sp, #48]	; 0x30
   18caa:	920d      	str	r2, [sp, #52]	; 0x34
   18cac:	4698      	mov	r8, r3
   18cae:	0002      	movs	r2, r0
   18cb0:	3b2c      	subs	r3, #44	; 0x2c
   18cb2:	f7ff f95d 	bl	17f70 <_vfprintf_r+0x294>
   18cb6:	9916      	ldr	r1, [sp, #88]	; 0x58
   18cb8:	9d15      	ldr	r5, [sp, #84]	; 0x54
   18cba:	000a      	movs	r2, r1
   18cbc:	0008      	movs	r0, r1
   18cbe:	002b      	movs	r3, r5
   18cc0:	0029      	movs	r1, r5
   18cc2:	f003 fe4b 	bl	1c95c <__aeabi_dcmpun>
   18cc6:	2800      	cmp	r0, #0
   18cc8:	d000      	beq.n	18ccc <_vfprintf_r+0xff0>
   18cca:	e2c6      	b.n	1925a <_vfprintf_r+0x157e>
   18ccc:	4653      	mov	r3, sl
   18cce:	3301      	adds	r3, #1
   18cd0:	d100      	bne.n	18cd4 <_vfprintf_r+0xff8>
   18cd2:	e09f      	b.n	18e14 <_vfprintf_r+0x1138>
   18cd4:	2320      	movs	r3, #32
   18cd6:	9a12      	ldr	r2, [sp, #72]	; 0x48
   18cd8:	439a      	bics	r2, r3
   18cda:	920e      	str	r2, [sp, #56]	; 0x38
   18cdc:	2a47      	cmp	r2, #71	; 0x47
   18cde:	d100      	bne.n	18ce2 <_vfprintf_r+0x1006>
   18ce0:	e1a1      	b.n	19026 <_vfprintf_r+0x134a>
   18ce2:	2380      	movs	r3, #128	; 0x80
   18ce4:	005b      	lsls	r3, r3, #1
   18ce6:	4323      	orrs	r3, r4
   18ce8:	9309      	str	r3, [sp, #36]	; 0x24
   18cea:	9b15      	ldr	r3, [sp, #84]	; 0x54
   18cec:	2b00      	cmp	r3, #0
   18cee:	da00      	bge.n	18cf2 <_vfprintf_r+0x1016>
   18cf0:	e1ed      	b.n	190ce <_vfprintf_r+0x13f2>
   18cf2:	9a16      	ldr	r2, [sp, #88]	; 0x58
   18cf4:	9308      	str	r3, [sp, #32]
   18cf6:	2300      	movs	r3, #0
   18cf8:	4691      	mov	r9, r2
   18cfa:	9310      	str	r3, [sp, #64]	; 0x40
   18cfc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   18cfe:	2b66      	cmp	r3, #102	; 0x66
   18d00:	d100      	bne.n	18d04 <_vfprintf_r+0x1028>
   18d02:	e1b8      	b.n	19076 <_vfprintf_r+0x139a>
   18d04:	2b46      	cmp	r3, #70	; 0x46
   18d06:	d100      	bne.n	18d0a <_vfprintf_r+0x102e>
   18d08:	e237      	b.n	1917a <_vfprintf_r+0x149e>
   18d0a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   18d0c:	9806      	ldr	r0, [sp, #24]
   18d0e:	3a45      	subs	r2, #69	; 0x45
   18d10:	0013      	movs	r3, r2
   18d12:	4259      	negs	r1, r3
   18d14:	4159      	adcs	r1, r3
   18d16:	ab20      	add	r3, sp, #128	; 0x80
   18d18:	000d      	movs	r5, r1
   18d1a:	9303      	str	r3, [sp, #12]
   18d1c:	ab1f      	add	r3, sp, #124	; 0x7c
   18d1e:	9302      	str	r3, [sp, #8]
   18d20:	2302      	movs	r3, #2
   18d22:	aa23      	add	r2, sp, #140	; 0x8c
   18d24:	4455      	add	r5, sl
   18d26:	921b      	str	r2, [sp, #108]	; 0x6c
   18d28:	9204      	str	r2, [sp, #16]
   18d2a:	9300      	str	r3, [sp, #0]
   18d2c:	9501      	str	r5, [sp, #4]
   18d2e:	9b08      	ldr	r3, [sp, #32]
   18d30:	464a      	mov	r2, r9
   18d32:	f000 fcab 	bl	1968c <_dtoa_r>
   18d36:	9b12      	ldr	r3, [sp, #72]	; 0x48
   18d38:	9011      	str	r0, [sp, #68]	; 0x44
   18d3a:	2b67      	cmp	r3, #103	; 0x67
   18d3c:	d000      	beq.n	18d40 <_vfprintf_r+0x1064>
   18d3e:	e20b      	b.n	19158 <_vfprintf_r+0x147c>
   18d40:	9b11      	ldr	r3, [sp, #68]	; 0x44
   18d42:	4698      	mov	r8, r3
   18d44:	44a8      	add	r8, r5
   18d46:	07e3      	lsls	r3, r4, #31
   18d48:	d400      	bmi.n	18d4c <_vfprintf_r+0x1070>
   18d4a:	e277      	b.n	1923c <_vfprintf_r+0x1560>
   18d4c:	2300      	movs	r3, #0
   18d4e:	2200      	movs	r2, #0
   18d50:	4648      	mov	r0, r9
   18d52:	9908      	ldr	r1, [sp, #32]
   18d54:	f7fe fa86 	bl	17264 <__aeabi_dcmpeq>
   18d58:	4643      	mov	r3, r8
   18d5a:	2800      	cmp	r0, #0
   18d5c:	d10a      	bne.n	18d74 <_vfprintf_r+0x1098>
   18d5e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   18d60:	4543      	cmp	r3, r8
   18d62:	d207      	bcs.n	18d74 <_vfprintf_r+0x1098>
   18d64:	2130      	movs	r1, #48	; 0x30
   18d66:	4640      	mov	r0, r8
   18d68:	1c5a      	adds	r2, r3, #1
   18d6a:	9223      	str	r2, [sp, #140]	; 0x8c
   18d6c:	7019      	strb	r1, [r3, #0]
   18d6e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   18d70:	4298      	cmp	r0, r3
   18d72:	d8f9      	bhi.n	18d68 <_vfprintf_r+0x108c>
   18d74:	9a11      	ldr	r2, [sp, #68]	; 0x44
   18d76:	1a9b      	subs	r3, r3, r2
   18d78:	9314      	str	r3, [sp, #80]	; 0x50
   18d7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   18d7c:	2b47      	cmp	r3, #71	; 0x47
   18d7e:	d100      	bne.n	18d82 <_vfprintf_r+0x10a6>
   18d80:	e0d0      	b.n	18f24 <_vfprintf_r+0x1248>
   18d82:	9b12      	ldr	r3, [sp, #72]	; 0x48
   18d84:	2b65      	cmp	r3, #101	; 0x65
   18d86:	dc00      	bgt.n	18d8a <_vfprintf_r+0x10ae>
   18d88:	e2d5      	b.n	19336 <_vfprintf_r+0x165a>
   18d8a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   18d8c:	2b66      	cmp	r3, #102	; 0x66
   18d8e:	d100      	bne.n	18d92 <_vfprintf_r+0x10b6>
   18d90:	e1c6      	b.n	19120 <_vfprintf_r+0x1444>
   18d92:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   18d94:	9313      	str	r3, [sp, #76]	; 0x4c
   18d96:	9b14      	ldr	r3, [sp, #80]	; 0x50
   18d98:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   18d9a:	0019      	movs	r1, r3
   18d9c:	4291      	cmp	r1, r2
   18d9e:	dd00      	ble.n	18da2 <_vfprintf_r+0x10c6>
   18da0:	e1a0      	b.n	190e4 <_vfprintf_r+0x1408>
   18da2:	07e3      	lsls	r3, r4, #31
   18da4:	d500      	bpl.n	18da8 <_vfprintf_r+0x10cc>
   18da6:	e242      	b.n	1922e <_vfprintf_r+0x1552>
   18da8:	43d3      	mvns	r3, r2
   18daa:	17db      	asrs	r3, r3, #31
   18dac:	0011      	movs	r1, r2
   18dae:	401a      	ands	r2, r3
   18db0:	2367      	movs	r3, #103	; 0x67
   18db2:	9208      	str	r2, [sp, #32]
   18db4:	910e      	str	r1, [sp, #56]	; 0x38
   18db6:	9312      	str	r3, [sp, #72]	; 0x48
   18db8:	9b10      	ldr	r3, [sp, #64]	; 0x40
   18dba:	2b00      	cmp	r3, #0
   18dbc:	d000      	beq.n	18dc0 <_vfprintf_r+0x10e4>
   18dbe:	e0a9      	b.n	18f14 <_vfprintf_r+0x1238>
   18dc0:	ab16      	add	r3, sp, #88	; 0x58
   18dc2:	7fdb      	ldrb	r3, [r3, #31]
   18dc4:	4698      	mov	r8, r3
   18dc6:	2300      	movs	r3, #0
   18dc8:	469a      	mov	sl, r3
   18dca:	f7ff f8fc 	bl	17fc6 <_vfprintf_r+0x2ea>
   18dce:	46cb      	mov	fp, r9
   18dd0:	46a1      	mov	r9, r4
   18dd2:	0014      	movs	r4, r2
   18dd4:	e637      	b.n	18a46 <_vfprintf_r+0xd6a>
   18dd6:	464b      	mov	r3, r9
   18dd8:	6d98      	ldr	r0, [r3, #88]	; 0x58
   18dda:	f002 f875 	bl	1aec8 <__retarget_lock_release_recursive>
   18dde:	2301      	movs	r3, #1
   18de0:	425b      	negs	r3, r3
   18de2:	930a      	str	r3, [sp, #40]	; 0x28
   18de4:	f7ff f82b 	bl	17e3e <_vfprintf_r+0x162>
   18de8:	9a09      	ldr	r2, [sp, #36]	; 0x24
   18dea:	07d2      	lsls	r2, r2, #31
   18dec:	d400      	bmi.n	18df0 <_vfprintf_r+0x1114>
   18dee:	e68f      	b.n	18b10 <_vfprintf_r+0xe34>
   18df0:	e680      	b.n	18af4 <_vfprintf_r+0xe18>
   18df2:	3608      	adds	r6, #8
   18df4:	e679      	b.n	18aea <_vfprintf_r+0xe0e>
   18df6:	68bc      	ldr	r4, [r7, #8]
   18df8:	f7ff fb73 	bl	184e2 <_vfprintf_r+0x806>
   18dfc:	003a      	movs	r2, r7
   18dfe:	4659      	mov	r1, fp
   18e00:	9806      	ldr	r0, [sp, #24]
   18e02:	f003 fa31 	bl	1c268 <__sprint_r>
   18e06:	2800      	cmp	r0, #0
   18e08:	d000      	beq.n	18e0c <_vfprintf_r+0x1130>
   18e0a:	e4f7      	b.n	187fc <_vfprintf_r+0xb20>
   18e0c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   18e0e:	68bc      	ldr	r4, [r7, #8]
   18e10:	ae32      	add	r6, sp, #200	; 0xc8
   18e12:	e67d      	b.n	18b10 <_vfprintf_r+0xe34>
   18e14:	2320      	movs	r3, #32
   18e16:	9a12      	ldr	r2, [sp, #72]	; 0x48
   18e18:	439a      	bics	r2, r3
   18e1a:	3b1a      	subs	r3, #26
   18e1c:	920e      	str	r2, [sp, #56]	; 0x38
   18e1e:	469a      	mov	sl, r3
   18e20:	e75f      	b.n	18ce2 <_vfprintf_r+0x1006>
   18e22:	232d      	movs	r3, #45	; 0x2d
   18e24:	aa16      	add	r2, sp, #88	; 0x58
   18e26:	77d3      	strb	r3, [r2, #31]
   18e28:	4698      	mov	r8, r3
   18e2a:	f7ff faa8 	bl	1837e <_vfprintf_r+0x6a2>
   18e2e:	003a      	movs	r2, r7
   18e30:	4659      	mov	r1, fp
   18e32:	9806      	ldr	r0, [sp, #24]
   18e34:	f003 fa18 	bl	1c268 <__sprint_r>
   18e38:	2800      	cmp	r0, #0
   18e3a:	d000      	beq.n	18e3e <_vfprintf_r+0x1162>
   18e3c:	e4de      	b.n	187fc <_vfprintf_r+0xb20>
   18e3e:	ae32      	add	r6, sp, #200	; 0xc8
   18e40:	e419      	b.n	18676 <_vfprintf_r+0x99a>
   18e42:	4be3      	ldr	r3, [pc, #908]	; (191d0 <_vfprintf_r+0x14f4>)
   18e44:	3401      	adds	r4, #1
   18e46:	6033      	str	r3, [r6, #0]
   18e48:	2301      	movs	r3, #1
   18e4a:	6073      	str	r3, [r6, #4]
   18e4c:	687b      	ldr	r3, [r7, #4]
   18e4e:	60bc      	str	r4, [r7, #8]
   18e50:	3301      	adds	r3, #1
   18e52:	607b      	str	r3, [r7, #4]
   18e54:	2b07      	cmp	r3, #7
   18e56:	dd00      	ble.n	18e5a <_vfprintf_r+0x117e>
   18e58:	e155      	b.n	19106 <_vfprintf_r+0x142a>
   18e5a:	3608      	adds	r6, #8
   18e5c:	2800      	cmp	r0, #0
   18e5e:	d107      	bne.n	18e70 <_vfprintf_r+0x1194>
   18e60:	9b14      	ldr	r3, [sp, #80]	; 0x50
   18e62:	2b00      	cmp	r3, #0
   18e64:	d104      	bne.n	18e70 <_vfprintf_r+0x1194>
   18e66:	9b09      	ldr	r3, [sp, #36]	; 0x24
   18e68:	07db      	lsls	r3, r3, #31
   18e6a:	d401      	bmi.n	18e70 <_vfprintf_r+0x1194>
   18e6c:	f7ff fb39 	bl	184e2 <_vfprintf_r+0x806>
   18e70:	9b18      	ldr	r3, [sp, #96]	; 0x60
   18e72:	6033      	str	r3, [r6, #0]
   18e74:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   18e76:	1919      	adds	r1, r3, r4
   18e78:	6073      	str	r3, [r6, #4]
   18e7a:	687b      	ldr	r3, [r7, #4]
   18e7c:	60b9      	str	r1, [r7, #8]
   18e7e:	3301      	adds	r3, #1
   18e80:	607b      	str	r3, [r7, #4]
   18e82:	2b07      	cmp	r3, #7
   18e84:	dd00      	ble.n	18e88 <_vfprintf_r+0x11ac>
   18e86:	e1c4      	b.n	19212 <_vfprintf_r+0x1536>
   18e88:	0032      	movs	r2, r6
   18e8a:	3208      	adds	r2, #8
   18e8c:	2800      	cmp	r0, #0
   18e8e:	da00      	bge.n	18e92 <_vfprintf_r+0x11b6>
   18e90:	e195      	b.n	191be <_vfprintf_r+0x14e2>
   18e92:	9811      	ldr	r0, [sp, #68]	; 0x44
   18e94:	3301      	adds	r3, #1
   18e96:	6010      	str	r0, [r2, #0]
   18e98:	9814      	ldr	r0, [sp, #80]	; 0x50
   18e9a:	607b      	str	r3, [r7, #4]
   18e9c:	1844      	adds	r4, r0, r1
   18e9e:	6050      	str	r0, [r2, #4]
   18ea0:	60bc      	str	r4, [r7, #8]
   18ea2:	2b07      	cmp	r3, #7
   18ea4:	dd01      	ble.n	18eaa <_vfprintf_r+0x11ce>
   18ea6:	f7ff fbc2 	bl	1862e <_vfprintf_r+0x952>
   18eaa:	3208      	adds	r2, #8
   18eac:	0016      	movs	r6, r2
   18eae:	f7ff fb18 	bl	184e2 <_vfprintf_r+0x806>
   18eb2:	990f      	ldr	r1, [sp, #60]	; 0x3c
   18eb4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   18eb6:	680b      	ldr	r3, [r1, #0]
   18eb8:	601a      	str	r2, [r3, #0]
   18eba:	17d2      	asrs	r2, r2, #31
   18ebc:	605a      	str	r2, [r3, #4]
   18ebe:	000b      	movs	r3, r1
   18ec0:	3304      	adds	r3, #4
   18ec2:	930f      	str	r3, [sp, #60]	; 0x3c
   18ec4:	f7fe ff58 	bl	17d78 <_vfprintf_r+0x9c>
   18ec8:	464b      	mov	r3, r9
   18eca:	9a07      	ldr	r2, [sp, #28]
   18ecc:	431c      	orrs	r4, r3
   18ece:	3201      	adds	r2, #1
   18ed0:	7813      	ldrb	r3, [r2, #0]
   18ed2:	9207      	str	r2, [sp, #28]
   18ed4:	f7fe ff8b 	bl	17dee <_vfprintf_r+0x112>
   18ed8:	003a      	movs	r2, r7
   18eda:	4659      	mov	r1, fp
   18edc:	9806      	ldr	r0, [sp, #24]
   18ede:	f003 f9c3 	bl	1c268 <__sprint_r>
   18ee2:	2800      	cmp	r0, #0
   18ee4:	d000      	beq.n	18ee8 <_vfprintf_r+0x120c>
   18ee6:	e489      	b.n	187fc <_vfprintf_r+0xb20>
   18ee8:	68bc      	ldr	r4, [r7, #8]
   18eea:	ae32      	add	r6, sp, #200	; 0xc8
   18eec:	f7ff fbdc 	bl	186a8 <_vfprintf_r+0x9cc>
   18ef0:	4bb8      	ldr	r3, [pc, #736]	; (191d4 <_vfprintf_r+0x14f8>)
   18ef2:	9311      	str	r3, [sp, #68]	; 0x44
   18ef4:	f7ff fa4a 	bl	1838c <_vfprintf_r+0x6b0>
   18ef8:	9a11      	ldr	r2, [sp, #68]	; 0x44
   18efa:	ab32      	add	r3, sp, #200	; 0xc8
   18efc:	1a9b      	subs	r3, r3, r2
   18efe:	930e      	str	r3, [sp, #56]	; 0x38
   18f00:	f7ff f859 	bl	17fb6 <_vfprintf_r+0x2da>
   18f04:	9811      	ldr	r0, [sp, #68]	; 0x44
   18f06:	f7fe fdfb 	bl	17b00 <strlen>
   18f0a:	0002      	movs	r2, r0
   18f0c:	900e      	str	r0, [sp, #56]	; 0x38
   18f0e:	0003      	movs	r3, r0
   18f10:	f7ff f9a1 	bl	18256 <_vfprintf_r+0x57a>
   18f14:	232d      	movs	r3, #45	; 0x2d
   18f16:	aa16      	add	r2, sp, #88	; 0x58
   18f18:	77d3      	strb	r3, [r2, #31]
   18f1a:	4698      	mov	r8, r3
   18f1c:	2300      	movs	r3, #0
   18f1e:	469a      	mov	sl, r3
   18f20:	f7ff f854 	bl	17fcc <_vfprintf_r+0x2f0>
   18f24:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   18f26:	9313      	str	r3, [sp, #76]	; 0x4c
   18f28:	1cda      	adds	r2, r3, #3
   18f2a:	db02      	blt.n	18f32 <_vfprintf_r+0x1256>
   18f2c:	459a      	cmp	sl, r3
   18f2e:	db00      	blt.n	18f32 <_vfprintf_r+0x1256>
   18f30:	e731      	b.n	18d96 <_vfprintf_r+0x10ba>
   18f32:	9b12      	ldr	r3, [sp, #72]	; 0x48
   18f34:	3b02      	subs	r3, #2
   18f36:	9312      	str	r3, [sp, #72]	; 0x48
   18f38:	222c      	movs	r2, #44	; 0x2c
   18f3a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   18f3c:	2148      	movs	r1, #72	; 0x48
   18f3e:	1e5d      	subs	r5, r3, #1
   18f40:	ab16      	add	r3, sp, #88	; 0x58
   18f42:	189b      	adds	r3, r3, r2
   18f44:	466a      	mov	r2, sp
   18f46:	1852      	adds	r2, r2, r1
   18f48:	7812      	ldrb	r2, [r2, #0]
   18f4a:	951f      	str	r5, [sp, #124]	; 0x7c
   18f4c:	701a      	strb	r2, [r3, #0]
   18f4e:	2d00      	cmp	r5, #0
   18f50:	da00      	bge.n	18f54 <_vfprintf_r+0x1278>
   18f52:	e1cb      	b.n	192ec <_vfprintf_r+0x1610>
   18f54:	212d      	movs	r1, #45	; 0x2d
   18f56:	232b      	movs	r3, #43	; 0x2b
   18f58:	aa16      	add	r2, sp, #88	; 0x58
   18f5a:	1852      	adds	r2, r2, r1
   18f5c:	7013      	strb	r3, [r2, #0]
   18f5e:	2d09      	cmp	r5, #9
   18f60:	dc00      	bgt.n	18f64 <_vfprintf_r+0x1288>
   18f62:	e16d      	b.n	19240 <_vfprintf_r+0x1564>
   18f64:	aa16      	add	r2, sp, #88	; 0x58
   18f66:	233b      	movs	r3, #59	; 0x3b
   18f68:	4694      	mov	ip, r2
   18f6a:	4463      	add	r3, ip
   18f6c:	469a      	mov	sl, r3
   18f6e:	46b1      	mov	r9, r6
   18f70:	46a0      	mov	r8, r4
   18f72:	4656      	mov	r6, sl
   18f74:	e000      	b.n	18f78 <_vfprintf_r+0x129c>
   18f76:	0026      	movs	r6, r4
   18f78:	0028      	movs	r0, r5
   18f7a:	210a      	movs	r1, #10
   18f7c:	f7fb fe76 	bl	14c6c <__aeabi_idivmod>
   18f80:	1e74      	subs	r4, r6, #1
   18f82:	3130      	adds	r1, #48	; 0x30
   18f84:	7021      	strb	r1, [r4, #0]
   18f86:	0028      	movs	r0, r5
   18f88:	210a      	movs	r1, #10
   18f8a:	f7fb fd89 	bl	14aa0 <__divsi3>
   18f8e:	0005      	movs	r5, r0
   18f90:	2809      	cmp	r0, #9
   18f92:	dcf0      	bgt.n	18f76 <_vfprintf_r+0x129a>
   18f94:	0023      	movs	r3, r4
   18f96:	4644      	mov	r4, r8
   18f98:	46b0      	mov	r8, r6
   18f9a:	464e      	mov	r6, r9
   18f9c:	4699      	mov	r9, r3
   18f9e:	0003      	movs	r3, r0
   18fa0:	3330      	adds	r3, #48	; 0x30
   18fa2:	b2d8      	uxtb	r0, r3
   18fa4:	4643      	mov	r3, r8
   18fa6:	3b02      	subs	r3, #2
   18fa8:	7018      	strb	r0, [r3, #0]
   18faa:	459a      	cmp	sl, r3
   18fac:	d800      	bhi.n	18fb0 <_vfprintf_r+0x12d4>
   18fae:	e1f6      	b.n	1939e <_vfprintf_r+0x16c2>
   18fb0:	4642      	mov	r2, r8
   18fb2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   18fb4:	4645      	mov	r5, r8
   18fb6:	1a99      	subs	r1, r3, r2
   18fb8:	2301      	movs	r3, #1
   18fba:	3107      	adds	r1, #7
   18fbc:	425b      	negs	r3, r3
   18fbe:	e001      	b.n	18fc4 <_vfprintf_r+0x12e8>
   18fc0:	5ce8      	ldrb	r0, [r5, r3]
   18fc2:	3301      	adds	r3, #1
   18fc4:	aa21      	add	r2, sp, #132	; 0x84
   18fc6:	18d2      	adds	r2, r2, r3
   18fc8:	70d0      	strb	r0, [r2, #3]
   18fca:	428b      	cmp	r3, r1
   18fcc:	d1f8      	bne.n	18fc0 <_vfprintf_r+0x12e4>
   18fce:	a916      	add	r1, sp, #88	; 0x58
   18fd0:	468c      	mov	ip, r1
   18fd2:	222e      	movs	r2, #46	; 0x2e
   18fd4:	464b      	mov	r3, r9
   18fd6:	4462      	add	r2, ip
   18fd8:	4694      	mov	ip, r2
   18fda:	1afb      	subs	r3, r7, r3
   18fdc:	4463      	add	r3, ip
   18fde:	aa21      	add	r2, sp, #132	; 0x84
   18fe0:	9914      	ldr	r1, [sp, #80]	; 0x50
   18fe2:	1a9b      	subs	r3, r3, r2
   18fe4:	469c      	mov	ip, r3
   18fe6:	000a      	movs	r2, r1
   18fe8:	4462      	add	r2, ip
   18fea:	931a      	str	r3, [sp, #104]	; 0x68
   18fec:	920e      	str	r2, [sp, #56]	; 0x38
   18fee:	2901      	cmp	r1, #1
   18ff0:	dc00      	bgt.n	18ff4 <_vfprintf_r+0x1318>
   18ff2:	e170      	b.n	192d6 <_vfprintf_r+0x15fa>
   18ff4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   18ff6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   18ff8:	4694      	mov	ip, r2
   18ffa:	4463      	add	r3, ip
   18ffc:	001a      	movs	r2, r3
   18ffe:	930e      	str	r3, [sp, #56]	; 0x38
   19000:	43db      	mvns	r3, r3
   19002:	17db      	asrs	r3, r3, #31
   19004:	401a      	ands	r2, r3
   19006:	2300      	movs	r3, #0
   19008:	9208      	str	r2, [sp, #32]
   1900a:	9313      	str	r3, [sp, #76]	; 0x4c
   1900c:	e6d4      	b.n	18db8 <_vfprintf_r+0x10dc>
   1900e:	003a      	movs	r2, r7
   19010:	4659      	mov	r1, fp
   19012:	9806      	ldr	r0, [sp, #24]
   19014:	f003 f928 	bl	1c268 <__sprint_r>
   19018:	2800      	cmp	r0, #0
   1901a:	d001      	beq.n	19020 <_vfprintf_r+0x1344>
   1901c:	f7ff fbee 	bl	187fc <_vfprintf_r+0xb20>
   19020:	68bc      	ldr	r4, [r7, #8]
   19022:	ae32      	add	r6, sp, #200	; 0xc8
   19024:	e46a      	b.n	188fc <_vfprintf_r+0xc20>
   19026:	4653      	mov	r3, sl
   19028:	2b00      	cmp	r3, #0
   1902a:	d000      	beq.n	1902e <_vfprintf_r+0x1352>
   1902c:	e659      	b.n	18ce2 <_vfprintf_r+0x1006>
   1902e:	3301      	adds	r3, #1
   19030:	469a      	mov	sl, r3
   19032:	e656      	b.n	18ce2 <_vfprintf_r+0x1006>
   19034:	4653      	mov	r3, sl
   19036:	9308      	str	r3, [sp, #32]
   19038:	2b06      	cmp	r3, #6
   1903a:	d901      	bls.n	19040 <_vfprintf_r+0x1364>
   1903c:	2306      	movs	r3, #6
   1903e:	9308      	str	r3, [sp, #32]
   19040:	9b08      	ldr	r3, [sp, #32]
   19042:	950f      	str	r5, [sp, #60]	; 0x3c
   19044:	930e      	str	r3, [sp, #56]	; 0x38
   19046:	2300      	movs	r3, #0
   19048:	4698      	mov	r8, r3
   1904a:	469a      	mov	sl, r3
   1904c:	9313      	str	r3, [sp, #76]	; 0x4c
   1904e:	4b62      	ldr	r3, [pc, #392]	; (191d8 <_vfprintf_r+0x14fc>)
   19050:	9409      	str	r4, [sp, #36]	; 0x24
   19052:	9311      	str	r3, [sp, #68]	; 0x44
   19054:	f7fe ffbd 	bl	17fd2 <_vfprintf_r+0x2f6>
   19058:	003a      	movs	r2, r7
   1905a:	4659      	mov	r1, fp
   1905c:	9806      	ldr	r0, [sp, #24]
   1905e:	f003 f903 	bl	1c268 <__sprint_r>
   19062:	2800      	cmp	r0, #0
   19064:	d001      	beq.n	1906a <_vfprintf_r+0x138e>
   19066:	f7ff fbc9 	bl	187fc <_vfprintf_r+0xb20>
   1906a:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1906c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   1906e:	68bc      	ldr	r4, [r7, #8]
   19070:	1a9b      	subs	r3, r3, r2
   19072:	ae32      	add	r6, sp, #200	; 0xc8
   19074:	e567      	b.n	18b46 <_vfprintf_r+0xe6a>
   19076:	ab23      	add	r3, sp, #140	; 0x8c
   19078:	931b      	str	r3, [sp, #108]	; 0x6c
   1907a:	9304      	str	r3, [sp, #16]
   1907c:	ab20      	add	r3, sp, #128	; 0x80
   1907e:	9303      	str	r3, [sp, #12]
   19080:	ab1f      	add	r3, sp, #124	; 0x7c
   19082:	9302      	str	r3, [sp, #8]
   19084:	4653      	mov	r3, sl
   19086:	9301      	str	r3, [sp, #4]
   19088:	2303      	movs	r3, #3
   1908a:	464a      	mov	r2, r9
   1908c:	9300      	str	r3, [sp, #0]
   1908e:	9806      	ldr	r0, [sp, #24]
   19090:	9b08      	ldr	r3, [sp, #32]
   19092:	f000 fafb 	bl	1968c <_dtoa_r>
   19096:	0003      	movs	r3, r0
   19098:	4453      	add	r3, sl
   1909a:	4698      	mov	r8, r3
   1909c:	4655      	mov	r5, sl
   1909e:	9011      	str	r0, [sp, #68]	; 0x44
   190a0:	9b11      	ldr	r3, [sp, #68]	; 0x44
   190a2:	781b      	ldrb	r3, [r3, #0]
   190a4:	2b30      	cmp	r3, #48	; 0x30
   190a6:	d002      	beq.n	190ae <_vfprintf_r+0x13d2>
   190a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   190aa:	4498      	add	r8, r3
   190ac:	e64e      	b.n	18d4c <_vfprintf_r+0x1070>
   190ae:	2200      	movs	r2, #0
   190b0:	2300      	movs	r3, #0
   190b2:	4648      	mov	r0, r9
   190b4:	9908      	ldr	r1, [sp, #32]
   190b6:	f7fe f8d5 	bl	17264 <__aeabi_dcmpeq>
   190ba:	2800      	cmp	r0, #0
   190bc:	d1f4      	bne.n	190a8 <_vfprintf_r+0x13cc>
   190be:	2301      	movs	r3, #1
   190c0:	1b5b      	subs	r3, r3, r5
   190c2:	931f      	str	r3, [sp, #124]	; 0x7c
   190c4:	4498      	add	r8, r3
   190c6:	e641      	b.n	18d4c <_vfprintf_r+0x1070>
   190c8:	46c1      	mov	r9, r8
   190ca:	f7ff fb1f 	bl	1870c <_vfprintf_r+0xa30>
   190ce:	2280      	movs	r2, #128	; 0x80
   190d0:	0612      	lsls	r2, r2, #24
   190d2:	4694      	mov	ip, r2
   190d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
   190d6:	4699      	mov	r9, r3
   190d8:	9b15      	ldr	r3, [sp, #84]	; 0x54
   190da:	4463      	add	r3, ip
   190dc:	9308      	str	r3, [sp, #32]
   190de:	232d      	movs	r3, #45	; 0x2d
   190e0:	9310      	str	r3, [sp, #64]	; 0x40
   190e2:	e60b      	b.n	18cfc <_vfprintf_r+0x1020>
   190e4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   190e6:	9b14      	ldr	r3, [sp, #80]	; 0x50
   190e8:	4694      	mov	ip, r2
   190ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   190ec:	4463      	add	r3, ip
   190ee:	930e      	str	r3, [sp, #56]	; 0x38
   190f0:	2a00      	cmp	r2, #0
   190f2:	dc00      	bgt.n	190f6 <_vfprintf_r+0x141a>
   190f4:	e0e3      	b.n	192be <_vfprintf_r+0x15e2>
   190f6:	001a      	movs	r2, r3
   190f8:	43db      	mvns	r3, r3
   190fa:	17db      	asrs	r3, r3, #31
   190fc:	401a      	ands	r2, r3
   190fe:	2367      	movs	r3, #103	; 0x67
   19100:	9208      	str	r2, [sp, #32]
   19102:	9312      	str	r3, [sp, #72]	; 0x48
   19104:	e658      	b.n	18db8 <_vfprintf_r+0x10dc>
   19106:	003a      	movs	r2, r7
   19108:	4659      	mov	r1, fp
   1910a:	9806      	ldr	r0, [sp, #24]
   1910c:	f003 f8ac 	bl	1c268 <__sprint_r>
   19110:	2800      	cmp	r0, #0
   19112:	d001      	beq.n	19118 <_vfprintf_r+0x143c>
   19114:	f7ff fb72 	bl	187fc <_vfprintf_r+0xb20>
   19118:	981f      	ldr	r0, [sp, #124]	; 0x7c
   1911a:	68bc      	ldr	r4, [r7, #8]
   1911c:	ae32      	add	r6, sp, #200	; 0xc8
   1911e:	e69d      	b.n	18e5c <_vfprintf_r+0x1180>
   19120:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   19122:	9313      	str	r3, [sp, #76]	; 0x4c
   19124:	2b00      	cmp	r3, #0
   19126:	dc00      	bgt.n	1912a <_vfprintf_r+0x144e>
   19128:	e0f2      	b.n	19310 <_vfprintf_r+0x1634>
   1912a:	4652      	mov	r2, sl
   1912c:	2a00      	cmp	r2, #0
   1912e:	d000      	beq.n	19132 <_vfprintf_r+0x1456>
   19130:	e0a0      	b.n	19274 <_vfprintf_r+0x1598>
   19132:	07e2      	lsls	r2, r4, #31
   19134:	d500      	bpl.n	19138 <_vfprintf_r+0x145c>
   19136:	e09d      	b.n	19274 <_vfprintf_r+0x1598>
   19138:	9308      	str	r3, [sp, #32]
   1913a:	930e      	str	r3, [sp, #56]	; 0x38
   1913c:	e63c      	b.n	18db8 <_vfprintf_r+0x10dc>
   1913e:	ab16      	add	r3, sp, #88	; 0x58
   19140:	7fdb      	ldrb	r3, [r3, #31]
   19142:	950f      	str	r5, [sp, #60]	; 0x3c
   19144:	4698      	mov	r8, r3
   19146:	4653      	mov	r3, sl
   19148:	9308      	str	r3, [sp, #32]
   1914a:	930e      	str	r3, [sp, #56]	; 0x38
   1914c:	2300      	movs	r3, #0
   1914e:	9409      	str	r4, [sp, #36]	; 0x24
   19150:	469a      	mov	sl, r3
   19152:	9313      	str	r3, [sp, #76]	; 0x4c
   19154:	f7fe ff37 	bl	17fc6 <_vfprintf_r+0x2ea>
   19158:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1915a:	4698      	mov	r8, r3
   1915c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1915e:	44a8      	add	r8, r5
   19160:	2b47      	cmp	r3, #71	; 0x47
   19162:	d000      	beq.n	19166 <_vfprintf_r+0x148a>
   19164:	e5f2      	b.n	18d4c <_vfprintf_r+0x1070>
   19166:	07e3      	lsls	r3, r4, #31
   19168:	d400      	bmi.n	1916c <_vfprintf_r+0x1490>
   1916a:	e0dc      	b.n	19326 <_vfprintf_r+0x164a>
   1916c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1916e:	4698      	mov	r8, r3
   19170:	9b12      	ldr	r3, [sp, #72]	; 0x48
   19172:	44a8      	add	r8, r5
   19174:	2b46      	cmp	r3, #70	; 0x46
   19176:	d093      	beq.n	190a0 <_vfprintf_r+0x13c4>
   19178:	e5e8      	b.n	18d4c <_vfprintf_r+0x1070>
   1917a:	ab23      	add	r3, sp, #140	; 0x8c
   1917c:	931b      	str	r3, [sp, #108]	; 0x6c
   1917e:	9304      	str	r3, [sp, #16]
   19180:	ab20      	add	r3, sp, #128	; 0x80
   19182:	9303      	str	r3, [sp, #12]
   19184:	ab1f      	add	r3, sp, #124	; 0x7c
   19186:	9302      	str	r3, [sp, #8]
   19188:	4653      	mov	r3, sl
   1918a:	9301      	str	r3, [sp, #4]
   1918c:	2303      	movs	r3, #3
   1918e:	464a      	mov	r2, r9
   19190:	9300      	str	r3, [sp, #0]
   19192:	9806      	ldr	r0, [sp, #24]
   19194:	9b08      	ldr	r3, [sp, #32]
   19196:	f000 fa79 	bl	1968c <_dtoa_r>
   1919a:	4655      	mov	r5, sl
   1919c:	9011      	str	r0, [sp, #68]	; 0x44
   1919e:	e7e5      	b.n	1916c <_vfprintf_r+0x1490>
   191a0:	003a      	movs	r2, r7
   191a2:	4659      	mov	r1, fp
   191a4:	9806      	ldr	r0, [sp, #24]
   191a6:	f003 f85f 	bl	1c268 <__sprint_r>
   191aa:	2800      	cmp	r0, #0
   191ac:	d101      	bne.n	191b2 <_vfprintf_r+0x14d6>
   191ae:	f7ff faab 	bl	18708 <_vfprintf_r+0xa2c>
   191b2:	f7ff faab 	bl	1870c <_vfprintf_r+0xa30>
   191b6:	4642      	mov	r2, r8
   191b8:	9207      	str	r2, [sp, #28]
   191ba:	f7fe fe1b 	bl	17df4 <_vfprintf_r+0x118>
   191be:	4244      	negs	r4, r0
   191c0:	3010      	adds	r0, #16
   191c2:	db00      	blt.n	191c6 <_vfprintf_r+0x14ea>
   191c4:	e0d8      	b.n	19378 <_vfprintf_r+0x169c>
   191c6:	4805      	ldr	r0, [pc, #20]	; (191dc <_vfprintf_r+0x1500>)
   191c8:	2610      	movs	r6, #16
   191ca:	0005      	movs	r5, r0
   191cc:	e00c      	b.n	191e8 <_vfprintf_r+0x150c>
   191ce:	46c0      	nop			; (mov r8, r8)
   191d0:	0001e334 	.word	0x0001e334
   191d4:	0001e2f8 	.word	0x0001e2f8
   191d8:	0001e32c 	.word	0x0001e32c
   191dc:	0001e348 	.word	0x0001e348
   191e0:	3208      	adds	r2, #8
   191e2:	3c10      	subs	r4, #16
   191e4:	2c10      	cmp	r4, #16
   191e6:	dd51      	ble.n	1928c <_vfprintf_r+0x15b0>
   191e8:	3110      	adds	r1, #16
   191ea:	3301      	adds	r3, #1
   191ec:	6015      	str	r5, [r2, #0]
   191ee:	6056      	str	r6, [r2, #4]
   191f0:	60b9      	str	r1, [r7, #8]
   191f2:	607b      	str	r3, [r7, #4]
   191f4:	2b07      	cmp	r3, #7
   191f6:	ddf3      	ble.n	191e0 <_vfprintf_r+0x1504>
   191f8:	003a      	movs	r2, r7
   191fa:	4659      	mov	r1, fp
   191fc:	9806      	ldr	r0, [sp, #24]
   191fe:	f003 f833 	bl	1c268 <__sprint_r>
   19202:	2800      	cmp	r0, #0
   19204:	d001      	beq.n	1920a <_vfprintf_r+0x152e>
   19206:	f7ff faf9 	bl	187fc <_vfprintf_r+0xb20>
   1920a:	68b9      	ldr	r1, [r7, #8]
   1920c:	687b      	ldr	r3, [r7, #4]
   1920e:	aa32      	add	r2, sp, #200	; 0xc8
   19210:	e7e7      	b.n	191e2 <_vfprintf_r+0x1506>
   19212:	003a      	movs	r2, r7
   19214:	4659      	mov	r1, fp
   19216:	9806      	ldr	r0, [sp, #24]
   19218:	f003 f826 	bl	1c268 <__sprint_r>
   1921c:	2800      	cmp	r0, #0
   1921e:	d001      	beq.n	19224 <_vfprintf_r+0x1548>
   19220:	f7ff faec 	bl	187fc <_vfprintf_r+0xb20>
   19224:	981f      	ldr	r0, [sp, #124]	; 0x7c
   19226:	68b9      	ldr	r1, [r7, #8]
   19228:	687b      	ldr	r3, [r7, #4]
   1922a:	aa32      	add	r2, sp, #200	; 0xc8
   1922c:	e62e      	b.n	18e8c <_vfprintf_r+0x11b0>
   1922e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   19230:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   19232:	4694      	mov	ip, r2
   19234:	4463      	add	r3, ip
   19236:	001a      	movs	r2, r3
   19238:	930e      	str	r3, [sp, #56]	; 0x38
   1923a:	e75d      	b.n	190f8 <_vfprintf_r+0x141c>
   1923c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   1923e:	e599      	b.n	18d74 <_vfprintf_r+0x1098>
   19240:	212e      	movs	r1, #46	; 0x2e
   19242:	2330      	movs	r3, #48	; 0x30
   19244:	aa16      	add	r2, sp, #88	; 0x58
   19246:	1852      	adds	r2, r2, r1
   19248:	7013      	strb	r3, [r2, #0]
   1924a:	002b      	movs	r3, r5
   1924c:	aa16      	add	r2, sp, #88	; 0x58
   1924e:	3101      	adds	r1, #1
   19250:	3330      	adds	r3, #48	; 0x30
   19252:	1852      	adds	r2, r2, r1
   19254:	7013      	strb	r3, [r2, #0]
   19256:	ab22      	add	r3, sp, #136	; 0x88
   19258:	e6c1      	b.n	18fde <_vfprintf_r+0x1302>
   1925a:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1925c:	2b00      	cmp	r3, #0
   1925e:	db52      	blt.n	19306 <_vfprintf_r+0x162a>
   19260:	ab16      	add	r3, sp, #88	; 0x58
   19262:	7fdb      	ldrb	r3, [r3, #31]
   19264:	4698      	mov	r8, r3
   19266:	9b12      	ldr	r3, [sp, #72]	; 0x48
   19268:	2b47      	cmp	r3, #71	; 0x47
   1926a:	dc48      	bgt.n	192fe <_vfprintf_r+0x1622>
   1926c:	4b4e      	ldr	r3, [pc, #312]	; (193a8 <_vfprintf_r+0x16cc>)
   1926e:	9311      	str	r3, [sp, #68]	; 0x44
   19270:	f7ff f88c 	bl	1838c <_vfprintf_r+0x6b0>
   19274:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   19276:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   19278:	4694      	mov	ip, r2
   1927a:	4463      	add	r3, ip
   1927c:	4453      	add	r3, sl
   1927e:	001a      	movs	r2, r3
   19280:	930e      	str	r3, [sp, #56]	; 0x38
   19282:	43db      	mvns	r3, r3
   19284:	17db      	asrs	r3, r3, #31
   19286:	401a      	ands	r2, r3
   19288:	9208      	str	r2, [sp, #32]
   1928a:	e595      	b.n	18db8 <_vfprintf_r+0x10dc>
   1928c:	46a9      	mov	r9, r5
   1928e:	4648      	mov	r0, r9
   19290:	1909      	adds	r1, r1, r4
   19292:	3301      	adds	r3, #1
   19294:	6010      	str	r0, [r2, #0]
   19296:	6054      	str	r4, [r2, #4]
   19298:	60b9      	str	r1, [r7, #8]
   1929a:	3208      	adds	r2, #8
   1929c:	607b      	str	r3, [r7, #4]
   1929e:	2b07      	cmp	r3, #7
   192a0:	dc00      	bgt.n	192a4 <_vfprintf_r+0x15c8>
   192a2:	e5f6      	b.n	18e92 <_vfprintf_r+0x11b6>
   192a4:	003a      	movs	r2, r7
   192a6:	4659      	mov	r1, fp
   192a8:	9806      	ldr	r0, [sp, #24]
   192aa:	f002 ffdd 	bl	1c268 <__sprint_r>
   192ae:	2800      	cmp	r0, #0
   192b0:	d001      	beq.n	192b6 <_vfprintf_r+0x15da>
   192b2:	f7ff faa3 	bl	187fc <_vfprintf_r+0xb20>
   192b6:	68b9      	ldr	r1, [r7, #8]
   192b8:	687b      	ldr	r3, [r7, #4]
   192ba:	aa32      	add	r2, sp, #200	; 0xc8
   192bc:	e5e9      	b.n	18e92 <_vfprintf_r+0x11b6>
   192be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   192c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   192c2:	1a98      	subs	r0, r3, r2
   192c4:	1c43      	adds	r3, r0, #1
   192c6:	001a      	movs	r2, r3
   192c8:	930e      	str	r3, [sp, #56]	; 0x38
   192ca:	e715      	b.n	190f8 <_vfprintf_r+0x141c>
   192cc:	4a37      	ldr	r2, [pc, #220]	; (193ac <_vfprintf_r+0x16d0>)
   192ce:	687b      	ldr	r3, [r7, #4]
   192d0:	4691      	mov	r9, r2
   192d2:	f7ff fbf5 	bl	18ac0 <_vfprintf_r+0xde4>
   192d6:	2301      	movs	r3, #1
   192d8:	4023      	ands	r3, r4
   192da:	9313      	str	r3, [sp, #76]	; 0x4c
   192dc:	d000      	beq.n	192e0 <_vfprintf_r+0x1604>
   192de:	e689      	b.n	18ff4 <_vfprintf_r+0x1318>
   192e0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   192e2:	43d3      	mvns	r3, r2
   192e4:	17db      	asrs	r3, r3, #31
   192e6:	401a      	ands	r2, r3
   192e8:	9208      	str	r2, [sp, #32]
   192ea:	e565      	b.n	18db8 <_vfprintf_r+0x10dc>
   192ec:	2301      	movs	r3, #1
   192ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   192f0:	391b      	subs	r1, #27
   192f2:	1a9d      	subs	r5, r3, r2
   192f4:	aa16      	add	r2, sp, #88	; 0x58
   192f6:	332c      	adds	r3, #44	; 0x2c
   192f8:	1852      	adds	r2, r2, r1
   192fa:	7013      	strb	r3, [r2, #0]
   192fc:	e62f      	b.n	18f5e <_vfprintf_r+0x1282>
   192fe:	4b2c      	ldr	r3, [pc, #176]	; (193b0 <_vfprintf_r+0x16d4>)
   19300:	9311      	str	r3, [sp, #68]	; 0x44
   19302:	f7ff f843 	bl	1838c <_vfprintf_r+0x6b0>
   19306:	232d      	movs	r3, #45	; 0x2d
   19308:	aa16      	add	r2, sp, #88	; 0x58
   1930a:	77d3      	strb	r3, [r2, #31]
   1930c:	4698      	mov	r8, r3
   1930e:	e7aa      	b.n	19266 <_vfprintf_r+0x158a>
   19310:	4653      	mov	r3, sl
   19312:	2b00      	cmp	r3, #0
   19314:	d101      	bne.n	1931a <_vfprintf_r+0x163e>
   19316:	07e3      	lsls	r3, r4, #31
   19318:	d503      	bpl.n	19322 <_vfprintf_r+0x1646>
   1931a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1931c:	1c58      	adds	r0, r3, #1
   1931e:	0003      	movs	r3, r0
   19320:	e7ac      	b.n	1927c <_vfprintf_r+0x15a0>
   19322:	2301      	movs	r3, #1
   19324:	e708      	b.n	19138 <_vfprintf_r+0x145c>
   19326:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   19328:	9a11      	ldr	r2, [sp, #68]	; 0x44
   1932a:	1a9b      	subs	r3, r3, r2
   1932c:	9314      	str	r3, [sp, #80]	; 0x50
   1932e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19330:	2b47      	cmp	r3, #71	; 0x47
   19332:	d100      	bne.n	19336 <_vfprintf_r+0x165a>
   19334:	e5f6      	b.n	18f24 <_vfprintf_r+0x1248>
   19336:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   19338:	9313      	str	r3, [sp, #76]	; 0x4c
   1933a:	e5fd      	b.n	18f38 <_vfprintf_r+0x125c>
   1933c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1933e:	1d1d      	adds	r5, r3, #4
   19340:	681b      	ldr	r3, [r3, #0]
   19342:	46a8      	mov	r8, r5
   19344:	469a      	mov	sl, r3
   19346:	2b00      	cmp	r3, #0
   19348:	db0a      	blt.n	19360 <_vfprintf_r+0x1684>
   1934a:	4645      	mov	r5, r8
   1934c:	9b07      	ldr	r3, [sp, #28]
   1934e:	950f      	str	r5, [sp, #60]	; 0x3c
   19350:	785b      	ldrb	r3, [r3, #1]
   19352:	9207      	str	r2, [sp, #28]
   19354:	f7fe fd4b 	bl	17dee <_vfprintf_r+0x112>
   19358:	ab16      	add	r3, sp, #88	; 0x58
   1935a:	77d8      	strb	r0, [r3, #31]
   1935c:	f7ff f830 	bl	183c0 <_vfprintf_r+0x6e4>
   19360:	2301      	movs	r3, #1
   19362:	425b      	negs	r3, r3
   19364:	469a      	mov	sl, r3
   19366:	e7f0      	b.n	1934a <_vfprintf_r+0x166e>
   19368:	ab16      	add	r3, sp, #88	; 0x58
   1936a:	77d8      	strb	r0, [r3, #31]
   1936c:	f7fe ff27 	bl	181be <_vfprintf_r+0x4e2>
   19370:	ab16      	add	r3, sp, #88	; 0x58
   19372:	77d8      	strb	r0, [r3, #31]
   19374:	f7fe fdce 	bl	17f14 <_vfprintf_r+0x238>
   19378:	480c      	ldr	r0, [pc, #48]	; (193ac <_vfprintf_r+0x16d0>)
   1937a:	4681      	mov	r9, r0
   1937c:	e787      	b.n	1928e <_vfprintf_r+0x15b2>
   1937e:	ab16      	add	r3, sp, #88	; 0x58
   19380:	77d8      	strb	r0, [r3, #31]
   19382:	f7ff f829 	bl	183d8 <_vfprintf_r+0x6fc>
   19386:	ab16      	add	r3, sp, #88	; 0x58
   19388:	77d8      	strb	r0, [r3, #31]
   1938a:	f7fe ffc3 	bl	18314 <_vfprintf_r+0x638>
   1938e:	ab16      	add	r3, sp, #88	; 0x58
   19390:	77d8      	strb	r0, [r3, #31]
   19392:	f7fe ffa5 	bl	182e0 <_vfprintf_r+0x604>
   19396:	ab16      	add	r3, sp, #88	; 0x58
   19398:	77d8      	strb	r0, [r3, #31]
   1939a:	f7fe feaf 	bl	180fc <_vfprintf_r+0x420>
   1939e:	aa16      	add	r2, sp, #88	; 0x58
   193a0:	232e      	movs	r3, #46	; 0x2e
   193a2:	4694      	mov	ip, r2
   193a4:	4463      	add	r3, ip
   193a6:	e61a      	b.n	18fde <_vfprintf_r+0x1302>
   193a8:	0001e2fc 	.word	0x0001e2fc
   193ac:	0001e348 	.word	0x0001e348
   193b0:	0001e300 	.word	0x0001e300

000193b4 <__sbprintf>:
   193b4:	b5f0      	push	{r4, r5, r6, r7, lr}
   193b6:	0015      	movs	r5, r2
   193b8:	2202      	movs	r2, #2
   193ba:	4c1e      	ldr	r4, [pc, #120]	; (19434 <__sbprintf+0x80>)
   193bc:	001f      	movs	r7, r3
   193be:	898b      	ldrh	r3, [r1, #12]
   193c0:	44a5      	add	sp, r4
   193c2:	4393      	bics	r3, r2
   193c4:	466a      	mov	r2, sp
   193c6:	8193      	strh	r3, [r2, #12]
   193c8:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   193ca:	0006      	movs	r6, r0
   193cc:	9319      	str	r3, [sp, #100]	; 0x64
   193ce:	89cb      	ldrh	r3, [r1, #14]
   193d0:	a816      	add	r0, sp, #88	; 0x58
   193d2:	81d3      	strh	r3, [r2, #14]
   193d4:	69cb      	ldr	r3, [r1, #28]
   193d6:	000c      	movs	r4, r1
   193d8:	9307      	str	r3, [sp, #28]
   193da:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   193dc:	9309      	str	r3, [sp, #36]	; 0x24
   193de:	ab1a      	add	r3, sp, #104	; 0x68
   193e0:	9300      	str	r3, [sp, #0]
   193e2:	9304      	str	r3, [sp, #16]
   193e4:	2380      	movs	r3, #128	; 0x80
   193e6:	00db      	lsls	r3, r3, #3
   193e8:	9302      	str	r3, [sp, #8]
   193ea:	9305      	str	r3, [sp, #20]
   193ec:	2300      	movs	r3, #0
   193ee:	9306      	str	r3, [sp, #24]
   193f0:	f001 fd64 	bl	1aebc <__retarget_lock_init_recursive>
   193f4:	002a      	movs	r2, r5
   193f6:	003b      	movs	r3, r7
   193f8:	4669      	mov	r1, sp
   193fa:	0030      	movs	r0, r6
   193fc:	f7fe fc6e 	bl	17cdc <_vfprintf_r>
   19400:	1e05      	subs	r5, r0, #0
   19402:	db05      	blt.n	19410 <__sbprintf+0x5c>
   19404:	4669      	mov	r1, sp
   19406:	0030      	movs	r0, r6
   19408:	f001 f9ac 	bl	1a764 <_fflush_r>
   1940c:	2800      	cmp	r0, #0
   1940e:	d10e      	bne.n	1942e <__sbprintf+0x7a>
   19410:	466b      	mov	r3, sp
   19412:	899b      	ldrh	r3, [r3, #12]
   19414:	065b      	lsls	r3, r3, #25
   19416:	d503      	bpl.n	19420 <__sbprintf+0x6c>
   19418:	2240      	movs	r2, #64	; 0x40
   1941a:	89a3      	ldrh	r3, [r4, #12]
   1941c:	4313      	orrs	r3, r2
   1941e:	81a3      	strh	r3, [r4, #12]
   19420:	9816      	ldr	r0, [sp, #88]	; 0x58
   19422:	f001 fd4d 	bl	1aec0 <__retarget_lock_close_recursive>
   19426:	0028      	movs	r0, r5
   19428:	4b03      	ldr	r3, [pc, #12]	; (19438 <__sbprintf+0x84>)
   1942a:	449d      	add	sp, r3
   1942c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1942e:	2501      	movs	r5, #1
   19430:	426d      	negs	r5, r5
   19432:	e7ed      	b.n	19410 <__sbprintf+0x5c>
   19434:	fffffb94 	.word	0xfffffb94
   19438:	0000046c 	.word	0x0000046c

0001943c <__swsetup_r>:
   1943c:	4b33      	ldr	r3, [pc, #204]	; (1950c <__swsetup_r+0xd0>)
   1943e:	b570      	push	{r4, r5, r6, lr}
   19440:	0005      	movs	r5, r0
   19442:	6818      	ldr	r0, [r3, #0]
   19444:	000c      	movs	r4, r1
   19446:	2800      	cmp	r0, #0
   19448:	d002      	beq.n	19450 <__swsetup_r+0x14>
   1944a:	6b83      	ldr	r3, [r0, #56]	; 0x38
   1944c:	2b00      	cmp	r3, #0
   1944e:	d03c      	beq.n	194ca <__swsetup_r+0x8e>
   19450:	230c      	movs	r3, #12
   19452:	5ee2      	ldrsh	r2, [r4, r3]
   19454:	b293      	uxth	r3, r2
   19456:	0719      	lsls	r1, r3, #28
   19458:	d50d      	bpl.n	19476 <__swsetup_r+0x3a>
   1945a:	6921      	ldr	r1, [r4, #16]
   1945c:	2900      	cmp	r1, #0
   1945e:	d015      	beq.n	1948c <__swsetup_r+0x50>
   19460:	07da      	lsls	r2, r3, #31
   19462:	d521      	bpl.n	194a8 <__swsetup_r+0x6c>
   19464:	2300      	movs	r3, #0
   19466:	60a3      	str	r3, [r4, #8]
   19468:	6963      	ldr	r3, [r4, #20]
   1946a:	2000      	movs	r0, #0
   1946c:	425b      	negs	r3, r3
   1946e:	61a3      	str	r3, [r4, #24]
   19470:	2900      	cmp	r1, #0
   19472:	d021      	beq.n	194b8 <__swsetup_r+0x7c>
   19474:	bd70      	pop	{r4, r5, r6, pc}
   19476:	06d9      	lsls	r1, r3, #27
   19478:	d53f      	bpl.n	194fa <__swsetup_r+0xbe>
   1947a:	075b      	lsls	r3, r3, #29
   1947c:	d428      	bmi.n	194d0 <__swsetup_r+0x94>
   1947e:	6921      	ldr	r1, [r4, #16]
   19480:	2308      	movs	r3, #8
   19482:	4313      	orrs	r3, r2
   19484:	81a3      	strh	r3, [r4, #12]
   19486:	b29b      	uxth	r3, r3
   19488:	2900      	cmp	r1, #0
   1948a:	d1e9      	bne.n	19460 <__swsetup_r+0x24>
   1948c:	22a0      	movs	r2, #160	; 0xa0
   1948e:	2080      	movs	r0, #128	; 0x80
   19490:	0092      	lsls	r2, r2, #2
   19492:	0080      	lsls	r0, r0, #2
   19494:	401a      	ands	r2, r3
   19496:	4282      	cmp	r2, r0
   19498:	d0e2      	beq.n	19460 <__swsetup_r+0x24>
   1949a:	0021      	movs	r1, r4
   1949c:	0028      	movs	r0, r5
   1949e:	f001 fd45 	bl	1af2c <__smakebuf_r>
   194a2:	89a3      	ldrh	r3, [r4, #12]
   194a4:	6921      	ldr	r1, [r4, #16]
   194a6:	e7db      	b.n	19460 <__swsetup_r+0x24>
   194a8:	2200      	movs	r2, #0
   194aa:	079b      	lsls	r3, r3, #30
   194ac:	d400      	bmi.n	194b0 <__swsetup_r+0x74>
   194ae:	6962      	ldr	r2, [r4, #20]
   194b0:	60a2      	str	r2, [r4, #8]
   194b2:	2000      	movs	r0, #0
   194b4:	2900      	cmp	r1, #0
   194b6:	d1dd      	bne.n	19474 <__swsetup_r+0x38>
   194b8:	220c      	movs	r2, #12
   194ba:	5ea3      	ldrsh	r3, [r4, r2]
   194bc:	061a      	lsls	r2, r3, #24
   194be:	d5d9      	bpl.n	19474 <__swsetup_r+0x38>
   194c0:	2240      	movs	r2, #64	; 0x40
   194c2:	4313      	orrs	r3, r2
   194c4:	81a3      	strh	r3, [r4, #12]
   194c6:	3801      	subs	r0, #1
   194c8:	e7d4      	b.n	19474 <__swsetup_r+0x38>
   194ca:	f001 f9a5 	bl	1a818 <__sinit>
   194ce:	e7bf      	b.n	19450 <__swsetup_r+0x14>
   194d0:	6b21      	ldr	r1, [r4, #48]	; 0x30
   194d2:	2900      	cmp	r1, #0
   194d4:	d00a      	beq.n	194ec <__swsetup_r+0xb0>
   194d6:	0023      	movs	r3, r4
   194d8:	3340      	adds	r3, #64	; 0x40
   194da:	4299      	cmp	r1, r3
   194dc:	d004      	beq.n	194e8 <__swsetup_r+0xac>
   194de:	0028      	movs	r0, r5
   194e0:	f001 fa44 	bl	1a96c <_free_r>
   194e4:	230c      	movs	r3, #12
   194e6:	5ee2      	ldrsh	r2, [r4, r3]
   194e8:	2300      	movs	r3, #0
   194ea:	6323      	str	r3, [r4, #48]	; 0x30
   194ec:	2324      	movs	r3, #36	; 0x24
   194ee:	439a      	bics	r2, r3
   194f0:	2300      	movs	r3, #0
   194f2:	6921      	ldr	r1, [r4, #16]
   194f4:	6063      	str	r3, [r4, #4]
   194f6:	6021      	str	r1, [r4, #0]
   194f8:	e7c2      	b.n	19480 <__swsetup_r+0x44>
   194fa:	2309      	movs	r3, #9
   194fc:	602b      	str	r3, [r5, #0]
   194fe:	2340      	movs	r3, #64	; 0x40
   19500:	2001      	movs	r0, #1
   19502:	431a      	orrs	r2, r3
   19504:	81a2      	strh	r2, [r4, #12]
   19506:	4240      	negs	r0, r0
   19508:	e7b4      	b.n	19474 <__swsetup_r+0x38>
   1950a:	46c0      	nop			; (mov r8, r8)
   1950c:	20000038 	.word	0x20000038

00019510 <register_fini>:
   19510:	4b03      	ldr	r3, [pc, #12]	; (19520 <register_fini+0x10>)
   19512:	b510      	push	{r4, lr}
   19514:	2b00      	cmp	r3, #0
   19516:	d002      	beq.n	1951e <register_fini+0xe>
   19518:	4802      	ldr	r0, [pc, #8]	; (19524 <register_fini+0x14>)
   1951a:	f000 f805 	bl	19528 <atexit>
   1951e:	bd10      	pop	{r4, pc}
   19520:	00000000 	.word	0x00000000
   19524:	0001a899 	.word	0x0001a899

00019528 <atexit>:
   19528:	b510      	push	{r4, lr}
   1952a:	0001      	movs	r1, r0
   1952c:	2300      	movs	r3, #0
   1952e:	2200      	movs	r2, #0
   19530:	2000      	movs	r0, #0
   19532:	f002 ff23 	bl	1c37c <__register_exitproc>
   19536:	bd10      	pop	{r4, pc}

00019538 <quorem>:
   19538:	b5f0      	push	{r4, r5, r6, r7, lr}
   1953a:	4645      	mov	r5, r8
   1953c:	4680      	mov	r8, r0
   1953e:	46de      	mov	lr, fp
   19540:	4657      	mov	r7, sl
   19542:	464e      	mov	r6, r9
   19544:	4642      	mov	r2, r8
   19546:	b5e0      	push	{r5, r6, r7, lr}
   19548:	690c      	ldr	r4, [r1, #16]
   1954a:	6912      	ldr	r2, [r2, #16]
   1954c:	b085      	sub	sp, #20
   1954e:	000b      	movs	r3, r1
   19550:	9102      	str	r1, [sp, #8]
   19552:	2000      	movs	r0, #0
   19554:	4294      	cmp	r4, r2
   19556:	dd00      	ble.n	1955a <quorem+0x22>
   19558:	e090      	b.n	1967c <quorem+0x144>
   1955a:	2214      	movs	r2, #20
   1955c:	4694      	mov	ip, r2
   1955e:	4463      	add	r3, ip
   19560:	4699      	mov	r9, r3
   19562:	464a      	mov	r2, r9
   19564:	3c01      	subs	r4, #1
   19566:	00a3      	lsls	r3, r4, #2
   19568:	18d6      	adds	r6, r2, r3
   1956a:	2214      	movs	r2, #20
   1956c:	4442      	add	r2, r8
   1956e:	4693      	mov	fp, r2
   19570:	449b      	add	fp, r3
   19572:	6833      	ldr	r3, [r6, #0]
   19574:	0015      	movs	r5, r2
   19576:	1c59      	adds	r1, r3, #1
   19578:	465b      	mov	r3, fp
   1957a:	6818      	ldr	r0, [r3, #0]
   1957c:	9201      	str	r2, [sp, #4]
   1957e:	f7fb fa05 	bl	1498c <__udivsi3>
   19582:	1e03      	subs	r3, r0, #0
   19584:	9000      	str	r0, [sp, #0]
   19586:	d042      	beq.n	1960e <quorem+0xd6>
   19588:	0029      	movs	r1, r5
   1958a:	2700      	movs	r7, #0
   1958c:	464d      	mov	r5, r9
   1958e:	2000      	movs	r0, #0
   19590:	46b1      	mov	r9, r6
   19592:	46a2      	mov	sl, r4
   19594:	003e      	movs	r6, r7
   19596:	0004      	movs	r4, r0
   19598:	469c      	mov	ip, r3
   1959a:	002f      	movs	r7, r5
   1959c:	0008      	movs	r0, r1
   1959e:	9503      	str	r5, [sp, #12]
   195a0:	4663      	mov	r3, ip
   195a2:	cf04      	ldmia	r7!, {r2}
   195a4:	0415      	lsls	r5, r2, #16
   195a6:	0c2d      	lsrs	r5, r5, #16
   195a8:	435d      	muls	r5, r3
   195aa:	0c12      	lsrs	r2, r2, #16
   195ac:	435a      	muls	r2, r3
   195ae:	19ad      	adds	r5, r5, r6
   195b0:	0c2b      	lsrs	r3, r5, #16
   195b2:	18d2      	adds	r2, r2, r3
   195b4:	6803      	ldr	r3, [r0, #0]
   195b6:	042d      	lsls	r5, r5, #16
   195b8:	0419      	lsls	r1, r3, #16
   195ba:	0c09      	lsrs	r1, r1, #16
   195bc:	1909      	adds	r1, r1, r4
   195be:	0c16      	lsrs	r6, r2, #16
   195c0:	0c2d      	lsrs	r5, r5, #16
   195c2:	0412      	lsls	r2, r2, #16
   195c4:	1b49      	subs	r1, r1, r5
   195c6:	0c12      	lsrs	r2, r2, #16
   195c8:	0c1b      	lsrs	r3, r3, #16
   195ca:	1a9b      	subs	r3, r3, r2
   195cc:	140a      	asrs	r2, r1, #16
   195ce:	189b      	adds	r3, r3, r2
   195d0:	0409      	lsls	r1, r1, #16
   195d2:	141c      	asrs	r4, r3, #16
   195d4:	0c09      	lsrs	r1, r1, #16
   195d6:	041b      	lsls	r3, r3, #16
   195d8:	4319      	orrs	r1, r3
   195da:	c002      	stmia	r0!, {r1}
   195dc:	45b9      	cmp	r9, r7
   195de:	d2df      	bcs.n	195a0 <quorem+0x68>
   195e0:	9b03      	ldr	r3, [sp, #12]
   195e2:	464e      	mov	r6, r9
   195e4:	4699      	mov	r9, r3
   195e6:	465b      	mov	r3, fp
   195e8:	681b      	ldr	r3, [r3, #0]
   195ea:	4654      	mov	r4, sl
   195ec:	2b00      	cmp	r3, #0
   195ee:	d10e      	bne.n	1960e <quorem+0xd6>
   195f0:	465b      	mov	r3, fp
   195f2:	9a01      	ldr	r2, [sp, #4]
   195f4:	3b04      	subs	r3, #4
   195f6:	429a      	cmp	r2, r3
   195f8:	d304      	bcc.n	19604 <quorem+0xcc>
   195fa:	e006      	b.n	1960a <quorem+0xd2>
   195fc:	3b04      	subs	r3, #4
   195fe:	3c01      	subs	r4, #1
   19600:	429a      	cmp	r2, r3
   19602:	d202      	bcs.n	1960a <quorem+0xd2>
   19604:	6819      	ldr	r1, [r3, #0]
   19606:	2900      	cmp	r1, #0
   19608:	d0f8      	beq.n	195fc <quorem+0xc4>
   1960a:	4643      	mov	r3, r8
   1960c:	611c      	str	r4, [r3, #16]
   1960e:	9902      	ldr	r1, [sp, #8]
   19610:	4640      	mov	r0, r8
   19612:	f002 fa7b 	bl	1bb0c <__mcmp>
   19616:	2800      	cmp	r0, #0
   19618:	db2f      	blt.n	1967a <quorem+0x142>
   1961a:	464f      	mov	r7, r9
   1961c:	2000      	movs	r0, #0
   1961e:	9b00      	ldr	r3, [sp, #0]
   19620:	9d01      	ldr	r5, [sp, #4]
   19622:	3301      	adds	r3, #1
   19624:	9300      	str	r3, [sp, #0]
   19626:	682b      	ldr	r3, [r5, #0]
   19628:	cf02      	ldmia	r7!, {r1}
   1962a:	041a      	lsls	r2, r3, #16
   1962c:	0c12      	lsrs	r2, r2, #16
   1962e:	1810      	adds	r0, r2, r0
   19630:	040a      	lsls	r2, r1, #16
   19632:	0c12      	lsrs	r2, r2, #16
   19634:	1a82      	subs	r2, r0, r2
   19636:	0c09      	lsrs	r1, r1, #16
   19638:	0c1b      	lsrs	r3, r3, #16
   1963a:	1a5b      	subs	r3, r3, r1
   1963c:	1411      	asrs	r1, r2, #16
   1963e:	185b      	adds	r3, r3, r1
   19640:	0412      	lsls	r2, r2, #16
   19642:	1418      	asrs	r0, r3, #16
   19644:	0c12      	lsrs	r2, r2, #16
   19646:	041b      	lsls	r3, r3, #16
   19648:	4313      	orrs	r3, r2
   1964a:	c508      	stmia	r5!, {r3}
   1964c:	42be      	cmp	r6, r7
   1964e:	d2ea      	bcs.n	19626 <quorem+0xee>
   19650:	9901      	ldr	r1, [sp, #4]
   19652:	00a3      	lsls	r3, r4, #2
   19654:	468c      	mov	ip, r1
   19656:	4463      	add	r3, ip
   19658:	681a      	ldr	r2, [r3, #0]
   1965a:	2a00      	cmp	r2, #0
   1965c:	d10d      	bne.n	1967a <quorem+0x142>
   1965e:	3b04      	subs	r3, #4
   19660:	000a      	movs	r2, r1
   19662:	4299      	cmp	r1, r3
   19664:	d304      	bcc.n	19670 <quorem+0x138>
   19666:	e006      	b.n	19676 <quorem+0x13e>
   19668:	3b04      	subs	r3, #4
   1966a:	3c01      	subs	r4, #1
   1966c:	429a      	cmp	r2, r3
   1966e:	d202      	bcs.n	19676 <quorem+0x13e>
   19670:	6819      	ldr	r1, [r3, #0]
   19672:	2900      	cmp	r1, #0
   19674:	d0f8      	beq.n	19668 <quorem+0x130>
   19676:	4643      	mov	r3, r8
   19678:	611c      	str	r4, [r3, #16]
   1967a:	9800      	ldr	r0, [sp, #0]
   1967c:	b005      	add	sp, #20
   1967e:	bc3c      	pop	{r2, r3, r4, r5}
   19680:	4690      	mov	r8, r2
   19682:	4699      	mov	r9, r3
   19684:	46a2      	mov	sl, r4
   19686:	46ab      	mov	fp, r5
   19688:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1968a:	46c0      	nop			; (mov r8, r8)

0001968c <_dtoa_r>:
   1968c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1968e:	4657      	mov	r7, sl
   19690:	464e      	mov	r6, r9
   19692:	4645      	mov	r5, r8
   19694:	46de      	mov	lr, fp
   19696:	b5e0      	push	{r5, r6, r7, lr}
   19698:	6c01      	ldr	r1, [r0, #64]	; 0x40
   1969a:	b099      	sub	sp, #100	; 0x64
   1969c:	4682      	mov	sl, r0
   1969e:	001d      	movs	r5, r3
   196a0:	0016      	movs	r6, r2
   196a2:	001f      	movs	r7, r3
   196a4:	2900      	cmp	r1, #0
   196a6:	d009      	beq.n	196bc <_dtoa_r+0x30>
   196a8:	2301      	movs	r3, #1
   196aa:	6c42      	ldr	r2, [r0, #68]	; 0x44
   196ac:	4093      	lsls	r3, r2
   196ae:	604a      	str	r2, [r1, #4]
   196b0:	608b      	str	r3, [r1, #8]
   196b2:	f002 f81f 	bl	1b6f4 <_Bfree>
   196b6:	2300      	movs	r3, #0
   196b8:	4652      	mov	r2, sl
   196ba:	6413      	str	r3, [r2, #64]	; 0x40
   196bc:	46b8      	mov	r8, r7
   196be:	2f00      	cmp	r7, #0
   196c0:	db37      	blt.n	19732 <_dtoa_r+0xa6>
   196c2:	2300      	movs	r3, #0
   196c4:	9a25      	ldr	r2, [sp, #148]	; 0x94
   196c6:	6013      	str	r3, [r2, #0]
   196c8:	4642      	mov	r2, r8
   196ca:	4bd6      	ldr	r3, [pc, #856]	; (19a24 <_dtoa_r+0x398>)
   196cc:	401a      	ands	r2, r3
   196ce:	429a      	cmp	r2, r3
   196d0:	d018      	beq.n	19704 <_dtoa_r+0x78>
   196d2:	2200      	movs	r2, #0
   196d4:	2300      	movs	r3, #0
   196d6:	0030      	movs	r0, r6
   196d8:	0039      	movs	r1, r7
   196da:	f7fd fdc3 	bl	17264 <__aeabi_dcmpeq>
   196de:	2800      	cmp	r0, #0
   196e0:	d02f      	beq.n	19742 <_dtoa_r+0xb6>
   196e2:	2301      	movs	r3, #1
   196e4:	9a24      	ldr	r2, [sp, #144]	; 0x90
   196e6:	6013      	str	r3, [r2, #0]
   196e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   196ea:	2b00      	cmp	r3, #0
   196ec:	d100      	bne.n	196f0 <_dtoa_r+0x64>
   196ee:	e22a      	b.n	19b46 <_dtoa_r+0x4ba>
   196f0:	48cd      	ldr	r0, [pc, #820]	; (19a28 <_dtoa_r+0x39c>)
   196f2:	6018      	str	r0, [r3, #0]
   196f4:	3801      	subs	r0, #1
   196f6:	b019      	add	sp, #100	; 0x64
   196f8:	bc3c      	pop	{r2, r3, r4, r5}
   196fa:	4690      	mov	r8, r2
   196fc:	4699      	mov	r9, r3
   196fe:	46a2      	mov	sl, r4
   19700:	46ab      	mov	fp, r5
   19702:	bdf0      	pop	{r4, r5, r6, r7, pc}
   19704:	4bc9      	ldr	r3, [pc, #804]	; (19a2c <_dtoa_r+0x3a0>)
   19706:	9a24      	ldr	r2, [sp, #144]	; 0x90
   19708:	6013      	str	r3, [r2, #0]
   1970a:	2e00      	cmp	r6, #0
   1970c:	d10b      	bne.n	19726 <_dtoa_r+0x9a>
   1970e:	4643      	mov	r3, r8
   19710:	0318      	lsls	r0, r3, #12
   19712:	d108      	bne.n	19726 <_dtoa_r+0x9a>
   19714:	9b26      	ldr	r3, [sp, #152]	; 0x98
   19716:	48c6      	ldr	r0, [pc, #792]	; (19a30 <_dtoa_r+0x3a4>)
   19718:	2b00      	cmp	r3, #0
   1971a:	d0ec      	beq.n	196f6 <_dtoa_r+0x6a>
   1971c:	0003      	movs	r3, r0
   1971e:	3308      	adds	r3, #8
   19720:	9a26      	ldr	r2, [sp, #152]	; 0x98
   19722:	6013      	str	r3, [r2, #0]
   19724:	e7e7      	b.n	196f6 <_dtoa_r+0x6a>
   19726:	9b26      	ldr	r3, [sp, #152]	; 0x98
   19728:	48c2      	ldr	r0, [pc, #776]	; (19a34 <_dtoa_r+0x3a8>)
   1972a:	2b00      	cmp	r3, #0
   1972c:	d0e3      	beq.n	196f6 <_dtoa_r+0x6a>
   1972e:	1cc3      	adds	r3, r0, #3
   19730:	e7f6      	b.n	19720 <_dtoa_r+0x94>
   19732:	2301      	movs	r3, #1
   19734:	9a25      	ldr	r2, [sp, #148]	; 0x94
   19736:	0068      	lsls	r0, r5, #1
   19738:	6013      	str	r3, [r2, #0]
   1973a:	0843      	lsrs	r3, r0, #1
   1973c:	4698      	mov	r8, r3
   1973e:	001f      	movs	r7, r3
   19740:	e7c2      	b.n	196c8 <_dtoa_r+0x3c>
   19742:	ab16      	add	r3, sp, #88	; 0x58
   19744:	9301      	str	r3, [sp, #4]
   19746:	ab17      	add	r3, sp, #92	; 0x5c
   19748:	9300      	str	r3, [sp, #0]
   1974a:	0032      	movs	r2, r6
   1974c:	003b      	movs	r3, r7
   1974e:	4650      	mov	r0, sl
   19750:	f002 fa92 	bl	1bc78 <__d2b>
   19754:	4643      	mov	r3, r8
   19756:	4683      	mov	fp, r0
   19758:	0d1a      	lsrs	r2, r3, #20
   1975a:	d100      	bne.n	1975e <_dtoa_r+0xd2>
   1975c:	e1d6      	b.n	19b0c <_dtoa_r+0x480>
   1975e:	033b      	lsls	r3, r7, #12
   19760:	4cb5      	ldr	r4, [pc, #724]	; (19a38 <_dtoa_r+0x3ac>)
   19762:	0b1b      	lsrs	r3, r3, #12
   19764:	431c      	orrs	r4, r3
   19766:	4bb5      	ldr	r3, [pc, #724]	; (19a3c <_dtoa_r+0x3b0>)
   19768:	0030      	movs	r0, r6
   1976a:	4698      	mov	r8, r3
   1976c:	9b16      	ldr	r3, [sp, #88]	; 0x58
   1976e:	0021      	movs	r1, r4
   19770:	4699      	mov	r9, r3
   19772:	2300      	movs	r3, #0
   19774:	4490      	add	r8, r2
   19776:	930f      	str	r3, [sp, #60]	; 0x3c
   19778:	2200      	movs	r2, #0
   1977a:	4bb1      	ldr	r3, [pc, #708]	; (19a40 <_dtoa_r+0x3b4>)
   1977c:	f7fd f99e 	bl	16abc <__aeabi_dsub>
   19780:	4ab0      	ldr	r2, [pc, #704]	; (19a44 <_dtoa_r+0x3b8>)
   19782:	4bb1      	ldr	r3, [pc, #708]	; (19a48 <_dtoa_r+0x3bc>)
   19784:	f7fc ff1a 	bl	165bc <__aeabi_dmul>
   19788:	4ab0      	ldr	r2, [pc, #704]	; (19a4c <_dtoa_r+0x3c0>)
   1978a:	4bb1      	ldr	r3, [pc, #708]	; (19a50 <_dtoa_r+0x3c4>)
   1978c:	f7fc f8d2 	bl	15934 <__aeabi_dadd>
   19790:	0004      	movs	r4, r0
   19792:	4640      	mov	r0, r8
   19794:	000d      	movs	r5, r1
   19796:	f7fd fcdb 	bl	17150 <__aeabi_i2d>
   1979a:	4aae      	ldr	r2, [pc, #696]	; (19a54 <_dtoa_r+0x3c8>)
   1979c:	4bae      	ldr	r3, [pc, #696]	; (19a58 <_dtoa_r+0x3cc>)
   1979e:	f7fc ff0d 	bl	165bc <__aeabi_dmul>
   197a2:	0002      	movs	r2, r0
   197a4:	000b      	movs	r3, r1
   197a6:	0020      	movs	r0, r4
   197a8:	0029      	movs	r1, r5
   197aa:	f7fc f8c3 	bl	15934 <__aeabi_dadd>
   197ae:	0004      	movs	r4, r0
   197b0:	000d      	movs	r5, r1
   197b2:	f7fd fc99 	bl	170e8 <__aeabi_d2iz>
   197b6:	2200      	movs	r2, #0
   197b8:	9003      	str	r0, [sp, #12]
   197ba:	2300      	movs	r3, #0
   197bc:	0020      	movs	r0, r4
   197be:	0029      	movs	r1, r5
   197c0:	f7fd fd56 	bl	17270 <__aeabi_dcmplt>
   197c4:	2800      	cmp	r0, #0
   197c6:	d000      	beq.n	197ca <_dtoa_r+0x13e>
   197c8:	e2b1      	b.n	19d2e <_dtoa_r+0x6a2>
   197ca:	2301      	movs	r3, #1
   197cc:	9c03      	ldr	r4, [sp, #12]
   197ce:	930c      	str	r3, [sp, #48]	; 0x30
   197d0:	2c16      	cmp	r4, #22
   197d2:	d810      	bhi.n	197f6 <_dtoa_r+0x16a>
   197d4:	49a1      	ldr	r1, [pc, #644]	; (19a5c <_dtoa_r+0x3d0>)
   197d6:	00e3      	lsls	r3, r4, #3
   197d8:	18c9      	adds	r1, r1, r3
   197da:	0032      	movs	r2, r6
   197dc:	6808      	ldr	r0, [r1, #0]
   197de:	6849      	ldr	r1, [r1, #4]
   197e0:	003b      	movs	r3, r7
   197e2:	f7fd fd59 	bl	17298 <__aeabi_dcmpgt>
   197e6:	2800      	cmp	r0, #0
   197e8:	d100      	bne.n	197ec <_dtoa_r+0x160>
   197ea:	e31d      	b.n	19e28 <_dtoa_r+0x79c>
   197ec:	0023      	movs	r3, r4
   197ee:	3b01      	subs	r3, #1
   197f0:	9303      	str	r3, [sp, #12]
   197f2:	2300      	movs	r3, #0
   197f4:	930c      	str	r3, [sp, #48]	; 0x30
   197f6:	464b      	mov	r3, r9
   197f8:	4642      	mov	r2, r8
   197fa:	1a9a      	subs	r2, r3, r2
   197fc:	2300      	movs	r3, #0
   197fe:	9306      	str	r3, [sp, #24]
   19800:	0013      	movs	r3, r2
   19802:	3b01      	subs	r3, #1
   19804:	9304      	str	r3, [sp, #16]
   19806:	d500      	bpl.n	1980a <_dtoa_r+0x17e>
   19808:	e2a1      	b.n	19d4e <_dtoa_r+0x6c2>
   1980a:	9b03      	ldr	r3, [sp, #12]
   1980c:	2b00      	cmp	r3, #0
   1980e:	da00      	bge.n	19812 <_dtoa_r+0x186>
   19810:	e284      	b.n	19d1c <_dtoa_r+0x690>
   19812:	469c      	mov	ip, r3
   19814:	930d      	str	r3, [sp, #52]	; 0x34
   19816:	2300      	movs	r3, #0
   19818:	9a04      	ldr	r2, [sp, #16]
   1981a:	4699      	mov	r9, r3
   1981c:	0011      	movs	r1, r2
   1981e:	4461      	add	r1, ip
   19820:	9104      	str	r1, [sp, #16]
   19822:	9b22      	ldr	r3, [sp, #136]	; 0x88
   19824:	2b09      	cmp	r3, #9
   19826:	d900      	bls.n	1982a <_dtoa_r+0x19e>
   19828:	e18f      	b.n	19b4a <_dtoa_r+0x4be>
   1982a:	2401      	movs	r4, #1
   1982c:	2b05      	cmp	r3, #5
   1982e:	dd02      	ble.n	19836 <_dtoa_r+0x1aa>
   19830:	2400      	movs	r4, #0
   19832:	3b04      	subs	r3, #4
   19834:	9322      	str	r3, [sp, #136]	; 0x88
   19836:	9b22      	ldr	r3, [sp, #136]	; 0x88
   19838:	2b03      	cmp	r3, #3
   1983a:	d101      	bne.n	19840 <_dtoa_r+0x1b4>
   1983c:	f000 fcce 	bl	1a1dc <_dtoa_r+0xb50>
   19840:	dc01      	bgt.n	19846 <_dtoa_r+0x1ba>
   19842:	f000 fc92 	bl	1a16a <_dtoa_r+0xade>
   19846:	9b22      	ldr	r3, [sp, #136]	; 0x88
   19848:	2b04      	cmp	r3, #4
   1984a:	d101      	bne.n	19850 <_dtoa_r+0x1c4>
   1984c:	f000 fc40 	bl	1a0d0 <_dtoa_r+0xa44>
   19850:	2301      	movs	r3, #1
   19852:	930b      	str	r3, [sp, #44]	; 0x2c
   19854:	9b22      	ldr	r3, [sp, #136]	; 0x88
   19856:	2b05      	cmp	r3, #5
   19858:	d001      	beq.n	1985e <_dtoa_r+0x1d2>
   1985a:	f000 fc8b 	bl	1a174 <_dtoa_r+0xae8>
   1985e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
   19860:	9b03      	ldr	r3, [sp, #12]
   19862:	4694      	mov	ip, r2
   19864:	4463      	add	r3, ip
   19866:	930e      	str	r3, [sp, #56]	; 0x38
   19868:	3301      	adds	r3, #1
   1986a:	9307      	str	r3, [sp, #28]
   1986c:	1e1d      	subs	r5, r3, #0
   1986e:	dc01      	bgt.n	19874 <_dtoa_r+0x1e8>
   19870:	f000 fd49 	bl	1a306 <_dtoa_r+0xc7a>
   19874:	9b07      	ldr	r3, [sp, #28]
   19876:	4698      	mov	r8, r3
   19878:	2300      	movs	r3, #0
   1987a:	4652      	mov	r2, sl
   1987c:	2100      	movs	r1, #0
   1987e:	6453      	str	r3, [r2, #68]	; 0x44
   19880:	2d17      	cmp	r5, #23
   19882:	d90a      	bls.n	1989a <_dtoa_r+0x20e>
   19884:	2201      	movs	r2, #1
   19886:	3304      	adds	r3, #4
   19888:	005b      	lsls	r3, r3, #1
   1988a:	0018      	movs	r0, r3
   1988c:	3014      	adds	r0, #20
   1988e:	0011      	movs	r1, r2
   19890:	3201      	adds	r2, #1
   19892:	4285      	cmp	r5, r0
   19894:	d2f8      	bcs.n	19888 <_dtoa_r+0x1fc>
   19896:	4653      	mov	r3, sl
   19898:	6459      	str	r1, [r3, #68]	; 0x44
   1989a:	4650      	mov	r0, sl
   1989c:	f001 ff02 	bl	1b6a4 <_Balloc>
   198a0:	4653      	mov	r3, sl
   198a2:	6418      	str	r0, [r3, #64]	; 0x40
   198a4:	4643      	mov	r3, r8
   198a6:	900a      	str	r0, [sp, #40]	; 0x28
   198a8:	2b0e      	cmp	r3, #14
   198aa:	d900      	bls.n	198ae <_dtoa_r+0x222>
   198ac:	e161      	b.n	19b72 <_dtoa_r+0x4e6>
   198ae:	2c00      	cmp	r4, #0
   198b0:	d100      	bne.n	198b4 <_dtoa_r+0x228>
   198b2:	e15e      	b.n	19b72 <_dtoa_r+0x4e6>
   198b4:	9610      	str	r6, [sp, #64]	; 0x40
   198b6:	9711      	str	r7, [sp, #68]	; 0x44
   198b8:	9e03      	ldr	r6, [sp, #12]
   198ba:	2e00      	cmp	r6, #0
   198bc:	dc01      	bgt.n	198c2 <_dtoa_r+0x236>
   198be:	f000 fd25 	bl	1a30c <_dtoa_r+0xc80>
   198c2:	0032      	movs	r2, r6
   198c4:	210f      	movs	r1, #15
   198c6:	4b65      	ldr	r3, [pc, #404]	; (19a5c <_dtoa_r+0x3d0>)
   198c8:	400a      	ands	r2, r1
   198ca:	00d2      	lsls	r2, r2, #3
   198cc:	189b      	adds	r3, r3, r2
   198ce:	1136      	asrs	r6, r6, #4
   198d0:	681c      	ldr	r4, [r3, #0]
   198d2:	685d      	ldr	r5, [r3, #4]
   198d4:	06f3      	lsls	r3, r6, #27
   198d6:	d401      	bmi.n	198dc <_dtoa_r+0x250>
   198d8:	f000 fcca 	bl	1a270 <_dtoa_r+0xbe4>
   198dc:	4b60      	ldr	r3, [pc, #384]	; (19a60 <_dtoa_r+0x3d4>)
   198de:	400e      	ands	r6, r1
   198e0:	6a1a      	ldr	r2, [r3, #32]
   198e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   198e4:	9810      	ldr	r0, [sp, #64]	; 0x40
   198e6:	9911      	ldr	r1, [sp, #68]	; 0x44
   198e8:	f7fc fb34 	bl	15f54 <__aeabi_ddiv>
   198ec:	2303      	movs	r3, #3
   198ee:	4698      	mov	r8, r3
   198f0:	9008      	str	r0, [sp, #32]
   198f2:	9109      	str	r1, [sp, #36]	; 0x24
   198f4:	2e00      	cmp	r6, #0
   198f6:	d011      	beq.n	1991c <_dtoa_r+0x290>
   198f8:	4f59      	ldr	r7, [pc, #356]	; (19a60 <_dtoa_r+0x3d4>)
   198fa:	2301      	movs	r3, #1
   198fc:	4233      	tst	r3, r6
   198fe:	d009      	beq.n	19914 <_dtoa_r+0x288>
   19900:	469c      	mov	ip, r3
   19902:	683a      	ldr	r2, [r7, #0]
   19904:	687b      	ldr	r3, [r7, #4]
   19906:	0020      	movs	r0, r4
   19908:	0029      	movs	r1, r5
   1990a:	44e0      	add	r8, ip
   1990c:	f7fc fe56 	bl	165bc <__aeabi_dmul>
   19910:	0004      	movs	r4, r0
   19912:	000d      	movs	r5, r1
   19914:	1076      	asrs	r6, r6, #1
   19916:	3708      	adds	r7, #8
   19918:	2e00      	cmp	r6, #0
   1991a:	d1ee      	bne.n	198fa <_dtoa_r+0x26e>
   1991c:	0022      	movs	r2, r4
   1991e:	9808      	ldr	r0, [sp, #32]
   19920:	9909      	ldr	r1, [sp, #36]	; 0x24
   19922:	002b      	movs	r3, r5
   19924:	f7fc fb16 	bl	15f54 <__aeabi_ddiv>
   19928:	0006      	movs	r6, r0
   1992a:	000f      	movs	r7, r1
   1992c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1992e:	2b00      	cmp	r3, #0
   19930:	d009      	beq.n	19946 <_dtoa_r+0x2ba>
   19932:	2200      	movs	r2, #0
   19934:	4b40      	ldr	r3, [pc, #256]	; (19a38 <_dtoa_r+0x3ac>)
   19936:	0030      	movs	r0, r6
   19938:	0039      	movs	r1, r7
   1993a:	f7fd fc99 	bl	17270 <__aeabi_dcmplt>
   1993e:	2800      	cmp	r0, #0
   19940:	d001      	beq.n	19946 <_dtoa_r+0x2ba>
   19942:	f000 fdc2 	bl	1a4ca <_dtoa_r+0xe3e>
   19946:	4640      	mov	r0, r8
   19948:	f7fd fc02 	bl	17150 <__aeabi_i2d>
   1994c:	0032      	movs	r2, r6
   1994e:	003b      	movs	r3, r7
   19950:	f7fc fe34 	bl	165bc <__aeabi_dmul>
   19954:	2200      	movs	r2, #0
   19956:	4b43      	ldr	r3, [pc, #268]	; (19a64 <_dtoa_r+0x3d8>)
   19958:	f7fb ffec 	bl	15934 <__aeabi_dadd>
   1995c:	4a42      	ldr	r2, [pc, #264]	; (19a68 <_dtoa_r+0x3dc>)
   1995e:	000b      	movs	r3, r1
   19960:	4694      	mov	ip, r2
   19962:	4463      	add	r3, ip
   19964:	9008      	str	r0, [sp, #32]
   19966:	9109      	str	r1, [sp, #36]	; 0x24
   19968:	9309      	str	r3, [sp, #36]	; 0x24
   1996a:	9b07      	ldr	r3, [sp, #28]
   1996c:	2b00      	cmp	r3, #0
   1996e:	d101      	bne.n	19974 <_dtoa_r+0x2e8>
   19970:	f000 fc50 	bl	1a214 <_dtoa_r+0xb88>
   19974:	9b03      	ldr	r3, [sp, #12]
   19976:	9313      	str	r3, [sp, #76]	; 0x4c
   19978:	9b07      	ldr	r3, [sp, #28]
   1997a:	9312      	str	r3, [sp, #72]	; 0x48
   1997c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1997e:	2b00      	cmp	r3, #0
   19980:	d101      	bne.n	19986 <_dtoa_r+0x2fa>
   19982:	f000 fd1d 	bl	1a3c0 <_dtoa_r+0xd34>
   19986:	9b12      	ldr	r3, [sp, #72]	; 0x48
   19988:	2000      	movs	r0, #0
   1998a:	1e5a      	subs	r2, r3, #1
   1998c:	4b33      	ldr	r3, [pc, #204]	; (19a5c <_dtoa_r+0x3d0>)
   1998e:	00d2      	lsls	r2, r2, #3
   19990:	189b      	adds	r3, r3, r2
   19992:	681a      	ldr	r2, [r3, #0]
   19994:	685b      	ldr	r3, [r3, #4]
   19996:	4935      	ldr	r1, [pc, #212]	; (19a6c <_dtoa_r+0x3e0>)
   19998:	f7fc fadc 	bl	15f54 <__aeabi_ddiv>
   1999c:	9a08      	ldr	r2, [sp, #32]
   1999e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   199a0:	f7fd f88c 	bl	16abc <__aeabi_dsub>
   199a4:	9008      	str	r0, [sp, #32]
   199a6:	9109      	str	r1, [sp, #36]	; 0x24
   199a8:	0039      	movs	r1, r7
   199aa:	0030      	movs	r0, r6
   199ac:	f7fd fb9c 	bl	170e8 <__aeabi_d2iz>
   199b0:	0004      	movs	r4, r0
   199b2:	f7fd fbcd 	bl	17150 <__aeabi_i2d>
   199b6:	0002      	movs	r2, r0
   199b8:	000b      	movs	r3, r1
   199ba:	0030      	movs	r0, r6
   199bc:	0039      	movs	r1, r7
   199be:	f7fd f87d 	bl	16abc <__aeabi_dsub>
   199c2:	0005      	movs	r5, r0
   199c4:	000e      	movs	r6, r1
   199c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   199c8:	3430      	adds	r4, #48	; 0x30
   199ca:	1c51      	adds	r1, r2, #1
   199cc:	b2e7      	uxtb	r7, r4
   199ce:	9114      	str	r1, [sp, #80]	; 0x50
   199d0:	7017      	strb	r7, [r2, #0]
   199d2:	0033      	movs	r3, r6
   199d4:	9808      	ldr	r0, [sp, #32]
   199d6:	9909      	ldr	r1, [sp, #36]	; 0x24
   199d8:	002a      	movs	r2, r5
   199da:	f7fd fc5d 	bl	17298 <__aeabi_dcmpgt>
   199de:	2800      	cmp	r0, #0
   199e0:	d001      	beq.n	199e6 <_dtoa_r+0x35a>
   199e2:	f000 fdfe 	bl	1a5e2 <_dtoa_r+0xf56>
   199e6:	002a      	movs	r2, r5
   199e8:	0033      	movs	r3, r6
   199ea:	2000      	movs	r0, #0
   199ec:	4912      	ldr	r1, [pc, #72]	; (19a38 <_dtoa_r+0x3ac>)
   199ee:	f7fd f865 	bl	16abc <__aeabi_dsub>
   199f2:	0002      	movs	r2, r0
   199f4:	000b      	movs	r3, r1
   199f6:	9808      	ldr	r0, [sp, #32]
   199f8:	9909      	ldr	r1, [sp, #36]	; 0x24
   199fa:	f7fd fc4d 	bl	17298 <__aeabi_dcmpgt>
   199fe:	2800      	cmp	r0, #0
   19a00:	d001      	beq.n	19a06 <_dtoa_r+0x37a>
   19a02:	f000 fde7 	bl	1a5d4 <_dtoa_r+0xf48>
   19a06:	9b12      	ldr	r3, [sp, #72]	; 0x48
   19a08:	2b01      	cmp	r3, #1
   19a0a:	d101      	bne.n	19a10 <_dtoa_r+0x384>
   19a0c:	f000 fc78 	bl	1a300 <_dtoa_r+0xc74>
   19a10:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   19a12:	9b12      	ldr	r3, [sp, #72]	; 0x48
   19a14:	4694      	mov	ip, r2
   19a16:	4463      	add	r3, ip
   19a18:	4698      	mov	r8, r3
   19a1a:	464b      	mov	r3, r9
   19a1c:	9312      	str	r3, [sp, #72]	; 0x48
   19a1e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   19a20:	4699      	mov	r9, r3
   19a22:	e038      	b.n	19a96 <_dtoa_r+0x40a>
   19a24:	7ff00000 	.word	0x7ff00000
   19a28:	0001e335 	.word	0x0001e335
   19a2c:	0000270f 	.word	0x0000270f
   19a30:	0001e358 	.word	0x0001e358
   19a34:	0001e364 	.word	0x0001e364
   19a38:	3ff00000 	.word	0x3ff00000
   19a3c:	fffffc01 	.word	0xfffffc01
   19a40:	3ff80000 	.word	0x3ff80000
   19a44:	636f4361 	.word	0x636f4361
   19a48:	3fd287a7 	.word	0x3fd287a7
   19a4c:	8b60c8b3 	.word	0x8b60c8b3
   19a50:	3fc68a28 	.word	0x3fc68a28
   19a54:	509f79fb 	.word	0x509f79fb
   19a58:	3fd34413 	.word	0x3fd34413
   19a5c:	0001e3a0 	.word	0x0001e3a0
   19a60:	0001e378 	.word	0x0001e378
   19a64:	401c0000 	.word	0x401c0000
   19a68:	fcc00000 	.word	0xfcc00000
   19a6c:	3fe00000 	.word	0x3fe00000
   19a70:	002a      	movs	r2, r5
   19a72:	0033      	movs	r3, r6
   19a74:	2000      	movs	r0, #0
   19a76:	49b9      	ldr	r1, [pc, #740]	; (19d5c <_dtoa_r+0x6d0>)
   19a78:	f7fd f820 	bl	16abc <__aeabi_dsub>
   19a7c:	9a08      	ldr	r2, [sp, #32]
   19a7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   19a80:	f7fd fbf6 	bl	17270 <__aeabi_dcmplt>
   19a84:	2800      	cmp	r0, #0
   19a86:	d001      	beq.n	19a8c <_dtoa_r+0x400>
   19a88:	f000 fd74 	bl	1a574 <_dtoa_r+0xee8>
   19a8c:	46a1      	mov	r9, r4
   19a8e:	4544      	cmp	r4, r8
   19a90:	d101      	bne.n	19a96 <_dtoa_r+0x40a>
   19a92:	f000 fc33 	bl	1a2fc <_dtoa_r+0xc70>
   19a96:	9808      	ldr	r0, [sp, #32]
   19a98:	9909      	ldr	r1, [sp, #36]	; 0x24
   19a9a:	2200      	movs	r2, #0
   19a9c:	4bb0      	ldr	r3, [pc, #704]	; (19d60 <_dtoa_r+0x6d4>)
   19a9e:	f7fc fd8d 	bl	165bc <__aeabi_dmul>
   19aa2:	2200      	movs	r2, #0
   19aa4:	4bae      	ldr	r3, [pc, #696]	; (19d60 <_dtoa_r+0x6d4>)
   19aa6:	9008      	str	r0, [sp, #32]
   19aa8:	9109      	str	r1, [sp, #36]	; 0x24
   19aaa:	0028      	movs	r0, r5
   19aac:	0031      	movs	r1, r6
   19aae:	f7fc fd85 	bl	165bc <__aeabi_dmul>
   19ab2:	000d      	movs	r5, r1
   19ab4:	0004      	movs	r4, r0
   19ab6:	f7fd fb17 	bl	170e8 <__aeabi_d2iz>
   19aba:	0007      	movs	r7, r0
   19abc:	f7fd fb48 	bl	17150 <__aeabi_i2d>
   19ac0:	0002      	movs	r2, r0
   19ac2:	000b      	movs	r3, r1
   19ac4:	0020      	movs	r0, r4
   19ac6:	0029      	movs	r1, r5
   19ac8:	f7fc fff8 	bl	16abc <__aeabi_dsub>
   19acc:	464b      	mov	r3, r9
   19ace:	3730      	adds	r7, #48	; 0x30
   19ad0:	b2ff      	uxtb	r7, r7
   19ad2:	1c5c      	adds	r4, r3, #1
   19ad4:	701f      	strb	r7, [r3, #0]
   19ad6:	9a08      	ldr	r2, [sp, #32]
   19ad8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   19ada:	0005      	movs	r5, r0
   19adc:	000e      	movs	r6, r1
   19ade:	f7fd fbc7 	bl	17270 <__aeabi_dcmplt>
   19ae2:	2800      	cmp	r0, #0
   19ae4:	d0c4      	beq.n	19a70 <_dtoa_r+0x3e4>
   19ae6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   19ae8:	9303      	str	r3, [sp, #12]
   19aea:	4659      	mov	r1, fp
   19aec:	4650      	mov	r0, sl
   19aee:	f001 fe01 	bl	1b6f4 <_Bfree>
   19af2:	2300      	movs	r3, #0
   19af4:	7023      	strb	r3, [r4, #0]
   19af6:	9b03      	ldr	r3, [sp, #12]
   19af8:	9a24      	ldr	r2, [sp, #144]	; 0x90
   19afa:	3301      	adds	r3, #1
   19afc:	6013      	str	r3, [r2, #0]
   19afe:	9b26      	ldr	r3, [sp, #152]	; 0x98
   19b00:	2b00      	cmp	r3, #0
   19b02:	d100      	bne.n	19b06 <_dtoa_r+0x47a>
   19b04:	e3a8      	b.n	1a258 <_dtoa_r+0xbcc>
   19b06:	601c      	str	r4, [r3, #0]
   19b08:	980a      	ldr	r0, [sp, #40]	; 0x28
   19b0a:	e5f4      	b.n	196f6 <_dtoa_r+0x6a>
   19b0c:	9b16      	ldr	r3, [sp, #88]	; 0x58
   19b0e:	4699      	mov	r9, r3
   19b10:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   19b12:	444b      	add	r3, r9
   19b14:	001c      	movs	r4, r3
   19b16:	4b93      	ldr	r3, [pc, #588]	; (19d64 <_dtoa_r+0x6d8>)
   19b18:	18e3      	adds	r3, r4, r3
   19b1a:	2b20      	cmp	r3, #32
   19b1c:	dc00      	bgt.n	19b20 <_dtoa_r+0x494>
   19b1e:	e17e      	b.n	19e1e <_dtoa_r+0x792>
   19b20:	0031      	movs	r1, r6
   19b22:	4a91      	ldr	r2, [pc, #580]	; (19d68 <_dtoa_r+0x6dc>)
   19b24:	4640      	mov	r0, r8
   19b26:	18a2      	adds	r2, r4, r2
   19b28:	40d1      	lsrs	r1, r2
   19b2a:	000a      	movs	r2, r1
   19b2c:	2140      	movs	r1, #64	; 0x40
   19b2e:	1acb      	subs	r3, r1, r3
   19b30:	4098      	lsls	r0, r3
   19b32:	4310      	orrs	r0, r2
   19b34:	f7fd fb4e 	bl	171d4 <__aeabi_ui2d>
   19b38:	1e63      	subs	r3, r4, #1
   19b3a:	4698      	mov	r8, r3
   19b3c:	2301      	movs	r3, #1
   19b3e:	4d8b      	ldr	r5, [pc, #556]	; (19d6c <_dtoa_r+0x6e0>)
   19b40:	930f      	str	r3, [sp, #60]	; 0x3c
   19b42:	1949      	adds	r1, r1, r5
   19b44:	e618      	b.n	19778 <_dtoa_r+0xec>
   19b46:	488a      	ldr	r0, [pc, #552]	; (19d70 <_dtoa_r+0x6e4>)
   19b48:	e5d5      	b.n	196f6 <_dtoa_r+0x6a>
   19b4a:	2300      	movs	r3, #0
   19b4c:	4652      	mov	r2, sl
   19b4e:	2100      	movs	r1, #0
   19b50:	6453      	str	r3, [r2, #68]	; 0x44
   19b52:	4650      	mov	r0, sl
   19b54:	f001 fda6 	bl	1b6a4 <_Balloc>
   19b58:	4653      	mov	r3, sl
   19b5a:	6418      	str	r0, [r3, #64]	; 0x40
   19b5c:	2301      	movs	r3, #1
   19b5e:	425b      	negs	r3, r3
   19b60:	9307      	str	r3, [sp, #28]
   19b62:	930e      	str	r3, [sp, #56]	; 0x38
   19b64:	3302      	adds	r3, #2
   19b66:	2200      	movs	r2, #0
   19b68:	930b      	str	r3, [sp, #44]	; 0x2c
   19b6a:	2300      	movs	r3, #0
   19b6c:	900a      	str	r0, [sp, #40]	; 0x28
   19b6e:	9223      	str	r2, [sp, #140]	; 0x8c
   19b70:	9322      	str	r3, [sp, #136]	; 0x88
   19b72:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   19b74:	2b00      	cmp	r3, #0
   19b76:	da00      	bge.n	19b7a <_dtoa_r+0x4ee>
   19b78:	e0ab      	b.n	19cd2 <_dtoa_r+0x646>
   19b7a:	9a03      	ldr	r2, [sp, #12]
   19b7c:	2a0e      	cmp	r2, #14
   19b7e:	dd00      	ble.n	19b82 <_dtoa_r+0x4f6>
   19b80:	e0a7      	b.n	19cd2 <_dtoa_r+0x646>
   19b82:	4b7c      	ldr	r3, [pc, #496]	; (19d74 <_dtoa_r+0x6e8>)
   19b84:	00d2      	lsls	r2, r2, #3
   19b86:	189b      	adds	r3, r3, r2
   19b88:	685c      	ldr	r4, [r3, #4]
   19b8a:	681b      	ldr	r3, [r3, #0]
   19b8c:	9304      	str	r3, [sp, #16]
   19b8e:	9405      	str	r4, [sp, #20]
   19b90:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   19b92:	2b00      	cmp	r3, #0
   19b94:	da00      	bge.n	19b98 <_dtoa_r+0x50c>
   19b96:	e2a7      	b.n	1a0e8 <_dtoa_r+0xa5c>
   19b98:	9c04      	ldr	r4, [sp, #16]
   19b9a:	9d05      	ldr	r5, [sp, #20]
   19b9c:	0030      	movs	r0, r6
   19b9e:	0022      	movs	r2, r4
   19ba0:	002b      	movs	r3, r5
   19ba2:	0039      	movs	r1, r7
   19ba4:	f7fc f9d6 	bl	15f54 <__aeabi_ddiv>
   19ba8:	f7fd fa9e 	bl	170e8 <__aeabi_d2iz>
   19bac:	4680      	mov	r8, r0
   19bae:	f7fd facf 	bl	17150 <__aeabi_i2d>
   19bb2:	0022      	movs	r2, r4
   19bb4:	002b      	movs	r3, r5
   19bb6:	f7fc fd01 	bl	165bc <__aeabi_dmul>
   19bba:	0002      	movs	r2, r0
   19bbc:	000b      	movs	r3, r1
   19bbe:	0030      	movs	r0, r6
   19bc0:	0039      	movs	r1, r7
   19bc2:	f7fc ff7b 	bl	16abc <__aeabi_dsub>
   19bc6:	4643      	mov	r3, r8
   19bc8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   19bca:	3330      	adds	r3, #48	; 0x30
   19bcc:	7013      	strb	r3, [r2, #0]
   19bce:	9b07      	ldr	r3, [sp, #28]
   19bd0:	0006      	movs	r6, r0
   19bd2:	000f      	movs	r7, r1
   19bd4:	1c54      	adds	r4, r2, #1
   19bd6:	2b01      	cmp	r3, #1
   19bd8:	d04e      	beq.n	19c78 <_dtoa_r+0x5ec>
   19bda:	2200      	movs	r2, #0
   19bdc:	4b60      	ldr	r3, [pc, #384]	; (19d60 <_dtoa_r+0x6d4>)
   19bde:	f7fc fced 	bl	165bc <__aeabi_dmul>
   19be2:	2200      	movs	r2, #0
   19be4:	2300      	movs	r3, #0
   19be6:	0006      	movs	r6, r0
   19be8:	000f      	movs	r7, r1
   19bea:	f7fd fb3b 	bl	17264 <__aeabi_dcmpeq>
   19bee:	2800      	cmp	r0, #0
   19bf0:	d000      	beq.n	19bf4 <_dtoa_r+0x568>
   19bf2:	e77a      	b.n	19aea <_dtoa_r+0x45e>
   19bf4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   19bf6:	9a07      	ldr	r2, [sp, #28]
   19bf8:	1c9d      	adds	r5, r3, #2
   19bfa:	469c      	mov	ip, r3
   19bfc:	465b      	mov	r3, fp
   19bfe:	9306      	str	r3, [sp, #24]
   19c00:	4653      	mov	r3, sl
   19c02:	4462      	add	r2, ip
   19c04:	46aa      	mov	sl, r5
   19c06:	9c04      	ldr	r4, [sp, #16]
   19c08:	9d05      	ldr	r5, [sp, #20]
   19c0a:	4691      	mov	r9, r2
   19c0c:	9307      	str	r3, [sp, #28]
   19c0e:	e00f      	b.n	19c30 <_dtoa_r+0x5a4>
   19c10:	2200      	movs	r2, #0
   19c12:	4b53      	ldr	r3, [pc, #332]	; (19d60 <_dtoa_r+0x6d4>)
   19c14:	f7fc fcd2 	bl	165bc <__aeabi_dmul>
   19c18:	2301      	movs	r3, #1
   19c1a:	469c      	mov	ip, r3
   19c1c:	2200      	movs	r2, #0
   19c1e:	2300      	movs	r3, #0
   19c20:	0006      	movs	r6, r0
   19c22:	000f      	movs	r7, r1
   19c24:	44e2      	add	sl, ip
   19c26:	f7fd fb1d 	bl	17264 <__aeabi_dcmpeq>
   19c2a:	2800      	cmp	r0, #0
   19c2c:	d000      	beq.n	19c30 <_dtoa_r+0x5a4>
   19c2e:	e2d9      	b.n	1a1e4 <_dtoa_r+0xb58>
   19c30:	0022      	movs	r2, r4
   19c32:	002b      	movs	r3, r5
   19c34:	0030      	movs	r0, r6
   19c36:	0039      	movs	r1, r7
   19c38:	f7fc f98c 	bl	15f54 <__aeabi_ddiv>
   19c3c:	f7fd fa54 	bl	170e8 <__aeabi_d2iz>
   19c40:	4680      	mov	r8, r0
   19c42:	f7fd fa85 	bl	17150 <__aeabi_i2d>
   19c46:	0022      	movs	r2, r4
   19c48:	002b      	movs	r3, r5
   19c4a:	f7fc fcb7 	bl	165bc <__aeabi_dmul>
   19c4e:	0002      	movs	r2, r0
   19c50:	000b      	movs	r3, r1
   19c52:	0030      	movs	r0, r6
   19c54:	0039      	movs	r1, r7
   19c56:	f7fc ff31 	bl	16abc <__aeabi_dsub>
   19c5a:	4653      	mov	r3, sl
   19c5c:	4642      	mov	r2, r8
   19c5e:	3b01      	subs	r3, #1
   19c60:	3230      	adds	r2, #48	; 0x30
   19c62:	0006      	movs	r6, r0
   19c64:	000f      	movs	r7, r1
   19c66:	46d3      	mov	fp, sl
   19c68:	701a      	strb	r2, [r3, #0]
   19c6a:	45d1      	cmp	r9, sl
   19c6c:	d1d0      	bne.n	19c10 <_dtoa_r+0x584>
   19c6e:	9b06      	ldr	r3, [sp, #24]
   19c70:	4654      	mov	r4, sl
   19c72:	469b      	mov	fp, r3
   19c74:	9b07      	ldr	r3, [sp, #28]
   19c76:	469a      	mov	sl, r3
   19c78:	0032      	movs	r2, r6
   19c7a:	003b      	movs	r3, r7
   19c7c:	0030      	movs	r0, r6
   19c7e:	0039      	movs	r1, r7
   19c80:	f7fb fe58 	bl	15934 <__aeabi_dadd>
   19c84:	0006      	movs	r6, r0
   19c86:	000f      	movs	r7, r1
   19c88:	0002      	movs	r2, r0
   19c8a:	000b      	movs	r3, r1
   19c8c:	9804      	ldr	r0, [sp, #16]
   19c8e:	9905      	ldr	r1, [sp, #20]
   19c90:	f7fd faee 	bl	17270 <__aeabi_dcmplt>
   19c94:	2800      	cmp	r0, #0
   19c96:	d10c      	bne.n	19cb2 <_dtoa_r+0x626>
   19c98:	9804      	ldr	r0, [sp, #16]
   19c9a:	9905      	ldr	r1, [sp, #20]
   19c9c:	0032      	movs	r2, r6
   19c9e:	003b      	movs	r3, r7
   19ca0:	f7fd fae0 	bl	17264 <__aeabi_dcmpeq>
   19ca4:	2800      	cmp	r0, #0
   19ca6:	d100      	bne.n	19caa <_dtoa_r+0x61e>
   19ca8:	e71f      	b.n	19aea <_dtoa_r+0x45e>
   19caa:	4643      	mov	r3, r8
   19cac:	07db      	lsls	r3, r3, #31
   19cae:	d400      	bmi.n	19cb2 <_dtoa_r+0x626>
   19cb0:	e71b      	b.n	19aea <_dtoa_r+0x45e>
   19cb2:	1e65      	subs	r5, r4, #1
   19cb4:	782f      	ldrb	r7, [r5, #0]
   19cb6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   19cb8:	e006      	b.n	19cc8 <_dtoa_r+0x63c>
   19cba:	429d      	cmp	r5, r3
   19cbc:	d100      	bne.n	19cc0 <_dtoa_r+0x634>
   19cbe:	e351      	b.n	1a364 <_dtoa_r+0xcd8>
   19cc0:	3c02      	subs	r4, #2
   19cc2:	7827      	ldrb	r7, [r4, #0]
   19cc4:	002c      	movs	r4, r5
   19cc6:	3d01      	subs	r5, #1
   19cc8:	2f39      	cmp	r7, #57	; 0x39
   19cca:	d0f6      	beq.n	19cba <_dtoa_r+0x62e>
   19ccc:	3701      	adds	r7, #1
   19cce:	702f      	strb	r7, [r5, #0]
   19cd0:	e70b      	b.n	19aea <_dtoa_r+0x45e>
   19cd2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   19cd4:	2a00      	cmp	r2, #0
   19cd6:	d04f      	beq.n	19d78 <_dtoa_r+0x6ec>
   19cd8:	9a22      	ldr	r2, [sp, #136]	; 0x88
   19cda:	2a01      	cmp	r2, #1
   19cdc:	dc00      	bgt.n	19ce0 <_dtoa_r+0x654>
   19cde:	e22c      	b.n	1a13a <_dtoa_r+0xaae>
   19ce0:	9b07      	ldr	r3, [sp, #28]
   19ce2:	1e5c      	subs	r4, r3, #1
   19ce4:	464b      	mov	r3, r9
   19ce6:	45a1      	cmp	r9, r4
   19ce8:	da00      	bge.n	19cec <_dtoa_r+0x660>
   19cea:	e2b8      	b.n	1a25e <_dtoa_r+0xbd2>
   19cec:	1b1c      	subs	r4, r3, r4
   19cee:	9b07      	ldr	r3, [sp, #28]
   19cf0:	2b00      	cmp	r3, #0
   19cf2:	da00      	bge.n	19cf6 <_dtoa_r+0x66a>
   19cf4:	e3d4      	b.n	1a4a0 <_dtoa_r+0xe14>
   19cf6:	9b06      	ldr	r3, [sp, #24]
   19cf8:	9308      	str	r3, [sp, #32]
   19cfa:	9b07      	ldr	r3, [sp, #28]
   19cfc:	9a06      	ldr	r2, [sp, #24]
   19cfe:	2101      	movs	r1, #1
   19d00:	4694      	mov	ip, r2
   19d02:	449c      	add	ip, r3
   19d04:	4662      	mov	r2, ip
   19d06:	9206      	str	r2, [sp, #24]
   19d08:	9a04      	ldr	r2, [sp, #16]
   19d0a:	4650      	mov	r0, sl
   19d0c:	4694      	mov	ip, r2
   19d0e:	449c      	add	ip, r3
   19d10:	4663      	mov	r3, ip
   19d12:	9304      	str	r3, [sp, #16]
   19d14:	f001 fd86 	bl	1b824 <__i2b>
   19d18:	4680      	mov	r8, r0
   19d1a:	e032      	b.n	19d82 <_dtoa_r+0x6f6>
   19d1c:	9a06      	ldr	r2, [sp, #24]
   19d1e:	9b03      	ldr	r3, [sp, #12]
   19d20:	1ad2      	subs	r2, r2, r3
   19d22:	425b      	negs	r3, r3
   19d24:	4699      	mov	r9, r3
   19d26:	2300      	movs	r3, #0
   19d28:	9206      	str	r2, [sp, #24]
   19d2a:	930d      	str	r3, [sp, #52]	; 0x34
   19d2c:	e579      	b.n	19822 <_dtoa_r+0x196>
   19d2e:	9803      	ldr	r0, [sp, #12]
   19d30:	f7fd fa0e 	bl	17150 <__aeabi_i2d>
   19d34:	000b      	movs	r3, r1
   19d36:	0002      	movs	r2, r0
   19d38:	0029      	movs	r1, r5
   19d3a:	0020      	movs	r0, r4
   19d3c:	f7fd fa92 	bl	17264 <__aeabi_dcmpeq>
   19d40:	0002      	movs	r2, r0
   19d42:	4250      	negs	r0, r2
   19d44:	4150      	adcs	r0, r2
   19d46:	9b03      	ldr	r3, [sp, #12]
   19d48:	1a1b      	subs	r3, r3, r0
   19d4a:	9303      	str	r3, [sp, #12]
   19d4c:	e53d      	b.n	197ca <_dtoa_r+0x13e>
   19d4e:	2301      	movs	r3, #1
   19d50:	1a9b      	subs	r3, r3, r2
   19d52:	9306      	str	r3, [sp, #24]
   19d54:	2300      	movs	r3, #0
   19d56:	9304      	str	r3, [sp, #16]
   19d58:	e557      	b.n	1980a <_dtoa_r+0x17e>
   19d5a:	46c0      	nop			; (mov r8, r8)
   19d5c:	3ff00000 	.word	0x3ff00000
   19d60:	40240000 	.word	0x40240000
   19d64:	00000432 	.word	0x00000432
   19d68:	00000412 	.word	0x00000412
   19d6c:	fe100000 	.word	0xfe100000
   19d70:	0001e334 	.word	0x0001e334
   19d74:	0001e3a0 	.word	0x0001e3a0
   19d78:	9b06      	ldr	r3, [sp, #24]
   19d7a:	464c      	mov	r4, r9
   19d7c:	9308      	str	r3, [sp, #32]
   19d7e:	2300      	movs	r3, #0
   19d80:	4698      	mov	r8, r3
   19d82:	9908      	ldr	r1, [sp, #32]
   19d84:	1e0b      	subs	r3, r1, #0
   19d86:	dd0e      	ble.n	19da6 <_dtoa_r+0x71a>
   19d88:	9a04      	ldr	r2, [sp, #16]
   19d8a:	2a00      	cmp	r2, #0
   19d8c:	dd0b      	ble.n	19da6 <_dtoa_r+0x71a>
   19d8e:	4293      	cmp	r3, r2
   19d90:	dd00      	ble.n	19d94 <_dtoa_r+0x708>
   19d92:	e187      	b.n	1a0a4 <_dtoa_r+0xa18>
   19d94:	9a06      	ldr	r2, [sp, #24]
   19d96:	1ad2      	subs	r2, r2, r3
   19d98:	9206      	str	r2, [sp, #24]
   19d9a:	9a08      	ldr	r2, [sp, #32]
   19d9c:	1ad2      	subs	r2, r2, r3
   19d9e:	9208      	str	r2, [sp, #32]
   19da0:	9a04      	ldr	r2, [sp, #16]
   19da2:	1ad3      	subs	r3, r2, r3
   19da4:	9304      	str	r3, [sp, #16]
   19da6:	464b      	mov	r3, r9
   19da8:	2b00      	cmp	r3, #0
   19daa:	d01a      	beq.n	19de2 <_dtoa_r+0x756>
   19dac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   19dae:	2b00      	cmp	r3, #0
   19db0:	d100      	bne.n	19db4 <_dtoa_r+0x728>
   19db2:	e1bb      	b.n	1a12c <_dtoa_r+0xaa0>
   19db4:	2c00      	cmp	r4, #0
   19db6:	dd10      	ble.n	19dda <_dtoa_r+0x74e>
   19db8:	4641      	mov	r1, r8
   19dba:	0022      	movs	r2, r4
   19dbc:	4650      	mov	r0, sl
   19dbe:	f001 fde5 	bl	1b98c <__pow5mult>
   19dc2:	465a      	mov	r2, fp
   19dc4:	0001      	movs	r1, r0
   19dc6:	4680      	mov	r8, r0
   19dc8:	4650      	mov	r0, sl
   19dca:	f001 fd35 	bl	1b838 <__multiply>
   19dce:	0005      	movs	r5, r0
   19dd0:	4659      	mov	r1, fp
   19dd2:	4650      	mov	r0, sl
   19dd4:	f001 fc8e 	bl	1b6f4 <_Bfree>
   19dd8:	46ab      	mov	fp, r5
   19dda:	464b      	mov	r3, r9
   19ddc:	1b1a      	subs	r2, r3, r4
   19dde:	d000      	beq.n	19de2 <_dtoa_r+0x756>
   19de0:	e1a5      	b.n	1a12e <_dtoa_r+0xaa2>
   19de2:	2101      	movs	r1, #1
   19de4:	4650      	mov	r0, sl
   19de6:	f001 fd1d 	bl	1b824 <__i2b>
   19dea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   19dec:	4681      	mov	r9, r0
   19dee:	2b00      	cmp	r3, #0
   19df0:	dd1d      	ble.n	19e2e <_dtoa_r+0x7a2>
   19df2:	001a      	movs	r2, r3
   19df4:	0001      	movs	r1, r0
   19df6:	4650      	mov	r0, sl
   19df8:	f001 fdc8 	bl	1b98c <__pow5mult>
   19dfc:	9b22      	ldr	r3, [sp, #136]	; 0x88
   19dfe:	4681      	mov	r9, r0
   19e00:	2b01      	cmp	r3, #1
   19e02:	dc00      	bgt.n	19e06 <_dtoa_r+0x77a>
   19e04:	e150      	b.n	1a0a8 <_dtoa_r+0xa1c>
   19e06:	2400      	movs	r4, #0
   19e08:	464b      	mov	r3, r9
   19e0a:	691b      	ldr	r3, [r3, #16]
   19e0c:	3303      	adds	r3, #3
   19e0e:	009b      	lsls	r3, r3, #2
   19e10:	444b      	add	r3, r9
   19e12:	6858      	ldr	r0, [r3, #4]
   19e14:	f001 fcbe 	bl	1b794 <__hi0bits>
   19e18:	2320      	movs	r3, #32
   19e1a:	1a1b      	subs	r3, r3, r0
   19e1c:	e010      	b.n	19e40 <_dtoa_r+0x7b4>
   19e1e:	2220      	movs	r2, #32
   19e20:	0030      	movs	r0, r6
   19e22:	1ad3      	subs	r3, r2, r3
   19e24:	4098      	lsls	r0, r3
   19e26:	e685      	b.n	19b34 <_dtoa_r+0x4a8>
   19e28:	2300      	movs	r3, #0
   19e2a:	930c      	str	r3, [sp, #48]	; 0x30
   19e2c:	e4e3      	b.n	197f6 <_dtoa_r+0x16a>
   19e2e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   19e30:	2400      	movs	r4, #0
   19e32:	2b01      	cmp	r3, #1
   19e34:	dc00      	bgt.n	19e38 <_dtoa_r+0x7ac>
   19e36:	e18b      	b.n	1a150 <_dtoa_r+0xac4>
   19e38:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   19e3a:	2301      	movs	r3, #1
   19e3c:	2a00      	cmp	r2, #0
   19e3e:	d1e3      	bne.n	19e08 <_dtoa_r+0x77c>
   19e40:	9904      	ldr	r1, [sp, #16]
   19e42:	201f      	movs	r0, #31
   19e44:	468c      	mov	ip, r1
   19e46:	4463      	add	r3, ip
   19e48:	4018      	ands	r0, r3
   19e4a:	d100      	bne.n	19e4e <_dtoa_r+0x7c2>
   19e4c:	e0ae      	b.n	19fac <_dtoa_r+0x920>
   19e4e:	2320      	movs	r3, #32
   19e50:	1a1b      	subs	r3, r3, r0
   19e52:	2b04      	cmp	r3, #4
   19e54:	dc00      	bgt.n	19e58 <_dtoa_r+0x7cc>
   19e56:	e3cc      	b.n	1a5f2 <_dtoa_r+0xf66>
   19e58:	231c      	movs	r3, #28
   19e5a:	1a18      	subs	r0, r3, r0
   19e5c:	9b06      	ldr	r3, [sp, #24]
   19e5e:	469c      	mov	ip, r3
   19e60:	4484      	add	ip, r0
   19e62:	4663      	mov	r3, ip
   19e64:	9306      	str	r3, [sp, #24]
   19e66:	9b08      	ldr	r3, [sp, #32]
   19e68:	469c      	mov	ip, r3
   19e6a:	4484      	add	ip, r0
   19e6c:	4663      	mov	r3, ip
   19e6e:	468c      	mov	ip, r1
   19e70:	4484      	add	ip, r0
   19e72:	9308      	str	r3, [sp, #32]
   19e74:	4663      	mov	r3, ip
   19e76:	9304      	str	r3, [sp, #16]
   19e78:	9b06      	ldr	r3, [sp, #24]
   19e7a:	2b00      	cmp	r3, #0
   19e7c:	dd05      	ble.n	19e8a <_dtoa_r+0x7fe>
   19e7e:	4659      	mov	r1, fp
   19e80:	001a      	movs	r2, r3
   19e82:	4650      	mov	r0, sl
   19e84:	f001 fde2 	bl	1ba4c <__lshift>
   19e88:	4683      	mov	fp, r0
   19e8a:	9b04      	ldr	r3, [sp, #16]
   19e8c:	2b00      	cmp	r3, #0
   19e8e:	dd05      	ble.n	19e9c <_dtoa_r+0x810>
   19e90:	4649      	mov	r1, r9
   19e92:	001a      	movs	r2, r3
   19e94:	4650      	mov	r0, sl
   19e96:	f001 fdd9 	bl	1ba4c <__lshift>
   19e9a:	4681      	mov	r9, r0
   19e9c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   19e9e:	2b00      	cmp	r3, #0
   19ea0:	d000      	beq.n	19ea4 <_dtoa_r+0x818>
   19ea2:	e094      	b.n	19fce <_dtoa_r+0x942>
   19ea4:	9b07      	ldr	r3, [sp, #28]
   19ea6:	2b00      	cmp	r3, #0
   19ea8:	dc00      	bgt.n	19eac <_dtoa_r+0x820>
   19eaa:	e175      	b.n	1a198 <_dtoa_r+0xb0c>
   19eac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   19eae:	2b00      	cmp	r3, #0
   19eb0:	d100      	bne.n	19eb4 <_dtoa_r+0x828>
   19eb2:	e0a6      	b.n	1a002 <_dtoa_r+0x976>
   19eb4:	9b08      	ldr	r3, [sp, #32]
   19eb6:	2b00      	cmp	r3, #0
   19eb8:	dd05      	ble.n	19ec6 <_dtoa_r+0x83a>
   19eba:	4641      	mov	r1, r8
   19ebc:	001a      	movs	r2, r3
   19ebe:	4650      	mov	r0, sl
   19ec0:	f001 fdc4 	bl	1ba4c <__lshift>
   19ec4:	4680      	mov	r8, r0
   19ec6:	4643      	mov	r3, r8
   19ec8:	930c      	str	r3, [sp, #48]	; 0x30
   19eca:	2c00      	cmp	r4, #0
   19ecc:	d000      	beq.n	19ed0 <_dtoa_r+0x844>
   19ece:	e250      	b.n	1a372 <_dtoa_r+0xce6>
   19ed0:	9c07      	ldr	r4, [sp, #28]
   19ed2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   19ed4:	3c01      	subs	r4, #1
   19ed6:	0023      	movs	r3, r4
   19ed8:	4694      	mov	ip, r2
   19eda:	4463      	add	r3, ip
   19edc:	9308      	str	r3, [sp, #32]
   19ede:	2301      	movs	r3, #1
   19ee0:	4033      	ands	r3, r6
   19ee2:	9307      	str	r3, [sp, #28]
   19ee4:	464b      	mov	r3, r9
   19ee6:	9306      	str	r3, [sp, #24]
   19ee8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   19eea:	4657      	mov	r7, sl
   19eec:	4645      	mov	r5, r8
   19eee:	465e      	mov	r6, fp
   19ef0:	4692      	mov	sl, r2
   19ef2:	4698      	mov	r8, r3
   19ef4:	9b06      	ldr	r3, [sp, #24]
   19ef6:	0030      	movs	r0, r6
   19ef8:	0019      	movs	r1, r3
   19efa:	4699      	mov	r9, r3
   19efc:	f7ff fb1c 	bl	19538 <quorem>
   19f00:	0003      	movs	r3, r0
   19f02:	900b      	str	r0, [sp, #44]	; 0x2c
   19f04:	3330      	adds	r3, #48	; 0x30
   19f06:	0029      	movs	r1, r5
   19f08:	0030      	movs	r0, r6
   19f0a:	9304      	str	r3, [sp, #16]
   19f0c:	f001 fdfe 	bl	1bb0c <__mcmp>
   19f10:	4649      	mov	r1, r9
   19f12:	0004      	movs	r4, r0
   19f14:	4642      	mov	r2, r8
   19f16:	0038      	movs	r0, r7
   19f18:	f001 fe12 	bl	1bb40 <__mdiff>
   19f1c:	68c3      	ldr	r3, [r0, #12]
   19f1e:	4681      	mov	r9, r0
   19f20:	2b00      	cmp	r3, #0
   19f22:	d000      	beq.n	19f26 <_dtoa_r+0x89a>
   19f24:	e11e      	b.n	1a164 <_dtoa_r+0xad8>
   19f26:	0001      	movs	r1, r0
   19f28:	0030      	movs	r0, r6
   19f2a:	f001 fdef 	bl	1bb0c <__mcmp>
   19f2e:	4683      	mov	fp, r0
   19f30:	4649      	mov	r1, r9
   19f32:	0038      	movs	r0, r7
   19f34:	f001 fbde 	bl	1b6f4 <_Bfree>
   19f38:	465b      	mov	r3, fp
   19f3a:	9a22      	ldr	r2, [sp, #136]	; 0x88
   19f3c:	4313      	orrs	r3, r2
   19f3e:	d103      	bne.n	19f48 <_dtoa_r+0x8bc>
   19f40:	9b07      	ldr	r3, [sp, #28]
   19f42:	2b00      	cmp	r3, #0
   19f44:	d100      	bne.n	19f48 <_dtoa_r+0x8bc>
   19f46:	e306      	b.n	1a556 <_dtoa_r+0xeca>
   19f48:	2c00      	cmp	r4, #0
   19f4a:	da00      	bge.n	19f4e <_dtoa_r+0x8c2>
   19f4c:	e1a8      	b.n	1a2a0 <_dtoa_r+0xc14>
   19f4e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   19f50:	431c      	orrs	r4, r3
   19f52:	d103      	bne.n	19f5c <_dtoa_r+0x8d0>
   19f54:	9b07      	ldr	r3, [sp, #28]
   19f56:	2b00      	cmp	r3, #0
   19f58:	d100      	bne.n	19f5c <_dtoa_r+0x8d0>
   19f5a:	e1a1      	b.n	1a2a0 <_dtoa_r+0xc14>
   19f5c:	465b      	mov	r3, fp
   19f5e:	2b00      	cmp	r3, #0
   19f60:	dd00      	ble.n	19f64 <_dtoa_r+0x8d8>
   19f62:	e282      	b.n	1a46a <_dtoa_r+0xdde>
   19f64:	4669      	mov	r1, sp
   19f66:	4652      	mov	r2, sl
   19f68:	4653      	mov	r3, sl
   19f6a:	7c09      	ldrb	r1, [r1, #16]
   19f6c:	1c5c      	adds	r4, r3, #1
   19f6e:	7011      	strb	r1, [r2, #0]
   19f70:	9a08      	ldr	r2, [sp, #32]
   19f72:	4552      	cmp	r2, sl
   19f74:	d100      	bne.n	19f78 <_dtoa_r+0x8ec>
   19f76:	e28a      	b.n	1a48e <_dtoa_r+0xe02>
   19f78:	0031      	movs	r1, r6
   19f7a:	2300      	movs	r3, #0
   19f7c:	220a      	movs	r2, #10
   19f7e:	0038      	movs	r0, r7
   19f80:	f001 fbc2 	bl	1b708 <__multadd>
   19f84:	2300      	movs	r3, #0
   19f86:	0006      	movs	r6, r0
   19f88:	220a      	movs	r2, #10
   19f8a:	0029      	movs	r1, r5
   19f8c:	0038      	movs	r0, r7
   19f8e:	4545      	cmp	r5, r8
   19f90:	d100      	bne.n	19f94 <_dtoa_r+0x908>
   19f92:	e0e1      	b.n	1a158 <_dtoa_r+0xacc>
   19f94:	f001 fbb8 	bl	1b708 <__multadd>
   19f98:	4641      	mov	r1, r8
   19f9a:	0005      	movs	r5, r0
   19f9c:	2300      	movs	r3, #0
   19f9e:	220a      	movs	r2, #10
   19fa0:	0038      	movs	r0, r7
   19fa2:	f001 fbb1 	bl	1b708 <__multadd>
   19fa6:	46a2      	mov	sl, r4
   19fa8:	4680      	mov	r8, r0
   19faa:	e7a3      	b.n	19ef4 <_dtoa_r+0x868>
   19fac:	201c      	movs	r0, #28
   19fae:	9b06      	ldr	r3, [sp, #24]
   19fb0:	469c      	mov	ip, r3
   19fb2:	4484      	add	ip, r0
   19fb4:	4663      	mov	r3, ip
   19fb6:	9306      	str	r3, [sp, #24]
   19fb8:	9b08      	ldr	r3, [sp, #32]
   19fba:	469c      	mov	ip, r3
   19fbc:	4484      	add	ip, r0
   19fbe:	4663      	mov	r3, ip
   19fc0:	9308      	str	r3, [sp, #32]
   19fc2:	9b04      	ldr	r3, [sp, #16]
   19fc4:	469c      	mov	ip, r3
   19fc6:	4484      	add	ip, r0
   19fc8:	4663      	mov	r3, ip
   19fca:	9304      	str	r3, [sp, #16]
   19fcc:	e754      	b.n	19e78 <_dtoa_r+0x7ec>
   19fce:	4649      	mov	r1, r9
   19fd0:	4658      	mov	r0, fp
   19fd2:	f001 fd9b 	bl	1bb0c <__mcmp>
   19fd6:	2800      	cmp	r0, #0
   19fd8:	db00      	blt.n	19fdc <_dtoa_r+0x950>
   19fda:	e763      	b.n	19ea4 <_dtoa_r+0x818>
   19fdc:	9b03      	ldr	r3, [sp, #12]
   19fde:	4659      	mov	r1, fp
   19fe0:	3b01      	subs	r3, #1
   19fe2:	9303      	str	r3, [sp, #12]
   19fe4:	220a      	movs	r2, #10
   19fe6:	2300      	movs	r3, #0
   19fe8:	4650      	mov	r0, sl
   19fea:	f001 fb8d 	bl	1b708 <__multadd>
   19fee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   19ff0:	4683      	mov	fp, r0
   19ff2:	2b00      	cmp	r3, #0
   19ff4:	d000      	beq.n	19ff8 <_dtoa_r+0x96c>
   19ff6:	e2ca      	b.n	1a58e <_dtoa_r+0xf02>
   19ff8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   19ffa:	2b00      	cmp	r3, #0
   19ffc:	dc00      	bgt.n	1a000 <_dtoa_r+0x974>
   19ffe:	e2d8      	b.n	1a5b2 <_dtoa_r+0xf26>
   1a000:	9307      	str	r3, [sp, #28]
   1a002:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a004:	465d      	mov	r5, fp
   1a006:	2400      	movs	r4, #0
   1a008:	9f07      	ldr	r7, [sp, #28]
   1a00a:	469b      	mov	fp, r3
   1a00c:	e006      	b.n	1a01c <_dtoa_r+0x990>
   1a00e:	0029      	movs	r1, r5
   1a010:	2300      	movs	r3, #0
   1a012:	220a      	movs	r2, #10
   1a014:	4650      	mov	r0, sl
   1a016:	f001 fb77 	bl	1b708 <__multadd>
   1a01a:	0005      	movs	r5, r0
   1a01c:	4649      	mov	r1, r9
   1a01e:	0028      	movs	r0, r5
   1a020:	f7ff fa8a 	bl	19538 <quorem>
   1a024:	465b      	mov	r3, fp
   1a026:	3030      	adds	r0, #48	; 0x30
   1a028:	5518      	strb	r0, [r3, r4]
   1a02a:	3401      	adds	r4, #1
   1a02c:	42bc      	cmp	r4, r7
   1a02e:	dbee      	blt.n	1a00e <_dtoa_r+0x982>
   1a030:	46ab      	mov	fp, r5
   1a032:	0006      	movs	r6, r0
   1a034:	9c07      	ldr	r4, [sp, #28]
   1a036:	2c00      	cmp	r4, #0
   1a038:	dc00      	bgt.n	1a03c <_dtoa_r+0x9b0>
   1a03a:	e237      	b.n	1a4ac <_dtoa_r+0xe20>
   1a03c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a03e:	2700      	movs	r7, #0
   1a040:	469c      	mov	ip, r3
   1a042:	4464      	add	r4, ip
   1a044:	4659      	mov	r1, fp
   1a046:	2201      	movs	r2, #1
   1a048:	4650      	mov	r0, sl
   1a04a:	f001 fcff 	bl	1ba4c <__lshift>
   1a04e:	4649      	mov	r1, r9
   1a050:	4683      	mov	fp, r0
   1a052:	f001 fd5b 	bl	1bb0c <__mcmp>
   1a056:	2800      	cmp	r0, #0
   1a058:	dc00      	bgt.n	1a05c <_dtoa_r+0x9d0>
   1a05a:	e144      	b.n	1a2e6 <_dtoa_r+0xc5a>
   1a05c:	1e65      	subs	r5, r4, #1
   1a05e:	782b      	ldrb	r3, [r5, #0]
   1a060:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1a062:	e006      	b.n	1a072 <_dtoa_r+0x9e6>
   1a064:	4295      	cmp	r5, r2
   1a066:	d100      	bne.n	1a06a <_dtoa_r+0x9de>
   1a068:	e0b1      	b.n	1a1ce <_dtoa_r+0xb42>
   1a06a:	3c02      	subs	r4, #2
   1a06c:	7823      	ldrb	r3, [r4, #0]
   1a06e:	002c      	movs	r4, r5
   1a070:	3d01      	subs	r5, #1
   1a072:	2b39      	cmp	r3, #57	; 0x39
   1a074:	d0f6      	beq.n	1a064 <_dtoa_r+0x9d8>
   1a076:	3301      	adds	r3, #1
   1a078:	702b      	strb	r3, [r5, #0]
   1a07a:	4649      	mov	r1, r9
   1a07c:	4650      	mov	r0, sl
   1a07e:	f001 fb39 	bl	1b6f4 <_Bfree>
   1a082:	4643      	mov	r3, r8
   1a084:	2b00      	cmp	r3, #0
   1a086:	d100      	bne.n	1a08a <_dtoa_r+0x9fe>
   1a088:	e52f      	b.n	19aea <_dtoa_r+0x45e>
   1a08a:	2f00      	cmp	r7, #0
   1a08c:	d005      	beq.n	1a09a <_dtoa_r+0xa0e>
   1a08e:	4547      	cmp	r7, r8
   1a090:	d003      	beq.n	1a09a <_dtoa_r+0xa0e>
   1a092:	0039      	movs	r1, r7
   1a094:	4650      	mov	r0, sl
   1a096:	f001 fb2d 	bl	1b6f4 <_Bfree>
   1a09a:	4641      	mov	r1, r8
   1a09c:	4650      	mov	r0, sl
   1a09e:	f001 fb29 	bl	1b6f4 <_Bfree>
   1a0a2:	e522      	b.n	19aea <_dtoa_r+0x45e>
   1a0a4:	0013      	movs	r3, r2
   1a0a6:	e675      	b.n	19d94 <_dtoa_r+0x708>
   1a0a8:	2e00      	cmp	r6, #0
   1a0aa:	d000      	beq.n	1a0ae <_dtoa_r+0xa22>
   1a0ac:	e6ab      	b.n	19e06 <_dtoa_r+0x77a>
   1a0ae:	033b      	lsls	r3, r7, #12
   1a0b0:	2400      	movs	r4, #0
   1a0b2:	2b00      	cmp	r3, #0
   1a0b4:	d000      	beq.n	1a0b8 <_dtoa_r+0xa2c>
   1a0b6:	e6bf      	b.n	19e38 <_dtoa_r+0x7ac>
   1a0b8:	4bba      	ldr	r3, [pc, #744]	; (1a3a4 <_dtoa_r+0xd18>)
   1a0ba:	423b      	tst	r3, r7
   1a0bc:	d100      	bne.n	1a0c0 <_dtoa_r+0xa34>
   1a0be:	e6bb      	b.n	19e38 <_dtoa_r+0x7ac>
   1a0c0:	9b06      	ldr	r3, [sp, #24]
   1a0c2:	3401      	adds	r4, #1
   1a0c4:	3301      	adds	r3, #1
   1a0c6:	9306      	str	r3, [sp, #24]
   1a0c8:	9b04      	ldr	r3, [sp, #16]
   1a0ca:	3301      	adds	r3, #1
   1a0cc:	9304      	str	r3, [sp, #16]
   1a0ce:	e6b3      	b.n	19e38 <_dtoa_r+0x7ac>
   1a0d0:	2301      	movs	r3, #1
   1a0d2:	930b      	str	r3, [sp, #44]	; 0x2c
   1a0d4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   1a0d6:	2b00      	cmp	r3, #0
   1a0d8:	dc00      	bgt.n	1a0dc <_dtoa_r+0xa50>
   1a0da:	e0d1      	b.n	1a280 <_dtoa_r+0xbf4>
   1a0dc:	001d      	movs	r5, r3
   1a0de:	4698      	mov	r8, r3
   1a0e0:	930e      	str	r3, [sp, #56]	; 0x38
   1a0e2:	9307      	str	r3, [sp, #28]
   1a0e4:	f7ff fbc8 	bl	19878 <_dtoa_r+0x1ec>
   1a0e8:	9b07      	ldr	r3, [sp, #28]
   1a0ea:	2b00      	cmp	r3, #0
   1a0ec:	dd00      	ble.n	1a0f0 <_dtoa_r+0xa64>
   1a0ee:	e553      	b.n	19b98 <_dtoa_r+0x50c>
   1a0f0:	d000      	beq.n	1a0f4 <_dtoa_r+0xa68>
   1a0f2:	e0ad      	b.n	1a250 <_dtoa_r+0xbc4>
   1a0f4:	9804      	ldr	r0, [sp, #16]
   1a0f6:	9905      	ldr	r1, [sp, #20]
   1a0f8:	2200      	movs	r2, #0
   1a0fa:	4bab      	ldr	r3, [pc, #684]	; (1a3a8 <_dtoa_r+0xd1c>)
   1a0fc:	f7fc fa5e 	bl	165bc <__aeabi_dmul>
   1a100:	003b      	movs	r3, r7
   1a102:	0032      	movs	r2, r6
   1a104:	f7fd f8d2 	bl	172ac <__aeabi_dcmpge>
   1a108:	2300      	movs	r3, #0
   1a10a:	4699      	mov	r9, r3
   1a10c:	4698      	mov	r8, r3
   1a10e:	2800      	cmp	r0, #0
   1a110:	d055      	beq.n	1a1be <_dtoa_r+0xb32>
   1a112:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   1a114:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   1a116:	43db      	mvns	r3, r3
   1a118:	9303      	str	r3, [sp, #12]
   1a11a:	4649      	mov	r1, r9
   1a11c:	4650      	mov	r0, sl
   1a11e:	f001 fae9 	bl	1b6f4 <_Bfree>
   1a122:	4643      	mov	r3, r8
   1a124:	2b00      	cmp	r3, #0
   1a126:	d100      	bne.n	1a12a <_dtoa_r+0xa9e>
   1a128:	e4df      	b.n	19aea <_dtoa_r+0x45e>
   1a12a:	e7b6      	b.n	1a09a <_dtoa_r+0xa0e>
   1a12c:	464a      	mov	r2, r9
   1a12e:	4659      	mov	r1, fp
   1a130:	4650      	mov	r0, sl
   1a132:	f001 fc2b 	bl	1b98c <__pow5mult>
   1a136:	4683      	mov	fp, r0
   1a138:	e653      	b.n	19de2 <_dtoa_r+0x756>
   1a13a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1a13c:	2a00      	cmp	r2, #0
   1a13e:	d100      	bne.n	1a142 <_dtoa_r+0xab6>
   1a140:	e1b6      	b.n	1a4b0 <_dtoa_r+0xe24>
   1a142:	4a9a      	ldr	r2, [pc, #616]	; (1a3ac <_dtoa_r+0xd20>)
   1a144:	464c      	mov	r4, r9
   1a146:	4694      	mov	ip, r2
   1a148:	9a06      	ldr	r2, [sp, #24]
   1a14a:	4463      	add	r3, ip
   1a14c:	9208      	str	r2, [sp, #32]
   1a14e:	e5d5      	b.n	19cfc <_dtoa_r+0x670>
   1a150:	2e00      	cmp	r6, #0
   1a152:	d000      	beq.n	1a156 <_dtoa_r+0xaca>
   1a154:	e670      	b.n	19e38 <_dtoa_r+0x7ac>
   1a156:	e7aa      	b.n	1a0ae <_dtoa_r+0xa22>
   1a158:	f001 fad6 	bl	1b708 <__multadd>
   1a15c:	46a2      	mov	sl, r4
   1a15e:	0005      	movs	r5, r0
   1a160:	4680      	mov	r8, r0
   1a162:	e6c7      	b.n	19ef4 <_dtoa_r+0x868>
   1a164:	2301      	movs	r3, #1
   1a166:	469b      	mov	fp, r3
   1a168:	e6e2      	b.n	19f30 <_dtoa_r+0x8a4>
   1a16a:	2300      	movs	r3, #0
   1a16c:	930b      	str	r3, [sp, #44]	; 0x2c
   1a16e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1a170:	2b02      	cmp	r3, #2
   1a172:	d0af      	beq.n	1a0d4 <_dtoa_r+0xa48>
   1a174:	2400      	movs	r4, #0
   1a176:	4653      	mov	r3, sl
   1a178:	0021      	movs	r1, r4
   1a17a:	645c      	str	r4, [r3, #68]	; 0x44
   1a17c:	4650      	mov	r0, sl
   1a17e:	f001 fa91 	bl	1b6a4 <_Balloc>
   1a182:	4653      	mov	r3, sl
   1a184:	6418      	str	r0, [r3, #64]	; 0x40
   1a186:	2301      	movs	r3, #1
   1a188:	425b      	negs	r3, r3
   1a18a:	9307      	str	r3, [sp, #28]
   1a18c:	930e      	str	r3, [sp, #56]	; 0x38
   1a18e:	3302      	adds	r3, #2
   1a190:	900a      	str	r0, [sp, #40]	; 0x28
   1a192:	9423      	str	r4, [sp, #140]	; 0x8c
   1a194:	930b      	str	r3, [sp, #44]	; 0x2c
   1a196:	e4ec      	b.n	19b72 <_dtoa_r+0x4e6>
   1a198:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1a19a:	2b02      	cmp	r3, #2
   1a19c:	dc00      	bgt.n	1a1a0 <_dtoa_r+0xb14>
   1a19e:	e685      	b.n	19eac <_dtoa_r+0x820>
   1a1a0:	9b07      	ldr	r3, [sp, #28]
   1a1a2:	2b00      	cmp	r3, #0
   1a1a4:	d1b5      	bne.n	1a112 <_dtoa_r+0xa86>
   1a1a6:	4649      	mov	r1, r9
   1a1a8:	2205      	movs	r2, #5
   1a1aa:	4650      	mov	r0, sl
   1a1ac:	f001 faac 	bl	1b708 <__multadd>
   1a1b0:	4681      	mov	r9, r0
   1a1b2:	0001      	movs	r1, r0
   1a1b4:	4658      	mov	r0, fp
   1a1b6:	f001 fca9 	bl	1bb0c <__mcmp>
   1a1ba:	2800      	cmp	r0, #0
   1a1bc:	dda9      	ble.n	1a112 <_dtoa_r+0xa86>
   1a1be:	2331      	movs	r3, #49	; 0x31
   1a1c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1a1c2:	7013      	strb	r3, [r2, #0]
   1a1c4:	9b03      	ldr	r3, [sp, #12]
   1a1c6:	1c54      	adds	r4, r2, #1
   1a1c8:	3301      	adds	r3, #1
   1a1ca:	9303      	str	r3, [sp, #12]
   1a1cc:	e7a5      	b.n	1a11a <_dtoa_r+0xa8e>
   1a1ce:	9b03      	ldr	r3, [sp, #12]
   1a1d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1a1d2:	3301      	adds	r3, #1
   1a1d4:	9303      	str	r3, [sp, #12]
   1a1d6:	2331      	movs	r3, #49	; 0x31
   1a1d8:	7013      	strb	r3, [r2, #0]
   1a1da:	e74e      	b.n	1a07a <_dtoa_r+0x9ee>
   1a1dc:	2300      	movs	r3, #0
   1a1de:	930b      	str	r3, [sp, #44]	; 0x2c
   1a1e0:	f7ff fb3d 	bl	1985e <_dtoa_r+0x1d2>
   1a1e4:	9b06      	ldr	r3, [sp, #24]
   1a1e6:	465c      	mov	r4, fp
   1a1e8:	469b      	mov	fp, r3
   1a1ea:	9b07      	ldr	r3, [sp, #28]
   1a1ec:	469a      	mov	sl, r3
   1a1ee:	e47c      	b.n	19aea <_dtoa_r+0x45e>
   1a1f0:	4640      	mov	r0, r8
   1a1f2:	f7fc ffad 	bl	17150 <__aeabi_i2d>
   1a1f6:	0032      	movs	r2, r6
   1a1f8:	003b      	movs	r3, r7
   1a1fa:	f7fc f9df 	bl	165bc <__aeabi_dmul>
   1a1fe:	2200      	movs	r2, #0
   1a200:	4b6b      	ldr	r3, [pc, #428]	; (1a3b0 <_dtoa_r+0xd24>)
   1a202:	f7fb fb97 	bl	15934 <__aeabi_dadd>
   1a206:	4a6b      	ldr	r2, [pc, #428]	; (1a3b4 <_dtoa_r+0xd28>)
   1a208:	000b      	movs	r3, r1
   1a20a:	4694      	mov	ip, r2
   1a20c:	4463      	add	r3, ip
   1a20e:	9008      	str	r0, [sp, #32]
   1a210:	9109      	str	r1, [sp, #36]	; 0x24
   1a212:	9309      	str	r3, [sp, #36]	; 0x24
   1a214:	2200      	movs	r2, #0
   1a216:	4b64      	ldr	r3, [pc, #400]	; (1a3a8 <_dtoa_r+0xd1c>)
   1a218:	0030      	movs	r0, r6
   1a21a:	0039      	movs	r1, r7
   1a21c:	f7fc fc4e 	bl	16abc <__aeabi_dsub>
   1a220:	9e08      	ldr	r6, [sp, #32]
   1a222:	9f09      	ldr	r7, [sp, #36]	; 0x24
   1a224:	0032      	movs	r2, r6
   1a226:	003b      	movs	r3, r7
   1a228:	0004      	movs	r4, r0
   1a22a:	000d      	movs	r5, r1
   1a22c:	f7fd f834 	bl	17298 <__aeabi_dcmpgt>
   1a230:	2800      	cmp	r0, #0
   1a232:	d000      	beq.n	1a236 <_dtoa_r+0xbaa>
   1a234:	e0b2      	b.n	1a39c <_dtoa_r+0xd10>
   1a236:	2080      	movs	r0, #128	; 0x80
   1a238:	0600      	lsls	r0, r0, #24
   1a23a:	4684      	mov	ip, r0
   1a23c:	0039      	movs	r1, r7
   1a23e:	4461      	add	r1, ip
   1a240:	000b      	movs	r3, r1
   1a242:	0032      	movs	r2, r6
   1a244:	0020      	movs	r0, r4
   1a246:	0029      	movs	r1, r5
   1a248:	f7fd f812 	bl	17270 <__aeabi_dcmplt>
   1a24c:	2800      	cmp	r0, #0
   1a24e:	d057      	beq.n	1a300 <_dtoa_r+0xc74>
   1a250:	2300      	movs	r3, #0
   1a252:	4699      	mov	r9, r3
   1a254:	4698      	mov	r8, r3
   1a256:	e75c      	b.n	1a112 <_dtoa_r+0xa86>
   1a258:	980a      	ldr	r0, [sp, #40]	; 0x28
   1a25a:	f7ff fa4c 	bl	196f6 <_dtoa_r+0x6a>
   1a25e:	1ae2      	subs	r2, r4, r3
   1a260:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1a262:	46a1      	mov	r9, r4
   1a264:	469c      	mov	ip, r3
   1a266:	4494      	add	ip, r2
   1a268:	4663      	mov	r3, ip
   1a26a:	2400      	movs	r4, #0
   1a26c:	930d      	str	r3, [sp, #52]	; 0x34
   1a26e:	e53e      	b.n	19cee <_dtoa_r+0x662>
   1a270:	9a10      	ldr	r2, [sp, #64]	; 0x40
   1a272:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1a274:	9208      	str	r2, [sp, #32]
   1a276:	9309      	str	r3, [sp, #36]	; 0x24
   1a278:	2302      	movs	r3, #2
   1a27a:	4698      	mov	r8, r3
   1a27c:	f7ff fb3a 	bl	198f4 <_dtoa_r+0x268>
   1a280:	2300      	movs	r3, #0
   1a282:	4652      	mov	r2, sl
   1a284:	2100      	movs	r1, #0
   1a286:	6453      	str	r3, [r2, #68]	; 0x44
   1a288:	4650      	mov	r0, sl
   1a28a:	f001 fa0b 	bl	1b6a4 <_Balloc>
   1a28e:	4653      	mov	r3, sl
   1a290:	6418      	str	r0, [r3, #64]	; 0x40
   1a292:	2301      	movs	r3, #1
   1a294:	900a      	str	r0, [sp, #40]	; 0x28
   1a296:	9307      	str	r3, [sp, #28]
   1a298:	9323      	str	r3, [sp, #140]	; 0x8c
   1a29a:	930e      	str	r3, [sp, #56]	; 0x38
   1a29c:	f7ff fb07 	bl	198ae <_dtoa_r+0x222>
   1a2a0:	4643      	mov	r3, r8
   1a2a2:	930c      	str	r3, [sp, #48]	; 0x30
   1a2a4:	465b      	mov	r3, fp
   1a2a6:	9a06      	ldr	r2, [sp, #24]
   1a2a8:	46a8      	mov	r8, r5
   1a2aa:	46b3      	mov	fp, r6
   1a2ac:	4655      	mov	r5, sl
   1a2ae:	9e04      	ldr	r6, [sp, #16]
   1a2b0:	4691      	mov	r9, r2
   1a2b2:	46ba      	mov	sl, r7
   1a2b4:	2b00      	cmp	r3, #0
   1a2b6:	dd10      	ble.n	1a2da <_dtoa_r+0xc4e>
   1a2b8:	4659      	mov	r1, fp
   1a2ba:	2201      	movs	r2, #1
   1a2bc:	0038      	movs	r0, r7
   1a2be:	f001 fbc5 	bl	1ba4c <__lshift>
   1a2c2:	4649      	mov	r1, r9
   1a2c4:	4683      	mov	fp, r0
   1a2c6:	f001 fc21 	bl	1bb0c <__mcmp>
   1a2ca:	2800      	cmp	r0, #0
   1a2cc:	dc00      	bgt.n	1a2d0 <_dtoa_r+0xc44>
   1a2ce:	e157      	b.n	1a580 <_dtoa_r+0xef4>
   1a2d0:	2e39      	cmp	r6, #57	; 0x39
   1a2d2:	d100      	bne.n	1a2d6 <_dtoa_r+0xc4a>
   1a2d4:	e122      	b.n	1a51c <_dtoa_r+0xe90>
   1a2d6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
   1a2d8:	3631      	adds	r6, #49	; 0x31
   1a2da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1a2dc:	4647      	mov	r7, r8
   1a2de:	1c6c      	adds	r4, r5, #1
   1a2e0:	702e      	strb	r6, [r5, #0]
   1a2e2:	4698      	mov	r8, r3
   1a2e4:	e6c9      	b.n	1a07a <_dtoa_r+0x9ee>
   1a2e6:	2800      	cmp	r0, #0
   1a2e8:	d103      	bne.n	1a2f2 <_dtoa_r+0xc66>
   1a2ea:	07f3      	lsls	r3, r6, #31
   1a2ec:	d501      	bpl.n	1a2f2 <_dtoa_r+0xc66>
   1a2ee:	e6b5      	b.n	1a05c <_dtoa_r+0x9d0>
   1a2f0:	001c      	movs	r4, r3
   1a2f2:	1e63      	subs	r3, r4, #1
   1a2f4:	781a      	ldrb	r2, [r3, #0]
   1a2f6:	2a30      	cmp	r2, #48	; 0x30
   1a2f8:	d0fa      	beq.n	1a2f0 <_dtoa_r+0xc64>
   1a2fa:	e6be      	b.n	1a07a <_dtoa_r+0x9ee>
   1a2fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1a2fe:	4699      	mov	r9, r3
   1a300:	9e10      	ldr	r6, [sp, #64]	; 0x40
   1a302:	9f11      	ldr	r7, [sp, #68]	; 0x44
   1a304:	e435      	b.n	19b72 <_dtoa_r+0x4e6>
   1a306:	2501      	movs	r5, #1
   1a308:	f7ff fab4 	bl	19874 <_dtoa_r+0x1e8>
   1a30c:	9b03      	ldr	r3, [sp, #12]
   1a30e:	2b00      	cmp	r3, #0
   1a310:	d100      	bne.n	1a314 <_dtoa_r+0xc88>
   1a312:	e0d4      	b.n	1a4be <_dtoa_r+0xe32>
   1a314:	9810      	ldr	r0, [sp, #64]	; 0x40
   1a316:	9911      	ldr	r1, [sp, #68]	; 0x44
   1a318:	425c      	negs	r4, r3
   1a31a:	230f      	movs	r3, #15
   1a31c:	4a26      	ldr	r2, [pc, #152]	; (1a3b8 <_dtoa_r+0xd2c>)
   1a31e:	4023      	ands	r3, r4
   1a320:	00db      	lsls	r3, r3, #3
   1a322:	18d3      	adds	r3, r2, r3
   1a324:	681a      	ldr	r2, [r3, #0]
   1a326:	685b      	ldr	r3, [r3, #4]
   1a328:	f7fc f948 	bl	165bc <__aeabi_dmul>
   1a32c:	1124      	asrs	r4, r4, #4
   1a32e:	0006      	movs	r6, r0
   1a330:	000f      	movs	r7, r1
   1a332:	2c00      	cmp	r4, #0
   1a334:	d100      	bne.n	1a338 <_dtoa_r+0xcac>
   1a336:	e149      	b.n	1a5cc <_dtoa_r+0xf40>
   1a338:	2302      	movs	r3, #2
   1a33a:	4698      	mov	r8, r3
   1a33c:	4d1f      	ldr	r5, [pc, #124]	; (1a3bc <_dtoa_r+0xd30>)
   1a33e:	2301      	movs	r3, #1
   1a340:	4223      	tst	r3, r4
   1a342:	d009      	beq.n	1a358 <_dtoa_r+0xccc>
   1a344:	469c      	mov	ip, r3
   1a346:	682a      	ldr	r2, [r5, #0]
   1a348:	686b      	ldr	r3, [r5, #4]
   1a34a:	0030      	movs	r0, r6
   1a34c:	0039      	movs	r1, r7
   1a34e:	44e0      	add	r8, ip
   1a350:	f7fc f934 	bl	165bc <__aeabi_dmul>
   1a354:	0006      	movs	r6, r0
   1a356:	000f      	movs	r7, r1
   1a358:	1064      	asrs	r4, r4, #1
   1a35a:	3508      	adds	r5, #8
   1a35c:	2c00      	cmp	r4, #0
   1a35e:	d1ee      	bne.n	1a33e <_dtoa_r+0xcb2>
   1a360:	f7ff fae4 	bl	1992c <_dtoa_r+0x2a0>
   1a364:	9b03      	ldr	r3, [sp, #12]
   1a366:	2730      	movs	r7, #48	; 0x30
   1a368:	3301      	adds	r3, #1
   1a36a:	9303      	str	r3, [sp, #12]
   1a36c:	2330      	movs	r3, #48	; 0x30
   1a36e:	702b      	strb	r3, [r5, #0]
   1a370:	e4ac      	b.n	19ccc <_dtoa_r+0x640>
   1a372:	6859      	ldr	r1, [r3, #4]
   1a374:	4650      	mov	r0, sl
   1a376:	f001 f995 	bl	1b6a4 <_Balloc>
   1a37a:	4643      	mov	r3, r8
   1a37c:	4641      	mov	r1, r8
   1a37e:	0004      	movs	r4, r0
   1a380:	691b      	ldr	r3, [r3, #16]
   1a382:	310c      	adds	r1, #12
   1a384:	1c9a      	adds	r2, r3, #2
   1a386:	0092      	lsls	r2, r2, #2
   1a388:	300c      	adds	r0, #12
   1a38a:	f7fd f9c3 	bl	17714 <memcpy>
   1a38e:	2201      	movs	r2, #1
   1a390:	0021      	movs	r1, r4
   1a392:	4650      	mov	r0, sl
   1a394:	f001 fb5a 	bl	1ba4c <__lshift>
   1a398:	900c      	str	r0, [sp, #48]	; 0x30
   1a39a:	e599      	b.n	19ed0 <_dtoa_r+0x844>
   1a39c:	2300      	movs	r3, #0
   1a39e:	4699      	mov	r9, r3
   1a3a0:	4698      	mov	r8, r3
   1a3a2:	e70c      	b.n	1a1be <_dtoa_r+0xb32>
   1a3a4:	7ff00000 	.word	0x7ff00000
   1a3a8:	40140000 	.word	0x40140000
   1a3ac:	00000433 	.word	0x00000433
   1a3b0:	401c0000 	.word	0x401c0000
   1a3b4:	fcc00000 	.word	0xfcc00000
   1a3b8:	0001e3a0 	.word	0x0001e3a0
   1a3bc:	0001e378 	.word	0x0001e378
   1a3c0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1a3c2:	498f      	ldr	r1, [pc, #572]	; (1a600 <_dtoa_r+0xf74>)
   1a3c4:	3b01      	subs	r3, #1
   1a3c6:	00db      	lsls	r3, r3, #3
   1a3c8:	18c9      	adds	r1, r1, r3
   1a3ca:	6808      	ldr	r0, [r1, #0]
   1a3cc:	6849      	ldr	r1, [r1, #4]
   1a3ce:	9a08      	ldr	r2, [sp, #32]
   1a3d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1a3d2:	f7fc f8f3 	bl	165bc <__aeabi_dmul>
   1a3d6:	9014      	str	r0, [sp, #80]	; 0x50
   1a3d8:	9115      	str	r1, [sp, #84]	; 0x54
   1a3da:	0039      	movs	r1, r7
   1a3dc:	0030      	movs	r0, r6
   1a3de:	f7fc fe83 	bl	170e8 <__aeabi_d2iz>
   1a3e2:	0005      	movs	r5, r0
   1a3e4:	f7fc feb4 	bl	17150 <__aeabi_i2d>
   1a3e8:	0002      	movs	r2, r0
   1a3ea:	000b      	movs	r3, r1
   1a3ec:	0030      	movs	r0, r6
   1a3ee:	0039      	movs	r1, r7
   1a3f0:	f7fc fb64 	bl	16abc <__aeabi_dsub>
   1a3f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1a3f6:	9008      	str	r0, [sp, #32]
   1a3f8:	9109      	str	r1, [sp, #36]	; 0x24
   1a3fa:	990a      	ldr	r1, [sp, #40]	; 0x28
   1a3fc:	001a      	movs	r2, r3
   1a3fe:	468c      	mov	ip, r1
   1a400:	3530      	adds	r5, #48	; 0x30
   1a402:	4462      	add	r2, ip
   1a404:	1c4c      	adds	r4, r1, #1
   1a406:	700d      	strb	r5, [r1, #0]
   1a408:	4690      	mov	r8, r2
   1a40a:	2b01      	cmp	r3, #1
   1a40c:	d01b      	beq.n	1a446 <_dtoa_r+0xdba>
   1a40e:	9808      	ldr	r0, [sp, #32]
   1a410:	9909      	ldr	r1, [sp, #36]	; 0x24
   1a412:	0025      	movs	r5, r4
   1a414:	2200      	movs	r2, #0
   1a416:	4b7b      	ldr	r3, [pc, #492]	; (1a604 <_dtoa_r+0xf78>)
   1a418:	f7fc f8d0 	bl	165bc <__aeabi_dmul>
   1a41c:	000f      	movs	r7, r1
   1a41e:	0006      	movs	r6, r0
   1a420:	f7fc fe62 	bl	170e8 <__aeabi_d2iz>
   1a424:	0004      	movs	r4, r0
   1a426:	f7fc fe93 	bl	17150 <__aeabi_i2d>
   1a42a:	3430      	adds	r4, #48	; 0x30
   1a42c:	0002      	movs	r2, r0
   1a42e:	000b      	movs	r3, r1
   1a430:	0030      	movs	r0, r6
   1a432:	0039      	movs	r1, r7
   1a434:	f7fc fb42 	bl	16abc <__aeabi_dsub>
   1a438:	702c      	strb	r4, [r5, #0]
   1a43a:	3501      	adds	r5, #1
   1a43c:	45a8      	cmp	r8, r5
   1a43e:	d1e9      	bne.n	1a414 <_dtoa_r+0xd88>
   1a440:	4644      	mov	r4, r8
   1a442:	9008      	str	r0, [sp, #32]
   1a444:	9109      	str	r1, [sp, #36]	; 0x24
   1a446:	9814      	ldr	r0, [sp, #80]	; 0x50
   1a448:	9915      	ldr	r1, [sp, #84]	; 0x54
   1a44a:	2200      	movs	r2, #0
   1a44c:	4b6e      	ldr	r3, [pc, #440]	; (1a608 <_dtoa_r+0xf7c>)
   1a44e:	f7fb fa71 	bl	15934 <__aeabi_dadd>
   1a452:	9a08      	ldr	r2, [sp, #32]
   1a454:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1a456:	f7fc ff0b 	bl	17270 <__aeabi_dcmplt>
   1a45a:	2800      	cmp	r0, #0
   1a45c:	d067      	beq.n	1a52e <_dtoa_r+0xea2>
   1a45e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1a460:	1e65      	subs	r5, r4, #1
   1a462:	9303      	str	r3, [sp, #12]
   1a464:	782f      	ldrb	r7, [r5, #0]
   1a466:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a468:	e42e      	b.n	19cc8 <_dtoa_r+0x63c>
   1a46a:	4643      	mov	r3, r8
   1a46c:	46b3      	mov	fp, r6
   1a46e:	930c      	str	r3, [sp, #48]	; 0x30
   1a470:	9e04      	ldr	r6, [sp, #16]
   1a472:	9b06      	ldr	r3, [sp, #24]
   1a474:	46a8      	mov	r8, r5
   1a476:	4699      	mov	r9, r3
   1a478:	4655      	mov	r5, sl
   1a47a:	46ba      	mov	sl, r7
   1a47c:	2e39      	cmp	r6, #57	; 0x39
   1a47e:	d04d      	beq.n	1a51c <_dtoa_r+0xe90>
   1a480:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1a482:	3601      	adds	r6, #1
   1a484:	4647      	mov	r7, r8
   1a486:	1c6c      	adds	r4, r5, #1
   1a488:	702e      	strb	r6, [r5, #0]
   1a48a:	4698      	mov	r8, r3
   1a48c:	e5f5      	b.n	1a07a <_dtoa_r+0x9ee>
   1a48e:	4642      	mov	r2, r8
   1a490:	9b06      	ldr	r3, [sp, #24]
   1a492:	46b3      	mov	fp, r6
   1a494:	46ba      	mov	sl, r7
   1a496:	9e04      	ldr	r6, [sp, #16]
   1a498:	4699      	mov	r9, r3
   1a49a:	002f      	movs	r7, r5
   1a49c:	4690      	mov	r8, r2
   1a49e:	e5d1      	b.n	1a044 <_dtoa_r+0x9b8>
   1a4a0:	9b06      	ldr	r3, [sp, #24]
   1a4a2:	9a07      	ldr	r2, [sp, #28]
   1a4a4:	1a9b      	subs	r3, r3, r2
   1a4a6:	9308      	str	r3, [sp, #32]
   1a4a8:	2300      	movs	r3, #0
   1a4aa:	e427      	b.n	19cfc <_dtoa_r+0x670>
   1a4ac:	2401      	movs	r4, #1
   1a4ae:	e5c5      	b.n	1a03c <_dtoa_r+0x9b0>
   1a4b0:	2336      	movs	r3, #54	; 0x36
   1a4b2:	9a16      	ldr	r2, [sp, #88]	; 0x58
   1a4b4:	464c      	mov	r4, r9
   1a4b6:	1a9b      	subs	r3, r3, r2
   1a4b8:	9a06      	ldr	r2, [sp, #24]
   1a4ba:	9208      	str	r2, [sp, #32]
   1a4bc:	e41e      	b.n	19cfc <_dtoa_r+0x670>
   1a4be:	2302      	movs	r3, #2
   1a4c0:	9e10      	ldr	r6, [sp, #64]	; 0x40
   1a4c2:	9f11      	ldr	r7, [sp, #68]	; 0x44
   1a4c4:	4698      	mov	r8, r3
   1a4c6:	f7ff fa31 	bl	1992c <_dtoa_r+0x2a0>
   1a4ca:	9b07      	ldr	r3, [sp, #28]
   1a4cc:	2b00      	cmp	r3, #0
   1a4ce:	d100      	bne.n	1a4d2 <_dtoa_r+0xe46>
   1a4d0:	e68e      	b.n	1a1f0 <_dtoa_r+0xb64>
   1a4d2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   1a4d4:	2c00      	cmp	r4, #0
   1a4d6:	dc00      	bgt.n	1a4da <_dtoa_r+0xe4e>
   1a4d8:	e712      	b.n	1a300 <_dtoa_r+0xc74>
   1a4da:	9b03      	ldr	r3, [sp, #12]
   1a4dc:	2200      	movs	r2, #0
   1a4de:	3b01      	subs	r3, #1
   1a4e0:	9313      	str	r3, [sp, #76]	; 0x4c
   1a4e2:	0030      	movs	r0, r6
   1a4e4:	4b47      	ldr	r3, [pc, #284]	; (1a604 <_dtoa_r+0xf78>)
   1a4e6:	0039      	movs	r1, r7
   1a4e8:	f7fc f868 	bl	165bc <__aeabi_dmul>
   1a4ec:	0006      	movs	r6, r0
   1a4ee:	4640      	mov	r0, r8
   1a4f0:	000f      	movs	r7, r1
   1a4f2:	3001      	adds	r0, #1
   1a4f4:	f7fc fe2c 	bl	17150 <__aeabi_i2d>
   1a4f8:	0032      	movs	r2, r6
   1a4fa:	003b      	movs	r3, r7
   1a4fc:	f7fc f85e 	bl	165bc <__aeabi_dmul>
   1a500:	2200      	movs	r2, #0
   1a502:	4b42      	ldr	r3, [pc, #264]	; (1a60c <_dtoa_r+0xf80>)
   1a504:	f7fb fa16 	bl	15934 <__aeabi_dadd>
   1a508:	4a41      	ldr	r2, [pc, #260]	; (1a610 <_dtoa_r+0xf84>)
   1a50a:	000b      	movs	r3, r1
   1a50c:	4694      	mov	ip, r2
   1a50e:	4463      	add	r3, ip
   1a510:	9008      	str	r0, [sp, #32]
   1a512:	9109      	str	r1, [sp, #36]	; 0x24
   1a514:	9412      	str	r4, [sp, #72]	; 0x48
   1a516:	9309      	str	r3, [sp, #36]	; 0x24
   1a518:	f7ff fa30 	bl	1997c <_dtoa_r+0x2f0>
   1a51c:	2339      	movs	r3, #57	; 0x39
   1a51e:	702b      	strb	r3, [r5, #0]
   1a520:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1a522:	4647      	mov	r7, r8
   1a524:	1c6c      	adds	r4, r5, #1
   1a526:	4698      	mov	r8, r3
   1a528:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1a52a:	2339      	movs	r3, #57	; 0x39
   1a52c:	e5a1      	b.n	1a072 <_dtoa_r+0x9e6>
   1a52e:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1a530:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1a532:	2000      	movs	r0, #0
   1a534:	4934      	ldr	r1, [pc, #208]	; (1a608 <_dtoa_r+0xf7c>)
   1a536:	f7fc fac1 	bl	16abc <__aeabi_dsub>
   1a53a:	9a08      	ldr	r2, [sp, #32]
   1a53c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1a53e:	f7fc feab 	bl	17298 <__aeabi_dcmpgt>
   1a542:	2800      	cmp	r0, #0
   1a544:	d101      	bne.n	1a54a <_dtoa_r+0xebe>
   1a546:	e6db      	b.n	1a300 <_dtoa_r+0xc74>
   1a548:	001c      	movs	r4, r3
   1a54a:	1e63      	subs	r3, r4, #1
   1a54c:	781a      	ldrb	r2, [r3, #0]
   1a54e:	2a30      	cmp	r2, #48	; 0x30
   1a550:	d0fa      	beq.n	1a548 <_dtoa_r+0xebc>
   1a552:	f7ff fac8 	bl	19ae6 <_dtoa_r+0x45a>
   1a556:	4643      	mov	r3, r8
   1a558:	46b3      	mov	fp, r6
   1a55a:	930c      	str	r3, [sp, #48]	; 0x30
   1a55c:	9e04      	ldr	r6, [sp, #16]
   1a55e:	9b06      	ldr	r3, [sp, #24]
   1a560:	46a8      	mov	r8, r5
   1a562:	4699      	mov	r9, r3
   1a564:	4655      	mov	r5, sl
   1a566:	46ba      	mov	sl, r7
   1a568:	2e39      	cmp	r6, #57	; 0x39
   1a56a:	d0d7      	beq.n	1a51c <_dtoa_r+0xe90>
   1a56c:	2c00      	cmp	r4, #0
   1a56e:	dd00      	ble.n	1a572 <_dtoa_r+0xee6>
   1a570:	e6b1      	b.n	1a2d6 <_dtoa_r+0xc4a>
   1a572:	e6b2      	b.n	1a2da <_dtoa_r+0xc4e>
   1a574:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   1a576:	464d      	mov	r5, r9
   1a578:	9203      	str	r2, [sp, #12]
   1a57a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a57c:	f7ff fba4 	bl	19cc8 <_dtoa_r+0x63c>
   1a580:	2800      	cmp	r0, #0
   1a582:	d000      	beq.n	1a586 <_dtoa_r+0xefa>
   1a584:	e6a9      	b.n	1a2da <_dtoa_r+0xc4e>
   1a586:	07f3      	lsls	r3, r6, #31
   1a588:	d400      	bmi.n	1a58c <_dtoa_r+0xf00>
   1a58a:	e6a6      	b.n	1a2da <_dtoa_r+0xc4e>
   1a58c:	e6a0      	b.n	1a2d0 <_dtoa_r+0xc44>
   1a58e:	2300      	movs	r3, #0
   1a590:	4641      	mov	r1, r8
   1a592:	220a      	movs	r2, #10
   1a594:	4650      	mov	r0, sl
   1a596:	f001 f8b7 	bl	1b708 <__multadd>
   1a59a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a59c:	4680      	mov	r8, r0
   1a59e:	2b00      	cmp	r3, #0
   1a5a0:	dd01      	ble.n	1a5a6 <_dtoa_r+0xf1a>
   1a5a2:	9307      	str	r3, [sp, #28]
   1a5a4:	e486      	b.n	19eb4 <_dtoa_r+0x828>
   1a5a6:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1a5a8:	2b02      	cmp	r3, #2
   1a5aa:	dc1f      	bgt.n	1a5ec <_dtoa_r+0xf60>
   1a5ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a5ae:	9307      	str	r3, [sp, #28]
   1a5b0:	e480      	b.n	19eb4 <_dtoa_r+0x828>
   1a5b2:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1a5b4:	2b02      	cmp	r3, #2
   1a5b6:	dc19      	bgt.n	1a5ec <_dtoa_r+0xf60>
   1a5b8:	4649      	mov	r1, r9
   1a5ba:	f7fe ffbd 	bl	19538 <quorem>
   1a5be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a5c0:	3030      	adds	r0, #48	; 0x30
   1a5c2:	7018      	strb	r0, [r3, #0]
   1a5c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a5c6:	0006      	movs	r6, r0
   1a5c8:	9307      	str	r3, [sp, #28]
   1a5ca:	e533      	b.n	1a034 <_dtoa_r+0x9a8>
   1a5cc:	2302      	movs	r3, #2
   1a5ce:	4698      	mov	r8, r3
   1a5d0:	f7ff f9ac 	bl	1992c <_dtoa_r+0x2a0>
   1a5d4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1a5d6:	9c14      	ldr	r4, [sp, #80]	; 0x50
   1a5d8:	9303      	str	r3, [sp, #12]
   1a5da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a5dc:	001d      	movs	r5, r3
   1a5de:	f7ff fb73 	bl	19cc8 <_dtoa_r+0x63c>
   1a5e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1a5e4:	9c14      	ldr	r4, [sp, #80]	; 0x50
   1a5e6:	9303      	str	r3, [sp, #12]
   1a5e8:	f7ff fa7f 	bl	19aea <_dtoa_r+0x45e>
   1a5ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a5ee:	9307      	str	r3, [sp, #28]
   1a5f0:	e5d6      	b.n	1a1a0 <_dtoa_r+0xb14>
   1a5f2:	2b04      	cmp	r3, #4
   1a5f4:	d100      	bne.n	1a5f8 <_dtoa_r+0xf6c>
   1a5f6:	e43f      	b.n	19e78 <_dtoa_r+0x7ec>
   1a5f8:	233c      	movs	r3, #60	; 0x3c
   1a5fa:	1a18      	subs	r0, r3, r0
   1a5fc:	e4d7      	b.n	19fae <_dtoa_r+0x922>
   1a5fe:	46c0      	nop			; (mov r8, r8)
   1a600:	0001e3a0 	.word	0x0001e3a0
   1a604:	40240000 	.word	0x40240000
   1a608:	3fe00000 	.word	0x3fe00000
   1a60c:	401c0000 	.word	0x401c0000
   1a610:	fcc00000 	.word	0xfcc00000

0001a614 <__sflush_r>:
   1a614:	b5f0      	push	{r4, r5, r6, r7, lr}
   1a616:	46c6      	mov	lr, r8
   1a618:	b500      	push	{lr}
   1a61a:	230c      	movs	r3, #12
   1a61c:	5eca      	ldrsh	r2, [r1, r3]
   1a61e:	4680      	mov	r8, r0
   1a620:	b293      	uxth	r3, r2
   1a622:	000c      	movs	r4, r1
   1a624:	0719      	lsls	r1, r3, #28
   1a626:	d440      	bmi.n	1a6aa <__sflush_r+0x96>
   1a628:	2380      	movs	r3, #128	; 0x80
   1a62a:	011b      	lsls	r3, r3, #4
   1a62c:	4313      	orrs	r3, r2
   1a62e:	6862      	ldr	r2, [r4, #4]
   1a630:	81a3      	strh	r3, [r4, #12]
   1a632:	2a00      	cmp	r2, #0
   1a634:	dc00      	bgt.n	1a638 <__sflush_r+0x24>
   1a636:	e070      	b.n	1a71a <__sflush_r+0x106>
   1a638:	6aa6      	ldr	r6, [r4, #40]	; 0x28
   1a63a:	2e00      	cmp	r6, #0
   1a63c:	d031      	beq.n	1a6a2 <__sflush_r+0x8e>
   1a63e:	4642      	mov	r2, r8
   1a640:	4641      	mov	r1, r8
   1a642:	6815      	ldr	r5, [r2, #0]
   1a644:	2200      	movs	r2, #0
   1a646:	b29b      	uxth	r3, r3
   1a648:	600a      	str	r2, [r1, #0]
   1a64a:	04da      	lsls	r2, r3, #19
   1a64c:	d400      	bmi.n	1a650 <__sflush_r+0x3c>
   1a64e:	e069      	b.n	1a724 <__sflush_r+0x110>
   1a650:	6d22      	ldr	r2, [r4, #80]	; 0x50
   1a652:	075b      	lsls	r3, r3, #29
   1a654:	d506      	bpl.n	1a664 <__sflush_r+0x50>
   1a656:	6863      	ldr	r3, [r4, #4]
   1a658:	1ad2      	subs	r2, r2, r3
   1a65a:	6b23      	ldr	r3, [r4, #48]	; 0x30
   1a65c:	2b00      	cmp	r3, #0
   1a65e:	d001      	beq.n	1a664 <__sflush_r+0x50>
   1a660:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1a662:	1ad2      	subs	r2, r2, r3
   1a664:	2300      	movs	r3, #0
   1a666:	69e1      	ldr	r1, [r4, #28]
   1a668:	4640      	mov	r0, r8
   1a66a:	47b0      	blx	r6
   1a66c:	1c43      	adds	r3, r0, #1
   1a66e:	d03d      	beq.n	1a6ec <__sflush_r+0xd8>
   1a670:	89a3      	ldrh	r3, [r4, #12]
   1a672:	4a3a      	ldr	r2, [pc, #232]	; (1a75c <__sflush_r+0x148>)
   1a674:	4013      	ands	r3, r2
   1a676:	2200      	movs	r2, #0
   1a678:	6062      	str	r2, [r4, #4]
   1a67a:	6922      	ldr	r2, [r4, #16]
   1a67c:	b21b      	sxth	r3, r3
   1a67e:	81a3      	strh	r3, [r4, #12]
   1a680:	6022      	str	r2, [r4, #0]
   1a682:	04db      	lsls	r3, r3, #19
   1a684:	d447      	bmi.n	1a716 <__sflush_r+0x102>
   1a686:	4643      	mov	r3, r8
   1a688:	6b21      	ldr	r1, [r4, #48]	; 0x30
   1a68a:	601d      	str	r5, [r3, #0]
   1a68c:	2900      	cmp	r1, #0
   1a68e:	d008      	beq.n	1a6a2 <__sflush_r+0x8e>
   1a690:	0023      	movs	r3, r4
   1a692:	3340      	adds	r3, #64	; 0x40
   1a694:	4299      	cmp	r1, r3
   1a696:	d002      	beq.n	1a69e <__sflush_r+0x8a>
   1a698:	4640      	mov	r0, r8
   1a69a:	f000 f967 	bl	1a96c <_free_r>
   1a69e:	2300      	movs	r3, #0
   1a6a0:	6323      	str	r3, [r4, #48]	; 0x30
   1a6a2:	2000      	movs	r0, #0
   1a6a4:	bc04      	pop	{r2}
   1a6a6:	4690      	mov	r8, r2
   1a6a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1a6aa:	6926      	ldr	r6, [r4, #16]
   1a6ac:	2e00      	cmp	r6, #0
   1a6ae:	d0f8      	beq.n	1a6a2 <__sflush_r+0x8e>
   1a6b0:	6822      	ldr	r2, [r4, #0]
   1a6b2:	6026      	str	r6, [r4, #0]
   1a6b4:	1b95      	subs	r5, r2, r6
   1a6b6:	2200      	movs	r2, #0
   1a6b8:	079b      	lsls	r3, r3, #30
   1a6ba:	d100      	bne.n	1a6be <__sflush_r+0xaa>
   1a6bc:	6962      	ldr	r2, [r4, #20]
   1a6be:	60a2      	str	r2, [r4, #8]
   1a6c0:	2d00      	cmp	r5, #0
   1a6c2:	dc04      	bgt.n	1a6ce <__sflush_r+0xba>
   1a6c4:	e7ed      	b.n	1a6a2 <__sflush_r+0x8e>
   1a6c6:	1836      	adds	r6, r6, r0
   1a6c8:	1a2d      	subs	r5, r5, r0
   1a6ca:	2d00      	cmp	r5, #0
   1a6cc:	dde9      	ble.n	1a6a2 <__sflush_r+0x8e>
   1a6ce:	002b      	movs	r3, r5
   1a6d0:	0032      	movs	r2, r6
   1a6d2:	69e1      	ldr	r1, [r4, #28]
   1a6d4:	4640      	mov	r0, r8
   1a6d6:	6a67      	ldr	r7, [r4, #36]	; 0x24
   1a6d8:	47b8      	blx	r7
   1a6da:	2800      	cmp	r0, #0
   1a6dc:	dcf3      	bgt.n	1a6c6 <__sflush_r+0xb2>
   1a6de:	2240      	movs	r2, #64	; 0x40
   1a6e0:	2001      	movs	r0, #1
   1a6e2:	89a3      	ldrh	r3, [r4, #12]
   1a6e4:	4240      	negs	r0, r0
   1a6e6:	4313      	orrs	r3, r2
   1a6e8:	81a3      	strh	r3, [r4, #12]
   1a6ea:	e7db      	b.n	1a6a4 <__sflush_r+0x90>
   1a6ec:	4643      	mov	r3, r8
   1a6ee:	6819      	ldr	r1, [r3, #0]
   1a6f0:	291d      	cmp	r1, #29
   1a6f2:	d8f4      	bhi.n	1a6de <__sflush_r+0xca>
   1a6f4:	4b1a      	ldr	r3, [pc, #104]	; (1a760 <__sflush_r+0x14c>)
   1a6f6:	2201      	movs	r2, #1
   1a6f8:	40cb      	lsrs	r3, r1
   1a6fa:	439a      	bics	r2, r3
   1a6fc:	d1ef      	bne.n	1a6de <__sflush_r+0xca>
   1a6fe:	89a3      	ldrh	r3, [r4, #12]
   1a700:	4e16      	ldr	r6, [pc, #88]	; (1a75c <__sflush_r+0x148>)
   1a702:	6062      	str	r2, [r4, #4]
   1a704:	4033      	ands	r3, r6
   1a706:	6922      	ldr	r2, [r4, #16]
   1a708:	b21b      	sxth	r3, r3
   1a70a:	81a3      	strh	r3, [r4, #12]
   1a70c:	6022      	str	r2, [r4, #0]
   1a70e:	04db      	lsls	r3, r3, #19
   1a710:	d5b9      	bpl.n	1a686 <__sflush_r+0x72>
   1a712:	2900      	cmp	r1, #0
   1a714:	d1b7      	bne.n	1a686 <__sflush_r+0x72>
   1a716:	6520      	str	r0, [r4, #80]	; 0x50
   1a718:	e7b5      	b.n	1a686 <__sflush_r+0x72>
   1a71a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
   1a71c:	2a00      	cmp	r2, #0
   1a71e:	dd00      	ble.n	1a722 <__sflush_r+0x10e>
   1a720:	e78a      	b.n	1a638 <__sflush_r+0x24>
   1a722:	e7be      	b.n	1a6a2 <__sflush_r+0x8e>
   1a724:	2200      	movs	r2, #0
   1a726:	2301      	movs	r3, #1
   1a728:	69e1      	ldr	r1, [r4, #28]
   1a72a:	4640      	mov	r0, r8
   1a72c:	47b0      	blx	r6
   1a72e:	0002      	movs	r2, r0
   1a730:	1c43      	adds	r3, r0, #1
   1a732:	d002      	beq.n	1a73a <__sflush_r+0x126>
   1a734:	89a3      	ldrh	r3, [r4, #12]
   1a736:	6aa6      	ldr	r6, [r4, #40]	; 0x28
   1a738:	e78b      	b.n	1a652 <__sflush_r+0x3e>
   1a73a:	4643      	mov	r3, r8
   1a73c:	681b      	ldr	r3, [r3, #0]
   1a73e:	2b00      	cmp	r3, #0
   1a740:	d0f8      	beq.n	1a734 <__sflush_r+0x120>
   1a742:	2b1d      	cmp	r3, #29
   1a744:	d001      	beq.n	1a74a <__sflush_r+0x136>
   1a746:	2b16      	cmp	r3, #22
   1a748:	d103      	bne.n	1a752 <__sflush_r+0x13e>
   1a74a:	4643      	mov	r3, r8
   1a74c:	2000      	movs	r0, #0
   1a74e:	601d      	str	r5, [r3, #0]
   1a750:	e7a8      	b.n	1a6a4 <__sflush_r+0x90>
   1a752:	2140      	movs	r1, #64	; 0x40
   1a754:	89a3      	ldrh	r3, [r4, #12]
   1a756:	430b      	orrs	r3, r1
   1a758:	81a3      	strh	r3, [r4, #12]
   1a75a:	e7a3      	b.n	1a6a4 <__sflush_r+0x90>
   1a75c:	fffff7ff 	.word	0xfffff7ff
   1a760:	20400001 	.word	0x20400001

0001a764 <_fflush_r>:
   1a764:	b570      	push	{r4, r5, r6, lr}
   1a766:	0005      	movs	r5, r0
   1a768:	000c      	movs	r4, r1
   1a76a:	2800      	cmp	r0, #0
   1a76c:	d002      	beq.n	1a774 <_fflush_r+0x10>
   1a76e:	6b83      	ldr	r3, [r0, #56]	; 0x38
   1a770:	2b00      	cmp	r3, #0
   1a772:	d016      	beq.n	1a7a2 <_fflush_r+0x3e>
   1a774:	220c      	movs	r2, #12
   1a776:	5ea3      	ldrsh	r3, [r4, r2]
   1a778:	2600      	movs	r6, #0
   1a77a:	2b00      	cmp	r3, #0
   1a77c:	d00f      	beq.n	1a79e <_fflush_r+0x3a>
   1a77e:	6e62      	ldr	r2, [r4, #100]	; 0x64
   1a780:	07d2      	lsls	r2, r2, #31
   1a782:	d401      	bmi.n	1a788 <_fflush_r+0x24>
   1a784:	059b      	lsls	r3, r3, #22
   1a786:	d513      	bpl.n	1a7b0 <_fflush_r+0x4c>
   1a788:	0021      	movs	r1, r4
   1a78a:	0028      	movs	r0, r5
   1a78c:	f7ff ff42 	bl	1a614 <__sflush_r>
   1a790:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1a792:	0006      	movs	r6, r0
   1a794:	07db      	lsls	r3, r3, #31
   1a796:	d402      	bmi.n	1a79e <_fflush_r+0x3a>
   1a798:	89a3      	ldrh	r3, [r4, #12]
   1a79a:	059b      	lsls	r3, r3, #22
   1a79c:	d504      	bpl.n	1a7a8 <_fflush_r+0x44>
   1a79e:	0030      	movs	r0, r6
   1a7a0:	bd70      	pop	{r4, r5, r6, pc}
   1a7a2:	f000 f839 	bl	1a818 <__sinit>
   1a7a6:	e7e5      	b.n	1a774 <_fflush_r+0x10>
   1a7a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1a7aa:	f000 fb8d 	bl	1aec8 <__retarget_lock_release_recursive>
   1a7ae:	e7f6      	b.n	1a79e <_fflush_r+0x3a>
   1a7b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1a7b2:	f000 fb87 	bl	1aec4 <__retarget_lock_acquire_recursive>
   1a7b6:	e7e7      	b.n	1a788 <_fflush_r+0x24>

0001a7b8 <_cleanup_r>:
   1a7b8:	b510      	push	{r4, lr}
   1a7ba:	4902      	ldr	r1, [pc, #8]	; (1a7c4 <_cleanup_r+0xc>)
   1a7bc:	f000 fb36 	bl	1ae2c <_fwalk_reent>
   1a7c0:	bd10      	pop	{r4, pc}
   1a7c2:	46c0      	nop			; (mov r8, r8)
   1a7c4:	0001c4ed 	.word	0x0001c4ed

0001a7c8 <std.isra.0>:
   1a7c8:	2300      	movs	r3, #0
   1a7ca:	b510      	push	{r4, lr}
   1a7cc:	0004      	movs	r4, r0
   1a7ce:	6003      	str	r3, [r0, #0]
   1a7d0:	6043      	str	r3, [r0, #4]
   1a7d2:	6083      	str	r3, [r0, #8]
   1a7d4:	8181      	strh	r1, [r0, #12]
   1a7d6:	6643      	str	r3, [r0, #100]	; 0x64
   1a7d8:	81c2      	strh	r2, [r0, #14]
   1a7da:	6103      	str	r3, [r0, #16]
   1a7dc:	6143      	str	r3, [r0, #20]
   1a7de:	6183      	str	r3, [r0, #24]
   1a7e0:	2208      	movs	r2, #8
   1a7e2:	2100      	movs	r1, #0
   1a7e4:	305c      	adds	r0, #92	; 0x5c
   1a7e6:	f7fc ffd7 	bl	17798 <memset>
   1a7ea:	0020      	movs	r0, r4
   1a7ec:	4b06      	ldr	r3, [pc, #24]	; (1a808 <std.isra.0+0x40>)
   1a7ee:	61e4      	str	r4, [r4, #28]
   1a7f0:	6223      	str	r3, [r4, #32]
   1a7f2:	4b06      	ldr	r3, [pc, #24]	; (1a80c <std.isra.0+0x44>)
   1a7f4:	3058      	adds	r0, #88	; 0x58
   1a7f6:	6263      	str	r3, [r4, #36]	; 0x24
   1a7f8:	4b05      	ldr	r3, [pc, #20]	; (1a810 <std.isra.0+0x48>)
   1a7fa:	62a3      	str	r3, [r4, #40]	; 0x28
   1a7fc:	4b05      	ldr	r3, [pc, #20]	; (1a814 <std.isra.0+0x4c>)
   1a7fe:	62e3      	str	r3, [r4, #44]	; 0x2c
   1a800:	f000 fb5c 	bl	1aebc <__retarget_lock_init_recursive>
   1a804:	bd10      	pop	{r4, pc}
   1a806:	46c0      	nop			; (mov r8, r8)
   1a808:	0001c149 	.word	0x0001c149
   1a80c:	0001c171 	.word	0x0001c171
   1a810:	0001c1ad 	.word	0x0001c1ad
   1a814:	0001c1d9 	.word	0x0001c1d9

0001a818 <__sinit>:
   1a818:	b570      	push	{r4, r5, r6, lr}
   1a81a:	0004      	movs	r4, r0
   1a81c:	4d14      	ldr	r5, [pc, #80]	; (1a870 <__sinit+0x58>)
   1a81e:	0028      	movs	r0, r5
   1a820:	f000 fb50 	bl	1aec4 <__retarget_lock_acquire_recursive>
   1a824:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1a826:	2b00      	cmp	r3, #0
   1a828:	d11d      	bne.n	1a866 <__sinit+0x4e>
   1a82a:	4a12      	ldr	r2, [pc, #72]	; (1a874 <__sinit+0x5c>)
   1a82c:	2104      	movs	r1, #4
   1a82e:	63e2      	str	r2, [r4, #60]	; 0x3c
   1a830:	22b8      	movs	r2, #184	; 0xb8
   1a832:	0092      	lsls	r2, r2, #2
   1a834:	50a3      	str	r3, [r4, r2]
   1a836:	23b9      	movs	r3, #185	; 0xb9
   1a838:	2203      	movs	r2, #3
   1a83a:	009b      	lsls	r3, r3, #2
   1a83c:	50e2      	str	r2, [r4, r3]
   1a83e:	3308      	adds	r3, #8
   1a840:	18e2      	adds	r2, r4, r3
   1a842:	3b04      	subs	r3, #4
   1a844:	50e2      	str	r2, [r4, r3]
   1a846:	6860      	ldr	r0, [r4, #4]
   1a848:	2200      	movs	r2, #0
   1a84a:	f7ff ffbd 	bl	1a7c8 <std.isra.0>
   1a84e:	2201      	movs	r2, #1
   1a850:	2109      	movs	r1, #9
   1a852:	68a0      	ldr	r0, [r4, #8]
   1a854:	f7ff ffb8 	bl	1a7c8 <std.isra.0>
   1a858:	2202      	movs	r2, #2
   1a85a:	2112      	movs	r1, #18
   1a85c:	68e0      	ldr	r0, [r4, #12]
   1a85e:	f7ff ffb3 	bl	1a7c8 <std.isra.0>
   1a862:	2301      	movs	r3, #1
   1a864:	63a3      	str	r3, [r4, #56]	; 0x38
   1a866:	0028      	movs	r0, r5
   1a868:	f000 fb2e 	bl	1aec8 <__retarget_lock_release_recursive>
   1a86c:	bd70      	pop	{r4, r5, r6, pc}
   1a86e:	46c0      	nop			; (mov r8, r8)
   1a870:	20001c4c 	.word	0x20001c4c
   1a874:	0001a7b9 	.word	0x0001a7b9

0001a878 <__sfp_lock_acquire>:
   1a878:	b510      	push	{r4, lr}
   1a87a:	4802      	ldr	r0, [pc, #8]	; (1a884 <__sfp_lock_acquire+0xc>)
   1a87c:	f000 fb22 	bl	1aec4 <__retarget_lock_acquire_recursive>
   1a880:	bd10      	pop	{r4, pc}
   1a882:	46c0      	nop			; (mov r8, r8)
   1a884:	20001c60 	.word	0x20001c60

0001a888 <__sfp_lock_release>:
   1a888:	b510      	push	{r4, lr}
   1a88a:	4802      	ldr	r0, [pc, #8]	; (1a894 <__sfp_lock_release+0xc>)
   1a88c:	f000 fb1c 	bl	1aec8 <__retarget_lock_release_recursive>
   1a890:	bd10      	pop	{r4, pc}
   1a892:	46c0      	nop			; (mov r8, r8)
   1a894:	20001c60 	.word	0x20001c60

0001a898 <__libc_fini_array>:
   1a898:	b570      	push	{r4, r5, r6, lr}
   1a89a:	4b09      	ldr	r3, [pc, #36]	; (1a8c0 <__libc_fini_array+0x28>)
   1a89c:	4c09      	ldr	r4, [pc, #36]	; (1a8c4 <__libc_fini_array+0x2c>)
   1a89e:	1ae4      	subs	r4, r4, r3
   1a8a0:	10a4      	asrs	r4, r4, #2
   1a8a2:	d009      	beq.n	1a8b8 <__libc_fini_array+0x20>
   1a8a4:	4a08      	ldr	r2, [pc, #32]	; (1a8c8 <__libc_fini_array+0x30>)
   1a8a6:	18a5      	adds	r5, r4, r2
   1a8a8:	00ad      	lsls	r5, r5, #2
   1a8aa:	18ed      	adds	r5, r5, r3
   1a8ac:	682b      	ldr	r3, [r5, #0]
   1a8ae:	3c01      	subs	r4, #1
   1a8b0:	4798      	blx	r3
   1a8b2:	3d04      	subs	r5, #4
   1a8b4:	2c00      	cmp	r4, #0
   1a8b6:	d1f9      	bne.n	1a8ac <__libc_fini_array+0x14>
   1a8b8:	f003 fe68 	bl	1e58c <_fini>
   1a8bc:	bd70      	pop	{r4, r5, r6, pc}
   1a8be:	46c0      	nop			; (mov r8, r8)
   1a8c0:	0001e598 	.word	0x0001e598
   1a8c4:	0001e59c 	.word	0x0001e59c
   1a8c8:	3fffffff 	.word	0x3fffffff

0001a8cc <_malloc_trim_r>:
   1a8cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1a8ce:	000c      	movs	r4, r1
   1a8d0:	0006      	movs	r6, r0
   1a8d2:	f000 fed7 	bl	1b684 <__malloc_lock>
   1a8d6:	4f20      	ldr	r7, [pc, #128]	; (1a958 <_malloc_trim_r+0x8c>)
   1a8d8:	68bb      	ldr	r3, [r7, #8]
   1a8da:	685d      	ldr	r5, [r3, #4]
   1a8dc:	2303      	movs	r3, #3
   1a8de:	439d      	bics	r5, r3
   1a8e0:	4b1e      	ldr	r3, [pc, #120]	; (1a95c <_malloc_trim_r+0x90>)
   1a8e2:	1b2c      	subs	r4, r5, r4
   1a8e4:	469c      	mov	ip, r3
   1a8e6:	4464      	add	r4, ip
   1a8e8:	0b24      	lsrs	r4, r4, #12
   1a8ea:	4b1d      	ldr	r3, [pc, #116]	; (1a960 <_malloc_trim_r+0x94>)
   1a8ec:	3c01      	subs	r4, #1
   1a8ee:	0324      	lsls	r4, r4, #12
   1a8f0:	429c      	cmp	r4, r3
   1a8f2:	dd07      	ble.n	1a904 <_malloc_trim_r+0x38>
   1a8f4:	2100      	movs	r1, #0
   1a8f6:	0030      	movs	r0, r6
   1a8f8:	f001 fc14 	bl	1c124 <_sbrk_r>
   1a8fc:	68bb      	ldr	r3, [r7, #8]
   1a8fe:	195b      	adds	r3, r3, r5
   1a900:	4298      	cmp	r0, r3
   1a902:	d004      	beq.n	1a90e <_malloc_trim_r+0x42>
   1a904:	0030      	movs	r0, r6
   1a906:	f000 fec5 	bl	1b694 <__malloc_unlock>
   1a90a:	2000      	movs	r0, #0
   1a90c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a90e:	4261      	negs	r1, r4
   1a910:	0030      	movs	r0, r6
   1a912:	f001 fc07 	bl	1c124 <_sbrk_r>
   1a916:	1c43      	adds	r3, r0, #1
   1a918:	d00d      	beq.n	1a936 <_malloc_trim_r+0x6a>
   1a91a:	2201      	movs	r2, #1
   1a91c:	68bb      	ldr	r3, [r7, #8]
   1a91e:	1b2d      	subs	r5, r5, r4
   1a920:	4315      	orrs	r5, r2
   1a922:	605d      	str	r5, [r3, #4]
   1a924:	4b0f      	ldr	r3, [pc, #60]	; (1a964 <_malloc_trim_r+0x98>)
   1a926:	0030      	movs	r0, r6
   1a928:	681a      	ldr	r2, [r3, #0]
   1a92a:	1b14      	subs	r4, r2, r4
   1a92c:	601c      	str	r4, [r3, #0]
   1a92e:	f000 feb1 	bl	1b694 <__malloc_unlock>
   1a932:	2001      	movs	r0, #1
   1a934:	e7ea      	b.n	1a90c <_malloc_trim_r+0x40>
   1a936:	2100      	movs	r1, #0
   1a938:	0030      	movs	r0, r6
   1a93a:	f001 fbf3 	bl	1c124 <_sbrk_r>
   1a93e:	68ba      	ldr	r2, [r7, #8]
   1a940:	1a83      	subs	r3, r0, r2
   1a942:	2b0f      	cmp	r3, #15
   1a944:	ddde      	ble.n	1a904 <_malloc_trim_r+0x38>
   1a946:	4908      	ldr	r1, [pc, #32]	; (1a968 <_malloc_trim_r+0x9c>)
   1a948:	6809      	ldr	r1, [r1, #0]
   1a94a:	1a40      	subs	r0, r0, r1
   1a94c:	4905      	ldr	r1, [pc, #20]	; (1a964 <_malloc_trim_r+0x98>)
   1a94e:	6008      	str	r0, [r1, #0]
   1a950:	2101      	movs	r1, #1
   1a952:	430b      	orrs	r3, r1
   1a954:	6053      	str	r3, [r2, #4]
   1a956:	e7d5      	b.n	1a904 <_malloc_trim_r+0x38>
   1a958:	200005d8 	.word	0x200005d8
   1a95c:	00000fef 	.word	0x00000fef
   1a960:	00000fff 	.word	0x00000fff
   1a964:	20000c9c 	.word	0x20000c9c
   1a968:	200009e0 	.word	0x200009e0

0001a96c <_free_r>:
   1a96c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1a96e:	0004      	movs	r4, r0
   1a970:	1e0d      	subs	r5, r1, #0
   1a972:	d03c      	beq.n	1a9ee <_free_r+0x82>
   1a974:	f000 fe86 	bl	1b684 <__malloc_lock>
   1a978:	0029      	movs	r1, r5
   1a97a:	3908      	subs	r1, #8
   1a97c:	6848      	ldr	r0, [r1, #4]
   1a97e:	2301      	movs	r3, #1
   1a980:	0005      	movs	r5, r0
   1a982:	2603      	movs	r6, #3
   1a984:	439d      	bics	r5, r3
   1a986:	194a      	adds	r2, r1, r5
   1a988:	469c      	mov	ip, r3
   1a98a:	4f61      	ldr	r7, [pc, #388]	; (1ab10 <_free_r+0x1a4>)
   1a98c:	6853      	ldr	r3, [r2, #4]
   1a98e:	43b3      	bics	r3, r6
   1a990:	68be      	ldr	r6, [r7, #8]
   1a992:	42b2      	cmp	r2, r6
   1a994:	d056      	beq.n	1aa44 <_free_r+0xd8>
   1a996:	4666      	mov	r6, ip
   1a998:	6053      	str	r3, [r2, #4]
   1a99a:	4206      	tst	r6, r0
   1a99c:	d10a      	bne.n	1a9b4 <_free_r+0x48>
   1a99e:	003e      	movs	r6, r7
   1a9a0:	6808      	ldr	r0, [r1, #0]
   1a9a2:	3608      	adds	r6, #8
   1a9a4:	1a09      	subs	r1, r1, r0
   1a9a6:	182d      	adds	r5, r5, r0
   1a9a8:	6888      	ldr	r0, [r1, #8]
   1a9aa:	42b0      	cmp	r0, r6
   1a9ac:	d065      	beq.n	1aa7a <_free_r+0x10e>
   1a9ae:	68ce      	ldr	r6, [r1, #12]
   1a9b0:	60c6      	str	r6, [r0, #12]
   1a9b2:	60b0      	str	r0, [r6, #8]
   1a9b4:	2001      	movs	r0, #1
   1a9b6:	18d6      	adds	r6, r2, r3
   1a9b8:	6876      	ldr	r6, [r6, #4]
   1a9ba:	4206      	tst	r6, r0
   1a9bc:	d033      	beq.n	1aa26 <_free_r+0xba>
   1a9be:	4b55      	ldr	r3, [pc, #340]	; (1ab14 <_free_r+0x1a8>)
   1a9c0:	4328      	orrs	r0, r5
   1a9c2:	6048      	str	r0, [r1, #4]
   1a9c4:	514d      	str	r5, [r1, r5]
   1a9c6:	429d      	cmp	r5, r3
   1a9c8:	d812      	bhi.n	1a9f0 <_free_r+0x84>
   1a9ca:	08ed      	lsrs	r5, r5, #3
   1a9cc:	3bff      	subs	r3, #255	; 0xff
   1a9ce:	10aa      	asrs	r2, r5, #2
   1a9d0:	3bff      	subs	r3, #255	; 0xff
   1a9d2:	4093      	lsls	r3, r2
   1a9d4:	687a      	ldr	r2, [r7, #4]
   1a9d6:	00ed      	lsls	r5, r5, #3
   1a9d8:	4313      	orrs	r3, r2
   1a9da:	607b      	str	r3, [r7, #4]
   1a9dc:	19ef      	adds	r7, r5, r7
   1a9de:	68bb      	ldr	r3, [r7, #8]
   1a9e0:	60cf      	str	r7, [r1, #12]
   1a9e2:	608b      	str	r3, [r1, #8]
   1a9e4:	60b9      	str	r1, [r7, #8]
   1a9e6:	60d9      	str	r1, [r3, #12]
   1a9e8:	0020      	movs	r0, r4
   1a9ea:	f000 fe53 	bl	1b694 <__malloc_unlock>
   1a9ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a9f0:	0a68      	lsrs	r0, r5, #9
   1a9f2:	2804      	cmp	r0, #4
   1a9f4:	d850      	bhi.n	1aa98 <_free_r+0x12c>
   1a9f6:	09a8      	lsrs	r0, r5, #6
   1a9f8:	0002      	movs	r2, r0
   1a9fa:	3039      	adds	r0, #57	; 0x39
   1a9fc:	3238      	adds	r2, #56	; 0x38
   1a9fe:	00c0      	lsls	r0, r0, #3
   1aa00:	1838      	adds	r0, r7, r0
   1aa02:	3808      	subs	r0, #8
   1aa04:	6883      	ldr	r3, [r0, #8]
   1aa06:	2603      	movs	r6, #3
   1aa08:	4298      	cmp	r0, r3
   1aa0a:	d04c      	beq.n	1aaa6 <_free_r+0x13a>
   1aa0c:	685a      	ldr	r2, [r3, #4]
   1aa0e:	43b2      	bics	r2, r6
   1aa10:	4295      	cmp	r5, r2
   1aa12:	d230      	bcs.n	1aa76 <_free_r+0x10a>
   1aa14:	689b      	ldr	r3, [r3, #8]
   1aa16:	4298      	cmp	r0, r3
   1aa18:	d1f8      	bne.n	1aa0c <_free_r+0xa0>
   1aa1a:	68c3      	ldr	r3, [r0, #12]
   1aa1c:	60cb      	str	r3, [r1, #12]
   1aa1e:	6088      	str	r0, [r1, #8]
   1aa20:	6099      	str	r1, [r3, #8]
   1aa22:	60c1      	str	r1, [r0, #12]
   1aa24:	e7e0      	b.n	1a9e8 <_free_r+0x7c>
   1aa26:	18ed      	adds	r5, r5, r3
   1aa28:	4e3b      	ldr	r6, [pc, #236]	; (1ab18 <_free_r+0x1ac>)
   1aa2a:	6893      	ldr	r3, [r2, #8]
   1aa2c:	42b3      	cmp	r3, r6
   1aa2e:	d042      	beq.n	1aab6 <_free_r+0x14a>
   1aa30:	68d2      	ldr	r2, [r2, #12]
   1aa32:	4328      	orrs	r0, r5
   1aa34:	60da      	str	r2, [r3, #12]
   1aa36:	6093      	str	r3, [r2, #8]
   1aa38:	4b36      	ldr	r3, [pc, #216]	; (1ab14 <_free_r+0x1a8>)
   1aa3a:	6048      	str	r0, [r1, #4]
   1aa3c:	514d      	str	r5, [r1, r5]
   1aa3e:	429d      	cmp	r5, r3
   1aa40:	d8d6      	bhi.n	1a9f0 <_free_r+0x84>
   1aa42:	e7c2      	b.n	1a9ca <_free_r+0x5e>
   1aa44:	4662      	mov	r2, ip
   1aa46:	18eb      	adds	r3, r5, r3
   1aa48:	4202      	tst	r2, r0
   1aa4a:	d106      	bne.n	1aa5a <_free_r+0xee>
   1aa4c:	680a      	ldr	r2, [r1, #0]
   1aa4e:	1a89      	subs	r1, r1, r2
   1aa50:	6888      	ldr	r0, [r1, #8]
   1aa52:	189b      	adds	r3, r3, r2
   1aa54:	68ca      	ldr	r2, [r1, #12]
   1aa56:	60c2      	str	r2, [r0, #12]
   1aa58:	6090      	str	r0, [r2, #8]
   1aa5a:	2201      	movs	r2, #1
   1aa5c:	431a      	orrs	r2, r3
   1aa5e:	604a      	str	r2, [r1, #4]
   1aa60:	4a2e      	ldr	r2, [pc, #184]	; (1ab1c <_free_r+0x1b0>)
   1aa62:	60b9      	str	r1, [r7, #8]
   1aa64:	6812      	ldr	r2, [r2, #0]
   1aa66:	4293      	cmp	r3, r2
   1aa68:	d3be      	bcc.n	1a9e8 <_free_r+0x7c>
   1aa6a:	4b2d      	ldr	r3, [pc, #180]	; (1ab20 <_free_r+0x1b4>)
   1aa6c:	0020      	movs	r0, r4
   1aa6e:	6819      	ldr	r1, [r3, #0]
   1aa70:	f7ff ff2c 	bl	1a8cc <_malloc_trim_r>
   1aa74:	e7b8      	b.n	1a9e8 <_free_r+0x7c>
   1aa76:	0018      	movs	r0, r3
   1aa78:	e7cf      	b.n	1aa1a <_free_r+0xae>
   1aa7a:	4666      	mov	r6, ip
   1aa7c:	18d0      	adds	r0, r2, r3
   1aa7e:	6840      	ldr	r0, [r0, #4]
   1aa80:	4230      	tst	r0, r6
   1aa82:	d13f      	bne.n	1ab04 <_free_r+0x198>
   1aa84:	6890      	ldr	r0, [r2, #8]
   1aa86:	195d      	adds	r5, r3, r5
   1aa88:	68d3      	ldr	r3, [r2, #12]
   1aa8a:	60c3      	str	r3, [r0, #12]
   1aa8c:	6098      	str	r0, [r3, #8]
   1aa8e:	4663      	mov	r3, ip
   1aa90:	432b      	orrs	r3, r5
   1aa92:	604b      	str	r3, [r1, #4]
   1aa94:	514d      	str	r5, [r1, r5]
   1aa96:	e7a7      	b.n	1a9e8 <_free_r+0x7c>
   1aa98:	2814      	cmp	r0, #20
   1aa9a:	d814      	bhi.n	1aac6 <_free_r+0x15a>
   1aa9c:	0002      	movs	r2, r0
   1aa9e:	305c      	adds	r0, #92	; 0x5c
   1aaa0:	325b      	adds	r2, #91	; 0x5b
   1aaa2:	00c0      	lsls	r0, r0, #3
   1aaa4:	e7ac      	b.n	1aa00 <_free_r+0x94>
   1aaa6:	2301      	movs	r3, #1
   1aaa8:	1092      	asrs	r2, r2, #2
   1aaaa:	4093      	lsls	r3, r2
   1aaac:	687a      	ldr	r2, [r7, #4]
   1aaae:	4313      	orrs	r3, r2
   1aab0:	607b      	str	r3, [r7, #4]
   1aab2:	0003      	movs	r3, r0
   1aab4:	e7b2      	b.n	1aa1c <_free_r+0xb0>
   1aab6:	4328      	orrs	r0, r5
   1aab8:	60d9      	str	r1, [r3, #12]
   1aaba:	6099      	str	r1, [r3, #8]
   1aabc:	60cb      	str	r3, [r1, #12]
   1aabe:	608b      	str	r3, [r1, #8]
   1aac0:	6048      	str	r0, [r1, #4]
   1aac2:	514d      	str	r5, [r1, r5]
   1aac4:	e790      	b.n	1a9e8 <_free_r+0x7c>
   1aac6:	2854      	cmp	r0, #84	; 0x54
   1aac8:	d805      	bhi.n	1aad6 <_free_r+0x16a>
   1aaca:	0b28      	lsrs	r0, r5, #12
   1aacc:	0002      	movs	r2, r0
   1aace:	306f      	adds	r0, #111	; 0x6f
   1aad0:	326e      	adds	r2, #110	; 0x6e
   1aad2:	00c0      	lsls	r0, r0, #3
   1aad4:	e794      	b.n	1aa00 <_free_r+0x94>
   1aad6:	22aa      	movs	r2, #170	; 0xaa
   1aad8:	0052      	lsls	r2, r2, #1
   1aada:	4290      	cmp	r0, r2
   1aadc:	d805      	bhi.n	1aaea <_free_r+0x17e>
   1aade:	0be8      	lsrs	r0, r5, #15
   1aae0:	0002      	movs	r2, r0
   1aae2:	3078      	adds	r0, #120	; 0x78
   1aae4:	3277      	adds	r2, #119	; 0x77
   1aae6:	00c0      	lsls	r0, r0, #3
   1aae8:	e78a      	b.n	1aa00 <_free_r+0x94>
   1aaea:	4a0e      	ldr	r2, [pc, #56]	; (1ab24 <_free_r+0x1b8>)
   1aaec:	4290      	cmp	r0, r2
   1aaee:	d805      	bhi.n	1aafc <_free_r+0x190>
   1aaf0:	0ca8      	lsrs	r0, r5, #18
   1aaf2:	0002      	movs	r2, r0
   1aaf4:	307d      	adds	r0, #125	; 0x7d
   1aaf6:	327c      	adds	r2, #124	; 0x7c
   1aaf8:	00c0      	lsls	r0, r0, #3
   1aafa:	e781      	b.n	1aa00 <_free_r+0x94>
   1aafc:	20fe      	movs	r0, #254	; 0xfe
   1aafe:	227e      	movs	r2, #126	; 0x7e
   1ab00:	0080      	lsls	r0, r0, #2
   1ab02:	e77d      	b.n	1aa00 <_free_r+0x94>
   1ab04:	4663      	mov	r3, ip
   1ab06:	432b      	orrs	r3, r5
   1ab08:	604b      	str	r3, [r1, #4]
   1ab0a:	6015      	str	r5, [r2, #0]
   1ab0c:	e76c      	b.n	1a9e8 <_free_r+0x7c>
   1ab0e:	46c0      	nop			; (mov r8, r8)
   1ab10:	200005d8 	.word	0x200005d8
   1ab14:	000001ff 	.word	0x000001ff
   1ab18:	200005e0 	.word	0x200005e0
   1ab1c:	200009e4 	.word	0x200009e4
   1ab20:	20000ccc 	.word	0x20000ccc
   1ab24:	00000554 	.word	0x00000554

0001ab28 <__sfvwrite_r>:
   1ab28:	b5f0      	push	{r4, r5, r6, r7, lr}
   1ab2a:	464e      	mov	r6, r9
   1ab2c:	46de      	mov	lr, fp
   1ab2e:	4657      	mov	r7, sl
   1ab30:	4645      	mov	r5, r8
   1ab32:	b5e0      	push	{r5, r6, r7, lr}
   1ab34:	6893      	ldr	r3, [r2, #8]
   1ab36:	b083      	sub	sp, #12
   1ab38:	9000      	str	r0, [sp, #0]
   1ab3a:	000c      	movs	r4, r1
   1ab3c:	0016      	movs	r6, r2
   1ab3e:	2b00      	cmp	r3, #0
   1ab40:	d025      	beq.n	1ab8e <__sfvwrite_r+0x66>
   1ab42:	898b      	ldrh	r3, [r1, #12]
   1ab44:	071a      	lsls	r2, r3, #28
   1ab46:	d52a      	bpl.n	1ab9e <__sfvwrite_r+0x76>
   1ab48:	690a      	ldr	r2, [r1, #16]
   1ab4a:	2a00      	cmp	r2, #0
   1ab4c:	d027      	beq.n	1ab9e <__sfvwrite_r+0x76>
   1ab4e:	6832      	ldr	r2, [r6, #0]
   1ab50:	4693      	mov	fp, r2
   1ab52:	079a      	lsls	r2, r3, #30
   1ab54:	d52f      	bpl.n	1abb6 <__sfvwrite_r+0x8e>
   1ab56:	4bb2      	ldr	r3, [pc, #712]	; (1ae20 <__sfvwrite_r+0x2f8>)
   1ab58:	2700      	movs	r7, #0
   1ab5a:	2500      	movs	r5, #0
   1ab5c:	4698      	mov	r8, r3
   1ab5e:	46b1      	mov	r9, r6
   1ab60:	2d00      	cmp	r5, #0
   1ab62:	d100      	bne.n	1ab66 <__sfvwrite_r+0x3e>
   1ab64:	e072      	b.n	1ac4c <__sfvwrite_r+0x124>
   1ab66:	002b      	movs	r3, r5
   1ab68:	4545      	cmp	r5, r8
   1ab6a:	d900      	bls.n	1ab6e <__sfvwrite_r+0x46>
   1ab6c:	4bac      	ldr	r3, [pc, #688]	; (1ae20 <__sfvwrite_r+0x2f8>)
   1ab6e:	003a      	movs	r2, r7
   1ab70:	69e1      	ldr	r1, [r4, #28]
   1ab72:	9800      	ldr	r0, [sp, #0]
   1ab74:	6a66      	ldr	r6, [r4, #36]	; 0x24
   1ab76:	47b0      	blx	r6
   1ab78:	2800      	cmp	r0, #0
   1ab7a:	dc00      	bgt.n	1ab7e <__sfvwrite_r+0x56>
   1ab7c:	e073      	b.n	1ac66 <__sfvwrite_r+0x13e>
   1ab7e:	464b      	mov	r3, r9
   1ab80:	689b      	ldr	r3, [r3, #8]
   1ab82:	183f      	adds	r7, r7, r0
   1ab84:	1a2d      	subs	r5, r5, r0
   1ab86:	1a18      	subs	r0, r3, r0
   1ab88:	464b      	mov	r3, r9
   1ab8a:	6098      	str	r0, [r3, #8]
   1ab8c:	d1e8      	bne.n	1ab60 <__sfvwrite_r+0x38>
   1ab8e:	2000      	movs	r0, #0
   1ab90:	b003      	add	sp, #12
   1ab92:	bc3c      	pop	{r2, r3, r4, r5}
   1ab94:	4690      	mov	r8, r2
   1ab96:	4699      	mov	r9, r3
   1ab98:	46a2      	mov	sl, r4
   1ab9a:	46ab      	mov	fp, r5
   1ab9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1ab9e:	0021      	movs	r1, r4
   1aba0:	9800      	ldr	r0, [sp, #0]
   1aba2:	f7fe fc4b 	bl	1943c <__swsetup_r>
   1aba6:	2800      	cmp	r0, #0
   1aba8:	d000      	beq.n	1abac <__sfvwrite_r+0x84>
   1abaa:	e130      	b.n	1ae0e <__sfvwrite_r+0x2e6>
   1abac:	6832      	ldr	r2, [r6, #0]
   1abae:	89a3      	ldrh	r3, [r4, #12]
   1abb0:	4693      	mov	fp, r2
   1abb2:	079a      	lsls	r2, r3, #30
   1abb4:	d4cf      	bmi.n	1ab56 <__sfvwrite_r+0x2e>
   1abb6:	07da      	lsls	r2, r3, #31
   1abb8:	d55d      	bpl.n	1ac76 <__sfvwrite_r+0x14e>
   1abba:	2300      	movs	r3, #0
   1abbc:	2000      	movs	r0, #0
   1abbe:	469a      	mov	sl, r3
   1abc0:	2700      	movs	r7, #0
   1abc2:	001d      	movs	r5, r3
   1abc4:	46b1      	mov	r9, r6
   1abc6:	e029      	b.n	1ac1c <__sfvwrite_r+0xf4>
   1abc8:	2800      	cmp	r0, #0
   1abca:	d033      	beq.n	1ac34 <__sfvwrite_r+0x10c>
   1abcc:	46a8      	mov	r8, r5
   1abce:	42bd      	cmp	r5, r7
   1abd0:	d900      	bls.n	1abd4 <__sfvwrite_r+0xac>
   1abd2:	46b8      	mov	r8, r7
   1abd4:	6820      	ldr	r0, [r4, #0]
   1abd6:	6922      	ldr	r2, [r4, #16]
   1abd8:	4646      	mov	r6, r8
   1abda:	6963      	ldr	r3, [r4, #20]
   1abdc:	4290      	cmp	r0, r2
   1abde:	d907      	bls.n	1abf0 <__sfvwrite_r+0xc8>
   1abe0:	68a2      	ldr	r2, [r4, #8]
   1abe2:	4694      	mov	ip, r2
   1abe4:	449c      	add	ip, r3
   1abe6:	4662      	mov	r2, ip
   1abe8:	9201      	str	r2, [sp, #4]
   1abea:	45e0      	cmp	r8, ip
   1abec:	dd00      	ble.n	1abf0 <__sfvwrite_r+0xc8>
   1abee:	e0e9      	b.n	1adc4 <__sfvwrite_r+0x29c>
   1abf0:	4598      	cmp	r8, r3
   1abf2:	da00      	bge.n	1abf6 <__sfvwrite_r+0xce>
   1abf4:	e08f      	b.n	1ad16 <__sfvwrite_r+0x1ee>
   1abf6:	6a66      	ldr	r6, [r4, #36]	; 0x24
   1abf8:	4652      	mov	r2, sl
   1abfa:	69e1      	ldr	r1, [r4, #28]
   1abfc:	9800      	ldr	r0, [sp, #0]
   1abfe:	47b0      	blx	r6
   1ac00:	1e06      	subs	r6, r0, #0
   1ac02:	dd30      	ble.n	1ac66 <__sfvwrite_r+0x13e>
   1ac04:	1bad      	subs	r5, r5, r6
   1ac06:	2001      	movs	r0, #1
   1ac08:	2d00      	cmp	r5, #0
   1ac0a:	d026      	beq.n	1ac5a <__sfvwrite_r+0x132>
   1ac0c:	464b      	mov	r3, r9
   1ac0e:	689b      	ldr	r3, [r3, #8]
   1ac10:	44b2      	add	sl, r6
   1ac12:	1bbf      	subs	r7, r7, r6
   1ac14:	1b9e      	subs	r6, r3, r6
   1ac16:	464b      	mov	r3, r9
   1ac18:	609e      	str	r6, [r3, #8]
   1ac1a:	d0b8      	beq.n	1ab8e <__sfvwrite_r+0x66>
   1ac1c:	2f00      	cmp	r7, #0
   1ac1e:	d1d3      	bne.n	1abc8 <__sfvwrite_r+0xa0>
   1ac20:	465b      	mov	r3, fp
   1ac22:	681b      	ldr	r3, [r3, #0]
   1ac24:	469a      	mov	sl, r3
   1ac26:	465b      	mov	r3, fp
   1ac28:	685f      	ldr	r7, [r3, #4]
   1ac2a:	2308      	movs	r3, #8
   1ac2c:	469c      	mov	ip, r3
   1ac2e:	44e3      	add	fp, ip
   1ac30:	2f00      	cmp	r7, #0
   1ac32:	d0f5      	beq.n	1ac20 <__sfvwrite_r+0xf8>
   1ac34:	003a      	movs	r2, r7
   1ac36:	210a      	movs	r1, #10
   1ac38:	4650      	mov	r0, sl
   1ac3a:	f000 fc93 	bl	1b564 <memchr>
   1ac3e:	2800      	cmp	r0, #0
   1ac40:	d100      	bne.n	1ac44 <__sfvwrite_r+0x11c>
   1ac42:	e0e2      	b.n	1ae0a <__sfvwrite_r+0x2e2>
   1ac44:	4653      	mov	r3, sl
   1ac46:	3001      	adds	r0, #1
   1ac48:	1ac5      	subs	r5, r0, r3
   1ac4a:	e7bf      	b.n	1abcc <__sfvwrite_r+0xa4>
   1ac4c:	465b      	mov	r3, fp
   1ac4e:	681f      	ldr	r7, [r3, #0]
   1ac50:	685d      	ldr	r5, [r3, #4]
   1ac52:	2308      	movs	r3, #8
   1ac54:	469c      	mov	ip, r3
   1ac56:	44e3      	add	fp, ip
   1ac58:	e782      	b.n	1ab60 <__sfvwrite_r+0x38>
   1ac5a:	0021      	movs	r1, r4
   1ac5c:	9800      	ldr	r0, [sp, #0]
   1ac5e:	f7ff fd81 	bl	1a764 <_fflush_r>
   1ac62:	2800      	cmp	r0, #0
   1ac64:	d0d2      	beq.n	1ac0c <__sfvwrite_r+0xe4>
   1ac66:	220c      	movs	r2, #12
   1ac68:	5ea3      	ldrsh	r3, [r4, r2]
   1ac6a:	2240      	movs	r2, #64	; 0x40
   1ac6c:	2001      	movs	r0, #1
   1ac6e:	4313      	orrs	r3, r2
   1ac70:	81a3      	strh	r3, [r4, #12]
   1ac72:	4240      	negs	r0, r0
   1ac74:	e78c      	b.n	1ab90 <__sfvwrite_r+0x68>
   1ac76:	2200      	movs	r2, #0
   1ac78:	4691      	mov	r9, r2
   1ac7a:	464d      	mov	r5, r9
   1ac7c:	2d00      	cmp	r5, #0
   1ac7e:	d023      	beq.n	1acc8 <__sfvwrite_r+0x1a0>
   1ac80:	68a2      	ldr	r2, [r4, #8]
   1ac82:	4690      	mov	r8, r2
   1ac84:	2280      	movs	r2, #128	; 0x80
   1ac86:	0092      	lsls	r2, r2, #2
   1ac88:	4213      	tst	r3, r2
   1ac8a:	d026      	beq.n	1acda <__sfvwrite_r+0x1b2>
   1ac8c:	46c2      	mov	sl, r8
   1ac8e:	4545      	cmp	r5, r8
   1ac90:	d34d      	bcc.n	1ad2e <__sfvwrite_r+0x206>
   1ac92:	2290      	movs	r2, #144	; 0x90
   1ac94:	00d2      	lsls	r2, r2, #3
   1ac96:	4213      	tst	r3, r2
   1ac98:	d14e      	bne.n	1ad38 <__sfvwrite_r+0x210>
   1ac9a:	002f      	movs	r7, r5
   1ac9c:	6820      	ldr	r0, [r4, #0]
   1ac9e:	4652      	mov	r2, sl
   1aca0:	4649      	mov	r1, r9
   1aca2:	f000 fc9f 	bl	1b5e4 <memmove>
   1aca6:	4642      	mov	r2, r8
   1aca8:	68a3      	ldr	r3, [r4, #8]
   1acaa:	1a98      	subs	r0, r3, r2
   1acac:	6823      	ldr	r3, [r4, #0]
   1acae:	60a0      	str	r0, [r4, #8]
   1acb0:	4453      	add	r3, sl
   1acb2:	6023      	str	r3, [r4, #0]
   1acb4:	68b3      	ldr	r3, [r6, #8]
   1acb6:	44b9      	add	r9, r7
   1acb8:	1bed      	subs	r5, r5, r7
   1acba:	1bdf      	subs	r7, r3, r7
   1acbc:	60b7      	str	r7, [r6, #8]
   1acbe:	d100      	bne.n	1acc2 <__sfvwrite_r+0x19a>
   1acc0:	e765      	b.n	1ab8e <__sfvwrite_r+0x66>
   1acc2:	89a3      	ldrh	r3, [r4, #12]
   1acc4:	2d00      	cmp	r5, #0
   1acc6:	d1db      	bne.n	1ac80 <__sfvwrite_r+0x158>
   1acc8:	465a      	mov	r2, fp
   1acca:	6812      	ldr	r2, [r2, #0]
   1accc:	4691      	mov	r9, r2
   1acce:	465a      	mov	r2, fp
   1acd0:	6855      	ldr	r5, [r2, #4]
   1acd2:	2208      	movs	r2, #8
   1acd4:	4694      	mov	ip, r2
   1acd6:	44e3      	add	fp, ip
   1acd8:	e7d0      	b.n	1ac7c <__sfvwrite_r+0x154>
   1acda:	6820      	ldr	r0, [r4, #0]
   1acdc:	6923      	ldr	r3, [r4, #16]
   1acde:	4298      	cmp	r0, r3
   1ace0:	d802      	bhi.n	1ace8 <__sfvwrite_r+0x1c0>
   1ace2:	6967      	ldr	r7, [r4, #20]
   1ace4:	42bd      	cmp	r5, r7
   1ace6:	d259      	bcs.n	1ad9c <__sfvwrite_r+0x274>
   1ace8:	4647      	mov	r7, r8
   1acea:	42af      	cmp	r7, r5
   1acec:	d900      	bls.n	1acf0 <__sfvwrite_r+0x1c8>
   1acee:	002f      	movs	r7, r5
   1acf0:	003a      	movs	r2, r7
   1acf2:	4649      	mov	r1, r9
   1acf4:	f000 fc76 	bl	1b5e4 <memmove>
   1acf8:	68a3      	ldr	r3, [r4, #8]
   1acfa:	6822      	ldr	r2, [r4, #0]
   1acfc:	1bdb      	subs	r3, r3, r7
   1acfe:	19d2      	adds	r2, r2, r7
   1ad00:	60a3      	str	r3, [r4, #8]
   1ad02:	6022      	str	r2, [r4, #0]
   1ad04:	2b00      	cmp	r3, #0
   1ad06:	d1d5      	bne.n	1acb4 <__sfvwrite_r+0x18c>
   1ad08:	0021      	movs	r1, r4
   1ad0a:	9800      	ldr	r0, [sp, #0]
   1ad0c:	f7ff fd2a 	bl	1a764 <_fflush_r>
   1ad10:	2800      	cmp	r0, #0
   1ad12:	d0cf      	beq.n	1acb4 <__sfvwrite_r+0x18c>
   1ad14:	e7a7      	b.n	1ac66 <__sfvwrite_r+0x13e>
   1ad16:	4642      	mov	r2, r8
   1ad18:	4651      	mov	r1, sl
   1ad1a:	f000 fc63 	bl	1b5e4 <memmove>
   1ad1e:	4642      	mov	r2, r8
   1ad20:	68a3      	ldr	r3, [r4, #8]
   1ad22:	1a9b      	subs	r3, r3, r2
   1ad24:	60a3      	str	r3, [r4, #8]
   1ad26:	6823      	ldr	r3, [r4, #0]
   1ad28:	4443      	add	r3, r8
   1ad2a:	6023      	str	r3, [r4, #0]
   1ad2c:	e76a      	b.n	1ac04 <__sfvwrite_r+0xdc>
   1ad2e:	46a8      	mov	r8, r5
   1ad30:	6820      	ldr	r0, [r4, #0]
   1ad32:	002f      	movs	r7, r5
   1ad34:	46aa      	mov	sl, r5
   1ad36:	e7b2      	b.n	1ac9e <__sfvwrite_r+0x176>
   1ad38:	6921      	ldr	r1, [r4, #16]
   1ad3a:	6822      	ldr	r2, [r4, #0]
   1ad3c:	1a52      	subs	r2, r2, r1
   1ad3e:	4692      	mov	sl, r2
   1ad40:	6962      	ldr	r2, [r4, #20]
   1ad42:	0057      	lsls	r7, r2, #1
   1ad44:	18bf      	adds	r7, r7, r2
   1ad46:	0ffa      	lsrs	r2, r7, #31
   1ad48:	19d7      	adds	r7, r2, r7
   1ad4a:	4652      	mov	r2, sl
   1ad4c:	1c50      	adds	r0, r2, #1
   1ad4e:	107f      	asrs	r7, r7, #1
   1ad50:	1940      	adds	r0, r0, r5
   1ad52:	003a      	movs	r2, r7
   1ad54:	42b8      	cmp	r0, r7
   1ad56:	d901      	bls.n	1ad5c <__sfvwrite_r+0x234>
   1ad58:	0007      	movs	r7, r0
   1ad5a:	0002      	movs	r2, r0
   1ad5c:	055b      	lsls	r3, r3, #21
   1ad5e:	d542      	bpl.n	1ade6 <__sfvwrite_r+0x2be>
   1ad60:	0011      	movs	r1, r2
   1ad62:	9800      	ldr	r0, [sp, #0]
   1ad64:	f000 f934 	bl	1afd0 <_malloc_r>
   1ad68:	4680      	mov	r8, r0
   1ad6a:	1e03      	subs	r3, r0, #0
   1ad6c:	d052      	beq.n	1ae14 <__sfvwrite_r+0x2ec>
   1ad6e:	4652      	mov	r2, sl
   1ad70:	6921      	ldr	r1, [r4, #16]
   1ad72:	f7fc fccf 	bl	17714 <memcpy>
   1ad76:	89a3      	ldrh	r3, [r4, #12]
   1ad78:	4a2a      	ldr	r2, [pc, #168]	; (1ae24 <__sfvwrite_r+0x2fc>)
   1ad7a:	4013      	ands	r3, r2
   1ad7c:	2280      	movs	r2, #128	; 0x80
   1ad7e:	4313      	orrs	r3, r2
   1ad80:	81a3      	strh	r3, [r4, #12]
   1ad82:	4643      	mov	r3, r8
   1ad84:	4640      	mov	r0, r8
   1ad86:	6123      	str	r3, [r4, #16]
   1ad88:	4653      	mov	r3, sl
   1ad8a:	4450      	add	r0, sl
   1ad8c:	6167      	str	r7, [r4, #20]
   1ad8e:	1aff      	subs	r7, r7, r3
   1ad90:	60a7      	str	r7, [r4, #8]
   1ad92:	6020      	str	r0, [r4, #0]
   1ad94:	46a8      	mov	r8, r5
   1ad96:	002f      	movs	r7, r5
   1ad98:	46aa      	mov	sl, r5
   1ad9a:	e780      	b.n	1ac9e <__sfvwrite_r+0x176>
   1ad9c:	4b22      	ldr	r3, [pc, #136]	; (1ae28 <__sfvwrite_r+0x300>)
   1ad9e:	0028      	movs	r0, r5
   1ada0:	429d      	cmp	r5, r3
   1ada2:	d900      	bls.n	1ada6 <__sfvwrite_r+0x27e>
   1ada4:	0018      	movs	r0, r3
   1ada6:	0039      	movs	r1, r7
   1ada8:	f7f9 fe7a 	bl	14aa0 <__divsi3>
   1adac:	003b      	movs	r3, r7
   1adae:	464a      	mov	r2, r9
   1adb0:	4343      	muls	r3, r0
   1adb2:	69e1      	ldr	r1, [r4, #28]
   1adb4:	9800      	ldr	r0, [sp, #0]
   1adb6:	6a67      	ldr	r7, [r4, #36]	; 0x24
   1adb8:	47b8      	blx	r7
   1adba:	2800      	cmp	r0, #0
   1adbc:	dc00      	bgt.n	1adc0 <__sfvwrite_r+0x298>
   1adbe:	e752      	b.n	1ac66 <__sfvwrite_r+0x13e>
   1adc0:	0007      	movs	r7, r0
   1adc2:	e777      	b.n	1acb4 <__sfvwrite_r+0x18c>
   1adc4:	4666      	mov	r6, ip
   1adc6:	4651      	mov	r1, sl
   1adc8:	f000 fc0c 	bl	1b5e4 <memmove>
   1adcc:	46b4      	mov	ip, r6
   1adce:	6823      	ldr	r3, [r4, #0]
   1add0:	0021      	movs	r1, r4
   1add2:	4463      	add	r3, ip
   1add4:	6023      	str	r3, [r4, #0]
   1add6:	9800      	ldr	r0, [sp, #0]
   1add8:	f7ff fcc4 	bl	1a764 <_fflush_r>
   1addc:	2800      	cmp	r0, #0
   1adde:	d000      	beq.n	1ade2 <__sfvwrite_r+0x2ba>
   1ade0:	e741      	b.n	1ac66 <__sfvwrite_r+0x13e>
   1ade2:	9e01      	ldr	r6, [sp, #4]
   1ade4:	e70e      	b.n	1ac04 <__sfvwrite_r+0xdc>
   1ade6:	9800      	ldr	r0, [sp, #0]
   1ade8:	f000 ffde 	bl	1bda8 <_realloc_r>
   1adec:	4680      	mov	r8, r0
   1adee:	2800      	cmp	r0, #0
   1adf0:	d1c7      	bne.n	1ad82 <__sfvwrite_r+0x25a>
   1adf2:	9d00      	ldr	r5, [sp, #0]
   1adf4:	6921      	ldr	r1, [r4, #16]
   1adf6:	0028      	movs	r0, r5
   1adf8:	f7ff fdb8 	bl	1a96c <_free_r>
   1adfc:	2280      	movs	r2, #128	; 0x80
   1adfe:	89a3      	ldrh	r3, [r4, #12]
   1ae00:	4393      	bics	r3, r2
   1ae02:	3a74      	subs	r2, #116	; 0x74
   1ae04:	b21b      	sxth	r3, r3
   1ae06:	602a      	str	r2, [r5, #0]
   1ae08:	e72f      	b.n	1ac6a <__sfvwrite_r+0x142>
   1ae0a:	1c7d      	adds	r5, r7, #1
   1ae0c:	e6de      	b.n	1abcc <__sfvwrite_r+0xa4>
   1ae0e:	2001      	movs	r0, #1
   1ae10:	4240      	negs	r0, r0
   1ae12:	e6bd      	b.n	1ab90 <__sfvwrite_r+0x68>
   1ae14:	9a00      	ldr	r2, [sp, #0]
   1ae16:	330c      	adds	r3, #12
   1ae18:	6013      	str	r3, [r2, #0]
   1ae1a:	220c      	movs	r2, #12
   1ae1c:	5ea3      	ldrsh	r3, [r4, r2]
   1ae1e:	e724      	b.n	1ac6a <__sfvwrite_r+0x142>
   1ae20:	7ffffc00 	.word	0x7ffffc00
   1ae24:	fffffb7f 	.word	0xfffffb7f
   1ae28:	7fffffff 	.word	0x7fffffff

0001ae2c <_fwalk_reent>:
   1ae2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1ae2e:	4647      	mov	r7, r8
   1ae30:	46ce      	mov	lr, r9
   1ae32:	b580      	push	{r7, lr}
   1ae34:	27b8      	movs	r7, #184	; 0xb8
   1ae36:	4680      	mov	r8, r0
   1ae38:	00bf      	lsls	r7, r7, #2
   1ae3a:	4447      	add	r7, r8
   1ae3c:	4689      	mov	r9, r1
   1ae3e:	2600      	movs	r6, #0
   1ae40:	2f00      	cmp	r7, #0
   1ae42:	d014      	beq.n	1ae6e <_fwalk_reent+0x42>
   1ae44:	687b      	ldr	r3, [r7, #4]
   1ae46:	68bc      	ldr	r4, [r7, #8]
   1ae48:	1e5d      	subs	r5, r3, #1
   1ae4a:	d40d      	bmi.n	1ae68 <_fwalk_reent+0x3c>
   1ae4c:	89a3      	ldrh	r3, [r4, #12]
   1ae4e:	2b01      	cmp	r3, #1
   1ae50:	d907      	bls.n	1ae62 <_fwalk_reent+0x36>
   1ae52:	220e      	movs	r2, #14
   1ae54:	5ea3      	ldrsh	r3, [r4, r2]
   1ae56:	3301      	adds	r3, #1
   1ae58:	d003      	beq.n	1ae62 <_fwalk_reent+0x36>
   1ae5a:	0021      	movs	r1, r4
   1ae5c:	4640      	mov	r0, r8
   1ae5e:	47c8      	blx	r9
   1ae60:	4306      	orrs	r6, r0
   1ae62:	3468      	adds	r4, #104	; 0x68
   1ae64:	3d01      	subs	r5, #1
   1ae66:	d2f1      	bcs.n	1ae4c <_fwalk_reent+0x20>
   1ae68:	683f      	ldr	r7, [r7, #0]
   1ae6a:	2f00      	cmp	r7, #0
   1ae6c:	d1ea      	bne.n	1ae44 <_fwalk_reent+0x18>
   1ae6e:	0030      	movs	r0, r6
   1ae70:	bc0c      	pop	{r2, r3}
   1ae72:	4690      	mov	r8, r2
   1ae74:	4699      	mov	r9, r3
   1ae76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001ae78 <__locale_mb_cur_max>:
   1ae78:	4b05      	ldr	r3, [pc, #20]	; (1ae90 <__locale_mb_cur_max+0x18>)
   1ae7a:	681b      	ldr	r3, [r3, #0]
   1ae7c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   1ae7e:	2b00      	cmp	r3, #0
   1ae80:	d003      	beq.n	1ae8a <__locale_mb_cur_max+0x12>
   1ae82:	2294      	movs	r2, #148	; 0x94
   1ae84:	0052      	lsls	r2, r2, #1
   1ae86:	5c98      	ldrb	r0, [r3, r2]
   1ae88:	4770      	bx	lr
   1ae8a:	4b02      	ldr	r3, [pc, #8]	; (1ae94 <__locale_mb_cur_max+0x1c>)
   1ae8c:	e7f9      	b.n	1ae82 <__locale_mb_cur_max+0xa>
   1ae8e:	46c0      	nop			; (mov r8, r8)
   1ae90:	20000038 	.word	0x20000038
   1ae94:	2000046c 	.word	0x2000046c

0001ae98 <__locale_ctype_ptr_l>:
   1ae98:	23ec      	movs	r3, #236	; 0xec
   1ae9a:	58c0      	ldr	r0, [r0, r3]
   1ae9c:	4770      	bx	lr
   1ae9e:	46c0      	nop			; (mov r8, r8)

0001aea0 <_localeconv_r>:
   1aea0:	4b04      	ldr	r3, [pc, #16]	; (1aeb4 <_localeconv_r+0x14>)
   1aea2:	681b      	ldr	r3, [r3, #0]
   1aea4:	6b58      	ldr	r0, [r3, #52]	; 0x34
   1aea6:	2800      	cmp	r0, #0
   1aea8:	d001      	beq.n	1aeae <_localeconv_r+0xe>
   1aeaa:	30f0      	adds	r0, #240	; 0xf0
   1aeac:	4770      	bx	lr
   1aeae:	4802      	ldr	r0, [pc, #8]	; (1aeb8 <_localeconv_r+0x18>)
   1aeb0:	e7fb      	b.n	1aeaa <_localeconv_r+0xa>
   1aeb2:	46c0      	nop			; (mov r8, r8)
   1aeb4:	20000038 	.word	0x20000038
   1aeb8:	2000046c 	.word	0x2000046c

0001aebc <__retarget_lock_init_recursive>:
   1aebc:	4770      	bx	lr
   1aebe:	46c0      	nop			; (mov r8, r8)

0001aec0 <__retarget_lock_close_recursive>:
   1aec0:	4770      	bx	lr
   1aec2:	46c0      	nop			; (mov r8, r8)

0001aec4 <__retarget_lock_acquire_recursive>:
   1aec4:	4770      	bx	lr
   1aec6:	46c0      	nop			; (mov r8, r8)

0001aec8 <__retarget_lock_release_recursive>:
   1aec8:	4770      	bx	lr
   1aeca:	46c0      	nop			; (mov r8, r8)

0001aecc <__swhatbuf_r>:
   1aecc:	b570      	push	{r4, r5, r6, lr}
   1aece:	000c      	movs	r4, r1
   1aed0:	001e      	movs	r6, r3
   1aed2:	230e      	movs	r3, #14
   1aed4:	5ec9      	ldrsh	r1, [r1, r3]
   1aed6:	b090      	sub	sp, #64	; 0x40
   1aed8:	0015      	movs	r5, r2
   1aeda:	2900      	cmp	r1, #0
   1aedc:	db15      	blt.n	1af0a <__swhatbuf_r+0x3e>
   1aede:	aa01      	add	r2, sp, #4
   1aee0:	f001 fbe4 	bl	1c6ac <_fstat_r>
   1aee4:	2800      	cmp	r0, #0
   1aee6:	db10      	blt.n	1af0a <__swhatbuf_r+0x3e>
   1aee8:	22f0      	movs	r2, #240	; 0xf0
   1aeea:	9b02      	ldr	r3, [sp, #8]
   1aeec:	0212      	lsls	r2, r2, #8
   1aeee:	4013      	ands	r3, r2
   1aef0:	4a0d      	ldr	r2, [pc, #52]	; (1af28 <__swhatbuf_r+0x5c>)
   1aef2:	2080      	movs	r0, #128	; 0x80
   1aef4:	4694      	mov	ip, r2
   1aef6:	4463      	add	r3, ip
   1aef8:	425a      	negs	r2, r3
   1aefa:	4153      	adcs	r3, r2
   1aefc:	6033      	str	r3, [r6, #0]
   1aefe:	2380      	movs	r3, #128	; 0x80
   1af00:	00db      	lsls	r3, r3, #3
   1af02:	602b      	str	r3, [r5, #0]
   1af04:	0100      	lsls	r0, r0, #4
   1af06:	b010      	add	sp, #64	; 0x40
   1af08:	bd70      	pop	{r4, r5, r6, pc}
   1af0a:	2300      	movs	r3, #0
   1af0c:	6033      	str	r3, [r6, #0]
   1af0e:	89a3      	ldrh	r3, [r4, #12]
   1af10:	061b      	lsls	r3, r3, #24
   1af12:	d503      	bpl.n	1af1c <__swhatbuf_r+0x50>
   1af14:	2340      	movs	r3, #64	; 0x40
   1af16:	2000      	movs	r0, #0
   1af18:	602b      	str	r3, [r5, #0]
   1af1a:	e7f4      	b.n	1af06 <__swhatbuf_r+0x3a>
   1af1c:	2380      	movs	r3, #128	; 0x80
   1af1e:	00db      	lsls	r3, r3, #3
   1af20:	602b      	str	r3, [r5, #0]
   1af22:	2000      	movs	r0, #0
   1af24:	e7ef      	b.n	1af06 <__swhatbuf_r+0x3a>
   1af26:	46c0      	nop			; (mov r8, r8)
   1af28:	ffffe000 	.word	0xffffe000

0001af2c <__smakebuf_r>:
   1af2c:	b570      	push	{r4, r5, r6, lr}
   1af2e:	898b      	ldrh	r3, [r1, #12]
   1af30:	b082      	sub	sp, #8
   1af32:	0006      	movs	r6, r0
   1af34:	000c      	movs	r4, r1
   1af36:	079b      	lsls	r3, r3, #30
   1af38:	d507      	bpl.n	1af4a <__smakebuf_r+0x1e>
   1af3a:	0023      	movs	r3, r4
   1af3c:	3343      	adds	r3, #67	; 0x43
   1af3e:	6023      	str	r3, [r4, #0]
   1af40:	6123      	str	r3, [r4, #16]
   1af42:	2301      	movs	r3, #1
   1af44:	6163      	str	r3, [r4, #20]
   1af46:	b002      	add	sp, #8
   1af48:	bd70      	pop	{r4, r5, r6, pc}
   1af4a:	ab01      	add	r3, sp, #4
   1af4c:	466a      	mov	r2, sp
   1af4e:	f7ff ffbd 	bl	1aecc <__swhatbuf_r>
   1af52:	9900      	ldr	r1, [sp, #0]
   1af54:	0005      	movs	r5, r0
   1af56:	0030      	movs	r0, r6
   1af58:	f000 f83a 	bl	1afd0 <_malloc_r>
   1af5c:	2800      	cmp	r0, #0
   1af5e:	d01e      	beq.n	1af9e <__smakebuf_r+0x72>
   1af60:	2280      	movs	r2, #128	; 0x80
   1af62:	4b15      	ldr	r3, [pc, #84]	; (1afb8 <__smakebuf_r+0x8c>)
   1af64:	63f3      	str	r3, [r6, #60]	; 0x3c
   1af66:	89a3      	ldrh	r3, [r4, #12]
   1af68:	6020      	str	r0, [r4, #0]
   1af6a:	4313      	orrs	r3, r2
   1af6c:	9a00      	ldr	r2, [sp, #0]
   1af6e:	b21b      	sxth	r3, r3
   1af70:	6162      	str	r2, [r4, #20]
   1af72:	9a01      	ldr	r2, [sp, #4]
   1af74:	81a3      	strh	r3, [r4, #12]
   1af76:	6120      	str	r0, [r4, #16]
   1af78:	2a00      	cmp	r2, #0
   1af7a:	d102      	bne.n	1af82 <__smakebuf_r+0x56>
   1af7c:	432b      	orrs	r3, r5
   1af7e:	81a3      	strh	r3, [r4, #12]
   1af80:	e7e1      	b.n	1af46 <__smakebuf_r+0x1a>
   1af82:	230e      	movs	r3, #14
   1af84:	5ee1      	ldrsh	r1, [r4, r3]
   1af86:	0030      	movs	r0, r6
   1af88:	f001 fba4 	bl	1c6d4 <_isatty_r>
   1af8c:	2800      	cmp	r0, #0
   1af8e:	d010      	beq.n	1afb2 <__smakebuf_r+0x86>
   1af90:	2203      	movs	r2, #3
   1af92:	89a3      	ldrh	r3, [r4, #12]
   1af94:	4393      	bics	r3, r2
   1af96:	2201      	movs	r2, #1
   1af98:	4313      	orrs	r3, r2
   1af9a:	b21b      	sxth	r3, r3
   1af9c:	e7ee      	b.n	1af7c <__smakebuf_r+0x50>
   1af9e:	220c      	movs	r2, #12
   1afa0:	5ea3      	ldrsh	r3, [r4, r2]
   1afa2:	059a      	lsls	r2, r3, #22
   1afa4:	d4cf      	bmi.n	1af46 <__smakebuf_r+0x1a>
   1afa6:	2203      	movs	r2, #3
   1afa8:	4393      	bics	r3, r2
   1afaa:	2202      	movs	r2, #2
   1afac:	4313      	orrs	r3, r2
   1afae:	81a3      	strh	r3, [r4, #12]
   1afb0:	e7c3      	b.n	1af3a <__smakebuf_r+0xe>
   1afb2:	220c      	movs	r2, #12
   1afb4:	5ea3      	ldrsh	r3, [r4, r2]
   1afb6:	e7e1      	b.n	1af7c <__smakebuf_r+0x50>
   1afb8:	0001a7b9 	.word	0x0001a7b9

0001afbc <malloc>:
   1afbc:	b510      	push	{r4, lr}
   1afbe:	4b03      	ldr	r3, [pc, #12]	; (1afcc <malloc+0x10>)
   1afc0:	0001      	movs	r1, r0
   1afc2:	6818      	ldr	r0, [r3, #0]
   1afc4:	f000 f804 	bl	1afd0 <_malloc_r>
   1afc8:	bd10      	pop	{r4, pc}
   1afca:	46c0      	nop			; (mov r8, r8)
   1afcc:	20000038 	.word	0x20000038

0001afd0 <_malloc_r>:
   1afd0:	b5f0      	push	{r4, r5, r6, r7, lr}
   1afd2:	4657      	mov	r7, sl
   1afd4:	4645      	mov	r5, r8
   1afd6:	46de      	mov	lr, fp
   1afd8:	464e      	mov	r6, r9
   1afda:	b5e0      	push	{r5, r6, r7, lr}
   1afdc:	000d      	movs	r5, r1
   1afde:	350b      	adds	r5, #11
   1afe0:	b083      	sub	sp, #12
   1afe2:	0007      	movs	r7, r0
   1afe4:	2d16      	cmp	r5, #22
   1afe6:	d800      	bhi.n	1afea <_malloc_r+0x1a>
   1afe8:	e09f      	b.n	1b12a <_malloc_r+0x15a>
   1afea:	2307      	movs	r3, #7
   1afec:	439d      	bics	r5, r3
   1afee:	d500      	bpl.n	1aff2 <_malloc_r+0x22>
   1aff0:	e0c4      	b.n	1b17c <_malloc_r+0x1ac>
   1aff2:	42a9      	cmp	r1, r5
   1aff4:	d900      	bls.n	1aff8 <_malloc_r+0x28>
   1aff6:	e0c1      	b.n	1b17c <_malloc_r+0x1ac>
   1aff8:	f000 fb44 	bl	1b684 <__malloc_lock>
   1affc:	23f8      	movs	r3, #248	; 0xf8
   1affe:	33ff      	adds	r3, #255	; 0xff
   1b000:	429d      	cmp	r5, r3
   1b002:	d800      	bhi.n	1b006 <_malloc_r+0x36>
   1b004:	e28f      	b.n	1b526 <_malloc_r+0x556>
   1b006:	0a68      	lsrs	r0, r5, #9
   1b008:	d100      	bne.n	1b00c <_malloc_r+0x3c>
   1b00a:	e0bb      	b.n	1b184 <_malloc_r+0x1b4>
   1b00c:	2804      	cmp	r0, #4
   1b00e:	d900      	bls.n	1b012 <_malloc_r+0x42>
   1b010:	e162      	b.n	1b2d8 <_malloc_r+0x308>
   1b012:	2338      	movs	r3, #56	; 0x38
   1b014:	4698      	mov	r8, r3
   1b016:	09a8      	lsrs	r0, r5, #6
   1b018:	4480      	add	r8, r0
   1b01a:	3039      	adds	r0, #57	; 0x39
   1b01c:	00c1      	lsls	r1, r0, #3
   1b01e:	4ed2      	ldr	r6, [pc, #840]	; (1b368 <_malloc_r+0x398>)
   1b020:	1871      	adds	r1, r6, r1
   1b022:	3908      	subs	r1, #8
   1b024:	68cc      	ldr	r4, [r1, #12]
   1b026:	42a1      	cmp	r1, r4
   1b028:	d019      	beq.n	1b05e <_malloc_r+0x8e>
   1b02a:	2303      	movs	r3, #3
   1b02c:	6862      	ldr	r2, [r4, #4]
   1b02e:	439a      	bics	r2, r3
   1b030:	0013      	movs	r3, r2
   1b032:	1b52      	subs	r2, r2, r5
   1b034:	2a0f      	cmp	r2, #15
   1b036:	dd00      	ble.n	1b03a <_malloc_r+0x6a>
   1b038:	e0aa      	b.n	1b190 <_malloc_r+0x1c0>
   1b03a:	2a00      	cmp	r2, #0
   1b03c:	db00      	blt.n	1b040 <_malloc_r+0x70>
   1b03e:	e088      	b.n	1b152 <_malloc_r+0x182>
   1b040:	2303      	movs	r3, #3
   1b042:	469c      	mov	ip, r3
   1b044:	e008      	b.n	1b058 <_malloc_r+0x88>
   1b046:	4662      	mov	r2, ip
   1b048:	6863      	ldr	r3, [r4, #4]
   1b04a:	4393      	bics	r3, r2
   1b04c:	1b5a      	subs	r2, r3, r5
   1b04e:	2a0f      	cmp	r2, #15
   1b050:	dd00      	ble.n	1b054 <_malloc_r+0x84>
   1b052:	e09d      	b.n	1b190 <_malloc_r+0x1c0>
   1b054:	2a00      	cmp	r2, #0
   1b056:	da7c      	bge.n	1b152 <_malloc_r+0x182>
   1b058:	68e4      	ldr	r4, [r4, #12]
   1b05a:	42a1      	cmp	r1, r4
   1b05c:	d1f3      	bne.n	1b046 <_malloc_r+0x76>
   1b05e:	0032      	movs	r2, r6
   1b060:	6934      	ldr	r4, [r6, #16]
   1b062:	3208      	adds	r2, #8
   1b064:	4294      	cmp	r4, r2
   1b066:	d100      	bne.n	1b06a <_malloc_r+0x9a>
   1b068:	e190      	b.n	1b38c <_malloc_r+0x3bc>
   1b06a:	2303      	movs	r3, #3
   1b06c:	6861      	ldr	r1, [r4, #4]
   1b06e:	4399      	bics	r1, r3
   1b070:	4689      	mov	r9, r1
   1b072:	1b49      	subs	r1, r1, r5
   1b074:	290f      	cmp	r1, #15
   1b076:	dd00      	ble.n	1b07a <_malloc_r+0xaa>
   1b078:	e162      	b.n	1b340 <_malloc_r+0x370>
   1b07a:	6172      	str	r2, [r6, #20]
   1b07c:	6132      	str	r2, [r6, #16]
   1b07e:	2900      	cmp	r1, #0
   1b080:	db00      	blt.n	1b084 <_malloc_r+0xb4>
   1b082:	e087      	b.n	1b194 <_malloc_r+0x1c4>
   1b084:	4ab9      	ldr	r2, [pc, #740]	; (1b36c <_malloc_r+0x39c>)
   1b086:	464b      	mov	r3, r9
   1b088:	4591      	cmp	r9, r2
   1b08a:	d900      	bls.n	1b08e <_malloc_r+0xbe>
   1b08c:	e130      	b.n	1b2f0 <_malloc_r+0x320>
   1b08e:	08db      	lsrs	r3, r3, #3
   1b090:	3aff      	subs	r2, #255	; 0xff
   1b092:	1099      	asrs	r1, r3, #2
   1b094:	3aff      	subs	r2, #255	; 0xff
   1b096:	408a      	lsls	r2, r1
   1b098:	00db      	lsls	r3, r3, #3
   1b09a:	6871      	ldr	r1, [r6, #4]
   1b09c:	199b      	adds	r3, r3, r6
   1b09e:	430a      	orrs	r2, r1
   1b0a0:	6899      	ldr	r1, [r3, #8]
   1b0a2:	6072      	str	r2, [r6, #4]
   1b0a4:	60e3      	str	r3, [r4, #12]
   1b0a6:	60a1      	str	r1, [r4, #8]
   1b0a8:	609c      	str	r4, [r3, #8]
   1b0aa:	0013      	movs	r3, r2
   1b0ac:	60cc      	str	r4, [r1, #12]
   1b0ae:	2101      	movs	r1, #1
   1b0b0:	1082      	asrs	r2, r0, #2
   1b0b2:	4091      	lsls	r1, r2
   1b0b4:	4299      	cmp	r1, r3
   1b0b6:	d86f      	bhi.n	1b198 <_malloc_r+0x1c8>
   1b0b8:	420b      	tst	r3, r1
   1b0ba:	d105      	bne.n	1b0c8 <_malloc_r+0xf8>
   1b0bc:	2203      	movs	r2, #3
   1b0be:	4390      	bics	r0, r2
   1b0c0:	0049      	lsls	r1, r1, #1
   1b0c2:	3004      	adds	r0, #4
   1b0c4:	420b      	tst	r3, r1
   1b0c6:	d0fb      	beq.n	1b0c0 <_malloc_r+0xf0>
   1b0c8:	2303      	movs	r3, #3
   1b0ca:	4698      	mov	r8, r3
   1b0cc:	00c3      	lsls	r3, r0, #3
   1b0ce:	4699      	mov	r9, r3
   1b0d0:	44b1      	add	r9, r6
   1b0d2:	46cc      	mov	ip, r9
   1b0d4:	4682      	mov	sl, r0
   1b0d6:	4663      	mov	r3, ip
   1b0d8:	68dc      	ldr	r4, [r3, #12]
   1b0da:	45a4      	cmp	ip, r4
   1b0dc:	d107      	bne.n	1b0ee <_malloc_r+0x11e>
   1b0de:	e157      	b.n	1b390 <_malloc_r+0x3c0>
   1b0e0:	2a00      	cmp	r2, #0
   1b0e2:	db00      	blt.n	1b0e6 <_malloc_r+0x116>
   1b0e4:	e166      	b.n	1b3b4 <_malloc_r+0x3e4>
   1b0e6:	68e4      	ldr	r4, [r4, #12]
   1b0e8:	45a4      	cmp	ip, r4
   1b0ea:	d100      	bne.n	1b0ee <_malloc_r+0x11e>
   1b0ec:	e150      	b.n	1b390 <_malloc_r+0x3c0>
   1b0ee:	4642      	mov	r2, r8
   1b0f0:	6863      	ldr	r3, [r4, #4]
   1b0f2:	4393      	bics	r3, r2
   1b0f4:	1b5a      	subs	r2, r3, r5
   1b0f6:	2a0f      	cmp	r2, #15
   1b0f8:	ddf2      	ble.n	1b0e0 <_malloc_r+0x110>
   1b0fa:	2001      	movs	r0, #1
   1b0fc:	4680      	mov	r8, r0
   1b0fe:	1961      	adds	r1, r4, r5
   1b100:	4305      	orrs	r5, r0
   1b102:	6065      	str	r5, [r4, #4]
   1b104:	68a0      	ldr	r0, [r4, #8]
   1b106:	68e5      	ldr	r5, [r4, #12]
   1b108:	3608      	adds	r6, #8
   1b10a:	60c5      	str	r5, [r0, #12]
   1b10c:	60a8      	str	r0, [r5, #8]
   1b10e:	4640      	mov	r0, r8
   1b110:	60f1      	str	r1, [r6, #12]
   1b112:	60b1      	str	r1, [r6, #8]
   1b114:	4310      	orrs	r0, r2
   1b116:	6048      	str	r0, [r1, #4]
   1b118:	60ce      	str	r6, [r1, #12]
   1b11a:	608e      	str	r6, [r1, #8]
   1b11c:	0038      	movs	r0, r7
   1b11e:	50e2      	str	r2, [r4, r3]
   1b120:	f000 fab8 	bl	1b694 <__malloc_unlock>
   1b124:	0020      	movs	r0, r4
   1b126:	3008      	adds	r0, #8
   1b128:	e021      	b.n	1b16e <_malloc_r+0x19e>
   1b12a:	2910      	cmp	r1, #16
   1b12c:	d826      	bhi.n	1b17c <_malloc_r+0x1ac>
   1b12e:	0038      	movs	r0, r7
   1b130:	f000 faa8 	bl	1b684 <__malloc_lock>
   1b134:	2510      	movs	r5, #16
   1b136:	2318      	movs	r3, #24
   1b138:	2002      	movs	r0, #2
   1b13a:	4e8b      	ldr	r6, [pc, #556]	; (1b368 <_malloc_r+0x398>)
   1b13c:	18f3      	adds	r3, r6, r3
   1b13e:	001a      	movs	r2, r3
   1b140:	685c      	ldr	r4, [r3, #4]
   1b142:	3a08      	subs	r2, #8
   1b144:	4294      	cmp	r4, r2
   1b146:	d100      	bne.n	1b14a <_malloc_r+0x17a>
   1b148:	e12e      	b.n	1b3a8 <_malloc_r+0x3d8>
   1b14a:	2303      	movs	r3, #3
   1b14c:	6862      	ldr	r2, [r4, #4]
   1b14e:	439a      	bics	r2, r3
   1b150:	0013      	movs	r3, r2
   1b152:	68e2      	ldr	r2, [r4, #12]
   1b154:	68a1      	ldr	r1, [r4, #8]
   1b156:	60ca      	str	r2, [r1, #12]
   1b158:	6091      	str	r1, [r2, #8]
   1b15a:	2201      	movs	r2, #1
   1b15c:	18e3      	adds	r3, r4, r3
   1b15e:	6859      	ldr	r1, [r3, #4]
   1b160:	0038      	movs	r0, r7
   1b162:	430a      	orrs	r2, r1
   1b164:	605a      	str	r2, [r3, #4]
   1b166:	f000 fa95 	bl	1b694 <__malloc_unlock>
   1b16a:	0020      	movs	r0, r4
   1b16c:	3008      	adds	r0, #8
   1b16e:	b003      	add	sp, #12
   1b170:	bc3c      	pop	{r2, r3, r4, r5}
   1b172:	4690      	mov	r8, r2
   1b174:	4699      	mov	r9, r3
   1b176:	46a2      	mov	sl, r4
   1b178:	46ab      	mov	fp, r5
   1b17a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1b17c:	230c      	movs	r3, #12
   1b17e:	2000      	movs	r0, #0
   1b180:	603b      	str	r3, [r7, #0]
   1b182:	e7f4      	b.n	1b16e <_malloc_r+0x19e>
   1b184:	2180      	movs	r1, #128	; 0x80
   1b186:	233f      	movs	r3, #63	; 0x3f
   1b188:	2040      	movs	r0, #64	; 0x40
   1b18a:	0089      	lsls	r1, r1, #2
   1b18c:	4698      	mov	r8, r3
   1b18e:	e746      	b.n	1b01e <_malloc_r+0x4e>
   1b190:	4640      	mov	r0, r8
   1b192:	e764      	b.n	1b05e <_malloc_r+0x8e>
   1b194:	464b      	mov	r3, r9
   1b196:	e7e0      	b.n	1b15a <_malloc_r+0x18a>
   1b198:	2303      	movs	r3, #3
   1b19a:	68b4      	ldr	r4, [r6, #8]
   1b19c:	6862      	ldr	r2, [r4, #4]
   1b19e:	439a      	bics	r2, r3
   1b1a0:	4690      	mov	r8, r2
   1b1a2:	42aa      	cmp	r2, r5
   1b1a4:	d303      	bcc.n	1b1ae <_malloc_r+0x1de>
   1b1a6:	1b53      	subs	r3, r2, r5
   1b1a8:	2b0f      	cmp	r3, #15
   1b1aa:	dd00      	ble.n	1b1ae <_malloc_r+0x1de>
   1b1ac:	e086      	b.n	1b2bc <_malloc_r+0x2ec>
   1b1ae:	0023      	movs	r3, r4
   1b1b0:	4443      	add	r3, r8
   1b1b2:	4a6f      	ldr	r2, [pc, #444]	; (1b370 <_malloc_r+0x3a0>)
   1b1b4:	9301      	str	r3, [sp, #4]
   1b1b6:	4b6f      	ldr	r3, [pc, #444]	; (1b374 <_malloc_r+0x3a4>)
   1b1b8:	4693      	mov	fp, r2
   1b1ba:	681b      	ldr	r3, [r3, #0]
   1b1bc:	6812      	ldr	r2, [r2, #0]
   1b1be:	18eb      	adds	r3, r5, r3
   1b1c0:	3201      	adds	r2, #1
   1b1c2:	d100      	bne.n	1b1c6 <_malloc_r+0x1f6>
   1b1c4:	e168      	b.n	1b498 <_malloc_r+0x4c8>
   1b1c6:	4a6c      	ldr	r2, [pc, #432]	; (1b378 <_malloc_r+0x3a8>)
   1b1c8:	4694      	mov	ip, r2
   1b1ca:	4463      	add	r3, ip
   1b1cc:	0b1b      	lsrs	r3, r3, #12
   1b1ce:	031b      	lsls	r3, r3, #12
   1b1d0:	9300      	str	r3, [sp, #0]
   1b1d2:	9900      	ldr	r1, [sp, #0]
   1b1d4:	0038      	movs	r0, r7
   1b1d6:	f000 ffa5 	bl	1c124 <_sbrk_r>
   1b1da:	0003      	movs	r3, r0
   1b1dc:	4681      	mov	r9, r0
   1b1de:	3301      	adds	r3, #1
   1b1e0:	d061      	beq.n	1b2a6 <_malloc_r+0x2d6>
   1b1e2:	9b01      	ldr	r3, [sp, #4]
   1b1e4:	4283      	cmp	r3, r0
   1b1e6:	d900      	bls.n	1b1ea <_malloc_r+0x21a>
   1b1e8:	e0ff      	b.n	1b3ea <_malloc_r+0x41a>
   1b1ea:	4b64      	ldr	r3, [pc, #400]	; (1b37c <_malloc_r+0x3ac>)
   1b1ec:	9a00      	ldr	r2, [sp, #0]
   1b1ee:	469a      	mov	sl, r3
   1b1f0:	681b      	ldr	r3, [r3, #0]
   1b1f2:	469c      	mov	ip, r3
   1b1f4:	4653      	mov	r3, sl
   1b1f6:	4462      	add	r2, ip
   1b1f8:	601a      	str	r2, [r3, #0]
   1b1fa:	9b01      	ldr	r3, [sp, #4]
   1b1fc:	0011      	movs	r1, r2
   1b1fe:	4283      	cmp	r3, r0
   1b200:	d100      	bne.n	1b204 <_malloc_r+0x234>
   1b202:	e155      	b.n	1b4b0 <_malloc_r+0x4e0>
   1b204:	465b      	mov	r3, fp
   1b206:	681b      	ldr	r3, [r3, #0]
   1b208:	3301      	adds	r3, #1
   1b20a:	d100      	bne.n	1b20e <_malloc_r+0x23e>
   1b20c:	e16c      	b.n	1b4e8 <_malloc_r+0x518>
   1b20e:	464b      	mov	r3, r9
   1b210:	9a01      	ldr	r2, [sp, #4]
   1b212:	1a9b      	subs	r3, r3, r2
   1b214:	1859      	adds	r1, r3, r1
   1b216:	4653      	mov	r3, sl
   1b218:	6019      	str	r1, [r3, #0]
   1b21a:	2307      	movs	r3, #7
   1b21c:	464a      	mov	r2, r9
   1b21e:	4013      	ands	r3, r2
   1b220:	d100      	bne.n	1b224 <_malloc_r+0x254>
   1b222:	e124      	b.n	1b46e <_malloc_r+0x49e>
   1b224:	2108      	movs	r1, #8
   1b226:	4689      	mov	r9, r1
   1b228:	4955      	ldr	r1, [pc, #340]	; (1b380 <_malloc_r+0x3b0>)
   1b22a:	1ad2      	subs	r2, r2, r3
   1b22c:	4491      	add	r9, r2
   1b22e:	1acb      	subs	r3, r1, r3
   1b230:	9a00      	ldr	r2, [sp, #0]
   1b232:	0038      	movs	r0, r7
   1b234:	444a      	add	r2, r9
   1b236:	0511      	lsls	r1, r2, #20
   1b238:	0d09      	lsrs	r1, r1, #20
   1b23a:	1a5b      	subs	r3, r3, r1
   1b23c:	0019      	movs	r1, r3
   1b23e:	469b      	mov	fp, r3
   1b240:	f000 ff70 	bl	1c124 <_sbrk_r>
   1b244:	1c43      	adds	r3, r0, #1
   1b246:	d100      	bne.n	1b24a <_malloc_r+0x27a>
   1b248:	e142      	b.n	1b4d0 <_malloc_r+0x500>
   1b24a:	464b      	mov	r3, r9
   1b24c:	1ac0      	subs	r0, r0, r3
   1b24e:	2301      	movs	r3, #1
   1b250:	4458      	add	r0, fp
   1b252:	4318      	orrs	r0, r3
   1b254:	4653      	mov	r3, sl
   1b256:	681b      	ldr	r3, [r3, #0]
   1b258:	445b      	add	r3, fp
   1b25a:	0019      	movs	r1, r3
   1b25c:	4653      	mov	r3, sl
   1b25e:	6019      	str	r1, [r3, #0]
   1b260:	464b      	mov	r3, r9
   1b262:	60b3      	str	r3, [r6, #8]
   1b264:	6058      	str	r0, [r3, #4]
   1b266:	42b4      	cmp	r4, r6
   1b268:	d013      	beq.n	1b292 <_malloc_r+0x2c2>
   1b26a:	4643      	mov	r3, r8
   1b26c:	2b0f      	cmp	r3, #15
   1b26e:	d800      	bhi.n	1b272 <_malloc_r+0x2a2>
   1b270:	e0e8      	b.n	1b444 <_malloc_r+0x474>
   1b272:	4643      	mov	r3, r8
   1b274:	2207      	movs	r2, #7
   1b276:	6860      	ldr	r0, [r4, #4]
   1b278:	3b0c      	subs	r3, #12
   1b27a:	4393      	bics	r3, r2
   1b27c:	3a06      	subs	r2, #6
   1b27e:	4002      	ands	r2, r0
   1b280:	2005      	movs	r0, #5
   1b282:	431a      	orrs	r2, r3
   1b284:	6062      	str	r2, [r4, #4]
   1b286:	18e2      	adds	r2, r4, r3
   1b288:	6050      	str	r0, [r2, #4]
   1b28a:	6090      	str	r0, [r2, #8]
   1b28c:	2b0f      	cmp	r3, #15
   1b28e:	d900      	bls.n	1b292 <_malloc_r+0x2c2>
   1b290:	e122      	b.n	1b4d8 <_malloc_r+0x508>
   1b292:	4b3c      	ldr	r3, [pc, #240]	; (1b384 <_malloc_r+0x3b4>)
   1b294:	681a      	ldr	r2, [r3, #0]
   1b296:	4291      	cmp	r1, r2
   1b298:	d900      	bls.n	1b29c <_malloc_r+0x2cc>
   1b29a:	6019      	str	r1, [r3, #0]
   1b29c:	4b3a      	ldr	r3, [pc, #232]	; (1b388 <_malloc_r+0x3b8>)
   1b29e:	681a      	ldr	r2, [r3, #0]
   1b2a0:	4291      	cmp	r1, r2
   1b2a2:	d900      	bls.n	1b2a6 <_malloc_r+0x2d6>
   1b2a4:	6019      	str	r1, [r3, #0]
   1b2a6:	2303      	movs	r3, #3
   1b2a8:	68b4      	ldr	r4, [r6, #8]
   1b2aa:	6862      	ldr	r2, [r4, #4]
   1b2ac:	439a      	bics	r2, r3
   1b2ae:	1b53      	subs	r3, r2, r5
   1b2b0:	4295      	cmp	r5, r2
   1b2b2:	d900      	bls.n	1b2b6 <_malloc_r+0x2e6>
   1b2b4:	e0c9      	b.n	1b44a <_malloc_r+0x47a>
   1b2b6:	2b0f      	cmp	r3, #15
   1b2b8:	dc00      	bgt.n	1b2bc <_malloc_r+0x2ec>
   1b2ba:	e0c6      	b.n	1b44a <_malloc_r+0x47a>
   1b2bc:	2201      	movs	r2, #1
   1b2be:	0029      	movs	r1, r5
   1b2c0:	4313      	orrs	r3, r2
   1b2c2:	4311      	orrs	r1, r2
   1b2c4:	1965      	adds	r5, r4, r5
   1b2c6:	6061      	str	r1, [r4, #4]
   1b2c8:	0038      	movs	r0, r7
   1b2ca:	60b5      	str	r5, [r6, #8]
   1b2cc:	606b      	str	r3, [r5, #4]
   1b2ce:	f000 f9e1 	bl	1b694 <__malloc_unlock>
   1b2d2:	0020      	movs	r0, r4
   1b2d4:	3008      	adds	r0, #8
   1b2d6:	e74a      	b.n	1b16e <_malloc_r+0x19e>
   1b2d8:	2814      	cmp	r0, #20
   1b2da:	d97a      	bls.n	1b3d2 <_malloc_r+0x402>
   1b2dc:	2854      	cmp	r0, #84	; 0x54
   1b2de:	d900      	bls.n	1b2e2 <_malloc_r+0x312>
   1b2e0:	e0ba      	b.n	1b458 <_malloc_r+0x488>
   1b2e2:	236e      	movs	r3, #110	; 0x6e
   1b2e4:	4698      	mov	r8, r3
   1b2e6:	0b28      	lsrs	r0, r5, #12
   1b2e8:	4480      	add	r8, r0
   1b2ea:	306f      	adds	r0, #111	; 0x6f
   1b2ec:	00c1      	lsls	r1, r0, #3
   1b2ee:	e696      	b.n	1b01e <_malloc_r+0x4e>
   1b2f0:	0a5a      	lsrs	r2, r3, #9
   1b2f2:	2a04      	cmp	r2, #4
   1b2f4:	d973      	bls.n	1b3de <_malloc_r+0x40e>
   1b2f6:	2a14      	cmp	r2, #20
   1b2f8:	d900      	bls.n	1b2fc <_malloc_r+0x32c>
   1b2fa:	e0d0      	b.n	1b49e <_malloc_r+0x4ce>
   1b2fc:	0011      	movs	r1, r2
   1b2fe:	325c      	adds	r2, #92	; 0x5c
   1b300:	315b      	adds	r1, #91	; 0x5b
   1b302:	00d2      	lsls	r2, r2, #3
   1b304:	2308      	movs	r3, #8
   1b306:	425b      	negs	r3, r3
   1b308:	469c      	mov	ip, r3
   1b30a:	18b2      	adds	r2, r6, r2
   1b30c:	4494      	add	ip, r2
   1b30e:	4663      	mov	r3, ip
   1b310:	689a      	ldr	r2, [r3, #8]
   1b312:	2303      	movs	r3, #3
   1b314:	4698      	mov	r8, r3
   1b316:	4594      	cmp	ip, r2
   1b318:	d100      	bne.n	1b31c <_malloc_r+0x34c>
   1b31a:	e0ab      	b.n	1b474 <_malloc_r+0x4a4>
   1b31c:	4643      	mov	r3, r8
   1b31e:	6851      	ldr	r1, [r2, #4]
   1b320:	4399      	bics	r1, r3
   1b322:	4589      	cmp	r9, r1
   1b324:	d300      	bcc.n	1b328 <_malloc_r+0x358>
   1b326:	e095      	b.n	1b454 <_malloc_r+0x484>
   1b328:	6892      	ldr	r2, [r2, #8]
   1b32a:	4594      	cmp	ip, r2
   1b32c:	d1f6      	bne.n	1b31c <_malloc_r+0x34c>
   1b32e:	4663      	mov	r3, ip
   1b330:	68da      	ldr	r2, [r3, #12]
   1b332:	6873      	ldr	r3, [r6, #4]
   1b334:	4661      	mov	r1, ip
   1b336:	60e2      	str	r2, [r4, #12]
   1b338:	60a1      	str	r1, [r4, #8]
   1b33a:	6094      	str	r4, [r2, #8]
   1b33c:	60cc      	str	r4, [r1, #12]
   1b33e:	e6b6      	b.n	1b0ae <_malloc_r+0xde>
   1b340:	2301      	movs	r3, #1
   1b342:	1960      	adds	r0, r4, r5
   1b344:	431d      	orrs	r5, r3
   1b346:	6065      	str	r5, [r4, #4]
   1b348:	6170      	str	r0, [r6, #20]
   1b34a:	6130      	str	r0, [r6, #16]
   1b34c:	60c2      	str	r2, [r0, #12]
   1b34e:	6082      	str	r2, [r0, #8]
   1b350:	001a      	movs	r2, r3
   1b352:	464b      	mov	r3, r9
   1b354:	430a      	orrs	r2, r1
   1b356:	6042      	str	r2, [r0, #4]
   1b358:	0038      	movs	r0, r7
   1b35a:	50e1      	str	r1, [r4, r3]
   1b35c:	f000 f99a 	bl	1b694 <__malloc_unlock>
   1b360:	0020      	movs	r0, r4
   1b362:	3008      	adds	r0, #8
   1b364:	e703      	b.n	1b16e <_malloc_r+0x19e>
   1b366:	46c0      	nop			; (mov r8, r8)
   1b368:	200005d8 	.word	0x200005d8
   1b36c:	000001ff 	.word	0x000001ff
   1b370:	200009e0 	.word	0x200009e0
   1b374:	20000ccc 	.word	0x20000ccc
   1b378:	0000100f 	.word	0x0000100f
   1b37c:	20000c9c 	.word	0x20000c9c
   1b380:	00001008 	.word	0x00001008
   1b384:	20000cc4 	.word	0x20000cc4
   1b388:	20000cc8 	.word	0x20000cc8
   1b38c:	6873      	ldr	r3, [r6, #4]
   1b38e:	e68e      	b.n	1b0ae <_malloc_r+0xde>
   1b390:	2308      	movs	r3, #8
   1b392:	469b      	mov	fp, r3
   1b394:	3b07      	subs	r3, #7
   1b396:	44dc      	add	ip, fp
   1b398:	469b      	mov	fp, r3
   1b39a:	44da      	add	sl, fp
   1b39c:	4643      	mov	r3, r8
   1b39e:	4652      	mov	r2, sl
   1b3a0:	4213      	tst	r3, r2
   1b3a2:	d000      	beq.n	1b3a6 <_malloc_r+0x3d6>
   1b3a4:	e697      	b.n	1b0d6 <_malloc_r+0x106>
   1b3a6:	e037      	b.n	1b418 <_malloc_r+0x448>
   1b3a8:	68dc      	ldr	r4, [r3, #12]
   1b3aa:	3002      	adds	r0, #2
   1b3ac:	42a3      	cmp	r3, r4
   1b3ae:	d100      	bne.n	1b3b2 <_malloc_r+0x3e2>
   1b3b0:	e655      	b.n	1b05e <_malloc_r+0x8e>
   1b3b2:	e6ca      	b.n	1b14a <_malloc_r+0x17a>
   1b3b4:	2201      	movs	r2, #1
   1b3b6:	18e3      	adds	r3, r4, r3
   1b3b8:	6859      	ldr	r1, [r3, #4]
   1b3ba:	0038      	movs	r0, r7
   1b3bc:	430a      	orrs	r2, r1
   1b3be:	605a      	str	r2, [r3, #4]
   1b3c0:	68e3      	ldr	r3, [r4, #12]
   1b3c2:	68a2      	ldr	r2, [r4, #8]
   1b3c4:	60d3      	str	r3, [r2, #12]
   1b3c6:	609a      	str	r2, [r3, #8]
   1b3c8:	f000 f964 	bl	1b694 <__malloc_unlock>
   1b3cc:	0020      	movs	r0, r4
   1b3ce:	3008      	adds	r0, #8
   1b3d0:	e6cd      	b.n	1b16e <_malloc_r+0x19e>
   1b3d2:	235b      	movs	r3, #91	; 0x5b
   1b3d4:	4698      	mov	r8, r3
   1b3d6:	4480      	add	r8, r0
   1b3d8:	305c      	adds	r0, #92	; 0x5c
   1b3da:	00c1      	lsls	r1, r0, #3
   1b3dc:	e61f      	b.n	1b01e <_malloc_r+0x4e>
   1b3de:	099a      	lsrs	r2, r3, #6
   1b3e0:	0011      	movs	r1, r2
   1b3e2:	3239      	adds	r2, #57	; 0x39
   1b3e4:	3138      	adds	r1, #56	; 0x38
   1b3e6:	00d2      	lsls	r2, r2, #3
   1b3e8:	e78c      	b.n	1b304 <_malloc_r+0x334>
   1b3ea:	42b4      	cmp	r4, r6
   1b3ec:	d000      	beq.n	1b3f0 <_malloc_r+0x420>
   1b3ee:	e75a      	b.n	1b2a6 <_malloc_r+0x2d6>
   1b3f0:	4b4f      	ldr	r3, [pc, #316]	; (1b530 <_malloc_r+0x560>)
   1b3f2:	9a00      	ldr	r2, [sp, #0]
   1b3f4:	469a      	mov	sl, r3
   1b3f6:	681b      	ldr	r3, [r3, #0]
   1b3f8:	469c      	mov	ip, r3
   1b3fa:	4653      	mov	r3, sl
   1b3fc:	4462      	add	r2, ip
   1b3fe:	0011      	movs	r1, r2
   1b400:	601a      	str	r2, [r3, #0]
   1b402:	e6ff      	b.n	1b204 <_malloc_r+0x234>
   1b404:	2308      	movs	r3, #8
   1b406:	425b      	negs	r3, r3
   1b408:	469c      	mov	ip, r3
   1b40a:	44e1      	add	r9, ip
   1b40c:	464b      	mov	r3, r9
   1b40e:	689b      	ldr	r3, [r3, #8]
   1b410:	3801      	subs	r0, #1
   1b412:	4599      	cmp	r9, r3
   1b414:	d000      	beq.n	1b418 <_malloc_r+0x448>
   1b416:	e084      	b.n	1b522 <_malloc_r+0x552>
   1b418:	4643      	mov	r3, r8
   1b41a:	4203      	tst	r3, r0
   1b41c:	d1f2      	bne.n	1b404 <_malloc_r+0x434>
   1b41e:	6873      	ldr	r3, [r6, #4]
   1b420:	438b      	bics	r3, r1
   1b422:	6073      	str	r3, [r6, #4]
   1b424:	0049      	lsls	r1, r1, #1
   1b426:	4299      	cmp	r1, r3
   1b428:	d900      	bls.n	1b42c <_malloc_r+0x45c>
   1b42a:	e6b5      	b.n	1b198 <_malloc_r+0x1c8>
   1b42c:	2900      	cmp	r1, #0
   1b42e:	d100      	bne.n	1b432 <_malloc_r+0x462>
   1b430:	e6b2      	b.n	1b198 <_malloc_r+0x1c8>
   1b432:	4650      	mov	r0, sl
   1b434:	420b      	tst	r3, r1
   1b436:	d000      	beq.n	1b43a <_malloc_r+0x46a>
   1b438:	e648      	b.n	1b0cc <_malloc_r+0xfc>
   1b43a:	0049      	lsls	r1, r1, #1
   1b43c:	3004      	adds	r0, #4
   1b43e:	420b      	tst	r3, r1
   1b440:	d0fb      	beq.n	1b43a <_malloc_r+0x46a>
   1b442:	e643      	b.n	1b0cc <_malloc_r+0xfc>
   1b444:	2301      	movs	r3, #1
   1b446:	464a      	mov	r2, r9
   1b448:	6053      	str	r3, [r2, #4]
   1b44a:	0038      	movs	r0, r7
   1b44c:	f000 f922 	bl	1b694 <__malloc_unlock>
   1b450:	2000      	movs	r0, #0
   1b452:	e68c      	b.n	1b16e <_malloc_r+0x19e>
   1b454:	4694      	mov	ip, r2
   1b456:	e76a      	b.n	1b32e <_malloc_r+0x35e>
   1b458:	23aa      	movs	r3, #170	; 0xaa
   1b45a:	005b      	lsls	r3, r3, #1
   1b45c:	4298      	cmp	r0, r3
   1b45e:	d811      	bhi.n	1b484 <_malloc_r+0x4b4>
   1b460:	3bdd      	subs	r3, #221	; 0xdd
   1b462:	4698      	mov	r8, r3
   1b464:	0be8      	lsrs	r0, r5, #15
   1b466:	4480      	add	r8, r0
   1b468:	3078      	adds	r0, #120	; 0x78
   1b46a:	00c1      	lsls	r1, r0, #3
   1b46c:	e5d7      	b.n	1b01e <_malloc_r+0x4e>
   1b46e:	2380      	movs	r3, #128	; 0x80
   1b470:	015b      	lsls	r3, r3, #5
   1b472:	e6dd      	b.n	1b230 <_malloc_r+0x260>
   1b474:	1089      	asrs	r1, r1, #2
   1b476:	3b02      	subs	r3, #2
   1b478:	408b      	lsls	r3, r1
   1b47a:	6872      	ldr	r2, [r6, #4]
   1b47c:	4313      	orrs	r3, r2
   1b47e:	6073      	str	r3, [r6, #4]
   1b480:	4662      	mov	r2, ip
   1b482:	e757      	b.n	1b334 <_malloc_r+0x364>
   1b484:	4b2b      	ldr	r3, [pc, #172]	; (1b534 <_malloc_r+0x564>)
   1b486:	4298      	cmp	r0, r3
   1b488:	d81c      	bhi.n	1b4c4 <_malloc_r+0x4f4>
   1b48a:	237c      	movs	r3, #124	; 0x7c
   1b48c:	4698      	mov	r8, r3
   1b48e:	0ca8      	lsrs	r0, r5, #18
   1b490:	4480      	add	r8, r0
   1b492:	307d      	adds	r0, #125	; 0x7d
   1b494:	00c1      	lsls	r1, r0, #3
   1b496:	e5c2      	b.n	1b01e <_malloc_r+0x4e>
   1b498:	3310      	adds	r3, #16
   1b49a:	9300      	str	r3, [sp, #0]
   1b49c:	e699      	b.n	1b1d2 <_malloc_r+0x202>
   1b49e:	2a54      	cmp	r2, #84	; 0x54
   1b4a0:	d826      	bhi.n	1b4f0 <_malloc_r+0x520>
   1b4a2:	464b      	mov	r3, r9
   1b4a4:	0b1a      	lsrs	r2, r3, #12
   1b4a6:	0011      	movs	r1, r2
   1b4a8:	326f      	adds	r2, #111	; 0x6f
   1b4aa:	316e      	adds	r1, #110	; 0x6e
   1b4ac:	00d2      	lsls	r2, r2, #3
   1b4ae:	e729      	b.n	1b304 <_malloc_r+0x334>
   1b4b0:	051b      	lsls	r3, r3, #20
   1b4b2:	d000      	beq.n	1b4b6 <_malloc_r+0x4e6>
   1b4b4:	e6a6      	b.n	1b204 <_malloc_r+0x234>
   1b4b6:	2001      	movs	r0, #1
   1b4b8:	9b00      	ldr	r3, [sp, #0]
   1b4ba:	68b2      	ldr	r2, [r6, #8]
   1b4bc:	4443      	add	r3, r8
   1b4be:	4303      	orrs	r3, r0
   1b4c0:	6053      	str	r3, [r2, #4]
   1b4c2:	e6e6      	b.n	1b292 <_malloc_r+0x2c2>
   1b4c4:	21fe      	movs	r1, #254	; 0xfe
   1b4c6:	237e      	movs	r3, #126	; 0x7e
   1b4c8:	207f      	movs	r0, #127	; 0x7f
   1b4ca:	0089      	lsls	r1, r1, #2
   1b4cc:	4698      	mov	r8, r3
   1b4ce:	e5a6      	b.n	1b01e <_malloc_r+0x4e>
   1b4d0:	2300      	movs	r3, #0
   1b4d2:	2001      	movs	r0, #1
   1b4d4:	469b      	mov	fp, r3
   1b4d6:	e6bd      	b.n	1b254 <_malloc_r+0x284>
   1b4d8:	0021      	movs	r1, r4
   1b4da:	0038      	movs	r0, r7
   1b4dc:	3108      	adds	r1, #8
   1b4de:	f7ff fa45 	bl	1a96c <_free_r>
   1b4e2:	4653      	mov	r3, sl
   1b4e4:	6819      	ldr	r1, [r3, #0]
   1b4e6:	e6d4      	b.n	1b292 <_malloc_r+0x2c2>
   1b4e8:	465b      	mov	r3, fp
   1b4ea:	464a      	mov	r2, r9
   1b4ec:	601a      	str	r2, [r3, #0]
   1b4ee:	e694      	b.n	1b21a <_malloc_r+0x24a>
   1b4f0:	21aa      	movs	r1, #170	; 0xaa
   1b4f2:	0049      	lsls	r1, r1, #1
   1b4f4:	428a      	cmp	r2, r1
   1b4f6:	d806      	bhi.n	1b506 <_malloc_r+0x536>
   1b4f8:	464b      	mov	r3, r9
   1b4fa:	0bda      	lsrs	r2, r3, #15
   1b4fc:	0011      	movs	r1, r2
   1b4fe:	3278      	adds	r2, #120	; 0x78
   1b500:	3177      	adds	r1, #119	; 0x77
   1b502:	00d2      	lsls	r2, r2, #3
   1b504:	e6fe      	b.n	1b304 <_malloc_r+0x334>
   1b506:	490b      	ldr	r1, [pc, #44]	; (1b534 <_malloc_r+0x564>)
   1b508:	428a      	cmp	r2, r1
   1b50a:	d806      	bhi.n	1b51a <_malloc_r+0x54a>
   1b50c:	464b      	mov	r3, r9
   1b50e:	0c9a      	lsrs	r2, r3, #18
   1b510:	0011      	movs	r1, r2
   1b512:	327d      	adds	r2, #125	; 0x7d
   1b514:	317c      	adds	r1, #124	; 0x7c
   1b516:	00d2      	lsls	r2, r2, #3
   1b518:	e6f4      	b.n	1b304 <_malloc_r+0x334>
   1b51a:	22fe      	movs	r2, #254	; 0xfe
   1b51c:	217e      	movs	r1, #126	; 0x7e
   1b51e:	0092      	lsls	r2, r2, #2
   1b520:	e6f0      	b.n	1b304 <_malloc_r+0x334>
   1b522:	6873      	ldr	r3, [r6, #4]
   1b524:	e77e      	b.n	1b424 <_malloc_r+0x454>
   1b526:	002b      	movs	r3, r5
   1b528:	08e8      	lsrs	r0, r5, #3
   1b52a:	3308      	adds	r3, #8
   1b52c:	e605      	b.n	1b13a <_malloc_r+0x16a>
   1b52e:	46c0      	nop			; (mov r8, r8)
   1b530:	20000c9c 	.word	0x20000c9c
   1b534:	00000554 	.word	0x00000554

0001b538 <__ascii_mbtowc>:
   1b538:	b082      	sub	sp, #8
   1b53a:	2900      	cmp	r1, #0
   1b53c:	d00a      	beq.n	1b554 <__ascii_mbtowc+0x1c>
   1b53e:	2a00      	cmp	r2, #0
   1b540:	d00b      	beq.n	1b55a <__ascii_mbtowc+0x22>
   1b542:	2b00      	cmp	r3, #0
   1b544:	d00b      	beq.n	1b55e <__ascii_mbtowc+0x26>
   1b546:	7813      	ldrb	r3, [r2, #0]
   1b548:	600b      	str	r3, [r1, #0]
   1b54a:	7810      	ldrb	r0, [r2, #0]
   1b54c:	1e43      	subs	r3, r0, #1
   1b54e:	4198      	sbcs	r0, r3
   1b550:	b002      	add	sp, #8
   1b552:	4770      	bx	lr
   1b554:	a901      	add	r1, sp, #4
   1b556:	2a00      	cmp	r2, #0
   1b558:	d1f3      	bne.n	1b542 <__ascii_mbtowc+0xa>
   1b55a:	2000      	movs	r0, #0
   1b55c:	e7f8      	b.n	1b550 <__ascii_mbtowc+0x18>
   1b55e:	2002      	movs	r0, #2
   1b560:	4240      	negs	r0, r0
   1b562:	e7f5      	b.n	1b550 <__ascii_mbtowc+0x18>

0001b564 <memchr>:
   1b564:	b570      	push	{r4, r5, r6, lr}
   1b566:	b2cd      	uxtb	r5, r1
   1b568:	0783      	lsls	r3, r0, #30
   1b56a:	d034      	beq.n	1b5d6 <memchr+0x72>
   1b56c:	1e54      	subs	r4, r2, #1
   1b56e:	2a00      	cmp	r2, #0
   1b570:	d01b      	beq.n	1b5aa <memchr+0x46>
   1b572:	7803      	ldrb	r3, [r0, #0]
   1b574:	42ab      	cmp	r3, r5
   1b576:	d019      	beq.n	1b5ac <memchr+0x48>
   1b578:	2203      	movs	r2, #3
   1b57a:	e004      	b.n	1b586 <memchr+0x22>
   1b57c:	3c01      	subs	r4, #1
   1b57e:	d314      	bcc.n	1b5aa <memchr+0x46>
   1b580:	7803      	ldrb	r3, [r0, #0]
   1b582:	42ab      	cmp	r3, r5
   1b584:	d012      	beq.n	1b5ac <memchr+0x48>
   1b586:	3001      	adds	r0, #1
   1b588:	4210      	tst	r0, r2
   1b58a:	d1f7      	bne.n	1b57c <memchr+0x18>
   1b58c:	2c03      	cmp	r4, #3
   1b58e:	d80e      	bhi.n	1b5ae <memchr+0x4a>
   1b590:	2c00      	cmp	r4, #0
   1b592:	d00a      	beq.n	1b5aa <memchr+0x46>
   1b594:	7803      	ldrb	r3, [r0, #0]
   1b596:	42ab      	cmp	r3, r5
   1b598:	d008      	beq.n	1b5ac <memchr+0x48>
   1b59a:	1904      	adds	r4, r0, r4
   1b59c:	e002      	b.n	1b5a4 <memchr+0x40>
   1b59e:	7803      	ldrb	r3, [r0, #0]
   1b5a0:	42ab      	cmp	r3, r5
   1b5a2:	d003      	beq.n	1b5ac <memchr+0x48>
   1b5a4:	3001      	adds	r0, #1
   1b5a6:	4284      	cmp	r4, r0
   1b5a8:	d1f9      	bne.n	1b59e <memchr+0x3a>
   1b5aa:	2000      	movs	r0, #0
   1b5ac:	bd70      	pop	{r4, r5, r6, pc}
   1b5ae:	22ff      	movs	r2, #255	; 0xff
   1b5b0:	060b      	lsls	r3, r1, #24
   1b5b2:	0c1b      	lsrs	r3, r3, #16
   1b5b4:	4011      	ands	r1, r2
   1b5b6:	4319      	orrs	r1, r3
   1b5b8:	040b      	lsls	r3, r1, #16
   1b5ba:	4e08      	ldr	r6, [pc, #32]	; (1b5dc <memchr+0x78>)
   1b5bc:	4319      	orrs	r1, r3
   1b5be:	6803      	ldr	r3, [r0, #0]
   1b5c0:	4a07      	ldr	r2, [pc, #28]	; (1b5e0 <memchr+0x7c>)
   1b5c2:	404b      	eors	r3, r1
   1b5c4:	189a      	adds	r2, r3, r2
   1b5c6:	439a      	bics	r2, r3
   1b5c8:	4232      	tst	r2, r6
   1b5ca:	d1e3      	bne.n	1b594 <memchr+0x30>
   1b5cc:	3c04      	subs	r4, #4
   1b5ce:	3004      	adds	r0, #4
   1b5d0:	2c03      	cmp	r4, #3
   1b5d2:	d8f4      	bhi.n	1b5be <memchr+0x5a>
   1b5d4:	e7dc      	b.n	1b590 <memchr+0x2c>
   1b5d6:	0014      	movs	r4, r2
   1b5d8:	e7d8      	b.n	1b58c <memchr+0x28>
   1b5da:	46c0      	nop			; (mov r8, r8)
   1b5dc:	80808080 	.word	0x80808080
   1b5e0:	fefefeff 	.word	0xfefefeff

0001b5e4 <memmove>:
   1b5e4:	b5f0      	push	{r4, r5, r6, r7, lr}
   1b5e6:	4288      	cmp	r0, r1
   1b5e8:	d90a      	bls.n	1b600 <memmove+0x1c>
   1b5ea:	188b      	adds	r3, r1, r2
   1b5ec:	4298      	cmp	r0, r3
   1b5ee:	d207      	bcs.n	1b600 <memmove+0x1c>
   1b5f0:	1e53      	subs	r3, r2, #1
   1b5f2:	2a00      	cmp	r2, #0
   1b5f4:	d003      	beq.n	1b5fe <memmove+0x1a>
   1b5f6:	5cca      	ldrb	r2, [r1, r3]
   1b5f8:	54c2      	strb	r2, [r0, r3]
   1b5fa:	3b01      	subs	r3, #1
   1b5fc:	d2fb      	bcs.n	1b5f6 <memmove+0x12>
   1b5fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1b600:	0005      	movs	r5, r0
   1b602:	2a0f      	cmp	r2, #15
   1b604:	d808      	bhi.n	1b618 <memmove+0x34>
   1b606:	2a00      	cmp	r2, #0
   1b608:	d0f9      	beq.n	1b5fe <memmove+0x1a>
   1b60a:	2300      	movs	r3, #0
   1b60c:	5ccc      	ldrb	r4, [r1, r3]
   1b60e:	54ec      	strb	r4, [r5, r3]
   1b610:	3301      	adds	r3, #1
   1b612:	4293      	cmp	r3, r2
   1b614:	d1fa      	bne.n	1b60c <memmove+0x28>
   1b616:	e7f2      	b.n	1b5fe <memmove+0x1a>
   1b618:	000b      	movs	r3, r1
   1b61a:	4303      	orrs	r3, r0
   1b61c:	079b      	lsls	r3, r3, #30
   1b61e:	d12d      	bne.n	1b67c <memmove+0x98>
   1b620:	0015      	movs	r5, r2
   1b622:	000c      	movs	r4, r1
   1b624:	0003      	movs	r3, r0
   1b626:	3d10      	subs	r5, #16
   1b628:	092f      	lsrs	r7, r5, #4
   1b62a:	3701      	adds	r7, #1
   1b62c:	013f      	lsls	r7, r7, #4
   1b62e:	19c7      	adds	r7, r0, r7
   1b630:	6826      	ldr	r6, [r4, #0]
   1b632:	601e      	str	r6, [r3, #0]
   1b634:	6866      	ldr	r6, [r4, #4]
   1b636:	605e      	str	r6, [r3, #4]
   1b638:	68a6      	ldr	r6, [r4, #8]
   1b63a:	609e      	str	r6, [r3, #8]
   1b63c:	68e6      	ldr	r6, [r4, #12]
   1b63e:	3410      	adds	r4, #16
   1b640:	60de      	str	r6, [r3, #12]
   1b642:	3310      	adds	r3, #16
   1b644:	429f      	cmp	r7, r3
   1b646:	d1f3      	bne.n	1b630 <memmove+0x4c>
   1b648:	240f      	movs	r4, #15
   1b64a:	43a5      	bics	r5, r4
   1b64c:	3510      	adds	r5, #16
   1b64e:	1949      	adds	r1, r1, r5
   1b650:	4014      	ands	r4, r2
   1b652:	1945      	adds	r5, r0, r5
   1b654:	2c03      	cmp	r4, #3
   1b656:	d913      	bls.n	1b680 <memmove+0x9c>
   1b658:	2300      	movs	r3, #0
   1b65a:	1f27      	subs	r7, r4, #4
   1b65c:	08be      	lsrs	r6, r7, #2
   1b65e:	3601      	adds	r6, #1
   1b660:	00b6      	lsls	r6, r6, #2
   1b662:	58cc      	ldr	r4, [r1, r3]
   1b664:	50ec      	str	r4, [r5, r3]
   1b666:	3304      	adds	r3, #4
   1b668:	42b3      	cmp	r3, r6
   1b66a:	d1fa      	bne.n	1b662 <memmove+0x7e>
   1b66c:	2603      	movs	r6, #3
   1b66e:	43b7      	bics	r7, r6
   1b670:	1d3c      	adds	r4, r7, #4
   1b672:	1909      	adds	r1, r1, r4
   1b674:	192d      	adds	r5, r5, r4
   1b676:	4032      	ands	r2, r6
   1b678:	d1c7      	bne.n	1b60a <memmove+0x26>
   1b67a:	e7c0      	b.n	1b5fe <memmove+0x1a>
   1b67c:	0005      	movs	r5, r0
   1b67e:	e7c4      	b.n	1b60a <memmove+0x26>
   1b680:	0022      	movs	r2, r4
   1b682:	e7c0      	b.n	1b606 <memmove+0x22>

0001b684 <__malloc_lock>:
   1b684:	b510      	push	{r4, lr}
   1b686:	4802      	ldr	r0, [pc, #8]	; (1b690 <__malloc_lock+0xc>)
   1b688:	f7ff fc1c 	bl	1aec4 <__retarget_lock_acquire_recursive>
   1b68c:	bd10      	pop	{r4, pc}
   1b68e:	46c0      	nop			; (mov r8, r8)
   1b690:	20001c50 	.word	0x20001c50

0001b694 <__malloc_unlock>:
   1b694:	b510      	push	{r4, lr}
   1b696:	4802      	ldr	r0, [pc, #8]	; (1b6a0 <__malloc_unlock+0xc>)
   1b698:	f7ff fc16 	bl	1aec8 <__retarget_lock_release_recursive>
   1b69c:	bd10      	pop	{r4, pc}
   1b69e:	46c0      	nop			; (mov r8, r8)
   1b6a0:	20001c50 	.word	0x20001c50

0001b6a4 <_Balloc>:
   1b6a4:	b570      	push	{r4, r5, r6, lr}
   1b6a6:	0004      	movs	r4, r0
   1b6a8:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
   1b6aa:	000d      	movs	r5, r1
   1b6ac:	2800      	cmp	r0, #0
   1b6ae:	d00a      	beq.n	1b6c6 <_Balloc+0x22>
   1b6b0:	00ab      	lsls	r3, r5, #2
   1b6b2:	18c3      	adds	r3, r0, r3
   1b6b4:	6818      	ldr	r0, [r3, #0]
   1b6b6:	2800      	cmp	r0, #0
   1b6b8:	d00f      	beq.n	1b6da <_Balloc+0x36>
   1b6ba:	6802      	ldr	r2, [r0, #0]
   1b6bc:	601a      	str	r2, [r3, #0]
   1b6be:	2300      	movs	r3, #0
   1b6c0:	6103      	str	r3, [r0, #16]
   1b6c2:	60c3      	str	r3, [r0, #12]
   1b6c4:	bd70      	pop	{r4, r5, r6, pc}
   1b6c6:	2221      	movs	r2, #33	; 0x21
   1b6c8:	2104      	movs	r1, #4
   1b6ca:	0020      	movs	r0, r4
   1b6cc:	f000 fed0 	bl	1c470 <_calloc_r>
   1b6d0:	64e0      	str	r0, [r4, #76]	; 0x4c
   1b6d2:	2800      	cmp	r0, #0
   1b6d4:	d1ec      	bne.n	1b6b0 <_Balloc+0xc>
   1b6d6:	2000      	movs	r0, #0
   1b6d8:	e7f4      	b.n	1b6c4 <_Balloc+0x20>
   1b6da:	2601      	movs	r6, #1
   1b6dc:	40ae      	lsls	r6, r5
   1b6de:	1d72      	adds	r2, r6, #5
   1b6e0:	0092      	lsls	r2, r2, #2
   1b6e2:	2101      	movs	r1, #1
   1b6e4:	0020      	movs	r0, r4
   1b6e6:	f000 fec3 	bl	1c470 <_calloc_r>
   1b6ea:	2800      	cmp	r0, #0
   1b6ec:	d0f3      	beq.n	1b6d6 <_Balloc+0x32>
   1b6ee:	6045      	str	r5, [r0, #4]
   1b6f0:	6086      	str	r6, [r0, #8]
   1b6f2:	e7e4      	b.n	1b6be <_Balloc+0x1a>

0001b6f4 <_Bfree>:
   1b6f4:	2900      	cmp	r1, #0
   1b6f6:	d006      	beq.n	1b706 <_Bfree+0x12>
   1b6f8:	684b      	ldr	r3, [r1, #4]
   1b6fa:	009a      	lsls	r2, r3, #2
   1b6fc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   1b6fe:	189b      	adds	r3, r3, r2
   1b700:	681a      	ldr	r2, [r3, #0]
   1b702:	600a      	str	r2, [r1, #0]
   1b704:	6019      	str	r1, [r3, #0]
   1b706:	4770      	bx	lr

0001b708 <__multadd>:
   1b708:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1b70a:	46ce      	mov	lr, r9
   1b70c:	4647      	mov	r7, r8
   1b70e:	4681      	mov	r9, r0
   1b710:	0008      	movs	r0, r1
   1b712:	b580      	push	{r7, lr}
   1b714:	000d      	movs	r5, r1
   1b716:	690c      	ldr	r4, [r1, #16]
   1b718:	001f      	movs	r7, r3
   1b71a:	2100      	movs	r1, #0
   1b71c:	3014      	adds	r0, #20
   1b71e:	6803      	ldr	r3, [r0, #0]
   1b720:	3101      	adds	r1, #1
   1b722:	041e      	lsls	r6, r3, #16
   1b724:	0c36      	lsrs	r6, r6, #16
   1b726:	4356      	muls	r6, r2
   1b728:	0c1b      	lsrs	r3, r3, #16
   1b72a:	4353      	muls	r3, r2
   1b72c:	19f6      	adds	r6, r6, r7
   1b72e:	0c37      	lsrs	r7, r6, #16
   1b730:	19db      	adds	r3, r3, r7
   1b732:	0436      	lsls	r6, r6, #16
   1b734:	0c1f      	lsrs	r7, r3, #16
   1b736:	0c36      	lsrs	r6, r6, #16
   1b738:	041b      	lsls	r3, r3, #16
   1b73a:	199b      	adds	r3, r3, r6
   1b73c:	c008      	stmia	r0!, {r3}
   1b73e:	428c      	cmp	r4, r1
   1b740:	dced      	bgt.n	1b71e <__multadd+0x16>
   1b742:	2f00      	cmp	r7, #0
   1b744:	d008      	beq.n	1b758 <__multadd+0x50>
   1b746:	68ab      	ldr	r3, [r5, #8]
   1b748:	429c      	cmp	r4, r3
   1b74a:	da0a      	bge.n	1b762 <__multadd+0x5a>
   1b74c:	1d23      	adds	r3, r4, #4
   1b74e:	009b      	lsls	r3, r3, #2
   1b750:	18eb      	adds	r3, r5, r3
   1b752:	3401      	adds	r4, #1
   1b754:	605f      	str	r7, [r3, #4]
   1b756:	612c      	str	r4, [r5, #16]
   1b758:	0028      	movs	r0, r5
   1b75a:	bc0c      	pop	{r2, r3}
   1b75c:	4690      	mov	r8, r2
   1b75e:	4699      	mov	r9, r3
   1b760:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1b762:	686b      	ldr	r3, [r5, #4]
   1b764:	4648      	mov	r0, r9
   1b766:	1c59      	adds	r1, r3, #1
   1b768:	f7ff ff9c 	bl	1b6a4 <_Balloc>
   1b76c:	0029      	movs	r1, r5
   1b76e:	692b      	ldr	r3, [r5, #16]
   1b770:	4680      	mov	r8, r0
   1b772:	1c9a      	adds	r2, r3, #2
   1b774:	0092      	lsls	r2, r2, #2
   1b776:	310c      	adds	r1, #12
   1b778:	300c      	adds	r0, #12
   1b77a:	f7fb ffcb 	bl	17714 <memcpy>
   1b77e:	686b      	ldr	r3, [r5, #4]
   1b780:	009a      	lsls	r2, r3, #2
   1b782:	464b      	mov	r3, r9
   1b784:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
   1b786:	189b      	adds	r3, r3, r2
   1b788:	681a      	ldr	r2, [r3, #0]
   1b78a:	602a      	str	r2, [r5, #0]
   1b78c:	601d      	str	r5, [r3, #0]
   1b78e:	4645      	mov	r5, r8
   1b790:	e7dc      	b.n	1b74c <__multadd+0x44>
   1b792:	46c0      	nop			; (mov r8, r8)

0001b794 <__hi0bits>:
   1b794:	0003      	movs	r3, r0
   1b796:	0c02      	lsrs	r2, r0, #16
   1b798:	2000      	movs	r0, #0
   1b79a:	2a00      	cmp	r2, #0
   1b79c:	d101      	bne.n	1b7a2 <__hi0bits+0xe>
   1b79e:	041b      	lsls	r3, r3, #16
   1b7a0:	3010      	adds	r0, #16
   1b7a2:	0e1a      	lsrs	r2, r3, #24
   1b7a4:	d101      	bne.n	1b7aa <__hi0bits+0x16>
   1b7a6:	3008      	adds	r0, #8
   1b7a8:	021b      	lsls	r3, r3, #8
   1b7aa:	0f1a      	lsrs	r2, r3, #28
   1b7ac:	d101      	bne.n	1b7b2 <__hi0bits+0x1e>
   1b7ae:	3004      	adds	r0, #4
   1b7b0:	011b      	lsls	r3, r3, #4
   1b7b2:	0f9a      	lsrs	r2, r3, #30
   1b7b4:	d101      	bne.n	1b7ba <__hi0bits+0x26>
   1b7b6:	3002      	adds	r0, #2
   1b7b8:	009b      	lsls	r3, r3, #2
   1b7ba:	2b00      	cmp	r3, #0
   1b7bc:	db03      	blt.n	1b7c6 <__hi0bits+0x32>
   1b7be:	3001      	adds	r0, #1
   1b7c0:	005b      	lsls	r3, r3, #1
   1b7c2:	d400      	bmi.n	1b7c6 <__hi0bits+0x32>
   1b7c4:	2020      	movs	r0, #32
   1b7c6:	4770      	bx	lr

0001b7c8 <__lo0bits>:
   1b7c8:	6803      	ldr	r3, [r0, #0]
   1b7ca:	075a      	lsls	r2, r3, #29
   1b7cc:	d009      	beq.n	1b7e2 <__lo0bits+0x1a>
   1b7ce:	2200      	movs	r2, #0
   1b7d0:	07d9      	lsls	r1, r3, #31
   1b7d2:	d404      	bmi.n	1b7de <__lo0bits+0x16>
   1b7d4:	079a      	lsls	r2, r3, #30
   1b7d6:	d420      	bmi.n	1b81a <__lo0bits+0x52>
   1b7d8:	2202      	movs	r2, #2
   1b7da:	089b      	lsrs	r3, r3, #2
   1b7dc:	6003      	str	r3, [r0, #0]
   1b7de:	0010      	movs	r0, r2
   1b7e0:	4770      	bx	lr
   1b7e2:	0419      	lsls	r1, r3, #16
   1b7e4:	2200      	movs	r2, #0
   1b7e6:	2900      	cmp	r1, #0
   1b7e8:	d101      	bne.n	1b7ee <__lo0bits+0x26>
   1b7ea:	0c1b      	lsrs	r3, r3, #16
   1b7ec:	3210      	adds	r2, #16
   1b7ee:	21ff      	movs	r1, #255	; 0xff
   1b7f0:	4219      	tst	r1, r3
   1b7f2:	d101      	bne.n	1b7f8 <__lo0bits+0x30>
   1b7f4:	3208      	adds	r2, #8
   1b7f6:	0a1b      	lsrs	r3, r3, #8
   1b7f8:	0719      	lsls	r1, r3, #28
   1b7fa:	d101      	bne.n	1b800 <__lo0bits+0x38>
   1b7fc:	3204      	adds	r2, #4
   1b7fe:	091b      	lsrs	r3, r3, #4
   1b800:	0799      	lsls	r1, r3, #30
   1b802:	d101      	bne.n	1b808 <__lo0bits+0x40>
   1b804:	3202      	adds	r2, #2
   1b806:	089b      	lsrs	r3, r3, #2
   1b808:	07d9      	lsls	r1, r3, #31
   1b80a:	d404      	bmi.n	1b816 <__lo0bits+0x4e>
   1b80c:	085b      	lsrs	r3, r3, #1
   1b80e:	d101      	bne.n	1b814 <__lo0bits+0x4c>
   1b810:	2220      	movs	r2, #32
   1b812:	e7e4      	b.n	1b7de <__lo0bits+0x16>
   1b814:	3201      	adds	r2, #1
   1b816:	6003      	str	r3, [r0, #0]
   1b818:	e7e1      	b.n	1b7de <__lo0bits+0x16>
   1b81a:	085b      	lsrs	r3, r3, #1
   1b81c:	6003      	str	r3, [r0, #0]
   1b81e:	2201      	movs	r2, #1
   1b820:	e7dd      	b.n	1b7de <__lo0bits+0x16>
   1b822:	46c0      	nop			; (mov r8, r8)

0001b824 <__i2b>:
   1b824:	b510      	push	{r4, lr}
   1b826:	000c      	movs	r4, r1
   1b828:	2101      	movs	r1, #1
   1b82a:	f7ff ff3b 	bl	1b6a4 <_Balloc>
   1b82e:	2301      	movs	r3, #1
   1b830:	6144      	str	r4, [r0, #20]
   1b832:	6103      	str	r3, [r0, #16]
   1b834:	bd10      	pop	{r4, pc}
   1b836:	46c0      	nop			; (mov r8, r8)

0001b838 <__multiply>:
   1b838:	b5f0      	push	{r4, r5, r6, r7, lr}
   1b83a:	4657      	mov	r7, sl
   1b83c:	464e      	mov	r6, r9
   1b83e:	4645      	mov	r5, r8
   1b840:	46de      	mov	lr, fp
   1b842:	b5e0      	push	{r5, r6, r7, lr}
   1b844:	6914      	ldr	r4, [r2, #16]
   1b846:	690e      	ldr	r6, [r1, #16]
   1b848:	b085      	sub	sp, #20
   1b84a:	000f      	movs	r7, r1
   1b84c:	0015      	movs	r5, r2
   1b84e:	42a6      	cmp	r6, r4
   1b850:	da04      	bge.n	1b85c <__multiply+0x24>
   1b852:	0033      	movs	r3, r6
   1b854:	0017      	movs	r7, r2
   1b856:	0026      	movs	r6, r4
   1b858:	000d      	movs	r5, r1
   1b85a:	001c      	movs	r4, r3
   1b85c:	1933      	adds	r3, r6, r4
   1b85e:	4698      	mov	r8, r3
   1b860:	68bb      	ldr	r3, [r7, #8]
   1b862:	6879      	ldr	r1, [r7, #4]
   1b864:	4598      	cmp	r8, r3
   1b866:	dd00      	ble.n	1b86a <__multiply+0x32>
   1b868:	3101      	adds	r1, #1
   1b86a:	f7ff ff1b 	bl	1b6a4 <_Balloc>
   1b86e:	2214      	movs	r2, #20
   1b870:	0003      	movs	r3, r0
   1b872:	4694      	mov	ip, r2
   1b874:	4463      	add	r3, ip
   1b876:	469b      	mov	fp, r3
   1b878:	4643      	mov	r3, r8
   1b87a:	009b      	lsls	r3, r3, #2
   1b87c:	445b      	add	r3, fp
   1b87e:	0019      	movs	r1, r3
   1b880:	9302      	str	r3, [sp, #8]
   1b882:	9003      	str	r0, [sp, #12]
   1b884:	465b      	mov	r3, fp
   1b886:	2200      	movs	r2, #0
   1b888:	458b      	cmp	fp, r1
   1b88a:	d203      	bcs.n	1b894 <__multiply+0x5c>
   1b88c:	9902      	ldr	r1, [sp, #8]
   1b88e:	c304      	stmia	r3!, {r2}
   1b890:	4299      	cmp	r1, r3
   1b892:	d8fc      	bhi.n	1b88e <__multiply+0x56>
   1b894:	2314      	movs	r3, #20
   1b896:	00a4      	lsls	r4, r4, #2
   1b898:	469a      	mov	sl, r3
   1b89a:	3714      	adds	r7, #20
   1b89c:	0023      	movs	r3, r4
   1b89e:	46bc      	mov	ip, r7
   1b8a0:	44aa      	add	sl, r5
   1b8a2:	00b6      	lsls	r6, r6, #2
   1b8a4:	4453      	add	r3, sl
   1b8a6:	9700      	str	r7, [sp, #0]
   1b8a8:	44b4      	add	ip, r6
   1b8aa:	9301      	str	r3, [sp, #4]
   1b8ac:	459a      	cmp	sl, r3
   1b8ae:	d24f      	bcs.n	1b950 <__multiply+0x118>
   1b8b0:	4653      	mov	r3, sl
   1b8b2:	681b      	ldr	r3, [r3, #0]
   1b8b4:	041e      	lsls	r6, r3, #16
   1b8b6:	0c36      	lsrs	r6, r6, #16
   1b8b8:	d020      	beq.n	1b8fc <__multiply+0xc4>
   1b8ba:	465c      	mov	r4, fp
   1b8bc:	2700      	movs	r7, #0
   1b8be:	9d00      	ldr	r5, [sp, #0]
   1b8c0:	0021      	movs	r1, r4
   1b8c2:	cc08      	ldmia	r4!, {r3}
   1b8c4:	cd04      	ldmia	r5!, {r2}
   1b8c6:	4699      	mov	r9, r3
   1b8c8:	4648      	mov	r0, r9
   1b8ca:	0413      	lsls	r3, r2, #16
   1b8cc:	0c1b      	lsrs	r3, r3, #16
   1b8ce:	4373      	muls	r3, r6
   1b8d0:	0400      	lsls	r0, r0, #16
   1b8d2:	0c00      	lsrs	r0, r0, #16
   1b8d4:	181b      	adds	r3, r3, r0
   1b8d6:	19d8      	adds	r0, r3, r7
   1b8d8:	0c13      	lsrs	r3, r2, #16
   1b8da:	464a      	mov	r2, r9
   1b8dc:	4373      	muls	r3, r6
   1b8de:	0c12      	lsrs	r2, r2, #16
   1b8e0:	189b      	adds	r3, r3, r2
   1b8e2:	0c02      	lsrs	r2, r0, #16
   1b8e4:	189b      	adds	r3, r3, r2
   1b8e6:	0402      	lsls	r2, r0, #16
   1b8e8:	0c1f      	lsrs	r7, r3, #16
   1b8ea:	0c12      	lsrs	r2, r2, #16
   1b8ec:	041b      	lsls	r3, r3, #16
   1b8ee:	4313      	orrs	r3, r2
   1b8f0:	600b      	str	r3, [r1, #0]
   1b8f2:	45ac      	cmp	ip, r5
   1b8f4:	d8e4      	bhi.n	1b8c0 <__multiply+0x88>
   1b8f6:	4653      	mov	r3, sl
   1b8f8:	6027      	str	r7, [r4, #0]
   1b8fa:	681b      	ldr	r3, [r3, #0]
   1b8fc:	0c1e      	lsrs	r6, r3, #16
   1b8fe:	d020      	beq.n	1b942 <__multiply+0x10a>
   1b900:	465b      	mov	r3, fp
   1b902:	2100      	movs	r1, #0
   1b904:	681b      	ldr	r3, [r3, #0]
   1b906:	465c      	mov	r4, fp
   1b908:	0018      	movs	r0, r3
   1b90a:	000f      	movs	r7, r1
   1b90c:	4662      	mov	r2, ip
   1b90e:	9d00      	ldr	r5, [sp, #0]
   1b910:	8829      	ldrh	r1, [r5, #0]
   1b912:	0c00      	lsrs	r0, r0, #16
   1b914:	4371      	muls	r1, r6
   1b916:	1809      	adds	r1, r1, r0
   1b918:	19c9      	adds	r1, r1, r7
   1b91a:	041b      	lsls	r3, r3, #16
   1b91c:	0408      	lsls	r0, r1, #16
   1b91e:	0c1b      	lsrs	r3, r3, #16
   1b920:	4303      	orrs	r3, r0
   1b922:	6023      	str	r3, [r4, #0]
   1b924:	cd08      	ldmia	r5!, {r3}
   1b926:	6860      	ldr	r0, [r4, #4]
   1b928:	0c1b      	lsrs	r3, r3, #16
   1b92a:	4373      	muls	r3, r6
   1b92c:	0407      	lsls	r7, r0, #16
   1b92e:	0c3f      	lsrs	r7, r7, #16
   1b930:	19db      	adds	r3, r3, r7
   1b932:	0c09      	lsrs	r1, r1, #16
   1b934:	185b      	adds	r3, r3, r1
   1b936:	0c1f      	lsrs	r7, r3, #16
   1b938:	3404      	adds	r4, #4
   1b93a:	42aa      	cmp	r2, r5
   1b93c:	d8e8      	bhi.n	1b910 <__multiply+0xd8>
   1b93e:	4694      	mov	ip, r2
   1b940:	6023      	str	r3, [r4, #0]
   1b942:	2304      	movs	r3, #4
   1b944:	4699      	mov	r9, r3
   1b946:	9b01      	ldr	r3, [sp, #4]
   1b948:	44ca      	add	sl, r9
   1b94a:	44cb      	add	fp, r9
   1b94c:	4553      	cmp	r3, sl
   1b94e:	d8af      	bhi.n	1b8b0 <__multiply+0x78>
   1b950:	4643      	mov	r3, r8
   1b952:	2b00      	cmp	r3, #0
   1b954:	dd0e      	ble.n	1b974 <__multiply+0x13c>
   1b956:	9b02      	ldr	r3, [sp, #8]
   1b958:	3b04      	subs	r3, #4
   1b95a:	681a      	ldr	r2, [r3, #0]
   1b95c:	2a00      	cmp	r2, #0
   1b95e:	d109      	bne.n	1b974 <__multiply+0x13c>
   1b960:	4642      	mov	r2, r8
   1b962:	e003      	b.n	1b96c <__multiply+0x134>
   1b964:	3b04      	subs	r3, #4
   1b966:	6819      	ldr	r1, [r3, #0]
   1b968:	2900      	cmp	r1, #0
   1b96a:	d102      	bne.n	1b972 <__multiply+0x13a>
   1b96c:	3a01      	subs	r2, #1
   1b96e:	2a00      	cmp	r2, #0
   1b970:	d1f8      	bne.n	1b964 <__multiply+0x12c>
   1b972:	4690      	mov	r8, r2
   1b974:	9b03      	ldr	r3, [sp, #12]
   1b976:	4642      	mov	r2, r8
   1b978:	0018      	movs	r0, r3
   1b97a:	611a      	str	r2, [r3, #16]
   1b97c:	b005      	add	sp, #20
   1b97e:	bc3c      	pop	{r2, r3, r4, r5}
   1b980:	4690      	mov	r8, r2
   1b982:	4699      	mov	r9, r3
   1b984:	46a2      	mov	sl, r4
   1b986:	46ab      	mov	fp, r5
   1b988:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1b98a:	46c0      	nop			; (mov r8, r8)

0001b98c <__pow5mult>:
   1b98c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1b98e:	4647      	mov	r7, r8
   1b990:	46ce      	mov	lr, r9
   1b992:	2303      	movs	r3, #3
   1b994:	b580      	push	{r7, lr}
   1b996:	4680      	mov	r8, r0
   1b998:	000f      	movs	r7, r1
   1b99a:	0014      	movs	r4, r2
   1b99c:	4013      	ands	r3, r2
   1b99e:	d13a      	bne.n	1ba16 <__pow5mult+0x8a>
   1b9a0:	10a4      	asrs	r4, r4, #2
   1b9a2:	003e      	movs	r6, r7
   1b9a4:	2c00      	cmp	r4, #0
   1b9a6:	d025      	beq.n	1b9f4 <__pow5mult+0x68>
   1b9a8:	4643      	mov	r3, r8
   1b9aa:	6c9d      	ldr	r5, [r3, #72]	; 0x48
   1b9ac:	2d00      	cmp	r5, #0
   1b9ae:	d03b      	beq.n	1ba28 <__pow5mult+0x9c>
   1b9b0:	003e      	movs	r6, r7
   1b9b2:	2300      	movs	r3, #0
   1b9b4:	2701      	movs	r7, #1
   1b9b6:	4699      	mov	r9, r3
   1b9b8:	4227      	tst	r7, r4
   1b9ba:	d107      	bne.n	1b9cc <__pow5mult+0x40>
   1b9bc:	1064      	asrs	r4, r4, #1
   1b9be:	d019      	beq.n	1b9f4 <__pow5mult+0x68>
   1b9c0:	6828      	ldr	r0, [r5, #0]
   1b9c2:	2800      	cmp	r0, #0
   1b9c4:	d01b      	beq.n	1b9fe <__pow5mult+0x72>
   1b9c6:	0005      	movs	r5, r0
   1b9c8:	4227      	tst	r7, r4
   1b9ca:	d0f7      	beq.n	1b9bc <__pow5mult+0x30>
   1b9cc:	002a      	movs	r2, r5
   1b9ce:	0031      	movs	r1, r6
   1b9d0:	4640      	mov	r0, r8
   1b9d2:	f7ff ff31 	bl	1b838 <__multiply>
   1b9d6:	2e00      	cmp	r6, #0
   1b9d8:	d01b      	beq.n	1ba12 <__pow5mult+0x86>
   1b9da:	4642      	mov	r2, r8
   1b9dc:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
   1b9de:	6873      	ldr	r3, [r6, #4]
   1b9e0:	4694      	mov	ip, r2
   1b9e2:	009b      	lsls	r3, r3, #2
   1b9e4:	4463      	add	r3, ip
   1b9e6:	681a      	ldr	r2, [r3, #0]
   1b9e8:	1064      	asrs	r4, r4, #1
   1b9ea:	6032      	str	r2, [r6, #0]
   1b9ec:	601e      	str	r6, [r3, #0]
   1b9ee:	0006      	movs	r6, r0
   1b9f0:	2c00      	cmp	r4, #0
   1b9f2:	d1e5      	bne.n	1b9c0 <__pow5mult+0x34>
   1b9f4:	0030      	movs	r0, r6
   1b9f6:	bc0c      	pop	{r2, r3}
   1b9f8:	4690      	mov	r8, r2
   1b9fa:	4699      	mov	r9, r3
   1b9fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1b9fe:	002a      	movs	r2, r5
   1ba00:	0029      	movs	r1, r5
   1ba02:	4640      	mov	r0, r8
   1ba04:	f7ff ff18 	bl	1b838 <__multiply>
   1ba08:	464b      	mov	r3, r9
   1ba0a:	6028      	str	r0, [r5, #0]
   1ba0c:	6003      	str	r3, [r0, #0]
   1ba0e:	0005      	movs	r5, r0
   1ba10:	e7da      	b.n	1b9c8 <__pow5mult+0x3c>
   1ba12:	0006      	movs	r6, r0
   1ba14:	e7d2      	b.n	1b9bc <__pow5mult+0x30>
   1ba16:	4a0b      	ldr	r2, [pc, #44]	; (1ba44 <__pow5mult+0xb8>)
   1ba18:	3b01      	subs	r3, #1
   1ba1a:	009b      	lsls	r3, r3, #2
   1ba1c:	589a      	ldr	r2, [r3, r2]
   1ba1e:	2300      	movs	r3, #0
   1ba20:	f7ff fe72 	bl	1b708 <__multadd>
   1ba24:	0007      	movs	r7, r0
   1ba26:	e7bb      	b.n	1b9a0 <__pow5mult+0x14>
   1ba28:	2101      	movs	r1, #1
   1ba2a:	4640      	mov	r0, r8
   1ba2c:	f7ff fe3a 	bl	1b6a4 <_Balloc>
   1ba30:	4b05      	ldr	r3, [pc, #20]	; (1ba48 <__pow5mult+0xbc>)
   1ba32:	0005      	movs	r5, r0
   1ba34:	6143      	str	r3, [r0, #20]
   1ba36:	2301      	movs	r3, #1
   1ba38:	6103      	str	r3, [r0, #16]
   1ba3a:	4643      	mov	r3, r8
   1ba3c:	6498      	str	r0, [r3, #72]	; 0x48
   1ba3e:	2300      	movs	r3, #0
   1ba40:	6003      	str	r3, [r0, #0]
   1ba42:	e7b5      	b.n	1b9b0 <__pow5mult+0x24>
   1ba44:	0001e468 	.word	0x0001e468
   1ba48:	00000271 	.word	0x00000271

0001ba4c <__lshift>:
   1ba4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1ba4e:	464e      	mov	r6, r9
   1ba50:	4645      	mov	r5, r8
   1ba52:	46de      	mov	lr, fp
   1ba54:	4657      	mov	r7, sl
   1ba56:	b5e0      	push	{r5, r6, r7, lr}
   1ba58:	000e      	movs	r6, r1
   1ba5a:	6933      	ldr	r3, [r6, #16]
   1ba5c:	1154      	asrs	r4, r2, #5
   1ba5e:	4698      	mov	r8, r3
   1ba60:	44a0      	add	r8, r4
   1ba62:	4643      	mov	r3, r8
   1ba64:	1c5d      	adds	r5, r3, #1
   1ba66:	68b3      	ldr	r3, [r6, #8]
   1ba68:	4683      	mov	fp, r0
   1ba6a:	4691      	mov	r9, r2
   1ba6c:	6849      	ldr	r1, [r1, #4]
   1ba6e:	429d      	cmp	r5, r3
   1ba70:	dd03      	ble.n	1ba7a <__lshift+0x2e>
   1ba72:	3101      	adds	r1, #1
   1ba74:	005b      	lsls	r3, r3, #1
   1ba76:	429d      	cmp	r5, r3
   1ba78:	dcfb      	bgt.n	1ba72 <__lshift+0x26>
   1ba7a:	4658      	mov	r0, fp
   1ba7c:	f7ff fe12 	bl	1b6a4 <_Balloc>
   1ba80:	0003      	movs	r3, r0
   1ba82:	4684      	mov	ip, r0
   1ba84:	3314      	adds	r3, #20
   1ba86:	2c00      	cmp	r4, #0
   1ba88:	dd06      	ble.n	1ba98 <__lshift+0x4c>
   1ba8a:	2100      	movs	r1, #0
   1ba8c:	00a4      	lsls	r4, r4, #2
   1ba8e:	001a      	movs	r2, r3
   1ba90:	191b      	adds	r3, r3, r4
   1ba92:	c202      	stmia	r2!, {r1}
   1ba94:	4293      	cmp	r3, r2
   1ba96:	d1fc      	bne.n	1ba92 <__lshift+0x46>
   1ba98:	6932      	ldr	r2, [r6, #16]
   1ba9a:	4648      	mov	r0, r9
   1ba9c:	0097      	lsls	r7, r2, #2
   1ba9e:	0031      	movs	r1, r6
   1baa0:	221f      	movs	r2, #31
   1baa2:	3114      	adds	r1, #20
   1baa4:	4010      	ands	r0, r2
   1baa6:	19cf      	adds	r7, r1, r7
   1baa8:	4681      	mov	r9, r0
   1baaa:	2800      	cmp	r0, #0
   1baac:	d025      	beq.n	1bafa <__lshift+0xae>
   1baae:	2220      	movs	r2, #32
   1bab0:	1a12      	subs	r2, r2, r0
   1bab2:	4692      	mov	sl, r2
   1bab4:	2200      	movs	r2, #0
   1bab6:	4648      	mov	r0, r9
   1bab8:	680c      	ldr	r4, [r1, #0]
   1baba:	4084      	lsls	r4, r0
   1babc:	4650      	mov	r0, sl
   1babe:	4314      	orrs	r4, r2
   1bac0:	601c      	str	r4, [r3, #0]
   1bac2:	c904      	ldmia	r1!, {r2}
   1bac4:	3304      	adds	r3, #4
   1bac6:	40c2      	lsrs	r2, r0
   1bac8:	428f      	cmp	r7, r1
   1baca:	d8f4      	bhi.n	1bab6 <__lshift+0x6a>
   1bacc:	601a      	str	r2, [r3, #0]
   1bace:	2a00      	cmp	r2, #0
   1bad0:	d001      	beq.n	1bad6 <__lshift+0x8a>
   1bad2:	4645      	mov	r5, r8
   1bad4:	3502      	adds	r5, #2
   1bad6:	4663      	mov	r3, ip
   1bad8:	3d01      	subs	r5, #1
   1bada:	611d      	str	r5, [r3, #16]
   1badc:	6873      	ldr	r3, [r6, #4]
   1bade:	4660      	mov	r0, ip
   1bae0:	009a      	lsls	r2, r3, #2
   1bae2:	465b      	mov	r3, fp
   1bae4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
   1bae6:	189b      	adds	r3, r3, r2
   1bae8:	681a      	ldr	r2, [r3, #0]
   1baea:	6032      	str	r2, [r6, #0]
   1baec:	601e      	str	r6, [r3, #0]
   1baee:	bc3c      	pop	{r2, r3, r4, r5}
   1baf0:	4690      	mov	r8, r2
   1baf2:	4699      	mov	r9, r3
   1baf4:	46a2      	mov	sl, r4
   1baf6:	46ab      	mov	fp, r5
   1baf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1bafa:	c904      	ldmia	r1!, {r2}
   1bafc:	c304      	stmia	r3!, {r2}
   1bafe:	428f      	cmp	r7, r1
   1bb00:	d9e9      	bls.n	1bad6 <__lshift+0x8a>
   1bb02:	c904      	ldmia	r1!, {r2}
   1bb04:	c304      	stmia	r3!, {r2}
   1bb06:	428f      	cmp	r7, r1
   1bb08:	d8f7      	bhi.n	1bafa <__lshift+0xae>
   1bb0a:	e7e4      	b.n	1bad6 <__lshift+0x8a>

0001bb0c <__mcmp>:
   1bb0c:	690a      	ldr	r2, [r1, #16]
   1bb0e:	6903      	ldr	r3, [r0, #16]
   1bb10:	b530      	push	{r4, r5, lr}
   1bb12:	0005      	movs	r5, r0
   1bb14:	1a98      	subs	r0, r3, r2
   1bb16:	d111      	bne.n	1bb3c <__mcmp+0x30>
   1bb18:	0092      	lsls	r2, r2, #2
   1bb1a:	3514      	adds	r5, #20
   1bb1c:	3114      	adds	r1, #20
   1bb1e:	18ab      	adds	r3, r5, r2
   1bb20:	1889      	adds	r1, r1, r2
   1bb22:	e001      	b.n	1bb28 <__mcmp+0x1c>
   1bb24:	429d      	cmp	r5, r3
   1bb26:	d209      	bcs.n	1bb3c <__mcmp+0x30>
   1bb28:	3b04      	subs	r3, #4
   1bb2a:	3904      	subs	r1, #4
   1bb2c:	681c      	ldr	r4, [r3, #0]
   1bb2e:	680a      	ldr	r2, [r1, #0]
   1bb30:	4294      	cmp	r4, r2
   1bb32:	d0f7      	beq.n	1bb24 <__mcmp+0x18>
   1bb34:	4294      	cmp	r4, r2
   1bb36:	4180      	sbcs	r0, r0
   1bb38:	2201      	movs	r2, #1
   1bb3a:	4310      	orrs	r0, r2
   1bb3c:	bd30      	pop	{r4, r5, pc}
   1bb3e:	46c0      	nop			; (mov r8, r8)

0001bb40 <__mdiff>:
   1bb40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1bb42:	4645      	mov	r5, r8
   1bb44:	46de      	mov	lr, fp
   1bb46:	4657      	mov	r7, sl
   1bb48:	464e      	mov	r6, r9
   1bb4a:	0014      	movs	r4, r2
   1bb4c:	690b      	ldr	r3, [r1, #16]
   1bb4e:	6912      	ldr	r2, [r2, #16]
   1bb50:	b5e0      	push	{r5, r6, r7, lr}
   1bb52:	4688      	mov	r8, r1
   1bb54:	1a9d      	subs	r5, r3, r2
   1bb56:	d11a      	bne.n	1bb8e <__mdiff+0x4e>
   1bb58:	000f      	movs	r7, r1
   1bb5a:	2114      	movs	r1, #20
   1bb5c:	468c      	mov	ip, r1
   1bb5e:	0092      	lsls	r2, r2, #2
   1bb60:	3714      	adds	r7, #20
   1bb62:	44a4      	add	ip, r4
   1bb64:	18bb      	adds	r3, r7, r2
   1bb66:	4462      	add	r2, ip
   1bb68:	e002      	b.n	1bb70 <__mdiff+0x30>
   1bb6a:	429f      	cmp	r7, r3
   1bb6c:	d300      	bcc.n	1bb70 <__mdiff+0x30>
   1bb6e:	e070      	b.n	1bc52 <__mdiff+0x112>
   1bb70:	3b04      	subs	r3, #4
   1bb72:	3a04      	subs	r2, #4
   1bb74:	681e      	ldr	r6, [r3, #0]
   1bb76:	6811      	ldr	r1, [r2, #0]
   1bb78:	428e      	cmp	r6, r1
   1bb7a:	d0f6      	beq.n	1bb6a <__mdiff+0x2a>
   1bb7c:	d300      	bcc.n	1bb80 <__mdiff+0x40>
   1bb7e:	e071      	b.n	1bc64 <__mdiff+0x124>
   1bb80:	4643      	mov	r3, r8
   1bb82:	003e      	movs	r6, r7
   1bb84:	46a0      	mov	r8, r4
   1bb86:	4667      	mov	r7, ip
   1bb88:	001c      	movs	r4, r3
   1bb8a:	2501      	movs	r5, #1
   1bb8c:	e006      	b.n	1bb9c <__mdiff+0x5c>
   1bb8e:	2d00      	cmp	r5, #0
   1bb90:	db6a      	blt.n	1bc68 <__mdiff+0x128>
   1bb92:	4647      	mov	r7, r8
   1bb94:	0026      	movs	r6, r4
   1bb96:	2500      	movs	r5, #0
   1bb98:	3714      	adds	r7, #20
   1bb9a:	3614      	adds	r6, #20
   1bb9c:	4643      	mov	r3, r8
   1bb9e:	6859      	ldr	r1, [r3, #4]
   1bba0:	f7ff fd80 	bl	1b6a4 <_Balloc>
   1bba4:	4643      	mov	r3, r8
   1bba6:	4681      	mov	r9, r0
   1bba8:	60c5      	str	r5, [r0, #12]
   1bbaa:	6918      	ldr	r0, [r3, #16]
   1bbac:	464d      	mov	r5, r9
   1bbae:	0083      	lsls	r3, r0, #2
   1bbb0:	469c      	mov	ip, r3
   1bbb2:	6923      	ldr	r3, [r4, #16]
   1bbb4:	44bc      	add	ip, r7
   1bbb6:	009b      	lsls	r3, r3, #2
   1bbb8:	4698      	mov	r8, r3
   1bbba:	2300      	movs	r3, #0
   1bbbc:	44b0      	add	r8, r6
   1bbbe:	3514      	adds	r5, #20
   1bbc0:	469a      	mov	sl, r3
   1bbc2:	e000      	b.n	1bbc6 <__mdiff+0x86>
   1bbc4:	0027      	movs	r7, r4
   1bbc6:	ce04      	ldmia	r6!, {r2}
   1bbc8:	003c      	movs	r4, r7
   1bbca:	4693      	mov	fp, r2
   1bbcc:	4659      	mov	r1, fp
   1bbce:	cc08      	ldmia	r4!, {r3}
   1bbd0:	0409      	lsls	r1, r1, #16
   1bbd2:	041a      	lsls	r2, r3, #16
   1bbd4:	0c12      	lsrs	r2, r2, #16
   1bbd6:	4452      	add	r2, sl
   1bbd8:	0c09      	lsrs	r1, r1, #16
   1bbda:	1a52      	subs	r2, r2, r1
   1bbdc:	0c19      	lsrs	r1, r3, #16
   1bbde:	465b      	mov	r3, fp
   1bbe0:	0c1b      	lsrs	r3, r3, #16
   1bbe2:	1acb      	subs	r3, r1, r3
   1bbe4:	1411      	asrs	r1, r2, #16
   1bbe6:	185b      	adds	r3, r3, r1
   1bbe8:	0412      	lsls	r2, r2, #16
   1bbea:	1419      	asrs	r1, r3, #16
   1bbec:	0c12      	lsrs	r2, r2, #16
   1bbee:	041b      	lsls	r3, r3, #16
   1bbf0:	468a      	mov	sl, r1
   1bbf2:	4313      	orrs	r3, r2
   1bbf4:	1d29      	adds	r1, r5, #4
   1bbf6:	602b      	str	r3, [r5, #0]
   1bbf8:	000d      	movs	r5, r1
   1bbfa:	45b0      	cmp	r8, r6
   1bbfc:	d8e2      	bhi.n	1bbc4 <__mdiff+0x84>
   1bbfe:	45a4      	cmp	ip, r4
   1bc00:	d916      	bls.n	1bc30 <__mdiff+0xf0>
   1bc02:	cc08      	ldmia	r4!, {r3}
   1bc04:	041a      	lsls	r2, r3, #16
   1bc06:	0c12      	lsrs	r2, r2, #16
   1bc08:	4452      	add	r2, sl
   1bc0a:	1416      	asrs	r6, r2, #16
   1bc0c:	0c1b      	lsrs	r3, r3, #16
   1bc0e:	199b      	adds	r3, r3, r6
   1bc10:	0412      	lsls	r2, r2, #16
   1bc12:	141e      	asrs	r6, r3, #16
   1bc14:	0c12      	lsrs	r2, r2, #16
   1bc16:	041b      	lsls	r3, r3, #16
   1bc18:	4313      	orrs	r3, r2
   1bc1a:	46b2      	mov	sl, r6
   1bc1c:	c508      	stmia	r5!, {r3}
   1bc1e:	45a4      	cmp	ip, r4
   1bc20:	d8ef      	bhi.n	1bc02 <__mdiff+0xc2>
   1bc22:	4662      	mov	r2, ip
   1bc24:	2403      	movs	r4, #3
   1bc26:	1bd2      	subs	r2, r2, r7
   1bc28:	3a05      	subs	r2, #5
   1bc2a:	43a2      	bics	r2, r4
   1bc2c:	3204      	adds	r2, #4
   1bc2e:	1889      	adds	r1, r1, r2
   1bc30:	3904      	subs	r1, #4
   1bc32:	2b00      	cmp	r3, #0
   1bc34:	d104      	bne.n	1bc40 <__mdiff+0x100>
   1bc36:	3904      	subs	r1, #4
   1bc38:	680b      	ldr	r3, [r1, #0]
   1bc3a:	3801      	subs	r0, #1
   1bc3c:	2b00      	cmp	r3, #0
   1bc3e:	d0fa      	beq.n	1bc36 <__mdiff+0xf6>
   1bc40:	464b      	mov	r3, r9
   1bc42:	6118      	str	r0, [r3, #16]
   1bc44:	4648      	mov	r0, r9
   1bc46:	bc3c      	pop	{r2, r3, r4, r5}
   1bc48:	4690      	mov	r8, r2
   1bc4a:	4699      	mov	r9, r3
   1bc4c:	46a2      	mov	sl, r4
   1bc4e:	46ab      	mov	fp, r5
   1bc50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1bc52:	2100      	movs	r1, #0
   1bc54:	f7ff fd26 	bl	1b6a4 <_Balloc>
   1bc58:	2301      	movs	r3, #1
   1bc5a:	6103      	str	r3, [r0, #16]
   1bc5c:	2300      	movs	r3, #0
   1bc5e:	4681      	mov	r9, r0
   1bc60:	6143      	str	r3, [r0, #20]
   1bc62:	e7ef      	b.n	1bc44 <__mdiff+0x104>
   1bc64:	4666      	mov	r6, ip
   1bc66:	e799      	b.n	1bb9c <__mdiff+0x5c>
   1bc68:	0027      	movs	r7, r4
   1bc6a:	000e      	movs	r6, r1
   1bc6c:	46a0      	mov	r8, r4
   1bc6e:	3714      	adds	r7, #20
   1bc70:	3614      	adds	r6, #20
   1bc72:	000c      	movs	r4, r1
   1bc74:	2501      	movs	r5, #1
   1bc76:	e791      	b.n	1bb9c <__mdiff+0x5c>

0001bc78 <__d2b>:
   1bc78:	b5f0      	push	{r4, r5, r6, r7, lr}
   1bc7a:	2101      	movs	r1, #1
   1bc7c:	001c      	movs	r4, r3
   1bc7e:	b083      	sub	sp, #12
   1bc80:	9e08      	ldr	r6, [sp, #32]
   1bc82:	0015      	movs	r5, r2
   1bc84:	f7ff fd0e 	bl	1b6a4 <_Balloc>
   1bc88:	0323      	lsls	r3, r4, #12
   1bc8a:	0064      	lsls	r4, r4, #1
   1bc8c:	0007      	movs	r7, r0
   1bc8e:	0b1b      	lsrs	r3, r3, #12
   1bc90:	0d64      	lsrs	r4, r4, #21
   1bc92:	d002      	beq.n	1bc9a <__d2b+0x22>
   1bc94:	2280      	movs	r2, #128	; 0x80
   1bc96:	0352      	lsls	r2, r2, #13
   1bc98:	4313      	orrs	r3, r2
   1bc9a:	9301      	str	r3, [sp, #4]
   1bc9c:	2d00      	cmp	r5, #0
   1bc9e:	d019      	beq.n	1bcd4 <__d2b+0x5c>
   1bca0:	4668      	mov	r0, sp
   1bca2:	9500      	str	r5, [sp, #0]
   1bca4:	f7ff fd90 	bl	1b7c8 <__lo0bits>
   1bca8:	2800      	cmp	r0, #0
   1bcaa:	d130      	bne.n	1bd0e <__d2b+0x96>
   1bcac:	9b00      	ldr	r3, [sp, #0]
   1bcae:	617b      	str	r3, [r7, #20]
   1bcb0:	9b01      	ldr	r3, [sp, #4]
   1bcb2:	61bb      	str	r3, [r7, #24]
   1bcb4:	1e5a      	subs	r2, r3, #1
   1bcb6:	4193      	sbcs	r3, r2
   1bcb8:	1c5d      	adds	r5, r3, #1
   1bcba:	613d      	str	r5, [r7, #16]
   1bcbc:	2c00      	cmp	r4, #0
   1bcbe:	d014      	beq.n	1bcea <__d2b+0x72>
   1bcc0:	4b19      	ldr	r3, [pc, #100]	; (1bd28 <__d2b+0xb0>)
   1bcc2:	469c      	mov	ip, r3
   1bcc4:	2335      	movs	r3, #53	; 0x35
   1bcc6:	4464      	add	r4, ip
   1bcc8:	1824      	adds	r4, r4, r0
   1bcca:	1a18      	subs	r0, r3, r0
   1bccc:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1bcce:	6034      	str	r4, [r6, #0]
   1bcd0:	6018      	str	r0, [r3, #0]
   1bcd2:	e019      	b.n	1bd08 <__d2b+0x90>
   1bcd4:	a801      	add	r0, sp, #4
   1bcd6:	f7ff fd77 	bl	1b7c8 <__lo0bits>
   1bcda:	9b01      	ldr	r3, [sp, #4]
   1bcdc:	3020      	adds	r0, #32
   1bcde:	617b      	str	r3, [r7, #20]
   1bce0:	2301      	movs	r3, #1
   1bce2:	2501      	movs	r5, #1
   1bce4:	613b      	str	r3, [r7, #16]
   1bce6:	2c00      	cmp	r4, #0
   1bce8:	d1ea      	bne.n	1bcc0 <__d2b+0x48>
   1bcea:	4b10      	ldr	r3, [pc, #64]	; (1bd2c <__d2b+0xb4>)
   1bcec:	469c      	mov	ip, r3
   1bcee:	4b10      	ldr	r3, [pc, #64]	; (1bd30 <__d2b+0xb8>)
   1bcf0:	4460      	add	r0, ip
   1bcf2:	18eb      	adds	r3, r5, r3
   1bcf4:	009b      	lsls	r3, r3, #2
   1bcf6:	18fb      	adds	r3, r7, r3
   1bcf8:	6030      	str	r0, [r6, #0]
   1bcfa:	6958      	ldr	r0, [r3, #20]
   1bcfc:	f7ff fd4a 	bl	1b794 <__hi0bits>
   1bd00:	016b      	lsls	r3, r5, #5
   1bd02:	1a18      	subs	r0, r3, r0
   1bd04:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1bd06:	6018      	str	r0, [r3, #0]
   1bd08:	0038      	movs	r0, r7
   1bd0a:	b003      	add	sp, #12
   1bd0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1bd0e:	9b01      	ldr	r3, [sp, #4]
   1bd10:	2220      	movs	r2, #32
   1bd12:	0019      	movs	r1, r3
   1bd14:	1a12      	subs	r2, r2, r0
   1bd16:	4091      	lsls	r1, r2
   1bd18:	000a      	movs	r2, r1
   1bd1a:	40c3      	lsrs	r3, r0
   1bd1c:	9900      	ldr	r1, [sp, #0]
   1bd1e:	9301      	str	r3, [sp, #4]
   1bd20:	430a      	orrs	r2, r1
   1bd22:	617a      	str	r2, [r7, #20]
   1bd24:	e7c5      	b.n	1bcb2 <__d2b+0x3a>
   1bd26:	46c0      	nop			; (mov r8, r8)
   1bd28:	fffffbcd 	.word	0xfffffbcd
   1bd2c:	fffffbce 	.word	0xfffffbce
   1bd30:	3fffffff 	.word	0x3fffffff

0001bd34 <_putc_r>:
   1bd34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1bd36:	0006      	movs	r6, r0
   1bd38:	000f      	movs	r7, r1
   1bd3a:	0014      	movs	r4, r2
   1bd3c:	2800      	cmp	r0, #0
   1bd3e:	d002      	beq.n	1bd46 <_putc_r+0x12>
   1bd40:	6b83      	ldr	r3, [r0, #56]	; 0x38
   1bd42:	2b00      	cmp	r3, #0
   1bd44:	d029      	beq.n	1bd9a <_putc_r+0x66>
   1bd46:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1bd48:	07db      	lsls	r3, r3, #31
   1bd4a:	d402      	bmi.n	1bd52 <_putc_r+0x1e>
   1bd4c:	89a3      	ldrh	r3, [r4, #12]
   1bd4e:	059b      	lsls	r3, r3, #22
   1bd50:	d526      	bpl.n	1bda0 <_putc_r+0x6c>
   1bd52:	68a3      	ldr	r3, [r4, #8]
   1bd54:	3b01      	subs	r3, #1
   1bd56:	60a3      	str	r3, [r4, #8]
   1bd58:	2b00      	cmp	r3, #0
   1bd5a:	db11      	blt.n	1bd80 <_putc_r+0x4c>
   1bd5c:	25ff      	movs	r5, #255	; 0xff
   1bd5e:	6823      	ldr	r3, [r4, #0]
   1bd60:	403d      	ands	r5, r7
   1bd62:	1c5a      	adds	r2, r3, #1
   1bd64:	6022      	str	r2, [r4, #0]
   1bd66:	701f      	strb	r7, [r3, #0]
   1bd68:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1bd6a:	07db      	lsls	r3, r3, #31
   1bd6c:	d402      	bmi.n	1bd74 <_putc_r+0x40>
   1bd6e:	89a3      	ldrh	r3, [r4, #12]
   1bd70:	059b      	lsls	r3, r3, #22
   1bd72:	d501      	bpl.n	1bd78 <_putc_r+0x44>
   1bd74:	0028      	movs	r0, r5
   1bd76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1bd78:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1bd7a:	f7ff f8a5 	bl	1aec8 <__retarget_lock_release_recursive>
   1bd7e:	e7f9      	b.n	1bd74 <_putc_r+0x40>
   1bd80:	69a2      	ldr	r2, [r4, #24]
   1bd82:	4293      	cmp	r3, r2
   1bd84:	db02      	blt.n	1bd8c <_putc_r+0x58>
   1bd86:	b2fb      	uxtb	r3, r7
   1bd88:	2b0a      	cmp	r3, #10
   1bd8a:	d1e7      	bne.n	1bd5c <_putc_r+0x28>
   1bd8c:	0022      	movs	r2, r4
   1bd8e:	0039      	movs	r1, r7
   1bd90:	0030      	movs	r0, r6
   1bd92:	f000 fa73 	bl	1c27c <__swbuf_r>
   1bd96:	0005      	movs	r5, r0
   1bd98:	e7e6      	b.n	1bd68 <_putc_r+0x34>
   1bd9a:	f7fe fd3d 	bl	1a818 <__sinit>
   1bd9e:	e7d2      	b.n	1bd46 <_putc_r+0x12>
   1bda0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1bda2:	f7ff f88f 	bl	1aec4 <__retarget_lock_acquire_recursive>
   1bda6:	e7d4      	b.n	1bd52 <_putc_r+0x1e>

0001bda8 <_realloc_r>:
   1bda8:	b5f0      	push	{r4, r5, r6, r7, lr}
   1bdaa:	464e      	mov	r6, r9
   1bdac:	4645      	mov	r5, r8
   1bdae:	46de      	mov	lr, fp
   1bdb0:	4657      	mov	r7, sl
   1bdb2:	b5e0      	push	{r5, r6, r7, lr}
   1bdb4:	b085      	sub	sp, #20
   1bdb6:	9001      	str	r0, [sp, #4]
   1bdb8:	000e      	movs	r6, r1
   1bdba:	0015      	movs	r5, r2
   1bdbc:	2900      	cmp	r1, #0
   1bdbe:	d100      	bne.n	1bdc2 <_realloc_r+0x1a>
   1bdc0:	e09e      	b.n	1bf00 <_realloc_r+0x158>
   1bdc2:	0037      	movs	r7, r6
   1bdc4:	9801      	ldr	r0, [sp, #4]
   1bdc6:	3f08      	subs	r7, #8
   1bdc8:	f7ff fc5c 	bl	1b684 <__malloc_lock>
   1bdcc:	687a      	ldr	r2, [r7, #4]
   1bdce:	2303      	movs	r3, #3
   1bdd0:	0014      	movs	r4, r2
   1bdd2:	439c      	bics	r4, r3
   1bdd4:	002b      	movs	r3, r5
   1bdd6:	330b      	adds	r3, #11
   1bdd8:	46b9      	mov	r9, r7
   1bdda:	2b16      	cmp	r3, #22
   1bddc:	d847      	bhi.n	1be6e <_realloc_r+0xc6>
   1bdde:	2110      	movs	r1, #16
   1bde0:	2310      	movs	r3, #16
   1bde2:	4688      	mov	r8, r1
   1bde4:	4545      	cmp	r5, r8
   1bde6:	d846      	bhi.n	1be76 <_realloc_r+0xce>
   1bde8:	429c      	cmp	r4, r3
   1bdea:	da49      	bge.n	1be80 <_realloc_r+0xd8>
   1bdec:	49cc      	ldr	r1, [pc, #816]	; (1c120 <_realloc_r+0x378>)
   1bdee:	1938      	adds	r0, r7, r4
   1bdf0:	468b      	mov	fp, r1
   1bdf2:	6889      	ldr	r1, [r1, #8]
   1bdf4:	9002      	str	r0, [sp, #8]
   1bdf6:	4288      	cmp	r0, r1
   1bdf8:	d100      	bne.n	1bdfc <_realloc_r+0x54>
   1bdfa:	e0c2      	b.n	1bf82 <_realloc_r+0x1da>
   1bdfc:	2101      	movs	r1, #1
   1bdfe:	468a      	mov	sl, r1
   1be00:	6840      	ldr	r0, [r0, #4]
   1be02:	0001      	movs	r1, r0
   1be04:	9003      	str	r0, [sp, #12]
   1be06:	4650      	mov	r0, sl
   1be08:	4381      	bics	r1, r0
   1be0a:	468c      	mov	ip, r1
   1be0c:	9902      	ldr	r1, [sp, #8]
   1be0e:	468b      	mov	fp, r1
   1be10:	44dc      	add	ip, fp
   1be12:	4661      	mov	r1, ip
   1be14:	6849      	ldr	r1, [r1, #4]
   1be16:	4201      	tst	r1, r0
   1be18:	d04d      	beq.n	1beb6 <_realloc_r+0x10e>
   1be1a:	4210      	tst	r0, r2
   1be1c:	d100      	bne.n	1be20 <_realloc_r+0x78>
   1be1e:	e0a2      	b.n	1bf66 <_realloc_r+0x1be>
   1be20:	0029      	movs	r1, r5
   1be22:	9801      	ldr	r0, [sp, #4]
   1be24:	f7ff f8d4 	bl	1afd0 <_malloc_r>
   1be28:	1e05      	subs	r5, r0, #0
   1be2a:	d039      	beq.n	1bea0 <_realloc_r+0xf8>
   1be2c:	2301      	movs	r3, #1
   1be2e:	0002      	movs	r2, r0
   1be30:	6879      	ldr	r1, [r7, #4]
   1be32:	3a08      	subs	r2, #8
   1be34:	4399      	bics	r1, r3
   1be36:	187f      	adds	r7, r7, r1
   1be38:	42ba      	cmp	r2, r7
   1be3a:	d100      	bne.n	1be3e <_realloc_r+0x96>
   1be3c:	e12e      	b.n	1c09c <_realloc_r+0x2f4>
   1be3e:	1f22      	subs	r2, r4, #4
   1be40:	2a24      	cmp	r2, #36	; 0x24
   1be42:	d900      	bls.n	1be46 <_realloc_r+0x9e>
   1be44:	e114      	b.n	1c070 <_realloc_r+0x2c8>
   1be46:	2a13      	cmp	r2, #19
   1be48:	d900      	bls.n	1be4c <_realloc_r+0xa4>
   1be4a:	e0e8      	b.n	1c01e <_realloc_r+0x276>
   1be4c:	0003      	movs	r3, r0
   1be4e:	0032      	movs	r2, r6
   1be50:	6811      	ldr	r1, [r2, #0]
   1be52:	6019      	str	r1, [r3, #0]
   1be54:	6851      	ldr	r1, [r2, #4]
   1be56:	6059      	str	r1, [r3, #4]
   1be58:	6892      	ldr	r2, [r2, #8]
   1be5a:	609a      	str	r2, [r3, #8]
   1be5c:	9c01      	ldr	r4, [sp, #4]
   1be5e:	0031      	movs	r1, r6
   1be60:	0020      	movs	r0, r4
   1be62:	f7fe fd83 	bl	1a96c <_free_r>
   1be66:	0020      	movs	r0, r4
   1be68:	f7ff fc14 	bl	1b694 <__malloc_unlock>
   1be6c:	e01b      	b.n	1bea6 <_realloc_r+0xfe>
   1be6e:	2107      	movs	r1, #7
   1be70:	438b      	bics	r3, r1
   1be72:	4698      	mov	r8, r3
   1be74:	d5b6      	bpl.n	1bde4 <_realloc_r+0x3c>
   1be76:	230c      	movs	r3, #12
   1be78:	9a01      	ldr	r2, [sp, #4]
   1be7a:	2500      	movs	r5, #0
   1be7c:	6013      	str	r3, [r2, #0]
   1be7e:	e012      	b.n	1bea6 <_realloc_r+0xfe>
   1be80:	0035      	movs	r5, r6
   1be82:	4643      	mov	r3, r8
   1be84:	1ae3      	subs	r3, r4, r3
   1be86:	2b0f      	cmp	r3, #15
   1be88:	d825      	bhi.n	1bed6 <_realloc_r+0x12e>
   1be8a:	464b      	mov	r3, r9
   1be8c:	2201      	movs	r2, #1
   1be8e:	4649      	mov	r1, r9
   1be90:	685b      	ldr	r3, [r3, #4]
   1be92:	4013      	ands	r3, r2
   1be94:	4323      	orrs	r3, r4
   1be96:	604b      	str	r3, [r1, #4]
   1be98:	444c      	add	r4, r9
   1be9a:	6863      	ldr	r3, [r4, #4]
   1be9c:	431a      	orrs	r2, r3
   1be9e:	6062      	str	r2, [r4, #4]
   1bea0:	9801      	ldr	r0, [sp, #4]
   1bea2:	f7ff fbf7 	bl	1b694 <__malloc_unlock>
   1bea6:	0028      	movs	r0, r5
   1bea8:	b005      	add	sp, #20
   1beaa:	bc3c      	pop	{r2, r3, r4, r5}
   1beac:	4690      	mov	r8, r2
   1beae:	4699      	mov	r9, r3
   1beb0:	46a2      	mov	sl, r4
   1beb2:	46ab      	mov	fp, r5
   1beb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1beb6:	2103      	movs	r1, #3
   1beb8:	9803      	ldr	r0, [sp, #12]
   1beba:	468c      	mov	ip, r1
   1bebc:	4388      	bics	r0, r1
   1bebe:	1821      	adds	r1, r4, r0
   1bec0:	468b      	mov	fp, r1
   1bec2:	4299      	cmp	r1, r3
   1bec4:	db21      	blt.n	1bf0a <_realloc_r+0x162>
   1bec6:	9a02      	ldr	r2, [sp, #8]
   1bec8:	0035      	movs	r5, r6
   1beca:	68d3      	ldr	r3, [r2, #12]
   1becc:	6892      	ldr	r2, [r2, #8]
   1bece:	465c      	mov	r4, fp
   1bed0:	60d3      	str	r3, [r2, #12]
   1bed2:	609a      	str	r2, [r3, #8]
   1bed4:	e7d5      	b.n	1be82 <_realloc_r+0xda>
   1bed6:	464a      	mov	r2, r9
   1bed8:	2001      	movs	r0, #1
   1beda:	4646      	mov	r6, r8
   1bedc:	6852      	ldr	r2, [r2, #4]
   1bede:	4649      	mov	r1, r9
   1bee0:	4002      	ands	r2, r0
   1bee2:	4332      	orrs	r2, r6
   1bee4:	464e      	mov	r6, r9
   1bee6:	4441      	add	r1, r8
   1bee8:	4303      	orrs	r3, r0
   1beea:	6072      	str	r2, [r6, #4]
   1beec:	444c      	add	r4, r9
   1beee:	604b      	str	r3, [r1, #4]
   1bef0:	6863      	ldr	r3, [r4, #4]
   1bef2:	3108      	adds	r1, #8
   1bef4:	4318      	orrs	r0, r3
   1bef6:	6060      	str	r0, [r4, #4]
   1bef8:	9801      	ldr	r0, [sp, #4]
   1befa:	f7fe fd37 	bl	1a96c <_free_r>
   1befe:	e7cf      	b.n	1bea0 <_realloc_r+0xf8>
   1bf00:	0011      	movs	r1, r2
   1bf02:	f7ff f865 	bl	1afd0 <_malloc_r>
   1bf06:	0005      	movs	r5, r0
   1bf08:	e7cd      	b.n	1bea6 <_realloc_r+0xfe>
   1bf0a:	4651      	mov	r1, sl
   1bf0c:	4211      	tst	r1, r2
   1bf0e:	d000      	beq.n	1bf12 <_realloc_r+0x16a>
   1bf10:	e786      	b.n	1be20 <_realloc_r+0x78>
   1bf12:	4661      	mov	r1, ip
   1bf14:	683a      	ldr	r2, [r7, #0]
   1bf16:	1aba      	subs	r2, r7, r2
   1bf18:	4692      	mov	sl, r2
   1bf1a:	6852      	ldr	r2, [r2, #4]
   1bf1c:	438a      	bics	r2, r1
   1bf1e:	1880      	adds	r0, r0, r2
   1bf20:	4683      	mov	fp, r0
   1bf22:	44a3      	add	fp, r4
   1bf24:	459b      	cmp	fp, r3
   1bf26:	db26      	blt.n	1bf76 <_realloc_r+0x1ce>
   1bf28:	9a02      	ldr	r2, [sp, #8]
   1bf2a:	68d3      	ldr	r3, [r2, #12]
   1bf2c:	6892      	ldr	r2, [r2, #8]
   1bf2e:	60d3      	str	r3, [r2, #12]
   1bf30:	609a      	str	r2, [r3, #8]
   1bf32:	4653      	mov	r3, sl
   1bf34:	4652      	mov	r2, sl
   1bf36:	4655      	mov	r5, sl
   1bf38:	6892      	ldr	r2, [r2, #8]
   1bf3a:	68db      	ldr	r3, [r3, #12]
   1bf3c:	3508      	adds	r5, #8
   1bf3e:	60d3      	str	r3, [r2, #12]
   1bf40:	609a      	str	r2, [r3, #8]
   1bf42:	1f22      	subs	r2, r4, #4
   1bf44:	2a24      	cmp	r2, #36	; 0x24
   1bf46:	d900      	bls.n	1bf4a <_realloc_r+0x1a2>
   1bf48:	e096      	b.n	1c078 <_realloc_r+0x2d0>
   1bf4a:	2a13      	cmp	r2, #19
   1bf4c:	d972      	bls.n	1c034 <_realloc_r+0x28c>
   1bf4e:	4653      	mov	r3, sl
   1bf50:	6831      	ldr	r1, [r6, #0]
   1bf52:	6099      	str	r1, [r3, #8]
   1bf54:	6871      	ldr	r1, [r6, #4]
   1bf56:	60d9      	str	r1, [r3, #12]
   1bf58:	2a1b      	cmp	r2, #27
   1bf5a:	d900      	bls.n	1bf5e <_realloc_r+0x1b6>
   1bf5c:	e0a4      	b.n	1c0a8 <_realloc_r+0x300>
   1bf5e:	0032      	movs	r2, r6
   1bf60:	3310      	adds	r3, #16
   1bf62:	3208      	adds	r2, #8
   1bf64:	e068      	b.n	1c038 <_realloc_r+0x290>
   1bf66:	683a      	ldr	r2, [r7, #0]
   1bf68:	1aba      	subs	r2, r7, r2
   1bf6a:	4692      	mov	sl, r2
   1bf6c:	4651      	mov	r1, sl
   1bf6e:	2203      	movs	r2, #3
   1bf70:	6849      	ldr	r1, [r1, #4]
   1bf72:	4391      	bics	r1, r2
   1bf74:	000a      	movs	r2, r1
   1bf76:	4693      	mov	fp, r2
   1bf78:	44a3      	add	fp, r4
   1bf7a:	459b      	cmp	fp, r3
   1bf7c:	da00      	bge.n	1bf80 <_realloc_r+0x1d8>
   1bf7e:	e74f      	b.n	1be20 <_realloc_r+0x78>
   1bf80:	e7d7      	b.n	1bf32 <_realloc_r+0x18a>
   1bf82:	2003      	movs	r0, #3
   1bf84:	9902      	ldr	r1, [sp, #8]
   1bf86:	4684      	mov	ip, r0
   1bf88:	6849      	ldr	r1, [r1, #4]
   1bf8a:	4381      	bics	r1, r0
   1bf8c:	4640      	mov	r0, r8
   1bf8e:	1909      	adds	r1, r1, r4
   1bf90:	3010      	adds	r0, #16
   1bf92:	9002      	str	r0, [sp, #8]
   1bf94:	4281      	cmp	r1, r0
   1bf96:	da58      	bge.n	1c04a <_realloc_r+0x2a2>
   1bf98:	07d2      	lsls	r2, r2, #31
   1bf9a:	d500      	bpl.n	1bf9e <_realloc_r+0x1f6>
   1bf9c:	e740      	b.n	1be20 <_realloc_r+0x78>
   1bf9e:	4660      	mov	r0, ip
   1bfa0:	683a      	ldr	r2, [r7, #0]
   1bfa2:	1aba      	subs	r2, r7, r2
   1bfa4:	4692      	mov	sl, r2
   1bfa6:	6852      	ldr	r2, [r2, #4]
   1bfa8:	4382      	bics	r2, r0
   1bfaa:	9802      	ldr	r0, [sp, #8]
   1bfac:	1851      	adds	r1, r2, r1
   1bfae:	9103      	str	r1, [sp, #12]
   1bfb0:	4288      	cmp	r0, r1
   1bfb2:	dce0      	bgt.n	1bf76 <_realloc_r+0x1ce>
   1bfb4:	4653      	mov	r3, sl
   1bfb6:	4652      	mov	r2, sl
   1bfb8:	4655      	mov	r5, sl
   1bfba:	6892      	ldr	r2, [r2, #8]
   1bfbc:	68db      	ldr	r3, [r3, #12]
   1bfbe:	3508      	adds	r5, #8
   1bfc0:	60d3      	str	r3, [r2, #12]
   1bfc2:	609a      	str	r2, [r3, #8]
   1bfc4:	1f22      	subs	r2, r4, #4
   1bfc6:	2a24      	cmp	r2, #36	; 0x24
   1bfc8:	d900      	bls.n	1bfcc <_realloc_r+0x224>
   1bfca:	e08e      	b.n	1c0ea <_realloc_r+0x342>
   1bfcc:	2a13      	cmp	r2, #19
   1bfce:	d800      	bhi.n	1bfd2 <_realloc_r+0x22a>
   1bfd0:	e088      	b.n	1c0e4 <_realloc_r+0x33c>
   1bfd2:	4653      	mov	r3, sl
   1bfd4:	6831      	ldr	r1, [r6, #0]
   1bfd6:	6099      	str	r1, [r3, #8]
   1bfd8:	6871      	ldr	r1, [r6, #4]
   1bfda:	60d9      	str	r1, [r3, #12]
   1bfdc:	2a1b      	cmp	r2, #27
   1bfde:	d900      	bls.n	1bfe2 <_realloc_r+0x23a>
   1bfe0:	e088      	b.n	1c0f4 <_realloc_r+0x34c>
   1bfe2:	0032      	movs	r2, r6
   1bfe4:	3310      	adds	r3, #16
   1bfe6:	3208      	adds	r2, #8
   1bfe8:	6811      	ldr	r1, [r2, #0]
   1bfea:	6019      	str	r1, [r3, #0]
   1bfec:	6851      	ldr	r1, [r2, #4]
   1bfee:	6059      	str	r1, [r3, #4]
   1bff0:	6892      	ldr	r2, [r2, #8]
   1bff2:	609a      	str	r2, [r3, #8]
   1bff4:	4651      	mov	r1, sl
   1bff6:	465b      	mov	r3, fp
   1bff8:	4642      	mov	r2, r8
   1bffa:	4441      	add	r1, r8
   1bffc:	6099      	str	r1, [r3, #8]
   1bffe:	9b03      	ldr	r3, [sp, #12]
   1c000:	9801      	ldr	r0, [sp, #4]
   1c002:	1a9a      	subs	r2, r3, r2
   1c004:	2301      	movs	r3, #1
   1c006:	431a      	orrs	r2, r3
   1c008:	604a      	str	r2, [r1, #4]
   1c00a:	4652      	mov	r2, sl
   1c00c:	6852      	ldr	r2, [r2, #4]
   1c00e:	4013      	ands	r3, r2
   1c010:	4642      	mov	r2, r8
   1c012:	4313      	orrs	r3, r2
   1c014:	4652      	mov	r2, sl
   1c016:	6053      	str	r3, [r2, #4]
   1c018:	f7ff fb3c 	bl	1b694 <__malloc_unlock>
   1c01c:	e743      	b.n	1bea6 <_realloc_r+0xfe>
   1c01e:	6833      	ldr	r3, [r6, #0]
   1c020:	6003      	str	r3, [r0, #0]
   1c022:	6873      	ldr	r3, [r6, #4]
   1c024:	6043      	str	r3, [r0, #4]
   1c026:	2a1b      	cmp	r2, #27
   1c028:	d82d      	bhi.n	1c086 <_realloc_r+0x2de>
   1c02a:	0003      	movs	r3, r0
   1c02c:	0032      	movs	r2, r6
   1c02e:	3308      	adds	r3, #8
   1c030:	3208      	adds	r2, #8
   1c032:	e70d      	b.n	1be50 <_realloc_r+0xa8>
   1c034:	002b      	movs	r3, r5
   1c036:	0032      	movs	r2, r6
   1c038:	6811      	ldr	r1, [r2, #0]
   1c03a:	465c      	mov	r4, fp
   1c03c:	6019      	str	r1, [r3, #0]
   1c03e:	6851      	ldr	r1, [r2, #4]
   1c040:	46d1      	mov	r9, sl
   1c042:	6059      	str	r1, [r3, #4]
   1c044:	6892      	ldr	r2, [r2, #8]
   1c046:	609a      	str	r2, [r3, #8]
   1c048:	e71b      	b.n	1be82 <_realloc_r+0xda>
   1c04a:	4643      	mov	r3, r8
   1c04c:	18fa      	adds	r2, r7, r3
   1c04e:	465b      	mov	r3, fp
   1c050:	609a      	str	r2, [r3, #8]
   1c052:	4643      	mov	r3, r8
   1c054:	1ac9      	subs	r1, r1, r3
   1c056:	2301      	movs	r3, #1
   1c058:	4319      	orrs	r1, r3
   1c05a:	6051      	str	r1, [r2, #4]
   1c05c:	687a      	ldr	r2, [r7, #4]
   1c05e:	9801      	ldr	r0, [sp, #4]
   1c060:	4013      	ands	r3, r2
   1c062:	4642      	mov	r2, r8
   1c064:	4313      	orrs	r3, r2
   1c066:	607b      	str	r3, [r7, #4]
   1c068:	f7ff fb14 	bl	1b694 <__malloc_unlock>
   1c06c:	0035      	movs	r5, r6
   1c06e:	e71a      	b.n	1bea6 <_realloc_r+0xfe>
   1c070:	0031      	movs	r1, r6
   1c072:	f7ff fab7 	bl	1b5e4 <memmove>
   1c076:	e6f1      	b.n	1be5c <_realloc_r+0xb4>
   1c078:	0031      	movs	r1, r6
   1c07a:	0028      	movs	r0, r5
   1c07c:	f7ff fab2 	bl	1b5e4 <memmove>
   1c080:	465c      	mov	r4, fp
   1c082:	46d1      	mov	r9, sl
   1c084:	e6fd      	b.n	1be82 <_realloc_r+0xda>
   1c086:	68b3      	ldr	r3, [r6, #8]
   1c088:	6083      	str	r3, [r0, #8]
   1c08a:	68f3      	ldr	r3, [r6, #12]
   1c08c:	60c3      	str	r3, [r0, #12]
   1c08e:	2a24      	cmp	r2, #36	; 0x24
   1c090:	d015      	beq.n	1c0be <_realloc_r+0x316>
   1c092:	0003      	movs	r3, r0
   1c094:	0032      	movs	r2, r6
   1c096:	3310      	adds	r3, #16
   1c098:	3210      	adds	r2, #16
   1c09a:	e6d9      	b.n	1be50 <_realloc_r+0xa8>
   1c09c:	6853      	ldr	r3, [r2, #4]
   1c09e:	2203      	movs	r2, #3
   1c0a0:	4393      	bics	r3, r2
   1c0a2:	18e4      	adds	r4, r4, r3
   1c0a4:	0035      	movs	r5, r6
   1c0a6:	e6ec      	b.n	1be82 <_realloc_r+0xda>
   1c0a8:	4653      	mov	r3, sl
   1c0aa:	68b1      	ldr	r1, [r6, #8]
   1c0ac:	6119      	str	r1, [r3, #16]
   1c0ae:	68f1      	ldr	r1, [r6, #12]
   1c0b0:	6159      	str	r1, [r3, #20]
   1c0b2:	2a24      	cmp	r2, #36	; 0x24
   1c0b4:	d00c      	beq.n	1c0d0 <_realloc_r+0x328>
   1c0b6:	0032      	movs	r2, r6
   1c0b8:	3318      	adds	r3, #24
   1c0ba:	3210      	adds	r2, #16
   1c0bc:	e7bc      	b.n	1c038 <_realloc_r+0x290>
   1c0be:	6933      	ldr	r3, [r6, #16]
   1c0c0:	0032      	movs	r2, r6
   1c0c2:	6103      	str	r3, [r0, #16]
   1c0c4:	0003      	movs	r3, r0
   1c0c6:	6971      	ldr	r1, [r6, #20]
   1c0c8:	3318      	adds	r3, #24
   1c0ca:	3218      	adds	r2, #24
   1c0cc:	6141      	str	r1, [r0, #20]
   1c0ce:	e6bf      	b.n	1be50 <_realloc_r+0xa8>
   1c0d0:	4653      	mov	r3, sl
   1c0d2:	6932      	ldr	r2, [r6, #16]
   1c0d4:	4651      	mov	r1, sl
   1c0d6:	619a      	str	r2, [r3, #24]
   1c0d8:	0032      	movs	r2, r6
   1c0da:	6970      	ldr	r0, [r6, #20]
   1c0dc:	3320      	adds	r3, #32
   1c0de:	3218      	adds	r2, #24
   1c0e0:	61c8      	str	r0, [r1, #28]
   1c0e2:	e7a9      	b.n	1c038 <_realloc_r+0x290>
   1c0e4:	002b      	movs	r3, r5
   1c0e6:	0032      	movs	r2, r6
   1c0e8:	e77e      	b.n	1bfe8 <_realloc_r+0x240>
   1c0ea:	0031      	movs	r1, r6
   1c0ec:	0028      	movs	r0, r5
   1c0ee:	f7ff fa79 	bl	1b5e4 <memmove>
   1c0f2:	e77f      	b.n	1bff4 <_realloc_r+0x24c>
   1c0f4:	4653      	mov	r3, sl
   1c0f6:	68b1      	ldr	r1, [r6, #8]
   1c0f8:	6119      	str	r1, [r3, #16]
   1c0fa:	68f1      	ldr	r1, [r6, #12]
   1c0fc:	6159      	str	r1, [r3, #20]
   1c0fe:	2a24      	cmp	r2, #36	; 0x24
   1c100:	d003      	beq.n	1c10a <_realloc_r+0x362>
   1c102:	0032      	movs	r2, r6
   1c104:	3318      	adds	r3, #24
   1c106:	3210      	adds	r2, #16
   1c108:	e76e      	b.n	1bfe8 <_realloc_r+0x240>
   1c10a:	4653      	mov	r3, sl
   1c10c:	6932      	ldr	r2, [r6, #16]
   1c10e:	4651      	mov	r1, sl
   1c110:	619a      	str	r2, [r3, #24]
   1c112:	0032      	movs	r2, r6
   1c114:	6970      	ldr	r0, [r6, #20]
   1c116:	3320      	adds	r3, #32
   1c118:	3218      	adds	r2, #24
   1c11a:	61c8      	str	r0, [r1, #28]
   1c11c:	e764      	b.n	1bfe8 <_realloc_r+0x240>
   1c11e:	46c0      	nop			; (mov r8, r8)
   1c120:	200005d8 	.word	0x200005d8

0001c124 <_sbrk_r>:
   1c124:	2300      	movs	r3, #0
   1c126:	b570      	push	{r4, r5, r6, lr}
   1c128:	4c06      	ldr	r4, [pc, #24]	; (1c144 <_sbrk_r+0x20>)
   1c12a:	0005      	movs	r5, r0
   1c12c:	0008      	movs	r0, r1
   1c12e:	6023      	str	r3, [r4, #0]
   1c130:	f7ea f99a 	bl	6468 <_sbrk>
   1c134:	1c43      	adds	r3, r0, #1
   1c136:	d000      	beq.n	1c13a <_sbrk_r+0x16>
   1c138:	bd70      	pop	{r4, r5, r6, pc}
   1c13a:	6823      	ldr	r3, [r4, #0]
   1c13c:	2b00      	cmp	r3, #0
   1c13e:	d0fb      	beq.n	1c138 <_sbrk_r+0x14>
   1c140:	602b      	str	r3, [r5, #0]
   1c142:	e7f9      	b.n	1c138 <_sbrk_r+0x14>
   1c144:	20001c64 	.word	0x20001c64

0001c148 <__sread>:
   1c148:	b570      	push	{r4, r5, r6, lr}
   1c14a:	000c      	movs	r4, r1
   1c14c:	250e      	movs	r5, #14
   1c14e:	5f49      	ldrsh	r1, [r1, r5]
   1c150:	f000 fae6 	bl	1c720 <_read_r>
   1c154:	2800      	cmp	r0, #0
   1c156:	db03      	blt.n	1c160 <__sread+0x18>
   1c158:	6d23      	ldr	r3, [r4, #80]	; 0x50
   1c15a:	181b      	adds	r3, r3, r0
   1c15c:	6523      	str	r3, [r4, #80]	; 0x50
   1c15e:	bd70      	pop	{r4, r5, r6, pc}
   1c160:	89a3      	ldrh	r3, [r4, #12]
   1c162:	4a02      	ldr	r2, [pc, #8]	; (1c16c <__sread+0x24>)
   1c164:	4013      	ands	r3, r2
   1c166:	81a3      	strh	r3, [r4, #12]
   1c168:	e7f9      	b.n	1c15e <__sread+0x16>
   1c16a:	46c0      	nop			; (mov r8, r8)
   1c16c:	ffffefff 	.word	0xffffefff

0001c170 <__swrite>:
   1c170:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1c172:	0016      	movs	r6, r2
   1c174:	001f      	movs	r7, r3
   1c176:	220c      	movs	r2, #12
   1c178:	5e8b      	ldrsh	r3, [r1, r2]
   1c17a:	0005      	movs	r5, r0
   1c17c:	000c      	movs	r4, r1
   1c17e:	05da      	lsls	r2, r3, #23
   1c180:	d507      	bpl.n	1c192 <__swrite+0x22>
   1c182:	230e      	movs	r3, #14
   1c184:	5ec9      	ldrsh	r1, [r1, r3]
   1c186:	2200      	movs	r2, #0
   1c188:	2302      	movs	r3, #2
   1c18a:	f000 fab5 	bl	1c6f8 <_lseek_r>
   1c18e:	220c      	movs	r2, #12
   1c190:	5ea3      	ldrsh	r3, [r4, r2]
   1c192:	4a05      	ldr	r2, [pc, #20]	; (1c1a8 <__swrite+0x38>)
   1c194:	0028      	movs	r0, r5
   1c196:	4013      	ands	r3, r2
   1c198:	81a3      	strh	r3, [r4, #12]
   1c19a:	0032      	movs	r2, r6
   1c19c:	230e      	movs	r3, #14
   1c19e:	5ee1      	ldrsh	r1, [r4, r3]
   1c1a0:	003b      	movs	r3, r7
   1c1a2:	f000 f8d7 	bl	1c354 <_write_r>
   1c1a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1c1a8:	ffffefff 	.word	0xffffefff

0001c1ac <__sseek>:
   1c1ac:	b570      	push	{r4, r5, r6, lr}
   1c1ae:	000c      	movs	r4, r1
   1c1b0:	250e      	movs	r5, #14
   1c1b2:	5f49      	ldrsh	r1, [r1, r5]
   1c1b4:	f000 faa0 	bl	1c6f8 <_lseek_r>
   1c1b8:	1c43      	adds	r3, r0, #1
   1c1ba:	d006      	beq.n	1c1ca <__sseek+0x1e>
   1c1bc:	2380      	movs	r3, #128	; 0x80
   1c1be:	89a2      	ldrh	r2, [r4, #12]
   1c1c0:	015b      	lsls	r3, r3, #5
   1c1c2:	4313      	orrs	r3, r2
   1c1c4:	81a3      	strh	r3, [r4, #12]
   1c1c6:	6520      	str	r0, [r4, #80]	; 0x50
   1c1c8:	bd70      	pop	{r4, r5, r6, pc}
   1c1ca:	89a3      	ldrh	r3, [r4, #12]
   1c1cc:	4a01      	ldr	r2, [pc, #4]	; (1c1d4 <__sseek+0x28>)
   1c1ce:	4013      	ands	r3, r2
   1c1d0:	81a3      	strh	r3, [r4, #12]
   1c1d2:	e7f9      	b.n	1c1c8 <__sseek+0x1c>
   1c1d4:	ffffefff 	.word	0xffffefff

0001c1d8 <__sclose>:
   1c1d8:	b510      	push	{r4, lr}
   1c1da:	230e      	movs	r3, #14
   1c1dc:	5ec9      	ldrsh	r1, [r1, r3]
   1c1de:	f000 f973 	bl	1c4c8 <_close_r>
   1c1e2:	bd10      	pop	{r4, pc}

0001c1e4 <__sprint_r.part.0>:
   1c1e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1c1e6:	464e      	mov	r6, r9
   1c1e8:	4645      	mov	r5, r8
   1c1ea:	46de      	mov	lr, fp
   1c1ec:	4657      	mov	r7, sl
   1c1ee:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   1c1f0:	b5e0      	push	{r5, r6, r7, lr}
   1c1f2:	4680      	mov	r8, r0
   1c1f4:	000e      	movs	r6, r1
   1c1f6:	4691      	mov	r9, r2
   1c1f8:	049b      	lsls	r3, r3, #18
   1c1fa:	d531      	bpl.n	1c260 <__sprint_r.part.0+0x7c>
   1c1fc:	6813      	ldr	r3, [r2, #0]
   1c1fe:	469a      	mov	sl, r3
   1c200:	6893      	ldr	r3, [r2, #8]
   1c202:	2b00      	cmp	r3, #0
   1c204:	d02a      	beq.n	1c25c <__sprint_r.part.0+0x78>
   1c206:	4652      	mov	r2, sl
   1c208:	6852      	ldr	r2, [r2, #4]
   1c20a:	2500      	movs	r5, #0
   1c20c:	4693      	mov	fp, r2
   1c20e:	0897      	lsrs	r7, r2, #2
   1c210:	4652      	mov	r2, sl
   1c212:	6814      	ldr	r4, [r2, #0]
   1c214:	d104      	bne.n	1c220 <__sprint_r.part.0+0x3c>
   1c216:	e016      	b.n	1c246 <__sprint_r.part.0+0x62>
   1c218:	3501      	adds	r5, #1
   1c21a:	3404      	adds	r4, #4
   1c21c:	42af      	cmp	r7, r5
   1c21e:	d010      	beq.n	1c242 <__sprint_r.part.0+0x5e>
   1c220:	0032      	movs	r2, r6
   1c222:	6821      	ldr	r1, [r4, #0]
   1c224:	4640      	mov	r0, r8
   1c226:	f000 fa13 	bl	1c650 <_fputwc_r>
   1c22a:	1c43      	adds	r3, r0, #1
   1c22c:	d1f4      	bne.n	1c218 <__sprint_r.part.0+0x34>
   1c22e:	464a      	mov	r2, r9
   1c230:	2300      	movs	r3, #0
   1c232:	6093      	str	r3, [r2, #8]
   1c234:	6053      	str	r3, [r2, #4]
   1c236:	bc3c      	pop	{r2, r3, r4, r5}
   1c238:	4690      	mov	r8, r2
   1c23a:	4699      	mov	r9, r3
   1c23c:	46a2      	mov	sl, r4
   1c23e:	46ab      	mov	fp, r5
   1c240:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1c242:	464b      	mov	r3, r9
   1c244:	689b      	ldr	r3, [r3, #8]
   1c246:	465a      	mov	r2, fp
   1c248:	2103      	movs	r1, #3
   1c24a:	438a      	bics	r2, r1
   1c24c:	1a9b      	subs	r3, r3, r2
   1c24e:	464a      	mov	r2, r9
   1c250:	6093      	str	r3, [r2, #8]
   1c252:	2208      	movs	r2, #8
   1c254:	4694      	mov	ip, r2
   1c256:	44e2      	add	sl, ip
   1c258:	2b00      	cmp	r3, #0
   1c25a:	d1d4      	bne.n	1c206 <__sprint_r.part.0+0x22>
   1c25c:	2000      	movs	r0, #0
   1c25e:	e7e6      	b.n	1c22e <__sprint_r.part.0+0x4a>
   1c260:	f7fe fc62 	bl	1ab28 <__sfvwrite_r>
   1c264:	e7e3      	b.n	1c22e <__sprint_r.part.0+0x4a>
   1c266:	46c0      	nop			; (mov r8, r8)

0001c268 <__sprint_r>:
   1c268:	6893      	ldr	r3, [r2, #8]
   1c26a:	b510      	push	{r4, lr}
   1c26c:	2b00      	cmp	r3, #0
   1c26e:	d002      	beq.n	1c276 <__sprint_r+0xe>
   1c270:	f7ff ffb8 	bl	1c1e4 <__sprint_r.part.0>
   1c274:	bd10      	pop	{r4, pc}
   1c276:	6053      	str	r3, [r2, #4]
   1c278:	2000      	movs	r0, #0
   1c27a:	e7fb      	b.n	1c274 <__sprint_r+0xc>

0001c27c <__swbuf_r>:
   1c27c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1c27e:	0006      	movs	r6, r0
   1c280:	000d      	movs	r5, r1
   1c282:	0014      	movs	r4, r2
   1c284:	2800      	cmp	r0, #0
   1c286:	d002      	beq.n	1c28e <__swbuf_r+0x12>
   1c288:	6b83      	ldr	r3, [r0, #56]	; 0x38
   1c28a:	2b00      	cmp	r3, #0
   1c28c:	d04e      	beq.n	1c32c <__swbuf_r+0xb0>
   1c28e:	69a3      	ldr	r3, [r4, #24]
   1c290:	60a3      	str	r3, [r4, #8]
   1c292:	230c      	movs	r3, #12
   1c294:	5ee0      	ldrsh	r0, [r4, r3]
   1c296:	b281      	uxth	r1, r0
   1c298:	070b      	lsls	r3, r1, #28
   1c29a:	d53c      	bpl.n	1c316 <__swbuf_r+0x9a>
   1c29c:	6923      	ldr	r3, [r4, #16]
   1c29e:	2b00      	cmp	r3, #0
   1c2a0:	d039      	beq.n	1c316 <__swbuf_r+0x9a>
   1c2a2:	22ff      	movs	r2, #255	; 0xff
   1c2a4:	b2ef      	uxtb	r7, r5
   1c2a6:	4015      	ands	r5, r2
   1c2a8:	2280      	movs	r2, #128	; 0x80
   1c2aa:	0192      	lsls	r2, r2, #6
   1c2ac:	4211      	tst	r1, r2
   1c2ae:	d015      	beq.n	1c2dc <__swbuf_r+0x60>
   1c2b0:	6822      	ldr	r2, [r4, #0]
   1c2b2:	6961      	ldr	r1, [r4, #20]
   1c2b4:	1ad3      	subs	r3, r2, r3
   1c2b6:	428b      	cmp	r3, r1
   1c2b8:	da1b      	bge.n	1c2f2 <__swbuf_r+0x76>
   1c2ba:	3301      	adds	r3, #1
   1c2bc:	68a1      	ldr	r1, [r4, #8]
   1c2be:	3901      	subs	r1, #1
   1c2c0:	60a1      	str	r1, [r4, #8]
   1c2c2:	1c51      	adds	r1, r2, #1
   1c2c4:	6021      	str	r1, [r4, #0]
   1c2c6:	7017      	strb	r7, [r2, #0]
   1c2c8:	6962      	ldr	r2, [r4, #20]
   1c2ca:	429a      	cmp	r2, r3
   1c2cc:	d01a      	beq.n	1c304 <__swbuf_r+0x88>
   1c2ce:	89a3      	ldrh	r3, [r4, #12]
   1c2d0:	07db      	lsls	r3, r3, #31
   1c2d2:	d501      	bpl.n	1c2d8 <__swbuf_r+0x5c>
   1c2d4:	2d0a      	cmp	r5, #10
   1c2d6:	d015      	beq.n	1c304 <__swbuf_r+0x88>
   1c2d8:	0028      	movs	r0, r5
   1c2da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1c2dc:	4302      	orrs	r2, r0
   1c2de:	6e61      	ldr	r1, [r4, #100]	; 0x64
   1c2e0:	81a2      	strh	r2, [r4, #12]
   1c2e2:	4a14      	ldr	r2, [pc, #80]	; (1c334 <__swbuf_r+0xb8>)
   1c2e4:	400a      	ands	r2, r1
   1c2e6:	6662      	str	r2, [r4, #100]	; 0x64
   1c2e8:	6961      	ldr	r1, [r4, #20]
   1c2ea:	6822      	ldr	r2, [r4, #0]
   1c2ec:	1ad3      	subs	r3, r2, r3
   1c2ee:	428b      	cmp	r3, r1
   1c2f0:	dbe3      	blt.n	1c2ba <__swbuf_r+0x3e>
   1c2f2:	0021      	movs	r1, r4
   1c2f4:	0030      	movs	r0, r6
   1c2f6:	f7fe fa35 	bl	1a764 <_fflush_r>
   1c2fa:	2800      	cmp	r0, #0
   1c2fc:	d108      	bne.n	1c310 <__swbuf_r+0x94>
   1c2fe:	6822      	ldr	r2, [r4, #0]
   1c300:	2301      	movs	r3, #1
   1c302:	e7db      	b.n	1c2bc <__swbuf_r+0x40>
   1c304:	0021      	movs	r1, r4
   1c306:	0030      	movs	r0, r6
   1c308:	f7fe fa2c 	bl	1a764 <_fflush_r>
   1c30c:	2800      	cmp	r0, #0
   1c30e:	d0e3      	beq.n	1c2d8 <__swbuf_r+0x5c>
   1c310:	2501      	movs	r5, #1
   1c312:	426d      	negs	r5, r5
   1c314:	e7e0      	b.n	1c2d8 <__swbuf_r+0x5c>
   1c316:	0021      	movs	r1, r4
   1c318:	0030      	movs	r0, r6
   1c31a:	f7fd f88f 	bl	1943c <__swsetup_r>
   1c31e:	2800      	cmp	r0, #0
   1c320:	d1f6      	bne.n	1c310 <__swbuf_r+0x94>
   1c322:	230c      	movs	r3, #12
   1c324:	5ee0      	ldrsh	r0, [r4, r3]
   1c326:	6923      	ldr	r3, [r4, #16]
   1c328:	b281      	uxth	r1, r0
   1c32a:	e7ba      	b.n	1c2a2 <__swbuf_r+0x26>
   1c32c:	f7fe fa74 	bl	1a818 <__sinit>
   1c330:	e7ad      	b.n	1c28e <__swbuf_r+0x12>
   1c332:	46c0      	nop			; (mov r8, r8)
   1c334:	ffffdfff 	.word	0xffffdfff

0001c338 <__ascii_wctomb>:
   1c338:	2900      	cmp	r1, #0
   1c33a:	d004      	beq.n	1c346 <__ascii_wctomb+0xe>
   1c33c:	2aff      	cmp	r2, #255	; 0xff
   1c33e:	d804      	bhi.n	1c34a <__ascii_wctomb+0x12>
   1c340:	2001      	movs	r0, #1
   1c342:	700a      	strb	r2, [r1, #0]
   1c344:	4770      	bx	lr
   1c346:	2000      	movs	r0, #0
   1c348:	e7fc      	b.n	1c344 <__ascii_wctomb+0xc>
   1c34a:	238a      	movs	r3, #138	; 0x8a
   1c34c:	6003      	str	r3, [r0, #0]
   1c34e:	2001      	movs	r0, #1
   1c350:	4240      	negs	r0, r0
   1c352:	e7f7      	b.n	1c344 <__ascii_wctomb+0xc>

0001c354 <_write_r>:
   1c354:	b570      	push	{r4, r5, r6, lr}
   1c356:	0005      	movs	r5, r0
   1c358:	0008      	movs	r0, r1
   1c35a:	0011      	movs	r1, r2
   1c35c:	2200      	movs	r2, #0
   1c35e:	4c06      	ldr	r4, [pc, #24]	; (1c378 <_write_r+0x24>)
   1c360:	6022      	str	r2, [r4, #0]
   1c362:	001a      	movs	r2, r3
   1c364:	f7ea f84a 	bl	63fc <_write>
   1c368:	1c43      	adds	r3, r0, #1
   1c36a:	d000      	beq.n	1c36e <_write_r+0x1a>
   1c36c:	bd70      	pop	{r4, r5, r6, pc}
   1c36e:	6823      	ldr	r3, [r4, #0]
   1c370:	2b00      	cmp	r3, #0
   1c372:	d0fb      	beq.n	1c36c <_write_r+0x18>
   1c374:	602b      	str	r3, [r5, #0]
   1c376:	e7f9      	b.n	1c36c <_write_r+0x18>
   1c378:	20001c64 	.word	0x20001c64

0001c37c <__register_exitproc>:
   1c37c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1c37e:	464e      	mov	r6, r9
   1c380:	4645      	mov	r5, r8
   1c382:	46de      	mov	lr, fp
   1c384:	4657      	mov	r7, sl
   1c386:	b5e0      	push	{r5, r6, r7, lr}
   1c388:	4d36      	ldr	r5, [pc, #216]	; (1c464 <__register_exitproc+0xe8>)
   1c38a:	b083      	sub	sp, #12
   1c38c:	0006      	movs	r6, r0
   1c38e:	6828      	ldr	r0, [r5, #0]
   1c390:	4698      	mov	r8, r3
   1c392:	000f      	movs	r7, r1
   1c394:	4691      	mov	r9, r2
   1c396:	f7fe fd95 	bl	1aec4 <__retarget_lock_acquire_recursive>
   1c39a:	4b33      	ldr	r3, [pc, #204]	; (1c468 <__register_exitproc+0xec>)
   1c39c:	681c      	ldr	r4, [r3, #0]
   1c39e:	23a4      	movs	r3, #164	; 0xa4
   1c3a0:	005b      	lsls	r3, r3, #1
   1c3a2:	58e0      	ldr	r0, [r4, r3]
   1c3a4:	2800      	cmp	r0, #0
   1c3a6:	d052      	beq.n	1c44e <__register_exitproc+0xd2>
   1c3a8:	6843      	ldr	r3, [r0, #4]
   1c3aa:	2b1f      	cmp	r3, #31
   1c3ac:	dc13      	bgt.n	1c3d6 <__register_exitproc+0x5a>
   1c3ae:	1c5a      	adds	r2, r3, #1
   1c3b0:	9201      	str	r2, [sp, #4]
   1c3b2:	2e00      	cmp	r6, #0
   1c3b4:	d128      	bne.n	1c408 <__register_exitproc+0x8c>
   1c3b6:	9a01      	ldr	r2, [sp, #4]
   1c3b8:	3302      	adds	r3, #2
   1c3ba:	009b      	lsls	r3, r3, #2
   1c3bc:	6042      	str	r2, [r0, #4]
   1c3be:	501f      	str	r7, [r3, r0]
   1c3c0:	6828      	ldr	r0, [r5, #0]
   1c3c2:	f7fe fd81 	bl	1aec8 <__retarget_lock_release_recursive>
   1c3c6:	2000      	movs	r0, #0
   1c3c8:	b003      	add	sp, #12
   1c3ca:	bc3c      	pop	{r2, r3, r4, r5}
   1c3cc:	4690      	mov	r8, r2
   1c3ce:	4699      	mov	r9, r3
   1c3d0:	46a2      	mov	sl, r4
   1c3d2:	46ab      	mov	fp, r5
   1c3d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1c3d6:	4b25      	ldr	r3, [pc, #148]	; (1c46c <__register_exitproc+0xf0>)
   1c3d8:	2b00      	cmp	r3, #0
   1c3da:	d03d      	beq.n	1c458 <__register_exitproc+0xdc>
   1c3dc:	20c8      	movs	r0, #200	; 0xc8
   1c3de:	0040      	lsls	r0, r0, #1
   1c3e0:	f7fe fdec 	bl	1afbc <malloc>
   1c3e4:	2800      	cmp	r0, #0
   1c3e6:	d037      	beq.n	1c458 <__register_exitproc+0xdc>
   1c3e8:	22a4      	movs	r2, #164	; 0xa4
   1c3ea:	2300      	movs	r3, #0
   1c3ec:	0052      	lsls	r2, r2, #1
   1c3ee:	58a1      	ldr	r1, [r4, r2]
   1c3f0:	6043      	str	r3, [r0, #4]
   1c3f2:	6001      	str	r1, [r0, #0]
   1c3f4:	50a0      	str	r0, [r4, r2]
   1c3f6:	3240      	adds	r2, #64	; 0x40
   1c3f8:	5083      	str	r3, [r0, r2]
   1c3fa:	3204      	adds	r2, #4
   1c3fc:	5083      	str	r3, [r0, r2]
   1c3fe:	3301      	adds	r3, #1
   1c400:	9301      	str	r3, [sp, #4]
   1c402:	2300      	movs	r3, #0
   1c404:	2e00      	cmp	r6, #0
   1c406:	d0d6      	beq.n	1c3b6 <__register_exitproc+0x3a>
   1c408:	009a      	lsls	r2, r3, #2
   1c40a:	4692      	mov	sl, r2
   1c40c:	4482      	add	sl, r0
   1c40e:	464a      	mov	r2, r9
   1c410:	2188      	movs	r1, #136	; 0x88
   1c412:	4654      	mov	r4, sl
   1c414:	5062      	str	r2, [r4, r1]
   1c416:	22c4      	movs	r2, #196	; 0xc4
   1c418:	0052      	lsls	r2, r2, #1
   1c41a:	4691      	mov	r9, r2
   1c41c:	4481      	add	r9, r0
   1c41e:	464a      	mov	r2, r9
   1c420:	3987      	subs	r1, #135	; 0x87
   1c422:	4099      	lsls	r1, r3
   1c424:	6812      	ldr	r2, [r2, #0]
   1c426:	468b      	mov	fp, r1
   1c428:	430a      	orrs	r2, r1
   1c42a:	4694      	mov	ip, r2
   1c42c:	464a      	mov	r2, r9
   1c42e:	4661      	mov	r1, ip
   1c430:	6011      	str	r1, [r2, #0]
   1c432:	2284      	movs	r2, #132	; 0x84
   1c434:	4641      	mov	r1, r8
   1c436:	0052      	lsls	r2, r2, #1
   1c438:	50a1      	str	r1, [r4, r2]
   1c43a:	2e02      	cmp	r6, #2
   1c43c:	d1bb      	bne.n	1c3b6 <__register_exitproc+0x3a>
   1c43e:	0002      	movs	r2, r0
   1c440:	465c      	mov	r4, fp
   1c442:	328d      	adds	r2, #141	; 0x8d
   1c444:	32ff      	adds	r2, #255	; 0xff
   1c446:	6811      	ldr	r1, [r2, #0]
   1c448:	430c      	orrs	r4, r1
   1c44a:	6014      	str	r4, [r2, #0]
   1c44c:	e7b3      	b.n	1c3b6 <__register_exitproc+0x3a>
   1c44e:	0020      	movs	r0, r4
   1c450:	304d      	adds	r0, #77	; 0x4d
   1c452:	30ff      	adds	r0, #255	; 0xff
   1c454:	50e0      	str	r0, [r4, r3]
   1c456:	e7a7      	b.n	1c3a8 <__register_exitproc+0x2c>
   1c458:	6828      	ldr	r0, [r5, #0]
   1c45a:	f7fe fd35 	bl	1aec8 <__retarget_lock_release_recursive>
   1c45e:	2001      	movs	r0, #1
   1c460:	4240      	negs	r0, r0
   1c462:	e7b1      	b.n	1c3c8 <__register_exitproc+0x4c>
   1c464:	20000468 	.word	0x20000468
   1c468:	0001e188 	.word	0x0001e188
   1c46c:	0001afbd 	.word	0x0001afbd

0001c470 <_calloc_r>:
   1c470:	b510      	push	{r4, lr}
   1c472:	4351      	muls	r1, r2
   1c474:	f7fe fdac 	bl	1afd0 <_malloc_r>
   1c478:	1e04      	subs	r4, r0, #0
   1c47a:	d01c      	beq.n	1c4b6 <_calloc_r+0x46>
   1c47c:	0003      	movs	r3, r0
   1c47e:	3b08      	subs	r3, #8
   1c480:	685a      	ldr	r2, [r3, #4]
   1c482:	2303      	movs	r3, #3
   1c484:	439a      	bics	r2, r3
   1c486:	3a04      	subs	r2, #4
   1c488:	2a24      	cmp	r2, #36	; 0x24
   1c48a:	d816      	bhi.n	1c4ba <_calloc_r+0x4a>
   1c48c:	0003      	movs	r3, r0
   1c48e:	2a13      	cmp	r2, #19
   1c490:	d90d      	bls.n	1c4ae <_calloc_r+0x3e>
   1c492:	2100      	movs	r1, #0
   1c494:	3308      	adds	r3, #8
   1c496:	6001      	str	r1, [r0, #0]
   1c498:	6041      	str	r1, [r0, #4]
   1c49a:	2a1b      	cmp	r2, #27
   1c49c:	d907      	bls.n	1c4ae <_calloc_r+0x3e>
   1c49e:	6081      	str	r1, [r0, #8]
   1c4a0:	60c1      	str	r1, [r0, #12]
   1c4a2:	2a24      	cmp	r2, #36	; 0x24
   1c4a4:	d10d      	bne.n	1c4c2 <_calloc_r+0x52>
   1c4a6:	0003      	movs	r3, r0
   1c4a8:	6101      	str	r1, [r0, #16]
   1c4aa:	3318      	adds	r3, #24
   1c4ac:	6141      	str	r1, [r0, #20]
   1c4ae:	2200      	movs	r2, #0
   1c4b0:	601a      	str	r2, [r3, #0]
   1c4b2:	605a      	str	r2, [r3, #4]
   1c4b4:	609a      	str	r2, [r3, #8]
   1c4b6:	0020      	movs	r0, r4
   1c4b8:	bd10      	pop	{r4, pc}
   1c4ba:	2100      	movs	r1, #0
   1c4bc:	f7fb f96c 	bl	17798 <memset>
   1c4c0:	e7f9      	b.n	1c4b6 <_calloc_r+0x46>
   1c4c2:	0003      	movs	r3, r0
   1c4c4:	3310      	adds	r3, #16
   1c4c6:	e7f2      	b.n	1c4ae <_calloc_r+0x3e>

0001c4c8 <_close_r>:
   1c4c8:	2300      	movs	r3, #0
   1c4ca:	b570      	push	{r4, r5, r6, lr}
   1c4cc:	4c06      	ldr	r4, [pc, #24]	; (1c4e8 <_close_r+0x20>)
   1c4ce:	0005      	movs	r5, r0
   1c4d0:	0008      	movs	r0, r1
   1c4d2:	6023      	str	r3, [r4, #0]
   1c4d4:	f7e9 ffe6 	bl	64a4 <_close>
   1c4d8:	1c43      	adds	r3, r0, #1
   1c4da:	d000      	beq.n	1c4de <_close_r+0x16>
   1c4dc:	bd70      	pop	{r4, r5, r6, pc}
   1c4de:	6823      	ldr	r3, [r4, #0]
   1c4e0:	2b00      	cmp	r3, #0
   1c4e2:	d0fb      	beq.n	1c4dc <_close_r+0x14>
   1c4e4:	602b      	str	r3, [r5, #0]
   1c4e6:	e7f9      	b.n	1c4dc <_close_r+0x14>
   1c4e8:	20001c64 	.word	0x20001c64

0001c4ec <_fclose_r>:
   1c4ec:	b570      	push	{r4, r5, r6, lr}
   1c4ee:	0005      	movs	r5, r0
   1c4f0:	1e0c      	subs	r4, r1, #0
   1c4f2:	d040      	beq.n	1c576 <_fclose_r+0x8a>
   1c4f4:	2800      	cmp	r0, #0
   1c4f6:	d002      	beq.n	1c4fe <_fclose_r+0x12>
   1c4f8:	6b83      	ldr	r3, [r0, #56]	; 0x38
   1c4fa:	2b00      	cmp	r3, #0
   1c4fc:	d03e      	beq.n	1c57c <_fclose_r+0x90>
   1c4fe:	2601      	movs	r6, #1
   1c500:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1c502:	4233      	tst	r3, r6
   1c504:	d133      	bne.n	1c56e <_fclose_r+0x82>
   1c506:	89a3      	ldrh	r3, [r4, #12]
   1c508:	059b      	lsls	r3, r3, #22
   1c50a:	d543      	bpl.n	1c594 <_fclose_r+0xa8>
   1c50c:	0021      	movs	r1, r4
   1c50e:	0028      	movs	r0, r5
   1c510:	f7fe f880 	bl	1a614 <__sflush_r>
   1c514:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   1c516:	0006      	movs	r6, r0
   1c518:	2b00      	cmp	r3, #0
   1c51a:	d004      	beq.n	1c526 <_fclose_r+0x3a>
   1c51c:	69e1      	ldr	r1, [r4, #28]
   1c51e:	0028      	movs	r0, r5
   1c520:	4798      	blx	r3
   1c522:	2800      	cmp	r0, #0
   1c524:	db44      	blt.n	1c5b0 <_fclose_r+0xc4>
   1c526:	89a3      	ldrh	r3, [r4, #12]
   1c528:	061b      	lsls	r3, r3, #24
   1c52a:	d42a      	bmi.n	1c582 <_fclose_r+0x96>
   1c52c:	6b21      	ldr	r1, [r4, #48]	; 0x30
   1c52e:	2900      	cmp	r1, #0
   1c530:	d008      	beq.n	1c544 <_fclose_r+0x58>
   1c532:	0023      	movs	r3, r4
   1c534:	3340      	adds	r3, #64	; 0x40
   1c536:	4299      	cmp	r1, r3
   1c538:	d002      	beq.n	1c540 <_fclose_r+0x54>
   1c53a:	0028      	movs	r0, r5
   1c53c:	f7fe fa16 	bl	1a96c <_free_r>
   1c540:	2300      	movs	r3, #0
   1c542:	6323      	str	r3, [r4, #48]	; 0x30
   1c544:	6c61      	ldr	r1, [r4, #68]	; 0x44
   1c546:	2900      	cmp	r1, #0
   1c548:	d004      	beq.n	1c554 <_fclose_r+0x68>
   1c54a:	0028      	movs	r0, r5
   1c54c:	f7fe fa0e 	bl	1a96c <_free_r>
   1c550:	2300      	movs	r3, #0
   1c552:	6463      	str	r3, [r4, #68]	; 0x44
   1c554:	f7fe f990 	bl	1a878 <__sfp_lock_acquire>
   1c558:	2300      	movs	r3, #0
   1c55a:	81a3      	strh	r3, [r4, #12]
   1c55c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1c55e:	07db      	lsls	r3, r3, #31
   1c560:	d514      	bpl.n	1c58c <_fclose_r+0xa0>
   1c562:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1c564:	f7fe fcac 	bl	1aec0 <__retarget_lock_close_recursive>
   1c568:	f7fe f98e 	bl	1a888 <__sfp_lock_release>
   1c56c:	e004      	b.n	1c578 <_fclose_r+0x8c>
   1c56e:	220c      	movs	r2, #12
   1c570:	5ea3      	ldrsh	r3, [r4, r2]
   1c572:	2b00      	cmp	r3, #0
   1c574:	d1ca      	bne.n	1c50c <_fclose_r+0x20>
   1c576:	2600      	movs	r6, #0
   1c578:	0030      	movs	r0, r6
   1c57a:	bd70      	pop	{r4, r5, r6, pc}
   1c57c:	f7fe f94c 	bl	1a818 <__sinit>
   1c580:	e7bd      	b.n	1c4fe <_fclose_r+0x12>
   1c582:	6921      	ldr	r1, [r4, #16]
   1c584:	0028      	movs	r0, r5
   1c586:	f7fe f9f1 	bl	1a96c <_free_r>
   1c58a:	e7cf      	b.n	1c52c <_fclose_r+0x40>
   1c58c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1c58e:	f7fe fc9b 	bl	1aec8 <__retarget_lock_release_recursive>
   1c592:	e7e6      	b.n	1c562 <_fclose_r+0x76>
   1c594:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1c596:	f7fe fc95 	bl	1aec4 <__retarget_lock_acquire_recursive>
   1c59a:	220c      	movs	r2, #12
   1c59c:	5ea3      	ldrsh	r3, [r4, r2]
   1c59e:	2b00      	cmp	r3, #0
   1c5a0:	d1b4      	bne.n	1c50c <_fclose_r+0x20>
   1c5a2:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1c5a4:	401e      	ands	r6, r3
   1c5a6:	d1e6      	bne.n	1c576 <_fclose_r+0x8a>
   1c5a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1c5aa:	f7fe fc8d 	bl	1aec8 <__retarget_lock_release_recursive>
   1c5ae:	e7e3      	b.n	1c578 <_fclose_r+0x8c>
   1c5b0:	2601      	movs	r6, #1
   1c5b2:	4276      	negs	r6, r6
   1c5b4:	e7b7      	b.n	1c526 <_fclose_r+0x3a>
   1c5b6:	46c0      	nop			; (mov r8, r8)

0001c5b8 <__fputwc>:
   1c5b8:	b5f0      	push	{r4, r5, r6, r7, lr}
   1c5ba:	46ce      	mov	lr, r9
   1c5bc:	4647      	mov	r7, r8
   1c5be:	b580      	push	{r7, lr}
   1c5c0:	b085      	sub	sp, #20
   1c5c2:	4680      	mov	r8, r0
   1c5c4:	4689      	mov	r9, r1
   1c5c6:	0014      	movs	r4, r2
   1c5c8:	f7fe fc56 	bl	1ae78 <__locale_mb_cur_max>
   1c5cc:	2801      	cmp	r0, #1
   1c5ce:	d031      	beq.n	1c634 <__fputwc+0x7c>
   1c5d0:	0023      	movs	r3, r4
   1c5d2:	af03      	add	r7, sp, #12
   1c5d4:	335c      	adds	r3, #92	; 0x5c
   1c5d6:	464a      	mov	r2, r9
   1c5d8:	0039      	movs	r1, r7
   1c5da:	4640      	mov	r0, r8
   1c5dc:	f000 f8b4 	bl	1c748 <_wcrtomb_r>
   1c5e0:	0006      	movs	r6, r0
   1c5e2:	1c43      	adds	r3, r0, #1
   1c5e4:	d021      	beq.n	1c62a <__fputwc+0x72>
   1c5e6:	2800      	cmp	r0, #0
   1c5e8:	d030      	beq.n	1c64c <__fputwc+0x94>
   1c5ea:	7839      	ldrb	r1, [r7, #0]
   1c5ec:	2500      	movs	r5, #0
   1c5ee:	e007      	b.n	1c600 <__fputwc+0x48>
   1c5f0:	6823      	ldr	r3, [r4, #0]
   1c5f2:	1c5a      	adds	r2, r3, #1
   1c5f4:	6022      	str	r2, [r4, #0]
   1c5f6:	7019      	strb	r1, [r3, #0]
   1c5f8:	3501      	adds	r5, #1
   1c5fa:	42b5      	cmp	r5, r6
   1c5fc:	d226      	bcs.n	1c64c <__fputwc+0x94>
   1c5fe:	5d79      	ldrb	r1, [r7, r5]
   1c600:	68a3      	ldr	r3, [r4, #8]
   1c602:	3b01      	subs	r3, #1
   1c604:	60a3      	str	r3, [r4, #8]
   1c606:	2b00      	cmp	r3, #0
   1c608:	daf2      	bge.n	1c5f0 <__fputwc+0x38>
   1c60a:	69a2      	ldr	r2, [r4, #24]
   1c60c:	4293      	cmp	r3, r2
   1c60e:	db01      	blt.n	1c614 <__fputwc+0x5c>
   1c610:	290a      	cmp	r1, #10
   1c612:	d1ed      	bne.n	1c5f0 <__fputwc+0x38>
   1c614:	0022      	movs	r2, r4
   1c616:	4640      	mov	r0, r8
   1c618:	f7ff fe30 	bl	1c27c <__swbuf_r>
   1c61c:	1c43      	adds	r3, r0, #1
   1c61e:	d1eb      	bne.n	1c5f8 <__fputwc+0x40>
   1c620:	b005      	add	sp, #20
   1c622:	bc0c      	pop	{r2, r3}
   1c624:	4690      	mov	r8, r2
   1c626:	4699      	mov	r9, r3
   1c628:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1c62a:	2240      	movs	r2, #64	; 0x40
   1c62c:	89a3      	ldrh	r3, [r4, #12]
   1c62e:	4313      	orrs	r3, r2
   1c630:	81a3      	strh	r3, [r4, #12]
   1c632:	e7f5      	b.n	1c620 <__fputwc+0x68>
   1c634:	464b      	mov	r3, r9
   1c636:	3b01      	subs	r3, #1
   1c638:	2bfe      	cmp	r3, #254	; 0xfe
   1c63a:	d8c9      	bhi.n	1c5d0 <__fputwc+0x18>
   1c63c:	466a      	mov	r2, sp
   1c63e:	464b      	mov	r3, r9
   1c640:	71d3      	strb	r3, [r2, #7]
   1c642:	79d1      	ldrb	r1, [r2, #7]
   1c644:	af03      	add	r7, sp, #12
   1c646:	7039      	strb	r1, [r7, #0]
   1c648:	2601      	movs	r6, #1
   1c64a:	e7cf      	b.n	1c5ec <__fputwc+0x34>
   1c64c:	4648      	mov	r0, r9
   1c64e:	e7e7      	b.n	1c620 <__fputwc+0x68>

0001c650 <_fputwc_r>:
   1c650:	6e53      	ldr	r3, [r2, #100]	; 0x64
   1c652:	b570      	push	{r4, r5, r6, lr}
   1c654:	0005      	movs	r5, r0
   1c656:	000e      	movs	r6, r1
   1c658:	0014      	movs	r4, r2
   1c65a:	07db      	lsls	r3, r3, #31
   1c65c:	d41e      	bmi.n	1c69c <_fputwc_r+0x4c>
   1c65e:	230c      	movs	r3, #12
   1c660:	5ed2      	ldrsh	r2, [r2, r3]
   1c662:	b291      	uxth	r1, r2
   1c664:	058b      	lsls	r3, r1, #22
   1c666:	d516      	bpl.n	1c696 <_fputwc_r+0x46>
   1c668:	2380      	movs	r3, #128	; 0x80
   1c66a:	019b      	lsls	r3, r3, #6
   1c66c:	4219      	tst	r1, r3
   1c66e:	d104      	bne.n	1c67a <_fputwc_r+0x2a>
   1c670:	431a      	orrs	r2, r3
   1c672:	81a2      	strh	r2, [r4, #12]
   1c674:	6e62      	ldr	r2, [r4, #100]	; 0x64
   1c676:	4313      	orrs	r3, r2
   1c678:	6663      	str	r3, [r4, #100]	; 0x64
   1c67a:	0028      	movs	r0, r5
   1c67c:	0022      	movs	r2, r4
   1c67e:	0031      	movs	r1, r6
   1c680:	f7ff ff9a 	bl	1c5b8 <__fputwc>
   1c684:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1c686:	0005      	movs	r5, r0
   1c688:	07db      	lsls	r3, r3, #31
   1c68a:	d402      	bmi.n	1c692 <_fputwc_r+0x42>
   1c68c:	89a3      	ldrh	r3, [r4, #12]
   1c68e:	059b      	lsls	r3, r3, #22
   1c690:	d508      	bpl.n	1c6a4 <_fputwc_r+0x54>
   1c692:	0028      	movs	r0, r5
   1c694:	bd70      	pop	{r4, r5, r6, pc}
   1c696:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1c698:	f7fe fc14 	bl	1aec4 <__retarget_lock_acquire_recursive>
   1c69c:	230c      	movs	r3, #12
   1c69e:	5ee2      	ldrsh	r2, [r4, r3]
   1c6a0:	b291      	uxth	r1, r2
   1c6a2:	e7e1      	b.n	1c668 <_fputwc_r+0x18>
   1c6a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1c6a6:	f7fe fc0f 	bl	1aec8 <__retarget_lock_release_recursive>
   1c6aa:	e7f2      	b.n	1c692 <_fputwc_r+0x42>

0001c6ac <_fstat_r>:
   1c6ac:	2300      	movs	r3, #0
   1c6ae:	b570      	push	{r4, r5, r6, lr}
   1c6b0:	4c07      	ldr	r4, [pc, #28]	; (1c6d0 <_fstat_r+0x24>)
   1c6b2:	0005      	movs	r5, r0
   1c6b4:	0008      	movs	r0, r1
   1c6b6:	0011      	movs	r1, r2
   1c6b8:	6023      	str	r3, [r4, #0]
   1c6ba:	f7e9 fefd 	bl	64b8 <_fstat>
   1c6be:	1c43      	adds	r3, r0, #1
   1c6c0:	d000      	beq.n	1c6c4 <_fstat_r+0x18>
   1c6c2:	bd70      	pop	{r4, r5, r6, pc}
   1c6c4:	6823      	ldr	r3, [r4, #0]
   1c6c6:	2b00      	cmp	r3, #0
   1c6c8:	d0fb      	beq.n	1c6c2 <_fstat_r+0x16>
   1c6ca:	602b      	str	r3, [r5, #0]
   1c6cc:	e7f9      	b.n	1c6c2 <_fstat_r+0x16>
   1c6ce:	46c0      	nop			; (mov r8, r8)
   1c6d0:	20001c64 	.word	0x20001c64

0001c6d4 <_isatty_r>:
   1c6d4:	2300      	movs	r3, #0
   1c6d6:	b570      	push	{r4, r5, r6, lr}
   1c6d8:	4c06      	ldr	r4, [pc, #24]	; (1c6f4 <_isatty_r+0x20>)
   1c6da:	0005      	movs	r5, r0
   1c6dc:	0008      	movs	r0, r1
   1c6de:	6023      	str	r3, [r4, #0]
   1c6e0:	f7e9 fef8 	bl	64d4 <_isatty>
   1c6e4:	1c43      	adds	r3, r0, #1
   1c6e6:	d000      	beq.n	1c6ea <_isatty_r+0x16>
   1c6e8:	bd70      	pop	{r4, r5, r6, pc}
   1c6ea:	6823      	ldr	r3, [r4, #0]
   1c6ec:	2b00      	cmp	r3, #0
   1c6ee:	d0fb      	beq.n	1c6e8 <_isatty_r+0x14>
   1c6f0:	602b      	str	r3, [r5, #0]
   1c6f2:	e7f9      	b.n	1c6e8 <_isatty_r+0x14>
   1c6f4:	20001c64 	.word	0x20001c64

0001c6f8 <_lseek_r>:
   1c6f8:	b570      	push	{r4, r5, r6, lr}
   1c6fa:	0005      	movs	r5, r0
   1c6fc:	0008      	movs	r0, r1
   1c6fe:	0011      	movs	r1, r2
   1c700:	2200      	movs	r2, #0
   1c702:	4c06      	ldr	r4, [pc, #24]	; (1c71c <_lseek_r+0x24>)
   1c704:	6022      	str	r2, [r4, #0]
   1c706:	001a      	movs	r2, r3
   1c708:	f7e9 feed 	bl	64e6 <_lseek>
   1c70c:	1c43      	adds	r3, r0, #1
   1c70e:	d000      	beq.n	1c712 <_lseek_r+0x1a>
   1c710:	bd70      	pop	{r4, r5, r6, pc}
   1c712:	6823      	ldr	r3, [r4, #0]
   1c714:	2b00      	cmp	r3, #0
   1c716:	d0fb      	beq.n	1c710 <_lseek_r+0x18>
   1c718:	602b      	str	r3, [r5, #0]
   1c71a:	e7f9      	b.n	1c710 <_lseek_r+0x18>
   1c71c:	20001c64 	.word	0x20001c64

0001c720 <_read_r>:
   1c720:	b570      	push	{r4, r5, r6, lr}
   1c722:	0005      	movs	r5, r0
   1c724:	0008      	movs	r0, r1
   1c726:	0011      	movs	r1, r2
   1c728:	2200      	movs	r2, #0
   1c72a:	4c06      	ldr	r4, [pc, #24]	; (1c744 <_read_r+0x24>)
   1c72c:	6022      	str	r2, [r4, #0]
   1c72e:	001a      	movs	r2, r3
   1c730:	f7e9 fe3a 	bl	63a8 <_read>
   1c734:	1c43      	adds	r3, r0, #1
   1c736:	d000      	beq.n	1c73a <_read_r+0x1a>
   1c738:	bd70      	pop	{r4, r5, r6, pc}
   1c73a:	6823      	ldr	r3, [r4, #0]
   1c73c:	2b00      	cmp	r3, #0
   1c73e:	d0fb      	beq.n	1c738 <_read_r+0x18>
   1c740:	602b      	str	r3, [r5, #0]
   1c742:	e7f9      	b.n	1c738 <_read_r+0x18>
   1c744:	20001c64 	.word	0x20001c64

0001c748 <_wcrtomb_r>:
   1c748:	b570      	push	{r4, r5, r6, lr}
   1c74a:	001d      	movs	r5, r3
   1c74c:	4b11      	ldr	r3, [pc, #68]	; (1c794 <_wcrtomb_r+0x4c>)
   1c74e:	b084      	sub	sp, #16
   1c750:	681b      	ldr	r3, [r3, #0]
   1c752:	0004      	movs	r4, r0
   1c754:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   1c756:	2900      	cmp	r1, #0
   1c758:	d00e      	beq.n	1c778 <_wcrtomb_r+0x30>
   1c75a:	2b00      	cmp	r3, #0
   1c75c:	d016      	beq.n	1c78c <_wcrtomb_r+0x44>
   1c75e:	20e0      	movs	r0, #224	; 0xe0
   1c760:	581e      	ldr	r6, [r3, r0]
   1c762:	002b      	movs	r3, r5
   1c764:	0020      	movs	r0, r4
   1c766:	47b0      	blx	r6
   1c768:	1c43      	adds	r3, r0, #1
   1c76a:	d103      	bne.n	1c774 <_wcrtomb_r+0x2c>
   1c76c:	2300      	movs	r3, #0
   1c76e:	602b      	str	r3, [r5, #0]
   1c770:	338a      	adds	r3, #138	; 0x8a
   1c772:	6023      	str	r3, [r4, #0]
   1c774:	b004      	add	sp, #16
   1c776:	bd70      	pop	{r4, r5, r6, pc}
   1c778:	2b00      	cmp	r3, #0
   1c77a:	d009      	beq.n	1c790 <_wcrtomb_r+0x48>
   1c77c:	22e0      	movs	r2, #224	; 0xe0
   1c77e:	a901      	add	r1, sp, #4
   1c780:	589e      	ldr	r6, [r3, r2]
   1c782:	0020      	movs	r0, r4
   1c784:	002b      	movs	r3, r5
   1c786:	2200      	movs	r2, #0
   1c788:	47b0      	blx	r6
   1c78a:	e7ed      	b.n	1c768 <_wcrtomb_r+0x20>
   1c78c:	4b02      	ldr	r3, [pc, #8]	; (1c798 <_wcrtomb_r+0x50>)
   1c78e:	e7e6      	b.n	1c75e <_wcrtomb_r+0x16>
   1c790:	4b01      	ldr	r3, [pc, #4]	; (1c798 <_wcrtomb_r+0x50>)
   1c792:	e7f3      	b.n	1c77c <_wcrtomb_r+0x34>
   1c794:	20000038 	.word	0x20000038
   1c798:	2000046c 	.word	0x2000046c

0001c79c <__aeabi_uldivmod>:
   1c79c:	2b00      	cmp	r3, #0
   1c79e:	d111      	bne.n	1c7c4 <__aeabi_uldivmod+0x28>
   1c7a0:	2a00      	cmp	r2, #0
   1c7a2:	d10f      	bne.n	1c7c4 <__aeabi_uldivmod+0x28>
   1c7a4:	2900      	cmp	r1, #0
   1c7a6:	d100      	bne.n	1c7aa <__aeabi_uldivmod+0xe>
   1c7a8:	2800      	cmp	r0, #0
   1c7aa:	d002      	beq.n	1c7b2 <__aeabi_uldivmod+0x16>
   1c7ac:	2100      	movs	r1, #0
   1c7ae:	43c9      	mvns	r1, r1
   1c7b0:	1c08      	adds	r0, r1, #0
   1c7b2:	b407      	push	{r0, r1, r2}
   1c7b4:	4802      	ldr	r0, [pc, #8]	; (1c7c0 <__aeabi_uldivmod+0x24>)
   1c7b6:	a102      	add	r1, pc, #8	; (adr r1, 1c7c0 <__aeabi_uldivmod+0x24>)
   1c7b8:	1840      	adds	r0, r0, r1
   1c7ba:	9002      	str	r0, [sp, #8]
   1c7bc:	bd03      	pop	{r0, r1, pc}
   1c7be:	46c0      	nop			; (mov r8, r8)
   1c7c0:	ffff84b5 	.word	0xffff84b5
   1c7c4:	b403      	push	{r0, r1}
   1c7c6:	4668      	mov	r0, sp
   1c7c8:	b501      	push	{r0, lr}
   1c7ca:	9802      	ldr	r0, [sp, #8]
   1c7cc:	f000 f806 	bl	1c7dc <__udivmoddi4>
   1c7d0:	9b01      	ldr	r3, [sp, #4]
   1c7d2:	469e      	mov	lr, r3
   1c7d4:	b002      	add	sp, #8
   1c7d6:	bc0c      	pop	{r2, r3}
   1c7d8:	4770      	bx	lr
   1c7da:	46c0      	nop			; (mov r8, r8)

0001c7dc <__udivmoddi4>:
   1c7dc:	b5f0      	push	{r4, r5, r6, r7, lr}
   1c7de:	4657      	mov	r7, sl
   1c7e0:	464e      	mov	r6, r9
   1c7e2:	4645      	mov	r5, r8
   1c7e4:	46de      	mov	lr, fp
   1c7e6:	b5e0      	push	{r5, r6, r7, lr}
   1c7e8:	0004      	movs	r4, r0
   1c7ea:	b083      	sub	sp, #12
   1c7ec:	000d      	movs	r5, r1
   1c7ee:	4692      	mov	sl, r2
   1c7f0:	4699      	mov	r9, r3
   1c7f2:	428b      	cmp	r3, r1
   1c7f4:	d82f      	bhi.n	1c856 <__udivmoddi4+0x7a>
   1c7f6:	d02c      	beq.n	1c852 <__udivmoddi4+0x76>
   1c7f8:	4649      	mov	r1, r9
   1c7fa:	4650      	mov	r0, sl
   1c7fc:	f7fa ff5a 	bl	176b4 <__clzdi2>
   1c800:	0029      	movs	r1, r5
   1c802:	0006      	movs	r6, r0
   1c804:	0020      	movs	r0, r4
   1c806:	f7fa ff55 	bl	176b4 <__clzdi2>
   1c80a:	1a33      	subs	r3, r6, r0
   1c80c:	4698      	mov	r8, r3
   1c80e:	3b20      	subs	r3, #32
   1c810:	469b      	mov	fp, r3
   1c812:	d500      	bpl.n	1c816 <__udivmoddi4+0x3a>
   1c814:	e074      	b.n	1c900 <__udivmoddi4+0x124>
   1c816:	4653      	mov	r3, sl
   1c818:	465a      	mov	r2, fp
   1c81a:	4093      	lsls	r3, r2
   1c81c:	001f      	movs	r7, r3
   1c81e:	4653      	mov	r3, sl
   1c820:	4642      	mov	r2, r8
   1c822:	4093      	lsls	r3, r2
   1c824:	001e      	movs	r6, r3
   1c826:	42af      	cmp	r7, r5
   1c828:	d829      	bhi.n	1c87e <__udivmoddi4+0xa2>
   1c82a:	d026      	beq.n	1c87a <__udivmoddi4+0x9e>
   1c82c:	465b      	mov	r3, fp
   1c82e:	1ba4      	subs	r4, r4, r6
   1c830:	41bd      	sbcs	r5, r7
   1c832:	2b00      	cmp	r3, #0
   1c834:	da00      	bge.n	1c838 <__udivmoddi4+0x5c>
   1c836:	e079      	b.n	1c92c <__udivmoddi4+0x150>
   1c838:	2200      	movs	r2, #0
   1c83a:	2300      	movs	r3, #0
   1c83c:	9200      	str	r2, [sp, #0]
   1c83e:	9301      	str	r3, [sp, #4]
   1c840:	2301      	movs	r3, #1
   1c842:	465a      	mov	r2, fp
   1c844:	4093      	lsls	r3, r2
   1c846:	9301      	str	r3, [sp, #4]
   1c848:	2301      	movs	r3, #1
   1c84a:	4642      	mov	r2, r8
   1c84c:	4093      	lsls	r3, r2
   1c84e:	9300      	str	r3, [sp, #0]
   1c850:	e019      	b.n	1c886 <__udivmoddi4+0xaa>
   1c852:	4282      	cmp	r2, r0
   1c854:	d9d0      	bls.n	1c7f8 <__udivmoddi4+0x1c>
   1c856:	2200      	movs	r2, #0
   1c858:	2300      	movs	r3, #0
   1c85a:	9200      	str	r2, [sp, #0]
   1c85c:	9301      	str	r3, [sp, #4]
   1c85e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1c860:	2b00      	cmp	r3, #0
   1c862:	d001      	beq.n	1c868 <__udivmoddi4+0x8c>
   1c864:	601c      	str	r4, [r3, #0]
   1c866:	605d      	str	r5, [r3, #4]
   1c868:	9800      	ldr	r0, [sp, #0]
   1c86a:	9901      	ldr	r1, [sp, #4]
   1c86c:	b003      	add	sp, #12
   1c86e:	bc3c      	pop	{r2, r3, r4, r5}
   1c870:	4690      	mov	r8, r2
   1c872:	4699      	mov	r9, r3
   1c874:	46a2      	mov	sl, r4
   1c876:	46ab      	mov	fp, r5
   1c878:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1c87a:	42a3      	cmp	r3, r4
   1c87c:	d9d6      	bls.n	1c82c <__udivmoddi4+0x50>
   1c87e:	2200      	movs	r2, #0
   1c880:	2300      	movs	r3, #0
   1c882:	9200      	str	r2, [sp, #0]
   1c884:	9301      	str	r3, [sp, #4]
   1c886:	4643      	mov	r3, r8
   1c888:	2b00      	cmp	r3, #0
   1c88a:	d0e8      	beq.n	1c85e <__udivmoddi4+0x82>
   1c88c:	07fb      	lsls	r3, r7, #31
   1c88e:	0872      	lsrs	r2, r6, #1
   1c890:	431a      	orrs	r2, r3
   1c892:	4646      	mov	r6, r8
   1c894:	087b      	lsrs	r3, r7, #1
   1c896:	e00e      	b.n	1c8b6 <__udivmoddi4+0xda>
   1c898:	42ab      	cmp	r3, r5
   1c89a:	d101      	bne.n	1c8a0 <__udivmoddi4+0xc4>
   1c89c:	42a2      	cmp	r2, r4
   1c89e:	d80c      	bhi.n	1c8ba <__udivmoddi4+0xde>
   1c8a0:	1aa4      	subs	r4, r4, r2
   1c8a2:	419d      	sbcs	r5, r3
   1c8a4:	2001      	movs	r0, #1
   1c8a6:	1924      	adds	r4, r4, r4
   1c8a8:	416d      	adcs	r5, r5
   1c8aa:	2100      	movs	r1, #0
   1c8ac:	3e01      	subs	r6, #1
   1c8ae:	1824      	adds	r4, r4, r0
   1c8b0:	414d      	adcs	r5, r1
   1c8b2:	2e00      	cmp	r6, #0
   1c8b4:	d006      	beq.n	1c8c4 <__udivmoddi4+0xe8>
   1c8b6:	42ab      	cmp	r3, r5
   1c8b8:	d9ee      	bls.n	1c898 <__udivmoddi4+0xbc>
   1c8ba:	3e01      	subs	r6, #1
   1c8bc:	1924      	adds	r4, r4, r4
   1c8be:	416d      	adcs	r5, r5
   1c8c0:	2e00      	cmp	r6, #0
   1c8c2:	d1f8      	bne.n	1c8b6 <__udivmoddi4+0xda>
   1c8c4:	465b      	mov	r3, fp
   1c8c6:	9800      	ldr	r0, [sp, #0]
   1c8c8:	9901      	ldr	r1, [sp, #4]
   1c8ca:	1900      	adds	r0, r0, r4
   1c8cc:	4169      	adcs	r1, r5
   1c8ce:	2b00      	cmp	r3, #0
   1c8d0:	db22      	blt.n	1c918 <__udivmoddi4+0x13c>
   1c8d2:	002b      	movs	r3, r5
   1c8d4:	465a      	mov	r2, fp
   1c8d6:	40d3      	lsrs	r3, r2
   1c8d8:	002a      	movs	r2, r5
   1c8da:	4644      	mov	r4, r8
   1c8dc:	40e2      	lsrs	r2, r4
   1c8de:	001c      	movs	r4, r3
   1c8e0:	465b      	mov	r3, fp
   1c8e2:	0015      	movs	r5, r2
   1c8e4:	2b00      	cmp	r3, #0
   1c8e6:	db2c      	blt.n	1c942 <__udivmoddi4+0x166>
   1c8e8:	0026      	movs	r6, r4
   1c8ea:	409e      	lsls	r6, r3
   1c8ec:	0033      	movs	r3, r6
   1c8ee:	0026      	movs	r6, r4
   1c8f0:	4647      	mov	r7, r8
   1c8f2:	40be      	lsls	r6, r7
   1c8f4:	0032      	movs	r2, r6
   1c8f6:	1a80      	subs	r0, r0, r2
   1c8f8:	4199      	sbcs	r1, r3
   1c8fa:	9000      	str	r0, [sp, #0]
   1c8fc:	9101      	str	r1, [sp, #4]
   1c8fe:	e7ae      	b.n	1c85e <__udivmoddi4+0x82>
   1c900:	4642      	mov	r2, r8
   1c902:	2320      	movs	r3, #32
   1c904:	1a9b      	subs	r3, r3, r2
   1c906:	4652      	mov	r2, sl
   1c908:	40da      	lsrs	r2, r3
   1c90a:	4641      	mov	r1, r8
   1c90c:	0013      	movs	r3, r2
   1c90e:	464a      	mov	r2, r9
   1c910:	408a      	lsls	r2, r1
   1c912:	0017      	movs	r7, r2
   1c914:	431f      	orrs	r7, r3
   1c916:	e782      	b.n	1c81e <__udivmoddi4+0x42>
   1c918:	4642      	mov	r2, r8
   1c91a:	2320      	movs	r3, #32
   1c91c:	1a9b      	subs	r3, r3, r2
   1c91e:	002a      	movs	r2, r5
   1c920:	4646      	mov	r6, r8
   1c922:	409a      	lsls	r2, r3
   1c924:	0023      	movs	r3, r4
   1c926:	40f3      	lsrs	r3, r6
   1c928:	4313      	orrs	r3, r2
   1c92a:	e7d5      	b.n	1c8d8 <__udivmoddi4+0xfc>
   1c92c:	4642      	mov	r2, r8
   1c92e:	2320      	movs	r3, #32
   1c930:	2100      	movs	r1, #0
   1c932:	1a9b      	subs	r3, r3, r2
   1c934:	2200      	movs	r2, #0
   1c936:	9100      	str	r1, [sp, #0]
   1c938:	9201      	str	r2, [sp, #4]
   1c93a:	2201      	movs	r2, #1
   1c93c:	40da      	lsrs	r2, r3
   1c93e:	9201      	str	r2, [sp, #4]
   1c940:	e782      	b.n	1c848 <__udivmoddi4+0x6c>
   1c942:	4642      	mov	r2, r8
   1c944:	2320      	movs	r3, #32
   1c946:	0026      	movs	r6, r4
   1c948:	1a9b      	subs	r3, r3, r2
   1c94a:	40de      	lsrs	r6, r3
   1c94c:	002f      	movs	r7, r5
   1c94e:	46b4      	mov	ip, r6
   1c950:	4097      	lsls	r7, r2
   1c952:	4666      	mov	r6, ip
   1c954:	003b      	movs	r3, r7
   1c956:	4333      	orrs	r3, r6
   1c958:	e7c9      	b.n	1c8ee <__udivmoddi4+0x112>
   1c95a:	46c0      	nop			; (mov r8, r8)

0001c95c <__aeabi_dcmpun>:
   1c95c:	b570      	push	{r4, r5, r6, lr}
   1c95e:	4e0e      	ldr	r6, [pc, #56]	; (1c998 <__aeabi_dcmpun+0x3c>)
   1c960:	030d      	lsls	r5, r1, #12
   1c962:	031c      	lsls	r4, r3, #12
   1c964:	0049      	lsls	r1, r1, #1
   1c966:	005b      	lsls	r3, r3, #1
   1c968:	0b2d      	lsrs	r5, r5, #12
   1c96a:	0d49      	lsrs	r1, r1, #21
   1c96c:	0b24      	lsrs	r4, r4, #12
   1c96e:	0d5b      	lsrs	r3, r3, #21
   1c970:	42b1      	cmp	r1, r6
   1c972:	d004      	beq.n	1c97e <__aeabi_dcmpun+0x22>
   1c974:	4908      	ldr	r1, [pc, #32]	; (1c998 <__aeabi_dcmpun+0x3c>)
   1c976:	2000      	movs	r0, #0
   1c978:	428b      	cmp	r3, r1
   1c97a:	d008      	beq.n	1c98e <__aeabi_dcmpun+0x32>
   1c97c:	bd70      	pop	{r4, r5, r6, pc}
   1c97e:	4305      	orrs	r5, r0
   1c980:	2001      	movs	r0, #1
   1c982:	2d00      	cmp	r5, #0
   1c984:	d1fa      	bne.n	1c97c <__aeabi_dcmpun+0x20>
   1c986:	4904      	ldr	r1, [pc, #16]	; (1c998 <__aeabi_dcmpun+0x3c>)
   1c988:	2000      	movs	r0, #0
   1c98a:	428b      	cmp	r3, r1
   1c98c:	d1f6      	bne.n	1c97c <__aeabi_dcmpun+0x20>
   1c98e:	4314      	orrs	r4, r2
   1c990:	0020      	movs	r0, r4
   1c992:	1e44      	subs	r4, r0, #1
   1c994:	41a0      	sbcs	r0, r4
   1c996:	e7f1      	b.n	1c97c <__aeabi_dcmpun+0x20>
   1c998:	000007ff 	.word	0x000007ff
   1c99c:	0000061c 	.word	0x0000061c
   1c9a0:	0000062a 	.word	0x0000062a
   1c9a4:	00000638 	.word	0x00000638
   1c9a8:	00000646 	.word	0x00000646
   1c9ac:	00000654 	.word	0x00000654
   1c9b0:	00000a0c 	.word	0x00000a0c
   1c9b4:	00000a1a 	.word	0x00000a1a
   1c9b8:	00000a28 	.word	0x00000a28
   1c9bc:	00000a36 	.word	0x00000a36
   1c9c0:	00000a44 	.word	0x00000a44
   1c9c4:	00000e98 	.word	0x00000e98
   1c9c8:	00000ea6 	.word	0x00000ea6
   1c9cc:	00000eb4 	.word	0x00000eb4
   1c9d0:	00000ec2 	.word	0x00000ec2
   1c9d4:	00000ed0 	.word	0x00000ed0
   1c9d8:	000010bc 	.word	0x000010bc
   1c9dc:	000010bc 	.word	0x000010bc
   1c9e0:	000010b0 	.word	0x000010b0
   1c9e4:	000010bc 	.word	0x000010bc
   1c9e8:	000010b0 	.word	0x000010b0
   1c9ec:	0000108a 	.word	0x0000108a
   1c9f0:	0000108a 	.word	0x0000108a
   1c9f4:	000010bc 	.word	0x000010bc
   1c9f8:	000010bc 	.word	0x000010bc
   1c9fc:	000010bc 	.word	0x000010bc
   1ca00:	000010bc 	.word	0x000010bc
   1ca04:	000010bc 	.word	0x000010bc
   1ca08:	000010bc 	.word	0x000010bc
   1ca0c:	000010bc 	.word	0x000010bc
   1ca10:	000010bc 	.word	0x000010bc
   1ca14:	000010bc 	.word	0x000010bc
   1ca18:	000010bc 	.word	0x000010bc
   1ca1c:	000010bc 	.word	0x000010bc
   1ca20:	000010bc 	.word	0x000010bc
   1ca24:	000010bc 	.word	0x000010bc
   1ca28:	000010bc 	.word	0x000010bc
   1ca2c:	000010bc 	.word	0x000010bc
   1ca30:	000010bc 	.word	0x000010bc
   1ca34:	000010bc 	.word	0x000010bc
   1ca38:	000010bc 	.word	0x000010bc
   1ca3c:	000010bc 	.word	0x000010bc
   1ca40:	000010b0 	.word	0x000010b0
   1ca44:	000010bc 	.word	0x000010bc
   1ca48:	000010b0 	.word	0x000010b0
   1ca4c:	000010bc 	.word	0x000010bc
   1ca50:	000010bc 	.word	0x000010bc
   1ca54:	000010bc 	.word	0x000010bc
   1ca58:	000010bc 	.word	0x000010bc
   1ca5c:	000010bc 	.word	0x000010bc
   1ca60:	000010bc 	.word	0x000010bc
   1ca64:	000010bc 	.word	0x000010bc
   1ca68:	000010bc 	.word	0x000010bc
   1ca6c:	000010bc 	.word	0x000010bc
   1ca70:	000010bc 	.word	0x000010bc
   1ca74:	000010bc 	.word	0x000010bc
   1ca78:	000010bc 	.word	0x000010bc
   1ca7c:	000010bc 	.word	0x000010bc
   1ca80:	000010bc 	.word	0x000010bc
   1ca84:	000010bc 	.word	0x000010bc
   1ca88:	000010bc 	.word	0x000010bc
   1ca8c:	000010bc 	.word	0x000010bc
   1ca90:	000010bc 	.word	0x000010bc
   1ca94:	000010bc 	.word	0x000010bc
   1ca98:	000010bc 	.word	0x000010bc
   1ca9c:	000010bc 	.word	0x000010bc
   1caa0:	000010bc 	.word	0x000010bc
   1caa4:	000010bc 	.word	0x000010bc
   1caa8:	000010bc 	.word	0x000010bc
   1caac:	000010bc 	.word	0x000010bc
   1cab0:	000010bc 	.word	0x000010bc
   1cab4:	000010bc 	.word	0x000010bc
   1cab8:	000010bc 	.word	0x000010bc
   1cabc:	000010bc 	.word	0x000010bc
   1cac0:	000010bc 	.word	0x000010bc
   1cac4:	000010bc 	.word	0x000010bc
   1cac8:	000010bc 	.word	0x000010bc
   1cacc:	000010bc 	.word	0x000010bc
   1cad0:	000010bc 	.word	0x000010bc
   1cad4:	000010bc 	.word	0x000010bc
   1cad8:	000010b0 	.word	0x000010b0
   1cadc:	000010b0 	.word	0x000010b0
   1cae0:	000010c6 	.word	0x000010c6
   1cae4:	000010c6 	.word	0x000010c6
   1cae8:	000010c6 	.word	0x000010c6
   1caec:	000010c6 	.word	0x000010c6
   1caf0:	00001adc 	.word	0x00001adc
   1caf4:	00001aea 	.word	0x00001aea
   1caf8:	00001af8 	.word	0x00001af8
   1cafc:	00001b06 	.word	0x00001b06
   1cb00:	00001b14 	.word	0x00001b14
   1cb04:	42000000 	.word	0x42000000
   1cb08:	42000400 	.word	0x42000400
   1cb0c:	42000800 	.word	0x42000800
   1cb10:	42000c00 	.word	0x42000c00
   1cb14:	42001000 	.word	0x42001000
   1cb18:	43000400 	.word	0x43000400
   1cb1c:	0b0a0908 	.word	0x0b0a0908
   1cb20:	00000d0c 	.word	0x00000d0c
   1cb24:	0000345c 	.word	0x0000345c
   1cb28:	0000346a 	.word	0x0000346a
   1cb2c:	00003478 	.word	0x00003478
   1cb30:	00003486 	.word	0x00003486
   1cb34:	00003494 	.word	0x00003494
   1cb38:	00003c1c 	.word	0x00003c1c
   1cb3c:	00003c2a 	.word	0x00003c2a
   1cb40:	00003c38 	.word	0x00003c38
   1cb44:	00003c46 	.word	0x00003c46
   1cb48:	00003c54 	.word	0x00003c54
   1cb4c:	00004baa 	.word	0x00004baa
   1cb50:	00004c24 	.word	0x00004c24
   1cb54:	00004c24 	.word	0x00004c24
   1cb58:	00004bca 	.word	0x00004bca
   1cb5c:	00004bc4 	.word	0x00004bc4
   1cb60:	00004bd0 	.word	0x00004bd0
   1cb64:	00004bb0 	.word	0x00004bb0
   1cb68:	00004bd6 	.word	0x00004bd6
   1cb6c:	00004c0a 	.word	0x00004c0a
   1cb70:	00004ee0 	.word	0x00004ee0
   1cb74:	00004f3e 	.word	0x00004f3e
   1cb78:	00004f3e 	.word	0x00004f3e
   1cb7c:	00004f3a 	.word	0x00004f3a
   1cb80:	00004ed2 	.word	0x00004ed2
   1cb84:	00004ef2 	.word	0x00004ef2
   1cb88:	00004ebe 	.word	0x00004ebe
   1cb8c:	00004f00 	.word	0x00004f00
   1cb90:	00004f12 	.word	0x00004f12
   1cb94:	00004f9e 	.word	0x00004f9e
   1cb98:	00004fee 	.word	0x00004fee
   1cb9c:	00004fee 	.word	0x00004fee
   1cba0:	00004fee 	.word	0x00004fee
   1cba4:	00004f90 	.word	0x00004f90
   1cba8:	00004fb0 	.word	0x00004fb0
   1cbac:	00004f7e 	.word	0x00004f7e
   1cbb0:	00004fbe 	.word	0x00004fbe
   1cbb4:	00004fd8 	.word	0x00004fd8
   1cbb8:	0000505e 	.word	0x0000505e
   1cbbc:	000050c4 	.word	0x000050c4
   1cbc0:	000050c4 	.word	0x000050c4
   1cbc4:	000050c0 	.word	0x000050c0
   1cbc8:	00005046 	.word	0x00005046
   1cbcc:	00005076 	.word	0x00005076
   1cbd0:	0000502e 	.word	0x0000502e
   1cbd4:	0000508e 	.word	0x0000508e
   1cbd8:	000050a8 	.word	0x000050a8
   1cbdc:	000053ac 	.word	0x000053ac
   1cbe0:	000053ba 	.word	0x000053ba
   1cbe4:	000053c8 	.word	0x000053c8
   1cbe8:	000053d6 	.word	0x000053d6
   1cbec:	000053e4 	.word	0x000053e4
   1cbf0:	00005bcc 	.word	0x00005bcc
   1cbf4:	00005bda 	.word	0x00005bda
   1cbf8:	00005be8 	.word	0x00005be8
   1cbfc:	00005bf6 	.word	0x00005bf6
   1cc00:	00005c04 	.word	0x00005c04
   1cc04:	42002000 	.word	0x42002000
   1cc08:	42002400 	.word	0x42002400
   1cc0c:	42002800 	.word	0x42002800
   1cc10:	42002c00 	.word	0x42002c00
   1cc14:	43000800 	.word	0x43000800
   1cc18:	1c1c1b1b 	.word	0x1c1c1b1b
   1cc1c:	0000001d 	.word	0x0000001d
   1cc20:	00000002 	.word	0x00000002
   1cc24:	00000100 	.word	0x00000100
   1cc28:	00000002 	.word	0x00000002
   1cc2c:	00000200 	.word	0x00000200
   1cc30:	00000002 	.word	0x00000002
   1cc34:	00000400 	.word	0x00000400
   1cc38:	00000002 	.word	0x00000002
   1cc3c:	00000800 	.word	0x00000800
   1cc40:	00000003 	.word	0x00000003
   1cc44:	00000004 	.word	0x00000004

0001cc48 <ScanTime>:
   1cc48:	00000001 00000002 00000004 00000008     ................
   1cc58:	00000010 00000020 00000040 00000080     .... ...@.......
   1cc68:	00000100 00000200 00000400 00000800     ................
   1cc78:	00001000 00002000 00004000 2e335854     ..... ...@..TX3.
   1cc88:	0a2e2e2e 0000000d 42205852 6f636165     ........RX Beaco
   1cc98:	2e2e2e6e 00000d0a 7774654e 206b726f     n.......Network 
   1cca8:	6c6c7546 0a2e2e2e 0000000d 6e696f4a     Full........Join
   1ccb8:	63755320 73736563 312e2e2e 00000d0a      Success...1....
   1ccc8:	20564352 52444441 7830203a 20783425     RCV ADDR: 0x%4x 
   1ccd8:	4843202d 25203a20 000a0d64 6f4a0a0d     - CH : %d.....Jo
   1cce8:	74206e69 6e206568 6f777465 73206b72     in the network s
   1ccf8:	65636375 75667373 0d796c6c 00000000     uccessfully.....
   1cd08:	65530a0d 4220646e 6f636165 2e2e2e6e     ..Send Beacon...
   1cd18:	00000d20 64410a0d 73657264 30203a73      .....Address: 0
   1cd28:	00000078 78322e25 00000000 68532020     x...%.2x....  Sh
   1cd38:	2074726f 72646441 0000203a 41502020     ort Addr: ..  PA
   1cd48:	3a44494e 00000020 68432020 656e6e61     NID: ...  Channe
   1cd58:	00203a6c 00006425 76410a0d 616c6961     l: .%d....Availa
   1cd68:	20656c62 65646f6e 490a0d73 7865646e     ble nodes..Index
   1cd78:	52202020 44202058 20202043 494e4150        RX  DC   PANI
   1cd88:	20202044 726f6853 44415f74 20205244     D   Short_ADDR  
   1cd98:	45455020 4e495f52 000d4f46 64252020      PEER_INFO..  %d
   1cda8:	20202020 00000020 00202020 322e2520          ...   . %.2
   1cdb8:	00000078 20202020 00000000 3f3f3f3f     x...    ....????
   1cdc8:	3f3f3f20 0000203f 20202020 00002020      ???? ..      ..
   1cdd8:	00002020 0000000d 20206425 00202020       ......%d     .
   1cde8:	3f3f3f3f 3f3f2020 00203f3f 6e616353     ????  ???? .Scan
   1cdf8:	61684320 6c656e6e 20642520 00000a0d      Channel %d ....
   1ce08:	6e616353 44495020 2e25203a 0d0a7834     Scan PID: %.4x..
   1ce18:	00000000 78520a0d 00000020 6f4a0a0d     ......Rx .....Jo
   1ce28:	54206e69 72656d69 72694620 0a0d6465     in Timer Fired..
   1ce38:	00000020 72617453 72662074 4e206d6f      ...Start from N
   1ce48:	6f204d56 6843206e 656e6e61 202d206c     VM on Channel - 
   1ce58:	0d206425 0000000a 204b4843 3f3f3f3f     %d .....CHK ????
   1ce68:	3f3f3f3f 3f3f3f3f 3f3f3f3f 0d0a3f3f     ??????????????..
   1ce78:	00000000 72617453 69572074 656c6572     ....Start Wirele
   1ce88:	43207373 756d6d6f 6163696e 6e6f6974     ss Communication
   1ce98:	206e6f20 6c616552 20465220 6e616843      on Real RF Chan
   1cea8:	206c656e 6425202d 000a0d20 6e450a0d     nel - %d .....En
   1ceb8:	79677265 61635320 6552206e 746c7573     ergy Scan Result
   1cec8:	00003a73 68430a0d 656e6e61 6425206c     s:....Channel %d
   1ced8:	00000000 002d203a 25202d20 64252064     ....: -. - %d %d
   1cee8:	00000000 204d564e 74697257 61462065     ....NVM Write Fa
   1cef8:	00006c69 204d564e 64616552 69614620     il..NVM Read Fai
   1cf08:	0000006c 204d564e 61746144 0d0a203a     l...NVM Data: ..
   1cf18:	00000000 78257830 00000020 00000d0a     ....0x%x .......
   1cf28:	544e4f43 454c4241 41455220 21212144     CONTABLE READ!!!
   1cf38:	21212121 000d0a21 44414552 00002121     !!!!!...READ!!..
   1cf48:	656d6954 6e492072 3a207469 20642520     Timer Init : %d 
   1cf58:	2e2e7a48 0d0a2e2e 00000000 69646152     Hz..........Radi
   1cf68:	6552206f 2e746573 2e2e2e2e 2e2e2e2e     o Reset.........
   1cf78:	000d0a2e 32315853 52203637 54455345     ....SX1276 RESET
   1cf88:	0d2e2e2e 00000000 20544e49 47414c46     ........INT FLAG
   1cf98:	203a3120 0d0a7825 00000000 445b0d0a      1: %x........[D
   1cfa8:	20617461 65636552 64657669 000d0a5d     ata Received]...
   1cfb8:	20435253 3a444950 0d782520 0000000a     SRC PID: %x.....
   1cfc8:	20435253 3a524441 322e2520 322e2578     SRC ADR: %.2x%.2
   1cfd8:	000a0d78 676e654c 203a6874 0a0d6425     x...Length: %d..
   1cfe8:	00000000 49535352 6425203a 0d6d4264     ....RSSI: %ddBm.
   1cff8:	0000000a 00000d0a 72616843 65746361     ........Characte
   1d008:	0d203a72 00000000 414e0a0d 204f4f4d     r: .......NAMOO 
   1d018:	524d4153 4d203533 4c204c4f 56205350     SAMR35 MOL LPS V
   1d028:	2e347265 000d3230 2a2a2a2a 2a2a2a2a     er4.02..********
   1d038:	2a2a2a2a 2a2a2a2a 2a2a2a2a 2a2a2a2a     ****************
   1d048:	2a2a2a2a 2a2a2a2a 2a2a2a2a 000d2a2a     **************..
   1d058:	413d5441 6345203a 4f206f68 464f2f4e     AT=A: Echo ON/OF
   1d068:	00000d46 423d5441 5453203a 45202c58     F...AT=B: STX, E
   1d078:	49205854 7475706e 0000000d 433d5441     TX Input....AT=C
   1d088:	6c43203a 20726165 0d4d564e 00000000     : Clear NVM.....
   1d098:	443d5441 7250203a 636f746f 44206c6f     AT=D: Protocol D
   1d0a8:	20617461 6e617254 69656373 20726576     ata Transceiver 
   1d0b8:	72617453 000d2174 20202020 40402020     Start!..      @@
   1d0c8:	45203a40 20746978 73696854 646f4d20     @: Exit This Mod
   1d0d8:	000d2165 453d5441 7953203a 6d657473     e!..AT=E: System
   1d0e8:	73655220 000d7465 463d5441 6843203a      Reset..AT=F: Ch
   1d0f8:	65676e61 2c465320 000d5244 483d5441     ange SF,DR..AT=H
   1d108:	7250203a 20746e69 756e654d 0000000d     : Print Menu....
   1d118:	4a3d5441 6f4a203a 4e206e69 6f777465     AT=J: Join Netwo
   1d128:	000d6b72 4b3d5441 6f4a203a 4e206e69     rk..AT=K: Join N
   1d138:	6f777465 66206b72 206d6f72 0d4d564e     etwork from NVM.
   1d148:	00000000 4e3d5441 7453203a 20747261     ....AT=N: Start 
   1d158:	7774654e 206b726f 6d6f7266 4d564e20     Network from NVM
   1d168:	0000000d 503d5441 754f203a 74757074     ....AT=P: Output
   1d178:	776f5020 0d207265 00000000 513d5441      Power .....AT=Q
   1d188:	504c203a 74532053 0d747261 00000000     : LPS Start.....
   1d198:	523d5441 6552203a 4e206461 000d4d56     AT=R: Read NVM..
   1d1a8:	533d5441 7453203a 20747261 7774654e     AT=S: Start Netw
   1d1b8:	206b726f 0000000d 553d5441 2b28203a     ork ....AT=U: (+
   1d1c8:	74614429 292b2861 65746e45 54203a72     )Data(+)Enter: T
   1d1d8:	736e6172 20726566 616f7242 73616364     ransfer Broadcas
   1d1e8:	61442074 4d286174 31207861 79423531     t Data(Max 115By
   1d1f8:	0d296574 00000000 573d5441 504c203a     te).....AT=W: LP
   1d208:	6e452053 00000d64 5a3d5441 6c53203a     S End...AT=Z: Sl
   1d218:	20706565 65646f4d 0000000d 313d5441     eep Mode....AT=1
   1d228:	7242203a 6364616f 20747361 7373654d     : Broadcast Mess
   1d238:	0d656761 00000000 323d5441 6e55203a     age.....AT=2: Un
   1d248:	73616369 654d2074 67617373 79622065     icast Message by
   1d258:	646e4920 000d7865 333d5441 6e55203a      Index..AT=3: Un
   1d268:	73616369 654d2074 67617373 79622065     icast Message by
   1d278:	44444120 00000d52 343d5441 7242203a      ADDR...AT=4: Br
   1d288:	6364616f 20747361 74736554 73654d20     oadcast Test Mes
   1d298:	65676173 72657020 65733520 00000d63     sage per 5sec...
   1d2a8:	353d5441 6e55203a 73616369 65542074     AT=5: Unicast Te
   1d2b8:	4d207473 61737365 70206567 35207265     st Message per 5
   1d2c8:	0d636573 00000000 363d5441 5355203a     sec.....AT=6: US
   1d2d8:	20545241 61726f42 43206574 676e6168     ART Borate Chang
   1d2e8:	00000d65 373d5441 6553203a 704f2074     e...AT=7: Set Op
   1d2f8:	74617265 206e6f69 6e616843 0d6c656e     eration Channel.
   1d308:	00000000 383d5441 6553203a 41502074     ....AT=8: Set PA
   1d318:	4449204e 0000000d 393d5441 6544203a     N ID....AT=9: De
   1d328:	65636976 666e4920 00000d6f 303d5441     vice Info...AT=0
   1d338:	7544203a 4320706d 656e6e6f 6f697463     : Dump Connectio
   1d348:	00000d6e 6f724220 61636461 2e2e7473     n... Broadcast..
   1d358:	000d322e 78450d0a 50207469 6f746f72     .2....Exit Proto
   1d368:	206c6f63 65646f4d 0a212e2e 0000000d     col Mode..!.....
   1d378:	4c494146 00000d0a 41460d0a 0d0a4c49     FAIL......FAIL..
   1d388:	00000000 4b4f0d0a 00000d0a 0d0a6325     ......OK....%c..
   1d398:	00000000 63450d0a 4f206f68 0d0a4646     ......Echo OFF..
   1d3a8:	00000000 63450d0a 4f206f68 000d0a4e     ......Echo ON...
   1d3b8:	72200d0a 5f646165 4c585453 25203d20     .. read_STXL = %
   1d3c8:	00000063 72200d0a 5f646165 31585453     c..... read_STX1
   1d3d8:	25203d20 00000063 72200d0a 5f646165      = %c..... read_
   1d3e8:	32585453 25203d20 00000063 72200d0a     STX2 = %c..... r
   1d3f8:	5f646165 33585453 25203d20 00000063     ead_STX3 = %c...
   1d408:	72200d0a 5f646165 4c585445 25203d20     .. read_ETXL = %
   1d418:	00000063 72200d0a 5f646165 31585445     c..... read_ETX1
   1d428:	25203d20 00000063 72200d0a 5f646165      = %c..... read_
   1d438:	32585445 25203d20 00000063 72200d0a     ETX2 = %c..... r
   1d448:	5f646165 33585445 25203d20 000d0a63     ead_ETX3 = %c...
   1d458:	6e490a0d 20747570 72617453 654c2074     ..Input Start Le
   1d468:	6874676e 20666f20 74786554 7e203028     ngth of Text(0 ~
   1d478:	20293320 0000203a 75530d0a 73656363      3) : ....Succes
   1d488:	202c2173 72617453 654c2074 6874676e     s!, Start Length
   1d498:	25203d20 000d0a63 61460d0a 0d0a6c69      = %c.....Fail..
   1d4a8:	00000000 6f440d0a 746f4e20 74655320     ......Do Not Set
   1d4b8:	676e6974 78655420 0d0a2174 00000000     ting Text!......
   1d4c8:	6e490a0d 20747570 73726946 74532074     ..Input First St
   1d4d8:	20747261 5420666f 20747865 0000203a     art of Text : ..
   1d4e8:	0a632520 6375530d 73736563 000d0a21      %c..Success!...
   1d4f8:	6e490a0d 20747570 6f636553 5320646e     ..Input Second S
   1d508:	74726174 20666f20 74786554 00203a20     tart of Text : .
   1d518:	6e490a0d 20747570 72696854 74532064     ..Input Third St
   1d528:	20747261 5420666f 20747865 0000203a     art of Text : ..
   1d538:	6e490a0d 20747570 20646e45 676e654c     ..Input End Leng
   1d548:	6f206874 65542066 31287478 33207e20     th of Text(1 ~ 3
   1d558:	203a2029 00000000 75530d0a 73656363     ) : ......Succes
   1d568:	202c2173 20646e45 676e654c 3d206874     s!, End Length =
   1d578:	0a632520 0000000d 6e490a0d 20747570      %c.......Input 
   1d588:	73726946 6e452074 666f2064 78655420     First End of Tex
   1d598:	203a2074 00000000 6e490a0d 20747570     t : ......Input 
   1d5a8:	6f636553 4520646e 6f20646e 65542066     Second End of Te
   1d5b8:	3a207478 00000020 6e490a0d 20747570     xt : .....Input 
   1d5c8:	72696854 6e452064 666f2064 78655420     Third End of Tex
   1d5d8:	203a2074 00000000 75530d0a 73656363     t : ......Succes
   1d5e8:	202c2173 74786554 74655320 676e6974     s!, Text Setting
   1d5f8:	000d0a21 6c430d0a 20726165 2e4d564e     !.....Clear NVM.
   1d608:	000d2e2e 656c430a 64657261 0d2e2e2e     .....Cleared....
   1d618:	00000000 54530d0a 5020504f 6f746f72     ......STOP Proto
   1d628:	206c6f63 61746144 20212e2e 00000000     col Data..! ....
   1d638:	72200d0a 5f646165 33585445 25203d20     .. read_ETX3 = %
   1d648:	0a0d0a63 0000000d 70530a0d 64616572     c.........Spread
   1d658:	20676e69 74636146 7320726f 69747465     ing Factor setti
   1d668:	2e2e676e 7275432e 746e6572 20465320     ng...Current SF 
   1d678:	6425202d 000a0d20 3a373020 37465320     - %d ... 07: SF7
   1d688:	3830202c 4653203a 30202c38 53203a39     , 08: SF8, 09: S
   1d698:	202c3946 203a3031 30314653 3131202c     F9, 10: SF10, 11
   1d6a8:	4653203a 202c3131 203a3231 32314653     : SF11, 12: SF12
   1d6b8:	00000d20 65530a0d 70532074 64616572      .....Set Spread
   1d6c8:	46676e69 6f746361 202d2072 2d206425     ingFactor - %d -
   1d6d8:	6e6f4420 0d0a0d65 0000000a 6e490a0d      Done.........In
   1d6e8:	696c6176 61762064 2065756c 6425202d     valid value - %d
   1d6f8:	0d0a0d20 0000000a 6163227b 64253a22      .......{"ca":%d
   1d708:	6573222c 64253a22 6176222c 64253a22     ,"se":%d,"va":%d
   1d718:	000a0d7d 6e696f4a 69614620 2e2e2e6c     }...Join Fail...
   1d728:	000d0a2e 6e696f4a 63755320 73736563     ....Join Success
   1d738:	2e2e2e2e 000d0a32 6f4e0a0d 6f662074     ....2.....Not fo
   1d748:	20646e75 7774656e 2e6b726f 52202e2e     und network... R
   1d758:	61637365 6c50206e 65736165 2e2e2e2e     escan Please....
   1d768:	0d202e2e 00000000 6e696f4a 63755320     .. .....Join Suc
   1d778:	73736563 2e2e2e2e 000d0a33 7774654e     cess....3...Netw
   1d788:	206b726f 61657243 2e646574 0a2e2e2e     ork Created.....
   1d798:	0000000d 7774654e 206b726f 72617453     ....Network Star
   1d7a8:	61462074 2e2e6c69 0d0a2e2e 00000000     t Fail..........
   1d7b8:	754f0a0d 74757074 776f5020 73207265     ..Output Power s
   1d7c8:	69747465 2e2e676e 7275432e 746e6572     etting...Current
   1d7d8:	574f5020 2d205245 20642520 00000a0d      POWER - %d ....
   1d7e8:	202c3032 7e203731 20323020 006d4264     20, 17 ~ 02 dBm.
   1d7f8:	65530a0d 754f2074 74757074 776f5020     ..Set Output Pow
   1d808:	2d207265 20642520 6f44202d 0a0d656e     er - %d - Done..
   1d818:	00000a0d 2053504c 72617453 2e2e2e74     ....LPS Start...
   1d828:	00000d0a 64616552 4d564e20 0d2e2e2e     ....Read NVM....
   1d838:	00000000 654e0d0a 726f7774 6e49206b     ......Network In
   1d848:	6d726f66 6f697461 2e2e2e6e 0000000d     formation.......
   1d858:	00207825 6f430d0a 63656e6e 6e6f6974     %x ...Connection
   1d868:	62615420 2e2e656c 00000d2e 2053504c      Table......LPS 
   1d878:	706f7453 0a2e2e2e 0000000d 6f746f47     Stop........Goto
   1d888:	656c5320 4d207065 2165646f 00000d0a      Sleep Mode!....
   1d898:	616f7242 73616364 2e2e2e74 00000d33     Broadcast...3...
   1d8a8:	75706e49 6f432074 63656e6e 6e6f6974     Input Connection
   1d8b8:	646e4920 003a7865 0d632520 0000000a      Index:. %c.....
   1d8c8:	63696e55 20747361 63637553 2e737365     Unicast Success.
   1d8d8:	000d2e2e 63696e55 20747361 6c696166     ....Unicast fail
   1d8e8:	0d2e2e2e 00000000 75706e49 68532074     ........Input Sh
   1d8f8:	2074726f 72646441 3a737365 00783020     ort Address: 0x.
   1d908:	616f7242 73616364 65542074 53207473     Broadcast Test S
   1d918:	20706f74 000d0a21 616f7242 73616364     top !...Broadcas
   1d928:	65542074 53207473 74726174 74697720     t Test Start wit
   1d938:	36322068 74794220 0a212065 0000000d     h 26 Byte !.....
   1d948:	63696e55 20747361 74736554 6f745320     Unicast Test Sto
   1d958:	0a212070 0000000d 63696e55 20747361     p !.....Unicast 
   1d968:	74736554 61745320 77207472 20687469     Test Start with 
   1d978:	42203632 20657479 000d0a21 52415355     26 Byte !...USAR
   1d988:	6f422054 65746172 706e4920 28207475     T Borate Input (
   1d998:	202c7865 34323d31 202c3030 36393d32     ex, 1=2400, 2=96
   1d9a8:	202c3030 34313d33 2c303034 313d3420     00, 3=14400, 4=1
   1d9b8:	30303239 3d35202c 30343833 36202c30     9200, 5=38400, 6
   1d9c8:	3637353d 202c3030 31313d37 30303235     =57600, 7=115200
   1d9d8:	000d0a29 52415355 6f422054 65746172     )...USART Borate
   1d9e8:	32203d20 20303034 20737062 74746573      = 2400 bps sett
   1d9f8:	20676e69 0a214b4f 0000000d 52415355     ing OK!.....USAR
   1da08:	6f422054 65746172 39203d20 20303036     T Borate = 9600 
   1da18:	20737062 74746573 20676e69 0a214b4f     bps setting OK!.
   1da28:	0000000d 52415355 6f422054 65746172     ....USART Borate
   1da38:	31203d20 30303434 73706220 74657320      = 14400 bps set
   1da48:	676e6974 214b4f20 00000d0a 52415355     ting OK!....USAR
   1da58:	6f422054 65746172 31203d20 30303239     T Borate = 19200
   1da68:	73706220 74657320 676e6974 214b4f20      bps setting OK!
   1da78:	00000d0a 52415355 6f422054 65746172     ....USART Borate
   1da88:	33203d20 30303438 73706220 74657320      = 38400 bps set
   1da98:	676e6974 214b4f20 00000d0a 52415355     ting OK!....USAR
   1daa8:	6f422054 65746172 35203d20 30303637     T Borate = 57600
   1dab8:	73706220 74657320 676e6974 214b4f20      bps setting OK!
   1dac8:	00000d0a 52415355 6f422054 65746172     ....USART Borate
   1dad8:	31203d20 30323531 70622030 65732073      = 115200 bps se
   1dae8:	6e697474 4b4f2067 000d0a21 52415355     tting OK!...USAR
   1daf8:	6f422054 65746172 74657320 676e6974     T Borate setting
   1db08:	69614620 000d0a6c 68430a0d 656e6e61      Fail.....Channe
   1db18:	6573206c 6e697474 2e2e2e67 72727543     l setting...Curr
   1db28:	20746e65 6e616843 2d206c65 00642520     ent Chanel - %d.
   1db38:	68430a0d 656e6e61 30203a6c 207e2031     ..Channel: 01 ~ 
   1db48:	28203233 37313920 484d312e 207e207a     32 ( 917.1MHz ~ 
   1db58:	2e333239 7a484d33 00002920 65530a0d     923.3MHz )....Se
   1db68:	68432074 656e6e61 202d206c 2d206425     t Channel - %d -
   1db78:	6e6f4420 0d0a0d65 0000000a 75430d0a      Done.........Cu
   1db88:	6e657272 41502074 3a44494e 25783020     rrent PANID: 0x%
   1db98:	2078342e 00000a0d 20202020 2077654e     .4x ....    New 
   1dba8:	494e4150 30203a44 00000078 41500d0a     PANID: 0x.....PA
   1dbb8:	2044494e 6e616843 2e646567 0d0a2e2e     NID Changed.....
   1dbc8:	00000000 7665440a 20656369 6f666e49     .....Device Info
   1dbd8:	74616d72 2e6e6f69 0d0a2e2e 00000000     rmation.........
   1dbe8:	72727543 20746e65 6e616843 3a6c656e     Current Channel:
   1dbf8:	20642520 00000a0d 6e616843 206c656e      %d ....Channel 
   1dc08:	3a50414d 25783020 2078382e 00000a0d     MAP: 0x%.8x ....
   1dc18:	494e4150 30203a44 342e2578 0a0d2078     PANID: 0x%.4x ..
   1dc28:	00000000 726f6853 64644174 30203a72     ....ShortAddr: 0
   1dc38:	342e2578 0a0d2078 00000000 2043414d     x%.4x ......MAC 
   1dc48:	72646441 3a737365 00783020 78322e25     Address: 0x.%.2x
   1dc58:	00000000 65530a0d 70532074 64616572     ......Set Spread
   1dc68:	46676e69 6f746361 202d2072 2d206425     ingFactor - %d -
   1dc78:	000a0d20 7465530d 74754f20 20747570      ....Set Output 
   1dc88:	65776f50 202d2072 2d206425 000a0d20     Power - %d - ...
   1dc98:	6f430d0a 63656e6e 6e6f6974 62615420     ..Connection Tab
   1dca8:	2e2e656c 000d0a2e 72452020 2e726f72     le......  Error.
   1dcb8:	7845202e 64656563 2e303120 0000002e     . Exceed 10.....
   1dcc8:	746e4520 0d0a7265 00000000 63696e55      Enter......Unic
   1dcd8:	20747361 63637553 2e737365 44202e2e     ast Success... D
   1dce8:	79616c65 2c64253d 00000020 61746144     elay=%d, ...Data
   1dcf8:	2c64253d 00000020 6f727245 64253d72     =%d, ...Error=%d
   1dd08:	00000a0d 63696e55 20747361 6c696166     ....Unicast fail
   1dd18:	2c2e2e2e 00000020 74736554 6f724220     ..., ...Test Bro
   1dd28:	61636461 2e2e7473 6f43202e 65746e75     adcast... Counte
   1dd38:	203a2072 0a0d6425 00000000 00012ee6     r : %d..........
   1dd48:	00012606 000126b0 000127c0 00012916     .&...&...'...)..
   1dd58:	000129d4 00012a28 00012ba2 00012caa     .)..(*...+...,..
   1dd68:	00012df8 00012efe 00012efe 00012efe     .-..............
   1dd78:	00012efe 00012efe 00012efe 00012efe     ................
   1dd88:	00011658 000116f8 00011dc2 00011e3c     X...........<...
   1dd98:	00011f36 00011f3e 00012efe 00012022     6...>......." ..
   1dda8:	00012efe 00012040 000120de 00012efe     ....@ ... ......
   1ddb8:	00012efe 000121de 00012efe 0001222a     .....!......*"..
   1ddc8:	0001232e 00012348 00012452 00012efe     .#..H#..R$......
   1ddd8:	000124ae 00012efe 000125dc 00012efe     .$.......%......
   1dde8:	00012efe 000125f6 00012efe 00012efe     .....%..........
   1ddf8:	00012efe 00012efe 00012efe 00012efe     ................
   1de08:	00011658 000116f8 00011dc2 00011e3c     X...........<...
   1de18:	00011f36 00011f3e 00012efe 00012022     6...>......." ..
   1de28:	0001202a 00012040 000120de 0001202a     * ..@ ... ..* ..
   1de38:	00012efe 000121de 00012efe 0001222a     .....!......*"..
   1de48:	0001232e 00012348 00012452 00012efe     .#..H#..R$......
   1de58:	000124ae 00012efe 000125dc 00012efe     .$.......%......
   1de68:	00012efe 000125f6 00012a9e 00012ac6     .....%...*...*..
   1de78:	00012ae6 00012b06 00012b26 00012b48     .*...+..&+..H+..
   1de88:	00012b6a 7473614c 73657220 63207465     j+..Last reset c
   1de98:	65737561 0000203a 74737953 52206d65     ause: ..System R
   1dea8:	74657365 71655220 74736575 0000000d     eset Request....
   1deb8:	63746157 676f6468 73655220 000d7465     Watchdog Reset..
   1dec8:	65747845 6c616e72 73655220 000d7465     External Reset..
   1ded8:	776f7242 754f206e 33332074 74654420     Brown Out 33 Det
   1dee8:	6f746365 65522072 0d746573 00000000     ector Reset.....
   1def8:	776f7242 754f206e 32312074 74654420     Brown Out 12 Det
   1df08:	6f746365 65522072 0d746573 00000000     ector Reset.....
   1df18:	65776f50 6e4f2d72 73655220 000d7465     Power-On Reset..
   1df28:	74737953 77206d65 206c6c69 74697773     System will swit
   1df38:	74206863 4c50206f 2064253a 00000a0d     ch to PL:%d ....
   1df48:	6f746f47 656c5320 4d207065 2165646f     Goto Sleep Mode!
   1df58:	00000d0a 7774656e 496b726f 2e6f666e     ....networkInfo.
   1df68:	6f686365 6b68635f 25203a20 0d0a2064     echo_chk : %d ..
   1df78:	00000000 656b6863 206f6863 6425203a     ....chkecho : %d
   1df88:	000d0a20 7774656e 496b726f 2e6f666e      ...networkInfo.
   1df98:	74617453 3a207375 20642520 00000d0a     Status : %d ....
   1dfa8:	61770d0a 6e5f7469 435f6d76 6b636568     ..wait_nvm_Check
   1dfb8:	74203d20 0d657572 00000000 7774654e      = true.....Netw
   1dfc8:	206b726f 61657243 2e646574 0a2e2e2e     ork Created.....
   1dfd8:	0000000d 7774654e 206b726f 72617453     ....Network Star
   1dfe8:	61462074 2e2e6c69 0d0a2e2e 00000000     t Fail..........
   1dff8:	6e696f4a 69614620 2e2e2e6c 000d0a2e     Join Fail.......
   1e008:	6e696f4a 63755320 73736563 2e2e2e2e     Join Success....
   1e018:	000d0a34 61770d0a 6e5f7469 435f6d76     4.....wait_nvm_C
   1e028:	6b636568 66203d20 65736c61 0000000d     heck = false....
   1e038:	00636325 62796877 70207a69 656a6f72     %cc.whybiz proje
   1e048:	62207463 74752079 2e636574 32303220     ct by uttec. 202
   1e058:	32312e33 2e30322e 3a303220 0d0a3030     3.12.20. 20:00..
   1e068:	00000000 2043414d 72646441 3a737365     ....MAC Address:
   1e078:	00783020 78322e25 00000000 00000d0a      0x.%.2x........
   1e088:	000152dc 000152ac 000152be 00015200     .R...R...R...R..
   1e098:	000152be 000152a2 000152be 00015200     .R...R...R...R..
   1e0a8:	000152ac 000152ac 000152a2 00015200     .R...R...R...R..
   1e0b8:	00015208 00015208 00015208 000152c4     .R...R...R...R..
   1e0c8:	000152ac 000152ac 00015280 00015364     .R...R...R..dS..
   1e0d8:	00015280 000152a2 00015280 00015364     .R...R...R..dS..
   1e0e8:	000152ac 000152ac 000152a2 00015364     .R...R...R..dS..
   1e0f8:	00015208 00015208 00015208 0001536e     .R...R...R..nS..
   1e108:	0001614c 0001612e 000160e8 00016006     La...a...`...`..
   1e118:	000160e8 00016120 000160e8 00016006     .`.. a...`...`..
   1e128:	0001612e 0001612e 00016120 00016006     .a...a.. a...`..
   1e138:	00015ffe 00015ffe 00015ffe 00016364     ._..._..._..dc..
   1e148:	000167ac 0001666c 0001666c 00016668     .g..lf..lf..hf..
   1e158:	00016784 00016784 00016776 00016668     .g...g..vg..hf..
   1e168:	00016784 00016776 00016784 00016668     .g..vg...g..hf..
   1e178:	0001678c 0001678c 0001678c 00016990     .g...g...g...i..

0001e188 <_global_impure_ptr>:
   1e188:	20000040 0000000a 000182fa 000183ce     @.. ............
   1e198:	000183ce 000182e6 000183ce 000183ce     ................
   1e1a8:	000183ce 000183ce 000183ce 000183ce     ................
   1e1b8:	000183a0 00017eb2 000183ce 00017ea8     .....~.......~..
   1e1c8:	00017ebc 000183ce 000182f0 0001807c     .~..........|...
   1e1d8:	0001807c 0001807c 0001807c 0001807c     |...|...|...|...
   1e1e8:	0001807c 0001807c 0001807c 0001807c     |...|...|...|...
   1e1f8:	000183ce 000183ce 000183ce 000183ce     ................
   1e208:	000183ce 000183ce 000183ce 000183ce     ................
   1e218:	000183ce 000183ce 000183b6 0001830a     ................
   1e228:	000183ce 0001830a 000183ce 000183ce     ................
   1e238:	000183ce 000183ce 00018270 000183ce     ........p.......
   1e248:	000183ce 0001827a 000183ce 000183ce     ....z...........
   1e258:	000183ce 000183ce 000183ce 000182a8     ................
   1e268:	000183ce 000183ce 000182d6 000183ce     ................
   1e278:	000183ce 000183ce 000183ce 000183ce     ................
   1e288:	000183ce 000183ce 000183ce 000183ce     ................
   1e298:	000183ce 000180bc 000180f2 0001830a     ................
   1e2a8:	0001830a 0001830a 0001819a 000180f2     ................
   1e2b8:	000183ce 000183ce 000181a4 000183ce     ................
   1e2c8:	000181b6 000183ca 000181e4 0001820e     ................
   1e2d8:	000183ce 00018218 000183ce 000183c6     ................
   1e2e8:	000183ce 000183ce 00017f0a 00464e49     ............INF.
   1e2f8:	00666e69 004e414e 006e616e 33323130     inf.NAN.nan.0123
   1e308:	37363534 42413938 46454443 00000000     456789ABCDEF....
   1e318:	33323130 37363534 62613938 66656463     0123456789abcdef
   1e328:	00000000 6c756e28 0000296c 00000030     ....(null)..0...

0001e338 <blanks.7238>:
   1e338:	20202020 20202020 20202020 20202020                     

0001e348 <zeroes.7239>:
   1e348:	30303030 30303030 30303030 30303030     0000000000000000
   1e358:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   1e368:	00000043 49534f50 00000058 0000002e     C...POSIX.......

0001e378 <__mprec_bigtens>:
   1e378:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   1e388:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   1e398:	7f73bf3c 75154fdd                       <.s..O.u

0001e3a0 <__mprec_tens>:
   1e3a0:	00000000 3ff00000 00000000 40240000     .......?......$@
   1e3b0:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   1e3c0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   1e3d0:	00000000 412e8480 00000000 416312d0     .......A......cA
   1e3e0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   1e3f0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   1e400:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   1e410:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   1e420:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   1e430:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   1e440:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   1e450:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   1e460:	79d99db4 44ea7843                       ...yCx.D

0001e468 <p05.6055>:
   1e468:	00000005 00000019 0000007d              ........}...

0001e474 <_ctype_>:
   1e474:	20202000 20202020 28282020 20282828     .         ((((( 
   1e484:	20202020 20202020 20202020 20202020                     
   1e494:	10108820 10101010 10101010 10101010      ...............
   1e4a4:	04040410 04040404 10040404 10101010     ................
   1e4b4:	41411010 41414141 01010101 01010101     ..AAAAAA........
   1e4c4:	01010101 01010101 01010101 10101010     ................
   1e4d4:	42421010 42424242 02020202 02020202     ..BBBBBB........
   1e4e4:	02020202 02020202 02020202 10101010     ................
   1e4f4:	00000020 00000000 00000000 00000000      ...............
	...

0001e578 <_init>:
   1e578:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1e57a:	46c0      	nop			; (mov r8, r8)
   1e57c:	bcf8      	pop	{r3, r4, r5, r6, r7}
   1e57e:	bc08      	pop	{r3}
   1e580:	469e      	mov	lr, r3
   1e582:	4770      	bx	lr

0001e584 <__init_array_start>:
   1e584:	00019511 	.word	0x00019511

0001e588 <__frame_dummy_init_array_entry>:
   1e588:	000000dd                                ....

0001e58c <_fini>:
   1e58c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1e58e:	46c0      	nop			; (mov r8, r8)
   1e590:	bcf8      	pop	{r3, r4, r5, r6, r7}
   1e592:	bc08      	pop	{r3}
   1e594:	469e      	mov	lr, r3
   1e596:	4770      	bx	lr

0001e598 <__fini_array_start>:
   1e598:	000000b5 	.word	0x000000b5
